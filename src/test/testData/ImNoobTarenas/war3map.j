//W3x2lni Data: 2023-11-21 00:19:56.769
globals
integer array w
integer array u
integer array r
integer array s
integer array t
integer array i
integer array S
unit array c
unit array o
unit array O
unit array l
unit array b
boolean array y
boolean array p
boolean array e
unit array q
unit array a
unit array n
unit array d
boolean array f
boolean array R
boolean array T
boolean array Y
unit array G
unit array g
unit array h
unit array F
unit array k
integer array j
integer array x
integer array v
integer array m
integer array Q
integer array W
integer array E
integer array Z
integer array U
integer array I
integer array P
integer array A
integer array D
integer array H
integer array J
integer array K
integer array L
integer array X
integer array C
integer array V
integer array B
integer array N
integer array M
integer array ww
integer array uw
integer array rw
integer array sw
integer array tw
integer array iw
integer array Sw
integer array cw
integer array ow
integer array Ow
integer array lw
integer array bw
integer array yw
integer array pw
integer array ew
integer array qw
integer array aw
integer array nw
integer array dw
integer array fw
integer array Rw
integer array Tw
integer array Yw
integer array Gw
integer array gw
unit array hw
boolean array Fw
boolean array kw
boolean jw=false
boolean xw=false
boolean vw=false
rect array mw
real array Qw
real array Ww
boolean array Ew
boolean array Zw
boolean array Uw
boolean array Iw
boolean array Pw
string array Aw
string array Dw
string array Hw
integer array Jw
integer array Kw
integer array Lw
integer array Xw
integer array Cw
integer array Vw
integer array Bw
texttag array Nw
texttag array Mw
texttag array wu
boolean array uu
boolean array ru
boolean array su
boolean array tu
real array iu
real array Su
real array cu
real array ou
real array Ou
real array lu
real array bu
real array yu
real array pu
unit eu=null
hashtable qu=null
unit au=null
player nu=null
player du=null
player fu=null
player Ru=null
player Tu=null
player Yu=null
player Gu=null
player gu=null
boolean hu=false
boolean Fu=false
boolean ku=false
boolean ju=false
boolean xu=false
boolean vu=false
boolean mu=false
boolean Qu=false
boolean Wu=false
boolean Eu=false
unit Zu=null
unit Uu=null
unit Iu=null
boolean Pu=false
boolean Au=false
boolean Du=false
boolean Hu=false
boolean Ju=false
boolean Ku=false
boolean Lu=false
boolean Xu=false
integer Cu=0
integer Vu=0
integer Bu=0
integer Nu=0
texttag Mu=null
integer array wr
boolean ur=false
boolean rr=false
dialog sr=null
timerdialog tr=null
timer ir=null
timer Sr=null
integer cr=0
integer lr=0
integer br=0
texttag yr=null
integer pr=0
string er=null
player qr=null
player ar=null
gamecache nr=null
trigger dr=null
integer fr=0
button array Rr
multiboard array Tr
multiboard Yr=null
integer Gr=0
integer gr=0
integer array hr
integer array Fr
integer array kr
integer array jr
integer array xr
integer array vr
integer array mr
integer array Qr
integer array Wr
integer array Er
integer array Zr
integer array Ur
integer array Ir
integer array Pr
integer array Ar
integer array Dr
integer array Hr
integer array Jr
integer array Kr
integer array Lr
integer array Xr
integer array Cr
integer array Vr
integer array Br
integer array Nr
integer array Mr
integer array ws
integer array us
integer array rs
integer array ss
integer array ts
integer array is
integer array Ss
integer array cs
integer array os
integer array Os
integer array ls
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
rect fs=null
rect Rs=null
rect Ts=null
rect Ys=null
rect Gs=null
rect gs=null
rect hs=null
rect Fs=null
rect ks=null
rect js=null
rect xs=null
rect vs=null
rect ms=null
trigger Qs=null
trigger Ws=null
sound Es=null
sound Zs=null
sound Us=null
sound Is=null
sound Ps=null
sound As=null
sound Ds=null
sound Hs=null
sound Js=null
sound Ks=null
sound Ls=null
sound Xs=null
sound Cs=null
sound Vs=null
sound Bs=null
sound Ns=null
sound Ms=null
sound wt=null
sound ut=null
sound rt=null
sound st=null
sound tt=null
sound St=null
sound ct=null
sound ot=null
sound Ot=null
sound lt=null
sound bt=null
sound yt=null
sound pt=null
sound et=null
sound qt=null
sound at=null
sound nt=null
sound dt=null
sound ft=null
sound Rt=null
sound Tt=null
sound Yt=null
sound Gt=null
sound gt=null
sound ht=null
sound Ft=null
sound kt=null
sound jt=null
sound xt=null
sound vt=null
sound mt=null
sound Qt=null
sound Wt=null
sound Et=null
sound Zt=null
sound Ut=null
sound It=null
sound Pt=null
sound At=null
sound Dt=null
sound Ht=null
sound Jt=null
sound Kt=null
sound Lt=null
sound Xt=null
sound Ct=null
sound Vt=null
sound Bt=null
sound Nt=null
sound Mt=null
sound wi=null
sound ui=null
sound ri=null
sound si=null
sound ti=null
sound ii=null
sound Si=null
sound ci=null
sound oi=null
sound Oi=null
sound li=null
sound bi=null
sound yi=null
sound pi=null
sound ei=null
sound qi=null
sound ai=null
sound ni=null
sound di=null
sound fi=null
sound Ri=null
sound Ti=null
sound Yi=null
sound Gi=null
sound gi=null
sound hi=null
sound Fi=null
sound ki=null
sound ji=null
sound xi=null
sound vi=null
sound mi=null
sound Qi=null
sound Wi=null
sound Ei=null
sound Zi=null
sound Ui=null
sound Ii=null
sound Pi=null
sound Ai=null
sound Di=null
sound Hi=null
sound Ji=null
sound Ki=null
sound Li=null
sound Xi=null
sound Ci=null
sound Vi=null
sound Bi=null
sound Ni=null
sound Mi=null
sound wS=null
sound uS=null
sound rS=null
sound sS=null
sound tS=null
sound iS=null
sound SS=null
sound cS=null
sound oS=null
sound OS=null
sound lS=null
sound bS=null
sound yS=null
sound pS=null
sound eS=null
sound qS=null
sound aS=null
sound nS=null
sound dS=null
sound fS=null
sound RS=null
sound TS=null
sound YS=null
sound GS=null
sound gS=null
sound hS=null
sound FS=null
sound kS=null
sound jS=null
sound xS=null
sound vS=null
sound mS=null
sound QS=null
sound WS=null
sound ES=null
sound ZS=null
sound US=null
sound IS=null
sound PS=null
sound AS=null
sound DS=null
sound HS=null
sound JS=null
sound KS=null
sound LS=null
sound XS=null
sound CS=null
rect VS=null
rect BS=null
rect NS=null
rect MS=null
rect wc=null
rect uc=null
rect rc=null
rect sc=null
rect tc=null
rect ic=null
rect Sc=null
rect cc=null
rect oc=null
rect Oc=null
rect lc=null
rect bc=null
rect yc=null
rect pc=null
rect ec=null
rect qc=null
rect ac=null
rect nc=null
rect dc=null
rect fc=null
rect Rc=null
rect Tc=null
rect Yc=null
rect Gc=null
rect gc=null
rect hc=null
rect Fc=null
rect kc=null
rect jc=null
rect xc=null
rect vc=null
rect mc=null
rect Qc=null
rect Wc=null
rect Ec=null
rect Zc=null
rect Uc=null
rect Ic=null
rect Pc=null
rect Ac=null
rect Dc=null
rect Hc=null
rect Jc=null
rect Kc=null
rect Lc=null
rect Xc=null
rect Cc=null
rect Vc=null
rect Bc=null
rect Nc=null
rect Mc=null
rect wo=null
rect uo=null
rect ro=null
rect so=null
rect io=null
rect So=null
rect co=null
rect oo=null
rect Oo=null
rect lo=null
rect bo=null
rect yo=null
rect po=null
rect eo=null
rect qo=null
rect ao=null
rect no=null
rect do=null
rect fo=null
rect Ro=null
rect To=null
rect Yo=null
trigger Go=null
trigger go=null
trigger ho=null
trigger Fo=null
trigger ko=null
trigger jo=null
trigger xo=null
trigger vo=null
trigger mo=null
trigger Qo=null
trigger Wo=null
trigger Eo=null
trigger Zo=null
trigger Uo=null
trigger Io=null
trigger Po=null
trigger Ao=null
trigger Do=null
trigger Ho=null
trigger Jo=null
trigger Ko=null
group Lo=null
location array Xo
group array Co
trigger Vo=null
trigger Bo=null
trigger No=null
group Mo=null
group wO=null
group uO=null
group rO=null
group sO=null
group tO=null
trigger iO=null
timer SO=null
timer cO=null
timer oO=null
integer OO=0
integer lO=0
integer bO=0
unit yO=null
unit pO=null
player eO=null
string qO=null
boolean aO=false
boolean nO=false
integer dO=0
integer fO=0
integer RO=0
integer TO=0
integer YO=0
integer GO=0
sound gO=null
trigger hO=null
trigger FO=null
boolean array kO
sound jO=null
trigger xO=null
trigger vO=null
boolean mO=false
unit QO=null
trigger WO=null
trigger EO=null
unit ZO=null
boolean array UO
integer array IO
trigger PO=null
trigger AO=null
trigger DO=null
trigger HO=null
trigger JO=null
trigger KO=null
trigger LO=null
unit XO=null
boolean CO=false
timer VO=null
integer BO=0
timer NO=null
integer MO=0
unit wl=null
unit ul=null
timer rl=null
integer sl=0
texttag tl=null
integer il=0
trigger Sl=null
integer cl=0
unit ol=null
integer Ol=0
trigger ll=null
trigger bl=null
player yl=null
trigger pl=null
trigger el=null
trigger ql=null
integer al=0
integer nl=0
integer dl=0
integer fl=0
trigger Rl=null
trigger Tl=null
trigger Yl=null
trigger Gl=null
integer gl=0
trigger hl=null
trigger Fl=null
trigger kl=null
trigger jl=null
player xl=null
sound vl=null
sound ml=null
sound Ql=null
sound Wl=null
sound El=null
sound Zl=null
sound Ul=null
sound Il=null
trigger Pl=null
trigger Al=null
trigger Dl=null
texttag Hl=null
integer Jl=0
timer Kl=null
trigger Ll=null
unit Xl=null
integer Cl=0
trigger Vl=null
real Bl=0.
real Nl=0.
real Ml=0.
real wb=0.
real ub=0.
unit rb=null
player sb=null
integer array tb
real array ib
real array Sb
real array cb
real array ob
real array Ob
real array lb
real array bb
real array yb
unit pb=null
integer eb=0
trigger qb=null
integer ab=0
trigger nb=null
trigger db=null
unit fb=null
group Rb=null
trigger Tb=null
trigger Yb=null
trigger Gb=null
sound gb=null
trigger hb=null
group Fb=null
integer array kb
integer jb=0
integer xb=0
integer vb=0
filterfunc mb=null
integer Qb=0
integer Wb=0
integer Eb=0
integer Zb=0
integer Ub=0
integer Ib=0
integer Pb=0
integer Ab=0
integer array Db
integer array Hb
integer array Jb
string array Kb
integer Lb=0
player Xb=null
string Cb=null
trigger Vb=null
trigger Bb=null
multiboarditem Nb=null
integer array Mb
string array wy
trigger uy=null
trigger ry=null
trigger sy=null
trigger ty=null
unit iy=null
integer Sy=0
timer cy=null
trigger oy=null
boolean Oy=false
integer ly=0
trigger by=null
trigger yy=null
integer py=0
integer ey=0
integer qy=0
player ay=null
player ny=null
trigger dy=null
integer array fy
integer Ry=0
trigger Ty=null
trigger Yy=null
trigger Gy=null
trigger gy=null
trigger hy=null
trigger Fy=null
trigger ky=null
trigger jy=null
trigger xy=null
trigger vy=null
trigger my=null
timer Qy=null
player Wy=null
boolean Ey=false
boolean Zy=false
trigger Uy=null
trigger Iy=null
player Py=null
trigger Ay=null
trigger Dy=null
trigger Hy=null
trigger Jy=null
trigger Ky=null
unit Ly=null
trigger Xy=null
boolean Cy=false
boolean Vy=false
boolean By=false
boolean Ny=false
trigger My=null
trigger wp=null
trigger up=null
trigger rp=null
trigger sp=null
trigger tp=null
trigger ip=null
trigger Sp=null
boolean cp=false
unit op=null
unit Op=null
integer lp=0
string bp=null
trigger yp=null
trigger pp=null
real ep=0.
integer array qp
trigger ap=null
trigger np=null
trigger dp=null
trigger fp=null
trigger Rp=null
trigger Tp=null
hashtable Yp=null
integer Gp=0
boolean gp=false
boolean hp=false
boolean Fp=false
boolean kp=false
boolean jp=false
boolean xp=false
boolean vp=false
boolean mp=false
boolean Qp=false
boolean Wp=false
boolean Ep=false
trigger Zp=null
trigger Up=null
trigger Ip=null
unit Pp=null
unit Ap=null
unit Dp=null
timer Hp=null
timer Jp=null
timer Kp=null
timer Lp=null
texttag Xp=null
trigger Cp=null
trigger Vp=null
trigger Bp=null
boolean array Np
boolean array Mp
boolean array we
boolean array ue
integer re=0
integer se=0
integer te=0
integer ie=0
integer Se=0
integer ce=0
trigger oe=null
trigger Oe=null
trigger le=null
trigger be=null
trigger ye=null
trigger pe=null
trigger ee=null
filterfunc qe=null
trigger ae=null
multiboarditem ne=null
multiboarditem de=null
boolean fe=false
integer array Re
string array Te
integer Ye=0
integer Ge=0
integer ge=0
integer he=0
integer Fe=0
integer ke=0
trigger je=null
sound xe=null
sound ve=null
sound me=null
sound Qe=null
sound We=null
sound Ee=null
unit Ze=null
trigger Ue=null
integer Ie=0
player Pe=null
integer Ae=0
trigger De=null
trigger He=null
trigger Je=null
trigger Ke=null
trigger Le=null
trigger Xe=null
trigger Ce=null
trigger Ve=null
player Be=null
integer Ne=0
trigger Me=null
player wq=null
trigger uq=null
trigger rq=null
timer sq=null
real tq=0.
trigger iq=null
trigger Sq=null
trigger cq=null
trigger oq=null
trigger Oq=null
trigger lq=null
group bq=null
integer yq=0
integer pq=0
unit eq=null
group qq=null
trigger aq=null
hashtable nq=null
hashtable dq=null
boolean fq=false
boolean Rq=false
trigger Tq=null
trigger Yq=null
sound Gq=null
sound gq=null
sound hq=null
sound Fq=null
sound kq=null
sound jq=null
sound xq=null
sound vq=null
sound mq=null
sound Qq=null
sound Wq=null
sound Eq=null
sound Zq=null
sound Uq=null
sound Iq=null
sound Pq=null
sound Aq=null
sound Dq=null
sound Hq=null
sound Jq=null
sound Kq=null
sound Lq=null
sound Xq=null
sound Cq=null
sound Vq=null
sound Bq=null
sound Nq=null
sound Mq=null
sound wa=null
sound ua=null
sound ra=null
sound sa=null
sound ta=null
sound ia=null
sound Sa=null
sound ca=null
sound oa=null
sound Oa=null
sound la=null
sound ba=null
sound ya=null
sound pa=null
sound ea=null
sound qa=null
sound aa=null
sound na=null
sound da=null
sound fa=null
sound Ra=null
sound Ta=null
sound Ya=null
sound Ga=null
sound ga=null
sound ha=null
sound Fa=null
sound ka=null
trigger ja=null
integer xa=0
effect va=null
trigger ma=null
player Qa=null
trigger Wa=null
sound Ea=null
integer Za=0
trigger Ua=null
trigger Ia=null
trigger Pa=null
trigger Aa=null
trigger Da=null
integer Ha=0
unit Ja=null
trigger Ka=null
trigger La=null
trigger Xa=null
trigger Ca=null
trigger Va=null
trigger Ba=null
trigger Na=null
trigger Ma=null
trigger wn=null
trigger un=null
trigger rn=null
trigger sn=null
integer tn=0
trigger Sn=null
trigger cn=null
player on=null
trigger On=null
trigger ln=null
trigger bn=null
trigger yn=null
trigger pn=null
trigger en=null
trigger qn=null
trigger an=null
trigger nn=null
trigger dn=null
trigger fn=null
trigger Rn=null
trigger Tn=null
trigger Yn=null
trigger Gn=null
trigger gn=null
integer hn=0
integer Fn=0
trigger kn=null
trigger jn=null
unit xn=null
integer vn=0
sound mn=null
integer Qn=0
integer Wn=0
integer array En
integer array Zn
trigger Un=null
trigger In=null
trigger Pn=null
trigger An=null
trigger Dn=null
effect Hn=null
sound Jn=null
player Kn=null
trigger Ln=null
timer Xn=null
player Cn=null
boolean Vn=false
trigger Bn=null
integer array Nn
trigger Mn=null
trigger wd=null
trigger ud=null
player rd=null
integer sd=0
trigger td=null
integer id=0
unit Sd=null
trigger cd=null
rect od=null
player Od=null
trigger ld=null
trigger bd=null
trigger yd=null
multiboarditem pd=null
trigger ed=null
trigger qd=null
real array ad
real array nd
real array dd
real array fd
real array Rd
real array Td
real array Yd
real array Gd
player gd=null
trigger hd=null
trigger Fd=null
real array kd
real array jd
real array xd
real array vd
real array md
real array Qd
real array Wd
real array Ed
trigger Zd=null
player Ud=null
trigger Id=null
sound Pd=null
rect Ad=null
rect Dd=null
real Hd=0.
real Jd=0.
real Kd=0.
real Ld=0.
real Xd=0.
real Cd=0.
real Vd=0.
real Bd=0.
trigger Nd=null
trigger Md=null
trigger wf=null
boolean array uf
sound rf=null
integer sf=0
trigger tf=null
trigger Sf=null
trigger cf=null
trigger of=null
trigger Of=null
trigger lf=null
trigger bf=null
trigger yf=null
trigger pf=null
trigger ef=null
trigger qf=null
trigger af=null
trigger nf=null
trigger df=null
trigger ff=null
trigger Rf=null
trigger Tf=null
trigger Yf=null
trigger Gf=null
trigger gf=null
trigger hf=null
trigger Ff=null
trigger kf=null
trigger jf=null
trigger xf=null
trigger vf=null
trigger mf=null
trigger Qf=null
trigger Wf=null
trigger Ef=null
trigger Zf=null
trigger Uf=null
trigger If=null
trigger Pf=null
trigger Af=null
trigger Df=null
trigger Hf=null
trigger Jf=null
trigger Kf=null
trigger Lf=null
trigger Xf=null
trigger Cf=null
trigger Vf=null
trigger Bf=null
trigger Nf=null
trigger Mf=null
trigger wR=null
trigger uR=null
trigger rR=null
trigger sR=null
trigger tR=null
trigger iR=null
trigger SR=null
trigger cR=null
trigger oR=null
trigger OR=null
trigger lR=null
trigger bR=null
trigger yR=null
trigger pR=null
trigger eR=null
trigger qR=null
trigger aR=null
trigger nR=null
trigger dR=null
integer fR=0
integer RR=0
integer TR=0
integer YR=0
integer GR=0
integer gR=0
texttag hR=null
timer FR=null
trigger kR=null
trigger jR=null
trigger xR=null
trigger vR=null
unit mR=null
player QR=null
trigger WR=null
group ER=null
trigger ZR=null
trigger UR=null
trigger IR=null
trigger PR=null
trigger AR=null
trigger DR=null
trigger HR=null
trigger JR=null
trigger KR=null
trigger LR=null
trigger XR=null
trigger CR=null
player VR=null
integer BR=0
unit NR=null
timer MR=null
trigger wT=null
trigger uT=null
texttag rT=null
timer sT=null
integer tT=0
real array iT
real array ST
trigger cT=null
trigger oT=null
integer array OT
trigger lT=null
trigger bT=null
trigger yT=null
trigger pT=null
trigger eT=null
trigger qT=null
trigger aT=null
trigger nT=null
trigger dT=null
trigger fT=null
trigger RT=null
trigger TT=null
trigger YT=null
trigger GT=null
trigger gT=null
trigger hT=null
trigger FT=null
texttag kT=null
texttag jT=null
timer xT=null
trigger vT=null
trigger mT=null
trigger QT=null
trigger WT=null
integer ET=0
integer ZT=0
integer UT=0
integer IT=0
boolean PT=false
boolean AT=false
boolean DT=false
boolean HT=false
boolean JT=false
unit KT=null
unit LT=null
player XT=null
player CT=null
boolean array VT
boolean array BT
boolean array NT
boolean array MT
boolean array wY
trigger uY=null
trigger rY=null
trigger sY=null
trigger tY=null
trigger iY=null
trigger SY=null
trigger cY=null
trigger oY=null
trigger OY=null
sound lY=null
trigger bY=null
trigger yY=null
trigger pY=null
trigger eY=null
sound qY=null
trigger aY=null
trigger nY=null
trigger dY=null
trigger fY=null
trigger RY=null
texttag TY=null
texttag YY=null
trigger GY=null
integer gY=0
integer hY=0
integer FY=0
texttag array kY
texttag array jY
texttag array xY
integer vY=0
integer array mY
integer array QY
integer WY=0
integer EY=0
trigger ZY=null
player array UY
player IY=null
playercolor PY=null
playercolor AY=null
playercolor DY=null
playercolor HY=null
playercolor array JY
trigger KY=null
trigger LY=null
trigger XY=null
group CY=null
unit VY=null
trigger BY=null
trigger NY=null
unit MY=null
player wG=null
trigger uG=null
trigger array rG
integer sG=0
player tG=null
player iG=null
integer SG=0
integer cG=0
unit oG=null
texttag OG=null
timer lG=null
trigger bG=null
integer yG=0
trigger pG=null
trigger eG=null
boolean array qG
trigger aG=null
boolean array nG
trigger dG=null
trigger fG=null
trigger RG=null
boolean array TG
integer YG=0
trigger GG=null
trigger gG=null
player hG=null
trigger FG=null
trigger kG=null
trigger jG=null
trigger xG=null
player vG=null
integer mG=0
trigger QG=null
trigger WG=null
integer array EG
integer array ZG
integer array UG
integer array IG
trigger PG=null
trigger AG=null
trigger DG=null
trigger HG=null
trigger JG=null
trigger KG=null
trigger LG=null
trigger XG=null
integer CG=0
unit VG=null
trigger BG=null
trigger NG=null
real MG=0.
real wg=0.
real ug=0.
trigger rg=null
group sg=null
trigger tg=null
trigger ig=null
hashtable Sg=null
sound cg=null
sound og=null
integer Og=0
unit lg=null
player bg=null
trigger yg=null
trigger pg=null
trigger eg=null
trigger qg=null
player ag=null
trigger ng=null
trigger dg=null
unit fg=null
unit Rg=null
group Tg=null
boolean Yg=false
integer Gg=0
trigger gg=null
player hg=null
timer Fg=null
boolean kg=false
trigger jg=null
sound xg=null
sound vg=null
integer mg=0
timer Qg=null
integer Wg=0
integer Eg=0
integer Zg=0
integer Ug=0
trigger Ig=null
rect array Pg
integer array Ag
integer array Dg
player array Hg
timer array Jg
integer Kg=0
integer Lg=0
trigger Xg=null
integer Cg=0
integer Vg=0
trigger Bg=null
string Ng=null
boolean Mg=false
boolean wh=false
boolean uh=false
boolean rh=false
integer sh=0
trigger th=null
integer ih=0
integer Sh=0
trigger ch=null
player oh=null
trigger Oh=null
trigger lh=null
real bh=0.
real yh=0.
trigger ph=null
player eh=null
trigger qh=null
trigger ah=null
trigger nh=null
trigger dh=null
sound fh=null
unit Rh=null
integer Th=0
timer Yh=null
texttag Gh=null
trigger gh=null
texttag hh=null
integer Fh=0
integer kh=0
trigger jh=null
boolean array xh
integer vh=0
sound mh=null
sound Qh=null
trigger Wh=null
unit Eh=null
trigger Zh=null
trigger Uh=null
trigger Ih=null
trigger Ph=null
texttag Ah=null
trigger Dh=null
sound Hh=null
trigger Jh=null
trigger Kh=null
integer Lh=0
trigger Xh=null
sound Ch=null
trigger Vh=null
trigger Bh=null
trigger Nh=null
trigger Mh=null
sound wF=null
integer uF=0
unit rF=null
boolean sF=false
boolean tF=false
timer iF=null
player SF=null
real cF=0.
real oF=0.
hashtable OF=null
hashtable lF=null
hashtable bF=null
hashtable yF=null
integer array pF
integer eF=0
integer qF=0
integer array aF
integer array nF
integer dF=0
integer fF=0
integer array RF
integer array TF
integer YF=0
integer GF=0
integer array gF
integer array hF
integer FF=0
integer kF=0
integer array jF
integer array xF
integer vF=0
integer mF=0
integer array QF
integer array WF
integer EF=0
integer ZF=0
integer array UF
integer IF=0
integer PF=0
integer array AF
integer array DF
integer HF=0
integer JF=0
integer array KF
integer array LF
integer array XF
integer CF=0
integer VF=0
integer array BF
integer NF=0
integer MF=0
integer array wk
integer array uk
integer rk=0
integer sk=0
integer array tk
integer array ik
integer Sk=0
integer ck=0
integer array ok
integer array Ok
integer lk=0
integer bk=0
integer pk=0
integer ek=0
unit array qk
unit array ak
unit array nk
unit array dk
unit array fk
unit array Rk
unit array Tk
unit array Yk
integer array Gk
integer array gk
integer array hk
integer array Fk
integer array kk
integer array jk
unit array xk
real array vk
real array mk
unit array Qk
player array Wk
real array Ek
real array Zk
unit array Uk
player array Ik
real array Pk
real array Ak
unit array Dk
player array Hk
real array Jk
real array Kk
unit array Lk
real array Xk
unit array Ck
unit array Vk
unit array Bk
unit array Nk
integer array Mk
unit array wj
unit array uj
trigger array rj
unit array sj
unit array tj
effect array ij
unit array Sj
effect array cj
integer array oj
integer array Oj
integer array lj
integer array bj
integer array yj
integer array pj
integer array ej
integer array qj
timer array aj
timer array nj
trigger array dj
item array fj
unit array Rj
unit array Tj
unit array Yj
unit array Gj
unit array gj
unit array hj
integer array Fj
unit array kj
unit array jj
unit array xj
unit array vj
integer array mj
player array Qj
real array Wj
integer array Ej
real array Zj
real array Uj
player array Ij
unit array Pj
integer array Aj
integer array Dj
integer array Hj
integer array Jj
integer array Kj
unit array Lj
effect array Xj
unit array Cj
unit array Vj
unit array Bj
unit array Nj
filterfunc array Mj
real array wx
real array ux
integer array rx
integer array sx
integer array tx
integer array ix
unit array Sx
unit array cx
unit array ox
unit array Ox
integer array lx
unit array bx
integer array yx
unit array px
unit array ex
unit array qx
player array ax
real array nx
real array dx
unit array fx
integer array Rx
real array Tx
real array Yx
player array Gx
real array gx
real array hx
unit array Fx
integer array kx
real array jx
real array xx
trigger array vx
integer array mx
integer array Qx
integer array Wx
integer array Ex
integer array Zx
unit array Ux
unit array Ix
integer array Px
integer array Ax
integer array Dx
unit array Hx
unit array Jx
unit array Kx
unit array Lx
unit array Xx
unit array Cx
trigger array Vx
trigger array Bx
effect array Nx
unit array Mx
trigger array wv
unit array uv
unit array rv
real array sv
real array tv
unit array iv
unit array Sv
unit array cv
player array ov
real array Ov
real array lv
unit array bv
integer array yv
real array pv
real array ev
player array qv
real array av
real array nv
unit array dv
integer array fv
real array Rv
real array Tv
unit array Yv
unit array Gv
integer array gv
trigger array hv
unit array Fv
trigger array kv
integer array jv
unit array xv
unit array vv
player array mv
unit array Qv
player array Wv
unit array Ev
player array Zv
player array Uv
player array Iv
effect array Pv
unit array Av
integer array Dv
integer array Hv
integer array Jv
integer array Kv
integer array Lv
integer array Xv
integer array Cv
integer array Vv
integer array Bv
real array Nv
real array Mv
group array wm
filterfunc array um
integer array rm
unit array sm
unit array tm
unit array im
real array Sm
real array cm
player array om
real array Om
real array lm
unit array bm
integer array ym
real array pm
real array em
player array qm
real array am
real array nm
unit array dm
integer array fm
real array Rm
real array Tm
unit array Ym
unit array Gm
effect array gm
unit array hm
trigger array Fm
unit array km
unit array jm
unit array xm
trigger array vm
trigger array mm
trigger array Qm
trigger array Wm
trigger array Em
trigger array Zm
trigger array Um
trigger array Im
integer array Pm
integer array Am
integer array Dm
unit array Hm
unit array Jm
unit array Km
unit array Lm
unit array Xm
integer array Cm
real array Vm
real array Bm
location array Nm
location array Mm
unit array wQ
trigger array uQ
trigger array rQ
unit array sQ
trigger array tQ
unit array iQ
unit array SQ
unit array cQ
integer array oQ
unit array OQ
unit array lQ
unit array bQ
unit array yQ
unit array pQ
unit array eQ
integer array qQ
unit array aQ
unit array nQ
integer array dQ
unit array fQ
unit array RQ
integer array TQ
unit array YQ
unit array GQ
integer array gQ
unit array hQ
unit array FQ
integer array kQ
unit array jQ
unit array xQ
unit array vQ
unit array mQ
unit array QQ
location array WQ
unit array EQ
effect array ZQ
unit array UQ
player array IQ
integer array PQ
unit array AQ
unit array DQ
unit array HQ
unit array JQ
unit array KQ
unit array LQ
unit array XQ
unit array CQ
unit array VQ
unit array BQ
unit array NQ
unit array MQ
unit array wW
unit array uW
unit array rW
unit array sW
unit array tW
integer array iW
group array SW
filterfunc array cW
unit array oW
integer array OW
group array lW
filterfunc array bW
trigger array yW
unit array pW
unit array eW
integer qW=0
string array aW
integer nW=0
integer dW=0
integer fW=0
integer RW=0
string TW=null
integer YW=0
string GW=null
unit array gW
unit array hW
unit array FW
unit array kW
unit array jW
unit array xW
integer array vW
integer array mW
integer array QW
integer array WW
integer array EW
integer array ZW
integer array UW
integer array IW
integer array PW
integer array AW
integer array DW
integer array HW
integer array JW
integer array KW
integer array LW
integer array XW
integer array CW
integer array VW
code BW=null
code NW=null
code MW=null
code wE=null
code uE=null
code rE=null
code sE=null
code tE=null
code iE=null
code SE=null
code cE=null
code oE=null
code OE=null
code lE=null
code bE=null
code yE=null
code pE=null
code eE=null
code qE=null
code aE=null
code nE=null
code dE=null
code fE=null
code RE=null
code TE=null
code YE=null
code GE=null
code gE=null
code hE=null
code FE=null
code kE=null
code jE=null
code xE=null
code vE=null
code mE=null
code QE=null
code WE=null
code EE=null
code ZE=null
code UE=null
code IE=null
code PE=null
code AE=null
code DE=null
code HE=null
code JE=null
code KE=null
code LE=null
code XE=null
code CE=null
code VE=null
code BE=null
code NE=null
code ME=null
code wZ=null
code uZ=null
code rZ=null
code sZ=null
code tZ=null
code iZ=null
code SZ=null
code cZ=null
code oZ=null
code OZ=null
code lZ=null
code bZ=null
code yZ=null
code pZ=null
code eZ=null
code qZ=null
code aZ=null
code nZ=null
code dZ=null
code fZ=null
code RZ=null
code TZ=null
code YZ=null
code GZ=null
code gZ=null
code hZ=null
code FZ=null
code kZ=null
code jZ=null
code xZ=null
code vZ=null
code mZ=null
code QZ=null
code WZ=null
code EZ=null
code ZZ=null
code UZ=null
code IZ=null
code PZ=null
code AZ=null
code DZ=null
code HZ=null
code JZ=null
code KZ=null
code LZ=null
code XZ=null
code CZ=null
code VZ=null
code BZ=null
code NZ=null
code MZ=null
code wU=null
code uU=null
code rU=null
code sU=null
code tU=null
code iU=null
code SU=null
code cU=null
code oU=null
code OU=null
code lU=null
code bU=null
code yU=null
code pU=null
code eU=null
code qU=null
code aU=null
code nU=null
code dU=null
code fU=null
code RU=null
code TU=null
code YU=null
code GU=null
code gU=null
code hU=null
code FU=null
code kU=null
code jU=null
code xU=null
code vU=null
code mU=null
code QU=null
code WU=null
code EU=null
code ZU=null
code UU=null
code IU=null
code PU=null
code AU=null
code DU=null
code HU=null
code JU=null
code KU=null
code LU=null
code XU=null
code CU=null
code VU=null
code BU=null
code NU=null
code MU=null
code wI=null
code uI=null
code rI=null
code sI=null
code tI=null
code iI=null
code SI=null
code cI=null
code oI=null
code OI=null
code lI=null
code bI=null
code yI=null
code pI=null
code eI=null
code qI=null
code aI=null
code nI=null
code dI=null
code fI=null
code RI=null
code TI=null
code YI=null
code GI=null
code gI=null
code hI=null
code FI=null
code kI=null
code jI=null
code xI=null
code vI=null
code mI=null
code QI=null
code WI=null
code EI=null
code ZI=null
code UI=null
code II=null
code PI=null
code AI=null
code DI=null
code HI=null
code JI=null
code KI=null
code LI=null
code XI=null
code CI=null
code VI=null
code BI=null
code NI=null
code MI=null
code wP=null
code uP=null
code rP=null
code sP=null
code tP=null
code iP=null
code SP=null
code cP=null
code oP=null
code OP=null
code lP=null
code bP=null
code yP=null
code pP=null
code eP=null
code qP=null
code aP=null
code nP=null
code dP=null
code fP=null
code RP=null
code TP=null
code YP=null
code GP=null
code gP=null
code hP=null
code FP=null
code kP=null
code jP=null
code xP=null
code vP=null
code mP=null
code QP=null
code WP=null
code EP=null
code ZP=null
code UP=null
code IP=null
code PP=null
code AP=null
code DP=null
code HP=null
code JP=null
code KP=null
code LP=null
code XP=null
code CP=null
code VP=null
code BP=null
code NP=null
code MP=null
code wA=null
code uA=null
code rA=null
code sA=null
code tA=null
code iA=null
code SA=null
code cA=null
code oA=null
code OA=null
code lA=null
code bA=null
code yA=null
code pA=null
code eA=null
code qA=null
code aA=null
code nA=null
code dA=null
code fA=null
code RA=null
code TA=null
code YA=null
code GA=null
code gA=null
code hA=null
code FA=null
code kA=null
code jA=null
code xA=null
code vA=null
code mA=null
code QA=null
code WA=null
code EA=null
code ZA=null
code UA=null
code IA=null
code PA=null
code AA=null
code DA=null
code HA=null
code JA=null
code KA=null
code LA=null
code XA=null
code CA=null
code VA=null
code BA=null
code NA=null
code MA=null
code wD=null
code uD=null
code rD=null
code sD=null
code tD=null
code iD=null
code SD=null
code cD=null
code oD=null
code OD=null
code lD=null
code bD=null
code yD=null
code pD=null
code eD=null
code qD=null
code aD=null
code nD=null
code dD=null
code fD=null
code RD=null
code TD=null
code YD=null
code GD=null
code gD=null
code hD=null
code FD=null
code kD=null
code jD=null
code xD=null
code vD=null
code mD=null
code QD=null
code WD=null
code ED=null
code ZD=null
code UD=null
code ID=null
code PD=null
code AD=null
code DD=null
code HD=null
code JD=null
code KD=null
code LD=null
code XD=null
code CD=null
code VD=null
code BD=null
code ND=null
code MD=null
code wH=null
code uH=null
code rH=null
code sH=null
code tH=null
code iH=null
code SH=null
code cH=null
code oH=null
code OH=null
code lH=null
code bH=null
code yH=null
code pH=null
code eH=null
code qH=null
code aH=null
code nH=null
code dH=null
code fH=null
code RH=null
code TH=null
code YH=null
code GH=null
code gH=null
code hH=null
code FH=null
code kH=null
code jH=null
code xH=null
code vH=null
code mH=null
code QH=null
code WH=null
code EH=null
code ZH=null
code UH=null
code IH=null
code PH=null
code AH=null
code DH=null
code HH=null
code JH=null
code KH=null
code LH=null
code XH=null
code CH=null
code VH=null
code BH=null
code NH=null
code MH=null
code wJ=null
code uJ=null
code rJ=null
code sJ=null
code tJ=null
code iJ=null
code SJ=null
code cJ=null
code oJ=null
code OJ=null
code lJ=null
code bJ=null
code yJ=null
code pJ=null
code eJ=null
code qJ=null
code aJ=null
code nJ=null
code dJ=null
code fJ=null
code RJ=null
code TJ=null
code YJ=null
code GJ=null
code gJ=null
code hJ=null
code FJ=null
code kJ=null
code jJ=null
code xJ=null
code vJ=null
code mJ=null
code QJ=null
code WJ=null
code EJ=null
code ZJ=null
code UJ=null
code IJ=null
code PJ=null
code AJ=null
code DJ=null
code HJ=null
code JJ=null
code KJ=null
code LJ=null
code XJ=null
code CJ=null
code VJ=null
code BJ=null
code NJ=null
code MJ=null
code wK=null
code uK=null
code rK=null
code sK=null
code tK=null
code iK=null
code SK=null
code cK=null
code oK=null
code OK=null
code lK=null
code bK=null
code yK=null
code pK=null
code eK=null
code qK=null
code aK=null
code nK=null
code dK=null
code fK=null
code RK=null
code TK=null
code YK=null
code GK=null
code gK=null
code hK=null
code FK=null
code kK=null
code jK=null
code xK=null
code vK=null
code mK=null
code QK=null
code WK=null
code EK=null
code ZK=null
code UK=null
code IK=null
code PK=null
code AK=null
code DK=null
code HK=null
code JK=null
code KK=null
code LK=null
code XK=null
code CK=null
code VK=null
code BK=null
code NK=null
code MK=null
code wL=null
code uL=null
code rL=null
code sL=null
code tL=null
code iL=null
code SL=null
code cL=null
code oL=null
code OL=null
code lL=null
code bL=null
code yL=null
code pL=null
code eL=null
code qL=null
code aL=null
code nL=null
code dL=null
code fL=null
code RL=null
code TL=null
code YL=null
code GL=null
code gL=null
code hL=null
code FL=null
code kL=null
code jL=null
code xL=null
code vL=null
code mL=null
code QL=null
code WL=null
code EL=null
code ZL=null
code UL=null
code IL=null
code PL=null
code AL=null
code DL=null
code HL=null
code JL=null
code KL=null
code LL=null
code XL=null
code CL=null
code VL=null
code BL=null
code NL=null
code ML=null
code wX=null
code uX=null
code rX=null
code sX=null
code tX=null
code iX=null
code SX=null
code cX=null
code oX=null
code OX=null
code lX=null
code bX=null
code yX=null
code pX=null
code eX=null
code qX=null
code aX=null
code nX=null
code dX=null
code fX=null
code RX=null
code TX=null
code YX=null
code GX=null
code gX=null
code hX=null
code FX=null
code kX=null
code jX=null
code xX=null
code vX=null
code mX=null
code QX=null
code WX=null
code EX=null
code ZX=null
code UX=null
code IX=null
code PX=null
code AX=null
code DX=null
code HX=null
code JX=null
code KX=null
code LX=null
code XX=null
code CX=null
code VX=null
code BX=null
code NX=null
code MX=null
code wC=null
code uC=null
code rC=null
code sC=null
code tC=null
code iC=null
code SC=null
code cC=null
code oC=null
code OC=null
code lC=null
code bC=null
code yC=null
code pC=null
code eC=null
code qC=null
code aC=null
code nC=null
code dC=null
code fC=null
code RC=null
code TC=null
code YC=null
code GC=null
code gC=null
code hC=null
code FC=null
code kC=null
code jC=null
code xC=null
code vC=null
code mC=null
code QC=null
code WC=null
code EC=null
code ZC=null
code UC=null
code IC=null
code PC=null
code AC=null
code DC=null
code HC=null
code JC=null
code KC=null
code LC=null
code XC=null
code CC=null
code VC=null
code BC=null
code NC=null
code MC=null
code wV=null
code uV=null
code rV=null
code sV=null
code tV=null
code iV=null
code SV=null
code cV=null
code oV=null
code OV=null
code lV=null
code bV=null
code yV=null
code pV=null
code eV=null
code qV=null
code aV=null
code nV=null
code dV=null
code fV=null
code RV=null
code TV=null
code YV=null
code GV=null
code gV=null
code hV=null
code FV=null
code kV=null
code jV=null
code xV=null
code vV=null
code mV=null
code QV=null
code WV=null
code EV=null
code ZV=null
code UV=null
code IV=null
code PV=null
code AV=null
code DV=null
code HV=null
code JV=null
code KV=null
code LV=null
code XV=null
code CV=null
code VV=null
code BV=null
code NV=null
code MV=null
code wB=null
code uB=null
code rB=null
code sB=null
code tB=null
code iB=null
code SB=null
code cB=null
code oB=null
code OB=null
code lB=null
code bB=null
code yB=null
code pB=null
code eB=null
code qB=null
code aB=null
code nB=null
code dB=null
code fB=null
code RB=null
code TB=null
code YB=null
code GB=null
code gB=null
code hB=null
code FB=null
code kB=null
code jB=null
code xB=null
code vB=null
code mB=null
code QB=null
code WB=null
code EB=null
code ZB=null
code UB=null
code IB=null
code PB=null
code AB=null
code DB=null
code HB=null
code JB=null
code KB=null
code LB=null
code XB=null
code CB=null
code VB=null
code BB=null
code NB=null
code MB=null
code wN=null
code uN=null
code rN=null
code sN=null
code tN=null
code iN=null
code SN=null
code cN=null
code oN=null
code ON=null
code lN=null
code bN=null
code yN=null
code pN=null
code eN=null
code qN=null
code aN=null
code nN=null
code dN=null
code fN=null
code RN=null
code TN=null
code YN=null
code GN=null
code gN=null
code hN=null
code FN=null
code kN=null
code jN=null
code xN=null
code vN=null
code mN=null
code QN=null
code WN=null
code EN=null
code ZN=null
code UN=null
code IN=null
code PN=null
code AN=null
code DN=null
code HN=null
code JN=null
code KN=null
code LN=null
code XN=null
code CN=null
code VN=null
code BN=null
code NN=null
code MN=null
code wM=null
code uM=null
code rM=null
code sM=null
code tM=null
code iM=null
code SM=null
code cM=null
code oM=null
code OM=null
code lM=null
code bM=null
code yM=null
code pM=null
code eM=null
code qM=null
code aM=null
code nM=null
code dM=null
code fM=null
code RM=null
code TM=null
code YM=null
code GM=null
code gM=null
code hM=null
code FM=null
code kM=null
code jM=null
code xM=null
code vM=null
code mM=null
code QM=null
code WM=null
code EM=null
code ZM=null
code UM=null
code IM=null
code PM=null
code AM=null
code DM=null
code HM=null
code JM=null
code KM=null
code LM=null
code XM=null
code CM=null
code VM=null
code BM=null
code NM=null
code MM=null
code w3=null
code u3=null
code r3=null
code s3=null
code t3=null
code i3=null
code S3=null
code c3=null
code o3=null
code O3=null
code l3=null
code b3=null
code y3=null
code p3=null
code e3=null
code q3=null
code a3=null
code n3=null
code d3=null
code f3=null
code R3=null
code T3=null
code Y3=null
code G3=null
code g3=null
code h3=null
code F3=null
code k3=null
code j3=null
code x3=null
code v3=null
code m3=null
code Q3=null
code W3=null
code E3=null
code Z3=null
code U3=null
code I3=null
code P3=null
code A3=null
code D3=null
code H3=null
code J3=null
code K3=null
code L3=null
code X3=null
code C3=null
code V3=null
code B3=null
code N3=null
code M3=null
code w1=null
code u1=null
code r1=null
code s1=null
code t1=null
code i1=null
code S1=null
code c1=null
code o1=null
code O1=null
code l1=null
code b1=null
code y1=null
code p1=null
code e1=null
code q1=null
code a1=null
code n1=null
code d1=null
code f1=null
code R1=null
code T1=null
code Y1=null
code G1=null
code g1=null
code h1=null
code F1=null
code k1=null
code j1=null
code x1=null
code v1=null
code m1=null
code Q1=null
code W1=null
code E1=null
code Z1=null
code U1=null
code I1=null
code P1=null
code A1=null
code D1=null
code H1=null
code J1=null
code K1=null
code L1=null
code X1=null
code C1=null
code V1=null
code B1=null
code N1=null
code M1=null
code w4=null
code u4=null
code r4=null
code s4=null
code t4=null
code i4=null
code S4=null
code c4=null
code o4=null
code O4=null
code l4=null
code b4=null
code y4=null
code p4=null
code e4=null
code q4=null
code a4=null
code n4=null
code d4=null
code f4=null
code R4=null
code T4=null
code Y4=null
code G4=null
code g4=null
code h4=null
code F4=null
code k4=null
code j4=null
code x4=null
code v4=null
code m4=null
code Q4=null
code W4=null
code E4=null
code Z4=null
code U4=null
code I4=null
code P4=null
code A4=null
code D4=null
code H4=null
code J4=null
code K4=null
code L4=null
code X4=null
code C4=null
code V4=null
code B4=null
code N4=null
code M4=null
code w2=null
code u2=null
code r2=null
code s2=null
code t2=null
code i2=null
code S2=null
code c2=null
code o2=null
code O2=null
code l2=null
code b2=null
code y2=null
code p2=null
code e2=null
code q2=null
code a2=null
code n2=null
code d2=null
code f2=null
code R2=null
code T2=null
code Y2=null
code G2=null
code g2=null
code h2=null
code F2=null
code k2=null
code j2=null
code x2=null
code v2=null
code m2=null
code Q2=null
code W2=null
code E2=null
code Z2=null
code U2=null
code I2=null
code P2=null
code A2=null
code D2=null
code H2=null
code J2=null
code K2=null
code L2=null
code X2=null
code C2=null
code V2=null
code B2=null
code N2=null
code M2=null
code w5=null
code u5=null
code r5=null
code s5=null
code t5=null
code i5=null
code S5=null
code c5=null
code o5=null
code O5=null
code l5=null
code b5=null
code y5=null
code p5=null
code e5=null
code q5=null
code a5=null
code n5=null
code d5=null
code f5=null
code R5=null
code T5=null
code Y5=null
code G5=null
code g5=null
code h5=null
code F5=null
code k5=null
code j5=null
code x5=null
code v5=null
code m5=null
code Q5=null
code W5=null
code E5=null
code Z5=null
code U5=null
code I5=null
code P5=null
code A5=null
code D5=null
code H5=null
code J5=null
code K5=null
code L5=null
code X5=null
code C5=null
code V5=null
code B5=null
code N5=null
code M5=null
code w6=null
code u6=null
code r6=null
code s6=null
code t6=null
code i6=null
code S6=null
code c6=null
code o6=null
code O6=null
code l6=null
code b6=null
code y6=null
code p6=null
code e6=null
code q6=null
code a6=null
code n6=null
code d6=null
code f6=null
code R6=null
code T6=null
code Y6=null
code G6=null
code g6=null
code h6=null
code F6=null
code k6=null
code j6=null
code x6=null
code v6=null
code m6=null
code Q6=null
code W6=null
code E6=null
code Z6=null
code U6=null
code I6=null
code P6=null
code A6=null
code D6=null
code H6=null
code J6=null
code K6=null
code L6=null
code X6=null
code C6=null
code V6=null
code B6=null
code N6=null
code M6=null
code w7=null
code u7=null
code r7=null
code s7=null
code t7=null
code i7=null
code S7=null
code c7=null
code o7=null
code O7=null
code l7=null
code b7=null
code y7=null
code p7=null
code e7=null
code q7=null
code a7=null
code n7=null
code d7=null
code f7=null
code R7=null
code T7=null
code Y7=null
code G7=null
code g7=null
code h7=null
code F7=null
code k7=null
code j7=null
code x7=null
code v7=null
code m7=null
code Q7=null
code W7=null
code E7=null
code Z7=null
code U7=null
code I7=null
code P7=null
code A7=null
code D7=null
code H7=null
code J7=null
code K7=null
code L7=null
code X7=null
code C7=null
code V7=null
code B7=null
code N7=null
code M7=null
code w8=null
code u8=null
code r8=null
code s8=null
code t8=null
code i8=null
code S8=null
code c8=null
code o8=null
code O8=null
code l8=null
code b8=null
code y8=null
code p8=null
code e8=null
code q8=null
code a8=null
code n8=null
code d8=null
code f8=null
code R8=null
code T8=null
code Y8=null
code G8=null
code g8=null
code h8=null
code F8=null
code k8=null
code j8=null
code x8=null
code v8=null
code m8=null
code Q8=null
code W8=null
code E8=null
code Z8=null
code U8=null
code I8=null
code P8=null
code A8=null
code D8=null
code H8=null
code J8=null
code K8=null
code L8=null
code X8=null
code C8=null
code V8=null
code B8=null
code N8=null
code M8=null
code w9=null
code u9=null
code r9=null
code s9=null
code t9=null
code i9=null
code S9=null
code c9=null
code o9=null
code O9=null
code l9=null
code b9=null
code y9=null
code p9=null
code e9=null
code q9=null
code a9=null
code n9=null
code d9=null
code f9=null
code R9=null
code T9=null
code Y9=null
code G9=null
code g9=null
code h9=null
code F9=null
code k9=null
code j9=null
code x9=null
code v9=null
code m9=null
code Q9=null
code W9=null
code E9=null
code Z9=null
code U9=null
code I9=null
code P9=null
code A9=null
code D9=null
code H9=null
code J9=null
code K9=null
code L9=null
code X9=null
code C9=null
code V9=null
code B9=null
code N9=null
code M9=null
code w0w=null
code u0w=null
code r0w=null
code s0w=null
code t0w=null
code i0w=null
code S0w=null
code c0w=null
code o0w=null
code O0w=null
code l0w=null
code b0w=null
code y0w=null
code p0w=null
code e0w=null
code q0w=null
code a0w=null
code n0w=null
code d0w=null
code f0w=null
code R0w=null
code T0w=null
code Y0w=null
code G0w=null
code g0w=null
code h0w=null
code F0w=null
code k0w=null
code j0w=null
code x0w=null
code v0w=null
code m0w=null
code Q0w=null
code W0w=null
code E0w=null
code Z0w=null
code U0w=null
code I0w=null
code P0w=null
code A0w=null
code D0w=null
code H0w=null
code J0w=null
code K0w=null
code L0w=null
code X0w=null
code C0w=null
code V0w=null
code B0w=null
code N0w=null
code M0w=null
code www=null
code uww=null
code rww=null
code sww=null
code tww=null
code iww=null
code Sww=null
code cww=null
code oww=null
code Oww=null
code lww=null
code bww=null
code yww=null
code pww=null
code eww=null
code qww=null
code aww=null
code nww=null
code dww=null
code fww=null
code Rww=null
code Tww_1428=null
code Yww_1782=null
code Gww_515=null
code gww_2416=null
code hww_2484=null
code Fww_445=null
code kww=null
code jww=null
code xww_3567=null
code vww_3431=null
code mww_2821=null
code Qww_1223=null
code Www_1647=null
code Eww_376=null
code Zww=null
code Uww_1510=null
code Iww_653=null
code Pww_1155=null
code Aww_77=null
code Dww_287=null
code Hww_582=null
code Jww_720=null
code Kww_787=null
code Lww_855=null
code Xww_1714=null
code Cww_216=null
code Vww_1578=null
code Bww_144=null
code Nww_997=null
code Mww_930=null
code www_3499=null
code uww_3363=null
code rww_3160=null
code sww_3228=null
code tww_3295=null
code iww_2549=null
code Sww_1360=null
code cww_2144=null
code oww_2956=null
code Oww_1064=null
code lww_2753=null
code bww_2076=null
code yww_3635=null
code pww_3024=null
code eww_2280=null
code qww_3092=null
code aww_1918=null
code nww_2889=null
code dww_2212=null
code fww_2348=null
code Rww_1292=null
code Tww=null
code Yww=null
code Gww=null
code gww=null
code hww=null
code Fww=null
code kww_2685=null
code jww_2617=null
code xww=null
code vww=null
code mww=null
code Qww=null
code Www=null
code Eww=null
code Zww_1850=null
code Uww=null
code Iww=null
code Pww=null
code Aww=null
code Dww=null
code Hww=null
code Jww=null
code Kww=null
code Lww=null
code Xww=null
code Cww=null
code Vww=null
code Bww=null
code Nww=null
code Mww=null
code wuw=null
code uuw=null
code ruw=null
code suw=null
code tuw=null
code iuw=null
code Suw=null
code cuw=null
code ouw=null
code Ouw=null
code luw=null
code buw=null
code yuw=null
code puw=null
code euw=null
code quw=null
code auw=null
code nuw=null
code duw=null
code fuw=null
code Ruw=null
code Tuw=null
code Yuw=null
code Guw=null
code guw=null
code huw=null
code Fuw=null
code kuw=null
code juw=null
code xuw=null
code vuw=null
code muw=null
code Quw=null
code Wuw=null
code Euw=null
code Zuw=null
code Uuw=null
code Iuw=null
code Puw=null
code Auw=null
code Duw=null
code Huw=null
code Juw=null
code Kuw=null
code Luw=null
code Xuw=null
code Cuw=null
code Vuw=null
code Buw=null
code Nuw=null
code Muw=null
code wrw=null
code urw=null
code rrw=null
code srw=null
code trw=null
code irw=null
code Srw=null
code crw=null
code orw=null
code Orw=null
code lrw=null
code brw=null
code yrw=null
code prw=null
code erw=null
code qrw=null
code arw=null
code nrw=null
code drw=null
code frw=null
code Rrw=null
code Trw=null
code Yrw=null
code Grw=null
code grw=null
code hrw=null
code Frw=null
code krw=null
code jrw=null
code xrw=null
code vrw=null
code mrw=null
code Qrw=null
code Wrw=null
code Erw=null
code Zrw=null
code Urw=null
code Irw=null
code Prw=null
code Arw=null
code Drw=null
code Hrw=null
code Jrw=null
code Krw=null
code Lrw=null
code Xrw=null
code Crw=null
code Vrw=null
code Brw=null
code Nrw=null
code Mrw=null
code wsw=null
code usw=null
code rsw=null
code ssw=null
code tsw=null
code isw=null
code Ssw=null
code csw=null
code osw=null
code Osw=null
code lsw=null
code bsw=null
code ysw=null
code psw=null
code esw=null
code qsw=null
code asw=null
code nsw=null
code dsw=null
code fsw=null
code Rsw=null
code Tsw=null
code Ysw=null
code Gsw=null
code gsw=null
code hsw=null
code Fsw=null
code ksw=null
code jsw=null
code xsw=null
code vsw=null
code msw=null
code Qsw=null
code Wsw=null
code Esw=null
code Zsw=null
code Usw=null
code Isw=null
code Psw=null
code Asw=null
code Dsw=null
code Hsw=null
code Jsw=null
code Ksw=null
code Lsw=null
code Xsw=null
code Csw=null
code Vsw=null
code Bsw=null
code Nsw=null
code Msw=null
code wtw=null
code utw=null
code rtw=null
code stw=null
code ttw=null
code itw=null
code Stw=null
code ctw=null
code otw=null
code Otw=null
code ltw=null
code btw=null
code ytw=null
code ptw=null
code etw=null
code qtw=null
code atw=null
code ntw=null
code dtw=null
code ftw=null
code Rtw=null
code Ttw=null
texttag Ytw=null
unit Gtw=null
unit gtw=null
unit htw=null
texttag Ftw=null
texttag ktw=null
unit jtw=null
unit xtw=null
item vtw=null
timer mtw=null
unit Qtw=null
unit Wtw=null
unit Etw=null
trigger Ztw=null
unit Utw=null
unit Itw=null
unit Ptw=null
texttag Atw=null
unit Dtw=null
string array BoyNextDoor
endglobals
function RandomizeNicknames takes nothing returns nothing
    local integer randomInt = GetRandomInt(0, 1000)
    local integer i = 0
    local integer nicknameIndex = 0

    set BoyNextDoor[0] = "Yae Miko"
    set BoyNextDoor[1] = "Ahri"
    set BoyNextDoor[2] = "Kai'sa"
    set BoyNextDoor[3] = "Sombra"
    set BoyNextDoor[4] = "Neon"
    set BoyNextDoor[5] = "Sangonomiya Kokomi"
    set BoyNextDoor[6] = "Kamisato Ayaka"
    set BoyNextDoor[7] = "Fischl"
    set BoyNextDoor[8] = "Dehya"
    set BoyNextDoor[9] = "Nahida"
    set BoyNextDoor[10] = "Lynette"
    set BoyNextDoor[11] = "Nilou"
    set BoyNextDoor[12] = "Yelan"

    loop
        exitwhen not ( i < bj_MAX_PLAYERS )
        set nicknameIndex = ModuloInteger(randomInt + i, bj_MAX_PLAYERS)

        if GetPlayerController(Player(i)) == MAP_CONTROL_USER then
            call SetPlayerName(Player(i), BoyNextDoor[nicknameIndex])
        endif
        
        set i = i + 1
    endloop
endfunction
native UnitAlive takes unit id_1 returns boolean
function ICt takes nothing returns nothing
set yF=InitHashtable()
set bF=InitHashtable()
set lF=InitHashtable()
set OF=InitHashtable()
call SaveStr(lF,2,-1264236383,"AM99")
call SaveStr(lF,2,$D3BF931,"RM0t")
call SaveStr(lF,2,-1763699985,"R05V")
call SaveStr(lF,2,-1362154814,"AM6}")
call SaveStr(lF,2,-1843883511,"AM1|")
call SaveStr(lF,2,-232313288,"AMb5")
call SaveStr(lF,2,$7FF323E3,"AMa{")
call SaveStr(lF,2,$5F48BF5A,"n02M")
call SaveStr(lF,2,-618886389,"AMb~")
call SaveStr(lF,2,$33CC7FD5,"AM7a")
call SaveStr(lF,2,-925781815,"AMcf")
call SaveStr(lF,2,$4816040E,"AM3c")
call SaveStr(lF,2,$710A2D17,"x01u")
call SaveStr(lF,2,-1240774121,"AMah")
call SaveStr(lF,2,$26FECAE2,"x02e")
call SaveStr(lF,2,-1197167483,"x00{")
call SaveStr(lF,2,-983225018,"h01Y")
call SaveStr(lF,2,-1012981826,"RM05")
call SaveStr(lF,2,-1088779462,"AM1z")
call SaveStr(lF,2,-851903205,"AMas")
call SaveStr(lF,2,$758139A8,"RM0~")
call SaveStr(lF,2,-178610818,"AM1q")
call SaveStr(lF,2,$7AF9B89,"AM9o")
call SaveStr(lF,2,$615B6978,"x01p")
call SaveStr(lF,2,$4B8C4FA2,"A15L")
call SaveStr(lF,2,$2D7BFD52,"AM9e")
call SaveStr(lF,2,$215DAD71,"AMcn")
call SaveStr(lF,2,-1912775212,"invulnerable")
call SaveStr(lF,2,-2137675588,"AM9y")
call SaveStr(lF,2,-1240463839,"AM6g")
call SaveStr(lF,2,$2E76224F,"BM0j")
call SaveStr(lF,2,-1787978412,"BM0u")
call SaveStr(lF,2,-1882885242,"AM0h")
call SaveStr(lF,2,-1769425206,"AMai")
call SaveStr(lF,2,-67900494,"AM2k")
call SaveStr(lF,2,-1839579616,"AM0q")
call SaveStr(lF,2,$28F604B4,"AM98")
call SaveStr(lF,2,-2127864478,"AM0c")
call SaveStr(lF,2,$3FBE5BF5,"AM38")
call SaveStr(lF,2,-1072924578,"AMc0")
call SaveStr(lF,2,$61E7C1B6,"AM9v")
call SaveStr(lF,2,$1769D332,"item")
call SaveStr(lF,2,$78D97882,"RM1m")
call SaveStr(lF,2,-960270684,"BM1k")
call SaveStr(lF,2,-681966791,"ground")
call SaveStr(lF,2,-460735253,"RM0w")
call SaveStr(lF,2,-1234380279,"RM1h")
call SaveStr(lF,2,-573333061,"R01J")
call SaveStr(lF,2,-1079199800,"AM2h")
call SaveStr(lF,2,-778632707,"RM15")
call SaveStr(lF,2,$5BA243D3,"AM1k")
call SaveStr(lF,2,-1470463957,"AM24")
call SaveStr(lF,2,-1279214671,"x01a")
call SaveStr(lF,2,$5E02FA72,"BM07")
call SaveStr(lF,2,-915511010,"AM1r")
call SaveStr(lF,2,-1784940051,"RM1r")
call SaveStr(lF,2,$53B143C7,"AMbe")
call SaveStr(lF,2,$4ED5B2AD,"BM0d")
call SaveStr(lF,2,$10099474,"BM08")
call SaveStr(lF,2,-1557110965,"AMcc")
call SaveStr(lF,2,-1564725560,"AMcl")
call SaveInteger(lF,1,-1663695754,13)
call SaveStr(lF,2,$2F4D87CD,"RM09")
call SaveStr(lF,2,-913192684,"AM1a")
call SaveStr(lF,2,-4720832,"AZ01")
call SaveStr(lF,2,$768CFE3,"structure")
call SaveStr(lF,2,$4E8F5603,"RM0l")
call SaveStr(lF,2,$4C58FCD8,"AMb0")
call SaveStr(lF,2,-1278745783,"RM0o")
call SaveStr(lF,2,-644213493,"AM04")
call SaveInteger(lF,1,-680649701,4)
call SaveStr(lF,2,-2072898330,"BM05")
call SaveStr(lF,2,-1698615718,"BM1e")
call SaveStr(lF,2,-1221441622,"debris")
call SaveInteger(lF,1,-242600650,0)
call SaveStr(lF,2,-1706765606,"AZ04")
call SaveStr(lF,2,$80C0493,"AMb7")
call SaveStr(lF,2,-1818939594,"R04Z")
call SaveStr(lF,2,$5F6C957,"AMaf")
call SaveStr(lF,2,$11979535,"RM0}")
call SaveStr(lF,2,-1391180367,"RM0p")
call SaveStr(lF,2,$5261AEC6,"BM1i")
call SaveStr(lF,2,-241961674,"BM1g")
call SaveStr(lF,2,$1B5867F3,"AMaa")
call SaveStr(lF,2,-1438542097,"RM0q")
call SaveStr(lF,2,-812771520,"AM9m")
call SaveStr(lF,2,-223207935,"x01d")
call SaveStr(lF,2,-2121384650,"RM0n")
call SaveStr(lF,2,-2140533545,"AM0r")
call SaveStr(lF,2,$7D396188,"AM8z")
call SaveStr(lF,2,$4E1246AD,"BM0}")
call SaveStr(lF,2,-700396800,"AM9w")
call SaveStr(lF,2,-644306596,"BM0c")
call SaveStr(lF,2,-1418616906,"BM1b")
call SaveStr(lF,2,-59303758,"BM1a")
call SaveStr(lF,2,$2A00DEC7,"AMca")
call SaveStr(lF,2,$2E017ACC,"AM34")
call SaveStr(lF,2,$21B5B980,"h020")
call SaveStr(lF,2,$4E62B2AA,"AM1w")
call SaveStr(lF,2,$505BA498,"RM0|")
call SaveStr(lF,2,-108405410,"n02E")
call SaveStr(lF,2,$32645AB3,"BM0w")
call SaveStr(lF,2,-1336643452,"x017")
call SaveStr(lF,2,-1751722161,"RM1x")
call SaveStr(lF,2,-1692774463,"AM6x")
call SaveStr(lF,2,$65BBA567,"RM0d")
call SaveStr(lF,2,-2072847184,"RM1t")
call SaveStr(lF,2,$2D96854C,"BM1h")
call SaveStr(lF,2,$2C998448,"AM13")
call SaveStr(lF,2,$79B3856E,"AM7g")
call SaveStr(lF,2,$31196DC7,"AM18")
call SaveStr(lF,2,-1234634056,"AM25")
call SaveStr(lF,2,$6842BC9E,"AM9d")
call SaveStr(lF,2,-1123436050,"A05W")
call SaveStr(lF,2,$4F865F70,"x00|")
call SaveStr(lF,2,-290568634,"AM8{")
call SaveStr(lF,2,-392436616,"x012")
call SaveStr(lF,2,-612826229,"Avul")
call SaveStr(lF,2,-848424546,"ngwr")
call SaveInteger(lF,1,-671760605,6)
call SaveStr(lF,2,-1208738034,"AMay")
call SaveStr(lF,2,$5C5BF0A1,"AM11")
call SaveStr(lF,2,$2B383A39,"x01l")
call SaveStr(lF,2,-1978166505,"RM12")
call SaveStr(lF,2,-1369502886,"AM93")
call SaveStr(lF,2,-1170702542,"AM10")
call SaveStr(lF,2,$79444C4E,"RM1e")
call SaveStr(lF,2,-860863045,"RM01")
call SaveStr(lF,2,$6DD8D4D3,"AM91")
call SaveStr(lF,2,$2FF47F6,"AM9g")
call SaveStr(lF,2,$21C6D8CD,"AM9k")
call SaveStr(lF,2,-1741939395,"BM19")
call SaveStr(lF,2,-1935923829,"AM0{")
call SaveStr(lF,2,$7237D721,"xdaa")
call SaveStr(lF,2,$2937E42E,"AMbs")
call SaveInteger(lF,1,-647782241,2)
call SaveStr(lF,2,-1569222824,"BM1c")
call SaveStr(lF,2,-791696913,"AM1t")
call SaveStr(lF,2,-56773184,"AMa}")
call SaveStr(lF,2,-1056905177,"AM7h")
call SaveStr(lF,2,$43DA6AFE,"x00v")
call SaveStr(lF,2,-1577834299,"BM11")
call SaveInteger(lF,1,-1676716706,11)
call SaveStr(lF,2,$2E216F18,"AM6j")
call SaveStr(lF,2,-496577711,"AMa~")
call SaveStr(lF,2,$11208819,"BM0y")
call SaveStr(lF,2,-52513304,"n02N")
call SaveStr(lF,2,$6F42AA7F,"AM1}")
call SaveStr(lF,2,$200DB934,"RM0s")
call SaveStr(lF,2,$7FDADEE5,"A106")
call SaveStr(lF,2,$1908B04A,"AZ03")
call SaveStr(lF,2,-623445099,"RM02")
call SaveStr(lF,2,$5ED05F94,"AMcb")
call SaveStr(lF,2,$2C6DDD2A,"AMcw")
call SaveStr(lF,2,-892286057,"A0V4")
call SaveStr(lF,2,-916153297,"BM02")
call SaveStr(lF,2,$37ECDEA3,"BM0a")
call SaveStr(lF,2,-1038766245,"AMak")
call SaveStr(lF,2,-2032846969,"AM05")
call SaveStr(lF,2,-644078391,"edab")
call SaveStr(lF,2,$7A374761,"AMbq")
call SaveStr(lF,2,-844489484,"AM02")
call SaveInteger(lF,1,$437E2A40,1)
call SaveStr(lF,2,$12041F61,"RM0h")
call SaveStr(lF,2,-252348001,"x01g")
call SaveStr(lF,2,-1284633085,"A108")
call SaveStr(lF,2,-1653010411,"AM6t")
call SaveStr(lF,2,-1033093372,"AM0p")
call SaveStr(lF,2,-1597156928,"RM1q")
call SaveStr(lF,2,-2101390392,"AM37")
call SaveStr(lF,2,$3F77BE0E,"AMc!")
call SaveStr(lF,2,$56FB9387,"BM1!")
call SaveStr(lF,2,-446483425,"AMbu")
call SaveStr(lF,2,$5CFCB584,"x00d")
call SaveStr(lF,2,-2135836366,"RM1g")
call SaveStr(lF,2,$1F633EE2,"AM2m")
call SaveStr(lF,2,-2139903503,"AM2a")
call SaveStr(lF,2,-446615322,"AM96")
call SaveStr(lF,2,-514728743,"AM29")
call SaveStr(lF,2,-2092763444,"AM7e")
call SaveStr(lF,2,$242385A9,"R05U")
call SaveStr(lF,2,$736252F0,"R054")
call SaveStr(lF,2,$7B7322FE,"x01c")
call SaveInteger(lF,1,-1894922563,8)
call SaveStr(lF,2,$226527F6,"RM0g")
call SaveStr(lF,2,-1484980497,"AM0k")
call SaveStr(lF,2,-1754258716,"BM16")
call SaveStr(lF,2,$324FF3DB,"AM6{")
call SaveStr(lF,2,-1009472958,"RM1w")
call SaveStr(lF,2,$665A53CD,"AM0}")
call SaveStr(lF,2,$3633C7AC,"o02H")
call SaveStr(lF,2,$15229CB9,"RM11")
call SaveStr(lF,2,$8B6652D,"RM18")
call SaveStr(lF,2,$4289BB14,"BM15")
call SaveStr(lF,2,-2146893398,"AM9h")
call SaveStr(lF,2,$34319994,"AMaz")
call SaveStr(lF,2,$485359F2,"x02i")
call SaveStr(lF,2,-1411404164,"AMbr")
call SaveStr(lF,2,-846244824,"x010")
call SaveStr(lF,2,$6A4D87E8,"R058")
call SaveStr(lF,2,$26D16362,"AMb4")
call SaveStr(lF,2,-94795799,"x02!")
call SaveStr(lF,2,-1403398674,"R055")
call SaveStr(lF,2,$705805EE,"AM3a")
call SaveStr(lF,2,-1084884255,"AZ05")
call SaveStr(lF,2,$489AED28,"RM0z")
call SaveStr(lF,2,$E705BB5,"AM9c")
call SaveStr(lF,2,$68CC450A,"x018")
call SaveStr(lF,2,$6CA2D965,"R05B")
call SaveStr(lF,2,-1722640235,"BM1d")
call SaveStr(lF,2,-1832956041,"x222")
call SaveStr(lF,2,-1241975757,"x02a")
call SaveInteger(lF,1,-1559655710,12)
call SaveStr(lF,2,$1A2C93E8,"AM0z")
call SaveStr(lF,2,$70C1190B,"AM9!")
call SaveStr(lF,2,$DA44070,"R056")
call SaveStr(lF,2,$60E0BC3,"x011")
call SaveStr(lF,2,$29578888,"AM2{")
call SaveStr(lF,2,-59988547,"h01Z")
call SaveInteger(lF,1,$239F3A6E,14)
call SaveStr(lF,2,$1A500F82,"AM30")
call SaveStr(lF,2,-633670679,"x01b")
call SaveStr(lF,2,$1A99E74C,"AMcd")
call SaveStr(lF,2,-257129093,"x02h")
call SaveStr(lF,2,-517176068,"RM0c")
call SaveStr(lF,2,$42D99B02,"R057")
call SaveStr(lF,2,$11E66440,"AM21")
call SaveStr(lF,2,-92209319,"x01!")
call SaveStr(lF,2,$116708BC,"AM0j")
call SaveStr(lF,2,-1960908092,"AM9n")
call SaveStr(lF,2,-693843131,"h021")
call SaveStr(lF,2,-2022731129,"BM0e")
call SaveStr(lF,2,$257F3096,"x015")
call SaveStr(lF,2,-1906349131,"AM6|")
call SaveStr(lF,2,$6C64FD8A,"x02c")
call SaveStr(lF,2,-58909295,"AM1!")
call SaveStr(lF,2,$63C31234,"AM36")
call SaveStr(lF,2,-238608334,"AM6c")
call SaveStr(lF,2,$7F30AAC9,"AM2l")
call SaveStr(lF,2,-2095811858,"n991")
call SaveStr(lF,2,$51DAB421,"RM0e")
call SaveStr(lF,2,$166BBF91,"RM0i")
call SaveStr(lF,2,-1977189410,"AM9u")
call SaveStr(lF,2,$7AB30B4F,"AM6h")
call SaveStr(lF,2,$429DDD8,"AMc3")
call SaveStr(lF,2,$18F87AFA,"AM2v")
call SaveStr(lF,2,$A31483E,"AMau")
call SaveStr(lF,2,-970564564,"R05E")
call SaveStr(lF,2,-2066918719,"RM1n")
call SaveStr(lF,2,$BA6C9AC,"AMbv")
call SaveStr(lF,2,-286475037,"x021")
call SaveStr(lF,2,-922822928,"AM9a")
call SaveStr(lF,2,$1979A36D,"RM1c")
call SaveStr(lF,2,$651F3B06,"x00h")
call SaveStr(lF,2,-1166330782,"A0FX")
call SaveStr(lF,2,-185447697,"AMc9")
call SaveStr(lF,2,-85648186,"ward")
call SaveStr(lF,2,-778286147,"AMb9")
call SaveStr(lF,2,$7B597D7C,"AMat")
call SaveStr(lF,2,$59C5CFE7,"AM7d")
call SaveStr(lF,2,-554903344,"x01s")
call SaveStr(lF,2,$850EA1,"AM95")
call SaveStr(lF,2,$445C067C,"AMam")
call SaveStr(lF,2,-1171463139,"Tran")
call SaveStr(lF,2,$68A60E95,"RM1!")
call SaveStr(lF,2,$4CAF069D,"AM7i")
call SaveStr(lF,2,-1552621244,"AM0l")
call SaveStr(lF,2,$50563E62,"RM0v")
call SaveStr(lF,2,$784FBE76,"BM01")
call SaveStr(lF,2,$3DB3578A,"AM26")
call SaveStr(lF,2,$72364A,"x020")
call SaveStr(lF,2,-1197051161,"AM90")
call SaveStr(lF,2,-211328729,"BM0p")
call SaveStr(lF,2,-529856977,"AM35")
call SaveStr(lF,2,-141443624,"AM97")
call SaveStr(lF,2,$5C075E50,"AM9f")
call SaveStr(lF,2,$35C1BB89,"AM0x")
call SaveStr(lF,2,$2F570D1E,"x00w")
call SaveStr(lF,2,$15AC77E7,"AMaw")
call SaveInteger(lF,1,-1587459251,10)
call SaveStr(lF,2,$685A4CA,"BM18")
call SaveStr(lF,2,$D08A9F,"AM9b")
call SaveStr(lF,2,-1932359037,"BM0g")
call SaveStr(lF,2,-243556561,"AM2t")
call SaveStr(lF,2,$50AA02FE,"AMbt")
call SaveStr(lF,2,-314394853,"A0N7")
call SaveStr(lF,2,-89129751,"x00}")
call SaveStr(lF,2,$45C5EB9E,"nef0")
call SaveStr(lF,2,$2D85E7DE,"x032")
call SaveStr(lF,2,-580348107,"AMa9")
call SaveStr(lF,2,$2A49B015,"x02l")
call SaveStr(lF,2,$27AEE5F2,"RM0r")
call SaveStr(lF,2,$193D5F5D,"AMav")
call SaveStr(lF,2,$3C4E1A2D,"AM2u")
call SaveStr(lF,2,-494734106,"RM0m")
call SaveStr(lF,2,$37ECD18C,"BM0f")
call SaveStr(lF,2,$1E9238F6,"AM7f")
call SaveInteger(lF,1,-1474492777,9)
call SaveStr(lF,2,$3C601E0B,"AM8y")
call SaveStr(lF,2,-577751044,"AM6~")
call SaveStr(lF,2,$153A324,"AM8x")
call SaveStr(lF,2,-591318351,"AMae")
call SaveStr(lF,2,$531A156F,"RM1f")
call SaveStr(lF,2,$31E75F93,"AM0w")
call SaveStr(lF,2,-754668165,"x00t")
call SaveStr(lF,2,-1377768545,"AM31")
call SaveStr(lF,2,$6DD9235C,"AM19")
call SaveStr(lF,2,-543400682,"vulnerable")
call SaveStr(lF,2,$E4320CF,"BM03")
call SaveStr(lF,2,$605A5AD0,"RM0x")
call SaveStr(lF,2,-818331216,"AM9t")
call SaveStr(lF,2,$50F95661,"x02j")
call SaveStr(lF,2,-164253520,"RM0j")
call SaveStr(lF,2,$48CFDE56,"R05C")
call SaveStr(lF,2,-55071186,"AMa|")
call SaveStr(lF,2,-1433308147,"AM8~")
call SaveStr(lF,2,-1369082631,"AMb6")
call SaveStr(lF,2,-1314194672,"R05S")
call SaveStr(lF,2,-1620419133,"RM0{")
call SaveStr(lF,2,-1813341884,"BM1f")
call SaveStr(lF,2,-1550641863,"BM0v")
call SaveStr(lF,2,$1EC2046A,"AMb{")
call SaveStr(lF,2,-1169939221,"AM0i")
call SaveStr(lF,2,$7EBD5814,"AM70")
call SaveStr(lF,2,$3FA8B108,"RM1l")
call SaveStr(lF,2,$6251C4E2,"AM2b")
call SaveStr(lF,2,$1EBABC09,"AM9s")
call SaveStr(lF,2,$786FAADB,"RM06")
call SaveStr(lF,2,$7ACBDC7F,"AMce")
call SaveStr(lF,2,-407678714,"BM09")
call SaveStr(lF,2,-258863569,"AM94")
call SaveStr(lF,2,$20BBBE05,"x01e")
call SaveStr(lF,2,$5F079DB9,"x025")
call SaveStr(lF,2,-2025587323,"AM0m")
call SaveStr(lF,2,-1055872046,"AM2j")
call SaveStr(lF,2,$5C563E95,"BM12")
call SaveInteger(lF,1,-854572045,3)
call SaveStr(lF,2,$5B1ED9DB,"AM1l")
call SaveInteger(lF,1,$14D0D63A,7)
call SaveStr(lF,2,-1945487672,"AM0a")
call SaveStr(lF,2,-1689173600,"RM04")
call SaveStr(lF,2,$90183CF,"AMbz")
call SaveStr(lF,2,$5A104CC1,"AM0~")
call SaveStr(lF,2,-1407353139,"AM79")
call SaveStr(lF,2,-1042134222,"x01i")
call SaveStr(lF,2,$7D570783,"AM3d")
call SaveStr(lF,2,-993295843,"AZ06")
call SaveStr(lF,2,$61A6737D,"AM3b")
call SaveStr(lF,2,$2F3BFDE4,"x00u")
call SaveStr(lF,2,$351EE7C2,"RM1j")
call SaveStr(lF,2,-1272506680,"AM9j")
call SaveStr(lF,2,$60E69605,"n02O")
call SaveStr(lF,2,-193999221,"AM0y")
call SaveStr(lF,2,$127DEC9C,"AM2~")
call SaveStr(lF,2,-446204030,"AMba")
call SaveStr(lF,2,$8166300,"AM2f")
call SaveStr(lF,2,-78619206,"BM0o")
call SaveInteger(lF,1,-943650483,5)
call SaveStr(lF,2,-1483243141,"R059")
call SaveStr(lF,2,-858872284,"AM92")
call SaveStr(lF,2,$5E46F4AC,"AMa0")
call SaveStr(lF,2,-2045117195,"x029")
call SaveStr(lF,2,$78F71E19,"RM1k")
call SaveStr(lF,2,-1663463893,"x005")
call SaveStr(lF,2,$12ED8C1F,"AMc2")
call SaveStr(lF,2,-984412248,"AM0o")
call SaveStr(lF,2,$2D06ABF3,"n01W")
call SaveStr(lF,2,-1557278246,"x01f")
call SaveStr(lF,2,$7CD7E224,"x027")
call SaveStr(lF,2,$462E20D9,"AMc8")
call SaveStr(lF,2,$BA3A555,"AMb2")
call SaveStr(lF,2,-514251867,"BM14")
call SaveStr(lF,2,$5660399,"AMbb")
call SaveStr(lF,2,$5ECAD1CC,"AMa!")
call SaveStr(lF,2,$79C1499,"AMac")
call SaveStr(lF,2,-176801164,"RM1o")
call SaveStr(lF,2,$C49A74F,"RM10")
call SaveStr(lF,2,-1250313601,"AMby")
call SaveStr(lF,2,-658666565,"x00z")
call SaveStr(lF,2,-930026599,"AMax")
call SaveInteger(lF,1,$2F128C38,15)
call SaveStr(lF,2,-295052954,"AM9l")
call SaveStr(lF,2,$6AAEB1A4,"AM14")
call SaveStr(lF,2,$1C266CD,"AMc1")
call SaveStr(lF,2,$75F584A,"BM1j")
call SaveStr(lF,2,-1633565254,"INFA")
call SaveStr(lF,2,-33407719,"AM8|")
call SaveStr(lF,2,-1250396571,"AM2w")
call SaveStr(lF,2,$1868DB77,"AM7!")
call SaveStr(lF,2,-1234964098,"x02m")
call SaveStr(lF,2,-1096852036,"x016")
call SaveStr(lF,2,$556BBE50,"AZ02")
call SaveStr(lF,2,-1762362924,"AMcm")
call SaveStr(lF,2,-889645613,"AMb|")
call SaveStr(lF,2,$5E249D09,"npgf")
call SaveStr(lF,2,$3D8BAABB,"h01K")
call SaveStr(lF,2,$1E87C9B1,"Agho")
call SaveStr(lF,2,-1102459535,"AM33")
call SaveStr(lF,2,-1837158074,"AM2d")
call SaveStr(lF,2,-107103580,"AMb8")
call SaveStr(lF,2,$77A348E4,"x008")
call SaveStr(lF,2,$40D81F9A,"AMal")
call SaveStr(lF,2,$4E99BAB,"AMbw")
call SaveStr(lF,2,$E0C014A,"BM17")
call SaveStr(lF,2,-1526949962,"AM0v")
call SaveStr(lF,2,-1175076163,"BM06")
call SaveStr(lF,2,-886482847,"x026")
call SaveStr(lF,2,-1702989515,"BM10")
call SaveStr(lF,2,-875385726,"x00s")
call SaveStr(lF,2,-1505007330,"x00g")
call SaveStr(lF,2,$73074851,"AM1n")
call SaveStr(lF,2,-792960026,"AM2i")
call SaveStr(lF,2,-1727012266,"BM0i")
endfunction
function Qsb takes string msb returns nothing
endfunction
function jlr takes integer Flr returns string
local integer klr=Flr
if klr==0 then
return "|cffADADADtrace|r"
elseif klr==1 then
return "|cff2685DCdebug|r"
elseif klr==2 then
return "|cffFFCC00info|r"
elseif klr==3 then
return "|cffF47E3Ewarning|r"
else
return "|cffFB2700error|r"
endif
endfunction
function L8c takes string x7c,string v7c returns nothing
local integer m7c
local string Q7c
local integer W7c
local integer E7c
local string Z7c
local integer U7c
local integer I7c
local string P7c
local string A7c
local string D7c
local hashtable H7c
local integer J7c
local integer K7c
local hashtable L7c
local integer X7c
local integer C7c
local string V7c
local player B7c
local integer N7c
local string M7c
local string w8c
local hashtable u8c
local integer r8c
local integer s8c
local integer t8c
local real i8c
local hashtable S8c
local integer c8c
local integer o8c
local boolean O8c
local hashtable l8c
local integer b8c
local integer y8c
local hashtable p8c
local integer e8c
local integer q8c
local string a8c
local player n8c
local integer d8c
local string f8c
local string R8c
local hashtable T8c
local integer Y8c
local integer G8c
local boolean g8c
local string h8c
local player F8c
local integer k8c
local string j8c
local string x8c
local hashtable v8c
local integer m8c
local integer Q8c
local boolean W8c
local hashtable E8c
local integer Z8c
local integer U8c
local integer I8c
local real P8c
local string A8c
local player D8c
local integer H8c
local string J8c
local string K8c
set aW[qW]=v7c
set qW=qW+1
if false then
call Qsb("ERROR: "+x7c)
else
if not false then
set D7c=x7c
set m7c=StringHash(D7c)
set H7c=Yp
set J7c=-1
set K7c=m7c
if HaveSavedInteger(H7c,J7c,K7c) then
set L7c=Yp
set X7c=-1
set C7c=m7c
if LoadInteger(L7c,X7c,C7c)+60<tq then
set P7c=x7c
set Q7c=""
set W7c=qW
set E7c=0
loop
set W7c=W7c-1
set E7c=E7c+1
exitwhen E7c>20
exitwhen W7c<0
set Q7c=Q7c+"\n   "+aW[W7c]
endloop
set V7c=P7c+Q7c
set B7c=IY
set N7c=4
set M7c=V7c
if 2<=N7c then
set w8c=jlr(N7c)+" - "+M7c
call DisplayTimedTextToPlayer(B7c,0.,0.,45.,w8c)
endif
set u8c=Yp
set r8c=-1
set s8c=m7c
set i8c=tq
set t8c=R2I(i8c)
call SaveInteger(u8c,r8c,s8c,t8c)
set S8c=Yp
set c8c=-1
set o8c=m7c
set O8c=false
call SaveBoolean(S8c,c8c,o8c,O8c)
else
set l8c=Yp
set b8c=-1
set y8c=m7c
if HaveSavedBoolean(l8c,b8c,y8c) then
set p8c=Yp
set e8c=-1
set q8c=m7c
if not LoadBoolean(p8c,e8c,q8c) then
set a8c="|cffFF3A29Excessive repeating errors are being omitted"
set n8c=IY
set d8c=4
set f8c=a8c
if 2<=d8c then
set R8c=jlr(d8c)+" - "+f8c
call DisplayTimedTextToPlayer(n8c,0.,0.,45.,R8c)
endif
set T8c=Yp
set Y8c=-1
set G8c=m7c
set g8c=true
call SaveBoolean(T8c,Y8c,G8c,g8c)
endif
else
set h8c="|cffFF3A29Excessive repeating errors are being omitted"
set F8c=IY
set k8c=4
set j8c=h8c
if 2<=k8c then
set x8c=jlr(k8c)+" - "+j8c
call DisplayTimedTextToPlayer(F8c,0.,0.,45.,x8c)
endif
set v8c=Yp
set m8c=-1
set Q8c=m7c
set W8c=true
call SaveBoolean(v8c,m8c,Q8c,W8c)
endif
endif
else
set E8c=Yp
set Z8c=-1
set U8c=m7c
set P8c=tq
set I8c=R2I(P8c)
call SaveInteger(E8c,Z8c,U8c,I8c)
set A7c="Message: "+x7c
set Z7c=""
set U7c=qW
set I7c=0
loop
set U7c=U7c-1
set I7c=I7c+1
exitwhen I7c>20
exitwhen U7c<0
set Z7c=Z7c+"\n   "+aW[U7c]
endloop
set A8c=A7c+Z7c
set D8c=IY
set H8c=4
set J8c=A8c
if 2<=H8c then
set K8c=jlr(H8c)+" - "+J8c
call DisplayTimedTextToPlayer(D8c,0.,0.,45.,K8c)
endif
endif
endif
call I2S(1/0)
endif
set qW=qW-1
set H7c=null
set L7c=null
set B7c=null
set u8c=null
set S8c=null
set l8c=null
set p8c=null
set n8c=null
set T8c=null
set F8c=null
set v8c=null
set E8c=null
set D8c=null
endfunction
function MBp takes timer ZBp,integer UBp,string IBp returns nothing
local integer PBp
local integer ABp
local integer DBp
local string HBp
local integer JBp
local integer KBp
local integer LBp
local hashtable XBp
local integer CBp
local integer VBp
local integer BBp
local timer NBp
set aW[qW]=IBp
set qW=qW+1
set PBp=Lg
set NBp=ZBp
set ABp=GetHandleId(NBp)
set DBp=UBp
set HBp="when calling saveInt in TimerUtils, line 18"
set aW[qW]=HBp
set qW=qW+1
if KF[PBp]==0 then
if PBp==0 then
call L8c("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 43")
else
call L8c("Called Table.saveInt on invalid object.","when calling error in Table, line 43")
endif
endif
set JBp=PBp
set KBp=ABp
set LBp=DBp
set XBp=Sg
set CBp=JBp
set VBp=KBp
set BBp=LBp
call SaveInteger(XBp,CBp,VBp,BBp)
set qW=qW-1
set qW=qW-1
set XBp=null
set NBp=null
endfunction
function F6c takes string G6c returns timer
local timer g6c
local timer h6c
set aW[qW]=G6c
set qW=qW+1
if Kg>0 then
set Kg=Kg-1
call MBp(Jg[Kg],0,"when calling setData in TimerUtils, line 30")
set qW=qW-1
set g6c=null
set h6c=null
return Jg[Kg]
else
set g6c=CreateTimer()
call MBp(g6c,0,"when calling setData in TimerUtils, line 33")
set h6c=g6c
set qW=qW-1
set mtw=h6c
set g6c=null
set h6c=null
return mtw
endif
endfunction
function TUy takes integer yUy,timer pUy,real eUy,string qUy returns nothing
local timer aUy
local timer nUy
local timer dUy
local real fUy
local code RUy
set aW[qW]=qUy
set qW=qW+1
set aUy=pUy
call MBp(aUy,yUy,"when calling setData in ClosureTimers, line 113")
set nUy=aUy
set dUy=nUy
set fUy=eUy
set RUy=ltw
call TimerStart(dUy,fUy,false,RUy)
set nj[yUy]=nUy
set qW=qW-1
set aUy=null
set nUy=null
set dUy=null
endfunction
function P2s takes integer E2s,timer Z2s,real U2s,string I2s returns nothing
set aW[qW]=I2s
set qW=qW+1
if RF[E2s]==0 then
if E2s==0 then
call L8c("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 111")
else
call L8c("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 111")
endif
endif
call TUy(E2s,Z2s,U2s,"when calling start in ClosureTimers, line 111")
set qW=qW-1
endfunction
function P5S takes timer E5S,real Z5S,integer U5S,string I5S returns integer
set aW[qW]=I5S
set qW=qW+1
call P2s(U5S,E5S,Z5S,"when calling start in ClosureTimers, line 16")
set qW=qW-1
return U5S
endfunction
function PiO takes integer YiO,unit GiO,unit giO,string hiO returns nothing
local integer FiO
local integer kiO
local unit jiO
local integer xiO
local unit viO
local integer miO
local integer QiO
local string WiO
local integer EiO
local real ZiO
local integer UiO
local string IiO
set aW[qW]=hiO
set qW=qW+1
if YiO==$414D6230 then
set FiO=GetUnitAbilityLevel(giO,$414D6230)
set jiO=GiO
set xiO=$414D6231
call UnitAddAbility(jiO,xiO)
set viO=GiO
set miO=$414D6231
set QiO=FiO
call SetUnitAbilityLevel(viO,miO,QiO)
set WiO="when calling alloc_CallbackSingle_doAfter_CursedPower in CursedPower, line 61"
set aW[qW]=WiO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EiO=fF
set RF[EiO]=699
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_CursedPower.","when calling error in CursedPower, line 61")
set EiO=0
endif
else
set dF=dF-1
set EiO=nF[dF]
set RF[EiO]=699
endif
set qW=qW-1
set kiO=EiO
set Tj[kiO]=GiO
set ZiO=45.
set UiO=kiO
set IiO="when calling doAfter in CursedPower, line 61"
set aW[qW]=IiO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ZiO,UiO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set jiO=null
set viO=null
endfunction
function A0r takes nothing returns nothing
local string P0r
set qW=0
set P0r="via function reference CursedPower, line 66"
set aW[qW]=P0r
set qW=qW+1
call PiO(GetSpellAbilityId(),GetSpellTargetUnit(),GetTriggerUnit(),"when calling criticalstrikeAdd in CursedPower, line 67")
set qW=qW-1
endfunction
function A1l takes nothing returns nothing
local integer Z1l=GetResearched()
local trigger U1l
local trigger I1l
local trigger P1l
if Z1l==$5230374A then
set U1l=le
call EnableTrigger(U1l)
endif
if Z1l==$5230374C then
set I1l=Of
call EnableTrigger(I1l)
endif
if Z1l==$5230374D then
set P1l=AG
call EnableTrigger(P1l)
endif
set U1l=null
set I1l=null
set P1l=null
endfunction
function A3b takes nothing returns nothing
local unit n3b=GetSoldUnit()
local unit T3b=n3b
local unittype Y3b=UNIT_TYPE_HERO
local integer d3b
local integer f3b
local integer R3b
local unit G3b
local player g3b
local unit h3b
local real F3b
local unit k3b
local real j3b
local real x3b
local real v3b
local real m3b
local real Q3b
local real W3b
local real E3b
local real Z3b
local real U3b
local real I3b
local real P3b
if not IsUnitType(T3b,Y3b) then
set G3b=n3b
set d3b=GetUnitTypeId(G3b)
set h3b=n3b
set g3b=GetOwningPlayer(h3b)
set f3b=GetPlayerId(g3b)
set R3b=d3b
if R3b==A[f3b] then
if u[f3b]==15 then
set F3b=50.*1.3
set OT[f3b]=R2I(F3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set k3b=n3b
if GetUnitTypeId(k3b)==$6E7A6F6D then
set OT[f3b]=18
else
set j3b=50.*.7
set OT[f3b]=R2I(j3b)
endif
else
set OT[f3b]=50
endif
elseif R3b==D[f3b] then
if u[f3b]==15 then
set x3b=50.*1.3
set OT[f3b]=R2I(x3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set v3b=50.*.7
set OT[f3b]=R2I(v3b)
else
set OT[f3b]=50
endif
elseif R3b==H[f3b] then
if u[f3b]==15 then
set m3b=75.*1.3
set OT[f3b]=R2I(m3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set Q3b=75.*.7
set OT[f3b]=R2I(Q3b)
else
set OT[f3b]=75
endif
elseif R3b==J[f3b] then
if u[f3b]==15 then
set W3b=100.*1.3
set OT[f3b]=R2I(W3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set E3b=100.*.7
set OT[f3b]=R2I(E3b)
else
set OT[f3b]=100
endif
elseif R3b==K[f3b] then
if u[f3b]==15 then
set Z3b=125.*1.3
set OT[f3b]=R2I(Z3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set U3b=125.*.7
set OT[f3b]=R2I(U3b)
else
set OT[f3b]=125
endif
elseif R3b==L[f3b] then
if u[f3b]==15 then
set I3b=150.*1.3
set OT[f3b]=R2I(I3b)
elseif u[f3b]==4 or u[f3b]==13 or u[f3b]==17 then
set P3b=150.*.7
set OT[f3b]=R2I(P3b)
else
set OT[f3b]=150
endif
endif
set Fr[f3b]=Fr[f3b]-OT[f3b]
endif
set n3b=null
set T3b=null
set Y3b=null
set G3b=null
set g3b=null
set h3b=null
set k3b=null
endfunction
function A5S takes nothing returns boolean
return true
endfunction
function Wqi takes player rei returns nothing
local player aei=rei
local integer sei=GetPlayerId(aei)
local group tei=CreateGroup()
local filterfunc iei=Filter(k0w)
local unit Sei
local filterfunc cei
local group oei
local unit Oei
local group lei
local integer bei
local unit yei
local unit pei
local unit eei
local unit qei
local group nei
local group dei
local unit fei
local unit Rei
local unit Tei
local unitstate Yei
local unit Gei
local unittype gei
local unit hei
local unit Fei
local unit kei
local real jei
local unit xei
local integer vei
local unit mei
local integer Qei
local unit Wei
local string Eei
local widget Zei
local unit Uei
local unittype Iei
local unit Pei
local unit Aei
local unit Dei
local real Hei
local unit Jei
local integer Kei
local unit Lei
local integer Xei
local unit Cei
local string Vei
local widget Bei
local unit Nei
local unit Mei
local unit wqi
local real uqi
local unit rqi
local integer sqi
local unit tqi
local integer iqi
local unit Sqi
local string cqi
local widget oqi
local unit Oqi
local unit lqi
local unit bqi
local real yqi
local unit pqi
local integer eqi
local unit qqi
local integer aqi
local unit nqi
local string dqi
local widget fqi
local group Rqi
local boolexpr Tqi
local group Yqi
local boolexpr Gqi
local boolean gqi
local player hqi
local real Fqi
local player kqi
local real jqi
local player xqi
local real vqi
local player mqi
local real Qqi
call GroupEnumUnitsInRange(tei,iT[sei],ST[sei],700.,iei)
set Sei=FirstOfGroup(tei)
if Sei!=null then
set cei=Filter(j0w)
set oei=CreateGroup()
call GroupEnumUnitsInRange(oei,iT[sei],ST[sei],700.,cei)
set lei=oei
loop
set nei=lei
exitwhen not (FirstOfGroup(nei)!=null)
set dei=lei
set fei=FirstOfGroup(dei)
call GroupRemoveUnit(dei,fei)
set Oei=fei
if Oei!=null then
set bei=GetUnitPointValue(Oei)
set Rei=Oei
set Tei=Rei
set Yei=UNIT_STATE_MANA
if GetUnitState(Tei,Yei)>0. and bei==12 then
set Gei=Oei
set gei=UNIT_TYPE_RANGED_ATTACKER
set gqi=IsUnitType(Gei,gei)==true
else
set gqi=false
endif
if gqi then
set hqi=Player(sei+4)
set hei=Oei
set Fqi=GetUnitX(hei)
set Fei=Oei
set yei=CreateUnit(hqi,$75303030,Fqi,GetUnitY(Fei),0.)
set kei=yei
set jei=3.
call UnitApplyTimedLife(kei,$42544C46,jei)
set xei=yei
set vei=$41323735
call UnitAddAbility(xei,vei)
set mei=yei
set Qei=$41313136
call UnitAddAbility(mei,Qei)
set Wei=yei
set Eei="parasite"
set Zei=Oei
call IssueTargetOrder(Wei,Eei,Zei)
else
set Uei=Oei
set Iei=UNIT_TYPE_RANGED_ATTACKER
if (IsUnitType(Uei,Iei)==true and bei==12) or bei==24 then
set kqi=Player(sei+4)
set Pei=Oei
set jqi=GetUnitX(Pei)
set Aei=Oei
set pei=CreateUnit(kqi,$75303030,jqi,GetUnitY(Aei),0.)
set Dei=pei
set Hei=3.
call UnitApplyTimedLife(Dei,$42544C46,Hei)
set Jei=pei
set Kei=$41323734
call UnitAddAbility(Jei,Kei)
set Lei=pei
set Xei=$41313136
call UnitAddAbility(Lei,Xei)
set Cei=pei
set Vei="parasite"
set Bei=Oei
call IssueTargetOrder(Cei,Vei,Bei)
elseif bei==18 or bei==30 then
set xqi=Player(sei+4)
set Nei=Oei
set vqi=GetUnitX(Nei)
set Mei=Oei
set eei=CreateUnit(xqi,$75303030,vqi,GetUnitY(Mei),0.)
set wqi=eei
set uqi=3.
call UnitApplyTimedLife(wqi,$42544C46,uqi)
set rqi=eei
set sqi=$41323736
call UnitAddAbility(rqi,sqi)
set tqi=eei
set iqi=$41313136
call UnitAddAbility(tqi,iqi)
set Sqi=eei
set cqi="parasite"
set oqi=Oei
call IssueTargetOrder(Sqi,cqi,oqi)
else
set mqi=Player(sei+4)
set Oqi=Oei
set Qqi=GetUnitX(Oqi)
set lqi=Oei
set qei=CreateUnit(mqi,$75303030,Qqi,GetUnitY(lqi),0.)
set bqi=qei
set yqi=3.
call UnitApplyTimedLife(bqi,$42544C46,yqi)
set pqi=qei
set eqi=$41323733
call UnitAddAbility(pqi,eqi)
set qqi=qei
set aqi=$41313136
call UnitAddAbility(qqi,aqi)
set nqi=qei
set dqi="parasite"
set fqi=Oei
call IssueTargetOrder(nqi,dqi,fqi)
endif
endif
endif
endloop
set Rqi=oei
call DestroyGroup(Rqi)
set Tqi=cei
call DestroyBoolExpr(Tqi)
endif
set Yqi=tei
call DestroyGroup(Yqi)
set Gqi=iei
call DestroyBoolExpr(Gqi)
set tei=null
set iei=null
set Sei=null
set cei=null
set oei=null
set Oei=null
set lei=null
set yei=null
set pei=null
set eei=null
set qei=null
set aei=null
set nei=null
set dei=null
set fei=null
set Rei=null
set Tei=null
set Yei=null
set Gei=null
set gei=null
set hei=null
set Fei=null
set kei=null
set xei=null
set mei=null
set Wei=null
set Zei=null
set Uei=null
set Iei=null
set Pei=null
set Aei=null
set Dei=null
set Jei=null
set Lei=null
set Cei=null
set Bei=null
set Nei=null
set Mei=null
set wqi=null
set rqi=null
set tqi=null
set Sqi=null
set oqi=null
set Oqi=null
set lqi=null
set bqi=null
set pqi=null
set qqi=null
set nqi=null
set fqi=null
set Rqi=null
set Tqi=null
set Yqi=null
set Gqi=null
set hqi=null
set kqi=null
set xqi=null
set mqi=null
endfunction
function A5s takes nothing returns nothing
local integer m5s=GetSpellAbilityId()
local unit Q5s
local player W5s
local integer E5s
local unit Z5s
local player U5s
local string I5s
local real P5s
if m5s==$41305130 then
set Q5s=GetSpellAbilityUnit()
set Z5s=Q5s
set W5s=GetOwningPlayer(Z5s)
set U5s=W5s
set E5s=GetPlayerId(U5s)
set iT[E5s]=GetSpellTargetX()
set ST[E5s]=GetSpellTargetY()
set I5s=Aw[E5s]+GetPlayerName(Player(E5s))+"|r"+" used |cff008000No One Escapes Death|r"
set P5s=10.
call DisplayTimedTextToPlayer(IY,0.,0.,P5s,I5s)
call PingMinimapForForceEx(bj_FORCE_ALL_PLAYERS,iT[E5s],ST[E5s],5.,1,0.,128.,0.)
call Wqi(W5s)
endif
set Q5s=null
set W5s=null
set Z5s=null
set U5s=null
endfunction
function A7b takes nothing returns boolean
local unit U7b=GetFilterUnit()
local unittype I7b=UNIT_TYPE_STRUCTURE
local boolean P7b=IsUnitType(U7b,I7b)
set U7b=null
set I7b=null
return P7b
endfunction
function A8l takes nothing returns nothing
local unit h8l=GetEnteringUnit()
local unit k8l=h8l
local integer F8l=GetUnitTypeId(k8l)
local unit j8l=h8l
local unit x8l
local integer v8l
local unit m8l
local integer Q8l
local unit W8l
local integer E8l
local unit Z8l
local integer U8l
local unit I8l
local integer P8l
if TG[GetPlayerId(GetOwningPlayer(j8l))-4]==true then
if F8l==$484D3068 or F8l==$484D306A or F8l==$484D306B or F8l==$484D3069 or F8l==$78303169 or F8l==$7830316A or F8l==$7830316B then
set x8l=h8l
set v8l=$41706976
if GetUnitAbilityLevel(x8l,v8l)==0 then
set m8l=h8l
set Q8l=$41706976
call UnitAddAbility(m8l,Q8l)
endif
endif
if F8l==$6E30304F or F8l==$78303176 or F8l==$78303177 or F8l==$7830316D then
set W8l=h8l
set E8l=$41706976
call UnitAddAbility(W8l,E8l)
set Z8l=h8l
set U8l=$41304A31
call UnitAddAbility(Z8l,U8l)
endif
if F8l==$6E30304F or F8l==$78303176 or F8l==$78303177 or F8l==$7830316D or F8l==$6E303051 or F8l==$78303178 then
set I8l=h8l
set P8l=$41706976
call UnitAddAbility(I8l,P8l)
endif
endif
set h8l=null
set k8l=null
set j8l=null
set x8l=null
set m8l=null
set W8l=null
set Z8l=null
set I8l=null
endfunction
function Dgy takes group Igy returns unit
local group Agy=Igy
local integer Pgy
set yq=0
call ForGroup(Agy,dN)
set Pgy=yq
set pq=1+GetRandomInt(0,Pgy-1)
set eq=null
call ForGroup(Igy,V2)
set Agy=null
return eq
endfunction
function sAo takes string cPo returns nothing
local integer oPo
local unit OPo
local real lPo
local real bPo
local integer yPo
local group pPo
local filterfunc ePo
local unit qPo
local integer aPo
local unit nPo
local unit dPo
local unit fPo
local unit RPo
local string TPo
local string YPo
local real GPo
local real gPo
local unit hPo
local unit FPo
local unit kPo
local unit jPo
local integer xPo
local group vPo
local group mPo
local string QPo
local integer WPo
local real EPo
local integer ZPo
local string UPo
local unit IPo
local unit PPo
local unit APo
local unit DPo
local real HPo
local unit JPo
local integer KPo
local unit LPo
local integer XPo
local integer CPo
local unit VPo
local string BPo
local real NPo
local player MPo
local real wAo
local real uAo
local real rAo
set aW[qW]=cPo
set qW=qW+1
set oPo=GetSpellAbilityId()
if oPo==$41323547 then
set OPo=GetSpellAbilityUnit()
set dPo=OPo
set lPo=GetUnitX(dPo)
set fPo=OPo
set bPo=GetUnitY(fPo)
set RPo=OPo
set TPo="Spell Throw"
call SetUnitAnimation(RPo,TPo)
set YPo="Blink Gold Caster.mdx"
set hPo=OPo
set FPo=hPo
set NPo=GetUnitX(FPo)
set kPo=hPo
set uAo=NPo
set rAo=GetUnitY(kPo)
set GPo=uAo
set gPo=rAo
call AddSpecialEffect(YPo,GPo,gPo)
set jPo=OPo
set xPo=oPo
set yPo=GetUnitAbilityLevel(jPo,xPo)
set pPo=CreateGroup()
set ePo=Filter(Usw)
call GroupEnumUnitsInRange(pPo,lPo,bPo,900.,ePo)
set vPo=pPo
set mPo=vPo
if not (FirstOfGroup(mPo)!=null)==false then
set qPo=Dgy(pPo)
set QPo="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_WarianWrynn in WarianWrynn, line 422"
set aW[qW]=QPo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set WPo=fF
set RF[WPo]=846
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_WarianWrynn.","when calling error in WarianWrynn, line 422")
set WPo=0
endif
else
set dF=dF-1
set WPo=nF[dF]
set RF[WPo]=846
endif
set qW=qW-1
set aPo=WPo
set sW[aPo]=OPo
set tW[aPo]=qPo
set iW[aPo]=yPo
set SW[aPo]=pPo
set cW[aPo]=ePo
set EPo=1.
set ZPo=aPo
set UPo="when calling doAfter in WarianWrynn, line 422"
set aW[qW]=UPo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),EPo,ZPo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set IPo=OPo
set MPo=GetOwningPlayer(IPo)
set PPo=OPo
set wAo=GetUnitX(PPo)
set APo=OPo
set nPo=CreateUnit(MPo,$75303030,wAo,GetUnitY(APo),0.)
set DPo=nPo
set HPo=3.
call UnitApplyTimedLife(DPo,$42544C46,HPo)
set JPo=nPo
set KPo=$41323545
call UnitAddAbility(JPo,KPo)
set LPo=nPo
set XPo=$41323545
set CPo=yPo
call SetUnitAbilityLevel(LPo,XPo,CPo)
set VPo=nPo
set BPo="stomp"
call IssueImmediateOrder(VPo,BPo)
endif
endif
set qW=qW-1
set OPo=null
set pPo=null
set ePo=null
set qPo=null
set nPo=null
set dPo=null
set fPo=null
set RPo=null
set hPo=null
set FPo=null
set kPo=null
set jPo=null
set vPo=null
set mPo=null
set IPo=null
set PPo=null
set APo=null
set DPo=null
set JPo=null
set LPo=null
set VPo=null
set MPo=null
endfunction
function A8r takes nothing returns nothing
set qW=0
call sAo("via function reference WarianWrynn, line 408")
endfunction
function emO takes playerunitevent CvO,code VvO,code BvO,code NvO returns nothing
local handle imO=CvO
local integer MvO=GetHandleId(imO)
local integer wmO
local filterfunc umO
local trigger rmO
local player smO
local playerunitevent tmO
local trigger SmO
local player cmO
local playerunitevent omO
local boolexpr OmO
local trigger lmO
local boolexpr bmO
local trigger ymO
local code pmO
if rG[MvO]==null then
set rG[MvO]=CreateTrigger()
set wmO=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen wmO<0
set rmO=rG[MvO]
set smO=UY[wmO]
set tmO=CvO
if VvO!=null then
set umO=Filter(VvO)
else
set umO=null
endif
set SmO=rmO
set cmO=smO
set omO=tmO
set OmO=umO
call TriggerRegisterPlayerUnitEvent(SmO,cmO,omO,OmO)
set wmO=wmO-1
endloop
endif
if BvO!=null then
set lmO=rG[MvO]
set bmO=Filter(BvO)
call TriggerAddCondition(lmO,bmO)
endif
if NvO!=null then
set ymO=rG[MvO]
set pmO=NvO
call TriggerAddAction(ymO,pmO)
endif
set umO=null
set rmO=null
set smO=null
set tmO=null
set imO=null
set SmO=null
set cmO=null
set omO=null
set OmO=null
set lmO=null
set bmO=null
set ymO=null
endfunction
function ADp takes nothing returns boolean
local playerunitevent IDp=EVENT_PLAYER_UNIT_SPELL_CAST
local code PDp=G7
call emO(IDp,null,PDp,null)
set IDp=null
return true
endfunction
function AFu takes nothing returns nothing
local texttag UFu
local string IFu
local real PFu
if yG>0 then
set yG=yG-1
set UFu=OG
set IFu=I2S(yG)
set PFu=13.
call SetTextTagText(UFu,IFu,PFu*.0023)
endif
set UFu=null
endfunction
function RTS takes unit OTS,integer lTS returns item
local item bTS=null
local integer yTS=0
local unit eTS=OTS
local integer pTS=UnitInventorySize(eTS)-1
local item qTS
local unit aTS
local integer nTS
local unit dTS
local integer fTS
loop
exitwhen yTS>pTS
set aTS=OTS
set nTS=yTS
set qTS=UnitItemInSlot(aTS,nTS)
if GetItemTypeId(qTS)==lTS then
set dTS=OTS
set fTS=yTS
set bTS=UnitItemInSlot(dTS,fTS)
exitwhen true
endif
set yTS=yTS+1
endloop
set vtw=bTS
set bTS=null
set eTS=null
set qTS=null
set aTS=null
set dTS=null
return vtw
endfunction
function AIi takes nothing returns nothing
local unit fIi=GetAttacker()
local unit TIi=fIi
local unit RIi
local unit YIi
local integer GIi
local unit gIi
local unit hIi
local unit FIi
local unit kIi
local unit jIi
local integer xIi
local unit vIi
local real mIi
local unit QIi
local integer WIi
local widget EIi
local boolean ZIi
local boolean UIi
local player IIi
local real PIi
if GetUnitTypeId(TIi)==$4F677268 then
set YIi=fIi
set GIi=$49303244
set ZIi=RTS(YIi,GIi)!=null==true
else
set ZIi=false
endif
if ZIi then
set gIi=fIi
set UIi=IsUnitIllusion(gIi)==false
else
set UIi=false
endif
if UIi then
if GetRandomInt(1,100)<=5 then
set hIi=fIi
set IIi=GetOwningPlayer(hIi)
set FIi=fIi
set PIi=GetUnitX(FIi)
set kIi=fIi
set RIi=CreateUnit(IIi,$75303030,PIi,GetUnitY(kIi),0.)
set jIi=RIi
set xIi=$41313557
call UnitAddAbility(jIi,xIi)
set vIi=RIi
set mIi=3.
call UnitApplyTimedLife(vIi,$42544C46,mIi)
set QIi=RIi
set WIi=852274
set EIi=fIi
call IssueTargetOrderById(QIi,WIi,EIi)
endif
endif
set fIi=null
set RIi=null
set TIi=null
set YIi=null
set gIi=null
set hIi=null
set FIi=null
set kIi=null
set jIi=null
set vIi=null
set QIi=null
set EIi=null
set IIi=null
endfunction
function MCc takes string YCc returns nothing
local unit GCc
local integer gCc
local trigger hCc
local real FCc
local real kCc
local group jCc
local integer xCc
local filterfunc vCc
local unit mCc
local group QCc
local integer WCc
local unit ECc
local integer ZCc
local trigger UCc
local unit ICc
local unit PCc
local unit ACc
local group DCc
local group HCc
local unit JCc
local group KCc
local boolexpr LCc
local string XCc
local integer CCc
local real VCc
local integer BCc
local string NCc
set aW[qW]=YCc
set qW=qW+1
set GCc=GetTriggerUnit()
set ECc=GCc
set ZCc=$41313457
set gCc=GetUnitAbilityLevel(ECc,ZCc)
if GetRandomInt(1,100)<=18+2*gCc then
set hCc=GetTriggeringTrigger()
set UCc=hCc
call DisableTrigger(UCc)
set ICc=GCc
set FCc=GetUnitX(ICc)
set PCc=GCc
set kCc=GetUnitY(PCc)
set ACc=GCc
set Qa=GetOwningPlayer(ACc)
set jCc=CreateGroup()
set xCc=160+20*gCc
set vCc=Filter(q5)
call GroupEnumUnitsInRange(jCc,FCc,kCc,350.,vCc)
call SetUnitAnimation(GCc,"Attack 2")
call DestroyEffect(AddSpecialEffect("Culling Slash.mdl",FCc,kCc))
set QCc=jCc
loop
set DCc=QCc
exitwhen not (FirstOfGroup(DCc)!=null)
set HCc=QCc
set JCc=FirstOfGroup(HCc)
call GroupRemoveUnit(HCc,JCc)
set mCc=JCc
call UnitDamageTarget(GCc,mCc,I2R(xCc),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GlaiveMissile\\GlaiveMissileTarget.mdl",mCc,"origin"))
endloop
set KCc=jCc
call DestroyGroup(KCc)
set LCc=vCc
call DestroyBoolExpr(LCc)
set Qa=null
set XCc="when calling alloc_CallbackSingle_doAfter_Hiram in Hiram, line 244"
set aW[qW]=XCc
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set CCc=fF
set RF[CCc]=716
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Hiram.","when calling error in Hiram, line 244")
set CCc=0
endif
else
set dF=dF-1
set CCc=nF[dF]
set RF[CCc]=716
endif
set qW=qW-1
set WCc=CCc
set Vx[WCc]=hCc
set VCc=2.
set BCc=WCc
set NCc="when calling doAfter in Hiram, line 244"
set aW[qW]=NCc
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),VCc,BCc,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set GCc=null
set hCc=null
set jCc=null
set vCc=null
set mCc=null
set QCc=null
set ECc=null
set UCc=null
set ICc=null
set PCc=null
set ACc=null
set DCc=null
set HCc=null
set JCc=null
set KCc=null
set LCc=null
endfunction
function AIl takes nothing returns nothing
set qW=0
call MCc("via function reference Hiram, line 252")
endfunction
function AIp takes nothing returns boolean
local trigger ZIp
local trigger UIp
local playerunitevent IIp
local integer PIp
set gg=CreateTrigger()
set Fg=CreateTimer()
set ZIp=gg
call DisableTrigger(ZIp)
set UIp=gg
set IIp=EVENT_PLAYER_HERO_LEVEL
set PIp=0
loop
call TriggerRegisterPlayerUnitEvent(UIp,Player(PIp),IIp,null)
set PIp=PIp+1
exitwhen PIp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(gg,trw)
set ZIp=null
set UIp=null
set IIp=null
return true
endfunction
function ANS takes nothing returns nothing
local rect PNS=co
set Xo[3]=Location(GetRectCenterX(PNS),GetRectCenterY(PNS))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set PNS=null
endfunction
function Z0s takes integer m0s,integer Q0s,unit W0s,string E0s returns nothing
if Q0s<0 or Q0s>=6 then
call L8c("Index out of Bounds",E0s)
elseif Q0s<=2 then
if Q0s<=1 then
if Q0s<=0 then
set gW[m0s]=W0s
else
set hW[m0s]=W0s
endif
else
set FW[m0s]=W0s
endif
elseif Q0s<=4 then
if Q0s<=3 then
set kW[m0s]=W0s
else
set jW[m0s]=W0s
endif
else
set xW[m0s]=W0s
endif
endfunction
function X2l takes integer A2l,unit D2l,string H2l returns nothing
local integer J2l
local unit K2l
local string L2l
set aW[qW]=H2l
set qW=qW+1
if QF[A2l]==0 then
if A2l==0 then
call L8c("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 66")
else
call L8c("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 66")
endif
endif
set J2l=A2l
set K2l=D2l
set L2l="when calling enqueue in DummyRecycler, line 66"
set aW[qW]=L2l
set qW=qW+1
if Kj[J2l]<6 then
set Kj[J2l]=Kj[J2l]+1
set Jj[J2l]=ModuloInteger(Jj[J2l]+1,6)
call Z0s(J2l,Jj[J2l],K2l,"when writing array ArrayQueue_units in DummyRecycler, line 70")
else
call L8c("Queue Overflow","when calling error in DummyRecycler, line 72")
endif
set qW=qW-1
set qW=qW-1
set K2l=null
endfunction
function Z3i takes real UMi,real IMi,player PMi,real AMi returns unit
local player VMi=PMi
local integer BMi=$7864756D
local real k3i=UMi
local real j3i=IMi
local real NMi=k3i
local real MMi=j3i
local real x3i=AMi
local real w3i=x3i
local player Y3i=VMi
local integer G3i=BMi
local real g3i=NMi
local real h3i=MMi
local real v3i=w3i
local real u3i=v3i
local unit DMi=CreateUnit(Y3i,G3i,g3i,h3i,u3i*57.295779513)
local unit HMi=DMi
local unit r3i=HMi
local integer s3i=$416D7266
local unit JMi
local unit KMi
local unit LMi
local unit XMi
local unit CMi
local unit t3i
local integer i3i
local unit S3i
local integer c3i
local unit o3i
local integer O3i
local unit l3i
local real b3i
local real y3i
local unit p3i
local unit e3i
local unit q3i
local real a3i
local unit n3i
local real d3i
local unit f3i
local real R3i
local real T3i
local unit F3i
local real m3i
local real Q3i
local real W3i
local real E3i
call UnitAddAbility(r3i,s3i)
set JMi=HMi
set t3i=JMi
set i3i=$416D7266
call UnitRemoveAbility(t3i,i3i)
set KMi=JMi
set S3i=KMi
set c3i=$78726F74
call UnitAddAbility(S3i,c3i)
set LMi=KMi
set o3i=LMi
set O3i=$78726F74
call UnitRemoveAbility(o3i,O3i)
set XMi=LMi
set l3i=XMi
set m3i=UMi
set Q3i=IMi
set b3i=m3i
set y3i=Q3i
set p3i=l3i
set q3i=p3i
set a3i=b3i
call SetUnitX(q3i,a3i)
set e3i=p3i
set n3i=e3i
set d3i=y3i
call SetUnitY(n3i,d3i)
set CMi=XMi
set f3i=CMi
set W3i=AMi
set R3i=W3i
set F3i=f3i
set E3i=R3i
set T3i=E3i
call SetUnitFacing(F3i,T3i*57.295779513)
set xtw=DMi
set DMi=null
set HMi=null
set JMi=null
set KMi=null
set LMi=null
set XMi=null
set CMi=null
set VMi=null
set r3i=null
set t3i=null
set S3i=null
set o3i=null
set l3i=null
set p3i=null
set e3i=null
set q3i=null
set n3i=null
set f3i=null
set Y3i=null
set F3i=null
return xtw
endfunction
function uei takes string Cpi returns integer
local integer Vpi
local string Bpi
local integer Npi
local integer Mpi
local integer wei
set aW[qW]=Cpi
set qW=qW+1
set Bpi="when calling alloc_ArrayQueue in DummyRecycler, line 60"
set aW[qW]=Bpi
set qW=qW+1
if vF==0 then
if mF<32768 then
set mF=mF+1
set Npi=mF
set QF[Npi]=631
else
call L8c("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 60")
set Npi=0
endif
else
set vF=vF-1
set Npi=xF[vF]
set QF[Npi]=631
endif
set qW=qW-1
set Vpi=Npi
set Mpi=Vpi
set wei=Mpi
set Hj[wei]=0
set Jj[wei]=0
set Kj[wei]=0
set qW=qW-1
return Vpi
endfunction
function qml takes string Mvl returns boolean
local integer wml
local integer uml
local real rml
local integer sml
local integer tml
local unit iml
local real Sml
local real cml
local real oml
local real Oml
local real lml
local real bml
local real yml
local real pml
local real eml
set aW[qW]=Mvl
set qW=qW+1
set ep=360*1./8
call CreateTimer()
set wml=0
set uml=8-1
loop
exitwhen wml>uml
set qp[wml]=uei("when calling new_ArrayQueue in DummyRecycler, line 153")
set lml=wml*ep
set rml=lml
set sml=0
set tml=6-1
loop
exitwhen sml>tml
set bml=Vd
set yml=Bd
set Sml=bml
set cml=yml
set pml=16.
set eml=16.
set oml=pml
set Oml=eml
set iml=Z3i(Sml-oml,cml-Oml,yl,rml)
call X2l(qp[wml],iml,"when calling enqueue in DummyRecycler, line 157")
set sml=sml+1
endloop
set wml=wml+1
endloop
set qW=qW-1
set iml=null
return true
endfunction
function AQt takes nothing returns boolean
set qW=0
return qml("via function reference DummyRecycler, line 1")
endfunction
function ATS takes nothing returns nothing
local unit TTS=GetAttacker()
local unit YTS=TTS
local integer GTS=$42303853
local unit gTS
local integer hTS
local unit FTS
local unittype kTS
local unit jTS
local integer xTS
local unit vTS
local integer mTS
local unit QTS
local integer WTS
local unit ETS
local integer ZTS
local boolean UTS
local boolean ITS
local boolean PTS
if GetUnitAbilityLevel(YTS,GTS)>0==true then
set gTS=TTS
set hTS=$41323956
set UTS=GetUnitAbilityLevel(gTS,hTS)==0
else
set UTS=false
endif
if UTS then
set FTS=TTS
set kTS=UNIT_TYPE_HERO
set ITS=IsUnitType(FTS,kTS)==false
else
set ITS=false
endif
if ITS then
set jTS=TTS
set xTS=$41323956
call UnitAddAbility(jTS,xTS)
else
set vTS=TTS
set mTS=$42303853
if GetUnitAbilityLevel(vTS,mTS)>0==false then
set QTS=TTS
set WTS=$41323956
set PTS=GetUnitAbilityLevel(QTS,WTS)==1
else
set PTS=false
endif
if PTS then
set ETS=TTS
set ZTS=$41323956
call UnitRemoveAbility(ETS,ZTS)
endif
endif
set TTS=null
set YTS=null
set gTS=null
set FTS=null
set kTS=null
set jTS=null
set vTS=null
set QTS=null
set ETS=null
endfunction
function AUs takes nothing returns boolean
return true
endfunction
function AWy takes nothing returns boolean
local playerunitevent IWy
local code PWy
set xg=CreateSound("ValeeraPick.mp3",false,false,false,127,127,"DefaultEAXON")
set vg=CreateSound("ValeeraAttack.mp3",false,false,false,127,127,"DefaultEAXON")
call SetSoundDuration(xg,5374)
call SetSoundChannel(xg,0)
call SetSoundVolume(xg,250)
call SetSoundPitch(xg,1.)
call SetSoundDuration(vg,5374)
call SetSoundChannel(vg,0)
call SetSoundVolume(vg,250)
call SetSoundPitch(vg,1.)
set IWy=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set PWy=nrw
call emO(IWy,null,PWy,null)
set IWy=null
return true
endfunction
function AYc takes nothing returns nothing
local unit ZYc=GetTriggerUnit()
local unit UYc=ZYc
local unit IYc
local unit PYc
if GetUnitTypeId(UYc)==$6F303248 then
set IYc=ZYc
if GetPlayerTechCount(GetOwningPlayer(IYc),$52303545,true)==2 then
set PYc=ZYc
call SetPlayerTechResearched(GetOwningPlayer(PYc),$52303454,3)
endif
endif
set ZYc=null
set UYc=null
set IYc=null
set PYc=null
endfunction
function AYu takes nothing returns nothing
local unit mYu=GetKillingUnit()
local unit QYu=mYu
local integer WYu=$41323031
local unit EYu
local unit ZYu
local string UYu
local widget IYu
local boolean PYu
if GetUnitAbilityLevel(QYu,WYu)>=0 then
set EYu=mYu
set PYu=GetUnitTypeId(EYu)==$4F303432
else
set PYu=false
endif
if PYu then
set ZYu=mYu
set UYu="bloodlust"
set IYu=mYu
call IssueTargetOrder(ZYu,UYu,IYu)
endif
set mYu=null
set QYu=null
set EYu=null
set ZYu=null
set IYu=null
endfunction
function AZl takes nothing returns boolean
return true
endfunction
function Aao takes nothing returns nothing
call EnumItemsInRect(bj_mapInitialPlayableArea,null,H3)
endfunction
function Abc takes nothing returns boolean
return true
endfunction
function AeS takes nothing returns boolean
local unit veS=GetFilterUnit()
local unit meS=veS
local player QeS=on
local unit WeS
local unittype EeS
local unit ZeS
local integer UeS
local boolean IeS
local boolean PeS
if meS!=null and IsUnitAlly(meS,QeS) then
set WeS=veS
set EeS=UNIT_TYPE_STRUCTURE
set IeS=IsUnitType(WeS,EeS)==true
else
set IeS=false
endif
if IeS then
set ZeS=veS
set UeS=$41303853
set PeS=not (GetUnitAbilityLevel(ZeS,UeS)>0)
else
set PeS=false
endif
set veS=null
set meS=null
set QeS=null
set WeS=null
set EeS=null
set ZeS=null
return PeS
endfunction
function AjO takes nothing returns boolean
local trigger xjO
local trigger vjO
local playerunitevent mjO
local trigger QjO
local playerunitevent WjO
local integer EjO
local trigger ZjO
local boolexpr UjO
local trigger IjO
local code PjO
set rq=CreateTrigger()
set xjO=rq
call DisableTrigger(xjO)
set vjO=rq
set mjO=EVENT_PLAYER_UNIT_DEATH
set QjO=vjO
set WjO=mjO
set EjO=0
loop
call TriggerRegisterPlayerUnitEvent(QjO,Player(EjO),WjO,null)
set EjO=EjO+1
exitwhen EjO==bj_MAX_PLAYER_SLOTS
endloop
set ZjO=rq
set UjO=Condition(E2)
call TriggerAddCondition(ZjO,UjO)
set IjO=rq
set PjO=Z2
call TriggerAddAction(IjO,PjO)
set xjO=null
set vjO=null
set mjO=null
set QjO=null
set WjO=null
set ZjO=null
set UjO=null
set IjO=null
return true
endfunction
function Alt takes nothing returns nothing
local unit nlt=GetTriggerUnit()
local unit Tlt=nlt
local integer dlt=GetUnitTypeId(Tlt)
local unit Ylt=nlt
local player flt=GetOwningPlayer(Ylt)
local integer Rlt=GetPlayerId(flt)
local sound Glt
local unit glt
local real hlt
local real Flt
local real klt
local sound jlt
local unit xlt
local real vlt
local real mlt
local real Qlt
local unit Wlt
local integer Elt
local trigger Zlt
local trigger Ult
local trigger Ilt
local trigger Plt
if dlt==$6E6D7236 then
set Glt=Is
if Glt!=null then
call StartSound(Glt)
endif
set glt=nlt
set hlt=120.
set Flt=120.
set klt=120.
call SetUnitScale(glt,hlt*.01,Flt*.01,klt*.01)
set i[Rlt]=$456B6565
endif
if dlt==$65616F77 then
set jlt=Pd
if jlt!=null then
call StartSound(jlt)
endif
set xlt=nlt
set vlt=70.
set mlt=70.
set Qlt=70.
call SetUnitScale(xlt,vlt*.01,mlt*.01,Qlt*.01)
set t[Rlt]=$45303039
endif
if dlt==$65646F62 then
set lg=nlt
call SetPlayerTechResearched(flt,$52303649,1)
set Wlt=lg
set Elt=$41313431
call UnitAddAbility(Wlt,Elt)
set bg=Player(Rlt+4)
endif
if dlt==$65616F6D then
call SetPlayerTechResearched(flt,$52303253,1)
call SetPlayerTechResearched(Player(Rlt+4),$52303253,1)
set Zlt=dG
call EnableTrigger(Zlt)
set nG[Rlt]=true
endif
if dlt==$65616F65 then
call RemoveUnitFromStock(O[Rlt],D[Rlt])
call RemoveUnitFromStock(b[Rlt],D[Rlt])
call RemoveUnitFromStock(l[Rlt],D[Rlt])
set D[Rlt]=$65647279
call AddUnitToStock(O[Rlt],D[Rlt],1,3)
call AddUnitToStock(b[Rlt],D[Rlt],1,3)
call AddUnitToStock(l[Rlt],D[Rlt],1,3)
endif
if dlt==$78303170 then
set Ult=PG
call EnableTrigger(Ult)
call RemoveUnitFromStock(O[Rlt],H[Rlt])
call RemoveUnitFromStock(b[Rlt],H[Rlt])
call RemoveUnitFromStock(l[Rlt],H[Rlt])
set H[Rlt]=$7830316F
call AddUnitToStock(O[Rlt],H[Rlt],1,3)
call AddUnitToStock(b[Rlt],H[Rlt],1,3)
call AddUnitToStock(l[Rlt],H[Rlt],1,3)
endif
if dlt==$65747270 then
call SetPlayerTechResearched(flt,$5230344F,1)
call SetPlayerTechResearched(Player(Rlt+4),$5230344F,1)
set Ilt=dp
call EnableTrigger(Ilt)
endif
if dlt==$6564656E then
set J[Rlt]=$65303044
set Plt=wT
call EnableTrigger(Plt)
endif
if dlt==$65646F73 then
set K[Rlt]=$6563686D
endif
if dlt==$6E303354 then
set L[Rlt]=$68303250
endif
if dlt==$65746F6C then
call SetPlayerTechResearched(flt,$52303252,1)
call SetPlayerTechResearched(Player(Rlt+4),$52303252,1)
endif
set nlt=null
set flt=null
set Tlt=null
set Ylt=null
set Glt=null
set glt=null
set jlt=null
set xlt=null
set Wlt=null
set Zlt=null
set Ult=null
set Ilt=null
set Plt=null
endfunction
function Aot takes nothing returns nothing
local unit hot=GetEnteringUnit()
local unit xot=hot
local integer Fot=GetUnitTypeId(xot)
local unit vot=hot
local player kot=GetOwningPlayer(vot)
local integer jot
local unit mot
local integer Qot
local unit Wot
local integer Eot
local unit Zot
local integer Uot
local unit Iot
local integer Pot
if Fot==$6F726169 or Fot==$6F737731 and GetPlayerTechCount(kot,$52303047,true)>0 then
set jot=GetPlayerTechCount(kot,$52303047,true)
if jot==1 then
set mot=hot
set Qot=$41303739
call UnitAddAbility(mot,Qot)
elseif jot==2 then
set Wot=hot
set Eot=$41303255
call UnitAddAbility(Wot,Eot)
elseif jot==3 then
set Zot=hot
set Uot=$41303258
call UnitAddAbility(Zot,Uot)
else
set Iot=hot
set Pot=$4130484F
call UnitAddAbility(Iot,Pot)
endif
endif
set hot=null
set kot=null
set xot=null
set vot=null
set mot=null
set Wot=null
set Zot=null
set Iot=null
endfunction
function Aow takes nothing returns nothing
local unit sow=GetTriggerUnit()
local unit iow=sow
local player tow=GetOwningPlayer(iow)
local unit Sow
local string cow
local real oow
local real Oow
local unit low
local unittype bow
local unit yow
local string pow
local real eow
local real qow
local unit aow
local unittype now
local unit dow
local string fow
local real Row
local real Tow
local unit Yow
local unittype Gow
local unit gow
local string how
local real Fow
local real kow
local unit jow
local unittype xow
local real vow
local real mow
local real Qow
local real Wow
local real Eow
local real Zow
local real Uow
local real Iow
if tow==fu then
if (Ew[0]==false and Ew[1]==false) or (Ew[3]==true and Ew[1]==true) then
set Sow=sow
set cow="attack"
set vow=Qw[22]
set mow=Ww[22]
set oow=vow
set Oow=mow
call IssuePointOrder(Sow,cow,oow,Oow)
set low=sow
set bow=UNIT_TYPE_HERO
if IsUnitType(low,bow) then
call SaveInteger(qu,GetHandleId(sow),$6D6F7665,22)
endif
elseif Ew[0]==true and Ew[3]==true then
set yow=sow
set pow="attack"
set Qow=Qw[24]
set Wow=Ww[24]
set eow=Qow
set qow=Wow
call IssuePointOrder(yow,pow,eow,qow)
set aow=sow
set now=UNIT_TYPE_HERO
if IsUnitType(aow,now) then
call SaveInteger(qu,GetHandleId(sow),$6D6F7665,24)
endif
endif
endif
if tow==du then
set dow=sow
set fow="attack"
set Eow=Qw[24]
set Zow=Ww[24]
set Row=Eow
set Tow=Zow
call IssuePointOrder(dow,fow,Row,Tow)
set Yow=sow
set Gow=UNIT_TYPE_HERO
if IsUnitType(Yow,Gow) then
call SaveInteger(qu,GetHandleId(sow),$6D6F7665,24)
endif
endif
if tow==nu then
set gow=sow
set how="attack"
set Uow=Qw[22]
set Iow=Ww[22]
set Fow=Uow
set kow=Iow
call IssuePointOrder(gow,how,Fow,kow)
set jow=sow
set xow=UNIT_TYPE_HERO
if IsUnitType(jow,xow) then
call SaveInteger(qu,GetHandleId(sow),$6D6F7665,22)
endif
endif
set sow=null
set tow=null
set iow=null
set Sow=null
set low=null
set bow=null
set yow=null
set aow=null
set now=null
set dow=null
set Yow=null
set Gow=null
set gow=null
set jow=null
set xow=null
endfunction
function AqS takes nothing returns boolean
local trigger vqS
local playerunitevent mqS
local trigger QqS
local playerunitevent WqS
local integer EqS
local trigger ZqS
local boolexpr UqS
local trigger IqS
local code PqS
set ay=null
set ny=null
set yy=CreateTrigger()
set vqS=yy
set mqS=EVENT_PLAYER_UNIT_DEATH
set QqS=vqS
set WqS=mqS
set EqS=0
loop
call TriggerRegisterPlayerUnitEvent(QqS,Player(EqS),WqS,null)
set EqS=EqS+1
exitwhen EqS==bj_MAX_PLAYER_SLOTS
endloop
set ZqS=yy
set UqS=Condition(d1)
call TriggerAddCondition(ZqS,UqS)
set IqS=yy
set PqS=f1
call TriggerAddAction(IqS,PqS)
set vqS=null
set mqS=null
set QqS=null
set WqS=null
set ZqS=null
set UqS=null
set IqS=null
return true
endfunction
function Aqc takes nothing returns boolean
local playerunitevent Iqc=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code Pqc=r4
call emO(Iqc,null,Pqc,null)
set Iqc=null
return true
endfunction
function YaS takes string taS returns nothing
local integer iaS
local unit SaS
local integer caS
local integer oaS
local real OaS
local unit laS
local integer baS
local unit yaS
local integer paS
local unit eaS
local integer qaS
local integer aaS
local string naS
local integer daS
local real faS
local integer RaS
local string TaS
set aW[qW]=taS
set qW=qW+1
set iaS=GetSpellAbilityId()
if iaS==$41313130 then
set SaS=GetSpellAbilityUnit()
set laS=SaS
set baS=$41313130
set caS=GetUnitAbilityLevel(laS,baS)
set yaS=SaS
set paS=$41313131
call UnitAddAbility(yaS,paS)
set eaS=SaS
set qaS=$41313131
set aaS=caS
call SetUnitAbilityLevel(eaS,qaS,aaS)
set OaS=I2R(12+3*caS)
set naS="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Nisha in Nisha, line 459"
set aW[qW]=naS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set daS=fF
set RF[daS]=829
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Nisha.","when calling error in Nisha, line 459")
set daS=0
endif
else
set dF=dF-1
set daS=nF[dF]
set RF[daS]=829
endif
set qW=qW-1
set oaS=daS
set Jm[oaS]=SaS
set faS=OaS
set RaS=oaS
set TaS="when calling doAfter in Nisha, line 459"
set aW[qW]=TaS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),faS,RaS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set SaS=null
set laS=null
set yaS=null
set eaS=null
endfunction
function Avw takes nothing returns nothing
set qW=0
call YaS("via function reference Nisha, line 452")
endfunction
function AwS takes nothing returns nothing
local unit ZwS=GetDyingUnit()
local unit UwS=ZwS
local unit IwS
local boolean PwS
if GetUnitTypeId(UwS)==$45303037 then
set PwS=true
else
set IwS=ZwS
set PwS=GetUnitTypeId(IwS)==$45303038
endif
if PwS then
set tF=false
endif
set ZwS=null
set UwS=null
set IwS=null
endfunction
function Axp takes nothing returns nothing
local integer mjp=GetResearched()
local unit Qjp
local integer Wjp
local unit Ejp
local integer Zjp
local unit Ujp
local integer Ijp
local unit Pjp
local integer Ajp
local unit Djp
local integer Hjp
local unit Jjp
local integer Kjp
local unit Ljp
local integer Xjp
local unit Cjp
local integer Vjp
local unit Bjp
local integer Njp
local unit Mjp
local integer wxp
local unit uxp
local integer rxp
local unit sxp
local integer txp
local unit ixp
local integer Sxp
local unit cxp
local integer oxp
local unit Oxp
local integer lxp
local unit bxp
local integer yxp
local unit pxp
local integer exp
local unit qxp
local integer axp
local unit nxp
local integer dxp
local unit fxp
local integer Rxp
local unit Txp
local integer Yxp
local unit Gxp
local integer gxp
local unit hxp
local integer Fxp
local unit kxp
local integer jxp
local unit xxp
local integer vxp
local unit mxp
local integer Qxp
local unit Wxp
local integer Exp
local unit Zxp
local integer Uxp
local unit Ixp
local integer Pxp
if mjp==$5230384F then
set re=re+1
if re==2 then
set Qjp=Dp
set Wjp=$41323349
if GetUnitAbilityLevel(Qjp,Wjp)==1 then
set Ejp=Dp
set Zjp=$41323349
call UnitRemoveAbility(Ejp,Zjp)
set Ujp=Dp
set Ijp=$4132334A
call UnitAddAbility(Ujp,Ijp)
endif
endif
if re==3 then
set Pjp=Dp
set Ajp=$4132334A
if GetUnitAbilityLevel(Pjp,Ajp)==1 then
set Djp=Dp
set Hjp=$4132334A
call UnitRemoveAbility(Djp,Hjp)
set Jjp=Dp
set Kjp=$4132334B
call UnitAddAbility(Jjp,Kjp)
endif
set Ljp=Dp
set Xjp=$4132334D
if GetUnitAbilityLevel(Ljp,Xjp)==1 then
set Cjp=Dp
set Vjp=$4132334D
call UnitRemoveAbility(Cjp,Vjp)
set Bjp=Dp
set Njp=$4132334E
call UnitAddAbility(Bjp,Njp)
endif
set Mjp=Dp
set wxp=$41323353
if GetUnitAbilityLevel(Mjp,wxp)>0 then
set uxp=Dp
set rxp=$41323353
call IncUnitAbilityLevel(uxp,rxp)
endif
set sxp=Dp
set txp=$41323354
if GetUnitAbilityLevel(sxp,txp)>0 then
set ixp=Dp
set Sxp=$41323354
call IncUnitAbilityLevel(ixp,Sxp)
endif
endif
if re==4 then
set cxp=Dp
set oxp=$4132334B
if GetUnitAbilityLevel(cxp,oxp)==1 then
set Oxp=Dp
set lxp=$4132334B
call UnitRemoveAbility(Oxp,lxp)
set bxp=Dp
set yxp=$4132334C
call UnitAddAbility(bxp,yxp)
endif
set pxp=Dp
set exp=$4132334E
if GetUnitAbilityLevel(pxp,exp)==1 then
set qxp=Dp
set axp=$4132334E
call UnitRemoveAbility(qxp,axp)
set nxp=Dp
set dxp=$4132334F
call UnitAddAbility(nxp,dxp)
endif
set fxp=Dp
set Rxp=$41323352
if GetUnitAbilityLevel(fxp,Rxp)==1 then
set Txp=Dp
set Yxp=$41323352
call UnitRemoveAbility(Txp,Yxp)
set Gxp=Dp
set gxp=$41323350
call UnitAddAbility(Gxp,gxp)
endif
set hxp=Dp
set Fxp=$41323430
call UnitAddAbility(hxp,Fxp)
set kxp=Dp
set jxp=$41323353
if GetUnitAbilityLevel(kxp,jxp)>0 then
set xxp=Dp
set vxp=$41323353
call IncUnitAbilityLevel(xxp,vxp)
endif
set mxp=Dp
set Qxp=$41323354
if GetUnitAbilityLevel(mxp,Qxp)>0 then
set Wxp=Dp
set Exp=$41323354
call IncUnitAbilityLevel(Wxp,Exp)
endif
set Zxp=Dp
set Uxp=$41323355
if GetUnitAbilityLevel(Zxp,Uxp)>0 then
set Ixp=Dp
set Pxp=$41323355
call IncUnitAbilityLevel(Ixp,Pxp)
endif
endif
endif
set Qjp=null
set Ejp=null
set Ujp=null
set Pjp=null
set Djp=null
set Jjp=null
set Ljp=null
set Cjp=null
set Bjp=null
set Mjp=null
set uxp=null
set sxp=null
set ixp=null
set cxp=null
set Oxp=null
set bxp=null
set pxp=null
set qxp=null
set nxp=null
set fxp=null
set Txp=null
set Gxp=null
set hxp=null
set kxp=null
set xxp=null
set mxp=null
set Wxp=null
set Zxp=null
set Ixp=null
endfunction
function Axt takes nothing returns boolean
return GetUnitTypeId(GetFilterUnit())==$68303243
endfunction
function B0l takes nothing returns boolean
return true
endfunction
function B1y takes nothing returns nothing
local unit H1y=GetSpellAbilityUnit()
local unit J1y=H1y
local unit K1y=J1y
local unitstate L1y=UNIT_STATE_MANA
local unit X1y
local integer C1y
local boolean V1y
if GetUnitState(K1y,L1y)>0. then
set X1y=H1y
set C1y=$42303846
set V1y=GetUnitAbilityLevel(X1y,C1y)>0
else
set V1y=false
endif
if V1y then
if GetRandomInt(1,100)<=15 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl",H1y,"chest"))
call UnitResetCooldown(H1y)
endif
endif
set H1y=null
set J1y=null
set K1y=null
set L1y=null
set X1y=null
endfunction
function B2s takes nothing returns nothing
local unit A2s=GetEnteringUnit()
local unit H2s=A2s
local integer D2s=GetUnitTypeId(H2s)
local unit J2s
local integer K2s
local unit L2s
local integer X2s
local unit C2s
local integer V2s
if D2s==$6E62656C then
set J2s=A2s
set K2s=$4130494E
call UnitAddAbility(J2s,K2s)
endif
if D2s==$686D7072 then
set L2s=A2s
set X2s=$41304949
call UnitAddAbility(L2s,X2s)
endif
if D2s==$68736F72 then
set C2s=A2s
set V2s=$41313558
call UnitAddAbility(C2s,V2s)
endif
set A2s=null
set H2s=null
set J2s=null
set L2s=null
set C2s=null
endfunction
function B5p takes nothing returns boolean
local trigger E5p
local rect Z5p
local region U5p
local trigger I5p
local boolexpr P5p
local trigger A5p
local trigger D5p
local playerunitevent H5p
local integer J5p
local trigger K5p
local boolexpr L5p
local trigger X5p
local playerunitevent C5p
local code V5p
set KY=CreateTrigger()
set LY=CreateTrigger()
set E5p=KY
set Z5p=bj_mapInitialPlayableArea
set U5p=CreateRegion()
call RegionAddRect(U5p,Z5p)
call TriggerRegisterEnterRegion(E5p,U5p,null)
set I5p=KY
set P5p=Condition(iww_2549)
call TriggerAddCondition(I5p,P5p)
set A5p=KY
call DisableTrigger(A5p)
set D5p=LY
set H5p=EVENT_PLAYER_UNIT_DEATH
set J5p=0
loop
call TriggerRegisterPlayerUnitEvent(D5p,Player(J5p),H5p,null)
set J5p=J5p+1
exitwhen J5p==bj_MAX_PLAYER_SLOTS
endloop
set K5p=LY
set L5p=Condition(Sww_1360)
call TriggerAddCondition(K5p,L5p)
set X5p=LY
call DisableTrigger(X5p)
set C5p=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set V5p=cww_2144
call emO(C5p,null,V5p,null)
set E5p=null
set Z5p=null
set U5p=null
set I5p=null
set P5p=null
set A5p=null
set D5p=null
set H5p=null
set K5p=null
set L5p=null
set X5p=null
set C5p=null
return true
endfunction
function B5s takes nothing returns boolean
local trigger D5s
local rect H5s
local region J5s
local trigger K5s
local boolexpr L5s
local trigger X5s
local playerunitevent C5s
local code V5s
set Gy=CreateTrigger()
set D5s=Gy
set H5s=bj_mapInitialPlayableArea
set J5s=CreateRegion()
call RegionAddRect(J5s,H5s)
call TriggerRegisterEnterRegion(D5s,J5s,null)
set K5s=Gy
set L5s=Condition(m1)
call TriggerAddCondition(K5s,L5s)
set X5s=Gy
call DisableTrigger(X5s)
set C5s=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set V5s=Q1
call emO(C5s,null,V5s,null)
set D5s=null
set H5s=null
set J5s=null
set K5s=null
set L5s=null
set X5s=null
set C5s=null
return true
endfunction
function BAw takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function BCu takes nothing returns boolean
return true
endfunction
function mlu takes real mOu,real QOu,string WOu,real EOu,real ZOu,integer UOu,integer IOu,integer POu,integer AOu returns texttag
local texttag DOu=CreateTextTag()
local texttag BOu=DOu
local real Ylu=mOu
local real Glu=QOu
local real ulu=Ylu
local real rlu=Glu
local real glu=ulu
local real hlu=rlu
local real Flu=0.
local real NOu=glu
local real MOu=hlu
local real wlu=Flu
local texttag HOu
local texttag JOu
local texttag KOu
local texttag LOu
local texttag XOu
local texttag COu
local texttag VOu
local texttag slu
local integer tlu
local integer ilu
local integer Slu
local integer clu
local texttag olu
local real Olu
local texttag llu
local real blu
local texttag ylu
local boolean plu
local texttag elu
local boolean qlu
local texttag alu
local string nlu
local real dlu
local texttag flu
local real Rlu
local real Tlu
local integer klu
local integer jlu
local integer xlu
local integer vlu
call SetTextTagPos(BOu,NOu,MOu,wlu)
set HOu=DOu
set slu=HOu
set klu=UOu
set jlu=IOu
set xlu=POu
set vlu=AOu
set tlu=klu
set ilu=jlu
set Slu=xlu
set clu=vlu
call SetTextTagColor(slu,tlu,ilu,Slu,clu)
set JOu=HOu
set olu=JOu
set Olu=ZOu
call SetTextTagLifespan(olu,Olu)
set KOu=JOu
set llu=KOu
set blu=ZOu-2.
call SetTextTagFadepoint(llu,blu)
set LOu=KOu
set ylu=LOu
set plu=true
call SetTextTagVisibility(ylu,plu)
set XOu=LOu
set elu=XOu
set qlu=false
call SetTextTagPermanent(elu,qlu)
set COu=XOu
set alu=COu
set nlu=WOu
set dlu=EOu
call SetTextTagText(alu,nlu,dlu*.0023)
set VOu=COu
set flu=VOu
set Rlu=0.
set Tlu=.03
call SetTextTagVelocity(flu,Rlu,Tlu)
set Ytw=VOu
set DOu=null
set HOu=null
set JOu=null
set KOu=null
set LOu=null
set XOu=null
set COu=null
set VOu=null
set BOu=null
set slu=null
set olu=null
set llu=null
set ylu=null
set elu=null
set alu=null
set flu=null
return Ytw
endfunction
function BEl takes nothing returns nothing
local unit nWl=GetEventDamageSource()
local unit dWl=GetTriggerUnit()
local unit GWl=dWl
local unittype gWl=UNIT_TYPE_STRUCTURE
local player fWl
local player RWl
local player TWl
local player YWl
local player hWl
local unit FWl
local unit kWl
local player jWl
local unit xWl
local unit vWl
local unit mWl
local integer QWl
local unit WWl
local player EWl
local integer ZWl
local player UWl
local playerstate IWl
local integer PWl
local player AWl
local player DWl
local playerstate HWl
local player JWl
local player KWl
local player LWl
local player XWl
local player CWl
local player VWl
local unit BWl
local player NWl
local integer MWl
local player wEl
local playerstate uEl
local integer rEl
local player sEl
local player tEl
local playerstate iEl
local player SEl
local player cEl
local player oEl
local player OEl
local player lEl
local player bEl
local unit yEl
local player pEl
local integer eEl
local player qEl
local playerstate aEl
local integer nEl
local player dEl
local player fEl
local playerstate REl
local player TEl
local player YEl
local player GEl
local player gEl
local player hEl
local player FEl
local unit kEl
local player jEl
local integer xEl
local player vEl
local playerstate mEl
local integer QEl
local player WEl
local player EEl
local playerstate ZEl
local player UEl
local player IEl
local player PEl
local player AEl
local player DEl
local player HEl
local boolean JEl
local real KEl
local real LEl
local real XEl
local real CEl
local real VEl
if IsUnitType(GWl,gWl) then
set FWl=dWl
set hWl=GetOwningPlayer(FWl)
set JEl=xh[GetPlayerId(hWl)]
else
set JEl=false
endif
if JEl then
set kWl=nWl
set jWl=Ud
if IsUnitEnemy(kWl,jWl) then
set xWl=nWl
set vWl=xWl
set KEl=GetUnitX(vWl)
set mWl=xWl
set CEl=KEl
set VEl=GetUnitY(mWl)
set LEl=CEl
set XEl=VEl
set QWl=vh
call mlu(LEl,XEl,"-"+I2S(QWl),10.,7.,255,220,0,255)
set WWl=nWl
if GetOwningPlayer(WWl)==nu then
set fWl=Tu
set EWl=fWl
set AWl=fWl
set DWl=AWl
set HWl=PLAYER_STATE_RESOURCE_GOLD
set ZWl=GetPlayerState(DWl,HWl)-vh
set UWl=EWl
set IWl=PLAYER_STATE_RESOURCE_GOLD
set PWl=ZWl
call SetPlayerState(UWl,IWl,PWl)
set JWl=fWl
set KWl=fWl
set hr[GetPlayerId(JWl)]=hr[GetPlayerId(KWl)]-vh
set LWl=fWl
set XWl=fWl
set Fr[GetPlayerId(LWl)]=Fr[GetPlayerId(XWl)]-vh
set CWl=fWl
set VWl=fWl
set Nr[GetPlayerId(CWl)]=Nr[GetPlayerId(VWl)]-vh
endif
set BWl=nWl
if GetOwningPlayer(BWl)==Ru then
set RWl=gu
set NWl=RWl
set sEl=RWl
set tEl=sEl
set iEl=PLAYER_STATE_RESOURCE_GOLD
set MWl=GetPlayerState(tEl,iEl)-vh
set wEl=NWl
set uEl=PLAYER_STATE_RESOURCE_GOLD
set rEl=MWl
call SetPlayerState(wEl,uEl,rEl)
set SEl=RWl
set cEl=RWl
set hr[GetPlayerId(SEl)]=hr[GetPlayerId(cEl)]-vh
set oEl=RWl
set OEl=RWl
set Fr[GetPlayerId(oEl)]=Fr[GetPlayerId(OEl)]-vh
set lEl=RWl
set bEl=RWl
set Nr[GetPlayerId(lEl)]=Nr[GetPlayerId(bEl)]-vh
endif
set yEl=nWl
if GetOwningPlayer(yEl)==du then
set TWl=Yu
set pEl=TWl
set dEl=TWl
set fEl=dEl
set REl=PLAYER_STATE_RESOURCE_GOLD
set eEl=GetPlayerState(fEl,REl)-vh
set qEl=pEl
set aEl=PLAYER_STATE_RESOURCE_GOLD
set nEl=eEl
call SetPlayerState(qEl,aEl,nEl)
set TEl=TWl
set YEl=TWl
set hr[GetPlayerId(TEl)]=hr[GetPlayerId(YEl)]-vh
set GEl=TWl
set gEl=TWl
set Fr[GetPlayerId(GEl)]=Fr[GetPlayerId(gEl)]-vh
set hEl=TWl
set FEl=TWl
set Nr[GetPlayerId(hEl)]=Nr[GetPlayerId(FEl)]-vh
endif
set kEl=nWl
if GetOwningPlayer(kEl)==fu then
set YWl=Gu
set jEl=YWl
set WEl=YWl
set EEl=WEl
set ZEl=PLAYER_STATE_RESOURCE_GOLD
set xEl=GetPlayerState(EEl,ZEl)-vh
set vEl=jEl
set mEl=PLAYER_STATE_RESOURCE_GOLD
set QEl=xEl
call SetPlayerState(vEl,mEl,QEl)
set UEl=YWl
set IEl=YWl
set hr[GetPlayerId(UEl)]=hr[GetPlayerId(IEl)]-vh
set PEl=YWl
set AEl=YWl
set Fr[GetPlayerId(PEl)]=Fr[GetPlayerId(AEl)]-vh
set DEl=YWl
set HEl=YWl
set Nr[GetPlayerId(DEl)]=Nr[GetPlayerId(HEl)]-vh
endif
endif
endif
set nWl=null
set dWl=null
set fWl=null
set RWl=null
set TWl=null
set YWl=null
set GWl=null
set gWl=null
set hWl=null
set FWl=null
set kWl=null
set jWl=null
set xWl=null
set vWl=null
set mWl=null
set WWl=null
set EWl=null
set UWl=null
set IWl=null
set AWl=null
set DWl=null
set HWl=null
set JWl=null
set KWl=null
set LWl=null
set XWl=null
set CWl=null
set VWl=null
set BWl=null
set NWl=null
set wEl=null
set uEl=null
set sEl=null
set tEl=null
set iEl=null
set SEl=null
set cEl=null
set oEl=null
set OEl=null
set lEl=null
set bEl=null
set yEl=null
set pEl=null
set qEl=null
set aEl=null
set dEl=null
set fEl=null
set REl=null
set TEl=null
set YEl=null
set GEl=null
set gEl=null
set hEl=null
set FEl=null
set kEl=null
set jEl=null
set vEl=null
set mEl=null
set WEl=null
set EEl=null
set ZEl=null
set UEl=null
set IEl=null
set PEl=null
set AEl=null
set DEl=null
set HEl=null
endfunction
function BGc takes nothing returns boolean
return true
endfunction
function BIO takes nothing returns nothing
local unit RUO=GetLevelingUnit()
local unit YUO=RUO
local real TUO
local player GUO
local real gUO
local real hUO
local real FUO
local unit kUO
local unit jUO
local unit xUO
local unit vUO
local unit mUO
local integer QUO
local unit WUO
local integer EUO
local unit ZUO
local integer UUO
local player IUO
local real PUO
local real AUO
local real DUO
local unit HUO
local unit JUO
local unit KUO
local unit LUO
local unit XUO
local integer CUO
local unit VUO
local integer BUO
local unit NUO
local integer MUO
local player wIO
local real uIO
local real rIO
local real sIO
local unit tIO
local unit iIO
local unit SIO
local unit cIO
local unit oIO
local integer OIO
local unit lIO
local integer bIO
local unit yIO
local integer pIO
local player eIO
local real qIO
local real aIO
local real nIO
local unit dIO
local unit fIO
local unit RIO
local unit TIO
local unit YIO
local integer GIO
local unit gIO
local integer hIO
local unit FIO
local integer kIO
local unit jIO
local integer xIO
local unit vIO
local integer mIO
local integer QIO
local unit WIO
local integer EIO
local unit ZIO
local integer UIO
local integer IIO
local unit PIO
local integer AIO
local unit DIO
local integer HIO
local integer JIO
local unit KIO
local integer LIO
local unit XIO
local integer CIO
local integer VIO
if GetUnitTypeId(YUO)==$4F303430 then
set TUO=GetHeroLevel(RUO)*1./4
if GetHeroLevel(RUO)>=4 and GetHeroLevel(RUO)<8 and gp==false and hp==false and Fp==false and kp==false then
set kUO=Ap
set GUO=GetOwningPlayer(kUO)
set jUO=Ap
set gUO=GetUnitX(jUO)
set xUO=Ap
set hUO=GetUnitY(xUO)
set FUO=10.
if GetLocalPlayer()==GUO then
call PingMinimap(gUO,hUO,FUO)
endif
set vUO=Ap
call DisplayTextToPlayer(GetOwningPlayer(vUO),0.,0.,"Choose a new item for Eudora in the bonus building")
set mUO=Ap
set QUO=$41313233
call UnitAddAbility(mUO,QUO)
set WUO=Ap
set EUO=$41313234
call UnitAddAbility(WUO,EUO)
set ZUO=Ap
set UUO=$41313235
call UnitAddAbility(ZUO,UUO)
endif
if GetHeroLevel(RUO)>=8 and GetHeroLevel(RUO)<14 and hp==false and Fp==false and kp==false and gp==true then
set HUO=Ap
set IUO=GetOwningPlayer(HUO)
set JUO=Ap
set PUO=GetUnitX(JUO)
set KUO=Ap
set AUO=GetUnitY(KUO)
set DUO=10.
if GetLocalPlayer()==IUO then
call PingMinimap(PUO,AUO,DUO)
endif
set LUO=Ap
call DisplayTextToPlayer(GetOwningPlayer(LUO),0.,0.,"Choose a new item for Eudora in the bonus building")
set XUO=Ap
set CUO=$41313236
call UnitAddAbility(XUO,CUO)
set VUO=Ap
set BUO=$41313237
call UnitAddAbility(VUO,BUO)
set NUO=Ap
set MUO=$41313238
call UnitAddAbility(NUO,MUO)
endif
if GetHeroLevel(RUO)>=14 and GetHeroLevel(RUO)<20 and Fp==false and kp==false and hp==true and gp==true then
set tIO=Ap
set wIO=GetOwningPlayer(tIO)
set iIO=Ap
set uIO=GetUnitX(iIO)
set SIO=Ap
set rIO=GetUnitY(SIO)
set sIO=10.
if GetLocalPlayer()==wIO then
call PingMinimap(uIO,rIO,sIO)
endif
set cIO=Ap
call DisplayTextToPlayer(GetOwningPlayer(cIO),0.,0.,"Choose a new item for Eudora in the bonus building")
set oIO=Ap
set OIO=$41313239
call UnitAddAbility(oIO,OIO)
set lIO=Ap
set bIO=$41313241
call UnitAddAbility(lIO,bIO)
set yIO=Ap
set pIO=$41313242
call UnitAddAbility(yIO,pIO)
endif
if GetHeroLevel(RUO)>=20 and kp==false and Fp==true and hp==true and gp==true then
set dIO=Ap
set eIO=GetOwningPlayer(dIO)
set fIO=Ap
set qIO=GetUnitX(fIO)
set RIO=Ap
set aIO=GetUnitY(RIO)
set nIO=10.
if GetLocalPlayer()==eIO then
call PingMinimap(qIO,aIO,nIO)
endif
set TIO=Ap
call DisplayTextToPlayer(GetOwningPlayer(TIO),0.,0.,"Choose a new item for Eudora in the bonus building")
set YIO=Ap
set GIO=$41313243
call UnitAddAbility(YIO,GIO)
set gIO=Ap
set hIO=$41313244
call UnitAddAbility(gIO,hIO)
set FIO=Ap
set kIO=$41313245
call UnitAddAbility(FIO,kIO)
endif
set jIO=RUO
set xIO=$41305336
if GetUnitAbilityLevel(jIO,xIO)>0 then
set vIO=RUO
set mIO=$41305336
set QIO=R2I(TUO)
call SetUnitAbilityLevel(vIO,mIO,QIO)
endif
set WIO=RUO
set EIO=$41313230
if GetUnitAbilityLevel(WIO,EIO)>0 then
set ZIO=RUO
set UIO=$41313230
set IIO=R2I(TUO)
call SetUnitAbilityLevel(ZIO,UIO,IIO)
endif
set PIO=RUO
set AIO=$41313231
if GetUnitAbilityLevel(PIO,AIO)>0 then
set DIO=RUO
set HIO=$41313231
set JIO=R2I(TUO)
call SetUnitAbilityLevel(DIO,HIO,JIO)
endif
set KIO=RUO
set LIO=$41313254
if GetUnitAbilityLevel(KIO,LIO)>0 then
set XIO=RUO
set CIO=$41313254
set VIO=R2I(TUO)
call SetUnitAbilityLevel(XIO,CIO,VIO)
endif
endif
set RUO=null
set YUO=null
set GUO=null
set kUO=null
set jUO=null
set xUO=null
set vUO=null
set mUO=null
set WUO=null
set ZUO=null
set IUO=null
set HUO=null
set JUO=null
set KUO=null
set LUO=null
set XUO=null
set VUO=null
set NUO=null
set wIO=null
set tIO=null
set iIO=null
set SIO=null
set cIO=null
set oIO=null
set lIO=null
set yIO=null
set eIO=null
set dIO=null
set fIO=null
set RIO=null
set TIO=null
set YIO=null
set gIO=null
set FIO=null
set jIO=null
set vIO=null
set WIO=null
set ZIO=null
set PIO=null
set DIO=null
set KIO=null
set XIO=null
endfunction
function SRr takes string wRr returns integer
local integer uRr
local string rRr
local integer sRr
local integer tRr
local integer iRr
set aW[qW]=wRr
set qW=qW+1
set rRr="when calling alloc_HashMap in HashMap, line 7"
set aW[qW]=rRr
set qW=qW+1
if HF==0 then
if JF<32768 then
set JF=JF+1
set sRr=JF
set KF[sRr]=2641
else
call L8c("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set sRr=0
endif
else
set HF=HF-1
set sRr=DF[HF]
set KF[sRr]=2641
endif
set qW=qW-1
set uRr=sRr
set tRr=uRr
set iRr=tRr
set Ex[iRr]=0
set qW=qW-1
return uRr
endfunction
function BIl takes nothing returns boolean
local string XIl
local playerunitevent CIl
local code VIl
set qW=0
set XIl="via function reference SaveHero, line 1"
set aW[qW]=XIl
set qW=qW+1
set mG=SRr("when calling new_HashMap in SaveHero, line 6")
set CIl=EVENT_PLAYER_UNIT_DEATH
set VIl=Ttw
call emO(CIl,null,VIl,null)
set qW=qW-1
set CIl=null
return true
endfunction
function BIp takes nothing returns boolean
set Qh=CreateSound("EudoraPick.mp3",false,false,false,10,10,"DefaultEAXON")
return true
endfunction
function BKr takes nothing returns nothing
local unit kKr=GetEnteringUnit()
local unit mKr=kKr
local integer jKr=GetUnitTypeId(mKr)
local player xKr=GetOwningPlayer(kKr)
local integer vKr=GetPlayerTechCount(xKr,$524D3165,true)
local unit QKr
local integer WKr
local unit EKr
local integer ZKr
local unit UKr
local integer IKr
local unit PKr
local integer AKr
local unit DKr
local integer HKr
local unit JKr
local integer KKr
local unit LKr
local integer XKr
local unit CKr
local integer VKr
if jKr==$7830316D or jKr==$7830316E or jKr==$68303244 and vKr>0 then
if vKr==1 then
set QKr=kKr
set WKr=$414D6131
call UnitAddAbility(QKr,WKr)
set EKr=kKr
set ZKr=$414D6135
call UnitAddAbility(EKr,ZKr)
endif
if vKr==2 then
set UKr=kKr
set IKr=$414D6132
call UnitAddAbility(UKr,IKr)
set PKr=kKr
set AKr=$414D6136
call UnitAddAbility(PKr,AKr)
endif
if vKr==3 then
set DKr=kKr
set HKr=$414D6133
call UnitAddAbility(DKr,HKr)
set JKr=kKr
set KKr=$414D6137
call UnitAddAbility(JKr,KKr)
endif
if vKr==4 then
set LKr=kKr
set XKr=$414D6134
call UnitAddAbility(LKr,XKr)
set CKr=kKr
set VKr=$414D6138
call UnitAddAbility(CKr,VKr)
endif
endif
set kKr=null
set xKr=null
set mKr=null
set QKr=null
set EKr=null
set UKr=null
set PKr=null
set DKr=null
set JKr=null
set LKr=null
set CKr=null
endfunction
function BMe takes nothing returns boolean
return true
endfunction
function BMl takes nothing returns boolean
local playerunitevent CMl=EVENT_PLAYER_UNIT_DEATH
local code VMl=aM
call emO(CMl,null,VMl,null)
set CMl=null
return true
endfunction
function BOe takes nothing returns boolean
local playerunitevent COe=EVENT_PLAYER_UNIT_ATTACKED
local code VOe=Q9
call emO(COe,null,VOe,null)
set COe=null
return true
endfunction
function BPu takes nothing returns nothing
local unit BIu=GetTriggerUnit()
local unit MIu=BIu
local player NIu=GetOwningPlayer(MIu)
local unit wPu
local string uPu
local real rPu
local real sPu
local unit tPu
local unittype iPu
local unit SPu
local string cPu
local real oPu
local real OPu
local unit lPu
local unittype bPu
local unit yPu
local string pPu
local real ePu
local real qPu
local unit aPu
local unittype nPu
local unit dPu
local string fPu
local real RPu
local real TPu
local unit YPu
local unittype GPu
local unit gPu
local string hPu
local real FPu
local real kPu
local unit jPu
local unittype xPu
local unit vPu
local string mPu
local real QPu
local real WPu
local unit EPu
local unittype ZPu
local real UPu
local real IPu
local real PPu
local real APu
local real DPu
local real HPu
local real JPu
local real KPu
local real LPu
local real XPu
local real CPu
local real VPu
if NIu==du then
if Ew[3]==true then
set wPu=BIu
set uPu="attack"
set UPu=Qw[30]
set IPu=Ww[30]
set rPu=UPu
set sPu=IPu
call IssuePointOrder(wPu,uPu,rPu,sPu)
set tPu=BIu
set iPu=UNIT_TYPE_HERO
if IsUnitType(tPu,iPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,30)
endif
else
set SPu=BIu
set cPu="attack"
set PPu=Qw[50]
set APu=Ww[50]
set oPu=PPu
set OPu=APu
call IssuePointOrder(SPu,cPu,oPu,OPu)
set lPu=BIu
set bPu=UNIT_TYPE_HERO
if IsUnitType(lPu,bPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,50)
endif
endif
endif
if NIu==nu then
set yPu=BIu
set pPu="attack"
set DPu=Qw[50]
set HPu=Ww[50]
set ePu=DPu
set qPu=HPu
call IssuePointOrder(yPu,pPu,ePu,qPu)
set aPu=BIu
set nPu=UNIT_TYPE_HERO
if IsUnitType(aPu,nPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,50)
endif
endif
if NIu==fu then
if Ew[1]==true then
set dPu=BIu
set fPu="attack"
set JPu=Qw[50]
set KPu=Ww[50]
set RPu=JPu
set TPu=KPu
call IssuePointOrder(dPu,fPu,RPu,TPu)
set YPu=BIu
set GPu=UNIT_TYPE_HERO
if IsUnitType(YPu,GPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,50)
endif
else
set gPu=BIu
set hPu="attack"
set LPu=Qw[30]
set XPu=Ww[30]
set FPu=LPu
set kPu=XPu
call IssuePointOrder(gPu,hPu,FPu,kPu)
set jPu=BIu
set xPu=UNIT_TYPE_HERO
if IsUnitType(jPu,xPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,30)
endif
endif
endif
if NIu==Ru then
set vPu=BIu
set mPu="attack"
set CPu=Qw[30]
set VPu=Ww[30]
set QPu=CPu
set WPu=VPu
call IssuePointOrder(vPu,mPu,QPu,WPu)
set EPu=BIu
set ZPu=UNIT_TYPE_HERO
if IsUnitType(EPu,ZPu) then
call SaveInteger(qu,GetHandleId(BIu),$6D6F7665,30)
endif
endif
set BIu=null
set NIu=null
set MIu=null
set wPu=null
set tPu=null
set iPu=null
set SPu=null
set lPu=null
set bPu=null
set yPu=null
set aPu=null
set nPu=null
set dPu=null
set YPu=null
set GPu=null
set gPu=null
set jPu=null
set xPu=null
set vPu=null
set EPu=null
set ZPu=null
endfunction
function BRw takes nothing returns boolean
return true
endfunction
function BUo takes nothing returns boolean
return true
endfunction
function BVS takes nothing returns nothing
local integer SVS
local unit cVS
local unit oVS
local unit OVS
local timerdialog lVS
local trigger bVS
local trigger yVS
local trigger pVS
local trigger eVS
local integer qVS
local boolean aVS
local player nVS
local integer dVS
local boolean fVS
local player RVS
local integer TVS
local boolean YVS
local player GVS
local integer gVS
local boolean hVS
local player FVS
local unit kVS
local player jVS
local integer xVS
local real vVS
local real mVS
local real QVS
local real WVS
local unit EVS
local unit ZVS
local unit UVS
local unit IVS
local unit PVS
local real AVS
local player DVS
local integer HVS
local real JVS
local real KVS
local real LVS
local real XVS
local real CVS
local real VVS
if Hu==false and Nu<3 then
set Hu=true
set cVS=Zu
call RemoveUnit(cVS)
set oVS=Uu
call RemoveUnit(oVS)
set OVS=Iu
call RemoveUnit(OVS)
set lVS=tr
call DestroyTimerDialog(lVS)
call TimerStart(ir,5.,false,Nww_997)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
set bVS=un
call EnableTrigger(bVS)
set yVS=Na
call EnableTrigger(yVS)
set pVS=rn
call EnableTrigger(pVS)
set eVS=GY
call DisableTrigger(eVS)
if Ju==true then
set qVS=$6E656630
set aVS=false
set nVS=Tu
if aVS then
call SetPlayerTechMaxAllowed(nVS,qVS,-1)
else
call SetPlayerTechMaxAllowed(nVS,qVS,0)
endif
endif
if Ku==true then
set dVS=$6E656630
set fVS=false
set RVS=gu
if fVS then
call SetPlayerTechMaxAllowed(RVS,dVS,-1)
else
call SetPlayerTechMaxAllowed(RVS,dVS,0)
endif
endif
if Lu==true then
set TVS=$6E656630
set YVS=false
set GVS=Yu
if YVS then
call SetPlayerTechMaxAllowed(GVS,TVS,-1)
else
call SetPlayerTechMaxAllowed(GVS,TVS,0)
endif
endif
if Xu==true then
set gVS=$6E656630
set hVS=false
set FVS=Gu
if hVS then
call SetPlayerTechMaxAllowed(FVS,gVS,-1)
else
call SetPlayerTechMaxAllowed(FVS,gVS,0)
endif
endif
set SVS=0
loop
exitwhen SVS>3
set kVS=F[SVS]
call ShowUnit(kVS,true)
if hu==true then
set EVS=F[SVS]
set jVS=GetOwningPlayer(EVS)
set ZVS=F[SVS]
set xVS=GetUnitTypeId(ZVS)
set UVS=F[SVS]
set IVS=UVS
set AVS=GetUnitX(IVS)
set PVS=UVS
set LVS=AVS
set XVS=GetUnitY(PVS)
set vVS=LVS
set mVS=XVS
set CVS=180.
set QVS=CVS
set DVS=jVS
set HVS=xVS
set JVS=vVS
set KVS=mVS
set VVS=QVS
set WVS=VVS
set hw[SVS]=CreateUnit(DVS,HVS,JVS,KVS,WVS*57.295779513)
endif
set SVS=SVS+1
endloop
endif
set cVS=null
set oVS=null
set OVS=null
set lVS=null
set bVS=null
set yVS=null
set pVS=null
set eVS=null
set nVS=null
set RVS=null
set GVS=null
set FVS=null
set kVS=null
set jVS=null
set EVS=null
set ZVS=null
set UVS=null
set IVS=null
set PVS=null
set DVS=null
endfunction
function BXr takes nothing returns nothing
local integer VXr
if GetPlayerTechCount(Player(11),$52303933,true)!=12 then
call SetPlayerTechResearched(Player(11),$52303933,GetPlayerTechCount(Player(11),$52303933,true)+1)
call SetPlayerTechResearched(Player(11),$52303934,GetPlayerTechCount(Player(11),$52303934,true)+1)
call SetPlayerTechResearched(Player(11),$52303935,GetPlayerTechCount(Player(11),$52303935,true)+1)
endif
if GetPlayerTechCount(Player(11),$524D3138,true)==0 then
call SetPlayerTechResearched(Player(11),$524D3138,4)
endif
if ur==true then
if GetPlayerTechCount(Player(11),$52303936,true)!=2 then
call SetPlayerTechResearched(Player(11),$52303936,2)
endif
endif
set VXr=0
loop
exitwhen VXr>7
if GetPlayerTechCount(Player(VXr),$52303937,true)!=12 then
call SetPlayerTechResearched(Player(VXr),$52303937,GetPlayerTechCount(Player(VXr),$52303937,true)+1)
call SetPlayerTechResearched(Player(VXr),$52303938,GetPlayerTechCount(Player(VXr),$52303938,true)+1)
endif
set VXr=VXr+1
endloop
endfunction
function pOi takes string Boi returns nothing
local unit Noi
local unit Moi
local integer wOi
local unit uOi
local unit rOi
local unit sOi
local unit tOi
local string iOi
local integer SOi
local real cOi
local integer oOi
local string OOi
local boolean lOi
local boolean bOi
local boolean yOi
set aW[qW]=Boi
set qW=qW+1
set Noi=GetAttacker()
set Moi=GetTriggerUnit()
set uOi=Moi
if UnitAlive(uOi) then
set rOi=Noi
set lOi=UnitAlive(rOi)
else
set lOi=false
endif
if lOi and Moi!=null and Noi!=null then
set sOi=Noi
set bOi=IsUnitIllusion(sOi)==false
else
set bOi=false
endif
if bOi then
set tOi=Moi
set yOi=IsUnitIllusion(tOi)==false
else
set yOi=false
endif
if yOi then
set iOi="when calling alloc_CallbackSingle_doAfter_UseCast in UseCast, line 187"
set aW[qW]=iOi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set SOi=fF
set RF[SOi]=762
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_UseCast.","when calling error in UseCast, line 187")
set SOi=0
endif
else
set dF=dF-1
set SOi=nF[dF]
set RF[SOi]=762
endif
set qW=qW-1
set wOi=SOi
set KQ[wOi]=Noi
set LQ[wOi]=Moi
set cOi=1.
set oOi=wOi
set OOi="when calling doAfter in UseCast, line 187"
set aW[qW]=OOi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),cOi,oOi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Noi=null
set Moi=null
set uOi=null
set rOi=null
set sOi=null
set tOi=null
endfunction
function Bao takes nothing returns nothing
set qW=0
call pOi("via function reference UseCast, line 387")
endfunction
function Bar takes nothing returns boolean
return true
endfunction
function dYr takes unit UTr returns nothing
local rect ITr
local rect PTr
local rect ATr
local rect DTr
local rect HTr
local unit JTr
local rect KTr
local rect LTr
local rect XTr
local unit CTr
local rect VTr
local rect BTr
local rect NTr
local unit MTr
local rect wYr
local rect uYr
local rect rYr
local unit sYr
local rect tYr
local rect iYr
local rect SYr
local rect cYr
local rect oYr
local rect OYr
local rect lYr
local rect bYr
local rect yYr
local rect pYr
local rect eYr
local rect qYr
local rect aYr
local rect nYr
if GetOwningPlayer(GetEnumUnit())==Player(11) then
if GetRandomInt(1,4)==1 then
set ITr=dc
set Xo[244]=Location(GetRectCenterX(ITr),GetRectCenterY(ITr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,3)==1 then
set PTr=nc
set Xo[244]=Location(GetRectCenterX(PTr),GetRectCenterY(PTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,2)==1 then
set ATr=qc
set Xo[244]=Location(GetRectCenterX(ATr),GetRectCenterY(ATr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set DTr=ac
set Xo[244]=Location(GetRectCenterX(DTr),GetRectCenterY(DTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set HTr=Oo
set JTr=UTr
if RectContainsCoords(HTr,GetUnitX(JTr),GetUnitY(JTr)) then
if GetRandomInt(1,2)==1 then
set KTr=Cc
set Xo[244]=Location(GetRectCenterX(KTr),GetRectCenterY(KTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set LTr=Lc
set Xo[244]=Location(GetRectCenterX(LTr),GetRectCenterY(LTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set XTr=lo
set CTr=UTr
if RectContainsCoords(XTr,GetUnitX(CTr),GetUnitY(CTr)) then
if GetRandomInt(1,2)==1 then
set VTr=so
set Xo[244]=Location(GetRectCenterX(VTr),GetRectCenterY(VTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set BTr=So
set Xo[244]=Location(GetRectCenterX(BTr),GetRectCenterY(BTr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set NTr=ec
set MTr=UTr
if RectContainsCoords(NTr,GetUnitX(MTr),GetUnitY(MTr)) then
if GetRandomInt(1,2)==1 then
set wYr=Wc
set Xo[244]=Location(GetRectCenterX(wYr),GetRectCenterY(wYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set uYr=mc
set Xo[244]=Location(GetRectCenterX(uYr),GetRectCenterY(uYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set rYr=pc
set sYr=UTr
if RectContainsCoords(rYr,GetUnitX(sYr),GetUnitY(sYr)) then
if GetRandomInt(1,2)==1 then
set tYr=Tc
set Xo[244]=Location(GetRectCenterX(tYr),GetRectCenterY(tYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set iYr=Gc
set Xo[244]=Location(GetRectCenterX(iYr),GetRectCenterY(iYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(UTr)==1 then
if GetRandomInt(1,2)==1 then
set SYr=Cc
set Xo[244]=Location(GetRectCenterX(SYr),GetRectCenterY(SYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set cYr=Lc
set Xo[244]=Location(GetRectCenterX(cYr),GetRectCenterY(cYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(UTr)==2 then
if GetRandomInt(1,2)==1 then
set oYr=so
set Xo[244]=Location(GetRectCenterX(oYr),GetRectCenterY(oYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set OYr=So
set Xo[244]=Location(GetRectCenterX(OYr),GetRectCenterY(OYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(UTr)==3 then
if GetRandomInt(1,2)==1 then
set lYr=Wc
set Xo[244]=Location(GetRectCenterX(lYr),GetRectCenterY(lYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set bYr=mc
set Xo[244]=Location(GetRectCenterX(bYr),GetRectCenterY(bYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(UTr)==244 then
if GetRandomInt(1,2)==1 then
set yYr=Tc
set Xo[244]=Location(GetRectCenterX(yYr),GetRectCenterY(yYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set pYr=Gc
set Xo[244]=Location(GetRectCenterX(pYr),GetRectCenterY(pYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetRandomInt(1,4)==1 then
set eYr=Pc
set Xo[244]=Location(GetRectCenterX(eYr),GetRectCenterY(eYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,3)==1 then
set qYr=wo
set Xo[244]=Location(GetRectCenterX(qYr),GetRectCenterY(qYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,2)==1 then
set aYr=Hc
set Xo[244]=Location(GetRectCenterX(aYr),GetRectCenterY(aYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
else
set nYr=jc
set Xo[244]=Location(GetRectCenterX(nYr),GetRectCenterY(nYr))
call IssuePointOrderByIdLoc(UTr,851983,Xo[244])
call RemoveLocation(Xo[244])
endif
endif
endif
endif
endif
set ITr=null
set PTr=null
set ATr=null
set DTr=null
set HTr=null
set JTr=null
set KTr=null
set LTr=null
set XTr=null
set CTr=null
set VTr=null
set BTr=null
set NTr=null
set MTr=null
set wYr=null
set uYr=null
set rYr=null
set sYr=null
set tYr=null
set iYr=null
set SYr=null
set cYr=null
set oYr=null
set OYr=null
set lYr=null
set bYr=null
set yYr=null
set pYr=null
set eYr=null
set qYr=null
set aYr=null
set nYr=null
endfunction
function Bct takes nothing returns nothing
local real Eit
local real Zit
local player Uit
local integer Iit
local unit Pit
local unit Ait
local integer Dit
local unit Hit
local unit Jit
local integer Kit
local unit Lit
local unit Xit
local unit Cit
local unit Vit
local unit Bit
local unit Nit
local unit Mit
local real wSt
local effect uSt
local string rSt
local real sSt
local real tSt
local unit iSt
local unit SSt
local unit cSt
local unit oSt
local real OSt
local effect lSt
local string bSt
local real ySt
local real pSt
local unit eSt
local unit qSt
local unit aSt
local unit nSt
local real dSt
local unit fSt
local integer RSt
local effect TSt
local string YSt
local real GSt
local real gSt
local unit hSt
local unit FSt
local unit kSt
local unit jSt
local real xSt
local unit vSt
local integer mSt
local effect QSt
local string WSt
local real ESt
local real ZSt
local unit USt
local unit ISt
local unit PSt
local unit ASt
local real DSt
local unit HSt
local integer JSt
local unit KSt
local integer LSt
local effect XSt
local string CSt
local real VSt
local real BSt
local unit NSt
local unit MSt
local unit wct
local unit uct
local real rct
local unit sct
local integer tct
local unit ict
local integer Sct
local effect cct
local string oct
local real Oct
local real lct
local unit bct
local unit yct
local unit pct
local unit ect
local real qct
local unit act
local integer nct
local unit dct
local integer fct
local effect Rct
local string Tct
local real Yct
local real Gct
local unit gct
local unit hct
local unit Fct
local real kct
local real jct
local real xct
local real vct
local real mct
local real Qct
local real Wct
local real Ect
local real Zct
local real Uct
local real Ict
local real Pct
local real Act
local real Dct
local real Hct
local real Jct
local real Kct
local real Lct
local real Xct
local real Cct
local real Vct
if CO==true then
set Vit=XO
set Eit=GetUnitX(Vit)
set Bit=XO
set Zit=GetUnitY(Bit)
set Nit=XO
set Uit=GetOwningPlayer(Nit)
if BO>0 and BO<3 then
set Iit=GetRandomInt(1,2)
if Iit==1 then
set Pit=CreateUnit(Uit,$7530304F,Eit,Zit,GetUnitFacing(XO))
set Mit=Pit
set wSt=60.
call UnitApplyTimedLife(Mit,$42544C46,wSt)
call dYr(Pit)
set rSt="Void Teleport Target.mdl"
set iSt=Pit
set SSt=iSt
set kct=GetUnitX(SSt)
set cSt=iSt
set Ect=kct
set Zct=GetUnitY(cSt)
set sSt=Ect
set tSt=Zct
set uSt=AddSpecialEffect(rSt,sSt,tSt)
call DestroyEffect(uSt)
else
set Ait=CreateUnit(Uit,$75303050,Eit,Zit,GetUnitFacing(XO))
set oSt=Ait
set OSt=60.
call UnitApplyTimedLife(oSt,$42544C46,OSt)
call dYr(Ait)
set bSt="Void Teleport Target.mdl"
set eSt=Ait
set qSt=eSt
set jct=GetUnitX(qSt)
set aSt=eSt
set Uct=jct
set Ict=GetUnitY(aSt)
set ySt=Uct
set pSt=Ict
set lSt=AddSpecialEffect(bSt,ySt,pSt)
call DestroyEffect(lSt)
endif
endif
if BO>=3 and BO<6 then
set Dit=GetRandomInt(1,2)
if Dit==1 then
set Hit=CreateUnit(Uit,$7530304F,Eit,Zit,GetUnitFacing(XO))
set nSt=Hit
set dSt=60.
call UnitApplyTimedLife(nSt,$42544C46,dSt)
set fSt=Hit
set RSt=$4130534F
call UnitAddAbility(fSt,RSt)
call dYr(Hit)
set YSt="Void Teleport Target.mdl"
set hSt=Hit
set FSt=hSt
set xct=GetUnitX(FSt)
set kSt=hSt
set Pct=xct
set Act=GetUnitY(kSt)
set GSt=Pct
set gSt=Act
set TSt=AddSpecialEffect(YSt,GSt,gSt)
call DestroyEffect(TSt)
else
set Jit=CreateUnit(Uit,$75303050,Eit,Zit,GetUnitFacing(XO))
set jSt=Jit
set xSt=60.
call UnitApplyTimedLife(jSt,$42544C46,xSt)
set vSt=Jit
set mSt=$41313533
call UnitAddAbility(vSt,mSt)
call dYr(Jit)
set WSt="Void Teleport Target.mdl"
set USt=Jit
set ISt=USt
set vct=GetUnitX(ISt)
set PSt=USt
set Dct=vct
set Hct=GetUnitY(PSt)
set ESt=Dct
set ZSt=Hct
set QSt=AddSpecialEffect(WSt,ESt,ZSt)
call DestroyEffect(QSt)
endif
endif
if BO>=6 then
set Kit=GetRandomInt(1,3)
if Kit==1 then
set Lit=CreateUnit(Uit,$7530304F,Eit,Zit,GetUnitFacing(XO))
set ASt=Lit
set DSt=60.
call UnitApplyTimedLife(ASt,$42544C46,DSt)
set HSt=Lit
set JSt=$4130534F
call UnitAddAbility(HSt,JSt)
set KSt=Lit
set LSt=$41304933
call UnitAddAbility(KSt,LSt)
call dYr(Lit)
set CSt="Void Teleport Target.mdl"
set NSt=Lit
set MSt=NSt
set mct=GetUnitX(MSt)
set wct=NSt
set Jct=mct
set Kct=GetUnitY(wct)
set VSt=Jct
set BSt=Kct
set XSt=AddSpecialEffect(CSt,VSt,BSt)
call DestroyEffect(XSt)
elseif Kit==2 then
set Xit=CreateUnit(Uit,$75303050,Eit,Zit,GetUnitFacing(XO))
set uct=Xit
set rct=60.
call UnitApplyTimedLife(uct,$42544C46,rct)
set sct=Xit
set tct=$41313533
call UnitAddAbility(sct,tct)
set ict=Xit
set Sct=$41313534
call UnitAddAbility(ict,Sct)
call dYr(Xit)
set oct="Void Teleport Target.mdl"
set bct=Xit
set yct=bct
set Qct=GetUnitX(yct)
set pct=bct
set Lct=Qct
set Xct=GetUnitY(pct)
set Oct=Lct
set lct=Xct
set cct=AddSpecialEffect(oct,Oct,lct)
call DestroyEffect(cct)
else
set Cit=CreateUnit(Uit,$75303051,Eit,Zit,GetUnitFacing(XO))
set ect=Cit
set qct=60.
call UnitApplyTimedLife(ect,$42544C46,qct)
set act=Cit
set nct=$41303950
call UnitAddAbility(act,nct)
set dct=Cit
set fct=$41436374
call UnitAddAbility(dct,fct)
call dYr(Cit)
set Tct="Void Teleport Target.mdl"
set gct=Cit
set hct=gct
set Wct=GetUnitX(hct)
set Fct=gct
set Cct=Wct
set Vct=GetUnitY(Fct)
set Yct=Cct
set Gct=Vct
set Rct=AddSpecialEffect(Tct,Yct,Gct)
call DestroyEffect(Rct)
endif
endif
call TimerStart(VO,10.,false,mM)
endif
set Uit=null
set Pit=null
set Ait=null
set Hit=null
set Jit=null
set Lit=null
set Xit=null
set Cit=null
set Vit=null
set Bit=null
set Nit=null
set Mit=null
set uSt=null
set iSt=null
set SSt=null
set cSt=null
set oSt=null
set lSt=null
set eSt=null
set qSt=null
set aSt=null
set nSt=null
set fSt=null
set TSt=null
set hSt=null
set FSt=null
set kSt=null
set jSt=null
set vSt=null
set QSt=null
set USt=null
set ISt=null
set PSt=null
set ASt=null
set HSt=null
set KSt=null
set XSt=null
set NSt=null
set MSt=null
set wct=null
set uct=null
set sct=null
set ict=null
set cct=null
set bct=null
set yct=null
set pct=null
set ect=null
set act=null
set dct=null
set Rct=null
set gct=null
set hct=null
set Fct=null
endfunction
function Bde takes nothing returns nothing
local unit Pde=GetTriggerUnit()
local unit Hde=Pde
local real Ade
local integer Dde
local unit Jde
local unit Kde
local unitstate Lde
local player Xde
local unit Cde
local sound Vde
if GetUnitTypeId(Hde)==$4F303439 then
set Jde=Pde
set Kde=Jde
set Lde=UNIT_STATE_MANA
set Ade=GetUnitState(Kde,Lde)
set Cde=Pde
set Xde=GetOwningPlayer(Cde)
set Dde=GetPlayerId(Xde)
if Ade<=30. and kO[Dde]==false then
set kO[Dde]=true
set Vde=jO
call StartSound(Vde)
endif
endif
set Pde=null
set Hde=null
set Jde=null
set Kde=null
set Lde=null
set Xde=null
set Cde=null
set Vde=null
endfunction
function Bgc takes nothing returns nothing
local integer Qgc=GetResearched()
local integer Wgc
local integer Egc
local integer Zgc
local unit Ugc
local trigger Igc
local player Pgc
local unit Agc
local unit Dgc
local integer Hgc
local unit Jgc
local integer Kgc
local unit Lgc
local integer Xgc
local player Cgc
local unit Vgc
if Qgc==$52303158 then
set Ugc=wl
set Wgc=GetPlayerTechCount(GetOwningPlayer(Ugc),Qgc,true)
if Wgc==1 then
set rl=CreateTimer()
call TimerStart(rl,1.,false,PM)
set Igc=Sl
call EnableTrigger(Igc)
set Agc=wl
set Pgc=GetOwningPlayer(Agc)
set Egc=GetPlayerId(Pgc)
set Dgc=wl
set Hgc=$41323848
if GetUnitAbilityLevel(Dgc,Hgc)==1 then
set X[Egc]=$757A6734
endif
set Jgc=wl
set Kgc=$41323847
if GetUnitAbilityLevel(Jgc,Kgc)==1 then
set X[Egc]=$757A6735
endif
set Lgc=wl
set Xgc=$41323846
if GetUnitAbilityLevel(Lgc,Xgc)==1 then
set X[Egc]=$757A6736
endif
else
set Vgc=wl
set Cgc=GetOwningPlayer(Vgc)
set Zgc=GetPlayerId(Cgc)
call SetPlayerTechResearched(Player(Zgc),$5230384D,Wgc)
call SetPlayerTechResearched(Player(Zgc),$52303941,Wgc)
call SetPlayerTechResearched(Player(Zgc),$52303942,Wgc)
call SetPlayerTechResearched(Player(Zgc+4),$5230384D,Wgc)
call SetPlayerTechResearched(Player(Zgc+4),$52303941,Wgc)
call SetPlayerTechResearched(Player(Zgc+4),$52303942,Wgc)
endif
endif
set Ugc=null
set Igc=null
set Pgc=null
set Agc=null
set Dgc=null
set Jgc=null
set Lgc=null
set Cgc=null
set Vgc=null
endfunction
function EUs takes string YUs returns nothing
local unit GUs
local integer gUs
local unit hUs
local integer FUs
local unit kUs
local integer jUs
local string xUs
local integer vUs
local real mUs
local integer QUs
local string WUs
set aW[qW]=YUs
set qW=qW+1
set GUs=GetAttacker()
set hUs=GUs
set FUs=$494D3036
if RTS(hUs,FUs)!=null then
if GetRandomInt(1,100)<=10 then
set kUs=GUs
set jUs=$414D3033
call UnitAddAbility(kUs,jUs)
set xUs="when calling alloc_CallbackSingle_doAfter_ItemsTierFour in ItemsTierFour, line 509"
set aW[qW]=xUs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set vUs=fF
set RF[vUs]=722
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ItemsTierFour.","when calling error in ItemsTierFour, line 509")
set vUs=0
endif
else
set dF=dF-1
set vUs=nF[dF]
set RF[vUs]=722
endif
set qW=qW-1
set gUs=vUs
set cv[gUs]=GUs
set mUs=1.5
set QUs=gUs
set WUs="when calling doAfter in ItemsTierFour, line 509"
set aW[qW]=WUs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),mUs,QUs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set GUs=null
set hUs=null
set kUs=null
endfunction
function BjS takes nothing returns nothing
set qW=0
call EUs("via function reference ItemsTierFour, line 514")
endfunction
function rCe takes string JXp returns nothing
local item KXp
local unit LXp
local integer XXp
local unit CXp
local unittype VXp
local string BXp
local integer NXp
local real MXp
local integer wCe
local string uCe
set aW[qW]=JXp
set qW=qW+1
set KXp=GetManipulatedItem()
set LXp=GetTriggerUnit()
set CXp=LXp
set VXp=UNIT_TYPE_HERO
if IsUnitType(CXp,VXp)==true then
set BXp="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_CraftItemsNew in CraftItemsNew, line 22"
set aW[qW]=BXp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set NXp=fF
set RF[NXp]=805
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_CraftItemsNew.","when calling error in CraftItemsNew, line 22")
set NXp=0
endif
else
set dF=dF-1
set NXp=nF[dF]
set RF[NXp]=805
endif
set qW=qW-1
set XXp=NXp
set fj[XXp]=KXp
set Rj[XXp]=LXp
set MXp=.03
set wCe=XXp
set uCe="when calling doAfter in CraftItemsNew, line 22"
set aW[qW]=uCe
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),MXp,wCe,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set KXp=null
set LXp=null
set CXp=null
set VXp=null
endfunction
function Bno takes nothing returns nothing
set qW=0
call rCe("via function reference CraftItemsNew, line 18")
endfunction
function BoS takes nothing returns boolean
set uG=CreateTrigger()
return true
endfunction
function Bol takes nothing returns boolean
local unit Xol=GetTriggerUnit()
local integer Col=0
local integer Vol=0
loop
if UnitItemInSlot(Xol,Col)!=null then
set Vol=Vol+1
endif
set Col=Col+1
exitwhen Col>=bj_MAX_INVENTORY
endloop
set Xol=null
return Vol>1 and GetItemLevel(GetManipulatedItem())==1
endfunction
function BrS takes nothing returns boolean
local playerunitevent CrS=EVENT_PLAYER_UNIT_SPELL_CAST
local code VrS=u1
call emO(CrS,null,VrS,null)
set CrS=null
return true
endfunction
function Bur takes nothing returns nothing
local unit Bwr=GetTriggerUnit()
local unit Mwr=Bwr
local player Nwr=GetOwningPlayer(Mwr)
local unit wur
local string uur
local real rur
local real sur
local unit tur
local unittype iur
local unit Sur
local string cur
local real our
local real Our
local unit lur
local unittype bur
local unit yur
local string pur
local real eur
local real qur
local unit aur
local unittype nur
local unit dur
local string fur
local real Rur
local real Tur
local unit Yur
local unittype Gur
local unit gur
local string hur
local real Fur
local real kur
local unit jur
local unittype xur
local unit vur
local string mur
local real Qur
local real Wur
local unit Eur
local unittype Zur
local real Uur
local real Iur
local real Pur
local real Aur
local real Dur
local real Hur
local real Jur
local real Kur
local real Lur
local real Xur
local real Cur
local real Vur
if Nwr==du then
if Ew[2]==true then
set wur=Bwr
set uur="attack"
set Uur=Qw[40]
set Iur=Ww[40]
set rur=Uur
set sur=Iur
call IssuePointOrder(wur,uur,rur,sur)
set tur=Bwr
set iur=UNIT_TYPE_HERO
if IsUnitType(tur,iur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,40)
endif
else
set Sur=Bwr
set cur="attack"
set Pur=Qw[43]
set Aur=Ww[43]
set our=Pur
set Our=Aur
call IssuePointOrder(Sur,cur,our,Our)
set lur=Bwr
set bur=UNIT_TYPE_HERO
if IsUnitType(lur,bur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,43)
endif
endif
endif
if Nwr==nu then
set yur=Bwr
set pur="attack"
set Dur=Qw[43]
set Hur=Ww[43]
set eur=Dur
set qur=Hur
call IssuePointOrder(yur,pur,eur,qur)
set aur=Bwr
set nur=UNIT_TYPE_HERO
if IsUnitType(aur,nur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,43)
endif
endif
if Nwr==fu then
set dur=Bwr
set fur="attack"
set Jur=Qw[40]
set Kur=Ww[40]
set Rur=Jur
set Tur=Kur
call IssuePointOrder(dur,fur,Rur,Tur)
set Yur=Bwr
set Gur=UNIT_TYPE_HERO
if IsUnitType(Yur,Gur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,40)
endif
endif
if Nwr==Ru then
if Ew[1]==true then
set gur=Bwr
set hur="attack"
set Lur=Qw[43]
set Xur=Ww[43]
set Fur=Lur
set kur=Xur
call IssuePointOrder(gur,hur,Fur,kur)
set jur=Bwr
set xur=UNIT_TYPE_HERO
if IsUnitType(jur,xur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,43)
endif
else
set vur=Bwr
set mur="attack"
set Cur=Qw[40]
set Vur=Ww[40]
set Qur=Cur
set Wur=Vur
call IssuePointOrder(vur,mur,Qur,Wur)
set Eur=Bwr
set Zur=UNIT_TYPE_HERO
if IsUnitType(Eur,Zur) then
call SaveInteger(qu,GetHandleId(Bwr),$6D6F7665,40)
endif
endif
endif
set Bwr=null
set Nwr=null
set Mwr=null
set wur=null
set tur=null
set iur=null
set Sur=null
set lur=null
set bur=null
set yur=null
set aur=null
set nur=null
set dur=null
set Yur=null
set Gur=null
set gur=null
set jur=null
set xur=null
set vur=null
set Eur=null
set Zur=null
endfunction
function PBr takes real OBr,real lBr,string bBr returns texttag
local texttag pBr=CreateTextTag()
local texttag RBr=pBr
local string TBr=bBr
local real YBr=MG
local texttag yBr
local texttag eBr
local texttag qBr
local texttag aBr
local texttag nBr
local texttag dBr
local texttag fBr
local texttag GBr
local real gBr
local real hBr
local real FBr
local texttag kBr
local real jBr
local texttag xBr
local real vBr
local texttag mBr
local real QBr
local real WBr
local texttag EBr
local boolean ZBr
local texttag UBr
local boolean IBr
call SetTextTagText(RBr,TBr,YBr*.0023)
set eBr=pBr
set GBr=eBr
set gBr=OBr
set hBr=lBr
set FBr=0.
call SetTextTagPos(GBr,gBr,hBr,FBr)
set qBr=eBr
set kBr=qBr
set jBr=2.
call SetTextTagFadepoint(kBr,jBr)
set aBr=qBr
set xBr=aBr
set vBr=3.
call SetTextTagLifespan(xBr,vBr)
set nBr=aBr
set mBr=nBr
set QBr=0.
set WBr=.03
call SetTextTagVelocity(mBr,QBr,WBr)
set dBr=nBr
set EBr=dBr
set ZBr=false
call SetTextTagPermanent(EBr,ZBr)
set fBr=dBr
set UBr=fBr
set IBr=true
call SetTextTagVisibility(UBr,IBr)
set yBr=fBr
set ktw=yBr
set yBr=null
set pBr=null
set eBr=null
set qBr=null
set aBr=null
set nBr=null
set dBr=null
set fBr=null
set RBr=null
set GBr=null
set kBr=null
set xBr=null
set mBr=null
set EBr=null
set UBr=null
return ktw
endfunction
function UuS takes unit luS,integer buS returns nothing
local integer auS=buS
local string yuS="+"+I2S(auS)
local unit TuS=luS
local unit YuS=TuS
local real xuS=GetUnitX(YuS)
local unit GuS=TuS
local real vuS=xuS
local real muS=GetUnitY(GuS)
local real nuS=vuS
local real duS=muS
local real QuS=wg
local real WuS=ug
local real fuS=QuS
local real RuS=WuS
local real EuS=nuS-fuS
local real ZuS=duS-RuS
local real puS=EuS
local real euS=ZuS
local texttag quS=PBr(puS,euS,yuS)
local texttag guS=quS
local integer huS=255
local integer FuS=220
local integer kuS=0
local integer juS=255
call SetTextTagColor(guS,huS,FuS,kuS,juS)
set quS=null
set TuS=null
set YuS=null
set GuS=null
set guS=null
endfunction
function Byi takes nothing returns nothing
local unit syi=GetAttacker()
local unit lyi=syi
local unit tyi
local integer iyi
local integer Syi
local integer cyi
local integer oyi
local integer Oyi
local unit byi
local unit yyi
local unit pyi
local unit eyi
local unittype qyi
local unit ayi
local unittype nyi
local player dyi
local unit fyi
local player Ryi
local integer Tyi
local player Yyi
local playerstate Gyi
local integer gyi
local player hyi
local playerstate Fyi
local unit kyi
local unittype jyi
local unit xyi
local unittype vyi
local player myi
local unit Qyi
local player Wyi
local integer Eyi
local player Zyi
local playerstate Uyi
local integer Iyi
local player Pyi
local playerstate Ayi
local boolean Dyi
local boolean Hyi
local boolean Jyi
local player Kyi
local playerstate Lyi
local boolean Xyi
local player Cyi
local playerstate Vyi
if GetUnitTypeId(lyi)==$6F726169 then
set Dyi=true
else
set byi=syi
set Dyi=GetUnitTypeId(byi)==$6F737731
endif
if Dyi then
set yyi=syi
set Hyi=GetPlayerTechCount(GetOwningPlayer(yyi),$5230344E,true)>0
else
set Hyi=false
endif
if Hyi then
set tyi=GetTriggerUnit()
set pyi=syi
set iyi=GetPlayerTechCount(GetOwningPlayer(pyi),$5230344E,true)
set eyi=tyi
set qyi=UNIT_TYPE_MECHANICAL
if IsUnitType(eyi,qyi)==true then
set ayi=tyi
set nyi=UNIT_TYPE_STRUCTURE
set Jyi=IsUnitType(ayi,nyi)==false
else
set Jyi=false
endif
if Jyi then
set Syi=1*iyi
call UuS(syi,Syi)
set fyi=syi
set dyi=GetOwningPlayer(fyi)
set cyi=GetPlayerId(dyi)-4
set Ryi=Player(cyi)
set Tyi=Syi
set Yyi=Ryi
set Gyi=PLAYER_STATE_RESOURCE_GOLD
set gyi=Tyi
set Kyi=Yyi
set Lyi=Gyi
set hyi=Yyi
set Fyi=Gyi
call SetPlayerState(Kyi,Lyi,GetPlayerState(hyi,Fyi)+gyi)
set hr[cyi]=hr[cyi]+Syi
set Fr[cyi]=Fr[cyi]+Syi
set Cr[cyi]=Cr[cyi]+Syi
endif
set kyi=tyi
set jyi=UNIT_TYPE_STRUCTURE
if IsUnitType(kyi,jyi)==true then
set xyi=tyi
set vyi=UNIT_TYPE_MECHANICAL
set Xyi=IsUnitType(xyi,vyi)==true
else
set Xyi=false
endif
if Xyi then
set oyi=3*iyi
call UuS(syi,oyi)
set Qyi=syi
set myi=GetOwningPlayer(Qyi)
set Oyi=GetPlayerId(myi)-4
set Wyi=Player(Oyi)
set Eyi=oyi
set Zyi=Wyi
set Uyi=PLAYER_STATE_RESOURCE_GOLD
set Iyi=Eyi
set Cyi=Zyi
set Vyi=Uyi
set Pyi=Zyi
set Ayi=Uyi
call SetPlayerState(Cyi,Vyi,GetPlayerState(Pyi,Ayi)+Iyi)
set hr[Oyi]=hr[Oyi]+oyi
set Fr[Oyi]=Fr[Oyi]+oyi
set Cr[Oyi]=Cr[Oyi]+oyi
endif
endif
set syi=null
set tyi=null
set lyi=null
set byi=null
set yyi=null
set pyi=null
set eyi=null
set qyi=null
set ayi=null
set nyi=null
set dyi=null
set fyi=null
set Ryi=null
set Yyi=null
set Gyi=null
set hyi=null
set Fyi=null
set kyi=null
set jyi=null
set xyi=null
set vyi=null
set myi=null
set Qyi=null
set Wyi=null
set Zyi=null
set Uyi=null
set Pyi=null
set Ayi=null
set Kyi=null
set Lyi=null
set Cyi=null
set Vyi=null
endfunction
function Byu takes nothing returns nothing
local unit Lyu=GetEnteringUnit()
local unit Xyu=Lyu
local unit Cyu
local string Vyu
if GetUnitTypeId(Xyu)==$65646F63 then
set Cyu=Lyu
set Vyu="bearform"
call IssueImmediateOrder(Cyu,Vyu)
endif
set Lyu=null
set Xyu=null
set Cyu=null
endfunction
function C2e takes nothing returns boolean
local unit P2e=GetFilterUnit()
local unit J2e=P2e
local player K2e=sb
local real A2e
local real D2e
local real H2e
local unit L2e
local unit X2e
if IsUnitEnemy(J2e,K2e)==true then
set L2e=P2e
set A2e=GetUnitX(L2e)
set X2e=P2e
set D2e=GetUnitY(X2e)
set H2e=SquareRoot((wb-A2e)*(wb-A2e)+(ub-D2e)*(ub-D2e))
if Ml>H2e then
set Ml=H2e
set rb=P2e
endif
endif
set P2e=null
set J2e=null
set K2e=null
set L2e=null
set X2e=null
return false
endfunction
function C4e takes nothing returns boolean
local playerunitevent L4e=EVENT_PLAYER_UNIT_DEATH
local code X4e=duw
call emO(L4e,null,X4e,null)
set L4e=null
return true
endfunction
function C5u takes nothing returns boolean
return true
endfunction
function C6S takes nothing returns boolean
local trigger J6S
local trigger K6S
local playerunitevent L6S
local integer X6S
set uy=CreateTrigger()
set J6S=uy
call DisableTrigger(J6S)
set K6S=uy
set L6S=EVENT_PLAYER_UNIT_DEATH
set X6S=0
loop
call TriggerRegisterPlayerUnitEvent(K6S,Player(X6S),L6S,null)
set X6S=X6S+1
exitwhen X6S==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(uy,t1)
set J6S=null
set K6S=null
set L6S=null
return true
endfunction
function C6c takes nothing returns nothing
local unit k6c=GetTriggerUnit()
local unit x6c=k6c
local player j6c=GetOwningPlayer(x6c)
local unit v6c
local string m6c
local real Q6c
local real W6c
local unit E6c
local unittype Z6c
local unit U6c
local string I6c
local real P6c
local real A6c
local unit D6c
local unittype H6c
local real J6c
local real K6c
local real L6c
local real X6c
if j6c==Ru then
set v6c=k6c
set m6c="attack"
set J6c=Qw[35]
set K6c=Ww[35]
set Q6c=J6c
set W6c=K6c
call IssuePointOrder(v6c,m6c,Q6c,W6c)
set E6c=k6c
set Z6c=UNIT_TYPE_HERO
if IsUnitType(E6c,Z6c) then
call SaveInteger(qu,GetHandleId(k6c),$6D6F7665,35)
endif
else
set U6c=k6c
set I6c="attack"
set L6c=Qw[56]
set X6c=Ww[56]
set P6c=L6c
set A6c=X6c
call IssuePointOrder(U6c,I6c,P6c,A6c)
set D6c=k6c
set H6c=UNIT_TYPE_HERO
if IsUnitType(D6c,H6c) then
call SaveInteger(qu,GetHandleId(k6c),$6D6F7665,56)
endif
endif
set k6c=null
set j6c=null
set x6c=null
set v6c=null
set E6c=null
set Z6c=null
set U6c=null
set D6c=null
set H6c=null
endfunction
function C7b takes nothing returns boolean
local playerunitevent D7b=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code H7b=F1
local playerunitevent J7b
local code K7b
local playerunitevent L7b
local code X7b
call emO(D7b,null,H7b,null)
set J7b=EVENT_PLAYER_UNIT_DEATH
set K7b=k1
call emO(J7b,null,K7b,null)
set L7b=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set X7b=j1
call emO(L7b,null,X7b,null)
set D7b=null
set J7b=null
set L7b=null
return true
endfunction
function d7t takes unit b7t returns nothing
local unit q7t=b7t
local integer y7t=GetUnitTypeId(q7t)
local player p7t
local integer e7t
local player a7t
local player n7t
if y7t==$75736870 then
set p7t=GetOwningPlayer(b7t)
set e7t=0
loop
exitwhen e7t>12
set a7t=UY[e7t]
set n7t=p7t
if IsPlayerAlly(a7t,n7t) then
set fy[e7t]=1
endif
set e7t=e7t+1
endloop
endif
set p7t=null
set q7t=null
set a7t=null
set n7t=null
endfunction
function CFc takes nothing returns nothing
call d7t(GetTriggerUnit())
endfunction
function CFt takes nothing returns boolean
return true
endfunction
function CGc takes nothing returns nothing
local unit uGc=GetEnteringUnit()
local unit sGc=uGc
local integer rGc
local unit tGc
local string iGc
local unit SGc
local unit cGc
local integer oGc
local unit OGc
local integer lGc
local integer bGc
local unit yGc
local integer pGc
local unit eGc
local integer qGc
local integer aGc
local unit nGc
local integer dGc
local unit fGc
local integer RGc
local integer TGc
local unit YGc
local integer GGc
local unit gGc
local integer hGc
local integer FGc
local unit kGc
local integer jGc
local unit xGc
local integer vGc
local integer mGc
local unit QGc
local integer WGc
local unit EGc
local unit ZGc
local unit UGc
local unit IGc
local unit PGc
local unit AGc
local unit DGc
local integer HGc
local boolean JGc
local boolean KGc
local force LGc
local real XGc
if GetUnitTypeId(sGc)==$6F303241 then
set tGc=uGc
set iGc="manaflareon"
call IssueImmediateOrder(tGc,iGc)
endif
set SGc=uGc
if GetUnitTypeId(SGc)==$75303055 then
set rGc=GetRandomInt(1,5)
if rGc==1 then
set cGc=uGc
set oGc=$41304C47
call UnitAddAbility(cGc,oGc)
set OGc=uGc
set lGc=$41304C47
set bGc=4
call SetUnitAbilityLevel(OGc,lGc,bGc)
endif
if rGc==2 then
set yGc=uGc
set pGc=$41303152
call UnitAddAbility(yGc,pGc)
set eGc=uGc
set qGc=$41303152
set aGc=4
call SetUnitAbilityLevel(eGc,qGc,aGc)
endif
if rGc==3 then
set nGc=uGc
set dGc=$41437673
call UnitAddAbility(nGc,dGc)
set fGc=uGc
set RGc=$41437673
set TGc=4
call SetUnitAbilityLevel(fGc,RGc,TGc)
endif
if rGc==4 then
set YGc=uGc
set GGc=$41304C46
call UnitAddAbility(YGc,GGc)
set gGc=uGc
set hGc=$41304C46
set FGc=4
call SetUnitAbilityLevel(gGc,hGc,FGc)
endif
if rGc==5 then
set kGc=uGc
set jGc=$41304E32
call UnitAddAbility(kGc,jGc)
set xGc=uGc
set vGc=$41304E32
set mGc=4
call SetUnitAbilityLevel(xGc,vGc,mGc)
set QGc=uGc
set WGc=$41437361
call UnitAddAbility(QGc,WGc)
call IssueImmediateOrderById(uGc,852174)
endif
set EGc=uGc
if GetUnitTypeId(EGc)==$6830324C then
set JGc=true
else
set ZGc=uGc
set JGc=GetUnitTypeId(ZGc)==$68303254
endif
if JGc then
set KGc=true
else
set UGc=uGc
set KGc=GetUnitTypeId(UGc)==$6830324D
endif
if KGc then
set LGc=bj_FORCE_ALL_PLAYERS
set IGc=uGc
set XGc=GetUnitX(IGc)
set PGc=uGc
call PingMinimapForForceEx(LGc,XGc,GetUnitY(PGc),5.,1,128.,0.,128.)
endif
set AGc=uGc
if GetUnitTypeId(AGc)==$6E676C6D then
set DGc=uGc
set HGc=$416D6E78
call UnitAddAbility(DGc,HGc)
endif
endif
set uGc=null
set sGc=null
set tGc=null
set SGc=null
set cGc=null
set OGc=null
set yGc=null
set eGc=null
set nGc=null
set fGc=null
set YGc=null
set gGc=null
set kGc=null
set xGc=null
set QGc=null
set EGc=null
set ZGc=null
set UGc=null
set IGc=null
set PGc=null
set AGc=null
set DGc=null
set LGc=null
endfunction
function CHw takes nothing returns nothing
local integer QHw=GetResearched()
local integer WHw
local unit EHw
local unit ZHw
local integer UHw
local player IHw
local unit PHw
local unit AHw
local integer DHw
local integer HHw
local unit JHw
local integer KHw
local integer LHw
local unit XHw
if QHw==$52323339 then
set ly=10
set EHw=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(EHw),$52313339,2)
endif
if QHw==$52313339 then
set ly=0
set Sy=Sy+1
set ZHw=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(ZHw),$52313339,0)
set UHw=$52313339
set PHw=iy
set IHw=GetOwningPlayer(PHw)
set WHw=GetPlayerTechCount(IHw,UHw,true)
set AHw=iy
set DHw=$41315257
set HHw=1+WHw
call SetUnitAbilityLevel(AHw,DHw,HHw)
set JHw=iy
set KHw=$41325257
set LHw=1+WHw
call SetUnitAbilityLevel(JHw,KHw,LHw)
if WHw==2 then
set XHw=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(XHw),$52323339,0)
endif
endif
set EHw=null
set ZHw=null
set IHw=null
set PHw=null
set AHw=null
set JHw=null
set XHw=null
endfunction
function CIw takes nothing returns boolean
local trigger PIw
local rect AIw
local region DIw
local trigger HIw
local boolexpr JIw
local trigger KIw
local playerunitevent LIw
local code XIw
set td=CreateTrigger()
set PIw=td
set AIw=bj_mapInitialPlayableArea
set DIw=CreateRegion()
call RegionAddRect(DIw,AIw)
call TriggerRegisterEnterRegion(PIw,DIw,null)
set HIw=td
set JIw=Condition(O7)
call TriggerAddCondition(HIw,JIw)
set KIw=td
call DisableTrigger(KIw)
set LIw=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XIw=l7
call emO(LIw,null,XIw,null)
set PIw=null
set AIw=null
set DIw=null
set HIw=null
set JIw=null
set KIw=null
set LIw=null
return true
endfunction
function CMw takes nothing returns nothing
local unit JMw=GetTriggerUnit()
local unit KMw
local integer LMw
local boolean XMw
if GetUnitTypeId(JMw)==$484D306B then
set KMw=GetTriggerUnit()
set LMw=$424D3077
set XMw=GetUnitAbilityLevel(KMw,LMw)==0
else
set XMw=false
endif
if XMw then
call IssueTargetOrderById(GetTriggerUnit(),852066,GetTriggerUnit())
endif
set JMw=null
set KMw=null
endfunction
function CMy takes nothing returns boolean
local playerunitevent JMy=EVENT_PLAYER_UNIT_SPELL_CAST
local code KMy=U7
local playerunitevent LMy
local code XMy
call emO(JMy,null,KMy,null)
set LMy=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XMy=I7
call emO(LMy,null,XMy,null)
set JMy=null
set LMy=null
return true
endfunction
function qIl takes integer OIl,string lIl returns nothing
local integer bIl
local string yIl
local integer pIl
local string eIl
set aW[qW]=lIl
set qW=qW+1
if wk[OIl]==0 then
if OIl==0 then
call L8c("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 415")
else
call L8c("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 415")
endif
endif
set bIl=OIl
set yIl="when calling destroyLLEntry in LinkedList, line 415"
set aW[qW]=yIl
set qW=qW+1
set pIl=bIl
set eIl="when calling dealloc_LLEntry in LinkedList, line 415"
set aW[qW]=eIl
set qW=qW+1
if wk[pIl]==0 then
call L8c("Double free: object of type LLEntry","when calling error in LinkedList, line 415")
else
set BF[NF]=pIl
set NF=NF+1
set wk[pIl]=0
endif
set qW=qW-1
set qW=qW-1
set qW=qW-1
endfunction
function iGr takes integer MYr,integer wGr,string uGr returns nothing
local integer rGr
local integer sGr
local string tGr
set aW[qW]=uGr
set qW=qW+1
if ok[MYr]==0 then
if MYr==0 then
call L8c("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 392")
else
call L8c("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 392")
endif
endif
set rGr=MYr
set sGr=wGr
set tGr="when calling removeEntry in LinkedList, line 392"
set aW[qW]=tGr
set qW=qW+1
set Kv[Jv[sGr]]=Kv[sGr]
set Jv[Kv[sGr]]=Jv[sGr]
call qIl(sGr,"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 395")
set Bv[rGr]=Bv[rGr]-1
set qW=qW-1
set qW=qW-1
endfunction
function eWp takes integer iWp,integer SWp,string cWp returns boolean
local boolean oWp
local integer OWp
local integer lWp
local string bWp
local boolean yWp
local integer pWp
set aW[qW]=cWp
set qW=qW+1
if ok[iWp]==0 then
if iWp==0 then
call L8c("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 138")
else
call L8c("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 138")
endif
endif
set OWp=iWp
set lWp=SWp
set bWp="when calling remove in LinkedList, line 138"
set aW[qW]=bWp
set qW=qW+1
set yWp=false
set pWp=Kv[Vv[OWp]]
loop
exitwhen not (pWp!=Vv[OWp])
if Hv[pWp]==lWp then
call iGr(OWp,pWp,"when calling removeEntry in LinkedList, line 143")
set yWp=true
exitwhen true
endif
set pWp=Kv[pWp]
endloop
set qW=qW-1
set oWp=yWp
set qW=qW-1
return oWp
endfunction
function Gqp takes player xbp,integer vbp,string mbp returns nothing
local integer Qbp
local sound Wbp
local string Ebp
local real Zbp
local string Ubp
local real Ibp
local trigger Pbp
local trigger Abp
local trigger Dbp
local trigger Hbp
local trigger Jbp
local string Kbp
local real Lbp
local string Xbp
local real Cbp
local trigger Vbp
local trigger Bbp
local trigger Nbp
local trigger Mbp
local trigger wyp
local string uyp
local real ryp
local string syp
local real typ
local trigger iyp
local trigger Syp
local trigger cyp
local trigger oyp
local string Oyp
local real lyp
local string byp
local real yyp
local string pyp
local real eyp
local string qyp
local real ayp
local trigger nyp
local trigger dyp
local string fyp
local real Ryp
local string Typ
local real Yyp
local trigger Gyp
local trigger gyp
local trigger hyp
local trigger Fyp
local string kyp
local real jyp
local string xyp
local real vyp
local trigger myp
local trigger Qyp
local string Wyp
local real Eyp
local string Zyp
local real Uyp
local trigger Iyp
local trigger Pyp
local trigger Ayp
local trigger Dyp
local string Hyp
local real Jyp
local string Kyp
local real Lyp
local trigger Xyp
local string Cyp
local real Vyp
local string Byp
local real Nyp
local trigger Myp
local trigger wpp
local string upp
local real rpp
local string spp
local real tpp
local trigger ipp
local trigger Spp
local string cpp
local real opp
local string Opp
local real lpp
local trigger bpp
local trigger ypp
local string ppp
local real epp
local string qpp
local real app
local trigger npp
local string dpp
local real fpp
local string Rpp
local real Tpp
local trigger Ypp
local trigger Gpp
local string gpp
local real hpp
local string Fpp
local real kpp
local trigger jpp
local trigger xpp
local trigger vpp
local trigger mpp
local string Qpp
local real Wpp
local string Epp
local real Zpp
local trigger Upp
local trigger Ipp
local trigger Ppp
local string App
local real Dpp
local string Hpp
local real Jpp
local trigger Kpp
local trigger Lpp
local trigger Xpp
local trigger Cpp
local trigger Vpp
local string Bpp
local real Npp
local string Mpp
local real wep
local trigger uep
local trigger rep
local string sep
local real tep
local string iep
local real Sep
local trigger cep
local trigger oep
local string Oep
local real lep
local string bep
local real yep
local trigger pep
local trigger eep
local trigger qep
local trigger aep
local unit nep
local integer dep
local integer fep
local integer Rep
local integer Tep
local unit Yep
local integer Gep
local integer gep
local integer hep
local integer Fep
local unit kep
local integer jep
local integer xep
local integer vep
local integer mep
local unit Qep
local integer Wep
local integer Eep
local integer Zep
local integer Uep
local player Iep
local real Pep
local real Aep
local unit Dep
local unit Hep
local player Jep
local integer Kep
local player Lep
local integer Xep
local player Cep
local integer Vep
local player Bep
local integer Nep
local player Mep
local integer wqp
local player uqp
local integer rqp
local player sqp
local integer tqp
local player iqp
local integer Sqp
local player cqp
local integer oqp
local player Oqp
local integer lqp
local player bqp
local integer yqp
local player pqp
local integer eqp
local player qqp
local integer aqp
local player nqp
local integer dqp
local player fqp
local integer Rqp
local player Tqp
local integer Yqp
set aW[qW]=mbp
set qW=qW+1
set Qbp=GetPlayerId(xbp)
set br=br+1
set Wbp=bj_questUpdatedSound
call StartSound(Wbp)
if vbp==1 then
set Ebp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff22832fPandaren|r!"
set Zbp=30.
set Ubp=Ebp
set Ibp=Zbp
call DisplayTimedTextToPlayer(IY,0.,0.,Ibp,Ubp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set Pbp=dn
call EnableTrigger(Pbp)
set Abp=BY
call EnableTrigger(Abp)
set Dbp=NY
call EnableTrigger(Dbp)
set Hbp=tg
call EnableTrigger(Hbp)
set Jbp=yY
call EnableTrigger(Jbp)
set u[Qbp]=1
set w[Qbp]=$414D3176
set j[Qbp]=$414D3175
set r[Qbp]=$484D306B
set s[Qbp]=$484D306A
set t[Qbp]=$484D3068
set i[Qbp]=$484D3069
set v[Qbp]=$78303073
set m[Qbp]=$78303074
set Q[Qbp]=$78303075
set W[Qbp]=$78303172
set E[Qbp]=$78303173
set Z[Qbp]=$78303174
set U[Qbp]=$78303175
set I[Qbp]=$7830317A
set P[Qbp]=$78303275
set A[Qbp]=$6E30304F
set D[Qbp]=$78303176
set H[Qbp]=$78303177
set J[Qbp]=$7830316D
set K[Qbp]=$6E303051
set L[Qbp]=$78303178
set V[Qbp]=$524D3073
set B[Qbp]=$524D3074
set N[Qbp]=$524D3077
set M[Qbp]=$524D3075
set ww[Qbp]=$524D3076
set uw[Qbp]=$52303331
set rw[Qbp]=$524D3163
set sw[Qbp]=$524D3166
set tw[Qbp]=$524D3165
set iw[Qbp]=$524D3169
set Sw[Qbp]=$524D3167
set cw[Qbp]=$524D316A
set ow[Qbp]=$524D3139
set Ow[Qbp]=$524D3164
set lw[Qbp]=$6E303045
set bw[Qbp]=$68303143
set yw[Qbp]=$6E656630
set pw[Qbp]=$6E303047
set ew[Qbp]=$6E303048
set qw[Qbp]=$6E303049
set aw[Qbp]=$6E30304A
set nw[Qbp]=$6E30304B
set dw[Qbp]=$6E30324D
set fw[Qbp]=$6E30324E
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3033,0)
endif
if vbp==2 then
call eWp(vY,$41313931,"when calling remove in PickRace, line 1771")
set Kbp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff9400D3Arakkoa|r!"
set Lbp=30.
set Xbp=Kbp
set Cbp=Lbp
call DisplayTimedTextToPlayer(IY,0.,0.,Cbp,Xbp)
call SetPlayerTechResearched(xbp,$526E7369,3)
call GetTriggerPlayer()
set Vbp=cn
call EnableTrigger(Vbp)
set Bbp=eg
call EnableTrigger(Bbp)
set Nbp=qg
call EnableTrigger(Nbp)
set Mbp=PO
call EnableTrigger(Mbp)
set wyp=uY
call EnableTrigger(wyp)
set u[Qbp]=2
set w[Qbp]=$414D3039
set j[Qbp]=$78303035
set r[Qbp]=$48303247
set s[Qbp]=$48303248
set t[Qbp]=$48303249
set i[Qbp]=$4830324A
set v[Qbp]=$78323232
set m[Qbp]=$78303033
set Q[Qbp]=$78303034
set W[Qbp]=$7830307E
set E[Qbp]=$78303121
set Z[Qbp]=$78303130
set U[Qbp]=$78303131
set I[Qbp]=$78303072
set P[Qbp]=$78303270
set A[Qbp]=$78303039
set D[Qbp]=$78303062
set H[Qbp]=$78303063
set J[Qbp]=$78303061
set K[Qbp]=$7830326F
set L[Qbp]=$78303071
set V[Qbp]=$524D3031
set B[Qbp]=$524D3032
set N[Qbp]=$524D3036
set M[Qbp]=$524D3033
set ww[Qbp]=$524D3034
set uw[Qbp]=$524D306A
set rw[Qbp]=$524D3068
set sw[Qbp]=$524D3070
set tw[Qbp]=$524D3071
set iw[Qbp]=$524D3072
set Sw[Qbp]=$524D3067
set cw[Qbp]=$524D3063
set ow[Qbp]=$524D3069
set Ow[Qbp]=$52303230
set lw[Qbp]=$6E303044
set bw[Qbp]=$6E303043
set yw[Qbp]=$6E303041
set pw[Qbp]=$6E303042
set ew[Qbp]=$78313131
set qw[Qbp]=$78303064
set aw[Qbp]=$78303036
set nw[Qbp]=$6E303250
set dw[Qbp]=$78303038
set fw[Qbp]=$6E656630
call SetPlayerTechMaxAllowed(Player(Qbp),$4830324B,0)
endif
if vbp==3 then
call eWp(vY,$41313932,"when calling remove in PickRace, line 1832")
set uyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff1E90FFDraconid|r"
set ryp=30.
set syp=uyp
set typ=ryp
call DisplayTimedTextToPlayer(IY,0.,0.,typ,syp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set gd=GetTriggerPlayer()
set iyp=WR
call EnableTrigger(iyp)
set Syp=HG
call EnableTrigger(Syp)
set cyp=bn
call EnableTrigger(cyp)
set oyp=tY
call EnableTrigger(oyp)
set u[Qbp]=3
set w[Qbp]=$41305635
set j[Qbp]=$41305634
set r[Qbp]=$55303041
set s[Qbp]=$55303042
set t[Qbp]=$55303043
set i[Qbp]=$55303045
set v[Qbp]=$6F303246
set m[Qbp]=$6F303247
set Q[Qbp]=$6F303248
set W[Qbp]=$6F303250
set E[Qbp]=$6F303251
set Z[Qbp]=$6F303252
set U[Qbp]=$6F303253
set I[Qbp]=$6F30324F
set P[Qbp]=$6E303054
set A[Qbp]=$6F303249
set D[Qbp]=$6F30324A
set H[Qbp]=$6F30324B
set J[Qbp]=$6F30324C
set K[Qbp]=$6F30324D
set L[Qbp]=$6F30324E
set V[Qbp]=$5230345A
set B[Qbp]=$52303534
set N[Qbp]=$52303545
set M[Qbp]=$52303537
set ww[Qbp]=$52303539
set uw[Qbp]=$52303546
set rw[Qbp]=$52303547
set sw[Qbp]=$52303548
set tw[Qbp]=$52303549
set iw[Qbp]=$5230354A
set Sw[Qbp]=$5230354B
set cw[Qbp]=$5230354C
set ow[Qbp]=$5230354D
set Ow[Qbp]=$5230354E
set lw[Qbp]=$6E303059
set bw[Qbp]=$6E30305A
set yw[Qbp]=$6E303131
set pw[Qbp]=$6E303133
set ew[Qbp]=$6E303134
set qw[Qbp]=$6E303136
set aw[Qbp]=$6E656630
set nw[Qbp]=$6E303242
set dw[Qbp]=$6E303248
set fw[Qbp]=$6E303246
call SetPlayerTechMaxAllowed(Player(Qbp),$55303046,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$55303048,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$5530304A,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$55303049,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$55303047,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$5530304D,0)
endif
if vbp==4 then
call eWp(vY,$41313933,"when calling remove in PickRace, line 1897")
set Oyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff00b7ffRogue|r"
set lyp=30.
set byp=Oyp
set yyp=lyp
call DisplayTimedTextToPlayer(IY,0.,0.,yyp,byp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set u[Qbp]=4
set w[Qbp]=$414D3132
set j[Qbp]=$78303068
set r[Qbp]=$484D3064
set s[Qbp]=$484D3067
set t[Qbp]=$484D3066
set i[Qbp]=$484D3065
set v[Qbp]=$6F303243
set m[Qbp]=$78303066
set Q[Qbp]=$78303067
set W[Qbp]=$78303234
set E[Qbp]=$78303235
set Z[Qbp]=$78303236
set U[Qbp]=$78303237
set I[Qbp]=$78303233
set P[Qbp]=$78303276
set A[Qbp]=$6E656E66
set D[Qbp]=$6E627267
set H[Qbp]=$6E6D6564
set J[Qbp]=$6E616E6F
set K[Qbp]=$7830317D
set L[Qbp]=$7830317E
set V[Qbp]=$524D306C
set B[Qbp]=$524D306E
set N[Qbp]=$414D3131
set M[Qbp]=$524D306D
set ww[Qbp]=$524D306F
set uw[Qbp]=$52303535
set rw[Qbp]=$524D316B
set sw[Qbp]=$52303543
set tw[Qbp]=$524D316E
set iw[Qbp]=$52303538
set Sw[Qbp]=$52303541
set cw[Qbp]=$524D316D
set ow[Qbp]=$52303536
set Ow[Qbp]=$52303542
set lw[Qbp]=$78303239
set bw[Qbp]=$6E393931
set yw[Qbp]=$6E30324F
set pw[Qbp]=$78303230
set ew[Qbp]=$78303232
set qw[Qbp]=$6E303245
set aw[Qbp]=$78303231
set nw[Qbp]=$65646162
set dw[Qbp]=$78303221
set fw[Qbp]=$6E656630
call SetPlayerTechMaxAllowed(Player(Qbp),$456D3173,0)
endif
if vbp==5 then
call eWp(vY,$41313934,"when calling remove in PickRace, line 1952")
set pyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffFF4500Vulpera|r!"
set eyp=30.
set qyp=pyp
set ayp=eyp
call DisplayTimedTextToPlayer(IY,0.,0.,ayp,qyp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set nyp=Yn
call EnableTrigger(nyp)
set dyp=dY
call EnableTrigger(dyp)
set Ud=Player(Qbp)
set u[Qbp]=5
set w[Qbp]=$41313037
set j[Qbp]=$41313036
set r[Qbp]=$4F303258
set s[Qbp]=$4F303337
set t[Qbp]=$4F303338
set i[Qbp]=$4F303339
set v[Qbp]=$6830315A
set m[Qbp]=$6830314B
set Q[Qbp]=$6830314C
set W[Qbp]=$6830314E
set E[Qbp]=$6830314F
set Z[Qbp]=$68303150
set U[Qbp]=$68303151
set I[Qbp]=$6E303152
set P[Qbp]=$6830314D
set A[Qbp]=$6F303359
set D[Qbp]=$6F30325A
set H[Qbp]=$6F303330
set J[Qbp]=$6F303331
set K[Qbp]=$6F303332
set L[Qbp]=$6F303333
set C[Qbp]=$6E30314F
set V[Qbp]=$52303550
set B[Qbp]=$52303552
set N[Qbp]=$52303556
set M[Qbp]=$52303553
set ww[Qbp]=$52303555
set uw[Qbp]=$52303559
set rw[Qbp]=$5230355A
set sw[Qbp]=$52303631
set tw[Qbp]=$52303638
set iw[Qbp]=$52303639
set Sw[Qbp]=$52303641
set cw[Qbp]=$52303642
set ow[Qbp]=$52303643
set Ow[Qbp]=$52303644
set lw[Qbp]=$68303152
set bw[Qbp]=$6E30314B
set yw[Qbp]=$68303154
set pw[Qbp]=$68303155
set ew[Qbp]=$68303156
set qw[Qbp]=$6E30314D
set aw[Qbp]=$6E656630
set nw[Qbp]=$68303157
set dw[Qbp]=$6E303150
set fw[Qbp]=$6E303151
call SetPlayerTechMaxAllowed(Player(Qbp),$4F303430,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$4F303344,0)
endif
if vbp==6 then
call eWp(vY,$41313935,"when calling remove in PickRace, line 2012")
set fyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff8c00ffSatyr|r!"
set Ryp=30.
set Typ=fyp
set Yyp=Ryp
call DisplayTimedTextToPlayer(IY,0.,0.,Yyp,Typ)
call SetPlayerTechResearched(xbp,$526E7369,2)
set Gyp=gn
call EnableTrigger(Gyp)
set gyp=pY
call EnableTrigger(gyp)
set hyp=Da
call EnableTrigger(hyp)
set Fyp=Fd
call EnableTrigger(Fyp)
set u[Qbp]=6
set w[Qbp]=$414D3238
set j[Qbp]=$414D3231
set r[Qbp]=$484D3039
set s[Qbp]=$484D3061
set t[Qbp]=$484D3062
set i[Qbp]=$484D3063
set v[Qbp]=$75393954
set m[Qbp]=$6E303156
set Q[Qbp]=$6E303157
set W[Qbp]=$68303158
set E[Qbp]=$68303159
set Z[Qbp]=$68303230
set U[Qbp]=$68303231
set I[Qbp]=$6F303343
set P[Qbp]=$7830327B
set A[Qbp]=$7830327E
set D[Qbp]=$78303321
set H[Qbp]=$78303279
set J[Qbp]=$7830327C
set K[Qbp]=$7830327D
set L[Qbp]=$78303278
set V[Qbp]=$524D307E
set B[Qbp]=$524D3130
set N[Qbp]=$414D3237
set M[Qbp]=$524D3121
set ww[Qbp]=$524D3131
set uw[Qbp]=$524D3175
set rw[Qbp]=$524D3178
set sw[Qbp]=$524D3173
set tw[Qbp]=$524D3135
set iw[Qbp]=$524D3171
set Sw[Qbp]=$524D316F
set cw[Qbp]=$524D3170
set ow[Qbp]=$524D3176
set Ow[Qbp]=$524D3177
set lw[Qbp]=$78303263
set bw[Qbp]=$7830316C
set yw[Qbp]=$7830326A
set pw[Qbp]=$78303265
set ew[Qbp]=$78303261
set qw[Qbp]=$6E303053
set aw[Qbp]=$6E303138
set nw[Qbp]=$6F303256
set dw[Qbp]=$6E656630
set fw[Qbp]=$78303269
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3037,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3036,0)
endif
if vbp==7 then
call eWp(vY,$41313936,"when calling remove in PickRace, line 2072")
set kyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff1c86eeHuman|r!"
set jyp=30.
set xyp=kyp
set vyp=jyp
call DisplayTimedTextToPlayer(IY,0.,0.,vyp,xyp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set myp=en
call EnableTrigger(myp)
set Qyp=Gn
call EnableTrigger(Qyp)
set u[Qbp]=7
set w[Qbp]=$4130364C
set j[Qbp]=$41304E59
set r[Qbp]=$4870616C
set s[Qbp]=$4861706D
set t[Qbp]=$48616D67
set i[Qbp]=$4867616D
set v[Qbp]=$6F303032
set m[Qbp]=$6F303033
set Q[Qbp]=$6F303034
set W[Qbp]=$68303031
set E[Qbp]=$68303044
set Z[Qbp]=$68303043
set U[Qbp]=$68303130
set I[Qbp]=$6F303134
set P[Qbp]=$6F30314D
set A[Qbp]=$68666F6F
set D[Qbp]=$6E676E61
set H[Qbp]=$6E656D69
set J[Qbp]=$686B6E69
set K[Qbp]=$68677279
set L[Qbp]=$68727474
set V[Qbp]=$52686D65
set B[Qbp]=$52686C68
set N[Qbp]=$52687074
set M[Qbp]=$52686172
set ww[Qbp]=$52686163
set uw[Qbp]=$52303030
set rw[Qbp]=$52686465
set sw[Qbp]=$52303031
set tw[Qbp]=$52303032
set iw[Qbp]=$52303033
set Sw[Qbp]=$5268616E
set cw[Qbp]=$5268666C
set ow[Qbp]=$52303151
set Ow[Qbp]=$5230344C
set lw[Qbp]=$68777477
set bw[Qbp]=$68677477
set yw[Qbp]=$68626172
set pw[Qbp]=$68766C74
set ew[Qbp]=$68617273
set qw[Qbp]=$6E6D7237
set aw[Qbp]=$6E636238
set nw[Qbp]=$6E636239
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E636261
call SetPlayerTechMaxAllowed(Player(Qbp),$486A6169,0)
endif
if vbp==8 then
call eWp(vY,$41313937,"when calling remove in PickRace, line 2129")
set Wyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff990012Orc|r!"
set Eyp=30.
set Zyp=Wyp
set Uyp=Eyp
call DisplayTimedTextToPlayer(IY,0.,0.,Uyp,Zyp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set Iyp=nn
call EnableTrigger(Iyp)
set Pyp=Sn
call EnableTrigger(Pyp)
set Ayp=jG
call EnableTrigger(Ayp)
set Dyp=ma
call EnableTrigger(Dyp)
set u[Qbp]=8
set w[Qbp]=$41304149
set j[Qbp]=$41304F31
set r[Qbp]=$4E627374
set s[Qbp]=$4F677268
set t[Qbp]=$4F746872
set i[Qbp]=$4E736A73
set v[Qbp]=$6F303042
set m[Qbp]=$6F303043
set Q[Qbp]=$6F303044
set W[Qbp]=$68303034
set E[Qbp]=$68303045
set Z[Qbp]=$68303048
set U[Qbp]=$68303133
set I[Qbp]=$6F303132
set P[Qbp]=$6F303150
set A[Qbp]=$6F677275
set D[Qbp]=$6E617373
set H[Qbp]=$6F73686D
set J[Qbp]=$6F726169
set K[Qbp]=$6F777976
set L[Qbp]=$6E636174
set V[Qbp]=$526F7067
set B[Qbp]=$526F7261
set N[Qbp]=$52303731
set M[Qbp]=$526F6172
set ww[Qbp]=$526F7370
set uw[Qbp]=$52303046
set rw[Qbp]=$526F656E
set sw[Qbp]=$526F7673
set tw[Qbp]=$526F7262
set iw[Qbp]=$52303047
set Sw[Qbp]=$526F6266
set cw[Qbp]=$52303048
set ow[Qbp]=$52303154
set Ow[Qbp]=$5230344E
set lw[Qbp]=$6F626172
set bw[Qbp]=$6E636231
set yw[Qbp]=$6F667274
set pw[Qbp]=$6E636233
set ew[Qbp]=$6E636232
set qw[Qbp]=$6E636230
set aw[Qbp]=$6F626561
set nw[Qbp]=$6E706772
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E303144
call SetPlayerTechMaxAllowed(Player(Qbp),$5530304C,0)
endif
if vbp==9 then
call eWp(vY,$41313938,"when calling remove in PickRace, line 2188")
set Hyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffFE8A0EDwarf|r!"
set Jyp=30.
set Kyp=Hyp
set Lyp=Jyp
call DisplayTimedTextToPlayer(IY,0.,0.,Lyp,Kyp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set Xyp=iY
call EnableTrigger(Xyp)
set u[Qbp]=9
set w[Qbp]=$41304142
set j[Qbp]=$41304F30
set r[Qbp]=$486D6B67
set s[Qbp]=$486B616C
set t[Qbp]=$48616E74
set i[Qbp]=$48686B6C
set v[Qbp]=$6F303035
set m[Qbp]=$6F303036
set Q[Qbp]=$6F303030
set W[Qbp]=$68303033
set E[Qbp]=$68303046
set Z[Qbp]=$68303047
set U[Qbp]=$68303131
set I[Qbp]=$6F303135
set P[Qbp]=$6F30314E
set A[Qbp]=$68686573
set D[Qbp]=$68726966
set H[Qbp]=$68637468
set J[Qbp]=$686D7474
set K[Qbp]=$68677972
set L[Qbp]=$68626577
set V[Qbp]=$52687274
set B[Qbp]=$52687261
set N[Qbp]=$52686364
set M[Qbp]=$5268706D
set ww[Qbp]=$52687365
set uw[Qbp]=$52303034
set rw[Qbp]=$52687373
set sw[Qbp]=$52303035
set tw[Qbp]=$52686762
set iw[Qbp]=$52686673
set Sw[Qbp]=$52303036
set cw[Qbp]=$52303037
set ow[Qbp]=$52303152
set Ow[Qbp]=$52303346
set lw[Qbp]=$68626C61
set bw[Qbp]=$6861726D
set yw[Qbp]=$68746F77
set pw[Qbp]=$68677261
set ew[Qbp]=$6E636232
set qw[Qbp]=$68637477
set aw[Qbp]=$6E646368
set nw[Qbp]=$6E6D7233
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E637432
endif
if vbp==10 then
call eWp(vY,$41313939,"when calling remove in PickRace, line 2244")
set Cyp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff00ff00Night Elf|r!"
set Vyp=30.
set Byp=Cyp
set Nyp=Vyp
call DisplayTimedTextToPlayer(IY,0.,0.,Nyp,Byp)
call SetPlayerTechResearched(xbp,$526E7369,3)
set Myp=an
call EnableTrigger(Myp)
set wpp=bY
call EnableTrigger(wpp)
set u[Qbp]=10
set w[Qbp]=$4130414E
set j[Qbp]=$41304F37
set r[Qbp]=$45777264
set s[Qbp]=$456D6F6F
set t[Qbp]=$45667572
set i[Qbp]=$4563656E
set v[Qbp]=$65303031
set m[Qbp]=$65303032
set Q[Qbp]=$65303030
set W[Qbp]=$68303041
set E[Qbp]=$68303056
set Z[Qbp]=$68303055
set U[Qbp]=$68303139
set I[Qbp]=$6F303139
set P[Qbp]=$6F303156
set A[Qbp]=$65646F63
set D[Qbp]=$65617263
set H[Qbp]=$65646F74
set J[Qbp]=$6573656E
set K[Qbp]=$65687072
set L[Qbp]=$6E6D7065
set V[Qbp]=$5265736D
set B[Qbp]=$52657377
set N[Qbp]=$52656474
set M[Qbp]=$52656D61
set ww[Qbp]=$52656E62
set uw[Qbp]=$52656562
set rw[Qbp]=$52656873
set sw[Qbp]=$52656D6B
set tw[Qbp]=$52656962
set iw[Qbp]=$52656D67
set Sw[Qbp]=$52656563
set cw[Qbp]=$52657268
set ow[Qbp]=$5230315A
set Ow[Qbp]=$5267666F
set lw[Qbp]=$6E6D7236
set bw[Qbp]=$65616F77
set yw[Qbp]=$65616F6D
set pw[Qbp]=$65616F65
set ew[Qbp]=$65747270
set qw[Qbp]=$65646F73
set aw[Qbp]=$65746F6C
set nw[Qbp]=$65646F62
set dw[Qbp]=$6E656630
set fw[Qbp]=$78303170
call SetPlayerTechMaxAllowed(Player(Qbp),$456B6565,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$45303039,0)
endif
if vbp==11 then
call eWp(vY,$41313941,"when calling remove in PickRace, line 2302")
set upp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffffff01Tauren|r!"
set rpp=30.
set spp=upp
set tpp=rpp
call DisplayTimedTextToPlayer(IY,0.,0.,tpp,spp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set ipp=fn
call EnableTrigger(ipp)
set Spp=eY
call EnableTrigger(Spp)
set u[Qbp]=11
set w[Qbp]=$4130414B
set j[Qbp]=$41304F33
set r[Qbp]=$4F746368
set s[Qbp]=$4F73616D
set t[Qbp]=$4F676C64
set i[Qbp]=$4F636232
set v[Qbp]=$6F303041
set m[Qbp]=$6F303049
set Q[Qbp]=$6F303048
set W[Qbp]=$68303035
set E[Qbp]=$68303049
set Z[Qbp]=$6830304C
set U[Qbp]=$68303134
set I[Qbp]=$6F303131
set P[Qbp]=$6F303152
set A[Qbp]=$6E62616E
set D[Qbp]=$6E676E77
set H[Qbp]=$6F737077
set J[Qbp]=$6F746175
set K[Qbp]=$6F776E72
set L[Qbp]=$65696C77
set V[Qbp]=$526F6D65
set B[Qbp]=$526F6273
set N[Qbp]=$526F7774
set M[Qbp]=$526F7472
set ww[Qbp]=$526F626B
set uw[Qbp]=$52303050
set rw[Qbp]=$5230335A
set sw[Qbp]=$52303053
set tw[Qbp]=$52303055
set iw[Qbp]=$52303054
set Sw[Qbp]=$52303052
set cw[Qbp]=$52303056
set ow[Qbp]=$52303156
set Ow[Qbp]=$52303451
set lw[Qbp]=$6E667431
set bw[Qbp]=$6E636263
set yw[Qbp]=$6E636264
set pw[Qbp]=$6F74746F
set ew[Qbp]=$6F737472
set qw[Qbp]=$6F677265
set aw[Qbp]=$6F666F72
set nw[Qbp]=$6E6D7230
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E6D7239
call SetPlayerTechMaxAllowed(Player(Qbp),$4F636268,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$4F303443,0)
endif
if vbp==12 then
call eWp(vY,$41313942,"when calling remove in PickRace, line 2360")
set cpp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffff0000Blood Elf|r!"
set opp=30.
set Opp=cpp
set lpp=opp
call DisplayTimedTextToPlayer(IY,0.,0.,lpp,Opp)
call SetPlayerTechResearched(xbp,$526E7369,3)
set bpp=On
call EnableTrigger(bpp)
set ypp=rY
call EnableTrigger(ypp)
set u[Qbp]=12
set w[Qbp]=$41304148
set j[Qbp]=$41304F39
set r[Qbp]=$45696C6C
set s[Qbp]=$45776172
set t[Qbp]=$48303238
set i[Qbp]=$45747972
set v[Qbp]=$6F303057
set m[Qbp]=$6F303058
set Q[Qbp]=$6F303056
set W[Qbp]=$68303042
set E[Qbp]=$6830305A
set Z[Qbp]=$68303059
set U[Qbp]=$68303142
set I[Qbp]=$6F303142
set P[Qbp]=$6F303158
set A[Qbp]=$6E62656C
set D[Qbp]=$65736864
set H[Qbp]=$68736F72
set J[Qbp]=$686D7072
set K[Qbp]=$68646877
set L[Qbp]=$6562616C
set V[Qbp]=$52657363
set B[Qbp]=$52657273
set N[Qbp]=$52656463
set M[Qbp]=$5265706D
set ww[Qbp]=$52657369
set uw[Qbp]=$5230314A
set rw[Qbp]=$5230314B
set sw[Qbp]=$5230314C
set tw[Qbp]=$5230314D
set iw[Qbp]=$5230314E
set Sw[Qbp]=$5230314F
set cw[Qbp]=$52303150
set ow[Qbp]=$52303231
set Ow[Qbp]=$52303449
set lw[Qbp]=$6E667632
set bw[Qbp]=$6E767232
set yw[Qbp]=$6E636234
set pw[Qbp]=$6E636237
set ew[Qbp]=$6E667634
set qw[Qbp]=$6E767230
set aw[Qbp]=$6E636236
set nw[Qbp]=$6E30324A
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E30324B
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3032,0)
endif
if vbp==13 then
call eWp(vY,$41313943,"when calling remove in PickRace, line 2417")
set ppp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffFDD017Goblin|r!"
set epp=30.
set qpp=ppp
set app=epp
call DisplayTimedTextToPlayer(IY,0.,0.,app,qpp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set npp=oY
call EnableTrigger(npp)
set u[Qbp]=13
set w[Qbp]=$41304146
set j[Qbp]=$41304E5A
set r[Qbp]=$4E726F62
set s[Qbp]=$4E616C63
set t[Qbp]=$4E74696E
set i[Qbp]=$4864676F
set v[Qbp]=$6F303037
set m[Qbp]=$6F303038
set Q[Qbp]=$6F303039
set W[Qbp]=$68303032
set E[Qbp]=$6830304A
set Z[Qbp]=$6830304B
set U[Qbp]=$68303132
set I[Qbp]=$6F303133
set P[Qbp]=$6F30314F
set A[Qbp]=$6E66726C
set D[Qbp]=$6E697474
set H[Qbp]=$6E737261
set J[Qbp]=$6E777267
set K[Qbp]=$6E7A6570
set L[Qbp]=$6E6E6D67
set V[Qbp]=$52686862
set B[Qbp]=$52687374
set N[Qbp]=$52686663
set M[Qbp]=$52686C61
set ww[Qbp]=$52687269
set uw[Qbp]=$52303041
set rw[Qbp]=$52303042
set sw[Qbp]=$52303043
set tw[Qbp]=$52303044
set iw[Qbp]=$52303045
set Sw[Qbp]=$52303038
set cw[Qbp]=$52303039
set ow[Qbp]=$52303153
set Ow[Qbp]=$5230344B
set lw[Qbp]=$6E646830
set bw[Qbp]=$68636173
set yw[Qbp]=$68616C74
set pw[Qbp]=$6E677772
set ew[Qbp]=$6E646831
set qw[Qbp]=$6E656630
set aw[Qbp]=$6E6D7234
set nw[Qbp]=$6E6D7235
set dw[Qbp]=$6E65666D
set fw[Qbp]=$686B6565
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3035,0)
endif
if vbp==14 then
call eWp(vY,$41313944,"when calling remove in PickRace, line 2474")
set dpp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff008080Troll|r!"
set fpp=30.
set Rpp=dpp
set Tpp=fpp
call DisplayTimedTextToPlayer(IY,0.,0.,Tpp,Rpp)
call SetPlayerTechResearched(xbp,$526E7369,3)
set Ypp=Rn
call EnableTrigger(Ypp)
set Gpp=aY
call EnableTrigger(Gpp)
set u[Qbp]=14
set w[Qbp]=$41304147
set j[Qbp]=$41304F32
set r[Qbp]=$4F626C61
set s[Qbp]=$4F736864
set t[Qbp]=$4F647274
set i[Qbp]=$4F726578
set v[Qbp]=$6F303045
set m[Qbp]=$6F303046
set Q[Qbp]=$6F30304A
set W[Qbp]=$68303030
set E[Qbp]=$6830304D
set Z[Qbp]=$6830304E
set U[Qbp]=$68303135
set I[Qbp]=$6F303130
set P[Qbp]=$6F303151
set A[Qbp]=$6F67726B
set D[Qbp]=$6F68756E
set H[Qbp]=$6F646F63
set J[Qbp]=$6F6E7A67
set K[Qbp]=$6F746272
set L[Qbp]=$6F636174
set V[Qbp]=$526F6C66
set B[Qbp]=$526F7773
set N[Qbp]=$526F7764
set M[Qbp]=$5277646D
set ww[Qbp]=$526F706D
set uw[Qbp]=$52303049
set rw[Qbp]=$5230304A
set sw[Qbp]=$5230304B
set tw[Qbp]=$5230304C
set iw[Qbp]=$5230304D
set Sw[Qbp]=$5230304E
set cw[Qbp]=$5230304F
set ow[Qbp]=$52303155
set Ow[Qbp]=$5230324C
set lw[Qbp]=$6E636262
set bw[Qbp]=$6F766C6E
set yw[Qbp]=$6F736879
set pw[Qbp]=$6E776331
set ew[Qbp]=$6E647262
set qw[Qbp]=$6F636277
set aw[Qbp]=$6E706766
set nw[Qbp]=$6E657431
set dw[Qbp]=$6E656630
set fw[Qbp]=$6F747262
call SetPlayerTechMaxAllowed(Player(Qbp),$4F726B6E,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$45303037,0)
endif
if vbp==15 then
call eWp(vY,$41313945,"when calling remove in PickRace, line 2532")
set gpp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffA23BECDemon|r!"
set hpp=30.
set Fpp=gpp
set kpp=hpp
call DisplayTimedTextToPlayer(IY,0.,0.,kpp,Fpp)
call SetPlayerTechResearched(xbp,$526E7369,1)
set jpp=qd
call EnableTrigger(jpp)
set xpp=ln
call EnableTrigger(xpp)
set vpp=sY
call EnableTrigger(vpp)
set mpp=qg
call EnableTrigger(mpp)
set u[Qbp]=15
set w[Qbp]=$4130414C
set j[Qbp]=$41304F34
set r[Qbp]=$4E706C68
set s[Qbp]=$55647265
set t[Qbp]=$4E666972
set i[Qbp]=$5563726C
set v[Qbp]=$6F30304E
set m[Qbp]=$6F30304F
set Q[Qbp]=$6F303050
set W[Qbp]=$68303037
set E[Qbp]=$68303050
set Z[Qbp]=$6830304F
set U[Qbp]=$68303136
set I[Qbp]=$6F303137
set P[Qbp]=$6F303153
set A[Qbp]=$6E666762
set D[Qbp]=$6E64716E
set H[Qbp]=$6E657264
set J[Qbp]=$6E66656C
set K[Qbp]=$75627370
set L[Qbp]=$6E696E61
set V[Qbp]=$52756D65
set B[Qbp]=$52756275
set N[Qbp]=$52756261
set M[Qbp]=$52756172
set ww[Qbp]=$52756578
set uw[Qbp]=$52756372
set rw[Qbp]=$52303057
set sw[Qbp]=$52303058
set tw[Qbp]=$52303059
set iw[Qbp]=$5230305A
set Sw[Qbp]=$52303130
set cw[Qbp]=$52303131
set ow[Qbp]=$52303157
set Ow[Qbp]=$5230344A
set lw[Qbp]=$75736170
set bw[Qbp]=$75677276
set yw[Qbp]=$75616F64
set pw[Qbp]=$757A6967
set ew[Qbp]=$6E6D7261
set qw[Qbp]=$6E6D7262
set aw[Qbp]=$6E6D7263
set nw[Qbp]=$6E6D7266
set dw[Qbp]=$6E656630
set fw[Qbp]=$6E636E74
call SetPlayerTechMaxAllowed(Player(Qbp),$55776172,0)
endif
if vbp==16 then
call eWp(vY,$41313946,"when calling remove in PickRace, line 2591")
set Qpp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffff00ffFel Orc|r!"
set Wpp=30.
set Epp=Qpp
set Zpp=Wpp
call DisplayTimedTextToPlayer(IY,0.,0.,Zpp,Epp)
call SetPlayerTechResearched(xbp,$526E7369,1)
set Upp=hd
call EnableTrigger(Upp)
set Ipp=yn
call EnableTrigger(Ipp)
set Ppp=SY
call EnableTrigger(Ppp)
set u[Qbp]=16
set w[Qbp]=$4130414D
set j[Qbp]=$41304F36
set r[Qbp]=$4F706768
set s[Qbp]=$4E626263
set t[Qbp]=$4F666172
set i[Qbp]=$5562616C
set v[Qbp]=$6F303051
set m[Qbp]=$6F303047
set Q[Qbp]=$6F303052
set W[Qbp]=$68303038
set E[Qbp]=$68303054
set Z[Qbp]=$68303053
set U[Qbp]=$68303138
set I[Qbp]=$6F303136
set P[Qbp]=$6F303155
set A[Qbp]=$6E636867
set D[Qbp]=$6E676E73
set H[Qbp]=$6E636877
set J[Qbp]=$6E636872
set K[Qbp]=$6F303347
set L[Qbp]=$6E696E63
set V[Qbp]=$5275736C
set B[Qbp]=$52757261
set N[Qbp]=$5275706D
set M[Qbp]=$5275736D
set ww[Qbp]=$52756766
set uw[Qbp]=$52303138
set rw[Qbp]=$52303139
set sw[Qbp]=$52303141
set tw[Qbp]=$52303142
set iw[Qbp]=$52303143
set Sw[Qbp]=$52757370
set cw[Qbp]=$52303144
set ow[Qbp]=$52303159
set Ow[Qbp]=$52303257
set lw[Qbp]=$6E656633
set bw[Qbp]=$6E656634
set yw[Qbp]=$6E65676D
set pw[Qbp]=$6E656635
set ew[Qbp]=$6E656636
set qw[Qbp]=$6E656632
set aw[Qbp]=$75676F6C
set nw[Qbp]=$756E7032
set dw[Qbp]=$6E656630
set fw[Qbp]=$75736870
call SetPlayerTechMaxAllowed(Player(Qbp),$4E6D616E,0)
endif
if vbp==17 then
call eWp(vY,$41313947,"when calling remove in PickRace, line 2649")
set App=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff7EBFF1Undead|r!"
set Dpp=30.
set Hpp=App
set Jpp=Dpp
call DisplayTimedTextToPlayer(IY,0.,0.,Jpp,Hpp)
call SetPlayerTechResearched(xbp,$526E7369,1)
set Kpp=Zd
call EnableTrigger(Kpp)
set Lpp=Tn
call EnableTrigger(Lpp)
set Xpp=rq
call EnableTrigger(Xpp)
set Cpp=ig
call EnableTrigger(Cpp)
set Vpp=nY
call EnableTrigger(Vpp)
set u[Qbp]=17
set w[Qbp]=$4130414F
set j[Qbp]=$41304F35
set r[Qbp]=$55646561
set s[Qbp]=$4E62726E
set t[Qbp]=$556C6963
set i[Qbp]=$556B746C
set v[Qbp]=$6F30304B
set m[Qbp]=$6F30304C
set Q[Qbp]=$6F30304D
set W[Qbp]=$68303036
set E[Qbp]=$68303051
set Z[Qbp]=$68303052
set U[Qbp]=$68303137
set I[Qbp]=$6F303138
set P[Qbp]=$6F303154
set A[Qbp]=$7567686F
set D[Qbp]=$75637279
set H[Qbp]=$756E6563
set J[Qbp]=$7561626F
set K[Qbp]=$75676172
set L[Qbp]=$756D7477
set V[Qbp]=$52757762
set B[Qbp]=$52756163
set N[Qbp]=$52756E65
set M[Qbp]=$52757366
set ww[Qbp]=$52756662
set uw[Qbp]=$52303132
set rw[Qbp]=$52757063
set sw[Qbp]=$52303134
set tw[Qbp]=$52303133
set iw[Qbp]=$52303135
set Sw[Qbp]=$52303136
set cw[Qbp]=$52303137
set ow[Qbp]=$52303158
set Ow[Qbp]=$52303448
set lw[Qbp]=$757A6731
set bw[Qbp]=$75746F6D
set yw[Qbp]=$686F6261
set pw[Qbp]=$756E706C
set ew[Qbp]=$75626F6E
set qw[Qbp]=$686F6666
set aw[Qbp]=$6E62736D
set nw[Qbp]=$6E66726D
set dw[Qbp]=$6E676E69
set fw[Qbp]=$6E646D67
call SetPlayerTechMaxAllowed(Player(Qbp),$55616E62,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$48617266,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3038,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$55647468,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$55303130,0)
endif
if vbp==18 then
call eWp(vY,$41313948,"when calling remove in PickRace, line 2713")
set Bpp=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff00ffffNaga|r!"
set Npp=30.
set Mpp=Bpp
set wep=Npp
call DisplayTimedTextToPlayer(IY,0.,0.,wep,Mpp)
call SetPlayerTechResearched(xbp,$526E7369,2)
set uep=Mh
call EnableTrigger(uep)
set rep=fY
call EnableTrigger(rep)
set u[Qbp]=18
set w[Qbp]=$4130414A
set j[Qbp]=$41304F38
set r[Qbp]=$4564656D
set s[Qbp]=$4E6E6773
set t[Qbp]=$456D6672
set i[Qbp]=$456D6E73
set v[Qbp]=$6F303054
set m[Qbp]=$6F303055
set Q[Qbp]=$6F303053
set W[Qbp]=$68303039
set E[Qbp]=$68303057
set Z[Qbp]=$68303058
set U[Qbp]=$68303141
set I[Qbp]=$6F303141
set P[Qbp]=$6F303157
set A[Qbp]=$6E6D7972
set D[Qbp]=$6E736E70
set H[Qbp]=$6E6E7377
set J[Qbp]=$6E6E7267
set K[Qbp]=$6E776773
set L[Qbp]=$6E687963
set V[Qbp]=$526E6174
set B[Qbp]=$52656362
set N[Qbp]=$526E7377
set M[Qbp]=$526E616D
set ww[Qbp]=$52656874
set uw[Qbp]=$52657062
set rw[Qbp]=$52303145
set sw[Qbp]=$52303147
set tw[Qbp]=$52657576
set iw[Qbp]=$52657773
set Sw[Qbp]=$52303146
set cw[Qbp]=$52303148
set ow[Qbp]=$52303457
set Ow[Qbp]=$52303359
set lw[Qbp]=$65617465
set bw[Qbp]=$656D6F77
set yw[Qbp]=$65746F65
set pw[Qbp]=$65746F61
set ew[Qbp]=$6E736870
set qw[Qbp]=$6E6D726B
set aw[Qbp]=$6E667633
set nw[Qbp]=$6E637431
set dw[Qbp]=$6E6E6164
set fw[Qbp]=$6E303431
call SetPlayerTechMaxAllowed(Player(Qbp),$45657669,0)
call SetPlayerTechMaxAllowed(Player(Qbp),$484D3034,0)
endif
if vbp==19 then
call eWp(vY,$4131394A,"when calling remove in PickRace, line 2771")
set sep=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cff008000Admiralty of Kul'Tiras|r!"
set tep=30.
set iep=sep
set Sep=tep
call DisplayTimedTextToPlayer(IY,0.,0.,Sep,iep)
call SetPlayerTechResearched(xbp,$526E7369,2)
set cep=qn
call EnableTrigger(cep)
set oep=OY
call EnableTrigger(oep)
set u[Qbp]=19
set w[Qbp]=$41323133
set j[Qbp]=$41323130
set r[Qbp]=$4F303435
set s[Qbp]=$4F303436
set t[Qbp]=$4F303437
set i[Qbp]=$4F303438
set v[Qbp]=$6F303542
set m[Qbp]=$6F303543
set Q[Qbp]=$6F303544
set W[Qbp]=$6F303537
set E[Qbp]=$6F303538
set Z[Qbp]=$6F303539
set U[Qbp]=$6F303541
set I[Qbp]=$6F303536
set P[Qbp]=$6F303545
set A[Qbp]=$6F303530
set D[Qbp]=$6F303531
set H[Qbp]=$6F303532
set J[Qbp]=$6F303533
set K[Qbp]=$6F303534
set L[Qbp]=$6F303535
set V[Qbp]=$52303831
set B[Qbp]=$52303832
set N[Qbp]=$52303835
set M[Qbp]=$52303833
set ww[Qbp]=$52303834
set uw[Qbp]=$52303846
set rw[Qbp]=$52303837
set sw[Qbp]=$52303838
set tw[Qbp]=$52303839
set iw[Qbp]=$52303847
set Sw[Qbp]=$52303842
set cw[Qbp]=$52303843
set ow[Qbp]=$52303844
set Ow[Qbp]=$52303845
set lw[Qbp]=$6F303556
set bw[Qbp]=$6F303546
set yw[Qbp]=$6F303548
set pw[Qbp]=$6F30354A
set ew[Qbp]=$6F30354C
set qw[Qbp]=$6F30354D
set aw[Qbp]=$6F30354F
set nw[Qbp]=$6F303551
set dw[Qbp]=$6F303553
set fw[Qbp]=$6F303555
call SetPlayerTechMaxAllowed(Player(Qbp),$4F303439,0)
endif
if vbp==20 then
call eWp(vY,$41313949,"when calling remove in PickRace, line 2828")
set Oep=Aw[Qbp]+GetPlayerName(xbp)+"|r"+" has chosen |cffDC143CGnoll|r!"
set lep=30.
set bep=Oep
set yep=lep
call DisplayTimedTextToPlayer(IY,0.,0.,yep,bep)
call SetPlayerTechResearched(xbp,$526E7369,2)
set pep=pn
call EnableTrigger(pep)
set eep=cY
call EnableTrigger(eep)
set qep=iq
call EnableTrigger(qep)
set aep=Sq
call EnableTrigger(aep)
set u[Qbp]=20
set w[Qbp]=$41313841
set j[Qbp]=$41313839
set r[Qbp]=$4F303431
set s[Qbp]=$4F303432
set t[Qbp]=$4F303433
set i[Qbp]=$4F303434
set v[Qbp]=$6E303259
set m[Qbp]=$6E30325A
set Q[Qbp]=$6E303330
set W[Qbp]=$6E303253
set E[Qbp]=$6E303254
set Z[Qbp]=$6E303255
set U[Qbp]=$6E303256
set I[Qbp]=$6F30334F
set P[Qbp]=$6E303331
set A[Qbp]=$6F303349
set D[Qbp]=$6F30334A
set H[Qbp]=$6F30334B
set J[Qbp]=$6F30334C
set K[Qbp]=$6F30334D
set L[Qbp]=$6F30334E
set V[Qbp]=$52303741
set B[Qbp]=$52303742
set N[Qbp]=$52303745
set M[Qbp]=$52303743
set ww[Qbp]=$52303744
set uw[Qbp]=$52303747
set rw[Qbp]=$52303748
set sw[Qbp]=$52303749
set tw[Qbp]=$5230374A
set iw[Qbp]=$5230374B
set Sw[Qbp]=$5230374C
set cw[Qbp]=$5230374D
set ow[Qbp]=$5230374E
set Ow[Qbp]=$5230374F
set lw[Qbp]=$6E303332
set bw[Qbp]=$6E303333
set yw[Qbp]=$6E303334
set pw[Qbp]=$6E303335
set ew[Qbp]=$6E303336
set qw[Qbp]=$6E303337
set aw[Qbp]=$6E303338
set nw[Qbp]=$6E303339
set dw[Qbp]=$6E303341
set fw[Qbp]=$6E303342
endif
if Rw[Qbp]==90 then
set nep=k[1]
call RemoveUnit(nep)
set Jep=Player(Qbp)
set Kep=v[Qbp]
set dep=Rw[Qbp]
set o[Qbp]=CreateUnit(Jep,Kep,64.,5056.,dep*1.+180.)
set Lep=Player(Qbp)
set Xep=W[Qbp]
set fep=Rw[Qbp]
set O[Qbp]=CreateUnit(Lep,Xep,640.,5056.,fep*1.-90.)
set Cep=Player(Qbp)
set Vep=W[Qbp]
set Rep=Rw[Qbp]
set l[Qbp]=CreateUnit(Cep,Vep,-512.,5056.,Rep*1.+90.)
set Bep=Player(Qbp)
set Nep=W[Qbp]
set Tep=Rw[Qbp]
set b[Qbp]=CreateUnit(Bep,Nep,64.,4480.,Tep*1.+180.)
call CreateUnit(Player(Qbp),I[Qbp],-320.,4672.,225.)
call CreateUnit(Player(Qbp),I[Qbp],-320.,5440.,135.)
call CreateUnit(Player(Qbp),I[Qbp],448.,5440.,45.)
call CreateUnit(Player(Qbp),I[Qbp],448.,4672.,31.)
set F[Qbp]=CreateUnit(Player(Qbp),P[Qbp],-1088.,3968.,270.)
endif
if Rw[Qbp]==0 then
set Yep=k[3]
call RemoveUnit(Yep)
set Mep=Player(Qbp)
set wqp=v[Qbp]
set Gep=Rw[Qbp]
set o[Qbp]=CreateUnit(Mep,wqp,5056.,64.,Gep*1.+180.)
set uqp=Player(Qbp)
set rqp=W[Qbp]
set gep=Rw[Qbp]
set O[Qbp]=CreateUnit(uqp,rqp,5056.,-512.,gep*1.-90.)
set sqp=Player(Qbp)
set tqp=W[Qbp]
set hep=Rw[Qbp]
set l[Qbp]=CreateUnit(sqp,tqp,5056.,640.,hep*1.+90.)
set iqp=Player(Qbp)
set Sqp=W[Qbp]
set Fep=Rw[Qbp]
set b[Qbp]=CreateUnit(iqp,Sqp,4480.,64.,Fep*1.+180.)
call CreateUnit(Player(Qbp),I[Qbp],4672.,448.,135.)
call CreateUnit(Player(Qbp),I[Qbp],5440.,448.,45.)
call CreateUnit(Player(Qbp),I[Qbp],5440.,-320.,315.)
call CreateUnit(Player(Qbp),I[Qbp],4672.,-320.,225.)
set F[Qbp]=CreateUnit(Player(Qbp),P[Qbp],3904.,1216.,270.)
endif
if Rw[Qbp]==270 then
set kep=k[0]
call RemoveUnit(kep)
set cqp=Player(Qbp)
set oqp=v[Qbp]
set jep=Rw[Qbp]
set o[Qbp]=CreateUnit(cqp,oqp,64.,-4928.,jep*1.+180.)
set Oqp=Player(Qbp)
set lqp=W[Qbp]
set xep=Rw[Qbp]
set O[Qbp]=CreateUnit(Oqp,lqp,-512.,-4928.,xep*1.-90.)
set bqp=Player(Qbp)
set yqp=W[Qbp]
set vep=Rw[Qbp]
set l[Qbp]=CreateUnit(bqp,yqp,640.,-4928.,vep*1.+90.)
set pqp=Player(Qbp)
set eqp=W[Qbp]
set mep=Rw[Qbp]
set b[Qbp]=CreateUnit(pqp,eqp,64.,-4352.,mep*1.+180.)
call CreateUnit(Player(Qbp),I[Qbp],-320.,-4544.,135.)
call CreateUnit(Player(Qbp),I[Qbp],-320.,-5312.,225.)
call CreateUnit(Player(Qbp),I[Qbp],448.,-5312.,315.)
call CreateUnit(Player(Qbp),I[Qbp],448.,-4544.,45.)
set F[Qbp]=CreateUnit(Player(Qbp),P[Qbp],1280.,-3712.,270.)
endif
if Rw[Qbp]==180 then
set Qep=k[2]
call RemoveUnit(Qep)
set qqp=Player(Qbp)
set aqp=v[Qbp]
set Wep=Rw[Qbp]
set o[Qbp]=CreateUnit(qqp,aqp,-4928.,64.,Wep*1.+180.)
set nqp=Player(Qbp)
set dqp=W[Qbp]
set Eep=Rw[Qbp]
set O[Qbp]=CreateUnit(nqp,dqp,-4928.,640.,Eep*1.-90.)
set fqp=Player(Qbp)
set Rqp=W[Qbp]
set Zep=Rw[Qbp]
set l[Qbp]=CreateUnit(fqp,Rqp,-4928.,-512.,Zep*1.+90.)
set Tqp=Player(Qbp)
set Yqp=W[Qbp]
set Uep=Rw[Qbp]
set b[Qbp]=CreateUnit(Tqp,Yqp,-4352.,64.,Uep*1.+180.)
call CreateUnit(Player(Qbp),I[Qbp],-4544.,-320.,315.)
call CreateUnit(Player(Qbp),I[Qbp],-5312.,-320.,225.)
call CreateUnit(Player(Qbp),I[Qbp],-5312.,448.,135.)
call CreateUnit(Player(Qbp),I[Qbp],-4544.,448.,45.)
set F[Qbp]=CreateUnit(Player(Qbp),P[Qbp],-3840.,-1088.,270.)
endif
call AddUnitToStock(O[Qbp],A[Qbp],2,4)
call AddUnitToStock(O[Qbp],D[Qbp],1,3)
call AddUnitToStock(O[Qbp],H[Qbp],1,3)
call AddUnitToStock(l[Qbp],A[Qbp],2,4)
call AddUnitToStock(l[Qbp],D[Qbp],1,3)
call AddUnitToStock(l[Qbp],H[Qbp],1,3)
call AddUnitToStock(b[Qbp],A[Qbp],2,4)
call AddUnitToStock(b[Qbp],D[Qbp],1,3)
call AddUnitToStock(b[Qbp],H[Qbp],1,3)
call SetPlayerTechMaxAllowed(Player(Qbp),r[Qbp],0)
call SetPlayerTechMaxAllowed(Player(Qbp),s[Qbp],0)
call SetPlayerTechMaxAllowed(Player(Qbp),t[Qbp],0)
call SetPlayerTechMaxAllowed(Player(Qbp),i[Qbp],0)
set Iep=Player(Qbp)
set Dep=o[Qbp]
set Pep=GetUnitX(Dep)
set Hep=o[Qbp]
set Aep=GetUnitY(Hep)
if GetLocalPlayer()==Iep then
call SetCameraPosition(Pep,Aep)
endif
set qW=qW-1
set Wbp=null
set Pbp=null
set Abp=null
set Dbp=null
set Hbp=null
set Jbp=null
set Vbp=null
set Bbp=null
set Nbp=null
set Mbp=null
set wyp=null
set iyp=null
set Syp=null
set cyp=null
set oyp=null
set nyp=null
set dyp=null
set Gyp=null
set gyp=null
set hyp=null
set Fyp=null
set myp=null
set Qyp=null
set Iyp=null
set Pyp=null
set Ayp=null
set Dyp=null
set Xyp=null
set Myp=null
set wpp=null
set ipp=null
set Spp=null
set bpp=null
set ypp=null
set npp=null
set Ypp=null
set Gpp=null
set jpp=null
set xpp=null
set vpp=null
set mpp=null
set Upp=null
set Ipp=null
set Ppp=null
set Kpp=null
set Lpp=null
set Xpp=null
set Cpp=null
set Vpp=null
set uep=null
set rep=null
set cep=null
set oep=null
set pep=null
set eep=null
set qep=null
set aep=null
set nep=null
set Yep=null
set kep=null
set Qep=null
set Iep=null
set Dep=null
set Hep=null
set Jep=null
set Lep=null
set Cep=null
set Bep=null
set Mep=null
set uqp=null
set sqp=null
set iqp=null
set cqp=null
set Oqp=null
set bqp=null
set pqp=null
set qqp=null
set nqp=null
set fqp=null
set Tqp=null
endfunction
function GJc takes integer RJc,string TJc returns integer
local integer YJc
set aW[qW]=TJc
set qW=qW+1
if Xv[RJc]!=Lv[RJc] then
call iGr(Cv[RJc],Xv[RJc],"when calling removeEntry in LinkedList, line 448")
set YJc=Hv[Xv[RJc]]
set Xv[RJc]=Jv[Xv[RJc]]
set qW=qW-1
return YJc
endif
set qW=qW-1
return 0
endfunction
function ISS takes integer xSS,string vSS returns nothing
local integer mSS
local string QSS
local integer WSS
local string ESS
local integer ZSS
local integer USS
set aW[qW]=vSS
set qW=qW+1
if tk[xSS]==0 then
if xSS==0 then
call L8c("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 440")
else
call L8c("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 440")
endif
endif
set mSS=xSS
set QSS="when calling reset in LinkedList, line 440"
set aW[qW]=QSS
set qW=qW+1
set WSS=Cv[mSS]
set ESS="when calling getDummy in LinkedList, line 441"
set aW[qW]=ESS
set qW=qW+1
if ok[WSS]==0 then
if WSS==0 then
call L8c("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 381")
else
call L8c("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 381")
endif
endif
set USS=WSS
set ZSS=Vv[USS]
set qW=qW-1
set Lv[mSS]=ZSS
set Xv[mSS]=Lv[mSS]
set qW=qW-1
set qW=qW-1
endfunction
function a4y takes integer o4y,string O4y returns integer
local integer l4y
local string b4y
local integer y4y
local integer p4y
local integer e4y
local string q4y
set aW[qW]=O4y
set qW=qW+1
set b4y="when calling alloc_LLIterator in LinkedList, line 431"
set aW[qW]=b4y
set qW=qW+1
if rk==0 then
if sk<32768 then
set sk=sk+1
set y4y=sk
set tk[y4y]=1023
else
call L8c("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 425")
set y4y=0
endif
else
set rk=rk-1
set y4y=uk[rk]
set tk[y4y]=1023
endif
set qW=qW-1
set l4y=y4y
set p4y=l4y
set e4y=o4y
set q4y="when calling construct_LLIterator in LinkedList, line 431"
set aW[qW]=q4y
set qW=qW+1
set Cv[p4y]=e4y
call ISS(p4y,"when calling reset in LinkedList, line 433")
set qW=qW-1
set qW=qW-1
return l4y
endfunction
function jMe takes integer nMe,integer dMe,integer fMe,string RMe returns integer
local integer TMe
local string YMe
local integer GMe
local integer gMe
local integer hMe
local integer FMe
local integer kMe
set aW[qW]=RMe
set qW=qW+1
set YMe="when calling alloc_LLEntry in LinkedList, line 420"
set aW[qW]=YMe
set qW=qW+1
if NF==0 then
if MF<32768 then
set MF=MF+1
set GMe=MF
set wk[GMe]=1022
else
call L8c("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 415")
set GMe=0
endif
else
set NF=NF-1
set GMe=BF[NF]
set wk[GMe]=1022
endif
set qW=qW-1
set TMe=GMe
set gMe=TMe
set hMe=nMe
set FMe=dMe
set kMe=fMe
set Hv[gMe]=hMe
set Jv[gMe]=FMe
set Kv[gMe]=kMe
set qW=qW-1
return TMe
endfunction
function x7s takes integer Y7s,integer G7s,string g7s returns nothing
local integer h7s
local integer F7s
local string k7s
local integer j7s
set aW[qW]=g7s
set qW=qW+1
if ok[Y7s]==0 then
if Y7s==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set h7s=Y7s
set F7s=G7s
set k7s="when calling add in LinkedList, line 38"
set aW[qW]=k7s
set qW=qW+1
set j7s=jMe(F7s,Jv[Vv[h7s]],Vv[h7s],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[h7s]]]=j7s
set Jv[Vv[h7s]]=j7s
set Bv[h7s]=Bv[h7s]+1
set qW=qW-1
set qW=qW-1
endfunction
function eAl takes integer EPl,string ZPl returns nothing
local integer array UPl
local integer IPl
local integer PPl
local integer APl
local integer DPl
local integer HPl
local integer JPl
local integer KPl
local integer LPl
local integer XPl
local string CPl
local integer VPl
local integer BPl
local integer NPl
local string MPl
local integer wAl
local integer uAl
local string rAl
local integer sAl
local integer tAl
local string iAl
local boolean SAl
local integer cAl
local integer oAl
local string OAl
local integer lAl
local integer bAl
local string yAl
local integer pAl
set aW[qW]=ZPl
set qW=qW+1
set XPl=EPl
set CPl="when calling size in LinkedList, line 244"
set aW[qW]=CPl
set qW=qW+1
if ok[XPl]==0 then
if XPl==0 then
call L8c("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 154")
else
call L8c("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 154")
endif
endif
set BPl=XPl
set VPl=Bv[BPl]
set qW=qW-1
set IPl=VPl
set PPl=0
set NPl=EPl
set MPl="when calling iterator in LinkedList, line 247"
set aW[qW]=MPl
set qW=qW+1
if ok[NPl]==0 then
if NPl==0 then
call L8c("Nullpointer exception when calling LinkedList.iterator","when calling error in LinkedList, line 183")
else
call L8c("Called LinkedList.iterator on invalid object.","when calling error in LinkedList, line 183")
endif
endif
set uAl=NPl
set rAl="when calling iterator in LinkedList, line 183"
set aW[qW]=rAl
set qW=qW+1
set sAl=a4y(uAl,"when calling new_LLIterator in LinkedList, line 184")
set qW=qW-1
set wAl=sAl
set qW=qW-1
set APl=wAl
loop
set tAl=APl
set iAl="when calling hasNext in LinkedList, line 248"
set aW[qW]=iAl
set qW=qW+1
if tk[tAl]==0 then
if tAl==0 then
call L8c("Nullpointer exception when calling LLIterator.hasNext","when calling error in LinkedList, line 459")
else
call L8c("Called LLIterator.hasNext on invalid object.","when calling error in LinkedList, line 459")
endif
endif
set cAl=tAl
set SAl=Kv[Xv[cAl]]!=Lv[cAl]
set qW=qW-1
exitwhen not SAl
set oAl=APl
set OAl="when calling next in LinkedList, line 249"
set aW[qW]=OAl
set qW=qW+1
if tk[oAl]==0 then
if oAl==0 then
call L8c("Nullpointer exception when calling LLIterator.next","when calling error in LinkedList, line 462")
else
call L8c("Called LLIterator.next on invalid object.","when calling error in LinkedList, line 462")
endif
endif
set lAl=oAl
set Xv[lAl]=Kv[Xv[lAl]]
set qW=qW-1
set bAl=APl
set yAl="when calling remove in LinkedList, line 250"
set aW[qW]=yAl
set qW=qW+1
if tk[bAl]==0 then
if bAl==0 then
call L8c("Nullpointer exception when calling LLIterator.remove","when calling error in LinkedList, line 446")
else
call L8c("Called LLIterator.remove on invalid object.","when calling error in LinkedList, line 446")
endif
endif
set pAl=GJc(bAl,"when calling remove in LinkedList, line 446")
set qW=qW-1
set UPl[PPl]=pAl
set PPl=PPl+1
endloop
set DPl=IPl-1
loop
exitwhen DPl<1
set HPl=GetRandomInt(0,DPl)
set JPl=UPl[DPl]
set UPl[DPl]=UPl[HPl]
set UPl[HPl]=JPl
set DPl=DPl-1
endloop
set KPl=0
set LPl=IPl-1
loop
exitwhen KPl>LPl
call x7s(EPl,UPl[KPl],"when calling add in LinkedList, line 260")
set KPl=KPl+1
endloop
set qW=qW-1
endfunction
function XMl takes unit bMl,string yMl returns nothing
local integer pMl
local integer eMl
local integer qMl
local integer aMl
local integer nMl
local string dMl
local integer fMl
local string RMl
local integer TMl
local integer YMl
local unit GMl
local integer gMl
local string hMl
local integer FMl
local string kMl
local integer jMl
local integer xMl
local unit vMl
local integer mMl
local string QMl
local integer WMl
local string EMl
local integer ZMl
local integer UMl
local unit IMl
local integer PMl
local string AMl
local integer DMl
local string HMl
local integer JMl
local integer KMl
local unit LMl
set aW[qW]=yMl
set qW=qW+1
if bMl==k[0] then
set nMl=Wg
set dMl="when calling shuffle in ThreeRacePick, line 184"
set aW[qW]=dMl
set qW=qW+1
if ok[nMl]==0 then
if nMl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(nMl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set fMl=Wg
set RMl="when calling getFirst in ThreeRacePick, line 185"
set aW[qW]=RMl
set qW=qW+1
if ok[fMl]==0 then
if fMl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set YMl=fMl
set TMl=Hv[Kv[Vv[YMl]]]
set qW=qW-1
set pMl=TMl
call Gqp(Yu,pMl,"when calling pickRaceRandom in ThreeRacePick, line 186")
set GMl=bMl
call RemoveUnit(GMl)
endif
if bMl==k[1] then
set gMl=Eg
set hMl="when calling shuffle in ThreeRacePick, line 189"
set aW[qW]=hMl
set qW=qW+1
if ok[gMl]==0 then
if gMl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(gMl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set FMl=Eg
set kMl="when calling getFirst in ThreeRacePick, line 190"
set aW[qW]=kMl
set qW=qW+1
if ok[FMl]==0 then
if FMl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set xMl=FMl
set jMl=Hv[Kv[Vv[xMl]]]
set qW=qW-1
set eMl=jMl
call Gqp(Tu,eMl,"when calling pickRaceRandom in ThreeRacePick, line 191")
set vMl=bMl
call RemoveUnit(vMl)
endif
if bMl==k[2] then
set mMl=Zg
set QMl="when calling shuffle in ThreeRacePick, line 194"
set aW[qW]=QMl
set qW=qW+1
if ok[mMl]==0 then
if mMl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(mMl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set WMl=Zg
set EMl="when calling getFirst in ThreeRacePick, line 195"
set aW[qW]=EMl
set qW=qW+1
if ok[WMl]==0 then
if WMl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set UMl=WMl
set ZMl=Hv[Kv[Vv[UMl]]]
set qW=qW-1
set qMl=ZMl
call Gqp(Gu,qMl,"when calling pickRaceRandom in ThreeRacePick, line 196")
set IMl=bMl
call RemoveUnit(IMl)
endif
if bMl==k[3] then
set PMl=Ug
set AMl="when calling shuffle in ThreeRacePick, line 199"
set aW[qW]=AMl
set qW=qW+1
if ok[PMl]==0 then
if PMl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(PMl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set DMl=Ug
set HMl="when calling getFirst in ThreeRacePick, line 200"
set aW[qW]=HMl
set qW=qW+1
if ok[DMl]==0 then
if DMl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set KMl=DMl
set JMl=Hv[Kv[Vv[KMl]]]
set qW=qW-1
set aMl=JMl
call Gqp(gu,aMl,"when calling pickRaceRandom in ThreeRacePick, line 201")
set LMl=bMl
call RemoveUnit(LMl)
endif
set qW=qW-1
set GMl=null
set vMl=null
set IMl=null
set LMl=null
endfunction
function Ubt takes string nbt returns nothing
local group dbt
local filterfunc fbt
local unit Rbt
local group Tbt
local integer Ybt
local timerdialog Gbt
local timer gbt
local timer hbt
local group Fbt
local group kbt
local unit jbt
local group xbt
local boolexpr vbt
local string mbt
local integer Qbt
local real Wbt
local integer Ebt
local string Zbt
set aW[qW]=nbt
set qW=qW+1
set Gbt=tr
call DestroyTimerDialog(Gbt)
set gbt=Qg
call PauseTimer(gbt)
set hbt=Qg
call DestroyTimer(hbt)
set Qg=null
set dbt=CreateGroup()
set fbt=Filter(Rrw)
call GroupEnumUnitsInRect(dbt,bj_mapInitialPlayableArea,fbt)
set Tbt=dbt
loop
set Fbt=Tbt
exitwhen not (FirstOfGroup(Fbt)!=null)
set kbt=Tbt
set jbt=FirstOfGroup(kbt)
call GroupRemoveUnit(kbt,jbt)
set Rbt=jbt
call XMl(Rbt,"when calling reRoll in ThreeRacePick, line 217")
endloop
set xbt=dbt
call DestroyGroup(xbt)
set vbt=fbt
call DestroyBoolExpr(vbt)
set mbt="when calling alloc_CallbackSingle_doAfter_ThreeRacePick in ThreeRacePick, line 220"
set aW[qW]=mbt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Qbt=fF
set RF[Qbt]=756
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ThreeRacePick.","when calling error in ThreeRacePick, line 220")
set Qbt=0
endif
else
set dF=dF-1
set Qbt=nF[dF]
set RF[Qbt]=756
endif
set qW=qW-1
set Ybt=Qbt
set Wbt=2.
set Ebt=Ybt
set Zbt="when calling doAfter in ThreeRacePick, line 220"
set aW[qW]=Zbt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Wbt,Ebt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set dbt=null
set fbt=null
set Rbt=null
set Tbt=null
set Gbt=null
set gbt=null
set hbt=null
set Fbt=null
set kbt=null
set jbt=null
set xbt=null
set vbt=null
endfunction
function COw takes nothing returns nothing
set qW=0
call Ubt("via function reference ThreeRacePick, line 305")
endfunction
function CSi takes nothing returns nothing
local integer hSi=$524D3072
local player FSi=on
local integer fSi=GetPlayerTechCount(FSi,hSi,true)
local unit RSi=CreateUnit(on,$75303030,0.,0.,0.)
local unit kSi=RSi
local integer jSi=$414D3165
local group TSi
local filterfunc YSi
local unit GSi
local group gSi
local unit xSi
local integer vSi
local integer mSi
local unit QSi
local integer WSi
local unit ESi
local integer ZSi
local integer USi
local unit ISi
local real PSi
local group ASi
local group DSi
local unit HSi
local unit JSi
local integer KSi
local group LSi
local boolexpr XSi
call UnitAddAbility(kSi,jSi)
set xSi=RSi
set vSi=$414D3165
set mSi=fSi
call SetUnitAbilityLevel(xSi,vSi,mSi)
set QSi=RSi
set WSi=$414D3166
call UnitAddAbility(QSi,WSi)
set ESi=RSi
set ZSi=$414D3166
set USi=fSi
call SetUnitAbilityLevel(ESi,ZSi,USi)
set ISi=RSi
set PSi=50.
call UnitApplyTimedLife(ISi,$42544C46,PSi)
set TSi=CreateGroup()
set YSi=Filter(J5)
call GroupEnumUnitsInRect(TSi,bj_mapInitialPlayableArea,YSi)
set gSi=TSi
loop
set ASi=gSi
exitwhen not (FirstOfGroup(ASi)!=null)
set DSi=gSi
set HSi=FirstOfGroup(DSi)
call GroupRemoveUnit(DSi,HSi)
set GSi=HSi
set JSi=GSi
set KSi=$41706976
call UnitAddAbility(JSi,KSi)
endloop
set LSi=TSi
call DestroyGroup(LSi)
set XSi=YSi
call DestroyBoolExpr(XSi)
call TimerStart(sT,50.,false,K5)
set RSi=null
set TSi=null
set YSi=null
set GSi=null
set gSi=null
set FSi=null
set kSi=null
set xSi=null
set QSi=null
set ESi=null
set ISi=null
set ASi=null
set DSi=null
set HSi=null
set JSi=null
set LSi=null
set XSi=null
endfunction
function CWt takes nothing returns nothing
local integer HWt=GetResearched()
local integer JWt
local unit KWt
local player LWt
local unit XWt
if HWt==$52303731 then
set KWt=GetResearchingUnit()
set JWt=GetPlayerTechCount(GetOwningPlayer(KWt),$52303731,true)
set XWt=GetResearchingUnit()
set LWt=GetOwningPlayer(XWt)
call SetPlayerTechResearched(Player(GetPlayerId(LWt)+4),$52303730,JWt)
endif
set KWt=null
set LWt=null
set XWt=null
endfunction
function J0S takes string O0S returns nothing
local unit l0S
local integer b0S
local unit y0S
local trigger p0S
local unit e0S
local integer q0S
local unit a0S
local unit n0S
local unit d0S
local unit f0S
local trigger R0S
local unit T0S
local unit Y0S
local unit G0S
local unit g0S
local real h0S
local unit F0S
local integer k0S
local unit j0S
local integer x0S
local integer v0S
local unit m0S
local string Q0S
local string W0S
local integer E0S
local real Z0S
local integer U0S
local string I0S
local boolean P0S
local boolean A0S
local player D0S
local real H0S
set aW[qW]=O0S
set qW=qW+1
set l0S=GetAttacker()
set a0S=l0S
if GetUnitTypeId(a0S)==$6F303536 then
set P0S=true
else
set n0S=l0S
set P0S=GetUnitTypeId(n0S)==$6F303535
endif
if P0S then
set A0S=true
else
set d0S=l0S
set A0S=GetUnitTypeId(d0S)==$6F303550
endif
if A0S then
set f0S=l0S
set b0S=GetPlayerTechCount(GetOwningPlayer(f0S),$52303847,true)
if GetRandomInt(1,100)<=5+10*b0S then
set y0S=GetTriggerUnit()
set p0S=GetTriggeringTrigger()
set R0S=p0S
call DisableTrigger(R0S)
set T0S=l0S
set D0S=GetOwningPlayer(T0S)
set Y0S=y0S
set H0S=GetUnitX(Y0S)
set G0S=y0S
set e0S=CreateUnit(D0S,$75303030,H0S,GetUnitY(G0S),0.)
set g0S=e0S
set h0S=3.
call UnitApplyTimedLife(g0S,$42544C46,h0S)
set F0S=e0S
set k0S=$41323150
call UnitAddAbility(F0S,k0S)
set j0S=e0S
set x0S=$41323150
set v0S=b0S
call SetUnitAbilityLevel(j0S,x0S,v0S)
set m0S=e0S
set Q0S="stomp"
call IssueImmediateOrder(m0S,Q0S)
set W0S="when calling alloc_CallbackSingle_doAfter_ConcussiveShot in ConcussiveShot, line 149"
set aW[qW]=W0S
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set E0S=fF
set RF[E0S]=698
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ConcussiveShot.","when calling error in ConcussiveShot, line 149")
set E0S=0
endif
else
set dF=dF-1
set E0S=nF[dF]
set RF[E0S]=698
endif
set qW=qW-1
set q0S=E0S
set dj[q0S]=p0S
set Z0S=3.
set U0S=q0S
set I0S="when calling doAfter in ConcussiveShot, line 149"
set aW[qW]=I0S
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Z0S,U0S,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set l0S=null
set y0S=null
set p0S=null
set e0S=null
set a0S=null
set n0S=null
set d0S=null
set f0S=null
set R0S=null
set T0S=null
set Y0S=null
set G0S=null
set g0S=null
set F0S=null
set j0S=null
set m0S=null
set D0S=null
endfunction
function CXc takes nothing returns nothing
set qW=0
call J0S("via function reference ConcussiveShot, line 156")
endfunction
function Cal takes nothing returns boolean
return true
endfunction
function Cao takes nothing returns boolean
local trigger Dao
local trigger Hao
local rect Jao
local region Kao
local trigger Lao
local boolexpr Xao
set nh=CreateTrigger()
set Dao=nh
call DisableTrigger(Dao)
set Hao=nh
set Jao=bj_mapInitialPlayableArea
set Kao=CreateRegion()
call RegionAddRect(Kao,Jao)
call TriggerRegisterEnterRegion(Hao,Kao,null)
set Lao=nh
set Xao=Condition(qsw)
call TriggerAddCondition(Lao,Xao)
set Dao=null
set Hao=null
set Jao=null
set Kao=null
set Lao=null
set Xao=null
return true
endfunction
function Cbe takes nothing returns nothing
local timer Pbe=GetExpiredTimer()
local unit Abe=LoadUnitHandle(qu,GetHandleId(Pbe),$556E6974)
local unit Dbe=Abe
local integer Hbe=$41313859
local unit Jbe
local integer Kbe
local timer Lbe
local timer Xbe
call UnitRemoveAbility(Dbe,Hbe)
set Jbe=Abe
set Kbe=$4131385A
call UnitRemoveAbility(Jbe,Kbe)
set Lbe=Pbe
call PauseTimer(Lbe)
set Xbe=Pbe
call DestroyTimer(Xbe)
call FlushChildHashtable(qu,GetHandleId(Pbe))
set Pbe=null
set Abe=null
set Dbe=null
set Jbe=null
set Lbe=null
set Xbe=null
endfunction
function Cbu takes nothing returns boolean
return true
endfunction
function xwO takes string pwO returns nothing
local unit ewO
local integer qwO
local integer awO
local unit nwO
local integer dwO
local unit fwO
local integer RwO
local unit TwO
local integer YwO
local integer GwO
local string gwO
local integer hwO
local real FwO
local integer kwO
local string jwO
set aW[qW]=pwO
set qW=qW+1
set ewO=GetSpellAbilityUnit()
set nwO=ewO
set dwO=$41323747
set qwO=GetUnitAbilityLevel(nwO,dwO)
set fwO=ewO
set RwO=$4132374F
call UnitAddAbility(fwO,RwO)
set TwO=ewO
set YwO=$4132374F
set GwO=qwO
call SetUnitAbilityLevel(TwO,YwO,GwO)
set gwO="when calling alloc_CallbackSingle_doAfter_Sylwanas in Sylwanas, line 300"
set aW[qW]=gwO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set hwO=fF
set RF[hwO]=752
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Sylwanas.","when calling error in Sylwanas, line 300")
set hwO=0
endif
else
set dF=dF-1
set hwO=nF[dF]
set RF[hwO]=752
endif
set qW=qW-1
set awO=hwO
set yQ[awO]=ewO
set FwO=10.
set kwO=awO
set jwO="when calling doAfter in Sylwanas, line 300"
set aW[qW]=jwO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),FwO,kwO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set ewO=null
set nwO=null
set fwO=null
set TwO=null
endfunction
function CeS takes nothing returns nothing
set qW=0
call xwO("via function reference Sylwanas, line 308")
endfunction
function Zqr takes string Zlr returns nothing
local trigger Ulr
local unit Ilr
local player Plr
local player Alr
local integer Dlr
local real Hlr
local real Jlr
local integer Klr
local integer Llr
local integer Xlr
local integer Clr
local integer Vlr
local integer Blr
local integer Nlr
local integer Mlr
local integer wbr
local integer ubr
local integer rbr
local real sbr
local real tbr
local integer ibr
local integer Sbr
local integer cbr
local integer obr
local integer Obr
local integer lbr
local integer bbr
local integer ybr
local integer pbr
local integer ebr
local integer qbr
local integer abr
local unit nbr
local player dbr
local player fbr
local trigger Rbr
local unit Tbr
local sound Ybr
local unit Gbr
local player gbr
local boolean hbr
local player Fbr
local integer kbr
local player jbr
local playerstate xbr
local integer vbr
local player mbr
local playerstate Qbr
local string Wbr
local real Ebr
local string Zbr
local real Ubr
local unit Ibr
local player Pbr
local boolean Abr
local unit Dbr
local unit Hbr
local unit Jbr
local unit Kbr
local integer Lbr
local unit Xbr
local integer Cbr
local unit Vbr
local integer Bbr
local integer Nbr
local unit Mbr
local unit wyr
local integer uyr
local unit ryr
local integer syr
local unit tyr
local integer iyr
local integer Syr
local unit cyr
local unit oyr
local integer Oyr
local unit lyr
local integer byr
local unit yyr
local integer pyr
local integer eyr
local unit qyr
local unit ayr
local integer nyr
local unit dyr
local integer fyr
local unit Ryr
local integer Tyr
local integer Yyr
local unit Gyr
local unit gyr
local integer hyr
local unit Fyr
local integer kyr
local unit jyr
local integer xyr
local unit vyr
local integer myr
local integer Qyr
local unit Wyr
local integer Eyr
local unit Zyr
local integer Uyr
local integer Iyr
local unit Pyr
local unit Ayr
local integer Dyr
local unit Hyr
local unit Jyr
local integer Kyr
local unit Lyr
local unit Xyr
local integer Cyr
local unit Vyr
local integer Byr
local unit Nyr
local integer Myr
local integer wpr
local unit upr
local unit rpr
local integer spr
local unit tpr
local integer ipr
local unit Spr
local integer cpr
local integer opr
local unit Opr
local unit lpr
local integer bpr
local unit ypr
local integer ppr
local unit epr
local integer qpr
local integer apr
local unit npr
local unit dpr
local integer fpr
local unit Rpr
local integer Tpr
local unit Ypr
local integer Gpr
local integer gpr
local unit hpr
local unit Fpr
local integer kpr
local unit jpr
local integer xpr
local unit vpr
local integer mpr
local integer Qpr
local unit Wpr
local unit Epr
local unit Zpr
local integer Upr
local unit Ipr
local unit Ppr
local integer Apr
local unit Dpr
local integer Hpr
local unit Jpr
local integer Kpr
local integer Lpr
local unit Xpr
local unit Cpr
local integer Vpr
local unit Bpr
local integer Npr
local unit Mpr
local integer wer
local integer uer
local unit rer
local unit ser
local integer ter
local unit ier
local integer Ser
local unit cer
local integer oer
local integer Oer
local unit ler
local unit ber
local integer yer
local unit per
local integer eer
local unit qer
local integer aer
local integer ner
local unit der
local unit fer
local integer Rer
local unit Ter
local integer Yer
local unit Ger
local integer ger
local unit her
local integer Fer
local integer ker
local unit jer
local integer xer
local unit ver
local integer mer
local integer Qer
local unit Wer
local unit Eer
local integer Zer
local unit Uer
local unit Ier
local integer Per
local unit Aer
local unit Der
local integer Her
local unit Jer
local integer Ker
local unit Ler
local integer Xer
local integer Cer
local unit Ver
local unit Ber
local integer Ner
local unit Mer
local integer wqr
local unit uqr
local integer rqr
local integer sqr
local unit tqr
local unit iqr
local integer Sqr
local unit cqr
local integer oqr
local unit Oqr
local integer lqr
local integer bqr
local unit yqr
local unit pqr
local integer eqr
local unit qqr
local integer aqr
local unit nqr
local integer dqr
local integer fqr
local unit Rqr
local unit Tqr
local integer Yqr
local unit Gqr
local integer gqr
local unit hqr
local integer Fqr
local integer kqr
local string jqr
local integer xqr
local real vqr
local integer mqr
local string Qqr
local player Wqr
local playerstate Eqr
set aW[qW]=Zlr
set qW=qW+1
set Ulr=GetTriggeringTrigger()
set Ilr=GetEnteringUnit()
set nbr=Ilr
set Plr=GetOwningPlayer(nbr)
set dbr=Plr
set Alr=Player(GetPlayerId(dbr)-4)
set fbr=Alr
set Dlr=GetPlayerId(fbr)
set Rbr=Ulr
call DisableTrigger(Rbr)
set Tbr=G[5]
if GetOwningPlayer(Tbr)==Player(15) then
set Ybr=bj_questUpdatedSound
call StartSound(Ybr)
set Gbr=G[5]
set gbr=Alr
set hbr=false
call SetUnitOwner(Gbr,gbr,hbr)
call UuS(G[5],75)
set Fbr=Alr
set kbr=75
set jbr=Fbr
set xbr=PLAYER_STATE_RESOURCE_GOLD
set vbr=kbr
set Wqr=jbr
set Eqr=xbr
set mbr=jbr
set Qbr=xbr
call SetPlayerState(Wqr,Eqr,GetPlayerState(mbr,Qbr)+vbr)
set Wbr=Aw[Dlr]+GetPlayerName(Alr)+"|r"+" has captured neutral building!"
set Ebr=10.
set Zbr=Wbr
set Ubr=Ebr
call DisplayTimedTextToPlayer(IY,0.,0.,Ubr,Zbr)
set hr[Dlr]=hr[Dlr]+75
set Fr[Dlr]=Fr[Dlr]+75
set Vr[Dlr]=Vr[Dlr]+75
else
set Ibr=G[5]
set Pbr=Alr
set Abr=false
call SetUnitOwner(Ibr,Pbr,Abr)
endif
if Alr==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set Dbr=G[5]
set Hlr=GetUnitX(Dbr)
set Hbr=G[5]
set Jlr=GetUnitY(Hbr)
set g[5]=CreateUnit(Ud,$6E303349,Hlr,Jlr,0.)
set Jbr=G[5]
if GetUnitTypeId(Jbr)==$6E676164 then
set Kbr=G[5]
set Lbr=$41303042
set Klr=GetUnitAbilityLevel(Kbr,Lbr)
set Xbr=g[5]
set Cbr=$41313053
call UnitAddAbility(Xbr,Cbr)
set Vbr=g[5]
set Bbr=$41313053
set Nbr=Klr
call SetUnitAbilityLevel(Vbr,Bbr,Nbr)
endif
set Mbr=G[5]
if GetUnitTypeId(Mbr)==$6E64727A then
set wyr=G[5]
set uyr=$41303852
set Llr=GetUnitAbilityLevel(wyr,uyr)
set ryr=g[5]
set syr=$41313049
call UnitAddAbility(ryr,syr)
set tyr=g[5]
set iyr=$41313049
set Syr=Llr
call SetUnitAbilityLevel(tyr,iyr,Syr)
endif
set cyr=G[5]
if GetUnitTypeId(cyr)==$6E647267 then
set oyr=G[5]
set Oyr=$41303856
set Xlr=GetUnitAbilityLevel(oyr,Oyr)
set lyr=g[5]
set byr=$41313054
call UnitAddAbility(lyr,byr)
set yyr=g[5]
set pyr=$41313054
set eyr=Xlr
call SetUnitAbilityLevel(yyr,pyr,eyr)
endif
set qyr=G[5]
if GetUnitTypeId(qyr)==$6E676D65 then
set ayr=G[5]
set nyr=$4130384F
set Clr=GetUnitAbilityLevel(ayr,nyr)
set dyr=g[5]
set fyr=$4131304A
call UnitAddAbility(dyr,fyr)
set Ryr=g[5]
set Tyr=$4131304A
set Yyr=Clr
call SetUnitAbilityLevel(Ryr,Tyr,Yyr)
endif
set Gyr=G[5]
if GetUnitTypeId(Gyr)==$6E647272 then
set gyr=G[5]
set hyr=$41303858
set Vlr=GetUnitAbilityLevel(gyr,hyr)
set Fyr=G[5]
set kyr=$41303859
set Blr=GetUnitAbilityLevel(Fyr,kyr)
set jyr=g[5]
set xyr=$4131304B
call UnitAddAbility(jyr,xyr)
set vyr=g[5]
set myr=$4131304B
set Qyr=Vlr
call SetUnitAbilityLevel(vyr,myr,Qyr)
set Wyr=g[5]
set Eyr=$4131304C
call UnitAddAbility(Wyr,Eyr)
set Zyr=g[5]
set Uyr=$4131304C
set Iyr=Blr
call SetUnitAbilityLevel(Zyr,Uyr,Iyr)
endif
set Pyr=G[5]
if GetUnitTypeId(Pyr)==$6E6D7232 then
set Ayr=g[5]
set Dyr=$41303853
call UnitAddAbility(Ayr,Dyr)
endif
set Hyr=G[5]
if GetUnitTypeId(Hyr)==$6E676F6C then
set Jyr=g[5]
set Kyr=$41303853
call UnitAddAbility(Jyr,Kyr)
endif
set Lyr=G[5]
if GetUnitTypeId(Lyr)==$6E64726F then
set Xyr=G[5]
set Cyr=$41303855
set Nlr=GetUnitAbilityLevel(Xyr,Cyr)
set Vyr=g[5]
set Byr=$4131304E
call UnitAddAbility(Vyr,Byr)
set Nyr=g[5]
set Myr=$4131304E
set wpr=Nlr
call SetUnitAbilityLevel(Nyr,Myr,wpr)
endif
set upr=G[5]
if GetUnitTypeId(upr)==$6E776774 then
set rpr=G[5]
set spr=$41303850
set Mlr=GetUnitAbilityLevel(rpr,spr)
set tpr=g[5]
set ipr=$4131304F
call UnitAddAbility(tpr,ipr)
set Spr=g[5]
set cpr=$4131304F
set opr=Mlr
call SetUnitAbilityLevel(Spr,cpr,opr)
endif
set Opr=G[5]
if GetUnitTypeId(Opr)==$6E647275 then
set lpr=G[5]
set bpr=$4130384E
set wbr=GetUnitAbilityLevel(lpr,bpr)
set ypr=g[5]
set ppr=$41313050
call UnitAddAbility(ypr,ppr)
set epr=g[5]
set qpr=$41313050
set apr=wbr
call SetUnitAbilityLevel(epr,qpr,apr)
endif
set npr=G[5]
if GetUnitTypeId(npr)==$6E666F68 then
set dpr=G[5]
set fpr=$4130384D
set ubr=GetUnitAbilityLevel(dpr,fpr)
set Rpr=g[5]
set Tpr=$41313051
call UnitAddAbility(Rpr,Tpr)
set Ypr=g[5]
set Gpr=$41313051
set gpr=ubr
call SetUnitAbilityLevel(Ypr,Gpr,gpr)
endif
set hpr=G[5]
if GetUnitTypeId(hpr)==$6E64726B then
set Fpr=G[5]
set kpr=$41303851
set rbr=GetUnitAbilityLevel(Fpr,kpr)
set jpr=g[5]
set xpr=$41313052
call UnitAddAbility(jpr,xpr)
set vpr=g[5]
set mpr=$41313052
set Qpr=rbr
call SetUnitAbilityLevel(vpr,mpr,Qpr)
endif
endif
if Alr!=Ud and g[5]!=null then
call RemoveUnit(g[5])
set g[5]=null
endif
if Alr==Ud and fq==true then
set Wpr=G[5]
set sbr=GetUnitX(Wpr)
set Epr=G[5]
set tbr=GetUnitY(Epr)
set h[5]=CreateUnit(Ud,$6E303349,sbr,tbr,0.)
set Zpr=h[5]
set Upr=$4545564F
call UnitAddAbility(Zpr,Upr)
set Ipr=G[5]
if GetUnitTypeId(Ipr)==$6E676164 then
set Ppr=G[5]
set Apr=$41303042
set ibr=GetUnitAbilityLevel(Ppr,Apr)
set Dpr=h[5]
set Hpr=$41313641
call UnitAddAbility(Dpr,Hpr)
set Jpr=h[5]
set Kpr=$41313641
set Lpr=ibr
call SetUnitAbilityLevel(Jpr,Kpr,Lpr)
endif
set Xpr=G[5]
if GetUnitTypeId(Xpr)==$6E64727A then
set Cpr=G[5]
set Vpr=$41303852
set Sbr=GetUnitAbilityLevel(Cpr,Vpr)
set Bpr=h[5]
set Npr=$41313630
call UnitAddAbility(Bpr,Npr)
set Mpr=h[5]
set wer=$41313630
set uer=Sbr
call SetUnitAbilityLevel(Mpr,wer,uer)
endif
set rer=G[5]
if GetUnitTypeId(rer)==$6E647267 then
set ser=G[5]
set ter=$41303856
set cbr=GetUnitAbilityLevel(ser,ter)
set ier=h[5]
set Ser=$41313642
call UnitAddAbility(ier,Ser)
set cer=h[5]
set oer=$41313642
set Oer=cbr
call SetUnitAbilityLevel(cer,oer,Oer)
endif
set ler=G[5]
if GetUnitTypeId(ler)==$6E676D65 then
set ber=G[5]
set yer=$4130384F
set obr=GetUnitAbilityLevel(ber,yer)
set per=h[5]
set eer=$41313631
call UnitAddAbility(per,eer)
set qer=h[5]
set aer=$41313631
set ner=obr
call SetUnitAbilityLevel(qer,aer,ner)
endif
set der=G[5]
if GetUnitTypeId(der)==$6E647272 then
set fer=G[5]
set Rer=$41303858
set Obr=GetUnitAbilityLevel(fer,Rer)
set Ter=G[5]
set Yer=$41303859
set lbr=GetUnitAbilityLevel(Ter,Yer)
set Ger=h[5]
set ger=$41313632
call UnitAddAbility(Ger,ger)
set her=h[5]
set Fer=$41313633
set ker=Obr
call SetUnitAbilityLevel(her,Fer,ker)
set jer=h[5]
set xer=$41313632
call UnitAddAbility(jer,xer)
set ver=h[5]
set mer=$41313633
set Qer=lbr
call SetUnitAbilityLevel(ver,mer,Qer)
endif
set Wer=G[5]
if GetUnitTypeId(Wer)==$6E6D7232 then
set Eer=h[5]
set Zer=$41303853
call UnitAddAbility(Eer,Zer)
endif
set Uer=G[5]
if GetUnitTypeId(Uer)==$6E676F6C then
set Ier=h[5]
set Per=$41303853
call UnitAddAbility(Ier,Per)
endif
set Aer=G[5]
if GetUnitTypeId(Aer)==$6E64726F then
set Der=G[5]
set Her=$41303855
set bbr=GetUnitAbilityLevel(Der,Her)
set Jer=h[5]
set Ker=$41313635
call UnitAddAbility(Jer,Ker)
set Ler=h[5]
set Xer=$41313635
set Cer=bbr
call SetUnitAbilityLevel(Ler,Xer,Cer)
endif
set Ver=G[5]
if GetUnitTypeId(Ver)==$6E776774 then
set Ber=G[5]
set Ner=$41303850
set ybr=GetUnitAbilityLevel(Ber,Ner)
set Mer=h[5]
set wqr=$41313636
call UnitAddAbility(Mer,wqr)
set uqr=h[5]
set rqr=$41313636
set sqr=ybr
call SetUnitAbilityLevel(uqr,rqr,sqr)
endif
set tqr=G[5]
if GetUnitTypeId(tqr)==$6E647275 then
set iqr=G[5]
set Sqr=$4130384E
set pbr=GetUnitAbilityLevel(iqr,Sqr)
set cqr=h[5]
set oqr=$41313637
call UnitAddAbility(cqr,oqr)
set Oqr=h[5]
set lqr=$41313637
set bqr=pbr
call SetUnitAbilityLevel(Oqr,lqr,bqr)
endif
set yqr=G[5]
if GetUnitTypeId(yqr)==$6E666F68 then
set pqr=G[5]
set eqr=$4130384D
set ebr=GetUnitAbilityLevel(pqr,eqr)
set qqr=h[5]
set aqr=$41313638
call UnitAddAbility(qqr,aqr)
set nqr=h[5]
set dqr=$41313638
set fqr=ebr
call SetUnitAbilityLevel(nqr,dqr,fqr)
endif
set Rqr=G[5]
if GetUnitTypeId(Rqr)==$6E64726B then
set Tqr=G[5]
set Yqr=$41303851
set qbr=GetUnitAbilityLevel(Tqr,Yqr)
set Gqr=h[5]
set gqr=$41313639
call UnitAddAbility(Gqr,gqr)
set hqr=h[5]
set Fqr=$41313639
set kqr=qbr
call SetUnitAbilityLevel(hqr,Fqr,kqr)
endif
endif
if Alr!=Ud and h[5]!=null then
call RemoveUnit(h[5])
set h[5]=null
endif
set jqr="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 758"
set aW[qW]=jqr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set xqr=fF
set RF[xqr]=739
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 758")
set xqr=0
endif
else
set dF=dF-1
set xqr=nF[dF]
set RF[xqr]=739
endif
set qW=qW-1
set abr=xqr
set Em[abr]=Ulr
set vqr=2.
set mqr=abr
set Qqr="when calling doAfter in NeutralStructures, line 758"
set aW[qW]=Qqr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),vqr,mqr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set Ulr=null
set Ilr=null
set Plr=null
set Alr=null
set nbr=null
set dbr=null
set fbr=null
set Rbr=null
set Tbr=null
set Ybr=null
set Gbr=null
set gbr=null
set Fbr=null
set jbr=null
set xbr=null
set mbr=null
set Qbr=null
set Ibr=null
set Pbr=null
set Dbr=null
set Hbr=null
set Jbr=null
set Kbr=null
set Xbr=null
set Vbr=null
set Mbr=null
set wyr=null
set ryr=null
set tyr=null
set cyr=null
set oyr=null
set lyr=null
set yyr=null
set qyr=null
set ayr=null
set dyr=null
set Ryr=null
set Gyr=null
set gyr=null
set Fyr=null
set jyr=null
set vyr=null
set Wyr=null
set Zyr=null
set Pyr=null
set Ayr=null
set Hyr=null
set Jyr=null
set Lyr=null
set Xyr=null
set Vyr=null
set Nyr=null
set upr=null
set rpr=null
set tpr=null
set Spr=null
set Opr=null
set lpr=null
set ypr=null
set epr=null
set npr=null
set dpr=null
set Rpr=null
set Ypr=null
set hpr=null
set Fpr=null
set jpr=null
set vpr=null
set Wpr=null
set Epr=null
set Zpr=null
set Ipr=null
set Ppr=null
set Dpr=null
set Jpr=null
set Xpr=null
set Cpr=null
set Bpr=null
set Mpr=null
set rer=null
set ser=null
set ier=null
set cer=null
set ler=null
set ber=null
set per=null
set qer=null
set der=null
set fer=null
set Ter=null
set Ger=null
set her=null
set jer=null
set ver=null
set Wer=null
set Eer=null
set Uer=null
set Ier=null
set Aer=null
set Der=null
set Jer=null
set Ler=null
set Ver=null
set Ber=null
set Mer=null
set uqr=null
set tqr=null
set iqr=null
set cqr=null
set Oqr=null
set yqr=null
set pqr=null
set qqr=null
set nqr=null
set Rqr=null
set Tqr=null
set Gqr=null
set hqr=null
set Wqr=null
set Eqr=null
endfunction
function Chw takes nothing returns nothing
set qW=0
call Zqr("via function reference NeutralStructures, line 1745")
endfunction
function Cmy takes nothing returns nothing
local unit Gxy=GetDyingUnit()
local unit gxy=GetKillingUnit()
local unit jxy=Gxy
local unittype xxy=UNIT_TYPE_HERO
local integer hxy
local texttag Fxy
local texttag kxy
local unit vxy
local unittype mxy
local unit Qxy
local unit Wxy
local effect Exy
local string Zxy
local real Uxy
local real Ixy
local unit Pxy
local unit Axy
local unit Dxy
local texttag Hxy
local real Jxy
local real Kxy
local real Lxy
local unit Xxy
local unit Cxy
local texttag Vxy
local integer Bxy
local integer Nxy
local integer Mxy
local integer wvy
local texttag uvy
local real rvy
local texttag svy
local real tvy
local texttag ivy
local boolean Svy
local texttag cvy
local boolean ovy
local texttag Ovy
local string lvy
local real bvy
local integer yvy
local texttag pvy
local real evy
local real qvy
local unit avy
local unit nvy
local unit dvy
local unit fvy
local texttag Rvy
local real Tvy
local real Yvy
local real Gvy
local unit gvy
local player hvy
local unit Fvy
local unit kvy
local player jvy
local unit xvy
local unit vvy
local real mvy
local unit Qvy
local unitstate Wvy
local real Evy
local unit Zvy
local unitstate Uvy
local player Ivy
local unit Pvy
local unit Avy
local unit Dvy
local unit Hvy
local unit Jvy
local texttag Kvy
local real Lvy
local real Xvy
local real Cvy
local unit Vvy
local player Bvy
local unit Nvy
local unit Mvy
local player wmy
local unit umy
local unit rmy
local real smy
local unit tmy
local unitstate imy
local real Smy
local unit cmy
local unitstate omy
local player Omy
local unit lmy
local texttag bmy
local integer ymy
local integer pmy
local integer emy
local integer qmy
local texttag amy
local real nmy
local texttag dmy
local real fmy
local texttag Rmy
local boolean Tmy
local texttag Ymy
local boolean Gmy
local texttag gmy
local string hmy
local real Fmy
local integer kmy
local texttag jmy
local real xmy
local real vmy
local boolean mmy
local boolean Qmy
local real Wmy
local boolean Emy
local boolean Zmy
local boolean Umy
local unit Imy
local unitstate Pmy
local boolean Amy
local boolean Dmy
local boolean Hmy
local unit Jmy
local unitstate Kmy
local real Lmy
local real Xmy
if IsUnitType(jxy,xxy)==true then
set vxy=Gxy
set mxy=UNIT_TYPE_MECHANICAL
set mmy=IsUnitType(vxy,mxy)==false
else
set mmy=false
endif
if mmy then
set Qxy=gxy
set Qmy=GetPlayerTechCount(GetOwningPlayer(Qxy),$52303448,true)>0
else
set Qmy=false
endif
if Qmy then
set Wxy=gxy
set hxy=GetPlayerTechCount(GetOwningPlayer(Wxy),$52303448,true)
set Zxy="Objects\\Spawnmodels\\Undead\\UCancelDeath\\UCancelDeath.mdl"
set Pxy=Gxy
set Axy=Pxy
set Wmy=GetUnitX(Axy)
set Dxy=Pxy
set Lmy=Wmy
set Xmy=GetUnitY(Dxy)
set Uxy=Lmy
set Ixy=Xmy
set Exy=AddSpecialEffect(Zxy,Uxy,Ixy)
call DestroyEffect(Exy)
set Fxy=CreateTextTag()
set Hxy=Fxy
set Xxy=Gxy
set Jxy=GetUnitX(Xxy)
set Cxy=Gxy
set Kxy=GetUnitY(Cxy)
set Lxy=50.
call SetTextTagPos(Hxy,Jxy,Kxy,Lxy)
set Vxy=Fxy
set Bxy=0
set Nxy=191
set Mxy=255
set wvy=255
call SetTextTagColor(Vxy,Bxy,Nxy,Mxy,wvy)
set uvy=Fxy
set rvy=6.
call SetTextTagLifespan(uvy,rvy)
set svy=Fxy
set tvy=4.
call SetTextTagFadepoint(svy,tvy)
set ivy=Fxy
set Svy=true
call SetTextTagVisibility(ivy,Svy)
set cvy=Fxy
set ovy=false
call SetTextTagPermanent(cvy,ovy)
set Ovy=Fxy
set yvy=10*hxy
set lvy="+ "+I2S(yvy)+" mana"
set bvy=10.
call SetTextTagText(Ovy,lvy,bvy*.0023)
set pvy=Fxy
set evy=0.
set qvy=.03
call SetTextTagVelocity(pvy,evy,qvy)
set kxy=CreateTextTag()
set avy=gxy
if GetOwningPlayer(avy)==Player(0) then
set Emy=true
else
set nvy=gxy
set Emy=GetOwningPlayer(nvy)==Player(1)
endif
if Emy then
set Zmy=true
else
set dvy=gxy
set Zmy=GetOwningPlayer(dvy)==Player(2)
endif
if Zmy then
set Umy=true
else
set fvy=gxy
set Umy=GetOwningPlayer(fvy)==Player(3)
endif
if Umy then
set Rvy=kxy
set Fvy=gxy
set hvy=GetOwningPlayer(Fvy)
set gvy=o[GetPlayerId(hvy)]
set Tvy=GetUnitX(gvy)
set xvy=gxy
set jvy=GetOwningPlayer(xvy)
set kvy=o[GetPlayerId(jvy)]
set Yvy=GetUnitY(kvy)
set Gvy=50.
call SetTextTagPos(Rvy,Tvy,Yvy,Gvy)
set Pvy=gxy
set Ivy=GetOwningPlayer(Pvy)
set vvy=o[GetPlayerId(Ivy)]
set mvy=10.*hxy
set Qvy=vvy
set Wvy=UNIT_STATE_MANA
set Evy=mvy
set Imy=Qvy
set Pmy=Wvy
set Zvy=Qvy
set Uvy=Wvy
call SetUnitState(Imy,Pmy,GetUnitState(Zvy,Uvy)+Evy)
else
set Avy=gxy
if GetOwningPlayer(Avy)==Player(4) then
set Amy=true
else
set Dvy=gxy
set Amy=GetOwningPlayer(Dvy)==Player(5)
endif
if Amy then
set Dmy=true
else
set Hvy=gxy
set Dmy=GetOwningPlayer(Hvy)==Player(6)
endif
if Dmy then
set Hmy=true
else
set Jvy=gxy
set Hmy=GetOwningPlayer(Jvy)==Player(7)
endif
if Hmy then
set Kvy=kxy
set Nvy=gxy
set Bvy=GetOwningPlayer(Nvy)
set Vvy=o[GetPlayerId(Bvy)-4]
set Lvy=GetUnitX(Vvy)
set umy=gxy
set wmy=GetOwningPlayer(umy)
set Mvy=o[GetPlayerId(wmy)-4]
set Xvy=GetUnitY(Mvy)
set Cvy=50.
call SetTextTagPos(Kvy,Lvy,Xvy,Cvy)
set lmy=gxy
set Omy=GetOwningPlayer(lmy)
set rmy=o[GetPlayerId(Omy)-4]
set smy=10.*hxy
set tmy=rmy
set imy=UNIT_STATE_MANA
set Smy=smy
set Jmy=tmy
set Kmy=imy
set cmy=tmy
set omy=imy
call SetUnitState(Jmy,Kmy,GetUnitState(cmy,omy)+Smy)
endif
endif
set bmy=kxy
set ymy=0
set pmy=191
set emy=255
set qmy=255
call SetTextTagColor(bmy,ymy,pmy,emy,qmy)
set amy=kxy
set nmy=6.
call SetTextTagLifespan(amy,nmy)
set dmy=kxy
set fmy=4.
call SetTextTagFadepoint(dmy,fmy)
set Rmy=kxy
set Tmy=true
call SetTextTagVisibility(Rmy,Tmy)
set Ymy=kxy
set Gmy=false
call SetTextTagPermanent(Ymy,Gmy)
set gmy=kxy
set kmy=10*hxy
set hmy="+ "+I2S(kmy)+" mana"
set Fmy=10.
call SetTextTagText(gmy,hmy,Fmy*.0023)
set jmy=kxy
set xmy=0.
set vmy=.03
call SetTextTagVelocity(jmy,xmy,vmy)
endif
set Gxy=null
set gxy=null
set Fxy=null
set kxy=null
set jxy=null
set xxy=null
set vxy=null
set mxy=null
set Qxy=null
set Wxy=null
set Exy=null
set Pxy=null
set Axy=null
set Dxy=null
set Hxy=null
set Xxy=null
set Cxy=null
set Vxy=null
set uvy=null
set svy=null
set ivy=null
set cvy=null
set Ovy=null
set pvy=null
set avy=null
set nvy=null
set dvy=null
set fvy=null
set Rvy=null
set gvy=null
set hvy=null
set Fvy=null
set kvy=null
set jvy=null
set xvy=null
set vvy=null
set Qvy=null
set Wvy=null
set Zvy=null
set Uvy=null
set Ivy=null
set Pvy=null
set Avy=null
set Dvy=null
set Hvy=null
set Jvy=null
set Kvy=null
set Vvy=null
set Bvy=null
set Nvy=null
set Mvy=null
set wmy=null
set umy=null
set rmy=null
set tmy=null
set imy=null
set cmy=null
set omy=null
set Omy=null
set lmy=null
set bmy=null
set amy=null
set dmy=null
set Rmy=null
set Ymy=null
set gmy=null
set jmy=null
set Imy=null
set Pmy=null
set Jmy=null
set Kmy=null
endfunction
function Cni takes nothing returns boolean
local playerunitevent Lni=EVENT_PLAYER_UNIT_DEATH
local code Xni=Osw
call emO(Lni,null,Xni,null)
set Lni=null
return true
endfunction
function jVl takes real UCl,real ICl,real PCl,string ACl,real DCl,integer HCl,integer JCl,integer KCl,integer LCl returns texttag
local texttag XCl=CreateTextTag()
local texttag NCl=XCl
local real nVl=UCl
local real dVl=ICl
local real iVl=nVl
local real SVl=dVl
local real fVl=iVl
local real RVl=SVl
local real rVl=fVl
local real sVl=RVl
local real tVl=200.
local real TVl=rVl
local real YVl=sVl
local real GVl=tVl
local real MCl=TVl
local real wVl=YVl
local real uVl=GVl
local texttag CCl
local texttag VCl
local texttag BCl
local texttag cVl
local string oVl
local real OVl
local texttag lVl
local integer bVl
local integer yVl
local integer pVl
local integer eVl
local texttag qVl
local boolean aVl
local integer gVl
local integer hVl
local integer FVl
local integer kVl
call SetTextTagPos(NCl,MCl,wVl,uVl)
set CCl=XCl
set cVl=CCl
set oVl=ACl
set OVl=DCl
call SetTextTagText(cVl,oVl,OVl*.0023)
set VCl=CCl
set lVl=VCl
set gVl=HCl
set hVl=JCl
set FVl=KCl
set kVl=LCl
set bVl=gVl
set yVl=hVl
set pVl=FVl
set eVl=kVl
call SetTextTagColor(lVl,bVl,yVl,pVl,eVl)
set BCl=VCl
set qVl=BCl
set aVl=true
call SetTextTagVisibility(qVl,aVl)
set Atw=BCl
set XCl=null
set CCl=null
set VCl=null
set BCl=null
set NCl=null
set cVl=null
set lVl=null
set qVl=null
return Atw
endfunction
function hKr takes string thr returns nothing
local integer ihr
local integer Shr
local integer chr
local integer ohr
local integer Ohr
local integer lhr
local integer bhr
local integer yhr
local integer phr
local integer ehr
local integer qhr
local integer ahr
local integer nhr
local integer dhr
local integer fhr
local integer Rhr
local integer Thr
local integer Yhr
local integer Ghr
local integer ghr
local integer hhr
local group Fhr
local filterfunc khr
local group jhr
local unit xhr
local group vhr
local integer mhr
local integer Qhr
local integer Whr
local integer Ehr
local group Zhr
local filterfunc Uhr
local unit Ihr
local group Phr
local player Ahr
local unit Dhr
local trigger Hhr
local player Jhr
local integer Khr
local player Lhr
local playerstate Xhr
local integer Chr
local player Vhr
local playerstate Bhr
local unit Nhr
local player Mhr
local unit wFr
local unit uFr
local integer rFr
local integer sFr
local string tFr
local unit iFr
local integer SFr
local integer cFr
local string oFr
local integer OFr
local integer lFr
local integer bFr
local string yFr
local integer pFr
local integer eFr
local texttag qFr
local unit aFr
local unit nFr
local trigger dFr
local unit fFr
local unit RFr
local player TFr
local unit YFr
local trigger GFr
local player gFr
local integer hFr
local player FFr
local playerstate kFr
local integer jFr
local player xFr
local playerstate vFr
local unit mFr
local player QFr
local unit WFr
local texttag EFr
local unit ZFr
local integer UFr
local integer IFr
local string PFr
local unit AFr
local integer DFr
local integer HFr
local string JFr
local integer KFr
local integer LFr
local integer XFr
local string CFr
local integer VFr
local integer BFr
local unit NFr
local unit MFr
local trigger wkr
local unit ukr
local unit rkr
local player skr
local unit tkr
local trigger ikr
local player Skr
local integer ckr
local player okr
local playerstate Okr
local integer lkr
local player bkr
local playerstate ykr
local unit pkr
local player ekr
local unit qkr
local texttag akr
local unit nkr
local integer dkr
local integer fkr
local string Rkr
local unit Tkr
local integer Ykr
local integer Gkr
local string gkr
local integer hkr
local integer Fkr
local integer kkr
local string jkr
local integer xkr
local integer vkr
local unit mkr
local unit Qkr
local trigger Wkr
local unit Ekr
local unit Zkr
local player Ukr
local unit Ikr
local trigger Pkr
local player Akr
local integer Dkr
local player Hkr
local playerstate Jkr
local integer Kkr
local player Lkr
local playerstate Xkr
local unit Ckr
local player Vkr
local unit Bkr
local unit Nkr
local integer Mkr
local unit wjr
local integer ujr
local unit rjr
local integer sjr
local texttag tjr
local unit ijr
local unit Sjr
local player cjr
local player ojr
local playerstate Ojr
local unit ljr
local trigger bjr
local player yjr
local integer pjr
local player ejr
local playerstate qjr
local integer ajr
local player njr
local playerstate djr
local unit fjr
local player Rjr
local integer Tjr
local player Yjr
local playerstate Gjr
local integer gjr
local unit hjr
local player Fjr
local player kjr
local playerstate jjr
local unit xjr
local player vjr
local unit mjr
local texttag Qjr
local unit Wjr
local integer Ejr
local integer Zjr
local string Ujr
local unit Ijr
local integer Pjr
local integer Ajr
local string Djr
local integer Hjr
local integer Jjr
local integer Kjr
local string Ljr
local integer Xjr
local integer Cjr
local unit Vjr
local unit Bjr
local trigger Njr
local unit Mjr
local unit wxr
local player uxr
local player rxr
local playerstate sxr
local unit txr
local trigger ixr
local player Sxr
local integer cxr
local player oxr
local playerstate Oxr
local integer lxr
local player bxr
local playerstate yxr
local unit pxr
local player exr
local integer qxr
local player axr
local playerstate nxr
local integer dxr
local unit fxr
local player Rxr
local player Txr
local playerstate Yxr
local unit Gxr
local player gxr
local unit hxr
local texttag Fxr
local unit kxr
local integer jxr
local integer xxr
local string vxr
local unit mxr
local integer Qxr
local integer Wxr
local string Exr
local integer Zxr
local integer Uxr
local integer Ixr
local string Pxr
local integer Axr
local integer Dxr
local unit Hxr
local unit Jxr
local trigger Kxr
local unit Lxr
local unit Xxr
local player Cxr
local player Vxr
local playerstate Bxr
local unit Nxr
local trigger Mxr
local player wvr
local integer uvr
local player rvr
local playerstate svr
local integer tvr
local player ivr
local playerstate Svr
local unit cvr
local player ovr
local integer Ovr
local player lvr
local playerstate bvr
local integer yvr
local unit pvr
local player evr
local player qvr
local playerstate avr
local unit nvr
local player dvr
local unit fvr
local texttag Rvr
local unit Tvr
local integer Yvr
local integer Gvr
local string gvr
local unit hvr
local integer Fvr
local integer kvr
local string jvr
local integer xvr
local integer vvr
local integer mvr
local string Qvr
local integer Wvr
local integer Evr
local unit Zvr
local unit Uvr
local trigger Ivr
local unit Pvr
local unit Avr
local player Dvr
local player Hvr
local playerstate Jvr
local unit Kvr
local trigger Lvr
local player Xvr
local integer Cvr
local player Vvr
local playerstate Bvr
local integer Nvr
local player Mvr
local playerstate wmr
local unit umr
local player rmr
local integer smr
local player tmr
local playerstate imr
local integer Smr
local unit cmr
local player omr
local player Omr
local playerstate lmr
local unit bmr
local player ymr
local unit pmr
local texttag emr
local unit qmr
local integer amr
local unit nmr
local integer dmr
local unit fmr
local unit Rmr
local unit Tmr
local unit Ymr
local player Gmr
local unit gmr
local trigger hmr
local player Fmr
local integer kmr
local player jmr
local playerstate xmr
local integer vmr
local player mmr
local playerstate Qmr
local unit Wmr
local player Emr
local unit Zmr
local texttag Umr
local unit Imr
local integer Pmr
local integer Amr
local string Dmr
local unit Hmr
local integer Jmr
local integer Kmr
local string Lmr
local integer Xmr
local integer Cmr
local integer Vmr
local string Bmr
local integer Nmr
local integer Mmr
local unit wQr
local unit uQr
local trigger rQr
local unit sQr
local unit tQr
local player iQr
local unit SQr
local trigger cQr
local player oQr
local integer OQr
local player lQr
local playerstate bQr
local integer yQr
local player pQr
local playerstate eQr
local unit qQr
local player aQr
local unit nQr
local texttag dQr
local unit fQr
local integer RQr
local integer TQr
local string YQr
local unit GQr
local integer gQr
local integer hQr
local string FQr
local integer kQr
local integer jQr
local integer xQr
local string vQr
local integer mQr
local integer QQr
local unit WQr
local unit EQr
local trigger ZQr
local unit UQr
local unit IQr
local player PQr
local unit AQr
local trigger DQr
local player HQr
local integer JQr
local player KQr
local playerstate LQr
local integer XQr
local player CQr
local playerstate VQr
local unit BQr
local player NQr
local unit MQr
local texttag wWr
local unit uWr
local integer rWr
local integer sWr
local string tWr
local unit iWr
local integer SWr
local integer cWr
local string oWr
local integer OWr
local integer lWr
local integer bWr
local string yWr
local integer pWr
local integer eWr
local unit qWr
local unit aWr
local trigger nWr
local unit dWr
local unit fWr
local player RWr
local unit TWr
local trigger YWr
local player GWr
local integer gWr
local player hWr
local playerstate FWr
local integer kWr
local player jWr
local playerstate xWr
local unit vWr
local player mWr
local unit QWr
local texttag WWr
local unit EWr
local integer ZWr
local unit UWr
local integer IWr
local unit PWr
local unit AWr
local unit DWr
local unit HWr
local unit JWr
local unit KWr
local unit LWr
local unit XWr
local unit CWr
local trigger VWr
local player BWr
local integer NWr
local player MWr
local playerstate wEr
local integer uEr
local player rEr
local playerstate sEr
local unit tEr
local player iEr
local unit SEr
local texttag cEr
local unit oEr
local integer OEr
local integer lEr
local string bEr
local unit yEr
local integer pEr
local integer eEr
local string qEr
local integer aEr
local integer nEr
local integer dEr
local string fEr
local integer REr
local integer TEr
local unit YEr
local unit GEr
local trigger gEr
local unit hEr
local unit FEr
local unit kEr
local unit jEr
local unit xEr
local trigger vEr
local player mEr
local integer QEr
local player WEr
local playerstate EEr
local integer ZEr
local player UEr
local playerstate IEr
local unit PEr
local player AEr
local unit DEr
local texttag HEr
local unit JEr
local integer KEr
local integer LEr
local string XEr
local unit CEr
local integer VEr
local integer BEr
local string NEr
local integer MEr
local integer wZr
local integer uZr
local string rZr
local integer sZr
local integer tZr
local unit iZr
local unit SZr
local trigger cZr
local unit oZr
local unit OZr
local unit lZr
local unit bZr
local unit yZr
local unit pZr
local unit eZr
local trigger qZr
local player aZr
local integer nZr
local player dZr
local playerstate fZr
local integer RZr
local player TZr
local playerstate YZr
local unit GZr
local player gZr
local unit hZr
local texttag FZr
local unit kZr
local integer jZr
local integer xZr
local string vZr
local unit mZr
local integer QZr
local integer WZr
local string EZr
local integer ZZr
local integer UZr
local integer IZr
local string PZr
local integer AZr
local integer DZr
local unit HZr
local unit JZr
local trigger KZr
local unit LZr
local unit XZr
local player CZr
local unit VZr
local trigger BZr
local player NZr
local integer MZr
local player wUr
local playerstate uUr
local integer rUr
local player sUr
local playerstate tUr
local unit iUr
local player SUr
local unit cUr
local texttag oUr
local unit OUr
local integer lUr
local unit bUr
local integer yUr
local unit pUr
local unit eUr
local player qUr
local unit aUr
local player nUr
local unit dUr
local player fUr
local unit RUr
local player TUr
local unit YUr
local trigger GUr
local player gUr
local integer hUr
local player FUr
local playerstate kUr
local integer jUr
local player xUr
local playerstate vUr
local unit mUr
local player QUr
local unit WUr
local texttag EUr
local unit ZUr
local integer UUr
local integer IUr
local string PUr
local unit AUr
local integer DUr
local integer HUr
local string JUr
local integer KUr
local integer LUr
local integer XUr
local string CUr
local integer VUr
local integer BUr
local unit NUr
local unit MUr
local trigger wIr
local unit uIr
local unit rIr
local trigger sIr
local player tIr
local integer iIr
local player SIr
local playerstate cIr
local integer oIr
local player OIr
local playerstate lIr
local unit bIr
local player yIr
local unit pIr
local texttag eIr
local unit qIr
local integer aIr
local integer nIr
local string dIr
local unit fIr
local integer RIr
local integer TIr
local string YIr
local integer GIr
local integer gIr
local integer hIr
local string FIr
local integer kIr
local integer jIr
local unit xIr
local unit vIr
local trigger mIr
local unit QIr
local unit WIr
local player EIr
local unit ZIr
local player UIr
local unit IIr
local player PIr
local unit AIr
local player DIr
local unit HIr
local trigger JIr
local player KIr
local integer LIr
local player XIr
local playerstate CIr
local integer VIr
local player BIr
local playerstate NIr
local unit MIr
local player wPr
local unit uPr
local texttag rPr
local unit sPr
local integer tPr
local integer iPr
local string SPr
local unit cPr
local integer oPr
local integer OPr
local string lPr
local integer bPr
local integer yPr
local integer pPr
local string ePr
local integer qPr
local integer aPr
local unit nPr
local unit dPr
local trigger fPr
local unit RPr
local unit TPr
local player YPr
local unit GPr
local player gPr
local unit hPr
local player FPr
local unit kPr
local player jPr
local unit xPr
local trigger vPr
local player mPr
local integer QPr
local player WPr
local playerstate EPr
local integer ZPr
local player UPr
local playerstate IPr
local unit PPr
local player APr
local unit DPr
local texttag HPr
local unit JPr
local integer KPr
local unit LPr
local integer XPr
local group CPr
local group VPr
local unit BPr
local integer NPr
local string MPr
local unit wAr
local integer uAr
local integer rAr
local string sAr
local integer tAr
local integer iAr
local unit SAr
local unit cAr
local integer oAr
local string OAr
local integer lAr
local integer bAr
local group yAr
local group pAr
local boolexpr eAr
local unit qAr
local unit aAr
local trigger nAr
local player dAr
local integer fAr
local player RAr
local playerstate TAr
local integer YAr
local player GAr
local playerstate gAr
local unit hAr
local player FAr
local unit kAr
local texttag jAr
local unit xAr
local integer vAr
local integer mAr
local string QAr
local unit WAr
local integer EAr
local integer ZAr
local string UAr
local integer IAr
local integer PAr
local integer AAr
local string DAr
local integer HAr
local integer JAr
local unit KAr
local unit LAr
local trigger XAr
local unit CAr
local unit VAr
local trigger BAr
local player NAr
local integer MAr
local player wDr
local playerstate uDr
local integer rDr
local player sDr
local playerstate tDr
local unit iDr
local player SDr
local unit cDr
local texttag oDr
local unit ODr
local integer lDr
local integer bDr
local string yDr
local unit pDr
local integer eDr
local integer qDr
local string aDr
local integer nDr
local integer dDr
local integer fDr
local string RDr
local integer TDr
local integer YDr
local unit GDr
local unit gDr
local trigger hDr
local unit FDr
local unit kDr
local trigger jDr
local player xDr
local integer vDr
local player mDr
local playerstate QDr
local integer WDr
local player EDr
local playerstate ZDr
local unit UDr
local player IDr
local unit PDr
local texttag ADr
local unit DDr
local integer HDr
local integer JDr
local string KDr
local unit LDr
local integer XDr
local integer CDr
local string VDr
local integer BDr
local integer NDr
local integer MDr
local string wHr
local integer uHr
local integer rHr
local unit sHr
local unit tHr
local trigger iHr
local unit SHr
local unit cHr
local trigger oHr
local player OHr
local integer lHr
local player bHr
local playerstate yHr
local integer pHr
local player eHr
local playerstate qHr
local unit aHr
local player nHr
local unit dHr
local texttag fHr
local unit RHr
local integer THr
local unit YHr
local integer GHr
local unit gHr
local unit hHr
local real FHr
local unit kHr
local unitstate jHr
local real xHr
local unit vHr
local unitstate mHr
local group QHr
local group WHr
local unit EHr
local unit ZHr
local integer UHr
local group IHr
local boolexpr PHr
local unit AHr
local player DHr
local playerstate HHr
local real JHr
local player KHr
local playerstate LHr
local real XHr
local player CHr
local playerstate VHr
local real BHr
local player NHr
local playerstate MHr
local player wJr
local playerstate uJr
local real rJr
local player sJr
local playerstate tJr
local real iJr
local player SJr
local playerstate cJr
local real oJr
local player OJr
local playerstate lJr
local player bJr
local playerstate yJr
local real pJr
local player eJr
local playerstate qJr
local real aJr
local player nJr
local playerstate dJr
local real fJr
local player RJr
local playerstate TJr
local boolean YJr
local boolean GJr
local player gJr
local playerstate hJr
local real FJr
local boolean kJr
local boolean jJr
local player xJr
local playerstate vJr
local real mJr
local boolean QJr
local boolean WJr
local boolean EJr
local boolean ZJr
local player UJr
local playerstate IJr
local real PJr
local player AJr
local playerstate DJr
local boolean HJr
local boolean JJr
local boolean KJr
local player LJr
local playerstate XJr
local real CJr
local player VJr
local playerstate BJr
local real NJr
local boolean MJr
local boolean wKr
local boolean uKr
local player rKr
local playerstate sKr
local real tKr
local boolean iKr
local boolean SKr
local boolean cKr
local player oKr
local playerstate OKr
local string lKr
local player bKr
local player yKr
local playerstate pKr
local real eKr
local player qKr
local playerstate aKr
local real nKr
local player dKr
local playerstate fKr
local real RKr
local player TKr
local playerstate YKr
local unit GKr
local unitstate gKr
set aW[qW]=thr
set qW=qW+1
set ihr=GetSpellAbilityId()
if GetSpellAbilityUnit()==yO then
if ihr==$41313039 then
set Dhr=yO
set Ahr=GetOwningPlayer(Dhr)
if mr[GetPlayerId(Ahr)]>0 then
set Hhr=iO
call DisableTrigger(Hhr)
set Nhr=yO
set Jhr=GetOwningPlayer(Nhr)
set Khr=100
set Lhr=Jhr
set Xhr=PLAYER_STATE_RESOURCE_GOLD
set Chr=Khr
set DHr=Lhr
set HHr=Xhr
set Vhr=Lhr
set Bhr=Xhr
call SetPlayerState(DHr,HHr,GetPlayerState(Vhr,Bhr)+Chr)
call UuS(yO,100)
set wFr=yO
set Mhr=GetOwningPlayer(wFr)
set Shr=GetPlayerId(Mhr)
set hr[Shr]=hr[Shr]+100
set Fr[Shr]=Fr[Shr]+100
set Cr[Shr]=Cr[Shr]+100
set uFr=yO
set rFr=$41313039
call UnitRemoveAbility(uFr,rFr)
call eWp(OO,$41313039,"when calling remove in AltarGold, line 1238")
call x7s(OO,$4131305A,"when calling add in AltarGold, line 1239")
set sFr=OO
set tFr="when calling shuffle in AltarGold, line 1240"
set aW[qW]=tFr
set qW=qW+1
if ok[sFr]==0 then
if sFr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sFr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set iFr=yO
set cFr=OO
set oFr="when calling getFirst in AltarGold, line 1241"
set aW[qW]=oFr
set qW=qW+1
if ok[cFr]==0 then
if cFr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set lFr=cFr
set OFr=Hv[Kv[Vv[lFr]]]
set qW=qW-1
set SFr=OFr
call UnitAddAbility(iFr,SFr)
set bFr=OO
set yFr="when calling getFirst in AltarGold, line 1242"
set aW[qW]=yFr
set qW=qW+1
if ok[bFr]==0 then
if bFr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set eFr=bFr
set pFr=Hv[Kv[Vv[eFr]]]
set qW=qW-1
set YO=pFr
set qFr=yr
call DestroyTextTag(qFr)
set pr=300
set aFr=yO
set JHr=GetUnitX(aFr)
set nFr=yO
set yr=jVl(JHr,GetUnitY(nFr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,DN)
set dFr=iO
call EnableTrigger(dFr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set fFr=yO
call DisplayTextToPlayer(GetOwningPlayer(fFr),0.,0.,"You have completed the quest!")
else
set RFr=yO
call DisplayTextToPlayer(GetOwningPlayer(RFr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131305A then
set YFr=yO
set TFr=GetOwningPlayer(YFr)
if mr[GetPlayerId(TFr)]>=5 then
set GFr=iO
call DisableTrigger(GFr)
set mFr=yO
set gFr=GetOwningPlayer(mFr)
set hFr=200
set FFr=gFr
set kFr=PLAYER_STATE_RESOURCE_GOLD
set jFr=hFr
set KHr=FFr
set LHr=kFr
set xFr=FFr
set vFr=kFr
call SetPlayerState(KHr,LHr,GetPlayerState(xFr,vFr)+jFr)
call UuS(yO,200)
set WFr=yO
set QFr=GetOwningPlayer(WFr)
set chr=GetPlayerId(QFr)
set hr[chr]=hr[chr]+200
set Fr[chr]=Fr[chr]+200
set Cr[chr]=Cr[chr]+200
set EFr=yr
call DestroyTextTag(EFr)
set ZFr=yO
set UFr=$4131305A
call UnitRemoveAbility(ZFr,UFr)
call eWp(OO,$4131305A,"when calling remove in AltarGold, line 1263")
call x7s(OO,$41313146,"when calling add in AltarGold, line 1264")
set IFr=OO
set PFr="when calling shuffle in AltarGold, line 1265"
set aW[qW]=PFr
set qW=qW+1
if ok[IFr]==0 then
if IFr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(IFr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set AFr=yO
set HFr=OO
set JFr="when calling getFirst in AltarGold, line 1266"
set aW[qW]=JFr
set qW=qW+1
if ok[HFr]==0 then
if HFr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set LFr=HFr
set KFr=Hv[Kv[Vv[LFr]]]
set qW=qW-1
set DFr=KFr
call UnitAddAbility(AFr,DFr)
set XFr=OO
set CFr="when calling getFirst in AltarGold, line 1267"
set aW[qW]=CFr
set qW=qW+1
if ok[XFr]==0 then
if XFr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set BFr=XFr
set VFr=Hv[Kv[Vv[BFr]]]
set qW=qW-1
set YO=VFr
set pr=300
set NFr=yO
set XHr=GetUnitX(NFr)
set MFr=yO
set yr=jVl(XHr,GetUnitY(MFr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,HN)
set wkr=iO
call EnableTrigger(wkr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set ukr=yO
call DisplayTextToPlayer(GetOwningPlayer(ukr),0.,0.,"You have completed the quest!")
else
set rkr=yO
call DisplayTextToPlayer(GetOwningPlayer(rkr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313146 then
set tkr=yO
set skr=GetOwningPlayer(tkr)
if Wr[GetPlayerId(skr)]>0 then
set ikr=iO
call DisableTrigger(ikr)
set pkr=yO
set Skr=GetOwningPlayer(pkr)
set ckr=300
set okr=Skr
set Okr=PLAYER_STATE_RESOURCE_GOLD
set lkr=ckr
set CHr=okr
set VHr=Okr
set bkr=okr
set ykr=Okr
call SetPlayerState(CHr,VHr,GetPlayerState(bkr,ykr)+lkr)
call UuS(yO,300)
set qkr=yO
set ekr=GetOwningPlayer(qkr)
set ohr=GetPlayerId(ekr)
set hr[ohr]=hr[ohr]+300
set Fr[ohr]=Fr[ohr]+300
set Cr[ohr]=Cr[ohr]+300
set akr=yr
call DestroyTextTag(akr)
set nkr=yO
set dkr=$41313146
call UnitRemoveAbility(nkr,dkr)
call eWp(OO,$41313146,"when calling remove in AltarGold, line 1287")
call x7s(OO,$4131314A,"when calling add in AltarGold, line 1288")
set fkr=OO
set Rkr="when calling shuffle in AltarGold, line 1289"
set aW[qW]=Rkr
set qW=qW+1
if ok[fkr]==0 then
if fkr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(fkr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Tkr=yO
set Gkr=OO
set gkr="when calling getFirst in AltarGold, line 1290"
set aW[qW]=gkr
set qW=qW+1
if ok[Gkr]==0 then
if Gkr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Fkr=Gkr
set hkr=Hv[Kv[Vv[Fkr]]]
set qW=qW-1
set Ykr=hkr
call UnitAddAbility(Tkr,Ykr)
set kkr=OO
set jkr="when calling getFirst in AltarGold, line 1291"
set aW[qW]=jkr
set qW=qW+1
if ok[kkr]==0 then
if kkr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set vkr=kkr
set xkr=Hv[Kv[Vv[vkr]]]
set qW=qW-1
set YO=xkr
set pr=300
set mkr=yO
set BHr=GetUnitX(mkr)
set Qkr=yO
set yr=jVl(BHr,GetUnitY(Qkr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,JN)
set Wkr=iO
call EnableTrigger(Wkr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set Ekr=yO
call DisplayTextToPlayer(GetOwningPlayer(Ekr),0.,0.,"You have completed the quest!")
else
set Zkr=yO
call DisplayTextToPlayer(GetOwningPlayer(Zkr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131314A then
set Ikr=yO
set Ukr=GetOwningPlayer(Ikr)
if Wr[GetPlayerId(Ukr)]>=10 then
set Pkr=iO
call DisableTrigger(Pkr)
set Ckr=yO
set Akr=GetOwningPlayer(Ckr)
set Dkr=400
set Hkr=Akr
set Jkr=PLAYER_STATE_RESOURCE_GOLD
set Kkr=Dkr
set NHr=Hkr
set MHr=Jkr
set Lkr=Hkr
set Xkr=Jkr
call SetPlayerState(NHr,MHr,GetPlayerState(Lkr,Xkr)+Kkr)
call UuS(yO,400)
set Bkr=yO
set Vkr=GetOwningPlayer(Bkr)
set Ohr=GetPlayerId(Vkr)
set hr[Ohr]=hr[Ohr]+400
set Fr[Ohr]=Fr[Ohr]+400
set Cr[Ohr]=Cr[Ohr]+400
set Nkr=yO
set Mkr=$4131314A
call UnitRemoveAbility(Nkr,Mkr)
set wjr=yO
set ujr=$41313449
call UnitRemoveAbility(wjr,ujr)
set nO=true
set rjr=yO
set sjr=$41313346
call UnitAddAbility(rjr,sjr)
set tjr=yr
call DestroyTextTag(tjr)
set yr=null
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set ijr=yO
call DisplayTextToPlayer(GetOwningPlayer(ijr),0.,0.,"You have completed the quest!")
else
set Sjr=yO
call DisplayTextToPlayer(GetOwningPlayer(Sjr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131314D then
set ljr=yO
set cjr=GetOwningPlayer(ljr)
set ojr=cjr
set Ojr=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(ojr,Ojr)>=2000 then
set bjr=iO
call DisableTrigger(bjr)
set fjr=yO
set yjr=GetOwningPlayer(fjr)
set pjr=100
set ejr=yjr
set qjr=PLAYER_STATE_RESOURCE_GOLD
set ajr=pjr
set wJr=ejr
set uJr=qjr
set njr=ejr
set djr=qjr
call SetPlayerState(wJr,uJr,GetPlayerState(njr,djr)+ajr)
set hjr=yO
set Rjr=GetOwningPlayer(hjr)
set xjr=yO
set Fjr=GetOwningPlayer(xjr)
set kjr=Fjr
set jjr=PLAYER_STATE_RESOURCE_GOLD
set Tjr=GetPlayerState(kjr,jjr)-2000
set Yjr=Rjr
set Gjr=PLAYER_STATE_RESOURCE_GOLD
set gjr=Tjr
call SetPlayerState(Yjr,Gjr,gjr)
call UuS(yO,100)
set mjr=yO
set vjr=GetOwningPlayer(mjr)
set lhr=GetPlayerId(vjr)
set hr[lhr]=hr[lhr]+100
set Fr[lhr]=Fr[lhr]+100
set Cr[lhr]=Cr[lhr]+100
set Qjr=yr
call DestroyTextTag(Qjr)
set Wjr=yO
set Ejr=$4131314D
call UnitRemoveAbility(Wjr,Ejr)
call eWp(OO,$4131314D,"when calling remove in AltarGold, line 1332")
call x7s(OO,$4131314F,"when calling add in AltarGold, line 1333")
set Zjr=OO
set Ujr="when calling shuffle in AltarGold, line 1334"
set aW[qW]=Ujr
set qW=qW+1
if ok[Zjr]==0 then
if Zjr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Zjr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Ijr=yO
set Ajr=OO
set Djr="when calling getFirst in AltarGold, line 1335"
set aW[qW]=Djr
set qW=qW+1
if ok[Ajr]==0 then
if Ajr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Jjr=Ajr
set Hjr=Hv[Kv[Vv[Jjr]]]
set qW=qW-1
set Pjr=Hjr
call UnitAddAbility(Ijr,Pjr)
set Kjr=OO
set Ljr="when calling getFirst in AltarGold, line 1336"
set aW[qW]=Ljr
set qW=qW+1
if ok[Kjr]==0 then
if Kjr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Cjr=Kjr
set Xjr=Hv[Kv[Vv[Cjr]]]
set qW=qW-1
set YO=Xjr
set pr=300
set Vjr=yO
set rJr=GetUnitX(Vjr)
set Bjr=yO
set yr=jVl(rJr,GetUnitY(Bjr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,KN)
set Njr=iO
call EnableTrigger(Njr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set Mjr=yO
call DisplayTextToPlayer(GetOwningPlayer(Mjr),0.,0.,"You have completed the quest!")
else
set wxr=yO
call DisplayTextToPlayer(GetOwningPlayer(wxr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131314F then
set txr=yO
set uxr=GetOwningPlayer(txr)
set rxr=uxr
set sxr=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(rxr,sxr)>=4000 then
set ixr=iO
call DisableTrigger(ixr)
set pxr=yO
set Sxr=GetOwningPlayer(pxr)
set cxr=200
set oxr=Sxr
set Oxr=PLAYER_STATE_RESOURCE_GOLD
set lxr=cxr
set sJr=oxr
set tJr=Oxr
set bxr=oxr
set yxr=Oxr
call SetPlayerState(sJr,tJr,GetPlayerState(bxr,yxr)+lxr)
set fxr=yO
set exr=GetOwningPlayer(fxr)
set Gxr=yO
set Rxr=GetOwningPlayer(Gxr)
set Txr=Rxr
set Yxr=PLAYER_STATE_RESOURCE_GOLD
set qxr=GetPlayerState(Txr,Yxr)-4000
set axr=exr
set nxr=PLAYER_STATE_RESOURCE_GOLD
set dxr=qxr
call SetPlayerState(axr,nxr,dxr)
call UuS(yO,200)
set hxr=yO
set gxr=GetOwningPlayer(hxr)
set bhr=GetPlayerId(gxr)
set hr[bhr]=hr[bhr]+200
set Fr[bhr]=Fr[bhr]+200
set Cr[bhr]=Cr[bhr]+200
set Fxr=yr
call DestroyTextTag(Fxr)
set kxr=yO
set jxr=$4131314F
call UnitRemoveAbility(kxr,jxr)
call eWp(OO,$4131314F,"when calling remove in AltarGold, line 1357")
call x7s(OO,$41313150,"when calling add in AltarGold, line 1358")
set xxr=OO
set vxr="when calling shuffle in AltarGold, line 1359"
set aW[qW]=vxr
set qW=qW+1
if ok[xxr]==0 then
if xxr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(xxr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set mxr=yO
set Wxr=OO
set Exr="when calling getFirst in AltarGold, line 1360"
set aW[qW]=Exr
set qW=qW+1
if ok[Wxr]==0 then
if Wxr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Uxr=Wxr
set Zxr=Hv[Kv[Vv[Uxr]]]
set qW=qW-1
set Qxr=Zxr
call UnitAddAbility(mxr,Qxr)
set Ixr=OO
set Pxr="when calling getFirst in AltarGold, line 1361"
set aW[qW]=Pxr
set qW=qW+1
if ok[Ixr]==0 then
if Ixr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Dxr=Ixr
set Axr=Hv[Kv[Vv[Dxr]]]
set qW=qW-1
set YO=Axr
set pr=300
set Hxr=yO
set iJr=GetUnitX(Hxr)
set Jxr=yO
set yr=jVl(iJr,GetUnitY(Jxr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,LN)
set Kxr=iO
call EnableTrigger(Kxr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set Lxr=yO
call DisplayTextToPlayer(GetOwningPlayer(Lxr),0.,0.,"You have completed the quest!")
else
set Xxr=yO
call DisplayTextToPlayer(GetOwningPlayer(Xxr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313150 then
set Nxr=yO
set Cxr=GetOwningPlayer(Nxr)
set Vxr=Cxr
set Bxr=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(Vxr,Bxr)>=8000 then
set Mxr=iO
call DisableTrigger(Mxr)
set cvr=yO
set wvr=GetOwningPlayer(cvr)
set uvr=300
set rvr=wvr
set svr=PLAYER_STATE_RESOURCE_GOLD
set tvr=uvr
set SJr=rvr
set cJr=svr
set ivr=rvr
set Svr=svr
call SetPlayerState(SJr,cJr,GetPlayerState(ivr,Svr)+tvr)
set pvr=yO
set ovr=GetOwningPlayer(pvr)
set nvr=yO
set evr=GetOwningPlayer(nvr)
set qvr=evr
set avr=PLAYER_STATE_RESOURCE_GOLD
set Ovr=GetPlayerState(qvr,avr)-8000
set lvr=ovr
set bvr=PLAYER_STATE_RESOURCE_GOLD
set yvr=Ovr
call SetPlayerState(lvr,bvr,yvr)
call UuS(yO,300)
set fvr=yO
set dvr=GetOwningPlayer(fvr)
set yhr=GetPlayerId(dvr)
set hr[yhr]=hr[yhr]+300
set Fr[yhr]=Fr[yhr]+300
set Cr[yhr]=Cr[yhr]+300
set Rvr=yr
call DestroyTextTag(Rvr)
set Tvr=yO
set Yvr=$41313150
call UnitRemoveAbility(Tvr,Yvr)
call eWp(OO,$41313150,"when calling remove in AltarGold, line 1382")
call x7s(OO,$41313151,"when calling add in AltarGold, line 1383")
set Gvr=OO
set gvr="when calling shuffle in AltarGold, line 1384"
set aW[qW]=gvr
set qW=qW+1
if ok[Gvr]==0 then
if Gvr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Gvr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set hvr=yO
set kvr=OO
set jvr="when calling getFirst in AltarGold, line 1385"
set aW[qW]=jvr
set qW=qW+1
if ok[kvr]==0 then
if kvr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set vvr=kvr
set xvr=Hv[Kv[Vv[vvr]]]
set qW=qW-1
set Fvr=xvr
call UnitAddAbility(hvr,Fvr)
set mvr=OO
set Qvr="when calling getFirst in AltarGold, line 1386"
set aW[qW]=Qvr
set qW=qW+1
if ok[mvr]==0 then
if mvr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Evr=mvr
set Wvr=Hv[Kv[Vv[Evr]]]
set qW=qW-1
set YO=Wvr
set pr=300
set Zvr=yO
set oJr=GetUnitX(Zvr)
set Uvr=yO
set yr=jVl(oJr,GetUnitY(Uvr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,XN)
set Ivr=iO
call EnableTrigger(Ivr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set Pvr=yO
call DisplayTextToPlayer(GetOwningPlayer(Pvr),0.,0.,"You have completed the quest!")
else
set Avr=yO
call DisplayTextToPlayer(GetOwningPlayer(Avr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313151 then
set Kvr=yO
set Dvr=GetOwningPlayer(Kvr)
set Hvr=Dvr
set Jvr=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(Hvr,Jvr)>=16000 then
set Lvr=iO
call DisableTrigger(Lvr)
set umr=yO
set Xvr=GetOwningPlayer(umr)
set Cvr=50400
set Vvr=Xvr
set Bvr=PLAYER_STATE_RESOURCE_GOLD
set Nvr=Cvr
set OJr=Vvr
set lJr=Bvr
set Mvr=Vvr
set wmr=Bvr
call SetPlayerState(OJr,lJr,GetPlayerState(Mvr,wmr)+Nvr)
set cmr=yO
set rmr=GetOwningPlayer(cmr)
set bmr=yO
set omr=GetOwningPlayer(bmr)
set Omr=omr
set lmr=PLAYER_STATE_RESOURCE_GOLD
set smr=GetPlayerState(Omr,lmr)-16000
set tmr=rmr
set imr=PLAYER_STATE_RESOURCE_GOLD
set Smr=smr
call SetPlayerState(tmr,imr,Smr)
call UuS(yO,50400)
set pmr=yO
set ymr=GetOwningPlayer(pmr)
set phr=GetPlayerId(ymr)
set hr[phr]=hr[phr]+50400
set Fr[phr]=Fr[phr]+50400
set Cr[phr]=Cr[phr]+50400
set emr=yr
call DestroyTextTag(emr)
set qmr=yO
set amr=$41313151
call UnitRemoveAbility(qmr,amr)
set nmr=yO
set dmr=$41313449
call UnitRemoveAbility(nmr,dmr)
set nO=true
set yr=null
set fmr=yO
call SetPlayerTechResearched(GetOwningPlayer(fmr),$52303658,1)
set Rmr=yO
call SetPlayerTechResearched(GetOwningPlayer(Rmr),$5230364B,1)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set Tmr=yO
call DisplayTextToPlayer(GetOwningPlayer(Tmr),0.,0.,"You have completed the quest!")
else
set Ymr=yO
call DisplayTextToPlayer(GetOwningPlayer(Ymr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313152 then
set gmr=yO
set Gmr=GetOwningPlayer(gmr)
if jr[GetPlayerId(Gmr)]>=500 then
set hmr=iO
call DisableTrigger(hmr)
set Wmr=yO
set Fmr=GetOwningPlayer(Wmr)
set kmr=100
set jmr=Fmr
set xmr=PLAYER_STATE_RESOURCE_GOLD
set vmr=kmr
set bJr=jmr
set yJr=xmr
set mmr=jmr
set Qmr=xmr
call SetPlayerState(bJr,yJr,GetPlayerState(mmr,Qmr)+vmr)
call UuS(yO,100)
set Zmr=yO
set Emr=GetOwningPlayer(Zmr)
set ehr=GetPlayerId(Emr)
set hr[ehr]=hr[ehr]+100
set Fr[ehr]=Fr[ehr]+100
set Cr[ehr]=Cr[ehr]+100
set Umr=yr
call DestroyTextTag(Umr)
set Imr=yO
set Pmr=$41313152
call UnitRemoveAbility(Imr,Pmr)
call eWp(OO,$41313152,"when calling remove in AltarGold, line 1428")
call x7s(OO,$41313334,"when calling add in AltarGold, line 1429")
set Amr=OO
set Dmr="when calling shuffle in AltarGold, line 1430"
set aW[qW]=Dmr
set qW=qW+1
if ok[Amr]==0 then
if Amr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Amr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Hmr=yO
set Kmr=OO
set Lmr="when calling getFirst in AltarGold, line 1431"
set aW[qW]=Lmr
set qW=qW+1
if ok[Kmr]==0 then
if Kmr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Cmr=Kmr
set Xmr=Hv[Kv[Vv[Cmr]]]
set qW=qW-1
set Jmr=Xmr
call UnitAddAbility(Hmr,Jmr)
set Vmr=OO
set Bmr="when calling getFirst in AltarGold, line 1432"
set aW[qW]=Bmr
set qW=qW+1
if ok[Vmr]==0 then
if Vmr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Mmr=Vmr
set Nmr=Hv[Kv[Vv[Mmr]]]
set qW=qW-1
set YO=Nmr
set pr=300
set wQr=yO
set pJr=GetUnitX(wQr)
set uQr=yO
set yr=jVl(pJr,GetUnitY(uQr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,CN)
set rQr=iO
call EnableTrigger(rQr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set sQr=yO
call DisplayTextToPlayer(GetOwningPlayer(sQr),0.,0.,"You have completed the quest!")
else
set tQr=yO
call DisplayTextToPlayer(GetOwningPlayer(tQr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313334 then
set SQr=yO
set iQr=GetOwningPlayer(SQr)
if jr[GetPlayerId(iQr)]>=1000 then
set cQr=iO
call DisableTrigger(cQr)
set qQr=yO
set oQr=GetOwningPlayer(qQr)
set OQr=200
set lQr=oQr
set bQr=PLAYER_STATE_RESOURCE_GOLD
set yQr=OQr
set eJr=lQr
set qJr=bQr
set pQr=lQr
set eQr=bQr
call SetPlayerState(eJr,qJr,GetPlayerState(pQr,eQr)+yQr)
call UuS(yO,200)
set nQr=yO
set aQr=GetOwningPlayer(nQr)
set qhr=GetPlayerId(aQr)
set hr[qhr]=hr[qhr]+200
set Fr[qhr]=Fr[qhr]+200
set Cr[qhr]=Cr[qhr]+200
set dQr=yr
call DestroyTextTag(dQr)
set fQr=yO
set RQr=$41313334
call UnitRemoveAbility(fQr,RQr)
call eWp(OO,$41313334,"when calling remove in AltarGold, line 1452")
call x7s(OO,$41313335,"when calling add in AltarGold, line 1453")
set TQr=OO
set YQr="when calling shuffle in AltarGold, line 1454"
set aW[qW]=YQr
set qW=qW+1
if ok[TQr]==0 then
if TQr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(TQr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set GQr=yO
set hQr=OO
set FQr="when calling getFirst in AltarGold, line 1455"
set aW[qW]=FQr
set qW=qW+1
if ok[hQr]==0 then
if hQr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set jQr=hQr
set kQr=Hv[Kv[Vv[jQr]]]
set qW=qW-1
set gQr=kQr
call UnitAddAbility(GQr,gQr)
set xQr=OO
set vQr="when calling getFirst in AltarGold, line 1456"
set aW[qW]=vQr
set qW=qW+1
if ok[xQr]==0 then
if xQr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set QQr=xQr
set mQr=Hv[Kv[Vv[QQr]]]
set qW=qW-1
set YO=mQr
set pr=300
set WQr=yO
set aJr=GetUnitX(WQr)
set EQr=yO
set yr=jVl(aJr,GetUnitY(EQr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,VN)
set ZQr=iO
call EnableTrigger(ZQr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set UQr=yO
call DisplayTextToPlayer(GetOwningPlayer(UQr),0.,0.,"You have completed the quest!")
else
set IQr=yO
call DisplayTextToPlayer(GetOwningPlayer(IQr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313335 then
set AQr=yO
set PQr=GetOwningPlayer(AQr)
if jr[GetPlayerId(PQr)]>=2500 then
set DQr=iO
call DisableTrigger(DQr)
set BQr=yO
set HQr=GetOwningPlayer(BQr)
set JQr=300
set KQr=HQr
set LQr=PLAYER_STATE_RESOURCE_GOLD
set XQr=JQr
set nJr=KQr
set dJr=LQr
set CQr=KQr
set VQr=LQr
call SetPlayerState(nJr,dJr,GetPlayerState(CQr,VQr)+XQr)
call UuS(yO,300)
set MQr=yO
set NQr=GetOwningPlayer(MQr)
set ahr=GetPlayerId(NQr)
set hr[ahr]=hr[ahr]+300
set Fr[ahr]=Fr[ahr]+300
set Cr[ahr]=Cr[ahr]+300
set wWr=yr
call DestroyTextTag(wWr)
set uWr=yO
set rWr=$41313335
call UnitRemoveAbility(uWr,rWr)
call eWp(OO,$41313335,"when calling remove in AltarGold, line 1476")
call x7s(OO,$41313336,"when calling add in AltarGold, line 1477")
set sWr=OO
set tWr="when calling shuffle in AltarGold, line 1478"
set aW[qW]=tWr
set qW=qW+1
if ok[sWr]==0 then
if sWr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sWr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set iWr=yO
set cWr=OO
set oWr="when calling getFirst in AltarGold, line 1479"
set aW[qW]=oWr
set qW=qW+1
if ok[cWr]==0 then
if cWr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set lWr=cWr
set OWr=Hv[Kv[Vv[lWr]]]
set qW=qW-1
set SWr=OWr
call UnitAddAbility(iWr,SWr)
set bWr=OO
set yWr="when calling getFirst in AltarGold, line 1480"
set aW[qW]=yWr
set qW=qW+1
if ok[bWr]==0 then
if bWr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set eWr=bWr
set pWr=Hv[Kv[Vv[eWr]]]
set qW=qW-1
set YO=pWr
set pr=300
set qWr=yO
set fJr=GetUnitX(qWr)
set aWr=yO
set yr=jVl(fJr,GetUnitY(aWr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,BN)
set nWr=iO
call EnableTrigger(nWr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set dWr=yO
call DisplayTextToPlayer(GetOwningPlayer(dWr),0.,0.,"You have completed the quest!")
else
set fWr=yO
call DisplayTextToPlayer(GetOwningPlayer(fWr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313336 then
set TWr=yO
set RWr=GetOwningPlayer(TWr)
if jr[GetPlayerId(RWr)]>=5000 then
set YWr=iO
call DisableTrigger(YWr)
set vWr=yO
set GWr=GetOwningPlayer(vWr)
set gWr=400
set hWr=GWr
set FWr=PLAYER_STATE_RESOURCE_GOLD
set kWr=gWr
set RJr=hWr
set TJr=FWr
set jWr=hWr
set xWr=FWr
call SetPlayerState(RJr,TJr,GetPlayerState(jWr,xWr)+kWr)
call UuS(yO,400)
set QWr=yO
set mWr=GetOwningPlayer(QWr)
set nhr=GetPlayerId(mWr)
set hr[nhr]=hr[nhr]+400
set Fr[nhr]=Fr[nhr]+400
set Cr[nhr]=Cr[nhr]+400
set WWr=yr
call DestroyTextTag(WWr)
set yr=null
set EWr=yO
set ZWr=$41313336
call UnitRemoveAbility(EWr,ZWr)
set UWr=yO
set IWr=$41313449
call UnitRemoveAbility(UWr,IWr)
set nO=true
set PWr=yO
call SetPlayerTechResearched(GetOwningPlayer(PWr),$5230364C,3)
set AWr=yO
call SetPlayerTechResearched(GetOwningPlayer(AWr),$5230364D,3)
set DWr=yO
call SetPlayerTechResearched(GetOwningPlayer(DWr),$5230364E,3)
set HWr=yO
call SetPlayerTechResearched(GetOwningPlayer(HWr),$52303659,1)
call SetPlayerTechResearched(Player(nhr+4),$5230364C,3)
call SetPlayerTechResearched(Player(nhr+4),$5230364D,3)
call SetPlayerTechResearched(Player(nhr+4),$5230364E,3)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set JWr=yO
call DisplayTextToPlayer(GetOwningPlayer(JWr),0.,0.,"You have completed the quest!")
else
set KWr=yO
call DisplayTextToPlayer(GetOwningPlayer(KWr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313337 then
set LWr=yO
if GetPlayerTechCount(GetOwningPlayer(LWr),$52303550,true)>=3 then
set XWr=yO
set YJr=GetPlayerTechCount(GetOwningPlayer(XWr),$52303552,true)>=3
else
set YJr=false
endif
if YJr then
set CWr=yO
set GJr=GetPlayerTechCount(GetOwningPlayer(CWr),$52303553,true)>=3
else
set GJr=false
endif
if GJr then
set VWr=iO
call DisableTrigger(VWr)
set tEr=yO
set BWr=GetOwningPlayer(tEr)
set NWr=100
set MWr=BWr
set wEr=PLAYER_STATE_RESOURCE_GOLD
set uEr=NWr
set gJr=MWr
set hJr=wEr
set rEr=MWr
set sEr=wEr
call SetPlayerState(gJr,hJr,GetPlayerState(rEr,sEr)+uEr)
call UuS(yO,100)
set SEr=yO
set iEr=GetOwningPlayer(SEr)
set dhr=GetPlayerId(iEr)
set hr[dhr]=hr[dhr]+100
set Fr[dhr]=Fr[dhr]+100
set Cr[dhr]=Cr[dhr]+100
set cEr=yr
call DestroyTextTag(cEr)
set oEr=yO
set OEr=$41313337
call UnitRemoveAbility(oEr,OEr)
call eWp(OO,$41313337,"when calling remove in AltarGold, line 1526")
call x7s(OO,$41313338,"when calling add in AltarGold, line 1527")
set lEr=OO
set bEr="when calling shuffle in AltarGold, line 1528"
set aW[qW]=bEr
set qW=qW+1
if ok[lEr]==0 then
if lEr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(lEr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set yEr=yO
set eEr=OO
set qEr="when calling getFirst in AltarGold, line 1529"
set aW[qW]=qEr
set qW=qW+1
if ok[eEr]==0 then
if eEr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set nEr=eEr
set aEr=Hv[Kv[Vv[nEr]]]
set qW=qW-1
set pEr=aEr
call UnitAddAbility(yEr,pEr)
set dEr=OO
set fEr="when calling getFirst in AltarGold, line 1530"
set aW[qW]=fEr
set qW=qW+1
if ok[dEr]==0 then
if dEr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set TEr=dEr
set REr=Hv[Kv[Vv[TEr]]]
set qW=qW-1
set YO=REr
set pr=300
set YEr=yO
set FJr=GetUnitX(YEr)
set GEr=yO
set yr=jVl(FJr,GetUnitY(GEr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,NN)
set gEr=iO
call EnableTrigger(gEr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set hEr=yO
call DisplayTextToPlayer(GetOwningPlayer(hEr),0.,0.,"You have completed the quest!")
else
set FEr=yO
call DisplayTextToPlayer(GetOwningPlayer(FEr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313338 then
set kEr=yO
if GetPlayerTechCount(GetOwningPlayer(kEr),$52303550,true)>=6 then
set jEr=yO
set kJr=GetPlayerTechCount(GetOwningPlayer(jEr),$52303552,true)>=6
else
set kJr=false
endif
if kJr then
set xEr=yO
set jJr=GetPlayerTechCount(GetOwningPlayer(xEr),$52303553,true)>=6
else
set jJr=false
endif
if jJr then
set vEr=iO
call DisableTrigger(vEr)
set PEr=yO
set mEr=GetOwningPlayer(PEr)
set QEr=200
set WEr=mEr
set EEr=PLAYER_STATE_RESOURCE_GOLD
set ZEr=QEr
set xJr=WEr
set vJr=EEr
set UEr=WEr
set IEr=EEr
call SetPlayerState(xJr,vJr,GetPlayerState(UEr,IEr)+ZEr)
call UuS(yO,200)
set DEr=yO
set AEr=GetOwningPlayer(DEr)
set fhr=GetPlayerId(AEr)
set hr[fhr]=hr[fhr]+200
set Fr[fhr]=Fr[fhr]+200
set Cr[fhr]=Cr[fhr]+200
set HEr=yr
call DestroyTextTag(HEr)
set JEr=yO
set KEr=$41313338
call UnitRemoveAbility(JEr,KEr)
call eWp(OO,$41313338,"when calling remove in AltarGold, line 1550")
call x7s(OO,$41313339,"when calling add in AltarGold, line 1551")
set LEr=OO
set XEr="when calling shuffle in AltarGold, line 1552"
set aW[qW]=XEr
set qW=qW+1
if ok[LEr]==0 then
if LEr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(LEr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set CEr=yO
set BEr=OO
set NEr="when calling getFirst in AltarGold, line 1553"
set aW[qW]=NEr
set qW=qW+1
if ok[BEr]==0 then
if BEr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set wZr=BEr
set MEr=Hv[Kv[Vv[wZr]]]
set qW=qW-1
set VEr=MEr
call UnitAddAbility(CEr,VEr)
set uZr=OO
set rZr="when calling getFirst in AltarGold, line 1554"
set aW[qW]=rZr
set qW=qW+1
if ok[uZr]==0 then
if uZr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set tZr=uZr
set sZr=Hv[Kv[Vv[tZr]]]
set qW=qW-1
set YO=sZr
set pr=300
set iZr=yO
set mJr=GetUnitX(iZr)
set SZr=yO
set yr=jVl(mJr,GetUnitY(SZr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,MN)
set cZr=iO
call EnableTrigger(cZr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set oZr=yO
call DisplayTextToPlayer(GetOwningPlayer(oZr),0.,0.,"You have completed the quest!")
else
set OZr=yO
call DisplayTextToPlayer(GetOwningPlayer(OZr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313339 then
set lZr=yO
if GetPlayerTechCount(GetOwningPlayer(lZr),$52303550,true)==9 then
set bZr=yO
set QJr=GetPlayerTechCount(GetOwningPlayer(bZr),$52303552,true)==12
else
set QJr=false
endif
if QJr then
set yZr=yO
set WJr=GetPlayerTechCount(GetOwningPlayer(yZr),$52303553,true)==9
else
set WJr=false
endif
if WJr then
set pZr=yO
set EJr=GetPlayerTechCount(GetOwningPlayer(pZr),$52303556,true)==3
else
set EJr=false
endif
if EJr then
set eZr=yO
set ZJr=GetPlayerTechCount(GetOwningPlayer(eZr),$52303555,true)==6
else
set ZJr=false
endif
if ZJr then
set qZr=iO
call DisableTrigger(qZr)
set GZr=yO
set aZr=GetOwningPlayer(GZr)
set nZr=300
set dZr=aZr
set fZr=PLAYER_STATE_RESOURCE_GOLD
set RZr=nZr
set UJr=dZr
set IJr=fZr
set TZr=dZr
set YZr=fZr
call SetPlayerState(UJr,IJr,GetPlayerState(TZr,YZr)+RZr)
call UuS(yO,300)
set hZr=yO
set gZr=GetOwningPlayer(hZr)
set Rhr=GetPlayerId(gZr)
set hr[Rhr]=hr[Rhr]+300
set Fr[Rhr]=Fr[Rhr]+300
set Cr[Rhr]=Cr[Rhr]+300
set FZr=yr
call DestroyTextTag(FZr)
set kZr=yO
set jZr=$41313339
call UnitRemoveAbility(kZr,jZr)
call eWp(OO,$41313339,"when calling remove in AltarGold, line 1574")
call x7s(OO,$41313341,"when calling add in AltarGold, line 1575")
set xZr=OO
set vZr="when calling shuffle in AltarGold, line 1576"
set aW[qW]=vZr
set qW=qW+1
if ok[xZr]==0 then
if xZr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(xZr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set mZr=yO
set WZr=OO
set EZr="when calling getFirst in AltarGold, line 1577"
set aW[qW]=EZr
set qW=qW+1
if ok[WZr]==0 then
if WZr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set UZr=WZr
set ZZr=Hv[Kv[Vv[UZr]]]
set qW=qW-1
set QZr=ZZr
call UnitAddAbility(mZr,QZr)
set IZr=OO
set PZr="when calling getFirst in AltarGold, line 1578"
set aW[qW]=PZr
set qW=qW+1
if ok[IZr]==0 then
if IZr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set DZr=IZr
set AZr=Hv[Kv[Vv[DZr]]]
set qW=qW-1
set YO=AZr
set pr=300
set HZr=yO
set PJr=GetUnitX(HZr)
set JZr=yO
set yr=jVl(PJr,GetUnitY(JZr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,wM)
set KZr=iO
call EnableTrigger(KZr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set LZr=yO
call DisplayTextToPlayer(GetOwningPlayer(LZr),0.,0.,"You have completed the quest!")
else
set XZr=yO
call DisplayTextToPlayer(GetOwningPlayer(XZr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313341 then
set VZr=yO
set CZr=GetOwningPlayer(VZr)
if Pr[GetPlayerId(CZr)]>=67 then
set BZr=iO
call DisableTrigger(BZr)
set iUr=yO
set NZr=GetOwningPlayer(iUr)
set MZr=400
set wUr=NZr
set uUr=PLAYER_STATE_RESOURCE_GOLD
set rUr=MZr
set AJr=wUr
set DJr=uUr
set sUr=wUr
set tUr=uUr
call SetPlayerState(AJr,DJr,GetPlayerState(sUr,tUr)+rUr)
call UuS(yO,400)
set cUr=yO
set SUr=GetOwningPlayer(cUr)
set Thr=GetPlayerId(SUr)
set hr[Thr]=hr[Thr]+400
set Fr[Thr]=Fr[Thr]+400
set Cr[Thr]=Cr[Thr]+400
set oUr=yr
call DestroyTextTag(oUr)
set OUr=yO
set lUr=$41313341
call UnitRemoveAbility(OUr,lUr)
set bUr=yO
set yUr=$41313449
call UnitRemoveAbility(bUr,yUr)
set nO=true
set yr=null
call TimerStart(oO,60.,false,uM)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set pUr=yO
call DisplayTextToPlayer(GetOwningPlayer(pUr),0.,0.,"You have completed the quest!")
else
set eUr=yO
call DisplayTextToPlayer(GetOwningPlayer(eUr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313342 then
set aUr=yO
set qUr=GetOwningPlayer(aUr)
if Er[GetPlayerId(qUr)]>=2 then
set HJr=true
else
set dUr=yO
set nUr=GetOwningPlayer(dUr)
set HJr=Zr[GetPlayerId(nUr)]>=2
endif
if HJr then
set JJr=true
else
set RUr=yO
set fUr=GetOwningPlayer(RUr)
set JJr=Ur[GetPlayerId(fUr)]>=2
endif
if JJr then
set KJr=true
else
set YUr=yO
set TUr=GetOwningPlayer(YUr)
set KJr=Ir[GetPlayerId(TUr)]>=2
endif
if KJr then
set GUr=iO
call DisableTrigger(GUr)
set mUr=yO
set gUr=GetOwningPlayer(mUr)
set hUr=100
set FUr=gUr
set kUr=PLAYER_STATE_RESOURCE_GOLD
set jUr=hUr
set LJr=FUr
set XJr=kUr
set xUr=FUr
set vUr=kUr
call SetPlayerState(LJr,XJr,GetPlayerState(xUr,vUr)+jUr)
call UuS(yO,100)
set WUr=yO
set QUr=GetOwningPlayer(WUr)
set Yhr=GetPlayerId(QUr)
set hr[Yhr]=hr[Yhr]+100
set Fr[Yhr]=Fr[Yhr]+100
set Cr[Yhr]=Cr[Yhr]+100
set EUr=yr
call DestroyTextTag(EUr)
set ZUr=yO
set UUr=$41313342
call UnitRemoveAbility(ZUr,UUr)
call eWp(OO,$41313342,"when calling remove in AltarGold, line 1618")
call x7s(OO,$41313343,"when calling add in AltarGold, line 1619")
set IUr=OO
set PUr="when calling shuffle in AltarGold, line 1620"
set aW[qW]=PUr
set qW=qW+1
if ok[IUr]==0 then
if IUr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(IUr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set AUr=yO
set HUr=OO
set JUr="when calling getFirst in AltarGold, line 1621"
set aW[qW]=JUr
set qW=qW+1
if ok[HUr]==0 then
if HUr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set LUr=HUr
set KUr=Hv[Kv[Vv[LUr]]]
set qW=qW-1
set DUr=KUr
call UnitAddAbility(AUr,DUr)
set XUr=OO
set CUr="when calling getFirst in AltarGold, line 1622"
set aW[qW]=CUr
set qW=qW+1
if ok[XUr]==0 then
if XUr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set BUr=XUr
set VUr=Hv[Kv[Vv[BUr]]]
set qW=qW-1
set YO=VUr
set pr=300
set NUr=yO
set CJr=GetUnitX(NUr)
set MUr=yO
set yr=jVl(CJr,GetUnitY(MUr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,rM)
set wIr=iO
call EnableTrigger(wIr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set uIr=yO
call DisplayTextToPlayer(GetOwningPlayer(uIr),0.,0.,"You have completed the quest!")
else
set rIr=yO
call DisplayTextToPlayer(GetOwningPlayer(rIr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313343 then
if fO>=2 then
set sIr=iO
call DisableTrigger(sIr)
set bIr=yO
set tIr=GetOwningPlayer(bIr)
set iIr=200
set SIr=tIr
set cIr=PLAYER_STATE_RESOURCE_GOLD
set oIr=iIr
set VJr=SIr
set BJr=cIr
set OIr=SIr
set lIr=cIr
call SetPlayerState(VJr,BJr,GetPlayerState(OIr,lIr)+oIr)
call UuS(yO,200)
set pIr=yO
set yIr=GetOwningPlayer(pIr)
set Ghr=GetPlayerId(yIr)
set hr[Ghr]=hr[Ghr]+200
set Fr[Ghr]=Fr[Ghr]+200
set Cr[Ghr]=Cr[Ghr]+200
set eIr=yr
call DestroyTextTag(eIr)
set qIr=yO
set aIr=$41313343
call UnitRemoveAbility(qIr,aIr)
call eWp(OO,$41313343,"when calling remove in AltarGold, line 1642")
call x7s(OO,$41313344,"when calling add in AltarGold, line 1643")
set nIr=OO
set dIr="when calling shuffle in AltarGold, line 1644"
set aW[qW]=dIr
set qW=qW+1
if ok[nIr]==0 then
if nIr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(nIr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set fIr=yO
set TIr=OO
set YIr="when calling getFirst in AltarGold, line 1645"
set aW[qW]=YIr
set qW=qW+1
if ok[TIr]==0 then
if TIr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set gIr=TIr
set GIr=Hv[Kv[Vv[gIr]]]
set qW=qW-1
set RIr=GIr
call UnitAddAbility(fIr,RIr)
set hIr=OO
set FIr="when calling getFirst in AltarGold, line 1646"
set aW[qW]=FIr
set qW=qW+1
if ok[hIr]==0 then
if hIr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set jIr=hIr
set kIr=Hv[Kv[Vv[jIr]]]
set qW=qW-1
set YO=kIr
set pr=300
set xIr=yO
set NJr=GetUnitX(xIr)
set vIr=yO
set yr=jVl(NJr,GetUnitY(vIr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,sM)
set mIr=iO
call EnableTrigger(mIr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set QIr=yO
call DisplayTextToPlayer(GetOwningPlayer(QIr),0.,0.,"You have completed the quest!")
else
set WIr=yO
call DisplayTextToPlayer(GetOwningPlayer(WIr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313344 then
set ZIr=yO
set EIr=GetOwningPlayer(ZIr)
if Er[GetPlayerId(EIr)]==28 then
set MJr=true
else
set IIr=yO
set UIr=GetOwningPlayer(IIr)
set MJr=Zr[GetPlayerId(UIr)]==28
endif
if MJr then
set wKr=true
else
set AIr=yO
set PIr=GetOwningPlayer(AIr)
set wKr=Ur[GetPlayerId(PIr)]==28
endif
if wKr then
set uKr=true
else
set HIr=yO
set DIr=GetOwningPlayer(HIr)
set uKr=Ir[GetPlayerId(DIr)]==28
endif
if uKr then
set JIr=iO
call DisableTrigger(JIr)
set MIr=yO
set KIr=GetOwningPlayer(MIr)
set LIr=300
set XIr=KIr
set CIr=PLAYER_STATE_RESOURCE_GOLD
set VIr=LIr
set rKr=XIr
set sKr=CIr
set BIr=XIr
set NIr=CIr
call SetPlayerState(rKr,sKr,GetPlayerState(BIr,NIr)+VIr)
call UuS(yO,300)
set uPr=yO
set wPr=GetOwningPlayer(uPr)
set ghr=GetPlayerId(wPr)
set hr[ghr]=hr[ghr]+300
set Fr[ghr]=Fr[ghr]+300
set Cr[ghr]=Cr[ghr]+300
set rPr=yr
call DestroyTextTag(rPr)
set sPr=yO
set tPr=$41313344
call UnitRemoveAbility(sPr,tPr)
call eWp(OO,$41313344,"when calling remove in AltarGold, line 1666")
call x7s(OO,$41313345,"when calling add in AltarGold, line 1667")
set iPr=OO
set SPr="when calling shuffle in AltarGold, line 1668"
set aW[qW]=SPr
set qW=qW+1
if ok[iPr]==0 then
if iPr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(iPr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set cPr=yO
set OPr=OO
set lPr="when calling getFirst in AltarGold, line 1669"
set aW[qW]=lPr
set qW=qW+1
if ok[OPr]==0 then
if OPr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set yPr=OPr
set bPr=Hv[Kv[Vv[yPr]]]
set qW=qW-1
set oPr=bPr
call UnitAddAbility(cPr,oPr)
set pPr=OO
set ePr="when calling getFirst in AltarGold, line 1670"
set aW[qW]=ePr
set qW=qW+1
if ok[pPr]==0 then
if pPr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set aPr=pPr
set qPr=Hv[Kv[Vv[aPr]]]
set qW=qW-1
set YO=qPr
set pr=300
set nPr=yO
set tKr=GetUnitX(nPr)
set dPr=yO
set yr=jVl(tKr,GetUnitY(dPr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,tM)
set fPr=iO
call EnableTrigger(fPr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set RPr=yO
call DisplayTextToPlayer(GetOwningPlayer(RPr),0.,0.,"You have completed the quest!")
else
set TPr=yO
call DisplayTextToPlayer(GetOwningPlayer(TPr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$41313345 then
set GPr=yO
set YPr=GetOwningPlayer(GPr)
if Er[GetPlayerId(YPr)]==28 then
set hPr=yO
set gPr=GetOwningPlayer(hPr)
set iKr=Zr[GetPlayerId(gPr)]==28
else
set iKr=false
endif
if iKr then
set kPr=yO
set FPr=GetOwningPlayer(kPr)
set SKr=Ur[GetPlayerId(FPr)]==28
else
set SKr=false
endif
if SKr then
set xPr=yO
set jPr=GetOwningPlayer(xPr)
set cKr=Ir[GetPlayerId(jPr)]==28
else
set cKr=false
endif
if cKr then
set vPr=iO
call DisableTrigger(vPr)
set PPr=yO
set mPr=GetOwningPlayer(PPr)
set QPr=400
set WPr=mPr
set EPr=PLAYER_STATE_RESOURCE_GOLD
set ZPr=QPr
set oKr=WPr
set OKr=EPr
set UPr=WPr
set IPr=EPr
call SetPlayerState(oKr,OKr,GetPlayerState(UPr,IPr)+ZPr)
call UuS(yO,400)
set DPr=yO
set APr=GetOwningPlayer(DPr)
set hhr=GetPlayerId(APr)
set hr[hhr]=hr[hhr]+400
set Fr[hhr]=Fr[hhr]+400
set Cr[hhr]=Cr[hhr]+400
set HPr=yr
call DestroyTextTag(HPr)
set JPr=yO
set KPr=$41313345
call UnitRemoveAbility(JPr,KPr)
set LPr=yO
set XPr=$41313449
call UnitRemoveAbility(LPr,XPr)
set nO=true
set Fhr=CreateGroup()
set khr=Filter(UN)
call GroupEnumUnitsInRect(Fhr,bj_mapInitialPlayableArea,khr)
set jhr=GetRandomSubGroup(1,Fhr)
set vhr=jhr
loop
set CPr=vhr
exitwhen not (FirstOfGroup(CPr)!=null)
set VPr=vhr
set BPr=FirstOfGroup(VPr)
call GroupRemoveUnit(VPr,BPr)
set xhr=BPr
set NPr=bO
set MPr="when calling shuffle in AltarGold, line 1697"
set aW[qW]=MPr
set qW=qW+1
if ok[NPr]==0 then
if NPr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(NPr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set wAr=xhr
set rAr=bO
set sAr="when calling getFirst in AltarGold, line 1698"
set aW[qW]=sAr
set qW=qW+1
if ok[rAr]==0 then
if rAr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set iAr=rAr
set tAr=Hv[Kv[Vv[iAr]]]
set qW=qW-1
set uAr=tAr
call UnitAddItemById(wAr,uAr)
set SAr=yO
set bKr=GetOwningPlayer(SAr)
set cAr=xhr
set lKr=GetHeroProperName(cAr)+" received "
set oAr=bO
set OAr="when calling getFirst in AltarGold, line 1699"
set aW[qW]=OAr
set qW=qW+1
if ok[oAr]==0 then
if oAr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set bAr=oAr
set lAr=Hv[Kv[Vv[bAr]]]
set qW=qW-1
call DisplayTextToPlayer(bKr,0.,0.,lKr+I2S(lAr))
endloop
set yAr=jhr
call DestroyGroup(yAr)
set pAr=Fhr
call DestroyGroup(pAr)
set eAr=khr
call DestroyBoolExpr(eAr)
call TimerStart(cO,300.,false,iM)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set qAr=yO
call DisplayTextToPlayer(GetOwningPlayer(qAr),0.,0.,"You have completed the quest!")
else
set aAr=yO
call DisplayTextToPlayer(GetOwningPlayer(aAr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131344A then
if RO>=5 then
set nAr=iO
call DisableTrigger(nAr)
set hAr=yO
set dAr=GetOwningPlayer(hAr)
set fAr=100
set RAr=dAr
set TAr=PLAYER_STATE_RESOURCE_GOLD
set YAr=fAr
set yKr=RAr
set pKr=TAr
set GAr=RAr
set gAr=TAr
call SetPlayerState(yKr,pKr,GetPlayerState(GAr,gAr)+YAr)
call UuS(yO,100)
set kAr=yO
set FAr=GetOwningPlayer(kAr)
set mhr=GetPlayerId(FAr)
set hr[mhr]=hr[mhr]+100
set Fr[mhr]=Fr[mhr]+100
set Cr[mhr]=Cr[mhr]+100
set jAr=yr
call DestroyTextTag(jAr)
set xAr=yO
set vAr=$4131344A
call UnitRemoveAbility(xAr,vAr)
call eWp(OO,$4131344A,"when calling remove in AltarGold, line 1720")
call x7s(OO,$4131344B,"when calling add in AltarGold, line 1721")
set mAr=OO
set QAr="when calling shuffle in AltarGold, line 1722"
set aW[qW]=QAr
set qW=qW+1
if ok[mAr]==0 then
if mAr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(mAr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set WAr=yO
set ZAr=OO
set UAr="when calling getFirst in AltarGold, line 1723"
set aW[qW]=UAr
set qW=qW+1
if ok[ZAr]==0 then
if ZAr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set PAr=ZAr
set IAr=Hv[Kv[Vv[PAr]]]
set qW=qW-1
set EAr=IAr
call UnitAddAbility(WAr,EAr)
set AAr=OO
set DAr="when calling getFirst in AltarGold, line 1724"
set aW[qW]=DAr
set qW=qW+1
if ok[AAr]==0 then
if AAr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set JAr=AAr
set HAr=Hv[Kv[Vv[JAr]]]
set qW=qW-1
set YO=HAr
set pr=300
set KAr=yO
set eKr=GetUnitX(KAr)
set LAr=yO
set yr=jVl(eKr,GetUnitY(LAr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,SM)
set XAr=iO
call EnableTrigger(XAr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set CAr=yO
call DisplayTextToPlayer(GetOwningPlayer(CAr),0.,0.,"You have completed the quest!")
else
set VAr=yO
call DisplayTextToPlayer(GetOwningPlayer(VAr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131344B then
if TO>=2 then
set BAr=iO
call DisableTrigger(BAr)
set iDr=yO
set NAr=GetOwningPlayer(iDr)
set MAr=200
set wDr=NAr
set uDr=PLAYER_STATE_RESOURCE_GOLD
set rDr=MAr
set qKr=wDr
set aKr=uDr
set sDr=wDr
set tDr=uDr
call SetPlayerState(qKr,aKr,GetPlayerState(sDr,tDr)+rDr)
call UuS(yO,200)
set cDr=yO
set SDr=GetOwningPlayer(cDr)
set Qhr=GetPlayerId(SDr)
set hr[Qhr]=hr[Qhr]+200
set Fr[Qhr]=Fr[Qhr]+200
set Cr[Qhr]=Cr[Qhr]+200
set oDr=yr
call DestroyTextTag(oDr)
set ODr=yO
set lDr=$4131344B
call UnitRemoveAbility(ODr,lDr)
call eWp(OO,$4131344B,"when calling remove in AltarGold, line 1744")
call x7s(OO,$4131344C,"when calling add in AltarGold, line 1745")
set bDr=OO
set yDr="when calling shuffle in AltarGold, line 1746"
set aW[qW]=yDr
set qW=qW+1
if ok[bDr]==0 then
if bDr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(bDr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set pDr=yO
set qDr=OO
set aDr="when calling getFirst in AltarGold, line 1747"
set aW[qW]=aDr
set qW=qW+1
if ok[qDr]==0 then
if qDr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set dDr=qDr
set nDr=Hv[Kv[Vv[dDr]]]
set qW=qW-1
set eDr=nDr
call UnitAddAbility(pDr,eDr)
set fDr=OO
set RDr="when calling getFirst in AltarGold, line 1748"
set aW[qW]=RDr
set qW=qW+1
if ok[fDr]==0 then
if fDr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set YDr=fDr
set TDr=Hv[Kv[Vv[YDr]]]
set qW=qW-1
set YO=TDr
set pr=300
set GDr=yO
set nKr=GetUnitX(GDr)
set gDr=yO
set yr=jVl(nKr,GetUnitY(gDr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,cM)
set hDr=iO
call EnableTrigger(hDr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set FDr=yO
call DisplayTextToPlayer(GetOwningPlayer(FDr),0.,0.,"You have completed the quest!")
else
set kDr=yO
call DisplayTextToPlayer(GetOwningPlayer(kDr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131344C then
if aO==true then
set jDr=iO
call DisableTrigger(jDr)
set UDr=yO
set xDr=GetOwningPlayer(UDr)
set vDr=300
set mDr=xDr
set QDr=PLAYER_STATE_RESOURCE_GOLD
set WDr=vDr
set dKr=mDr
set fKr=QDr
set EDr=mDr
set ZDr=QDr
call SetPlayerState(dKr,fKr,GetPlayerState(EDr,ZDr)+WDr)
call UuS(yO,300)
set PDr=yO
set IDr=GetOwningPlayer(PDr)
set Whr=GetPlayerId(IDr)
set hr[Whr]=hr[Whr]+300
set Fr[Whr]=Fr[Whr]+300
set Cr[Whr]=Cr[Whr]+300
set ADr=yr
call DestroyTextTag(ADr)
set DDr=yO
set HDr=$4131344C
call UnitRemoveAbility(DDr,HDr)
call eWp(OO,$4131344C,"when calling remove in AltarGold, line 1768")
call x7s(OO,$4131344D,"when calling add in AltarGold, line 1769")
set JDr=OO
set KDr="when calling shuffle in AltarGold, line 1770"
set aW[qW]=KDr
set qW=qW+1
if ok[JDr]==0 then
if JDr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(JDr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set LDr=yO
set CDr=OO
set VDr="when calling getFirst in AltarGold, line 1771"
set aW[qW]=VDr
set qW=qW+1
if ok[CDr]==0 then
if CDr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set NDr=CDr
set BDr=Hv[Kv[Vv[NDr]]]
set qW=qW-1
set XDr=BDr
call UnitAddAbility(LDr,XDr)
set MDr=OO
set wHr="when calling getFirst in AltarGold, line 1772"
set aW[qW]=wHr
set qW=qW+1
if ok[MDr]==0 then
if MDr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set rHr=MDr
set uHr=Hv[Kv[Vv[rHr]]]
set qW=qW-1
set YO=uHr
set pr=300
set sHr=yO
set RKr=GetUnitX(sHr)
set tHr=yO
set yr=jVl(RKr,GetUnitY(tHr),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,oM)
set iHr=iO
call EnableTrigger(iHr)
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set SHr=yO
call DisplayTextToPlayer(GetOwningPlayer(SHr),0.,0.,"You have completed the quest!")
else
set cHr=yO
call DisplayTextToPlayer(GetOwningPlayer(cHr),0.,0.,"The conditions aren't met!")
endif
endif
if ihr==$4131344D then
if dO>=3 then
set oHr=iO
call DisableTrigger(oHr)
set aHr=yO
set OHr=GetOwningPlayer(aHr)
set lHr=400
set bHr=OHr
set yHr=PLAYER_STATE_RESOURCE_GOLD
set pHr=lHr
set TKr=bHr
set YKr=yHr
set eHr=bHr
set qHr=yHr
call SetPlayerState(TKr,YKr,GetPlayerState(eHr,qHr)+pHr)
call UuS(yO,400)
set dHr=yO
set nHr=GetOwningPlayer(dHr)
set Ehr=GetPlayerId(nHr)
set hr[Ehr]=hr[Ehr]+400
set Fr[Ehr]=Fr[Ehr]+400
set Cr[Ehr]=Cr[Ehr]+400
set fHr=yr
call DestroyTextTag(fHr)
set RHr=yO
set THr=$4131344D
call UnitRemoveAbility(RHr,THr)
set YHr=yO
set GHr=$41313449
call UnitRemoveAbility(YHr,GHr)
set nO=true
set yr=null
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",yO,"origin"))
set gHr=yO
call DisplayTextToPlayer(GetOwningPlayer(gHr),0.,0.,"You have completed the quest!")
set hHr=o[Ehr]
set FHr=800.
set kHr=hHr
set jHr=UNIT_STATE_MANA
set xHr=FHr
set GKr=kHr
set gKr=jHr
set vHr=kHr
set mHr=jHr
call SetUnitState(GKr,gKr,GetUnitState(vHr,mHr)+xHr)
set Zhr=CreateGroup()
set Uhr=Filter(OM)
call GroupEnumUnitsInRect(Zhr,bj_mapInitialPlayableArea,Uhr)
set Phr=Zhr
loop
set QHr=Phr
exitwhen not (FirstOfGroup(QHr)!=null)
set WHr=Phr
set EHr=FirstOfGroup(WHr)
call GroupRemoveUnit(WHr,EHr)
set Ihr=EHr
set ZHr=Ihr
set UHr=$41304442
call UnitAddAbility(ZHr,UHr)
endloop
set IHr=Zhr
call DestroyGroup(IHr)
set PHr=Uhr
call DestroyBoolExpr(PHr)
else
set AHr=yO
call DisplayTextToPlayer(GetOwningPlayer(AHr),0.,0.,"The conditions aren't met!")
endif
endif
endif
set qW=qW-1
set Fhr=null
set khr=null
set jhr=null
set xhr=null
set vhr=null
set Zhr=null
set Uhr=null
set Ihr=null
set Phr=null
set Ahr=null
set Dhr=null
set Hhr=null
set Jhr=null
set Lhr=null
set Xhr=null
set Vhr=null
set Bhr=null
set Nhr=null
set Mhr=null
set wFr=null
set uFr=null
set iFr=null
set qFr=null
set aFr=null
set nFr=null
set dFr=null
set fFr=null
set RFr=null
set TFr=null
set YFr=null
set GFr=null
set gFr=null
set FFr=null
set kFr=null
set xFr=null
set vFr=null
set mFr=null
set QFr=null
set WFr=null
set EFr=null
set ZFr=null
set AFr=null
set NFr=null
set MFr=null
set wkr=null
set ukr=null
set rkr=null
set skr=null
set tkr=null
set ikr=null
set Skr=null
set okr=null
set Okr=null
set bkr=null
set ykr=null
set pkr=null
set ekr=null
set qkr=null
set akr=null
set nkr=null
set Tkr=null
set mkr=null
set Qkr=null
set Wkr=null
set Ekr=null
set Zkr=null
set Ukr=null
set Ikr=null
set Pkr=null
set Akr=null
set Hkr=null
set Jkr=null
set Lkr=null
set Xkr=null
set Ckr=null
set Vkr=null
set Bkr=null
set Nkr=null
set wjr=null
set rjr=null
set tjr=null
set ijr=null
set Sjr=null
set cjr=null
set ojr=null
set Ojr=null
set ljr=null
set bjr=null
set yjr=null
set ejr=null
set qjr=null
set njr=null
set djr=null
set fjr=null
set Rjr=null
set Yjr=null
set Gjr=null
set hjr=null
set Fjr=null
set kjr=null
set jjr=null
set xjr=null
set vjr=null
set mjr=null
set Qjr=null
set Wjr=null
set Ijr=null
set Vjr=null
set Bjr=null
set Njr=null
set Mjr=null
set wxr=null
set uxr=null
set rxr=null
set sxr=null
set txr=null
set ixr=null
set Sxr=null
set oxr=null
set Oxr=null
set bxr=null
set yxr=null
set pxr=null
set exr=null
set axr=null
set nxr=null
set fxr=null
set Rxr=null
set Txr=null
set Yxr=null
set Gxr=null
set gxr=null
set hxr=null
set Fxr=null
set kxr=null
set mxr=null
set Hxr=null
set Jxr=null
set Kxr=null
set Lxr=null
set Xxr=null
set Cxr=null
set Vxr=null
set Bxr=null
set Nxr=null
set Mxr=null
set wvr=null
set rvr=null
set svr=null
set ivr=null
set Svr=null
set cvr=null
set ovr=null
set lvr=null
set bvr=null
set pvr=null
set evr=null
set qvr=null
set avr=null
set nvr=null
set dvr=null
set fvr=null
set Rvr=null
set Tvr=null
set hvr=null
set Zvr=null
set Uvr=null
set Ivr=null
set Pvr=null
set Avr=null
set Dvr=null
set Hvr=null
set Jvr=null
set Kvr=null
set Lvr=null
set Xvr=null
set Vvr=null
set Bvr=null
set Mvr=null
set wmr=null
set umr=null
set rmr=null
set tmr=null
set imr=null
set cmr=null
set omr=null
set Omr=null
set lmr=null
set bmr=null
set ymr=null
set pmr=null
set emr=null
set qmr=null
set nmr=null
set fmr=null
set Rmr=null
set Tmr=null
set Ymr=null
set Gmr=null
set gmr=null
set hmr=null
set Fmr=null
set jmr=null
set xmr=null
set mmr=null
set Qmr=null
set Wmr=null
set Emr=null
set Zmr=null
set Umr=null
set Imr=null
set Hmr=null
set wQr=null
set uQr=null
set rQr=null
set sQr=null
set tQr=null
set iQr=null
set SQr=null
set cQr=null
set oQr=null
set lQr=null
set bQr=null
set pQr=null
set eQr=null
set qQr=null
set aQr=null
set nQr=null
set dQr=null
set fQr=null
set GQr=null
set WQr=null
set EQr=null
set ZQr=null
set UQr=null
set IQr=null
set PQr=null
set AQr=null
set DQr=null
set HQr=null
set KQr=null
set LQr=null
set CQr=null
set VQr=null
set BQr=null
set NQr=null
set MQr=null
set wWr=null
set uWr=null
set iWr=null
set qWr=null
set aWr=null
set nWr=null
set dWr=null
set fWr=null
set RWr=null
set TWr=null
set YWr=null
set GWr=null
set hWr=null
set FWr=null
set jWr=null
set xWr=null
set vWr=null
set mWr=null
set QWr=null
set WWr=null
set EWr=null
set UWr=null
set PWr=null
set AWr=null
set DWr=null
set HWr=null
set JWr=null
set KWr=null
set LWr=null
set XWr=null
set CWr=null
set VWr=null
set BWr=null
set MWr=null
set wEr=null
set rEr=null
set sEr=null
set tEr=null
set iEr=null
set SEr=null
set cEr=null
set oEr=null
set yEr=null
set YEr=null
set GEr=null
set gEr=null
set hEr=null
set FEr=null
set kEr=null
set jEr=null
set xEr=null
set vEr=null
set mEr=null
set WEr=null
set EEr=null
set UEr=null
set IEr=null
set PEr=null
set AEr=null
set DEr=null
set HEr=null
set JEr=null
set CEr=null
set iZr=null
set SZr=null
set cZr=null
set oZr=null
set OZr=null
set lZr=null
set bZr=null
set yZr=null
set pZr=null
set eZr=null
set qZr=null
set aZr=null
set dZr=null
set fZr=null
set TZr=null
set YZr=null
set GZr=null
set gZr=null
set hZr=null
set FZr=null
set kZr=null
set mZr=null
set HZr=null
set JZr=null
set KZr=null
set LZr=null
set XZr=null
set CZr=null
set VZr=null
set BZr=null
set NZr=null
set wUr=null
set uUr=null
set sUr=null
set tUr=null
set iUr=null
set SUr=null
set cUr=null
set oUr=null
set OUr=null
set bUr=null
set pUr=null
set eUr=null
set qUr=null
set aUr=null
set nUr=null
set dUr=null
set fUr=null
set RUr=null
set TUr=null
set YUr=null
set GUr=null
set gUr=null
set FUr=null
set kUr=null
set xUr=null
set vUr=null
set mUr=null
set QUr=null
set WUr=null
set EUr=null
set ZUr=null
set AUr=null
set NUr=null
set MUr=null
set wIr=null
set uIr=null
set rIr=null
set sIr=null
set tIr=null
set SIr=null
set cIr=null
set OIr=null
set lIr=null
set bIr=null
set yIr=null
set pIr=null
set eIr=null
set qIr=null
set fIr=null
set xIr=null
set vIr=null
set mIr=null
set QIr=null
set WIr=null
set EIr=null
set ZIr=null
set UIr=null
set IIr=null
set PIr=null
set AIr=null
set DIr=null
set HIr=null
set JIr=null
set KIr=null
set XIr=null
set CIr=null
set BIr=null
set NIr=null
set MIr=null
set wPr=null
set uPr=null
set rPr=null
set sPr=null
set cPr=null
set nPr=null
set dPr=null
set fPr=null
set RPr=null
set TPr=null
set YPr=null
set GPr=null
set gPr=null
set hPr=null
set FPr=null
set kPr=null
set jPr=null
set xPr=null
set vPr=null
set mPr=null
set WPr=null
set EPr=null
set UPr=null
set IPr=null
set PPr=null
set APr=null
set DPr=null
set HPr=null
set JPr=null
set LPr=null
set CPr=null
set VPr=null
set BPr=null
set wAr=null
set SAr=null
set cAr=null
set yAr=null
set pAr=null
set eAr=null
set qAr=null
set aAr=null
set nAr=null
set dAr=null
set RAr=null
set TAr=null
set GAr=null
set gAr=null
set hAr=null
set FAr=null
set kAr=null
set jAr=null
set xAr=null
set WAr=null
set KAr=null
set LAr=null
set XAr=null
set CAr=null
set VAr=null
set BAr=null
set NAr=null
set wDr=null
set uDr=null
set sDr=null
set tDr=null
set iDr=null
set SDr=null
set cDr=null
set oDr=null
set ODr=null
set pDr=null
set GDr=null
set gDr=null
set hDr=null
set FDr=null
set kDr=null
set jDr=null
set xDr=null
set mDr=null
set QDr=null
set EDr=null
set ZDr=null
set UDr=null
set IDr=null
set PDr=null
set ADr=null
set DDr=null
set LDr=null
set sHr=null
set tHr=null
set iHr=null
set SHr=null
set cHr=null
set oHr=null
set OHr=null
set bHr=null
set yHr=null
set eHr=null
set qHr=null
set aHr=null
set nHr=null
set dHr=null
set fHr=null
set RHr=null
set YHr=null
set gHr=null
set hHr=null
set kHr=null
set jHr=null
set vHr=null
set mHr=null
set QHr=null
set WHr=null
set EHr=null
set ZHr=null
set IHr=null
set PHr=null
set AHr=null
set DHr=null
set HHr=null
set KHr=null
set LHr=null
set CHr=null
set VHr=null
set NHr=null
set MHr=null
set wJr=null
set uJr=null
set sJr=null
set tJr=null
set SJr=null
set cJr=null
set OJr=null
set lJr=null
set bJr=null
set yJr=null
set eJr=null
set qJr=null
set nJr=null
set dJr=null
set RJr=null
set TJr=null
set gJr=null
set hJr=null
set xJr=null
set vJr=null
set UJr=null
set IJr=null
set AJr=null
set DJr=null
set LJr=null
set XJr=null
set VJr=null
set BJr=null
set rKr=null
set sKr=null
set oKr=null
set OKr=null
set bKr=null
set yKr=null
set pKr=null
set qKr=null
set aKr=null
set dKr=null
set fKr=null
set TKr=null
set YKr=null
set GKr=null
set gKr=null
endfunction
function CoS takes nothing returns nothing
set qW=0
call hKr("via function reference AltarGold, line 1224")
endfunction
function Cqr takes nothing returns boolean
local unit Hqr=GetFilterUnit()
local unit Jqr=Hqr
local unit Kqr
local unittype Lqr
local boolean Xqr
if UnitAlive(Jqr) then
set Kqr=Hqr
set Lqr=UNIT_TYPE_HERO
set Xqr=IsUnitType(Kqr,Lqr)
else
set Xqr=false
endif
set Hqr=null
set Jqr=null
set Kqr=null
set Lqr=null
return Xqr
endfunction
function Cwr takes nothing returns nothing
local unit C_r=GetTriggerUnit()
local unit B_r=C_r
local player V_r=GetOwningPlayer(B_r)
local unit N_r
local string M_r
local real wwr
local real uwr
local unit rwr
local unittype swr
local unit twr
local string iwr
local real Swr
local real cwr
local unit owr
local unittype Owr
local unit lwr
local string bwr
local real ywr
local real pwr
local unit ewr
local unittype qwr
local unit awr
local string nwr
local real dwr
local real fwr
local unit Rwr
local unittype Twr
local unit Ywr
local string Gwr
local real gwr
local real hwr
local unit Fwr
local unittype kwr
local unit jwr
local string xwr
local real vwr
local real mwr
local unit Qwr
local unittype Wwr
local real Ewr
local real Zwr
local real Uwr
local real Iwr
local real Pwr
local real Awr
local real Dwr
local real Hwr
local real Jwr
local real Kwr
local real Lwr
local real Xwr
if V_r==du then
set N_r=C_r
set M_r="attack"
set Ewr=Qw[45]
set Zwr=Ww[45]
set wwr=Ewr
set uwr=Zwr
call IssuePointOrder(N_r,M_r,wwr,uwr)
set rwr=C_r
set swr=UNIT_TYPE_HERO
if IsUnitType(rwr,swr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,45)
endif
endif
if V_r==nu then
if Ew[2]==true then
set twr=C_r
set iwr="attack"
set Uwr=Qw[37]
set Iwr=Ww[37]
set Swr=Uwr
set cwr=Iwr
call IssuePointOrder(twr,iwr,Swr,cwr)
set owr=C_r
set Owr=UNIT_TYPE_HERO
if IsUnitType(owr,Owr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,37)
endif
else
set lwr=C_r
set bwr="attack"
set Pwr=Qw[45]
set Awr=Ww[45]
set ywr=Pwr
set pwr=Awr
call IssuePointOrder(lwr,bwr,ywr,pwr)
set ewr=C_r
set qwr=UNIT_TYPE_HERO
if IsUnitType(ewr,qwr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,45)
endif
endif
endif
if V_r==fu then
set awr=C_r
set nwr="attack"
set Dwr=Qw[37]
set Hwr=Ww[37]
set dwr=Dwr
set fwr=Hwr
call IssuePointOrder(awr,nwr,dwr,fwr)
set Rwr=C_r
set Twr=UNIT_TYPE_HERO
if IsUnitType(Rwr,Twr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,37)
endif
endif
if V_r==Ru then
if Ew[0]==true then
set Ywr=C_r
set Gwr="attack"
set Jwr=Qw[45]
set Kwr=Ww[45]
set gwr=Jwr
set hwr=Kwr
call IssuePointOrder(Ywr,Gwr,gwr,hwr)
set Fwr=C_r
set kwr=UNIT_TYPE_HERO
if IsUnitType(Fwr,kwr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,45)
endif
else
set jwr=C_r
set xwr="attack"
set Lwr=Qw[37]
set Xwr=Ww[37]
set vwr=Lwr
set mwr=Xwr
call IssuePointOrder(jwr,xwr,vwr,mwr)
set Qwr=C_r
set Wwr=UNIT_TYPE_HERO
if IsUnitType(Qwr,Wwr) then
call SaveInteger(qu,GetHandleId(C_r),$6D6F7665,37)
endif
endif
endif
set C_r=null
set V_r=null
set B_r=null
set N_r=null
set rwr=null
set swr=null
set twr=null
set owr=null
set Owr=null
set lwr=null
set ewr=null
set qwr=null
set awr=null
set Rwr=null
set Twr=null
set Ywr=null
set Fwr=null
set kwr=null
set jwr=null
set Qwr=null
set Wwr=null
endfunction
function D0l takes nothing returns boolean
local trigger Q0l
local trigger W0l
local playerunitevent E0l
local trigger Z0l
local playerunitevent U0l
local integer I0l
local trigger P0l
local code A0l
set Vb=CreateTrigger()
set Q0l=Vb
call DisableTrigger(Q0l)
set W0l=Vb
set E0l=EVENT_PLAYER_UNIT_ATTACKED
set Z0l=W0l
set U0l=E0l
set I0l=0
loop
call TriggerRegisterPlayerUnitEvent(Z0l,Player(I0l),U0l,null)
set I0l=I0l+1
exitwhen I0l==bj_MAX_PLAYER_SLOTS
endloop
set P0l=Vb
set A0l=V3
call TriggerAddAction(P0l,A0l)
set Q0l=null
set W0l=null
set E0l=null
set Z0l=null
set U0l=null
set P0l=null
return true
endfunction
function D0u takes nothing returns nothing
local unit A0u=GetRevivingUnit()
if GetUnitTypeId(A0u)==$4F303430 then
set Pp=GetRevivingUnit()
set Qp=true
endif
set A0u=null
endfunction
function D1S takes nothing returns boolean
local unit t1S=GetFilterUnit()
local unit i1S=t1S
local unit S1S
local unittype c1S
local unit o1S
local unit O1S
local unit l1S
local player b1S
local unit y1S
local unit p1S
local integer e1S
local unit q1S
local integer a1S
local unit n1S
local integer d1S
local unit f1S
local integer R1S
local unit T1S
local integer Y1S
local unit G1S
local integer g1S
local unit h1S
local integer F1S
local unit k1S
local integer j1S
local boolean x1S
local boolean v1S
local boolean m1S
local boolean Q1S
local boolean W1S
local boolean E1S
local boolean Z1S
local boolean U1S
local boolean I1S
local boolean P1S
local boolean A1S
if UnitAlive(i1S) then
set S1S=t1S
set c1S=UNIT_TYPE_HERO
set x1S=IsUnitType(S1S,c1S)==true
else
set x1S=false
endif
if x1S then
set o1S=t1S
set O1S=Dp
if o1S!=null and O1S!=null then
set l1S=o1S
set y1S=O1S
set b1S=GetOwningPlayer(y1S)
set v1S=l1S!=null and IsUnitAlly(l1S,b1S)
else
set v1S=false
endif
set m1S=v1S==true
else
set m1S=false
endif
if m1S then
set p1S=t1S
set e1S=$494D3038
set Q1S=RTS(p1S,e1S)!=null==false
else
set Q1S=false
endif
if Q1S then
set q1S=t1S
set a1S=$494D3031
set W1S=RTS(q1S,a1S)!=null==false
else
set W1S=false
endif
if W1S then
set n1S=t1S
set d1S=$494D3032
set E1S=RTS(n1S,d1S)!=null==false
else
set E1S=false
endif
if E1S then
set f1S=t1S
set R1S=$494D3033
set Z1S=RTS(f1S,R1S)!=null==false
else
set Z1S=false
endif
if Z1S then
set T1S=t1S
set Y1S=$494D3034
set U1S=RTS(T1S,Y1S)!=null==false
else
set U1S=false
endif
if U1S then
set G1S=t1S
set g1S=$494D3035
set I1S=RTS(G1S,g1S)!=null==false
else
set I1S=false
endif
if I1S then
set h1S=t1S
set F1S=$494D3036
set P1S=RTS(h1S,F1S)!=null==false
else
set P1S=false
endif
if P1S then
set k1S=t1S
set j1S=$494D3037
set A1S=RTS(k1S,j1S)!=null==false
else
set A1S=false
endif
set t1S=null
set i1S=null
set S1S=null
set c1S=null
set o1S=null
set O1S=null
set l1S=null
set b1S=null
set y1S=null
set p1S=null
set q1S=null
set n1S=null
set f1S=null
set T1S=null
set G1S=null
set h1S=null
set k1S=null
return A1S
endfunction
function D1e takes nothing returns boolean
local unit T1e=GetEnteringUnit()
local unit G1e=T1e
local player Y1e=GetOwningPlayer(G1e)
local player g1e=Y1e
local unit F1e=G[7]
local player h1e=GetOwningPlayer(F1e)
local unit k1e
local unit j1e
local unittype x1e
local unit v1e
local unit m1e
local unit Q1e
local unit W1e
local boolean E1e
local boolean Z1e
local boolean U1e
local boolean I1e
local boolean P1e
local boolean A1e
if IsPlayerEnemy(g1e,h1e) then
set E1e=true
else
set k1e=G[7]
set E1e=GetOwningPlayer(k1e)==Player(15)
endif
if E1e then
set j1e=T1e
set x1e=UNIT_TYPE_HERO
set Z1e=IsUnitType(j1e,x1e)==true or GetUnitLevel(T1e)>=7
else
set Z1e=false
endif
if Z1e then
set v1e=T1e
set U1e=GetUnitTypeId(v1e)!=$6830324C
else
set U1e=false
endif
if U1e then
set m1e=T1e
set I1e=GetUnitTypeId(m1e)!=$6830324D
else
set I1e=false
endif
if I1e then
set Q1e=T1e
set P1e=GetUnitTypeId(Q1e)!=$68303254
else
set P1e=false
endif
if P1e then
set W1e=T1e
set A1e=GetUnitTypeId(W1e)!=$6830324F
else
set A1e=false
endif
set T1e=null
set Y1e=null
set G1e=null
set g1e=null
set h1e=null
set F1e=null
set k1e=null
set j1e=null
set x1e=null
set v1e=null
set m1e=null
set Q1e=null
set W1e=null
return A1e
endfunction
function D1y takes nothing returns nothing
local unit v1y=GetDyingUnit()
local unit W1y=v1y
local integer m1y
local integer Q1y
local unit E1y
local unit Z1y
local unit U1y
local unit I1y
local player P1y
local real A1y
if GetUnitTypeId(W1y)==$6F30334C then
set m1y=GetRandomInt(1,100)
set E1y=v1y
set Q1y=GetPlayerTechCount(GetOwningPlayer(E1y),$52303753,true)
if m1y<=30+20*Q1y then
set Z1y=v1y
set P1y=GetOwningPlayer(Z1y)
set U1y=v1y
set A1y=GetUnitX(U1y)
set I1y=v1y
call CreateUnit(P1y,$6E737070,A1y,GetUnitY(I1y),0.)
endif
endif
set v1y=null
set W1y=null
set E1y=null
set Z1y=null
set U1y=null
set I1y=null
set P1y=null
endfunction
function D4r takes nothing returns boolean
local trigger Q4r
local trigger W4r
local playerunitevent E4r
local trigger Z4r
local playerunitevent U4r
local integer I4r
local trigger P4r
local code A4r
set Sn=CreateTrigger()
set Q4r=Sn
call DisableTrigger(Q4r)
set W4r=Sn
set E4r=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Z4r=W4r
set U4r=E4r
set I4r=0
loop
call TriggerRegisterPlayerUnitEvent(Z4r,Player(I4r),U4r,null)
set I4r=I4r+1
exitwhen I4r==bj_MAX_PLAYER_SLOTS
endloop
set P4r=Sn
set A4r=P5
call TriggerAddAction(P4r,A4r)
set Q4r=null
set W4r=null
set E4r=null
set Z4r=null
set U4r=null
set P4r=null
return true
endfunction
function D6i takes nothing returns boolean
local playerunitevent P6i=EVENT_PLAYER_UNIT_DEATH
local code A6i=R3
call emO(P6i,null,A6i,null)
set P6i=null
return true
endfunction
function LUp takes string hUp returns nothing
local integer FUp
local unit kUp
local integer jUp
local integer xUp
local unit vUp
local unit mUp
local integer QUp
local unit WUp
local integer EUp
local unit ZUp
local integer UUp
local integer IUp
local string PUp
local integer AUp
local real DUp
local integer HUp
local string JUp
local boolean KUp
set aW[qW]=hUp
set qW=qW+1
set FUp=GetSpellAbilityId()
set kUp=GetSpellAbilityUnit()
if FUp==$41303252 then
set vUp=kUp
set KUp=GetUnitTypeId(vUp)==$4F73616D
else
set KUp=false
endif
if KUp then
set mUp=kUp
set QUp=$41303252
set jUp=GetUnitAbilityLevel(mUp,QUp)
set WUp=kUp
set EUp=$426C476C
call UnitAddAbility(WUp,EUp)
set ZUp=kUp
set UUp=$426C476C
set IUp=jUp
call SetUnitAbilityLevel(ZUp,UUp,IUp)
set PUp="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Baine in Baine, line 100"
set aW[qW]=PUp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set AUp=fF
set RF[AUp]=803
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Baine.","when calling error in Baine, line 100")
set AUp=0
endif
else
set dF=dF-1
set AUp=nF[dF]
set RF[AUp]=803
endif
set qW=qW-1
set xUp=AUp
set wj[xUp]=kUp
set DUp=15.
set HUp=xUp
set JUp="when calling doAfter in Baine, line 100"
set aW[qW]=JUp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),DUp,HUp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set kUp=null
set vUp=null
set mUp=null
set WUp=null
set ZUp=null
endfunction
function D8l takes nothing returns nothing
set qW=0
call LUp("via function reference Baine, line 93")
endfunction
function D9l takes nothing returns boolean
local trigger U9l
local trigger I9l
local playerunitevent P9l
local integer A9l
set dh=CreateTrigger()
set U9l=dh
call DisableTrigger(U9l)
set I9l=dh
set P9l=EVENT_PLAYER_UNIT_DEATH
set A9l=0
loop
call TriggerRegisterPlayerUnitEvent(I9l,Player(A9l),P9l,null)
set A9l=A9l+1
exitwhen A9l==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(dh,asw)
set U9l=null
set I9l=null
set P9l=null
return true
endfunction
function D9r takes nothing returns nothing
local texttag I9r
local string P9r
local real A9r
if ET>0 then
set ET=ET-1
set I9r=kT
set P9r=I2S(ET)
set A9r=13.
call SetTextTagText(I9r,P9r,A9r*.0023)
endif
set I9r=null
endfunction
function DAo takes nothing returns boolean
local trigger QAo
local trigger WAo
local playerunitevent EAo
local trigger ZAo
local playerunitevent UAo
local integer IAo
local trigger PAo
local code AAo
set GG=CreateTrigger()
set QAo=GG
call DisableTrigger(QAo)
set WAo=GG
set EAo=EVENT_PLAYER_UNIT_DEATH
set ZAo=WAo
set UAo=EAo
set IAo=0
loop
call TriggerRegisterPlayerUnitEvent(ZAo,Player(IAo),UAo,null)
set IAo=IAo+1
exitwhen IAo==bj_MAX_PLAYER_SLOTS
endloop
set PAo=GG
set AAo=Dww
call TriggerAddAction(PAo,AAo)
set QAo=null
set WAo=null
set EAo=null
set ZAo=null
set UAo=null
set PAo=null
return true
endfunction
function DDp takes nothing returns boolean
return true
endfunction
function DDu takes nothing returns boolean
local unit xDu=GetFilterUnit()
local unit vDu=xDu
local unit mDu
local unittype QDu
local unit WDu
local player EDu
local unit ZDu
local unittype UDu
local boolean IDu
local boolean PDu
local boolean ADu
if UnitAlive(vDu) then
set mDu=xDu
set QDu=UNIT_TYPE_STRUCTURE
set IDu=IsUnitType(mDu,QDu)==false
else
set IDu=false
endif
if IDu then
set WDu=xDu
set EDu=Qa
set PDu=IsUnitEnemy(WDu,EDu)==true
else
set PDu=false
endif
if PDu then
set ZDu=xDu
set UDu=UNIT_TYPE_ANCIENT
set ADu=IsUnitType(ZDu,UDu)==false
else
set ADu=false
endif
set xDu=null
set vDu=null
set mDu=null
set QDu=null
set WDu=null
set EDu=null
set ZDu=null
set UDu=null
return ADu
endfunction
function DDy takes nothing returns boolean
local trigger UDy
local trigger IDy
local playerunitevent PDy
local integer ADy
set ed=CreateTrigger()
set UDy=ed
call DisableTrigger(UDy)
set IDy=ed
set PDy=EVENT_PLAYER_UNIT_DEATH
set ADy=0
loop
call TriggerRegisterPlayerUnitEvent(IDy,Player(ADy),PDy,null)
set ADy=ADy+1
exitwhen ADy==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ed,Y7)
set UDy=null
set IDy=null
set PDy=null
return true
endfunction
function DHb takes nothing returns nothing
local integer PHb
local integer AHb
if mR!=null then
set PHb=GetPlayerTechCount(QR,$52303947,true)
set AHb=GetPlayerTechCount(QR,$52303948,true)
if PHb<10 then
call SetPlayerTechResearched(QR,$52303947,PHb+1)
endif
if AHb<13 then
call SetPlayerTechResearched(QR,$52303948,AHb+1)
endif
endif
endfunction
function ksO takes string ssO returns nothing
local integer tsO
local unit isO
local real SsO
local real csO
local integer osO
local unit OsO
local integer lsO
local unit bsO
local unit ysO
local unit psO
local unit esO
local unit qsO
local unit asO
local integer nsO
local unit dsO
local real fsO
local string RsO
local integer TsO
local real YsO
local integer GsO
local string gsO
local player hsO
local real FsO
set aW[qW]=ssO
set qW=qW+1
set tsO=GetSpellAbilityId()
if tsO==$41304C39 then
set isO=GetSpellAbilityUnit()
set bsO=isO
set SsO=GetUnitX(bsO)
set ysO=isO
set csO=GetUnitY(ysO)
set osO=1
loop
exitwhen osO>13
set psO=isO
set hsO=GetOwningPlayer(psO)
set esO=isO
set FsO=GetUnitX(esO)
set qsO=isO
set OsO=CreateUnit(hsO,$75303030,FsO,GetUnitY(qsO),270.)
set asO=OsO
set nsO=$41304C41
call UnitAddAbility(asO,nsO)
call IssuePointOrder(OsO,"carrionswarm",SsO+100.*Cos(60.+I2R(osO)*30.*bj_DEGTORAD),csO+100.*Sin(60.+I2R(osO)*30.*bj_DEGTORAD))
set dsO=OsO
set fsO=3.
call UnitApplyTimedLife(dsO,$42544C46,fsO)
set osO=osO+1
endloop
set RsO="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_MainCastleBloodElf in MainCastleBloodElf, line 663"
set aW[qW]=RsO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set TsO=fF
set RF[TsO]=827
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_MainCastleBloodElf.","when calling error in MainCastleBloodElf, line 663")
set TsO=0
endif
else
set dF=dF-1
set TsO=nF[dF]
set RF[TsO]=827
endif
set qW=qW-1
set lsO=TsO
set im[lsO]=isO
set Sm[lsO]=SsO
set cm[lsO]=csO
set YsO=.5
set GsO=lsO
set gsO="when calling doAfter in MainCastleBloodElf, line 663"
set aW[qW]=gsO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),YsO,GsO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set isO=null
set OsO=null
set bsO=null
set ysO=null
set psO=null
set esO=null
set qsO=null
set asO=null
set dsO=null
set hsO=null
endfunction
function DIy takes nothing returns nothing
set qW=0
call ksO("via function reference MainCastleBloodElf, line 652")
endfunction
function DNu takes nothing returns boolean
local trigger ENu
local trigger ZNu
local real UNu
local boolean INu
local trigger PNu
local code ANu
set pd=null
set yd=CreateTrigger()
set ENu=yd
call DisableTrigger(ENu)
set ZNu=yd
set UNu=.5
set INu=true
call TriggerRegisterTimerEvent(ZNu,UNu,INu)
set PNu=yd
set ANu=f7
call TriggerAddAction(PNu,ANu)
set ENu=null
set ZNu=null
set PNu=null
return true
endfunction
function DRt takes nothing returns nothing
local unit xRt=GetTriggerUnit()
local unit WRt=xRt
local player vRt=GetOwningPlayer(WRt)
local unit ERt=xRt
local integer mRt=GetUnitTypeId(ERt)
local integer QRt=GetPlayerId(vRt)
local sound ZRt
local trigger URt
local trigger IRt
local sound PRt
local trigger ARt
if mRt==$7830316C then
set ZRt=Jn
if ZRt!=null then
call StartSound(ZRt)
endif
set URt=Pn
call EnableTrigger(URt)
set IRt=In
call EnableTrigger(IRt)
set s[QRt]=$484D3037
endif
if mRt==$78303263 then
set PRt=Ea
if PRt!=null then
call StartSound(PRt)
endif
set t[QRt]=$484D3036
endif
if mRt==$78303261 then
call RemoveUnitFromStock(O[QRt],H[QRt])
call RemoveUnitFromStock(b[QRt],H[QRt])
call RemoveUnitFromStock(l[QRt],H[QRt])
set H[QRt]=$6E303230
call AddUnitToStock(O[QRt],H[QRt],1,3)
call AddUnitToStock(b[QRt],H[QRt],1,3)
call AddUnitToStock(l[QRt],H[QRt],1,3)
endif
if mRt==$6E303138 then
call RemoveUnitFromStock(O[QRt],A[QRt])
call RemoveUnitFromStock(b[QRt],A[QRt])
call RemoveUnitFromStock(l[QRt],A[QRt])
set A[QRt]=$78303262
call AddUnitToStock(O[QRt],A[QRt],1,3)
call AddUnitToStock(b[QRt],A[QRt],1,3)
call AddUnitToStock(l[QRt],A[QRt],1,3)
endif
if mRt==$6E303053 then
set ARt=xG
call EnableTrigger(ARt)
set J[QRt]=$78303264
endif
if mRt==$78303265 then
set L[QRt]=$78303266
endif
if mRt==$7830307A then
call SetPlayerTechResearched(vRt,$524D307D,1)
endif
if mRt==$6F303256 then
call RemoveUnitFromStock(O[QRt],D[QRt])
call RemoveUnitFromStock(b[QRt],D[QRt])
call RemoveUnitFromStock(l[QRt],D[QRt])
set D[QRt]=$78303267
call AddUnitToStock(O[QRt],D[QRt],1,3)
call AddUnitToStock(b[QRt],D[QRt],1,3)
call AddUnitToStock(l[QRt],D[QRt],1,3)
endif
if mRt==$78303269 then
call SetPlayerTechResearched(vRt,$524D3134,1)
call SetPlayerTechResearched(Player(QRt+4),$524D3134,1)
endif
if mRt==$7830326A then
set K[QRt]=$7830326B
endif
set xRt=null
set vRt=null
set WRt=null
set ERt=null
set ZRt=null
set URt=null
set IRt=null
set PRt=null
set ARt=null
endfunction
function DTS takes nothing returns boolean
return true
endfunction
function Uqc takes integer pqc,string eqc returns unit
local unit qqc
local integer aqc
local integer nqc
local fogstate dqc
local string fqc
local integer Rqc
local integer Tqc
local fogstate Yqc
local hashtable Gqc
local integer gqc
local integer hqc
local fogstate Fqc
local integer kqc
local integer jqc
local string xqc
local unit vqc
local integer mqc
local integer Qqc
local hashtable Wqc
local integer Eqc
local integer Zqc
set aW[qW]=eqc
set qW=qW+1
set aqc=Sh
set nqc=0
set dqc=ConvertFogState(pqc)
set fqc="when calling saveFogState in TypeCasting, line 53"
set aW[qW]=fqc
set qW=qW+1
if KF[aqc]==0 then
if aqc==0 then
call L8c("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 169")
else
call L8c("Called Table.saveFogState on invalid object.","when calling error in Table, line 169")
endif
endif
set Rqc=aqc
set Tqc=nqc
set Yqc=dqc
set Gqc=Sg
set gqc=Rqc
set hqc=Tqc
set Fqc=Yqc
call SaveFogStateHandle(Gqc,gqc,hqc,Fqc)
set qW=qW-1
set kqc=Sh
set jqc=0
set xqc="when calling loadUnit in TypeCasting, line 54"
set aW[qW]=xqc
set qW=qW+1
if KF[kqc]==0 then
if kqc==0 then
call L8c("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 76")
else
call L8c("Called Table.loadUnit on invalid object.","when calling error in Table, line 76")
endif
endif
set mqc=kqc
set Qqc=jqc
set Wqc=Sg
set Eqc=mqc
set Zqc=Qqc
set vqc=LoadUnitHandle(Wqc,Eqc,Zqc)
set qW=qW-1
set qqc=vqc
set qW=qW-1
set Wtw=qqc
set qqc=null
set dqc=null
set Yqc=null
set Gqc=null
set Fqc=null
set vqc=null
set Wqc=null
return Wtw
endfunction
function W5y takes integer x5y,integer v5y,string m5y returns integer
local integer Q5y
if v5y<0 or v5y>=4 then
call L8c("Index out of Bounds",m5y)
elseif v5y<=1 then
if v5y<=0 then
set Q5y=EW[x5y]
else
set Q5y=ZW[x5y]
endif
elseif v5y<=2 then
set Q5y=UW[x5y]
else
set Q5y=IW[x5y]
endif
return Q5y
endfunction
function Xxp takes integer Hxp,integer Jxp,string Kxp returns integer
local integer Lxp
if Jxp<0 or Jxp>=4 then
call L8c("Index out of Bounds",Kxp)
elseif Jxp<=1 then
if Jxp<=0 then
set Lxp=PW[Hxp]
else
set Lxp=AW[Hxp]
endif
elseif Jxp<=2 then
set Lxp=DW[Hxp]
else
set Lxp=HW[Hxp]
endif
return Lxp
endfunction
function bVe takes integer cVe,integer oVe,string OVe returns boolean
local integer lVe
set aW[qW]=OVe
set qW=qW+1
set lVe=0
loop
exitwhen lVe>3
if W5y(cVe,lVe,"when reading array HeroIcons_allHeroes_activeIconId in  in HeroIconsClass, line 53")==oVe or Xxp(cVe,lVe,"when reading array HeroIcons_allHeroes_disabledIconId in  in HeroIconsClass, line 53")==oVe then
set qW=qW-1
return true
endif
set lVe=lVe+1
endloop
set qW=qW-1
return false
endfunction
function gar takes integer car,integer oar,string Oar returns integer
local integer lar
local integer bar
local integer yar
local string par
local integer ear
local integer qar
local integer aar
local string nar
local integer dar
local integer far
local integer Rar
local hashtable Tar
local integer Yar
local integer Gar
set aW[qW]=Oar
set qW=qW+1
if KF[car]==0 then
if car==0 then
call L8c("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 23")
else
call L8c("Called HashMap.get on invalid object.","when calling error in HashMap, line 23")
endif
endif
set bar=car
set yar=oar
set par="when calling get in HashMap, line 23"
set aW[qW]=par
set qW=qW+1
set qar=bar
set aar=yar
set nar="when calling loadInt in HashMap, line 24"
set aW[qW]=nar
set qW=qW+1
if KF[qar]==0 then
if qar==0 then
call L8c("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 40")
else
call L8c("Called Table.loadInt on invalid object.","when calling error in Table, line 40")
endif
endif
set far=qar
set Rar=aar
set Tar=Sg
set Yar=far
set Gar=Rar
set dar=LoadInteger(Tar,Yar,Gar)
set qW=qW-1
set ear=dar
set qW=qW-1
set lar=ear
set qW=qW-1
set Tar=null
return lar
endfunction
function jNr takes integer gNr,integer hNr,integer FNr,string kNr returns nothing
if hNr<0 or hNr>=6 then
call L8c("Index out of Bounds",kNr)
elseif hNr<=2 then
if hNr<=1 then
if hNr<=0 then
set JW[gNr]=FNr
else
set KW[gNr]=FNr
endif
else
set LW[gNr]=FNr
endif
elseif hNr<=4 then
if hNr<=3 then
set XW[gNr]=FNr
else
set CW[gNr]=FNr
endif
else
set VW[gNr]=FNr
endif
endfunction
function xnS takes integer hnS,integer FnS,string knS returns integer
local integer jnS
if FnS<0 or FnS>=6 then
call L8c("Index out of Bounds",knS)
elseif FnS<=2 then
if FnS<=1 then
if FnS<=0 then
set jnS=JW[hnS]
else
set jnS=KW[hnS]
endif
else
set jnS=LW[hnS]
endif
elseif FnS<=4 then
if FnS<=3 then
set jnS=XW[hnS]
else
set jnS=CW[hnS]
endif
else
set jnS=VW[hnS]
endif
return jnS
endfunction
function yUl takes integer tUl,integer iUl,string SUl returns nothing
local integer cUl
local integer oUl
local string OUl
local unit lUl
local integer bUl
set aW[qW]=SUl
set qW=qW+1
if XF[tUl]==0 then
if tUl==0 then
call L8c("Nullpointer exception when calling Inventory.removeFromSlot","when calling error in InventoryClass, line 23")
else
call L8c("Called Inventory.removeFromSlot on invalid object.","when calling error in InventoryClass, line 23")
endif
endif
set cUl=tUl
set oUl=iUl
set OUl="when calling removeFromSlot in InventoryClass, line 23"
set aW[qW]=OUl
set qW=qW+1
if xnS(cUl,oUl,"when reading array Inventory_inventory in  in InventoryClass, line 24")!=0 then
set lUl=Sv[cUl]
set bUl=xnS(cUl,oUl,"when reading array Inventory_inventory in  in InventoryClass, line 25")
call UnitRemoveAbility(lUl,bUl)
call jNr(cUl,oUl,0,"when writing array Inventory_inventory in InventoryClass, line 26")
endif
set qW=qW-1
set qW=qW-1
set lUl=null
endfunction
function hjp takes integer Xkp,unit Ckp,string Vkp returns nothing
local integer Bkp
local item Nkp
local integer Mkp
local string wjp
local integer ujp
local string rjp
local integer sjp
local unit tjp
local integer ijp
local integer Sjp
local integer cjp
local integer ojp
local string Ojp
local integer ljp
local integer bjp
local integer yjp
local string pjp
local unit ejp
local integer qjp
local integer ajp
local item njp
local string djp
local integer fjp
local item Rjp
local string Tjp
local integer Yjp
local item Gjp
local integer gjp
set aW[qW]=Vkp
set qW=qW+1
set Mkp=Xkp
set wjp="when calling clearInventory in InventoryClass, line 36"
set aW[qW]=wjp
set qW=qW+1
if XF[Mkp]==0 then
if Mkp==0 then
call L8c("Nullpointer exception when calling Inventory.clearInventory","when calling error in InventoryClass, line 31")
else
call L8c("Called Inventory.clearInventory on invalid object.","when calling error in InventoryClass, line 31")
endif
endif
set ujp=Mkp
set rjp="when calling clearInventory in InventoryClass, line 31"
set aW[qW]=rjp
set qW=qW+1
set sjp=0
loop
exitwhen sjp>5
call yUl(ujp,sjp,"when calling removeFromSlot in InventoryClass, line 33")
set sjp=sjp+1
endloop
set qW=qW-1
set qW=qW-1
set Bkp=0
loop
exitwhen Bkp>5
set tjp=Ckp
set ijp=Bkp
set Nkp=UnitItemInSlot(tjp,ijp)
if Nkp!=null then
set Sjp=Xkp
set cjp=Bkp
set ajp=Xkp
set njp=Nkp
set djp="when calling getIconForItem in InventoryClass, line 40"
set aW[qW]=djp
set qW=qW+1
if XF[ajp]==0 then
if ajp==0 then
call L8c("Nullpointer exception when calling Inventory.getIconForItem","when calling error in InventoryClass, line 28")
else
call L8c("Called Inventory.getIconForItem on invalid object.","when calling error in InventoryClass, line 28")
endif
endif
set Rjp=njp
set Tjp="when calling getIconForItem in InventoryClass, line 28"
set aW[qW]=Tjp
set qW=qW+1
set gjp=vn
set Gjp=Rjp
set Yjp=gar(gjp,GetItemTypeId(Gjp),"when calling get in InventoryClass, line 29")
set qW=qW-1
set fjp=Yjp
set qW=qW-1
set ojp=fjp
set Ojp="when calling addToSlot in InventoryClass, line 40"
set aW[qW]=Ojp
set qW=qW+1
if XF[Sjp]==0 then
if Sjp==0 then
call L8c("Nullpointer exception when calling Inventory.addToSlot","when calling error in InventoryClass, line 12")
else
call L8c("Called Inventory.addToSlot on invalid object.","when calling error in InventoryClass, line 12")
endif
endif
set ljp=Sjp
set bjp=cjp
set yjp=ojp
set pjp="when calling addToSlot in InventoryClass, line 12"
set aW[qW]=pjp
set qW=qW+1
call jNr(ljp,bjp,yjp,"when writing array Inventory_inventory in InventoryClass, line 13")
set ejp=Sv[ljp]
set qjp=yjp
call UnitAddAbility(ejp,qjp)
set qW=qW-1
set qW=qW-1
endif
set Bkp=Bkp+1
endloop
set qW=qW-1
set Nkp=null
set tjp=null
set ejp=null
set njp=null
set Rjp=null
set Gjp=null
endfunction
function Qkl takes integer jkl,integer xkl,string vkl returns integer
local integer mkl
if xkl<0 or xkl>=4 then
call L8c("Index out of Bounds",vkl)
elseif xkl<=1 then
if xkl<=0 then
set mkl=vW[jkl]
else
set mkl=mW[jkl]
endif
elseif xkl<=2 then
set mkl=QW[jkl]
else
set mkl=WW[jkl]
endif
return mkl
endfunction
function aHw takes integer YDw,integer GDw,integer gDw,integer hDw,string FDw returns nothing
local unit kDw
local integer jDw
local integer xDw
local integer vDw
local integer mDw
local string QDw
local integer WDw
local integer EDw
local integer ZDw
local unit UDw
local integer IDw
local unit PDw
local integer ADw
local integer DDw
local integer HDw
local integer JDw
local integer KDw
local string LDw
local integer XDw
local integer CDw
local integer VDw
local integer BDw
local unit NDw
local integer MDw
local unit wHw
local integer uHw
local integer rHw
local integer sHw
local integer tHw
local integer iHw
local integer SHw
local integer cHw
local integer oHw
local integer OHw
local integer lHw
local integer bHw
local integer yHw
local integer pHw
local integer eHw
local integer qHw
set aW[qW]=FDw
set qW=qW+1
set kDw=Ix[YDw]
set jDw=gDw
if GetUnitAbilityLevel(kDw,jDw)>0 then
set xDw=YDw
set rHw=GDw
set sHw=gDw
set tHw=hDw
set vDw=sHw
set mDw=tHw
set QDw="when calling disableIcon in HeroIconsClass, line 35"
set aW[qW]=QDw
set qW=qW+1
if LF[xDw]==0 then
if xDw==0 then
call L8c("Nullpointer exception when calling HeroIcons.disableIcon","when calling error in HeroIconsClass, line 42")
else
call L8c("Called HeroIcons.disableIcon on invalid object.","when calling error in HeroIconsClass, line 42")
endif
endif
set WDw=xDw
set iHw=vDw
set SHw=mDw
set EDw=iHw
set ZDw=SHw
set UDw=Ix[WDw]
set IDw=EDw
call UnitRemoveAbility(UDw,IDw)
set PDw=Ix[WDw]
set ADw=ZDw
call UnitAddAbility(PDw,ADw)
set qW=qW-1
else
set DDw=YDw
set cHw=GDw
set oHw=gDw
set OHw=hDw
set HDw=cHw
set JDw=oHw
set KDw=OHw
set LDw="when calling enableIcon in HeroIconsClass, line 37"
set aW[qW]=LDw
set qW=qW+1
if LF[DDw]==0 then
if DDw==0 then
call L8c("Nullpointer exception when calling HeroIcons.enableIcon","when calling error in HeroIconsClass, line 46")
else
call L8c("Called HeroIcons.enableIcon on invalid object.","when calling error in HeroIconsClass, line 46")
endif
endif
set XDw=DDw
set lHw=HDw
set bHw=JDw
set yHw=KDw
set CDw=lHw
set VDw=bHw
set BDw=yHw
set NDw=Ix[XDw]
set MDw=BDw
call UnitRemoveAbility(NDw,MDw)
set wHw=Ix[XDw]
set uHw=VDw
call UnitAddAbility(wHw,uHw)
set pHw=CDw
set eHw=VDw
set qHw=BDw
set Px[XDw]=pHw
set Ax[XDw]=eHw
set Dx[XDw]=qHw
set qW=qW-1
endif
set qW=qW-1
set kDw=null
set UDw=null
set PDw=null
set NDw=null
set wHw=null
endfunction
function iFy takes integer phy,integer ehy,string qhy returns boolean
local boolean ahy
local integer nhy
local integer dhy
local integer fhy
local integer Rhy
local integer Thy
local string Yhy
local integer Ghy
local integer ghy
local integer hhy
local integer Fhy
local integer khy
local string jhy
local unit xhy
local integer vhy
local integer mhy
local integer Qhy
local integer Why
local string Ehy
local integer Zhy
local integer Uhy
local integer Ihy
local unit Phy
local integer Ahy
local unit Dhy
local integer Hhy
local integer Jhy
local integer Khy
local integer Lhy
local integer Xhy
local integer Chy
local integer Vhy
local integer Bhy
local integer Nhy
local integer Mhy
local integer wFy
local integer uFy
local integer rFy
local integer sFy
local integer tFy
set aW[qW]=qhy
set qW=qW+1
set ahy=false
set Thy=phy
set Yhy="when calling clearActiveHero in HeroIconsClass, line 19"
set aW[qW]=Yhy
set qW=qW+1
if LF[Thy]==0 then
if Thy==0 then
call L8c("Nullpointer exception when calling HeroIcons.clearActiveHero","when calling error in HeroIconsClass, line 39")
else
call L8c("Called HeroIcons.clearActiveHero on invalid object.","when calling error in HeroIconsClass, line 39")
endif
endif
set Ghy=Thy
set Jhy=0
set Khy=0
set Lhy=0
set Px[Ghy]=Jhy
set Ax[Ghy]=Khy
set Dx[Ghy]=Lhy
set qW=qW-1
set nhy=0
loop
exitwhen nhy>3
set Xhy=Qkl(phy,nhy,"when reading array HeroIcons_allHeroes_heroId in  in HeroIconsClass, line 21")
set Chy=W5y(phy,nhy,"when reading array HeroIcons_allHeroes_activeIconId in  in HeroIconsClass, line 21")
set Vhy=Xxp(phy,nhy,"when reading array HeroIcons_allHeroes_disabledIconId in  in HeroIconsClass, line 21")
set dhy=Xhy
set fhy=Chy
set Rhy=Vhy
if fhy==ehy or Rhy==ehy then
if Rhy==ehy then
set ahy=true
endif
set ghy=phy
set Bhy=dhy
set Nhy=fhy
set Mhy=Rhy
set hhy=Bhy
set Fhy=Nhy
set khy=Mhy
set jhy="when calling toggleIcon in HeroIconsClass, line 25"
set aW[qW]=jhy
set qW=qW+1
if LF[ghy]==0 then
if ghy==0 then
call L8c("Nullpointer exception when calling HeroIcons.toggleIcon","when calling error in HeroIconsClass, line 33")
else
call L8c("Called HeroIcons.toggleIcon on invalid object.","when calling error in HeroIconsClass, line 33")
endif
endif
call aHw(ghy,hhy,Fhy,khy,"when calling toggleIcon in HeroIconsClass, line 33")
set qW=qW-1
else
set xhy=Ix[phy]
set vhy=fhy
if GetUnitAbilityLevel(xhy,vhy)>0 then
set mhy=phy
set wFy=dhy
set uFy=fhy
set rFy=Rhy
set Qhy=uFy
set Why=rFy
set Ehy="when calling disableIcon in HeroIconsClass, line 27"
set aW[qW]=Ehy
set qW=qW+1
if LF[mhy]==0 then
if mhy==0 then
call L8c("Nullpointer exception when calling HeroIcons.disableIcon","when calling error in HeroIconsClass, line 42")
else
call L8c("Called HeroIcons.disableIcon on invalid object.","when calling error in HeroIconsClass, line 42")
endif
endif
set Zhy=mhy
set sFy=Qhy
set tFy=Why
set Uhy=sFy
set Ihy=tFy
set Phy=Ix[Zhy]
set Ahy=Uhy
call UnitRemoveAbility(Phy,Ahy)
set Dhy=Ix[Zhy]
set Hhy=Ihy
call UnitAddAbility(Dhy,Hhy)
set qW=qW-1
endif
endif
set nhy=nhy+1
endloop
set qW=qW-1
set xhy=null
set Phy=null
set Dhy=null
return ahy
endfunction
function ryi takes string Tbi returns nothing
local integer Ybi
local integer Gbi
local unit gbi
local integer hbi
local integer Fbi
local player kbi
local integer jbi
local integer xbi
local string vbi
local boolean mbi
local integer Qbi
local string Wbi
local integer Ebi
local string Zbi
local integer Ubi
local integer Ibi
local integer Pbi
local string Abi
local boolean Dbi
local integer Hbi
local string Jbi
local integer Kbi
local integer Lbi
local integer Xbi
local unit Cbi
local string Vbi
local boolean Bbi
local integer Nbi
local integer Mbi
local integer wyi
local integer uyi
set aW[qW]=Tbi
set qW=qW+1
set kbi=GetTriggerPlayer()
set Ybi=GetPlayerId(kbi)+4
set Gbi=GetSpellAbilityId()
if En[Ybi]!=0 then
set jbi=Zn[Ybi]
set xbi=Gbi
set vbi="when calling check in ItemMerchantSell, line 29"
set aW[qW]=vbi
set qW=qW+1
if LF[jbi]==0 then
if jbi==0 then
call L8c("Nullpointer exception when calling HeroIcons.check","when calling error in HeroIconsClass, line 51")
else
call L8c("Called HeroIcons.check on invalid object.","when calling error in HeroIconsClass, line 51")
endif
endif
set mbi=bVe(jbi,xbi,"when calling check in HeroIconsClass, line 51")
set qW=qW-1
set Bbi=mbi
else
set Bbi=false
endif
if Bbi then
set Qbi=En[Ybi]
set Wbi="when calling clearInventory in ItemMerchantSell, line 30"
set aW[qW]=Wbi
set qW=qW+1
if XF[Qbi]==0 then
if Qbi==0 then
call L8c("Nullpointer exception when calling Inventory.clearInventory","when calling error in InventoryClass, line 31")
else
call L8c("Called Inventory.clearInventory on invalid object.","when calling error in InventoryClass, line 31")
endif
endif
set Ebi=Qbi
set Zbi="when calling clearInventory in InventoryClass, line 31"
set aW[qW]=Zbi
set qW=qW+1
set Ubi=0
loop
exitwhen Ubi>5
call yUl(Ebi,Ubi,"when calling removeFromSlot in InventoryClass, line 33")
set Ubi=Ubi+1
endloop
set qW=qW-1
set qW=qW-1
set Ibi=Zn[Ybi]
set Pbi=Gbi
set Abi="when calling click in ItemMerchantSell, line 31"
set aW[qW]=Abi
set qW=qW+1
if LF[Ibi]==0 then
if Ibi==0 then
call L8c("Nullpointer exception when calling HeroIcons.click","when calling error in HeroIconsClass, line 17")
else
call L8c("Called HeroIcons.click on invalid object.","when calling error in HeroIconsClass, line 17")
endif
endif
set Dbi=iFy(Ibi,Pbi,"when calling click in HeroIconsClass, line 17")
set qW=qW-1
if Dbi then
set Fbi=mG
set Hbi=Zn[Ybi]
set Jbi="when calling getActiveHero in ItemMerchantSell, line 32"
set aW[qW]=Jbi
set qW=qW+1
if LF[Hbi]==0 then
if Hbi==0 then
call L8c("Nullpointer exception when calling HeroIcons.getActiveHero","when calling error in HeroIconsClass, line 30")
else
call L8c("Called HeroIcons.getActiveHero on invalid object.","when calling error in HeroIconsClass, line 30")
endif
endif
set Lbi=Hbi
set Nbi=Px[Lbi]
set Mbi=Ax[Lbi]
set wyi=Dx[Lbi]
set Kbi=Nbi
set qW=qW-1
set uyi=Kbi
set hbi=uyi
set gbi=Uqc(gar(Fbi,hbi,"when calling get in ItemMerchantSell, line 32"),"when calling unitFromIndex in ItemMerchantSell, line 32")
if gbi!=null then
set Xbi=En[Ybi]
set Cbi=gbi
set Vbi="when calling renderUnitInventory in ItemMerchantSell, line 34"
set aW[qW]=Vbi
set qW=qW+1
if XF[Xbi]==0 then
if Xbi==0 then
call L8c("Nullpointer exception when calling Inventory.renderUnitInventory","when calling error in InventoryClass, line 35")
else
call L8c("Called Inventory.renderUnitInventory on invalid object.","when calling error in InventoryClass, line 35")
endif
endif
call hjp(Xbi,Cbi,"when calling renderUnitInventory in InventoryClass, line 35")
set qW=qW-1
endif
endif
endif
set qW=qW-1
set gbi=null
set kbi=null
set Cbi=null
endfunction
function DWy takes nothing returns nothing
set qW=0
call ryi("via function reference ItemMerchantSell, line 26")
endfunction
function DYu takes nothing returns boolean
return true
endfunction
function DZl takes nothing returns boolean
return true
endfunction
function onS takes string GaS returns nothing
local unit gaS
local integer haS
local integer FaS
local unit kaS
local unit jaS
local unit xaS
local unit vaS
local unit maS
local unit QaS
local unit WaS
local real EaS
local unit ZaS
local unitstate UaS
local real IaS
local unit PaS
local unitstate AaS
local unit DaS
local integer HaS
local unit JaS
local integer KaS
local integer LaS
local unit XaS
local string CaS
local widget VaS
local string BaS
local integer NaS
local real MaS
local integer wnS
local string unS
local boolean rnS
local boolean snS
local boolean tnS
local boolean inS
local unit SnS
local unitstate cnS
set aW[qW]=GaS
set qW=qW+1
set gaS=GetKillingUnit()
set kaS=gaS
set haS=GetPlayerTechCount(GetOwningPlayer(kaS),$52303548,true)
if haS>0 then
set jaS=gaS
if GetUnitTypeId(jaS)==$6F303249 then
set rnS=true
else
set xaS=gaS
set rnS=GetUnitTypeId(xaS)==$6F30324C
endif
if rnS then
set snS=true
else
set vaS=gaS
set snS=GetUnitTypeId(vaS)==$65303036
endif
if snS then
set tnS=true
else
set maS=gaS
set tnS=GetUnitTypeId(maS)==$6E303130
endif
if tnS then
set inS=true
else
set QaS=gaS
set inS=GetUnitTypeId(QaS)==$6E303147
endif
if inS then
set WaS=gaS
set EaS=I2R(30*haS)
set ZaS=WaS
set UaS=UNIT_STATE_LIFE
set IaS=EaS
set SnS=ZaS
set cnS=UaS
set PaS=ZaS
set AaS=UaS
call SetUnitState(SnS,cnS,GetUnitState(PaS,AaS)+IaS)
set DaS=gaS
set HaS=$41305649
call UnitAddAbility(DaS,HaS)
set JaS=gaS
set KaS=$41305649
set LaS=haS
call SetUnitAbilityLevel(JaS,KaS,LaS)
set XaS=gaS
set CaS="bloodlust"
set VaS=gaS
call IssueTargetOrder(XaS,CaS,VaS)
set BaS="when calling alloc_CallbackSingle_doAfter_Devour in Devour, line 126"
set aW[qW]=BaS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set NaS=fF
set RF[NaS]=702
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Devour.","when calling error in Devour, line 126")
set NaS=0
endif
else
set dF=dF-1
set NaS=nF[dF]
set RF[NaS]=702
endif
set qW=qW-1
set FaS=NaS
set hj[FaS]=gaS
set MaS=2.
set wnS=FaS
set unS="when calling doAfter in Devour, line 126"
set aW[qW]=unS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),MaS,wnS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set gaS=null
set kaS=null
set jaS=null
set xaS=null
set vaS=null
set maS=null
set QaS=null
set WaS=null
set ZaS=null
set UaS=null
set PaS=null
set AaS=null
set DaS=null
set JaS=null
set XaS=null
set VaS=null
set SnS=null
set cnS=null
endfunction
function DZo takes nothing returns nothing
set qW=0
call onS("via function reference Devour, line 132")
endfunction
function D_r takes nothing returns nothing
local rect A_r=Ic
set Xo[3]=Location(GetRectCenterX(A_r),GetRectCenterY(A_r))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set A_r=null
endfunction
function Dbc takes nothing returns boolean
return true
endfunction
function Dci takes nothing returns boolean
local unit Zci=GetFilterUnit()
local unit Uci=Zci
local unit Ici
local player Pci
local boolean Aci
if UnitAlive(Uci)==true then
set Ici=Zci
set Pci=oh
set Aci=IsUnitEnemy(Ici,Pci)==true
else
set Aci=false
endif
set Zci=null
set Uci=null
set Ici=null
set Pci=null
return Aci
endfunction
function jWu takes unit TWu returns integer
local integer YWu=0
local integer GWu=0
local unit hWu=TWu
local integer gWu=UnitInventorySize(hWu)-1
local unit FWu
local integer kWu
loop
exitwhen GWu>gWu
set FWu=TWu
set kWu=GWu
if UnitItemInSlot(FWu,kWu)!=null then
set YWu=YWu+1
endif
set GWu=GWu+1
endloop
set hWu=null
set FWu=null
return YWu
endfunction
function kHw takes string fHw returns integer
local integer RHw
local string THw
local integer YHw
local integer GHw
local string gHw
local integer hHw
local string FHw
set aW[qW]=fHw
set qW=qW+1
set THw="when calling alloc_LinkedList in LinkedList, line 32"
set aW[qW]=THw
set qW=qW+1
if Sk==0 then
if ck<32768 then
set ck=ck+1
set YHw=ck
set ok[YHw]=1026
else
call L8c("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 18")
set YHw=0
endif
else
set Sk=Sk-1
set YHw=ik[Sk]
set ok[YHw]=1026
endif
set qW=qW-1
set RHw=YHw
set GHw=RHw
set gHw="when calling construct_LinkedList2 in LinkedList, line 32"
set aW[qW]=gHw
set qW=qW+1
set hHw=GHw
set FHw="when calling LinkedList_init in LinkedList, line 32"
set aW[qW]=FHw
set qW=qW+1
set Vv[hHw]=jMe(0,0,0,"when calling new_LLEntry in LinkedList, line 19")
set Bv[hHw]=0
set qW=qW-1
set Kv[Vv[GHw]]=Vv[GHw]
set Jv[Vv[GHw]]=Vv[GHw]
set qW=qW-1
set qW=qW-1
return RHw
endfunction
function nye takes integer Vbe,integer Bbe,integer Nbe,integer Mbe,integer wye,integer uye,integer rye,integer sye,integer tye,string iye returns nothing
local integer Sye
local integer cye
local integer oye
local integer Oye
local integer lye
local integer bye
local integer yye
local integer pye
local integer eye
local string qye
local integer aye
set aW[qW]=iye
set qW=qW+1
if ok[Vbe]==0 then
if Vbe==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set Sye=Vbe
set cye=Bbe
set oye=Nbe
set Oye=Mbe
set lye=wye
set bye=uye
set yye=rye
set pye=sye
set eye=tye
set qye="when calling add in LinkedList, line 38"
set aW[qW]=qye
set qW=qW+1
set aye=jMe(cye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(oye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(Oye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(lye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(bye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(yye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(pye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set aye=jMe(eye,Jv[Vv[Sye]],Vv[Sye],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[Sye]]]=aye
set Jv[Vv[Sye]]=aye
set Bv[Sye]=Bv[Sye]+1
set qW=qW-1
set qW=qW-1
endfunction
function TRw takes string onw returns nothing
local integer Onw
local integer lnw
local group bnw
local filterfunc ynw
local unit pnw
local group enw
local unit qnw
local group anw
local filterfunc nnw
local unit dnw
local group fnw
local group Rnw
local filterfunc Tnw
local unit Ynw
local group Gnw
local integer gnw
local integer hnw
local integer Fnw
local integer knw
local unit jnw
local group xnw
local filterfunc vnw
local integer mnw
local unit Qnw
local group Wnw
local integer Enw
local player Znw
local player Unw
local playerstate Inw
local unit Pnw
local player Anw
local integer Dnw
local player Hnw
local playerstate Jnw
local integer Knw
local unit Lnw
local player Xnw
local player Cnw
local playerstate Vnw
local unit Bnw
local unit Nnw
local integer Mnw
local unit wdw
local unit udw
local player rdw
local player sdw
local playerstate tdw
local unit idw
local player Sdw
local integer cdw
local player odw
local playerstate Odw
local integer ldw
local unit bdw
local player ydw
local player pdw
local playerstate edw
local unit qdw
local unit adw
local integer ndw
local unit ddw
local unit fdw
local unit Rdw
local integer Tdw
local sound Ydw
local string Gdw
local group gdw
local group hdw
local unit Fdw
local unit kdw
local real jdw
local unit xdw
local unitstate vdw
local real mdw
local unit Qdw
local unitstate Wdw
local group Edw
local boolexpr Zdw
local sound Udw
local string Idw
local unit Pdw
local unit Adw
local unit Ddw
local unit Hdw
local integer Jdw
local unit Kdw
local real Ldw
local sound Xdw
local string Cdw
local group Vdw
local group Bdw
local unit Ndw
local unit Mdw
local real wfw
local unit ufw
local unitstate rfw
local real sfw
local unit tfw
local unit ifw
local unitstate Sfw
local group cfw
local boolexpr ofw
local sound Ofw
local string lfw
local group bfw
local group yfw
local unit pfw
local integer efw
local string qfw
local integer afw
local string nfw
local integer dfw
local integer ffw
local unit Rfw
local integer Tfw
local group Yfw
local boolexpr Gfw
local sound gfw
local string hfw
local sound Ffw
local string kfw
local unit jfw
local integer xfw
local unit vfw
local integer mfw
local unit Qfw
local integer Wfw
local unit Efw
local integer Zfw
local unit Ufw
local integer Ifw
local integer Pfw
local unit Afw
local integer Dfw
local unit Hfw
local integer Jfw
local integer Kfw
local unit Lfw
local integer Xfw
local unit Cfw
local integer Vfw
local integer Bfw
local unit Nfw
local integer Mfw
local unit wRw
local integer uRw
local integer rRw
local string sRw
local sound tRw
local group iRw
local group SRw
local unit cRw
local unit oRw
local group ORw
local boolexpr lRw
local unit bRw
local integer yRw
local integer pRw
local unit eRw
local integer qRw
local integer aRw
local unit nRw
local unitstate dRw
local player fRw
local real RRw
set aW[qW]=onw
set qW=qW+1
set Onw=GetSpellAbilityId()
if Onw==$414D306C then
set Pnw=Xl
set Znw=GetOwningPlayer(Pnw)
set Unw=Znw
set Inw=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(Unw,Inw)>1000 then
set Lnw=Xl
set Anw=GetOwningPlayer(Lnw)
set Bnw=Xl
set Xnw=GetOwningPlayer(Bnw)
set Cnw=Xnw
set Vnw=PLAYER_STATE_RESOURCE_GOLD
set Dnw=GetPlayerState(Cnw,Vnw)-1000
set Hnw=Anw
set Jnw=PLAYER_STATE_RESOURCE_GOLD
set Knw=Dnw
call SetPlayerState(Hnw,Jnw,Knw)
set Nnw=Xl
set Mnw=$414D306A
call IncUnitAbilityLevel(Nnw,Mnw)
set wdw=Xl
call DisplayTextToPlayer(GetOwningPlayer(wdw),0.,0.,"|cffFFFF00Buy Light Orb|r")
set Cl=Cl+1
else
set udw=Xl
call DisplayTextToPlayer(GetOwningPlayer(udw),0.,0.,"|cffFFFF00Not enough gold|r")
endif
endif
if Onw==$414D306D then
set idw=Xl
set rdw=GetOwningPlayer(idw)
set sdw=rdw
set tdw=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(sdw,tdw)>1000 then
set bdw=Xl
set Sdw=GetOwningPlayer(bdw)
set qdw=Xl
set ydw=GetOwningPlayer(qdw)
set pdw=ydw
set edw=PLAYER_STATE_RESOURCE_GOLD
set cdw=GetPlayerState(pdw,edw)-1000
set odw=Sdw
set Odw=PLAYER_STATE_RESOURCE_GOLD
set ldw=cdw
call SetPlayerState(odw,Odw,ldw)
set adw=Xl
set ndw=$414D306B
call IncUnitAbilityLevel(adw,ndw)
set ddw=Xl
call DisplayTextToPlayer(GetOwningPlayer(ddw),0.,0.,"|cff800080Buy Dark Orb|r")
set Cl=Cl+1
else
set fdw=Xl
call DisplayTextToPlayer(GetOwningPlayer(fdw),0.,0.,"|cffFFFF00Not enough gold|r")
endif
endif
if Cl>5 and Onw==$414D306C or Onw==$414D306D then
set Rdw=Xl
set Tdw=$414D306A
set lnw=GetUnitAbilityLevel(Rdw,Tdw)
if lnw==7 then
set Ydw=ml
if Ydw!=null then
call StartSound(Ydw)
endif
set Gdw="Live, Insect!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Gdw)
set bnw=CreateGroup()
set ynw=Filter(h3)
call GroupEnumUnitsInRect(bnw,bj_mapInitialPlayableArea,ynw)
set enw=bnw
loop
set gdw=enw
exitwhen not (FirstOfGroup(gdw)!=null)
set hdw=enw
set Fdw=FirstOfGroup(hdw)
call GroupRemoveUnit(hdw,Fdw)
set pnw=Fdw
set kdw=pnw
set jdw=10000.
set xdw=kdw
set vdw=UNIT_STATE_LIFE
set mdw=jdw
set nRw=xdw
set dRw=vdw
set Qdw=xdw
set Wdw=vdw
call SetUnitState(nRw,dRw,GetUnitState(Qdw,Wdw)+mdw)
endloop
set Edw=bnw
call DestroyGroup(Edw)
set Zdw=ynw
call DestroyBoolExpr(Zdw)
endif
if lnw==6 then
set Udw=Ql
if Udw!=null then
call StartSound(Udw)
endif
set Idw="Unlimited Mana"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Idw)
set Pdw=Xl
set fRw=GetOwningPlayer(Pdw)
set Adw=Xl
set RRw=GetUnitX(Adw)
set Ddw=Xl
set qnw=CreateUnit(fRw,$75303030,RRw,GetUnitY(Ddw),0.)
set Hdw=qnw
set Jdw=$414D306E
call UnitAddAbility(Hdw,Jdw)
set Kdw=qnw
set Ldw=60.
call UnitApplyTimedLife(Kdw,$42544C46,Ldw)
endif
if lnw==5 then
set Xdw=Wl
if Xdw!=null then
call StartSound(Xdw)
endif
set Cdw="Total Annihilation"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Cdw)
set anw=CreateGroup()
set nnw=Filter(F3)
call GroupEnumUnitsInRect(anw,bj_mapInitialPlayableArea,nnw)
set fnw=anw
loop
set Vdw=fnw
exitwhen not (FirstOfGroup(Vdw)!=null)
set Bdw=fnw
set Ndw=FirstOfGroup(Bdw)
call GroupRemoveUnit(Bdw,Ndw)
set dnw=Ndw
set Mdw=dnw
set tfw=dnw
set ifw=tfw
set Sfw=UNIT_STATE_LIFE
set wfw=GetUnitState(ifw,Sfw)-1000.
set ufw=Mdw
set rfw=UNIT_STATE_LIFE
set sfw=wfw
call SetUnitState(ufw,rfw,sfw)
endloop
set cfw=anw
call DestroyGroup(cfw)
set ofw=nnw
call DestroyBoolExpr(ofw)
endif
if lnw==4 then
set Ofw=El
if Ofw!=null then
call StartSound(Ofw)
endif
set lfw="True Balance"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,lfw)
set Rnw=CreateGroup()
set Tnw=Filter(k3)
call GroupEnumUnitsInRect(Rnw,bj_mapInitialPlayableArea,Tnw)
set Gnw=Rnw
loop
set bfw=Gnw
exitwhen not (FirstOfGroup(bfw)!=null)
set yfw=Gnw
set pfw=FirstOfGroup(yfw)
call GroupRemoveUnit(yfw,pfw)
set Ynw=pfw
if jWu(Ynw)<6 then
set gnw=kHw("when calling new_LinkedList in BoxArakkoa, line 408")
call nye(gnw,$494D3038,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in BoxArakkoa, line 409")
set efw=gnw
set qfw="when calling shuffle in BoxArakkoa, line 410"
set aW[qW]=qfw
set qW=qW+1
if ok[efw]==0 then
if efw==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(efw,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set afw=gnw
set nfw="when calling getFirst in BoxArakkoa, line 411"
set aW[qW]=nfw
set qW=qW+1
if ok[afw]==0 then
if afw==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set ffw=afw
set dfw=Hv[Kv[Vv[ffw]]]
set qW=qW-1
set hnw=dfw
set Rfw=Ynw
set Tfw=hnw
call UnitAddItemById(Rfw,Tfw)
endif
endloop
set Yfw=Rnw
call DestroyGroup(Yfw)
set Gfw=Tnw
call DestroyBoolExpr(Gfw)
endif
if lnw==3 then
set gfw=Zl
if gfw!=null then
call StartSound(gfw)
endif
set hfw="Madness"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,hfw)
set Fnw=1
loop
exitwhen Fnw>30
set knw=GetRandomInt(1,6)
if knw==1 then
call CreateUnit(Player(12),$68303149,-4800.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if knw==2 then
call CreateUnit(Player(12),$68303149,60.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if knw==3 then
call CreateUnit(Player(12),$68303149,4800.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if knw==4 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),4900.,0.)
endif
if knw==5 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),80.,0.)
endif
if knw==6 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),-4700.,0.)
endif
set Fnw=Fnw+1
endloop
endif
if lnw==2 then
set Ffw=Ul
if Ffw!=null then
call StartSound(Ffw)
endif
set kfw="Two head is better"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,kfw)
set jnw=CreateUnit(Player(12),$484D3031,60.,80.,0.)
call SetHeroLevel(jnw,28,true)
set jfw=jnw
set xfw=$494D3031
call UnitAddItemById(jfw,xfw)
set vfw=jnw
set mfw=$494D3034
call UnitAddItemById(vfw,mfw)
set Qfw=jnw
set Wfw=$494D3036
call UnitAddItemById(Qfw,Wfw)
set Efw=jnw
set Zfw=$414F7732
call UnitAddAbility(Efw,Zfw)
set Ufw=jnw
set Ifw=$414F7732
set Pfw=7
call SetUnitAbilityLevel(Ufw,Ifw,Pfw)
set Afw=jnw
set Dfw=$41304D32
call UnitAddAbility(Afw,Dfw)
set Hfw=jnw
set Jfw=$41304D32
set Kfw=7
call SetUnitAbilityLevel(Hfw,Jfw,Kfw)
set Lfw=jnw
set Xfw=$41303334
call UnitAddAbility(Lfw,Xfw)
set Cfw=jnw
set Vfw=$41303334
set Bfw=7
call SetUnitAbilityLevel(Cfw,Vfw,Bfw)
set Nfw=jnw
set Mfw=$41303345
call UnitAddAbility(Nfw,Mfw)
set wRw=jnw
set uRw=$41303345
set rRw=7
call SetUnitAbilityLevel(wRw,uRw,rRw)
endif
if lnw==1 then
set sRw="The Fool"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,sRw)
set tRw=Il
if tRw!=null then
call StartSound(tRw)
endif
set xnw=CreateGroup()
set vnw=Filter(h3)
call GroupEnumUnitsInRect(xnw,bj_mapInitialPlayableArea,vnw)
set mnw=0
loop
exitwhen mnw>7
set Zw[mnw]=true
set mnw=mnw+1
endloop
set Wnw=xnw
loop
set iRw=Wnw
exitwhen not (FirstOfGroup(iRw)!=null)
set SRw=Wnw
set cRw=FirstOfGroup(SRw)
call GroupRemoveUnit(SRw,cRw)
set Qnw=cRw
set oRw=Qnw
call KillUnit(oRw)
endloop
set ORw=xnw
call DestroyGroup(ORw)
set lRw=vnw
call DestroyBoolExpr(lRw)
set Enw=0
loop
exitwhen Enw>7
set Zw[Enw]=false
set Enw=Enw+1
endloop
endif
set bRw=Xl
set yRw=$414D306A
set pRw=1
call SetUnitAbilityLevel(bRw,yRw,pRw)
set eRw=Xl
set qRw=$414D306B
set aRw=1
call SetUnitAbilityLevel(eRw,qRw,aRw)
set Cl=0
endif
set qW=qW-1
set bnw=null
set ynw=null
set pnw=null
set enw=null
set qnw=null
set anw=null
set nnw=null
set dnw=null
set fnw=null
set Rnw=null
set Tnw=null
set Ynw=null
set Gnw=null
set jnw=null
set xnw=null
set vnw=null
set Qnw=null
set Wnw=null
set Znw=null
set Unw=null
set Inw=null
set Pnw=null
set Anw=null
set Hnw=null
set Jnw=null
set Lnw=null
set Xnw=null
set Cnw=null
set Vnw=null
set Bnw=null
set Nnw=null
set wdw=null
set udw=null
set rdw=null
set sdw=null
set tdw=null
set idw=null
set Sdw=null
set odw=null
set Odw=null
set bdw=null
set ydw=null
set pdw=null
set edw=null
set qdw=null
set adw=null
set ddw=null
set fdw=null
set Rdw=null
set Ydw=null
set gdw=null
set hdw=null
set Fdw=null
set kdw=null
set xdw=null
set vdw=null
set Qdw=null
set Wdw=null
set Edw=null
set Zdw=null
set Udw=null
set Pdw=null
set Adw=null
set Ddw=null
set Hdw=null
set Kdw=null
set Xdw=null
set Vdw=null
set Bdw=null
set Ndw=null
set Mdw=null
set ufw=null
set rfw=null
set tfw=null
set ifw=null
set Sfw=null
set cfw=null
set ofw=null
set Ofw=null
set bfw=null
set yfw=null
set pfw=null
set Rfw=null
set Yfw=null
set Gfw=null
set gfw=null
set Ffw=null
set jfw=null
set vfw=null
set Qfw=null
set Efw=null
set Ufw=null
set Afw=null
set Hfw=null
set Lfw=null
set Cfw=null
set Nfw=null
set wRw=null
set tRw=null
set iRw=null
set SRw=null
set cRw=null
set oRw=null
set ORw=null
set lRw=null
set bRw=null
set eRw=null
set nRw=null
set dRw=null
set fRw=null
endfunction
function DeS takes nothing returns nothing
set qW=0
call TRw("via function reference BoxArakkoa, line 521")
endfunction
function Dgi takes nothing returns boolean
local unit Ugi=GetFilterUnit()
local unit Igi=Ugi
local unit Pgi
local boolean Agi
if UnitAlive(Igi) then
set Pgi=Ugi
set Agi=GetUnitTypeId(Pgi)==$4F303438
else
set Agi=false
endif
set Ugi=null
set Igi=null
set Pgi=null
return Agi
endfunction
function Dgu takes nothing returns nothing
local unit ngu=GetDyingUnit()
local unit Rgu=ngu
local location dgu
local unit fgu
local location Tgu
local string Ygu
local texttag Ggu
local boolean ggu
local texttag hgu
local real Fgu
local texttag kgu
local real jgu
local unit xgu
local unit vgu
local unit mgu
local integer Qgu
local unit Wgu
local integer Egu
local real Zgu
local integer Ugu
local unit Igu
local player Pgu
local real Agu
if GetUnitTypeId(Rgu)==$45303039 and GetHeroLevel(ngu)>=14 then
set dgu=GetUnitLoc(GetDyingUnit())
set Tgu=dgu
set Ygu="Star of Hope.mdx"
set bj_lastCreatedEffect=AddSpecialEffectLoc(Ygu,Tgu)
call DestroyEffect(bj_lastCreatedEffect)
call CreateTextTagLocBJ("Elven Tear",dgu,0.,10.,100.,0.,0.,0.)
call SetTextTagVelocityBJ(bj_lastCreatedTextTag,40.,90.)
set Ggu=bj_lastCreatedTextTag
set ggu=false
call SetTextTagPermanent(Ggu,ggu)
set hgu=bj_lastCreatedTextTag
set Fgu=7.
call SetTextTagLifespan(hgu,Fgu)
set kgu=bj_lastCreatedTextTag
set jgu=4.
call SetTextTagFadepoint(kgu,jgu)
set xgu=ngu
set Pgu=GetOwningPlayer(xgu)
set vgu=ngu
set Agu=GetUnitX(vgu)
set mgu=ngu
set fgu=CreateUnit(Pgu,$75303030,Agu,GetUnitY(mgu),0.)
call UnitAddAbility(fgu,$41726F61)
set Qgu=$41726F61
set Wgu=fgu
set Egu=3
call SetUnitAbilityLevel(Wgu,Qgu,Egu)
call IssueImmediateOrderById(fgu,852164)
set Zgu=5.
set Ugu=$42544C46
set Igu=fgu
call UnitApplyTimedLife(Igu,Ugu,Zgu)
call RemoveLocation(dgu)
endif
set ngu=null
set dgu=null
set fgu=null
set Rgu=null
set Tgu=null
set Ggu=null
set hgu=null
set kgu=null
set xgu=null
set vgu=null
set mgu=null
set Wgu=null
set Igu=null
set Pgu=null
endfunction
function DjO takes nothing returns boolean
return true
endfunction
function Dlw takes nothing returns nothing
local unit MOw=GetDyingUnit()
local unit rlw=MOw
local texttag wlw
local unit ulw
local texttag slw
local real tlw
local real ilw
local real Slw
local unit clw
local unit olw
local texttag Olw
local integer llw
local integer blw
local integer ylw
local integer plw
local texttag elw
local real qlw
local texttag alw
local real nlw
local texttag dlw
local boolean flw
local texttag Rlw
local boolean Tlw
local texttag Ylw
local string Glw
local real glw
local texttag hlw
local real Flw
local real klw
local unit jlw
local unit xlw
local unit vlw
local unit mlw
local integer Qlw
local unit Wlw
local integer Elw
local integer Zlw
local unit Ulw
local real Ilw
local player Plw
local real Alw
if GetUnitTypeId(rlw)==$5530304A and GetHeroLevel(MOw)>=8 then
set wlw=CreateTextTag()
set slw=wlw
set clw=MOw
set tlw=GetUnitX(clw)
set olw=MOw
set ilw=GetUnitY(olw)
set Slw=50.
call SetTextTagPos(slw,tlw,ilw,Slw)
set Olw=wlw
set llw=128
set blw=0
set ylw=128
set plw=255
call SetTextTagColor(Olw,llw,blw,ylw,plw)
set elw=wlw
set qlw=6.
call SetTextTagLifespan(elw,qlw)
set alw=wlw
set nlw=4.
call SetTextTagFadepoint(alw,nlw)
set dlw=wlw
set flw=true
call SetTextTagVisibility(dlw,flw)
set Rlw=wlw
set Tlw=false
call SetTextTagPermanent(Rlw,Tlw)
set Ylw=wlw
set Glw="Soul Echo"
set glw=10.
call SetTextTagText(Ylw,Glw,glw*.0023)
set hlw=wlw
set Flw=0.
set klw=.03
call SetTextTagVelocity(hlw,Flw,klw)
set jlw=MOw
set Plw=GetOwningPlayer(jlw)
set xlw=MOw
set Alw=GetUnitX(xlw)
set vlw=MOw
set ulw=CreateUnit(Plw,$75303030,Alw,GetUnitY(vlw),0.)
set mlw=ulw
set Qlw=$41777273
call UnitAddAbility(mlw,Qlw)
set Wlw=ulw
set Elw=$41777273
set Zlw=4
call SetUnitAbilityLevel(Wlw,Elw,Zlw)
call IssueImmediateOrder(ulw,"stomp")
set Ulw=ulw
set Ilw=5.
call UnitApplyTimedLife(Ulw,$42544C46,Ilw)
endif
set MOw=null
set wlw=null
set ulw=null
set rlw=null
set slw=null
set clw=null
set olw=null
set Olw=null
set elw=null
set alw=null
set dlw=null
set Rlw=null
set Ylw=null
set hlw=null
set jlw=null
set xlw=null
set vlw=null
set mlw=null
set Wlw=null
set Ulw=null
set Plw=null
endfunction
function DmO takes nothing returns nothing
local integer GmO=GetResearched()
local group gmO
local unit hmO
local group FmO
local trigger kmO
local trigger jmO
local trigger xmO
local trigger vmO
local trigger mmO
local unit QmO
local unit WmO
local group EmO
local group ZmO
local unit UmO
local group ImO
local group PmO
local real AmO
if GmO==$52303135 then
set kmO=Bb
call EnableTrigger(kmO)
endif
if GmO==$52303136 then
set jmO=Ka
call EnableTrigger(jmO)
endif
if GmO==$52303158 then
set xmO=sy
call EnableTrigger(xmO)
endif
if GmO==$52757063 then
set vmO=gy
call EnableTrigger(vmO)
endif
if GmO==$52303448 then
set mmO=LG
call EnableTrigger(mmO)
endif
if GmO==$52303137 then
if GetPlayerTechCount(GetTriggerPlayer(),GmO,true)==1 then
set gmO=CreateGroup()
set PmO=gmO
set QmO=GetTriggerUnit()
set AmO=GetUnitX(QmO)
set WmO=GetTriggerUnit()
call GroupEnumUnitsInRange(PmO,AmO,GetUnitY(WmO),1500.,Filter(S6))
set FmO=gmO
loop
set EmO=FmO
exitwhen not (FirstOfGroup(EmO)!=null)
set ZmO=FmO
set UmO=FirstOfGroup(ZmO)
call GroupRemoveUnit(ZmO,UmO)
set hmO=UmO
call AddUnitAnimationProperties(hmO,"First",false)
call AddUnitAnimationProperties(hmO,"Second",true)
endloop
set ImO=gmO
call DestroyGroup(ImO)
endif
endif
set gmO=null
set hmO=null
set FmO=null
set kmO=null
set jmO=null
set xmO=null
set vmO=null
set mmO=null
set QmO=null
set WmO=null
set EmO=null
set ZmO=null
set UmO=null
set ImO=null
set PmO=null
endfunction
function Dnr takes nothing returns nothing
local unit Snr=GetEnteringUnit()
local unit bnr=Snr
local integer cnr=GetUnitTypeId(bnr)
local unit ynr=Snr
local player onr=GetOwningPlayer(ynr)
local integer Onr
local integer lnr
local unit pnr
local integer enr
local unit qnr
local integer anr
local integer nnr
local unit dnr
local integer fnr
local unit Rnr
local integer Tnr
local integer Ynr
local unit Gnr
local integer gnr
local unit hnr
local integer Fnr
local integer knr
local unit jnr
local integer xnr
local unit vnr
local integer mnr
local integer Qnr
local unit Wnr
local integer Enr
local unit Znr
local integer Unr
local integer Inr
local unit Pnr
local integer Anr
if cnr==$6E736B61 then
set Onr=GetPlayerTechCount(onr,$52303158,true)
set lnr=GetRandomInt(1,5)
if lnr==1 then
set pnr=Snr
set enr=$41304C47
call UnitAddAbility(pnr,enr)
set qnr=Snr
set anr=$41304C47
set nnr=Onr
call SetUnitAbilityLevel(qnr,anr,nnr)
endif
if lnr==2 then
set dnr=Snr
set fnr=$41303152
call UnitAddAbility(dnr,fnr)
set Rnr=Snr
set Tnr=$41303152
set Ynr=Onr
call SetUnitAbilityLevel(Rnr,Tnr,Ynr)
endif
if lnr==3 then
set Gnr=Snr
set gnr=$41437673
call UnitAddAbility(Gnr,gnr)
set hnr=Snr
set Fnr=$41437673
set knr=Onr
call SetUnitAbilityLevel(hnr,Fnr,knr)
endif
if lnr==4 then
set jnr=Snr
set xnr=$41304C46
call UnitAddAbility(jnr,xnr)
set vnr=Snr
set mnr=$41304C46
set Qnr=Onr
call SetUnitAbilityLevel(vnr,mnr,Qnr)
endif
if lnr==5 then
set Wnr=Snr
set Enr=$41304E32
call UnitAddAbility(Wnr,Enr)
set Znr=Snr
set Unr=$41304E32
set Inr=Onr
call SetUnitAbilityLevel(Znr,Unr,Inr)
set Pnr=Snr
set Anr=$41437361
call UnitAddAbility(Pnr,Anr)
call IssueImmediateOrderById(Snr,852174)
endif
endif
set Snr=null
set onr=null
set bnr=null
set ynr=null
set pnr=null
set qnr=null
set dnr=null
set Rnr=null
set Gnr=null
set hnr=null
set jnr=null
set vnr=null
set Wnr=null
set Znr=null
set Pnr=null
endfunction
function Dnt takes nothing returns boolean
return true
endfunction
function Dqr takes nothing returns nothing
local integer Uqr=GetResearched()
local unit Iqr
local unit Pqr
local player Aqr
if Uqr==$526E7377 then
set Iqr=GetTriggerUnit()
set Aqr=GetOwningPlayer(Iqr)
set Pqr=GetTriggerUnit()
call SetPlayerTechResearched(Aqr,$52303149,GetPlayerTechCount(GetOwningPlayer(Pqr),$526E7377,true))
endif
set Iqr=null
set Pqr=null
set Aqr=null
endfunction
function DuO takes nothing returns nothing
local unit WwO=GetAttacker()
local unit EwO=GetTriggerUnit()
local group ZwO=CreateGroup()
local unit AwO=WwO
local filterfunc UwO
local unit IwO
local group PwO
local unit DwO
local unit HwO
local unit JwO
local unit KwO
local unit LwO
local string XwO
local unit CwO
local string VwO
local unit BwO
local string NwO
local unit MwO
local string wuO
local unit uuO
local string ruO
local unit suO
local unit tuO
local string iuO
local widget SuO
local unit cuO
local unit ouO
local unit OuO
local unit luO
local unit buO
local unit yuO
local unit puO
local unit euO
local unit quO
local unit auO
local unit nuO
local unittype duO
local unit fuO
local unit RuO
local group TuO
local group YuO
local unit GuO
local group guO
local boolexpr huO
local boolean FuO
local boolean kuO
local boolean juO
local boolean xuO
local boolean vuO
local boolean muO
local boolean QuO
local boolean WuO
local boolean EuO
local boolean ZuO
local boolean UuO
local boolean IuO
local group PuO
local real AuO
if GetUnitTypeId(AwO)==$6830324C then
set FuO=true
else
set DwO=WwO
set FuO=GetUnitTypeId(DwO)==$6830324D
endif
if FuO then
set kuO=true
else
set HwO=WwO
set kuO=GetUnitTypeId(HwO)==$68303254
endif
if kuO then
set juO=true
else
set JwO=WwO
set juO=GetUnitTypeId(JwO)==$78303332
endif
if juO then
set xuO=true
else
set KwO=WwO
set xuO=GetUnitTypeId(KwO)==$6830324F
endif
if xuO then
set LwO=WwO
set XwO="thunderclap"
call IssueImmediateOrder(LwO,XwO)
set CwO=WwO
set VwO="waterelemental"
call IssueImmediateOrder(CwO,VwO)
set BwO=WwO
set NwO="fanofknives"
call IssueImmediateOrder(BwO,NwO)
set MwO=WwO
set wuO="berserk"
call IssueImmediateOrder(MwO,wuO)
set uuO=WwO
set ruO="stomp"
call IssueImmediateOrder(uuO,ruO)
endif
set suO=WwO
if GetUnitTypeId(suO)==$6E303350 then
set tuO=WwO
set iuO="charm"
set SuO=EwO
call IssueTargetOrder(tuO,iuO,SuO)
endif
set cuO=WwO
if GetOwningPlayer(cuO)==Player(11) then
set ouO=WwO
if GetUnitTypeId(ouO)==$6830324C then
set vuO=true
else
set OuO=WwO
set vuO=GetUnitTypeId(OuO)==$6830324D
endif
if vuO then
set muO=true
else
set luO=WwO
set muO=GetUnitTypeId(luO)==$68303254
endif
if muO then
set QuO=true
else
set buO=WwO
set QuO=GetUnitTypeId(buO)==$78303332
endif
if QuO then
set WuO=true
else
set yuO=WwO
set WuO=GetUnitTypeId(yuO)==$6830324F
endif
if WuO then
set EuO=true
else
set puO=WwO
set EuO=GetUnitTypeId(puO)==$78303273
endif
if EuO then
set ZuO=true
else
set euO=WwO
set ZuO=GetUnitTypeId(euO)==$6E30334C
endif
if ZuO then
set UuO=true
else
set quO=WwO
set UuO=GetUnitTypeId(quO)==$78303272
endif
if UuO then
set IuO=true
else
set auO=WwO
set IuO=GetUnitTypeId(auO)==$78303271
endif
if IuO then
set nuO=EwO
set duO=UNIT_TYPE_STRUCTURE
if IsUnitType(nuO,duO)==true then
set UwO=Filter(erw)
set PuO=ZwO
set fuO=WwO
set AuO=GetUnitX(fuO)
set RuO=WwO
call GroupEnumUnitsInRange(PuO,AuO,GetUnitY(RuO),500.,UwO)
set PwO=ZwO
loop
set TuO=PwO
exitwhen not (FirstOfGroup(TuO)!=null)
set YuO=PwO
set GuO=FirstOfGroup(YuO)
call GroupRemoveUnit(YuO,GuO)
set IwO=GuO
if IwO!=null then
call IssueTargetOrder(WwO,"attack",IwO)
endif
endloop
set guO=ZwO
call GroupClear(guO)
set huO=UwO
call DestroyBoolExpr(huO)
endif
endif
endif
set WwO=null
set EwO=null
set ZwO=null
set UwO=null
set IwO=null
set PwO=null
set AwO=null
set DwO=null
set HwO=null
set JwO=null
set KwO=null
set LwO=null
set CwO=null
set BwO=null
set MwO=null
set uuO=null
set suO=null
set tuO=null
set SuO=null
set cuO=null
set ouO=null
set OuO=null
set luO=null
set buO=null
set yuO=null
set puO=null
set euO=null
set quO=null
set auO=null
set nuO=null
set duO=null
set fuO=null
set RuO=null
set TuO=null
set YuO=null
set GuO=null
set guO=null
set huO=null
set PuO=null
endfunction
function DvO takes nothing returns nothing
local unit IvO=GetTriggerUnit()
local unit PvO
local integer AvO
if GetUnitTypeId(IvO)==$484D3033 and GetHeroLevel(GetTriggerUnit())>=14 then
set PvO=GetTriggerUnit()
set AvO=$414D6162
call UnitAddAbility(PvO,AvO)
endif
set IvO=null
set PvO=null
endfunction
function DwS takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function DxS takes nothing returns boolean
local trigger QxS
local trigger WxS
local playerunitevent ExS
local trigger ZxS
local playerunitevent UxS
local integer IxS
local trigger PxS
local code AxS
set cf=CreateTrigger()
set QxS=cf
call DisableTrigger(QxS)
set WxS=cf
set ExS=EVENT_PLAYER_UNIT_ATTACKED
set ZxS=WxS
set UxS=ExS
set IxS=0
loop
call TriggerRegisterPlayerUnitEvent(ZxS,Player(IxS),UxS,null)
set IxS=IxS+1
exitwhen IxS==bj_MAX_PLAYER_SLOTS
endloop
set PxS=cf
set AxS=y8
call TriggerAddAction(PxS,AxS)
set QxS=null
set WxS=null
set ExS=null
set ZxS=null
set UxS=null
set PxS=null
return true
endfunction
function K_i takes string l9i returns nothing
local integer b9i
local group y9i
local filterfunc p9i
local unit e9i
local group q9i
local unit a9i
local group n9i
local filterfunc d9i
local unit f9i
local group R9i
local group T9i
local filterfunc Y9i
local unit G9i
local group g9i
local integer h9i
local integer F9i
local integer k9i
local integer j9i
local unit x9i
local group v9i
local filterfunc m9i
local integer Q9i
local unit W9i
local group E9i
local integer Z9i
local unit U9i
local integer I9i
local unit P9i
local unit A9i
local integer D9i
local unit H9i
local unit J9i
local integer K9i
local sound L9i
local string X9i
local group C9i
local group V9i
local unit B9i
local unit N9i
local real M9i
local unit w0i
local unitstate u0i
local real r0i
local unit s0i
local unitstate t0i
local group i0i
local boolexpr S0i
local sound c0i
local string o0i
local unit O0i
local unit l0i
local unit b0i
local unit y0i
local integer p0i
local unit e0i
local real q0i
local sound a0i
local string n0i
local group d0i
local group f0i
local unit R0i
local unit T0i
local real Y0i
local unit G0i
local unitstate g0i
local real h0i
local unit F0i
local unit k0i
local unitstate j0i
local group x0i
local boolexpr v0i
local sound m0i
local string Q0i
local group W0i
local group E0i
local unit Z0i
local integer U0i
local string I0i
local integer P0i
local string A0i
local integer D0i
local integer H0i
local unit J0i
local integer K0i
local group L0i
local boolexpr X0i
local sound C0i
local string V0i
local sound B0i
local string N0i
local unit M0i
local integer w_i
local unit u_i
local integer r_i
local unit s_i
local integer t_i
local unit i_i
local integer S_i
local unit c_i
local integer o_i
local integer O_i
local unit l_i
local integer b_i
local unit y_i
local integer p_i
local integer e_i
local unit q_i
local integer a_i
local unit n_i
local integer d_i
local integer f_i
local unit R_i
local integer T_i
local unit Y_i
local integer G_i
local integer g_i
local sound h_i
local string F_i
local group k_i
local group j_i
local unit x_i
local unit v_i
local group m_i
local boolexpr Q_i
local unit W_i
local integer E_i
local integer Z_i
local unit U_i
local integer I_i
local integer P_i
local unit A_i
local unitstate D_i
local player H_i
local real J_i
set aW[qW]=l9i
set qW=qW+1
if GetRandomInt(1,2)==1 then
if Cl<7 then
set U9i=Xl
set I9i=$414D306A
call IncUnitAbilityLevel(U9i,I9i)
set P9i=Xl
call DisplayTextToPlayer(GetOwningPlayer(P9i),0.,0.,"|cffFFFF00Gives Light Orb|r")
endif
elseif Cl<7 then
set A9i=Xl
set D9i=$414D306B
call IncUnitAbilityLevel(A9i,D9i)
set H9i=Xl
call DisplayTextToPlayer(GetOwningPlayer(H9i),0.,0.,"|cff800080Gives Dark Orb|r")
endif
set Cl=Cl+1
if Cl>5 then
set J9i=Xl
set K9i=$414D306A
set b9i=GetUnitAbilityLevel(J9i,K9i)
if b9i==7 then
set L9i=ml
if L9i!=null then
call StartSound(L9i)
endif
set X9i="Live, Insect!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,X9i)
set y9i=CreateGroup()
set p9i=Filter(bww)
call GroupEnumUnitsInRect(y9i,bj_mapInitialPlayableArea,p9i)
set q9i=y9i
loop
set C9i=q9i
exitwhen not (FirstOfGroup(C9i)!=null)
set V9i=q9i
set B9i=FirstOfGroup(V9i)
call GroupRemoveUnit(V9i,B9i)
set e9i=B9i
set N9i=e9i
set M9i=10000.
set w0i=N9i
set u0i=UNIT_STATE_LIFE
set r0i=M9i
set A_i=w0i
set D_i=u0i
set s0i=w0i
set t0i=u0i
call SetUnitState(A_i,D_i,GetUnitState(s0i,t0i)+r0i)
endloop
set i0i=y9i
call DestroyGroup(i0i)
set S0i=p9i
call DestroyBoolExpr(S0i)
endif
if b9i==6 then
set c0i=Ql
if c0i!=null then
call StartSound(c0i)
endif
set o0i="Unlimited Mana"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,o0i)
set O0i=Xl
set H_i=GetOwningPlayer(O0i)
set l0i=Xl
set J_i=GetUnitX(l0i)
set b0i=Xl
set a9i=CreateUnit(H_i,$75303030,J_i,GetUnitY(b0i),0.)
set y0i=a9i
set p0i=$414D306E
call UnitAddAbility(y0i,p0i)
set e0i=a9i
set q0i=60.
call UnitApplyTimedLife(e0i,$42544C46,q0i)
endif
if b9i==5 then
set a0i=Wl
if a0i!=null then
call StartSound(a0i)
endif
set n0i="Total Annihilation"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,n0i)
set n9i=CreateGroup()
set d9i=Filter(yww)
call GroupEnumUnitsInRect(n9i,bj_mapInitialPlayableArea,d9i)
set R9i=n9i
loop
set d0i=R9i
exitwhen not (FirstOfGroup(d0i)!=null)
set f0i=R9i
set R0i=FirstOfGroup(f0i)
call GroupRemoveUnit(f0i,R0i)
set f9i=R0i
set T0i=f9i
set F0i=f9i
set k0i=F0i
set j0i=UNIT_STATE_LIFE
set Y0i=GetUnitState(k0i,j0i)-1000.
set G0i=T0i
set g0i=UNIT_STATE_LIFE
set h0i=Y0i
call SetUnitState(G0i,g0i,h0i)
endloop
set x0i=n9i
call DestroyGroup(x0i)
set v0i=d9i
call DestroyBoolExpr(v0i)
endif
if b9i==4 then
set m0i=El
if m0i!=null then
call StartSound(m0i)
endif
set Q0i="True Balance"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Q0i)
set T9i=CreateGroup()
set Y9i=Filter(pww)
call GroupEnumUnitsInRect(T9i,bj_mapInitialPlayableArea,Y9i)
set g9i=T9i
loop
set W0i=g9i
exitwhen not (FirstOfGroup(W0i)!=null)
set E0i=g9i
set Z0i=FirstOfGroup(E0i)
call GroupRemoveUnit(E0i,Z0i)
set G9i=Z0i
if jWu(G9i)<6 then
set h9i=kHw("when calling new_LinkedList in PickBonusArakkoa, line 91")
call nye(h9i,$494D3038,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in PickBonusArakkoa, line 92")
set U0i=h9i
set I0i="when calling shuffle in PickBonusArakkoa, line 93"
set aW[qW]=I0i
set qW=qW+1
if ok[U0i]==0 then
if U0i==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(U0i,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set P0i=h9i
set A0i="when calling getFirst in PickBonusArakkoa, line 94"
set aW[qW]=A0i
set qW=qW+1
if ok[P0i]==0 then
if P0i==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set H0i=P0i
set D0i=Hv[Kv[Vv[H0i]]]
set qW=qW-1
set F9i=D0i
set J0i=G9i
set K0i=F9i
call UnitAddItemById(J0i,K0i)
endif
endloop
set L0i=T9i
call DestroyGroup(L0i)
set X0i=Y9i
call DestroyBoolExpr(X0i)
endif
if b9i==3 then
set C0i=Zl
if C0i!=null then
call StartSound(C0i)
endif
set V0i="Madness"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,V0i)
set k9i=1
loop
exitwhen k9i>30
set j9i=GetRandomInt(1,6)
if j9i==1 then
call CreateUnit(Player(12),$68303149,-4800.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if j9i==2 then
call CreateUnit(Player(12),$68303149,60.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if j9i==3 then
call CreateUnit(Player(12),$68303149,4800.,I2R(GetRandomInt(-4700,4900)),0.)
endif
if j9i==4 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),4900.,0.)
endif
if j9i==5 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),80.,0.)
endif
if j9i==6 then
call CreateUnit(Player(12),$68303149,I2R(GetRandomInt(-4800,4800)),-4700.,0.)
endif
set k9i=k9i+1
endloop
endif
if b9i==2 then
set B0i=Ul
if B0i!=null then
call StartSound(B0i)
endif
set N0i="Two head is better"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,N0i)
set x9i=CreateUnit(Player(12),$484D3031,60.,80.,0.)
call SetHeroLevel(x9i,28,true)
set M0i=x9i
set w_i=$494D3031
call UnitAddItemById(M0i,w_i)
set u_i=x9i
set r_i=$494D3034
call UnitAddItemById(u_i,r_i)
set s_i=x9i
set t_i=$494D3036
call UnitAddItemById(s_i,t_i)
set i_i=x9i
set S_i=$414F7732
call UnitAddAbility(i_i,S_i)
set c_i=x9i
set o_i=$414F7732
set O_i=7
call SetUnitAbilityLevel(c_i,o_i,O_i)
set l_i=x9i
set b_i=$41304D32
call UnitAddAbility(l_i,b_i)
set y_i=x9i
set p_i=$41304D32
set e_i=7
call SetUnitAbilityLevel(y_i,p_i,e_i)
set q_i=x9i
set a_i=$41303334
call UnitAddAbility(q_i,a_i)
set n_i=x9i
set d_i=$41303334
set f_i=7
call SetUnitAbilityLevel(n_i,d_i,f_i)
set R_i=x9i
set T_i=$41303345
call UnitAddAbility(R_i,T_i)
set Y_i=x9i
set G_i=$41303345
set g_i=7
call SetUnitAbilityLevel(Y_i,G_i,g_i)
endif
if b9i==1 then
set h_i=Il
if h_i!=null then
call StartSound(h_i)
endif
set F_i="The Fool"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,F_i)
set v9i=CreateGroup()
set m9i=Filter(bww)
call GroupEnumUnitsInRect(v9i,bj_mapInitialPlayableArea,m9i)
set Q9i=0
loop
exitwhen Q9i>7
set Zw[Q9i]=true
set Q9i=Q9i+1
endloop
set E9i=v9i
loop
set k_i=E9i
exitwhen not (FirstOfGroup(k_i)!=null)
set j_i=E9i
set x_i=FirstOfGroup(j_i)
call GroupRemoveUnit(j_i,x_i)
set W9i=x_i
set v_i=W9i
call KillUnit(v_i)
endloop
set m_i=v9i
call DestroyGroup(m_i)
set Q_i=m9i
call DestroyBoolExpr(Q_i)
set Z9i=0
loop
exitwhen Z9i>7
set Zw[Z9i]=false
set Z9i=Z9i+1
endloop
endif
set W_i=Xl
set E_i=$414D306A
set Z_i=1
call SetUnitAbilityLevel(W_i,E_i,Z_i)
set U_i=Xl
set I_i=$414D306B
set P_i=1
call SetUnitAbilityLevel(U_i,I_i,P_i)
set Cl=0
endif
set Jl=90
call TimerStart(Kl,90.,false,eww)
set qW=qW-1
set y9i=null
set p9i=null
set e9i=null
set q9i=null
set a9i=null
set n9i=null
set d9i=null
set f9i=null
set R9i=null
set T9i=null
set Y9i=null
set G9i=null
set g9i=null
set x9i=null
set v9i=null
set m9i=null
set W9i=null
set E9i=null
set U9i=null
set P9i=null
set A9i=null
set H9i=null
set J9i=null
set L9i=null
set C9i=null
set V9i=null
set B9i=null
set N9i=null
set w0i=null
set u0i=null
set s0i=null
set t0i=null
set i0i=null
set S0i=null
set c0i=null
set O0i=null
set l0i=null
set b0i=null
set y0i=null
set e0i=null
set a0i=null
set d0i=null
set f0i=null
set R0i=null
set T0i=null
set G0i=null
set g0i=null
set F0i=null
set k0i=null
set j0i=null
set x0i=null
set v0i=null
set m0i=null
set W0i=null
set E0i=null
set Z0i=null
set J0i=null
set L0i=null
set X0i=null
set C0i=null
set B0i=null
set M0i=null
set u_i=null
set s_i=null
set i_i=null
set c_i=null
set l_i=null
set y_i=null
set q_i=null
set n_i=null
set R_i=null
set Y_i=null
set h_i=null
set k_i=null
set j_i=null
set x_i=null
set v_i=null
set m_i=null
set Q_i=null
set W_i=null
set U_i=null
set A_i=null
set D_i=null
set H_i=null
endfunction
function Dxp takes nothing returns nothing
set qW=0
call K_i("via function reference PickBonusArakkoa, line 206")
endfunction
function Dyu takes nothing returns boolean
local playerunitevent Pyu=EVENT_PLAYER_UNIT_ATTACKED
local code Ayu=Wsw
call emO(Pyu,null,Ayu,null)
set Pyu=null
return true
endfunction
function E1l takes nothing returns boolean
return true
endfunction
function E4i takes nothing returns nothing
local unit R1i=GetKillingUnit()
local unit G1i=R1i
local integer T1i
local integer Y1i
local unit g1i
local unit h1i
local unit F1i
local unit k1i
local unit j1i
local unit x1i
local unit v1i
local unit m1i
local unit Q1i
local unit W1i
local unit E1i
local unit Z1i
local integer U1i
local unit I1i
local integer P1i
local unit A1i
local integer D1i
local unit H1i
local integer J1i
local unit K1i
local integer L1i
local unit X1i
local integer C1i
local unit V1i
local integer B1i
local unit N1i
local integer M1i
local unit w4i
local integer u4i
local unit r4i
local integer s4i
local unit t4i
local integer i4i
local unit S4i
local integer c4i
local unit o4i
local integer O4i
local unit l4i
local integer b4i
local unit y4i
local integer p4i
local unit e4i
local integer q4i
local unit a4i
local integer n4i
local unit d4i
local integer f4i
local unit R4i
local integer T4i
local unit Y4i
local integer G4i
local boolean g4i
local boolean h4i
local boolean F4i
local boolean k4i
local boolean j4i
local boolean x4i
local boolean v4i
local boolean m4i
local boolean Q4i
local boolean W4i
if GetUnitTypeId(G1i)==$6E6E7472 then
set g4i=true
else
set g1i=R1i
set g4i=GetUnitTypeId(g1i)==$6E6C6C64
endif
if g4i then
set h4i=true
else
set h1i=R1i
set h4i=GetUnitTypeId(h1i)==$6E726967
endif
if h4i then
set F4i=true
else
set F1i=R1i
set F4i=GetUnitTypeId(F1i)==$6E656E66
endif
if F4i then
set k4i=true
else
set k1i=R1i
set k4i=GetUnitTypeId(k1i)==$6E627267
endif
if k4i then
set j4i=true
else
set j1i=R1i
set j4i=GetUnitTypeId(j1i)==$6E616E6F
endif
if j4i then
set x4i=true
else
set x1i=R1i
set x4i=GetUnitTypeId(x1i)==$6E6D6564
endif
if x4i then
set v4i=true
else
set v1i=R1i
set v4i=GetUnitTypeId(v1i)==$6E79796D
endif
if v4i then
set m4i=true
else
set m1i=R1i
set m4i=GetUnitTypeId(m1i)==$68303239
endif
if m4i then
set Q4i=true
else
set Q1i=R1i
set Q4i=GetUnitTypeId(Q1i)==$6E303237
endif
if Q4i and UnitItemInSlot(R1i,5)==null then
set W1i=R1i
set W4i=UnitAlive(W1i)==true
else
set W4i=false
endif
if W4i then
set T1i=GetRandomInt(1,5)
set E1i=R1i
set Y1i=GetPlayerTechCount(GetOwningPlayer(E1i),$52303543,true)
if jWu(R1i)<6 then
if Y1i==1 then
if T1i==1 then
set Z1i=R1i
set U1i=$4930304C
call UnitAddItemById(Z1i,U1i)
endif
if T1i==2 then
set I1i=R1i
set P1i=$4930304D
call UnitAddItemById(I1i,P1i)
endif
if T1i==3 then
set A1i=R1i
set D1i=$4930304E
call UnitAddItemById(A1i,D1i)
endif
if T1i==4 then
set H1i=R1i
set J1i=$4930304F
call UnitAddItemById(H1i,J1i)
endif
if T1i==5 then
set K1i=R1i
set L1i=$49303050
call UnitAddItemById(K1i,L1i)
endif
endif
if Y1i==2 then
if T1i==1 then
set X1i=R1i
set C1i=$49303051
call UnitAddItemById(X1i,C1i)
endif
if T1i==2 then
set V1i=R1i
set B1i=$49303052
call UnitAddItemById(V1i,B1i)
endif
if T1i==3 then
set N1i=R1i
set M1i=$49303053
call UnitAddItemById(N1i,M1i)
endif
if T1i==4 then
set w4i=R1i
set u4i=$49303054
call UnitAddItemById(w4i,u4i)
endif
if T1i==5 then
set r4i=R1i
set s4i=$49303055
call UnitAddItemById(r4i,s4i)
endif
endif
if Y1i==3 then
if T1i==1 then
set t4i=R1i
set i4i=$49303056
call UnitAddItemById(t4i,i4i)
endif
if T1i==2 then
set S4i=R1i
set c4i=$49303057
call UnitAddItemById(S4i,c4i)
endif
if T1i==3 then
set o4i=R1i
set O4i=$49303058
call UnitAddItemById(o4i,O4i)
endif
if T1i==4 then
set l4i=R1i
set b4i=$49303059
call UnitAddItemById(l4i,b4i)
endif
if T1i==5 then
set y4i=R1i
set p4i=$4930305A
call UnitAddItemById(y4i,p4i)
endif
endif
if Y1i==4 then
if T1i==1 then
set e4i=R1i
set q4i=$49303130
call UnitAddItemById(e4i,q4i)
endif
if T1i==2 then
set a4i=R1i
set n4i=$49303131
call UnitAddItemById(a4i,n4i)
endif
if T1i==3 then
set d4i=R1i
set f4i=$49303132
call UnitAddItemById(d4i,f4i)
endif
if T1i==4 then
set R4i=R1i
set T4i=$49303133
call UnitAddItemById(R4i,T4i)
endif
if T1i==5 then
set Y4i=R1i
set G4i=$49303134
call UnitAddItemById(Y4i,G4i)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl",R1i,"origin"))
endif
endif
set R1i=null
set G1i=null
set g1i=null
set h1i=null
set F1i=null
set k1i=null
set j1i=null
set x1i=null
set v1i=null
set m1i=null
set Q1i=null
set W1i=null
set E1i=null
set Z1i=null
set I1i=null
set A1i=null
set H1i=null
set K1i=null
set X1i=null
set V1i=null
set N1i=null
set w4i=null
set r4i=null
set t4i=null
set S4i=null
set o4i=null
set l4i=null
set y4i=null
set e4i=null
set a4i=null
set d4i=null
set R4i=null
set Y4i=null
endfunction
function Zxs takes integer gxs,integer hxs,integer Fxs,integer kxs,string jxs returns nothing
local integer xxs
local integer vxs
local integer mxs
local integer Qxs
local string Wxs
local integer Exs
set aW[qW]=jxs
set qW=qW+1
if ok[gxs]==0 then
if gxs==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set xxs=gxs
set vxs=hxs
set mxs=Fxs
set Qxs=kxs
set Wxs="when calling add in LinkedList, line 38"
set aW[qW]=Wxs
set qW=qW+1
set Exs=jMe(vxs,Jv[Vv[xxs]],Vv[xxs],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[xxs]]]=Exs
set Jv[Vv[xxs]]=Exs
set Bv[xxs]=Bv[xxs]+1
set Exs=jMe(mxs,Jv[Vv[xxs]],Vv[xxs],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[xxs]]]=Exs
set Jv[Vv[xxs]]=Exs
set Bv[xxs]=Bv[xxs]+1
set Exs=jMe(Qxs,Jv[Vv[xxs]],Vv[xxs],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[xxs]]]=Exs
set Jv[Vv[xxs]]=Exs
set Bv[xxs]=Bv[xxs]+1
set qW=qW-1
set qW=qW-1
endfunction
function Vdr takes unit jdr,string xdr returns nothing
local integer vdr
local integer mdr
local unit Qdr
local unit Wdr
local integer Edr
local integer Zdr
local string Udr
local integer Idr
local string Pdr
local integer Adr
local integer Ddr
local integer Hdr
local integer Jdr
local player Kdr
local location Ldr
local real Xdr
local boolean Cdr
set aW[qW]=xdr
set qW=qW+1
set Qdr=jdr
set vdr=GetUnitTypeId(Qdr)
if vdr==$484D3038 then
set Wdr=jdr
set Edr=$494D3139
set Cdr=GetInventoryIndexOfItemTypeBJ(Wdr,Edr)>0==true
else
set Cdr=false
endif
if Cdr then
call Zxs(YG,$75736B65,$75736B6D,$6E736B61,"when calling add in RitualDagger, line 34")
set Zdr=YG
set Udr="when calling shuffle in RitualDagger, line 35"
set aW[qW]=Udr
set qW=qW+1
if ok[Zdr]==0 then
if Zdr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Zdr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Idr=YG
set Pdr="when calling getFirst in RitualDagger, line 36"
set aW[qW]=Pdr
set qW=qW+1
if ok[Idr]==0 then
if Idr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Ddr=Idr
set Adr=Hv[Kv[Vv[Ddr]]]
set qW=qW-1
set mdr=Adr
set Hdr=1
set Jdr=mdr
set Kdr=GetOwningPlayer(jdr)
set Ldr=GetUnitLoc(jdr)
set Xdr=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set Hdr=Hdr-1
exitwhen Hdr<0
call CreateUnitAtLocSaveLast(Kdr,Jdr,Ldr,Xdr)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call RemoveLocation(GetUnitLoc(jdr))
endif
set qW=qW-1
set Qdr=null
set Wdr=null
set Kdr=null
set Ldr=null
endfunction
function E6S takes nothing returns nothing
local string W6S
set qW=0
set W6S="via function reference RitualDagger, line 42"
set aW[qW]=W6S
set qW=qW+1
call Vdr(GetKillingUnit(),"when calling bloodlust in RitualDagger, line 43")
set qW=qW-1
endfunction
function E6w takes nothing returns boolean
return true
endfunction
function w1u takes string Q3u returns nothing
local unit W3u
local integer E3u
local unit Z3u
local unit U3u
local unit I3u
local unit P3u
local unit A3u
local unit D3u
local integer H3u
local string J3u
local integer K3u
local real L3u
local integer X3u
local string C3u
local boolean V3u
local boolean B3u
local boolean N3u
local integer M3u
set aW[qW]=Q3u
set qW=qW+1
set W3u=GetAttacker()
set Z3u=W3u
if GetUnitTypeId(Z3u)==$6E617373 then
set V3u=true
else
set U3u=W3u
set V3u=GetUnitTypeId(U3u)==$78303171
endif
if V3u then
set B3u=true
else
set I3u=W3u
set B3u=GetUnitTypeId(I3u)==$6E716233
endif
if B3u then
set P3u=W3u
set N3u=GetPlayerTechCount(GetOwningPlayer(P3u),$526F7262,true)>0
else
set N3u=false
endif
if N3u then
set M3u=GetRandomInt(1,100)
set A3u=W3u
if M3u<=10*GetPlayerTechCount(GetOwningPlayer(A3u),$526F7262,true) then
set D3u=W3u
set H3u=$41414145
call UnitAddAbility(D3u,H3u)
set J3u="when calling alloc_CallbackSingle_doAfter_Multishot in Multishot, line 85"
set aW[qW]=J3u
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set K3u=fF
set RF[K3u]=734
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Multishot.","when calling error in Multishot, line 85")
set K3u=0
endif
else
set dF=dF-1
set K3u=nF[dF]
set RF[K3u]=734
endif
set qW=qW-1
set E3u=K3u
set xm[E3u]=W3u
set L3u=1.5
set X3u=E3u
set C3u="when calling doAfter in Multishot, line 85"
set aW[qW]=C3u
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),L3u,X3u,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set W3u=null
set Z3u=null
set U3u=null
set I3u=null
set P3u=null
set A3u=null
set D3u=null
endfunction
function E8s takes nothing returns nothing
set qW=0
call w1u("via function reference Multishot, line 90")
endfunction
function E9r takes nothing returns boolean
local unit k9r=GetFilterUnit()
local unit x9r=GetKillingUnit()
local player j9r=GetOwningPlayer(x9r)
local unit v9r
local unit m9r
local boolean Q9r
local boolean W9r
if (k9r!=null and IsUnitAlly(k9r,j9r))==true then
set v9r=GetFilterUnit()
set Q9r=UnitAlive(v9r)==true
else
set Q9r=false
endif
if Q9r then
set m9r=GetFilterUnit()
set W9r=GetUnitTypeId(m9r)==$4F303344
else
set W9r=false
endif
set k9r=null
set j9r=null
set x9r=null
set v9r=null
set m9r=null
return W9r
endfunction
function EBp takes nothing returns nothing
local unit vBp=GetTriggerUnit()
local unit mBp=vBp
local unit QBp
local boolean WBp
if GetUnitTypeId(mBp)==$45303037 then
set WBp=true
else
set QBp=vBp
set WBp=GetUnitTypeId(QBp)==$45303038
endif
if WBp and GetHeroLevel(vBp)>=20 then
call SetPlayerTechResearched(GetOwningPlayer(vBp),$5230354F,1)
endif
set vBp=null
set mBp=null
set QBp=null
endfunction
function EBu takes nothing returns nothing
local unit fBu=GetEnteringUnit()
local unit TBu=fBu
local integer RBu=GetUnitTypeId(TBu)
local unit YBu
local unit GBu
local integer gBu
local unit hBu
local unit FBu
local integer kBu
local unit jBu
local unit xBu
local integer vBu
local unit mBu
local unit QBu
local integer WBu
if RBu==$6E777267 or RBu==$6E736767 then
set YBu=fBu
if GetPlayerTechCount(GetOwningPlayer(YBu),$52303044,true)==1 then
set GBu=fBu
set gBu=$41303031
call UnitAddAbility(GBu,gBu)
endif
set hBu=fBu
if GetPlayerTechCount(GetOwningPlayer(hBu),$52303044,true)==2 then
set FBu=fBu
set kBu=$41303053
call UnitAddAbility(FBu,kBu)
endif
set jBu=fBu
if GetPlayerTechCount(GetOwningPlayer(jBu),$52303044,true)==3 then
set xBu=fBu
set vBu=$41303254
call UnitAddAbility(xBu,vBu)
endif
set mBu=fBu
if GetPlayerTechCount(GetOwningPlayer(mBu),$52303044,true)==4 then
set QBu=fBu
set WBu=$41303931
call UnitAddAbility(QBu,WBu)
endif
endif
set fBu=null
set TBu=null
set YBu=null
set GBu=null
set hBu=null
set FBu=null
set jBu=null
set xBu=null
set mBu=null
set QBu=null
endfunction
function EBy takes nothing returns nothing
local unit yBy=GetKillingUnit()
local unit eBy=yBy
local integer qBy=$494D3037
local unit pBy
local unit aBy
local unit nBy
local unit dBy
local unit fBy
local real RBy
local unit TBy
local integer YBy
local unit GBy
local real gBy
local unit hBy
local unitstate FBy
local real kBy
local unit jBy
local unitstate xBy
local player vBy
local real mBy
local unit QBy
local unitstate WBy
if RTS(eBy,qBy)!=null then
if GetRandomInt(1,100)<=50 then
set aBy=yBy
set vBy=GetOwningPlayer(aBy)
set nBy=yBy
set mBy=GetUnitX(nBy)
set dBy=yBy
set pBy=CreateUnit(vBy,$6E303153,mBy,GetUnitY(dBy),0.)
set fBy=pBy
set RBy=45.
call UnitApplyTimedLife(fBy,$42544C46,RBy)
call dYr(pBy)
endif
endif
set TBy=yBy
set YBy=$494D3033
if RTS(TBy,YBy)!=null then
set GBy=yBy
set gBy=40.
set hBy=GBy
set FBy=UNIT_STATE_LIFE
set kBy=gBy
set QBy=hBy
set WBy=FBy
set jBy=hBy
set xBy=FBy
call SetUnitState(QBy,WBy,GetUnitState(jBy,xBy)+kBy)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",yBy,"chest"))
endif
set yBy=null
set pBy=null
set eBy=null
set aBy=null
set nBy=null
set dBy=null
set fBy=null
set TBy=null
set GBy=null
set hBy=null
set FBy=null
set jBy=null
set xBy=null
set vBy=null
set QBy=null
set WBy=null
endfunction
function DFp takes string lFp returns nothing
local integer bFp
local integer yFp
local integer pFp
local integer eFp
local integer qFp
local string aFp
local integer nFp
local string dFp
local integer fFp
local integer RFp
local integer TFp
local string YFp
local integer GFp
local string gFp
local integer hFp
local integer FFp
local unit kFp
local integer jFp
local player xFp
local unit vFp
local unit mFp
local player QFp
local real WFp
local real EFp
local unit ZFp
local unit UFp
local timerdialog IFp
local player PFp
local timerdialog AFp
set aW[qW]=lFp
set qW=qW+1
if Wu==false then
set Wu=true
set qFp=gY
set aFp="when calling shuffle in PickRace, line 1583"
set aW[qW]=aFp
set qW=qW+1
if ok[qFp]==0 then
if qFp==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(qFp,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set nFp=gY
set dFp="when calling getFirst in PickRace, line 1584"
set aW[qW]=dFp
set qW=qW+1
if ok[nFp]==0 then
if nFp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set RFp=nFp
set fFp=Hv[Kv[Vv[RFp]]]
set qW=qW-1
set bFp=fFp
call Gqp(gu,bFp,"when calling pickRaceRandom in PickRace, line 1585")
call eWp(gY,bFp,"when calling remove in PickRace, line 1586")
set TFp=vY
set YFp="when calling shuffle in PickRace, line 1587"
set aW[qW]=YFp
set qW=qW+1
if ok[TFp]==0 then
if TFp==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(TFp,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set GFp=vY
set gFp="when calling getFirst in PickRace, line 1588"
set aW[qW]=gFp
set qW=qW+1
if ok[GFp]==0 then
if GFp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set FFp=GFp
set hFp=Hv[Kv[Vv[FFp]]]
set qW=qW-1
set yFp=hFp
set pFp=0
loop
exitwhen pFp>3
set kFp=k[pFp]
set jFp=yFp
call UnitRemoveAbility(kFp,jFp)
set pFp=pFp+1
endloop
call eWp(vY,yFp,"when calling remove in PickRace, line 1591")
set xFp=gu
set eFp=GetPlayerId(xFp)
set vFp=F[eFp]
call ShowUnit(vFp,false)
set mFp=k[1]
call ShowUnit(mFp,true)
set QFp=Tu
set ZFp=k[1]
set WFp=GetUnitX(ZFp)
set UFp=k[1]
set EFp=GetUnitY(UFp)
if GetLocalPlayer()==QFp then
call SetCameraPosition(WFp,EFp)
endif
set IFp=tr
call DestroyTimerDialog(IFp)
call TimerStart(ir,30.,false,Lww_855)
set tr=CreateTimerDialog(ir)
set AFp=tr
set PFp=Tu
call TimerDialogSetTitle(AFp,GetPlayerName(PFp)+" pick race")
call TimerDialogDisplay(tr,true)
endif
set qW=qW-1
set kFp=null
set xFp=null
set vFp=null
set mFp=null
set QFp=null
set ZFp=null
set UFp=null
set IFp=null
set PFp=null
set AFp=null
endfunction
function ECe takes nothing returns nothing
set qW=0
call DFp("via function reference PickRace, line 1501")
endfunction
function EHu takes nothing returns boolean
return true
endfunction
function EIp takes nothing returns nothing
local integer OIp=0
local integer lIp
local player bIp
local integer yIp
local player pIp
local player eIp
local playerstate qIp
local real aIp
local real nIp
local real dIp
local real fIp
local real RIp
local real TIp
local real YIp
local unit GIp
local player gIp
local integer hIp
local player FIp
local playerstate kIp
local integer jIp
local player xIp
local playerstate vIp
local player mIp
local player QIp
local playerstate WIp
loop
exitwhen OIp>3
set pIp=Player(OIp)
set eIp=pIp
set qIp=PLAYER_STATE_RESOURCE_LUMBER
set lIp=GetPlayerState(eIp,qIp)
set aIp=hr[OIp]*1./lIp
set kr[OIp]=R2I(aIp)
if lIp==10 then
set nIp=hr[OIp]*1./lIp
set Dr[OIp]=R2I(nIp)
endif
if lIp==20 then
set dIp=hr[OIp]*1./lIp
set Hr[OIp]=R2I(dIp)
endif
if lIp==30 then
set fIp=hr[OIp]*1./lIp
set Jr[OIp]=R2I(fIp)
endif
if lIp==40 then
set RIp=hr[OIp]*1./lIp
set Kr[OIp]=R2I(RIp)
endif
if lIp==50 then
set TIp=hr[OIp]*1./lIp
set Lr[OIp]=R2I(TIp)
endif
if lIp==60 then
set YIp=hr[OIp]*1./lIp
set Xr[OIp]=R2I(YIp)
endif
set OIp=OIp+1
endloop
if yO!=null then
set GIp=yO
set bIp=GetOwningPlayer(GIp)
set gIp=bIp
set hIp=50
set FIp=gIp
set kIp=PLAYER_STATE_RESOURCE_GOLD
set jIp=hIp
set QIp=FIp
set WIp=kIp
set xIp=FIp
set vIp=kIp
call SetPlayerState(QIp,WIp,GetPlayerState(xIp,vIp)+jIp)
call UuS(yO,50)
set mIp=bIp
set yIp=GetPlayerId(mIp)
set hr[yIp]=hr[yIp]+50
set Fr[yIp]=Fr[yIp]+50
set Cr[yIp]=Cr[yIp]+50
endif
set bIp=null
set pIp=null
set eIp=null
set qIp=null
set GIp=null
set gIp=null
set FIp=null
set kIp=null
set xIp=null
set vIp=null
set mIp=null
set QIp=null
set WIp=null
endfunction
function EIw takes nothing returns boolean
return true
endfunction
function ELr takes nothing returns nothing
local integer fLr=GetSpellAbilityId()
local unit RLr
local group TLr
local filterfunc YLr
local unit GLr
local group gLr
local unit hLr
local group FLr
local group kLr
local unit jLr
local unit xLr
local player vLr
local boolean mLr
local group QLr
local boolexpr WLr
if fLr==$41305757 then
set RLr=GetSpellAbilityUnit()
set hLr=RLr
set Be=GetOwningPlayer(hLr)
set TLr=CreateGroup()
set YLr=Filter(v2)
call GroupEnumUnitsInRange(TLr,GetSpellTargetX(),GetSpellTargetY(),250.,YLr)
set gLr=TLr
loop
set FLr=gLr
exitwhen not (FirstOfGroup(FLr)!=null)
set kLr=gLr
set jLr=FirstOfGroup(kLr)
call GroupRemoveUnit(kLr,jLr)
set GLr=jLr
set xLr=GLr
set vLr=Be
set mLr=true
call SetUnitOwner(xLr,vLr,mLr)
call dYr(GLr)
endloop
set QLr=TLr
call DestroyGroup(QLr)
set WLr=YLr
call DestroyBoolExpr(WLr)
set Be=null
endif
set RLr=null
set TLr=null
set YLr=null
set GLr=null
set gLr=null
set hLr=null
set FLr=null
set kLr=null
set jLr=null
set xLr=null
set vLr=null
set QLr=null
set WLr=null
endfunction
function G2S takes integer f2S,unit T2S returns nothing
local integer Y2S=0
call UnitAddAbility(T2S,$52455043)
loop
set Y2S=Y2S+1
exitwhen is[Y2S]==0
if GetUnitTypeId(q[f2S])==is[Y2S] and q[f2S]!=null then
call UnitAddAbility(T2S,Ss[Y2S])
call SetUnitAbilityLevel(T2S,Ss[Y2S],GetHeroLevel(q[f2S]))
endif
if GetUnitTypeId(a[f2S])==is[Y2S] and s[f2S]!=0 then
call UnitAddAbility(T2S,Ss[Y2S])
call SetUnitAbilityLevel(T2S,Ss[Y2S],GetHeroLevel(a[f2S]))
endif
if GetUnitTypeId(n[f2S])==is[Y2S] and t[f2S]!=0 then
call UnitAddAbility(T2S,Ss[Y2S])
call SetUnitAbilityLevel(T2S,Ss[Y2S],GetHeroLevel(n[f2S]))
endif
if GetUnitTypeId(d[f2S])==is[Y2S] and i[f2S]!=0 then
call UnitAddAbility(T2S,Ss[Y2S])
call SetUnitAbilityLevel(T2S,Ss[Y2S],GetHeroLevel(d[f2S]))
endif
endloop
endfunction
function EMi takes nothing returns nothing
local unit FMi=GetTriggerUnit()
local unit xMi=FMi
local player kMi
local integer jMi
local unit vMi
local player mMi
local unit QMi
local player WMi
if GetUnitTypeId(xMi)==$6E656630 then
set vMi=FMi
set kMi=GetOwningPlayer(vMi)
set QMi=FMi
set mMi=GetOwningPlayer(QMi)
set jMi=GetPlayerId(mMi)+4
set WMi=kMi
call G2S(GetPlayerId(WMi),FMi)
call SetPlayerTechResearched(kMi,$52303259,1)
call SetPlayerTechResearched(Player(jMi),$52303259,1)
endif
set FMi=null
set kMi=null
set xMi=null
set vMi=null
set mMi=null
set QMi=null
set WMi=null
endfunction
function EMr takes nothing returns boolean
local string mMr
local playerunitevent QMr
local code WMr
set qW=0
set mMr="via function reference RitualDagger, line 1"
set aW[qW]=mMr
set qW=qW+1
set YG=kHw("when calling new_LinkedList in RitualDagger, line 10")
set QMr=EVENT_PLAYER_UNIT_DEATH
set WMr=Rtw
call emO(QMr,null,WMr,null)
set qW=qW-1
set QMr=null
return true
endfunction
function EOl takes nothing returns nothing
local unit oOl=GetAttacker()
local unit lOl=oOl
local unit OOl
local unit bOl
local unit yOl
local unit pOl
local unit eOl
local unit qOl
local unit aOl
local unit nOl
local unit dOl
local integer fOl
local unit ROl
local integer TOl
local integer YOl
local unit GOl
local unit gOl
local real hOl
local unit FOl
local string kOl
local widget jOl
local boolean xOl
local boolean vOl
local integer mOl
local player QOl
local real WOl
if GetUnitTypeId(lOl)==$78303072 then
set xOl=true
else
set bOl=oOl
set xOl=GetUnitTypeId(bOl)==$78303071
endif
if xOl then
set vOl=true
else
set yOl=oOl
set vOl=GetUnitTypeId(yOl)==$6E303257
endif
if vOl then
set pOl=oOl
if GetPlayerTechCount(GetOwningPlayer(pOl),$52303230,true)>0 then
set mOl=GetRandomInt(1,100)
set eOl=oOl
if mOl<=10*GetPlayerTechCount(GetOwningPlayer(eOl),$52303230,true) then
set qOl=oOl
set QOl=GetOwningPlayer(qOl)
set aOl=oOl
set WOl=GetUnitX(aOl)
set nOl=oOl
set OOl=CreateUnit(QOl,$75303030,WOl,GetUnitY(nOl),0.)
set dOl=OOl
set fOl=$41305945
call UnitAddAbility(dOl,fOl)
set ROl=OOl
set TOl=$41305945
set GOl=oOl
set YOl=GetPlayerTechCount(GetOwningPlayer(GOl),$52303230,true)
call SetUnitAbilityLevel(ROl,TOl,YOl)
set gOl=OOl
set hOl=3.
call UnitApplyTimedLife(gOl,$42544C46,hOl)
set FOl=OOl
set kOl="chainlightning"
set jOl=GetTriggerUnit()
call IssueTargetOrder(FOl,kOl,jOl)
endif
endif
endif
set oOl=null
set OOl=null
set lOl=null
set bOl=null
set yOl=null
set pOl=null
set eOl=null
set qOl=null
set aOl=null
set nOl=null
set dOl=null
set ROl=null
set GOl=null
set gOl=null
set FOl=null
set jOl=null
set QOl=null
endfunction
function UCS takes integer hCS returns nothing
local unit FCS=xn
local player kCS=yl
local boolean jCS=false
local unit xCS
local integer vCS
local unit mCS
local real QCS
local real WCS
local real ECS
local real ZCS
call SetUnitOwner(FCS,kCS,jCS)
set xCS=xn
set vCS=hCS
call UnitRemoveAbility(xCS,vCS)
set mCS=xn
set ECS=Vd
set ZCS=Bd
set QCS=ECS
set WCS=ZCS
call SetUnitPosition(mCS,QCS,WCS)
set FCS=null
set kCS=null
set xCS=null
set mCS=null
endfunction
function rbO takes unit AlO,real DlO,real HlO,real JlO returns nothing
local unit KlO=AlO
local unit ClO=KlO
local real VlO=DlO
local unit LlO
local unit XlO
local unit BlO
local real NlO
local unit MlO
local real wbO
local real ubO
call SetUnitX(ClO,VlO)
set LlO=KlO
set BlO=LlO
set NlO=HlO
call SetUnitY(BlO,NlO)
set XlO=LlO
set MlO=XlO
set wbO=JlO
set ubO=0.
call SetUnitFlyHeight(MlO,wbO,ubO)
set KlO=null
set LlO=null
set XlO=null
set ClO=null
set BlO=null
set MlO=null
endfunction
function Y2u takes player C4u,integer V4u,integer B4u,real N4u,real M4u,real w2u returns nothing
local unit u2u=xn
local unit s2u=u2u
local integer t2u=V4u
local unit r2u
local unit i2u
local real S2u
local unit c2u
local unitstate o2u
local real O2u
local real l2u
local real b2u
local real y2u
local real p2u
local unit e2u
local integer q2u
local integer a2u
local unit n2u
local player d2u
local boolean f2u
local real R2u
local real T2u
call UnitAddAbility(s2u,t2u)
set r2u=u2u
set i2u=r2u
set S2u=1000000.
set c2u=i2u
set o2u=UNIT_STATE_MANA
set O2u=S2u
call SetUnitState(c2u,o2u,O2u)
set R2u=N4u
set T2u=M4u
set l2u=R2u
set b2u=T2u
set y2u=l2u
set p2u=b2u
if y2u>Xd and y2u<Vd and p2u>Cd and p2u<Bd then
call rbO(xn,N4u,M4u,w2u)
endif
if B4u>1 then
set e2u=xn
set q2u=V4u
set a2u=B4u
call SetUnitAbilityLevel(e2u,q2u,a2u)
endif
if C4u!=null then
set n2u=xn
set d2u=C4u
set f2u=false
call SetUnitOwner(n2u,d2u,f2u)
endif
set u2u=null
set r2u=null
set s2u=null
set i2u=null
set c2u=null
set o2u=null
set e2u=null
set n2u=null
set d2u=null
endfunction
function I9S takes player r9S,integer s9S,integer t9S,integer i9S,widget S9S,real c9S,real o9S,real O9S returns boolean
local boolean l9S
local unit b9S
local real y9S
local real p9S
local real e9S
local real q9S
local real a9S
local real n9S
local real d9S
local unit f9S
local unit R9S
local unit T9S
local widget Y9S
local widget G9S
local widget g9S
local unit h9S
local integer F9S
local widget k9S
local real j9S
local real x9S
local unit v9S
local real m9S
local real Q9S
local real W9S
local real E9S
local real Z9S
local real U9S
call Y2u(r9S,s9S,t9S,c9S,o9S,O9S)
set b9S=xn
set f9S=xn
set R9S=f9S
set j9S=GetUnitX(R9S)
set T9S=f9S
set m9S=j9S
set Q9S=GetUnitY(T9S)
set e9S=m9S
set q9S=Q9S
set Y9S=S9S
set G9S=Y9S
set x9S=GetWidgetX(G9S)
set g9S=Y9S
set W9S=x9S
set E9S=GetWidgetY(g9S)
set a9S=W9S
set n9S=E9S
set d9S=Atan2(n9S-q9S,a9S-e9S)
set Z9S=d9S
set y9S=Z9S
set v9S=b9S
set U9S=y9S
set p9S=U9S
call SetUnitFacing(v9S,p9S*57.295779513)
set h9S=xn
set F9S=i9S
set k9S=S9S
set l9S=IssueTargetOrderById(h9S,F9S,k9S)
call UCS(s9S)
set b9S=null
set f9S=null
set R9S=null
set T9S=null
set Y9S=null
set G9S=null
set g9S=null
set h9S=null
set k9S=null
set v9S=null
return l9S
endfunction
function EPp takes nothing returns nothing
local unit ePp=GetTriggerUnit()
local unit qPp=ePp
local unittype aPp=UNIT_TYPE_STRUCTURE
local unit nPp
local integer dPp
local player fPp
local integer RPp
local integer TPp
local integer YPp
local widget GPp
local real gPp
local real hPp
local boolean FPp
local player kPp
local integer jPp
local integer xPp
local integer vPp
local widget mPp
local real QPp
local real WPp
if IsUnitType(qPp,aPp)==true then
set nPp=ePp
set dPp=$4176756C
set FPp=GetUnitAbilityLevel(nPp,dPp)==0
else
set FPp=false
endif
if FPp then
set fPp=Player(13)
set RPp=$414D6378
set TPp=1
set YPp=852527
set GPp=ePp
set kPp=fPp
set jPp=RPp
set xPp=TPp
set vPp=YPp
set mPp=GPp
set QPp=GetWidgetX(GPp)
set WPp=GetWidgetY(GPp)
set gPp=QPp
set hPp=WPp
call I9S(kPp,jPp,xPp,vPp,mPp,gPp,hPp,0.)
endif
set ePp=null
set qPp=null
set aPp=null
set nPp=null
set fPp=null
set GPp=null
set kPp=null
set mPp=null
endfunction
function EQt takes nothing returns boolean
return true
endfunction
function ETw takes nothing returns nothing
set qW=0
call Ubt("via function reference ThreeRacePick, line 243")
endfunction
function EVr takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function EWb takes nothing returns boolean
return true
endfunction
function mBe takes string hBe returns integer
local integer FBe
local string kBe
local integer jBe
local integer xBe
local integer vBe
set aW[qW]=hBe
set qW=qW+1
set kBe="when calling alloc_HashList in HashList, line 16"
set aW[qW]=kBe
set qW=qW+1
if IF==0 then
if PF<32768 then
set PF=PF+1
set jBe=PF
set AF[jBe]=886
else
call L8c("Out of memory: Could not create HashList.","when calling error in HashList, line 8")
set jBe=0
endif
else
set IF=IF-1
set jBe=UF[IF]
set AF[jBe]=886
endif
set qW=qW-1
set FBe=jBe
set xBe=FBe
set vBe=xBe
set Wx[vBe]=0
set qW=qW-1
return FBe
endfunction
function E6i takes string g6i returns integer
local integer h6i
local string F6i
local integer k6i
local integer j6i
local string x6i
local integer v6i
local integer m6i
local integer Q6i
local string W6i
set aW[qW]=g6i
set qW=qW+1
set F6i="when calling alloc_IterableMap in HashMap, line 50"
set aW[qW]=F6i
set qW=qW+1
if HF==0 then
if JF<32768 then
set JF=JF+1
set k6i=JF
set KF[k6i]=2642
else
call L8c("Out of memory: Could not create IterableMap.","when calling error in HashMap, line 46")
set k6i=0
endif
else
set HF=HF-1
set k6i=DF[HF]
set KF[k6i]=2642
endif
set qW=qW-1
set h6i=k6i
set j6i=h6i
set x6i="when calling construct_IterableMap in HashMap, line 50"
set aW[qW]=x6i
set qW=qW+1
set v6i=j6i
set m6i=v6i
set Ex[m6i]=0
set Q6i=j6i
set W6i="when calling IterableMap_init in HashMap, line 50"
set aW[qW]=W6i
set qW=qW+1
set Zx[Q6i]=mBe("when calling new_HashList in HashMap, line 47")
set qW=qW-1
set qW=qW-1
set qW=qW-1
return h6i
endfunction
function mOc takes string gOc returns boolean
local integer hOc
local string FOc
local integer kOc
local real jOc
local integer xOc
local string vOc
set aW[qW]=gOc
set qW=qW+1
set vn=E6i("when calling new_IterableMap in InventoryStore, line 8")
call E6i("when calling new_IterableMap in InventoryStore, line 9")
set FOc="when calling alloc_CallbackSingle_doAfter_InventoryStore in InventoryStore, line 13"
set aW[qW]=FOc
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set kOc=fF
set RF[kOc]=721
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_InventoryStore.","when calling error in InventoryStore, line 13")
set kOc=0
endif
else
set dF=dF-1
set kOc=nF[dF]
set RF[kOc]=721
endif
set qW=qW-1
set hOc=kOc
set jOc=1.
set xOc=hOc
set vOc="when calling doAfter in InventoryStore, line 13"
set aW[qW]=vOc
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),jOc,xOc,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
return true
endfunction
function EWi takes nothing returns boolean
set qW=0
return mOc("via function reference InventoryStore, line 1")
endfunction
function EYS takes nothing returns boolean
local trigger jYS
local trigger xYS
local rect vYS
local region mYS
local trigger QYS
local boolexpr WYS
set gy=CreateTrigger()
set jYS=gy
call DisableTrigger(jYS)
set xYS=gy
set vYS=bj_mapInitialPlayableArea
set mYS=CreateRegion()
call RegionAddRect(mYS,vYS)
call TriggerRegisterEnterRegion(xYS,mYS,null)
set QYS=gy
set WYS=Condition(W1)
call TriggerAddCondition(QYS,WYS)
set jYS=null
set xYS=null
set vYS=null
set mYS=null
set QYS=null
set WYS=null
return true
endfunction
function EYc takes nothing returns boolean
local player Enc=Player(12)
local integer Znc=$75303030
local real vYc=0.
local real mYc=0.
local real Unc=vYc
local real Inc=mYc
local real QYc=270.
local real Pnc=QYc
local player FYc=Enc
local integer kYc=Znc
local real jYc=Unc
local real xYc=Inc
local real WYc=Pnc
local real Anc=WYc
local unit Wnc=CreateUnit(FYc,kYc,jYc,xYc,Anc*57.295779513)
local unit Dnc=Wnc
local integer Hnc=$41305334
local unit Jnc
local integer Knc
local unit Lnc
local integer Xnc
local unit Cnc
local integer Vnc
local unit Bnc
local integer Nnc
local unit Mnc
local integer wdc
local unit udc
local integer rdc
local unit sdc
local integer tdc
local unit idc
local integer Sdc
local unit cdc
local integer odc
local unit Odc
local integer ldc
local unit bdc
local integer ydc
local unit pdc
local integer edc
local unit qdc
local integer adc
local unit ndc
local integer ddc
local unit fdc
local integer Rdc
local unit Tdc
local integer Ydc
local unit Gdc
local integer gdc
local unit hdc
local integer Fdc
local unit kdc
local integer jdc
local unit xdc
local integer vdc
local unit mdc
local integer Qdc
local unit Wdc
local integer Edc
local unit Zdc
local integer Udc
local unit Idc
local integer Pdc
local unit Adc
local integer Ddc
local unit Hdc
local integer Jdc
local unit Kdc
local integer Ldc
local unit Xdc
local integer Cdc
local unit Vdc
local integer Bdc
local unit Ndc
local integer Mdc
local unit wfc
local integer ufc
local unit rfc
local integer sfc
local unit tfc
local integer ifc
local unit Sfc
local integer cfc
local unit ofc
local integer Ofc
local unit lfc
local integer bfc
local unit yfc
local integer pfc
local unit efc
local integer qfc
local unit afc
local integer nfc
local unit dfc
local integer ffc
local unit Rfc
local integer Tfc
local unit Yfc
local integer Gfc
local unit gfc
local integer hfc
local unit Ffc
local integer kfc
local unit jfc
local integer xfc
local unit vfc
local integer mfc
local unit Qfc
local integer Wfc
local unit Efc
local integer Zfc
local unit Ufc
local integer Ifc
local unit Pfc
local integer Afc
local unit Dfc
local integer Hfc
local unit Jfc
local integer Kfc
local unit Lfc
local integer Xfc
local unit Cfc
local integer Vfc
local unit Bfc
local integer Nfc
local unit Mfc
local integer wRc
local unit uRc
local integer rRc
local unit sRc
local integer tRc
local unit iRc
local integer SRc
local unit cRc
local integer oRc
local unit ORc
local integer lRc
local unit bRc
local integer yRc
local unit pRc
local integer eRc
local unit qRc
local integer aRc
local unit nRc
local integer dRc
local unit fRc
local integer RRc
local unit TRc
local integer YRc
local unit GRc
local integer gRc
local unit hRc
local integer FRc
local unit kRc
local integer jRc
local unit xRc
local integer vRc
local unit mRc
local integer QRc
local unit WRc
local integer ERc
local unit ZRc
local integer URc
local unit IRc
local integer PRc
local unit ARc
local integer DRc
local unit HRc
local integer JRc
local unit KRc
local integer LRc
local unit XRc
local integer CRc
local unit VRc
local integer BRc
local unit NRc
local integer MRc
local unit wTc
local integer uTc
local unit rTc
local integer sTc
local unit tTc
local integer iTc
local unit STc
local integer cTc
local unit oTc
local integer OTc
local unit lTc
local integer bTc
local unit yTc
local integer pTc
local unit eTc
local integer qTc
local unit aTc
local integer nTc
local unit dTc
local integer fTc
local unit RTc
local integer TTc
local unit YTc
local integer GTc
local unit gTc
local integer hTc
local unit FTc
local integer kTc
local unit jTc
local integer xTc
local unit vTc
local integer mTc
local unit QTc
local integer WTc
local unit ETc
local integer ZTc
local unit UTc
local integer ITc
local unit PTc
local integer ATc
local unit DTc
local integer HTc
local unit JTc
local integer KTc
local unit LTc
local integer XTc
local unit CTc
local integer VTc
local unit BTc
local integer NTc
local unit MTc
local integer wYc
local unit uYc
local integer rYc
local unit sYc
local integer tYc
local unit iYc
local integer SYc
local unit cYc
local integer oYc
local unit OYc
local integer lYc
local unit bYc
local integer yYc
local unit pYc
local integer eYc
local unit qYc
local integer aYc
local unit nYc
local integer dYc
local unit fYc
local integer RYc
local unit TYc
local integer YYc
local unit GYc
local integer gYc
local unit hYc
call UnitAddAbility(Dnc,Hnc)
set Jnc=Wnc
set Knc=$41305334
call UnitRemoveAbility(Jnc,Knc)
set Lnc=Wnc
set Xnc=$41777273
call UnitAddAbility(Lnc,Xnc)
set Cnc=Wnc
set Vnc=$41777273
call UnitRemoveAbility(Cnc,Vnc)
set Bnc=Wnc
set Nnc=$41304B5A
call UnitAddAbility(Bnc,Nnc)
set Mnc=Wnc
set wdc=$41304B5A
call UnitRemoveAbility(Mnc,wdc)
set udc=Wnc
set rdc=$41303736
call UnitAddAbility(udc,rdc)
set sdc=Wnc
set tdc=$41303736
call UnitRemoveAbility(sdc,tdc)
set idc=Wnc
set Sdc=$41304F46
call UnitAddAbility(idc,Sdc)
set cdc=Wnc
set odc=$41304F46
call UnitRemoveAbility(cdc,odc)
set Odc=Wnc
set ldc=$41304F45
call UnitAddAbility(Odc,ldc)
set bdc=Wnc
set ydc=$41304F45
call UnitRemoveAbility(bdc,ydc)
set pdc=Wnc
set edc=$41303839
call UnitAddAbility(pdc,edc)
set qdc=Wnc
set adc=$41303839
call UnitRemoveAbility(qdc,adc)
set ndc=Wnc
set ddc=$41303653
call UnitAddAbility(ndc,ddc)
set fdc=Wnc
set Rdc=$41303653
call UnitRemoveAbility(fdc,Rdc)
set Tdc=Wnc
set Ydc=$41303658
call UnitAddAbility(Tdc,Ydc)
set Gdc=Wnc
set gdc=$41303658
call UnitRemoveAbility(Gdc,gdc)
set hdc=Wnc
set Fdc=$41303845
call UnitAddAbility(hdc,Fdc)
set kdc=Wnc
set jdc=$41303845
call UnitRemoveAbility(kdc,jdc)
set xdc=Wnc
set vdc=$41304F55
call UnitAddAbility(xdc,vdc)
set mdc=Wnc
set Qdc=$41304F55
call UnitRemoveAbility(mdc,Qdc)
set Wdc=Wnc
set Edc=$41304F56
call UnitAddAbility(Wdc,Edc)
set Zdc=Wnc
set Udc=$41304F56
call UnitRemoveAbility(Zdc,Udc)
set Idc=Wnc
set Pdc=$41303656
call UnitAddAbility(Idc,Pdc)
set Adc=Wnc
set Ddc=$41303656
call UnitRemoveAbility(Adc,Ddc)
set Hdc=Wnc
set Jdc=$41305036
call UnitAddAbility(Hdc,Jdc)
set Kdc=Wnc
set Ldc=$41305036
call UnitRemoveAbility(Kdc,Ldc)
set Xdc=Wnc
set Cdc=$41305035
call UnitAddAbility(Xdc,Cdc)
set Vdc=Wnc
set Bdc=$41305035
call UnitRemoveAbility(Vdc,Bdc)
set Ndc=Wnc
set Mdc=$41303844
call UnitAddAbility(Ndc,Mdc)
set wfc=Wnc
set ufc=$41303844
call UnitRemoveAbility(wfc,ufc)
set rfc=Wnc
set sfc=$41303732
call UnitAddAbility(rfc,sfc)
set tfc=Wnc
set ifc=$41303732
call UnitRemoveAbility(tfc,ifc)
set Sfc=Wnc
set cfc=$41303846
call UnitAddAbility(Sfc,cfc)
set ofc=Wnc
set Ofc=$41303846
call UnitRemoveAbility(ofc,Ofc)
set lfc=Wnc
set bfc=$41303847
call UnitAddAbility(lfc,bfc)
set yfc=Wnc
set pfc=$41303847
call UnitRemoveAbility(yfc,pfc)
set efc=Wnc
set qfc=$41303849
call UnitAddAbility(efc,qfc)
set afc=Wnc
set nfc=$41303849
call UnitRemoveAbility(afc,nfc)
set dfc=Wnc
set ffc=$4130384A
call UnitAddAbility(dfc,ffc)
set Rfc=Wnc
set Tfc=$4130384A
call UnitRemoveAbility(Rfc,Tfc)
set Yfc=Wnc
set Gfc=$41303657
call UnitAddAbility(Yfc,Gfc)
set gfc=Wnc
set hfc=$41303657
call UnitRemoveAbility(gfc,hfc)
set Ffc=Wnc
set kfc=$41304C38
call UnitAddAbility(Ffc,kfc)
set jfc=Wnc
set xfc=$41304C38
call UnitRemoveAbility(jfc,xfc)
set vfc=Wnc
set mfc=$4130384B
call UnitAddAbility(vfc,mfc)
set Qfc=Wnc
set Wfc=$4130384B
call UnitRemoveAbility(Qfc,Wfc)
set Efc=Wnc
set Zfc=$41304C41
call UnitAddAbility(Efc,Zfc)
set Ufc=Wnc
set Ifc=$41304C41
call UnitRemoveAbility(Ufc,Ifc)
set Pfc=Wnc
set Afc=$4130384C
call UnitAddAbility(Pfc,Afc)
set Dfc=Wnc
set Hfc=$4130384C
call UnitRemoveAbility(Dfc,Hfc)
set Jfc=Wnc
set Kfc=$4130384C
call UnitAddAbility(Jfc,Kfc)
set Lfc=Wnc
set Xfc=$4130384C
call UnitRemoveAbility(Lfc,Xfc)
set Cfc=Wnc
set Vfc=$41616D32
call UnitAddAbility(Cfc,Vfc)
set Bfc=Wnc
set Nfc=$41616D32
call UnitRemoveAbility(Bfc,Nfc)
set Mfc=Wnc
set wRc=$41303543
call UnitAddAbility(Mfc,wRc)
set uRc=Wnc
set rRc=$41303543
call UnitRemoveAbility(uRc,rRc)
set sRc=Wnc
set tRc=$41304C52
call UnitAddAbility(sRc,tRc)
set iRc=Wnc
set SRc=$41304C52
call UnitRemoveAbility(iRc,SRc)
set cRc=Wnc
set oRc=$41304C57
call UnitAddAbility(cRc,oRc)
set ORc=Wnc
set lRc=$41304C57
call UnitRemoveAbility(ORc,lRc)
set bRc=Wnc
set yRc=$414E6D6F
call UnitAddAbility(bRc,yRc)
set pRc=Wnc
set eRc=$414E6D6F
call UnitRemoveAbility(pRc,eRc)
set qRc=Wnc
set aRc=$41304643
call UnitAddAbility(qRc,aRc)
set nRc=Wnc
set dRc=$41304643
call UnitRemoveAbility(nRc,dRc)
set fRc=Wnc
set RRc=$41303358
call UnitAddAbility(fRc,RRc)
set TRc=Wnc
set YRc=$41303358
call UnitRemoveAbility(TRc,YRc)
set GRc=Wnc
set gRc=$41304E4C
call UnitAddAbility(GRc,gRc)
set hRc=Wnc
set FRc=$41304E4C
call UnitRemoveAbility(hRc,FRc)
set kRc=Wnc
set jRc=$41304A4D
call UnitAddAbility(kRc,jRc)
set xRc=Wnc
set vRc=$41304A4D
call UnitRemoveAbility(xRc,vRc)
set mRc=Wnc
set QRc=$41303834
call UnitAddAbility(mRc,QRc)
set WRc=Wnc
set ERc=$41303834
call UnitRemoveAbility(WRc,ERc)
set ZRc=Wnc
set URc=$41304D52
call UnitAddAbility(ZRc,URc)
set IRc=Wnc
set PRc=$41304D52
call UnitRemoveAbility(IRc,PRc)
set ARc=Wnc
set DRc=$414E7663
call UnitAddAbility(ARc,DRc)
set HRc=Wnc
set JRc=$414E7663
call UnitRemoveAbility(HRc,JRc)
set KRc=Wnc
set LRc=$41303359
call UnitAddAbility(KRc,LRc)
set XRc=Wnc
set CRc=$41303359
call UnitRemoveAbility(XRc,CRc)
set VRc=Wnc
set BRc=$4130325A
call UnitAddAbility(VRc,BRc)
set NRc=Wnc
set MRc=$4130325A
call UnitRemoveAbility(NRc,MRc)
set wTc=Wnc
set uTc=$41436373
call UnitAddAbility(wTc,uTc)
set rTc=Wnc
set sTc=$41436373
call UnitRemoveAbility(rTc,sTc)
set tTc=Wnc
set iTc=$41303352
call UnitAddAbility(tTc,iTc)
set STc=Wnc
set cTc=$41303352
call UnitRemoveAbility(STc,cTc)
set oTc=Wnc
set OTc=$41726F61
call UnitAddAbility(oTc,OTc)
set lTc=Wnc
set bTc=$41726F61
call UnitRemoveAbility(lTc,bTc)
set yTc=Wnc
set pTc=$4130544F
call UnitAddAbility(yTc,pTc)
set eTc=Wnc
set qTc=$4130544F
call UnitRemoveAbility(eTc,qTc)
set aTc=Wnc
set nTc=$41304E4E
call UnitAddAbility(aTc,nTc)
set dTc=Wnc
set fTc=$41304E4E
call UnitRemoveAbility(dTc,fTc)
set RTc=Wnc
set TTc=$41437369
call UnitAddAbility(RTc,TTc)
set YTc=Wnc
set GTc=$41437369
call UnitRemoveAbility(YTc,GTc)
set gTc=Wnc
set hTc=$41305454
call UnitAddAbility(gTc,hTc)
set FTc=Wnc
set kTc=$41305454
call UnitRemoveAbility(FTc,kTc)
set jTc=Wnc
set xTc=$41303143
call UnitAddAbility(jTc,xTc)
set vTc=Wnc
set mTc=$41303143
call UnitRemoveAbility(vTc,mTc)
set QTc=Wnc
set WTc=$41304730
call UnitAddAbility(QTc,WTc)
set ETc=Wnc
set ZTc=$41304730
call UnitRemoveAbility(ETc,ZTc)
set UTc=Wnc
set ITc=$4143656E
call UnitAddAbility(UTc,ITc)
set PTc=Wnc
set ATc=$4143656E
call UnitRemoveAbility(PTc,ATc)
set DTc=Wnc
set HTc=$41304832
call UnitAddAbility(DTc,HTc)
set JTc=Wnc
set KTc=$41304832
call UnitRemoveAbility(JTc,KTc)
set LTc=Wnc
set XTc=$41303636
call UnitAddAbility(LTc,XTc)
set CTc=Wnc
set VTc=$41303636
call UnitRemoveAbility(CTc,VTc)
set BTc=Wnc
set NTc=$41706F73
call UnitAddAbility(BTc,NTc)
set MTc=Wnc
set wYc=$41706F73
call UnitRemoveAbility(MTc,wYc)
set uYc=Wnc
set rYc=$41305453
call UnitAddAbility(uYc,rYc)
set sYc=Wnc
set tYc=$41305453
call UnitRemoveAbility(sYc,tYc)
set iYc=Wnc
set SYc=$4130534C
call UnitAddAbility(iYc,SYc)
set cYc=Wnc
set oYc=$4130534C
call UnitRemoveAbility(cYc,oYc)
set OYc=Wnc
set lYc=$41304E45
call UnitAddAbility(OYc,lYc)
set bYc=Wnc
set yYc=$41304E45
call UnitRemoveAbility(bYc,yYc)
set pYc=Wnc
set eYc=$41304B37
call UnitAddAbility(pYc,eYc)
set qYc=Wnc
set aYc=$41304B37
call UnitRemoveAbility(qYc,aYc)
set nYc=Wnc
set dYc=$41305449
call UnitAddAbility(nYc,dYc)
set fYc=Wnc
set RYc=$41305449
call UnitRemoveAbility(fYc,RYc)
set TYc=Wnc
set YYc=$4130394C
call UnitAddAbility(TYc,YYc)
set GYc=Wnc
set gYc=$4130394C
call UnitRemoveAbility(GYc,gYc)
set hYc=Wnc
call RemoveUnit(hYc)
set Wnc=null
set Enc=null
set Dnc=null
set Jnc=null
set Lnc=null
set Cnc=null
set Bnc=null
set Mnc=null
set udc=null
set sdc=null
set idc=null
set cdc=null
set Odc=null
set bdc=null
set pdc=null
set qdc=null
set ndc=null
set fdc=null
set Tdc=null
set Gdc=null
set hdc=null
set kdc=null
set xdc=null
set mdc=null
set Wdc=null
set Zdc=null
set Idc=null
set Adc=null
set Hdc=null
set Kdc=null
set Xdc=null
set Vdc=null
set Ndc=null
set wfc=null
set rfc=null
set tfc=null
set Sfc=null
set ofc=null
set lfc=null
set yfc=null
set efc=null
set afc=null
set dfc=null
set Rfc=null
set Yfc=null
set gfc=null
set Ffc=null
set jfc=null
set vfc=null
set Qfc=null
set Efc=null
set Ufc=null
set Pfc=null
set Dfc=null
set Jfc=null
set Lfc=null
set Cfc=null
set Bfc=null
set Mfc=null
set uRc=null
set sRc=null
set iRc=null
set cRc=null
set ORc=null
set bRc=null
set pRc=null
set qRc=null
set nRc=null
set fRc=null
set TRc=null
set GRc=null
set hRc=null
set kRc=null
set xRc=null
set mRc=null
set WRc=null
set ZRc=null
set IRc=null
set ARc=null
set HRc=null
set KRc=null
set XRc=null
set VRc=null
set NRc=null
set wTc=null
set rTc=null
set tTc=null
set STc=null
set oTc=null
set lTc=null
set yTc=null
set eTc=null
set aTc=null
set dTc=null
set RTc=null
set YTc=null
set gTc=null
set FTc=null
set jTc=null
set vTc=null
set QTc=null
set ETc=null
set UTc=null
set PTc=null
set DTc=null
set JTc=null
set LTc=null
set CTc=null
set BTc=null
set MTc=null
set uYc=null
set sYc=null
set iYc=null
set cYc=null
set OYc=null
set bYc=null
set pYc=null
set qYc=null
set nYc=null
set fYc=null
set TYc=null
set GYc=null
set hYc=null
set FYc=null
return true
endfunction
function EZp takes nothing returns boolean
local trigger eZp
local trigger qZp
local playerunitevent aZp
local trigger nZp
local playerunitevent dZp
local integer fZp
local trigger RZp
local boolexpr TZp
local trigger YZp
local code GZp
local trigger gZp
local trigger hZp
local playerunitevent FZp
local trigger kZp
local playerunitevent jZp
local integer xZp
local trigger vZp
local boolexpr mZp
local trigger QZp
local code WZp
set iq=CreateTrigger()
set Sq=CreateTrigger()
set eZp=iq
call DisableTrigger(eZp)
set qZp=iq
set aZp=EVENT_PLAYER_UNIT_SPELL_EFFECT
set nZp=qZp
set dZp=aZp
set fZp=0
loop
call TriggerRegisterPlayerUnitEvent(nZp,Player(fZp),dZp,null)
set fZp=fZp+1
exitwhen fZp==bj_MAX_PLAYER_SLOTS
endloop
set RZp=iq
set TZp=Condition(I2)
call TriggerAddCondition(RZp,TZp)
set YZp=iq
set GZp=P2
call TriggerAddAction(YZp,GZp)
set gZp=Sq
call DisableTrigger(gZp)
set hZp=Sq
set FZp=EVENT_PLAYER_UNIT_DEATH
set kZp=hZp
set jZp=FZp
set xZp=0
loop
call TriggerRegisterPlayerUnitEvent(kZp,Player(xZp),jZp,null)
set xZp=xZp+1
exitwhen xZp==bj_MAX_PLAYER_SLOTS
endloop
set vZp=Sq
set mZp=Condition(A2)
call TriggerAddCondition(vZp,mZp)
set QZp=Sq
set WZp=D2
call TriggerAddAction(QZp,WZp)
set eZp=null
set qZp=null
set aZp=null
set nZp=null
set dZp=null
set RZp=null
set TZp=null
set YZp=null
set gZp=null
set hZp=null
set FZp=null
set kZp=null
set jZp=null
set vZp=null
set mZp=null
set QZp=null
return true
endfunction
function YEp takes playercolor NWp returns integer
local playercolor rEp=NWp
local integer sEp=0
local integer tEp=0
local integer iEp=bj_MAX_PLAYER_SLOTS-1
local integer MWp
local integer wEp
local integer uEp
local playercolor SEp
local integer cEp
local integer oEp
local integer OEp
local integer lEp
local integer bEp
local integer yEp
local integer pEp
local integer eEp
local integer qEp
local integer aEp
local integer nEp
local integer dEp
local integer fEp
local integer REp
local integer TEp
loop
exitwhen tEp>iEp
if JY[tEp]==rEp then
set sEp=tEp
exitwhen true
endif
set tEp=tEp+1
endloop
if sEp<=23 then
set SEp=NWp
set cEp=0
set oEp=0
set OEp=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen oEp>OEp
if JY[oEp]==SEp then
set cEp=oEp
exitwhen true
endif
set oEp=oEp+1
endloop
set pEp=Db[cEp]
set eEp=Hb[cEp]
set qEp=Jb[cEp]
set MWp=pEp
set wEp=eEp
set uEp=qEp
else
set aEp=Ib
set nEp=Pb
set dEp=Ab
set lEp=aEp
set bEp=nEp
set yEp=dEp
set fEp=lEp
set REp=bEp
set TEp=yEp
set MWp=fEp
set wEp=REp
set uEp=TEp
endif
set nW=MWp
set dW=wEp
set fW=uEp
set rEp=null
set SEp=null
return nW
endfunction
function fEb takes player wEb returns string
local player pEb=wEb
local integer aEb=YEp(GetPlayerColor(pEb))
local integer nEb=dW
local integer dEb=fW
local integer uEb=aEb
local integer rEb=nEb
local integer sEb=dEb
local integer tEb=uEb
local integer iEb=tEb/16
local integer SEb=tEb-iEb*16
local string eEb="|cff"+Kb[iEb]+Kb[SEb]
local integer cEb=rEb
local integer oEb=cEb/16
local integer OEb=cEb-oEb*16
local string qEb=eEb+Kb[oEb]+Kb[OEb]
local integer lEb=sEb
local integer bEb=lEb/16
local integer yEb=lEb-bEb*16
set pEb=null
return qEb+Kb[bEb]+Kb[yEb]+GetPlayerName(wEb)+"|r"
endfunction
function Eas takes nothing returns nothing
local player Was=GetTriggerPlayer()
if Was==Ud then
call DisplayTextToPlayer(Ud,0.,0.,"You have stolen: "+I2S(Ye)+" gold")
if Tu!=Ud then
call DisplayTextToPlayer(Ud,0.,0.,"You have stolen: "+I2S(Ge)+" from "+fEb(Tu))
endif
if gu!=Ud then
call DisplayTextToPlayer(Ud,0.,0.,"You have stolen: "+I2S(ge)+" from "+fEb(gu))
endif
if Yu!=Ud then
call DisplayTextToPlayer(Ud,0.,0.,"You have stolen: "+I2S(he)+" from "+fEb(Yu))
endif
if Gu!=Ud then
call DisplayTextToPlayer(Ud,0.,0.,"You have stolen: "+I2S(Fe)+" from "+fEb(Gu))
endif
else
call DisplayTextToPlayer(Was,0.,0.,"This command only works on Vulpera race!")
endif
set Was=null
endfunction
function Eau takes nothing returns boolean
return true
endfunction
function EbS takes nothing returns boolean
local playerunitevent QbS=EVENT_PLAYER_UNIT_SPELL_CAST
local code WbS=T7
call emO(QbS,null,WbS,null)
set QbS=null
return true
endfunction
function Eci takes nothing returns nothing
local unit aci
local unit nci
local unit dci
local unittype fci
local unit Rci
local unit Tci
local unit Yci
local unit Gci
local unit gci
local real hci
local unit Fci
local integer kci
local unit jci
local string xci
local widget vci
local boolean mci
local player Qci
local real Wci
if mR!=null and fR==30 then
set aci=GetEnteringUnit()
set dci=aci
set fci=UNIT_TYPE_HERO
if IsUnitType(dci,fci)==true then
set Rci=aci
set mci=GetUnitTypeId(Rci)!=$456D6E73
else
set mci=false
endif
if mci then
set Tci=aci
set Qci=GetOwningPlayer(Tci)
set Yci=aci
set Wci=GetUnitX(Yci)
set Gci=aci
set nci=CreateUnit(Qci,$75303030,Wci,GetUnitY(Gci),0.)
set gci=nci
set hci=5.
call UnitApplyTimedLife(gci,$42544C46,hci)
set Fci=nci
set kci=$41333045
call UnitAddAbility(Fci,kci)
set jci=nci
set xci="innerfire"
set vci=aci
call IssueTargetOrder(jci,xci,vci)
endif
endif
set aci=null
set nci=null
set dci=null
set fci=null
set Rci=null
set Tci=null
set Yci=null
set Gci=null
set gci=null
set Fci=null
set jci=null
set vci=null
set Qci=null
endfunction
function Eee takes nothing returns boolean
return true
endfunction
function Egp takes nothing returns boolean
return true
endfunction
function Egt takes nothing returns nothing
local timerdialog FGt
local player kGt
local unit jGt
local unit xGt
local unit vGt
local player mGt
local integer QGt
local real WGt
local real EGt
local real ZGt
local real UGt
local unit IGt
local player PGt
local player AGt
local integer DGt
local real HGt
local real JGt
local real KGt
local real LGt
local unit XGt
local player CGt
local player VGt
local integer BGt
local real NGt
local real MGt
local real wgt
local real ugt
local unit rgt
local player sgt
local player tgt
local real igt
local real Sgt
local unit cgt
local unit ogt
local timerdialog Ogt
local player lgt
local integer bgt
local real ygt
local real pgt
local player egt
local integer qgt
local real agt
local real ngt
local player dgt
local integer fgt
local real Rgt
local real Tgt
local real Ygt
local real Ggt
local real ggt
local real hgt
local real Fgt
local real kgt
local real jgt
local real xgt
local real vgt
local real mgt
local real Qgt
local real Wgt
if Pu==false and Cu<3 then
set Pu=true
set FGt=tr
call DestroyTimerDialog(FGt)
call TimerStart(ir,60.,false,Xww_1714)
set tr=CreateTimerDialog(ir)
set Ogt=tr
set kGt=gu
call TimerDialogSetTitle(Ogt,GetPlayerName(kGt)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set jGt=Zu
call RemoveUnit(jGt)
set xGt=Uu
call RemoveUnit(xGt)
set vGt=Iu
call RemoveUnit(vGt)
set mGt=gu
set PGt=Gu
set IGt=F[GetPlayerId(PGt)]
set QGt=GetUnitTypeId(IGt)
set Ygt=-400.
set Ggt=0.
set WGt=Ygt
set EGt=Ggt
set ggt=bj_UNIT_FACING
set ZGt=ggt
set lgt=mGt
set bgt=QGt
set ygt=WGt
set pgt=EGt
set hgt=ZGt
set UGt=hgt
set Zu=CreateUnit(lgt,bgt,ygt,pgt,UGt*57.295779513)
set AGt=gu
set CGt=Tu
set XGt=F[GetPlayerId(CGt)]
set DGt=GetUnitTypeId(XGt)
set Fgt=0.
set kgt=400.
set HGt=Fgt
set JGt=kgt
set jgt=bj_UNIT_FACING
set KGt=jgt
set egt=AGt
set qgt=DGt
set agt=HGt
set ngt=JGt
set xgt=KGt
set LGt=xgt
set Uu=CreateUnit(egt,qgt,agt,ngt,LGt*57.295779513)
set VGt=gu
set sgt=Yu
set rgt=F[GetPlayerId(sgt)]
set BGt=GetUnitTypeId(rgt)
set vgt=0.
set mgt=-400.
set NGt=vgt
set MGt=mgt
set Qgt=bj_UNIT_FACING
set wgt=Qgt
set dgt=VGt
set fgt=BGt
set Rgt=NGt
set Tgt=MGt
set Wgt=wgt
set ugt=Wgt
set Iu=CreateUnit(dgt,fgt,Rgt,Tgt,ugt*57.295779513)
set tgt=gu
set cgt=Zu
set igt=GetUnitX(cgt)
set ogt=Zu
set Sgt=GetUnitY(ogt)
if GetLocalPlayer()==tgt then
call SetCameraPosition(igt,Sgt)
endif
endif
set FGt=null
set kGt=null
set jGt=null
set xGt=null
set vGt=null
set mGt=null
set IGt=null
set PGt=null
set AGt=null
set XGt=null
set CGt=null
set VGt=null
set rgt=null
set sgt=null
set tgt=null
set cgt=null
set ogt=null
set Ogt=null
set lgt=null
set egt=null
set dgt=null
endfunction
function Egy takes nothing returns nothing
local integer Ygy=GetSpellAbilityId()
local unit Ggy
local real ggy
local real hgy
local unit Fgy
local unit kgy
local effect jgy
local string xgy
local real vgy
local real mgy
local real Qgy
local real Wgy
if Ygy==$41304E4D then
set Ggy=GetSpellAbilityUnit()
set Fgy=Ggy
set ggy=GetUnitX(Fgy)
set kgy=Ggy
set hgy=GetUnitY(kgy)
set xgy="CallOfAggression.mdl"
set Qgy=ggy
set Wgy=hgy
set vgy=Qgy
set mgy=Wgy
set jgy=AddSpecialEffect(xgy,vgy,mgy)
call DestroyEffect(jgy)
endif
set Ggy=null
set Fgy=null
set kgy=null
set jgy=null
endfunction
function EjS takes nothing returns boolean
local trigger jjS
local trigger xjS
local real vjS
local boolean mjS
local trigger QjS
local code WjS
set Ig=CreateTrigger()
set jjS=Ig
call DisableTrigger(jjS)
set xjS=Ig
set vjS=1.
set mjS=true
call TriggerRegisterTimerEvent(xjS,vjS,mjS)
set QjS=Ig
set WjS=Grw
call TriggerAddAction(QjS,WjS)
set jjS=null
set xjS=null
set QjS=null
return true
endfunction
function Ekl takes nothing returns boolean
return true
endfunction
function Eku takes nothing returns boolean
local unit Fku=GetFilterUnit()
local unit kku=Fku
local unit jku
local player xku
local unit vku
local unittype mku
local boolean Qku
local boolean Wku
if UnitAlive(kku) then
set jku=Fku
set xku=eh
set Qku=IsUnitEnemy(jku,xku)
else
set Qku=false
endif
if Qku then
set vku=Fku
set mku=UNIT_TYPE_STRUCTURE
set Wku=IsUnitType(vku,mku)==false
else
set Wku=false
endif
set Fku=null
set kku=null
set jku=null
set xku=null
set vku=null
set mku=null
return Wku
endfunction
function ElS takes nothing returns boolean
return true
endfunction
function Elr takes nothing returns nothing
local item Wlr=GetManipulatedItem()
call RemoveItem(Wlr)
set Wlr=null
endfunction
function EnS takes nothing returns boolean
local trigger vnS
local trigger mnS
local rect QnS
local region WnS
set Fy=CreateTrigger()
set vnS=Fy
call DisableTrigger(vnS)
set mnS=Fy
set QnS=bj_mapInitialPlayableArea
set WnS=CreateRegion()
call RegionAddRect(WnS,QnS)
call TriggerRegisterEnterRegion(mnS,WnS,null)
call TriggerAddAction(Fy,I1)
set vnS=null
set mnS=null
set QnS=null
set WnS=null
return true
endfunction
function Enl takes nothing returns nothing
local texttag mnl
local string Qnl
local real Wnl
if Fh>0 then
set Fh=Fh-1
set mnl=hh
set Qnl=I2S(Fh)
set Wnl=13.
call SetTextTagText(mnl,Qnl,Wnl*.0023)
endif
set mnl=null
endfunction
function Eol takes nothing returns boolean
local playerunitevent Qol=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code Wol=R6
call emO(Qol,null,Wol,null)
set Qol=null
return true
endfunction
function Eqt takes nothing returns nothing
local unit nqt=GetTriggerUnit()
local unit Rqt=nqt
local integer dqt=GetUnitTypeId(Rqt)
local trigger fqt
local unit Tqt
local integer Yqt
local unit Gqt
local integer gqt
local unit hqt
local integer Fqt
local unit kqt
local integer jqt
local trigger xqt
local code vqt
local trigger mqt
local real Qqt
local trigger Wqt
if dqt==$484D3038 then
set Tqt=fg
set Yqt=$414D6265
call UnitRemoveAbility(Tqt,Yqt)
set Gqt=fg
set gqt=$414D6266
call UnitAddAbility(Gqt,gqt)
set hqt=fg
set Fqt=$414D6267
call UnitAddAbility(hqt,Fqt)
set kqt=fg
set jqt=$414D6268
call UnitAddAbility(kqt,jqt)
set fqt=CreateTrigger()
set xqt=fqt
set vqt=rrw
call TriggerAddAction(xqt,vqt)
set mqt=fqt
set Qqt=.4
call TriggerRegisterTimerEvent(mqt,Qqt,true)
set Wqt=GetTriggeringTrigger()
call DestroyTrigger(Wqt)
endif
set nqt=null
set fqt=null
set Rqt=null
set Tqt=null
set Gqt=null
set hqt=null
set kqt=null
set xqt=null
set mqt=null
set Wqt=null
endfunction
function Erb takes nothing returns boolean
local unit arb=GetFilterUnit()
local unit nrb=arb
local unit drb=GetSpellAbilityUnit()
local unit frb
local player Rrb
local unit Trb
local unit Yrb
local unit Grb
local unittype grb
local unit hrb
local unittype Frb
local unit krb
local integer jrb
local boolean xrb
local boolean vrb
local boolean mrb
local boolean Qrb
local boolean Wrb
if nrb!=null and drb!=null then
set frb=nrb
set Trb=drb
set Rrb=GetOwningPlayer(Trb)
set xrb=IsUnitEnemy(frb,Rrb)
else
set xrb=false
endif
if xrb==true then
set Yrb=arb
set vrb=UnitAlive(Yrb)==true
else
set vrb=false
endif
if vrb then
set Grb=arb
set grb=UNIT_TYPE_STRUCTURE
set mrb=IsUnitType(Grb,grb)==false
else
set mrb=false
endif
if mrb then
set hrb=arb
set Frb=UNIT_TYPE_HERO
set Qrb=IsUnitType(hrb,Frb)==false
else
set Qrb=false
endif
if Qrb then
set krb=arb
set jrb=$42303831
set Wrb=GetUnitAbilityLevel(krb,jrb)>0==false
else
set Wrb=false
endif
set arb=null
set nrb=null
set drb=null
set frb=null
set Rrb=null
set Trb=null
set Yrb=null
set Grb=null
set grb=null
set hrb=null
set Frb=null
set krb=null
return Wrb
endfunction
function EtS takes nothing returns boolean
return true
endfunction
function Etb takes nothing returns boolean
return true
endfunction
function Etu takes nothing returns boolean
local unit vtu=GetFilterUnit()
local unit mtu
local integer Qtu
local boolean Wtu
if GetUnitTypeId(vtu)==$456B6767 then
set mtu=GetFilterUnit()
set Qtu=$41706976
set Wtu=GetUnitAbilityLevel(mtu,Qtu)==0
else
set Wtu=false
endif
set vtu=null
set mtu=null
return Wtu
endfunction
function Euu takes nothing returns boolean
return true
endfunction
function Evi takes nothing returns nothing
local integer Wvi=GetResearched()
if Wvi==$52303632 then
set aO=true
endif
endfunction
function EwS takes nothing returns boolean
return true
endfunction
function Ewu takes nothing returns boolean
local trigger jwu
local trigger xwu
local playerunitevent vwu
local trigger mwu
local playerunitevent Qwu
local integer Wwu
set xy=CreateTrigger()
set jwu=xy
call DisableTrigger(jwu)
set xwu=xy
set vwu=EVENT_PLAYER_UNIT_ATTACKED
set mwu=xwu
set Qwu=vwu
set Wwu=0
loop
call TriggerRegisterPlayerUnitEvent(mwu,Player(Wwu),Qwu,null)
set Wwu=Wwu+1
exitwhen Wwu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(xy,D1)
set jwu=null
set xwu=null
set vwu=null
set mwu=null
set Qwu=null
return true
endfunction
function lGu takes unit KYu returns nothing
local unit XYu=KYu
local integer LYu=GetUnitTypeId(XYu)
local unit CYu
local real VYu
local unit BYu
local unitstate NYu
local real MYu
local unit wGu
local unitstate uGu
local unit rGu
local integer sGu
local integer tGu
local unit iGu
local integer SGu
local integer cGu
local unit oGu
local unitstate OGu
if LYu==$78303121 then
set CYu=KYu
set VYu=282.
set BYu=CYu
set NYu=UNIT_STATE_MANA
set MYu=VYu
set oGu=BYu
set OGu=NYu
set wGu=BYu
set uGu=NYu
call SetUnitState(oGu,OGu,GetUnitState(wGu,uGu)+MYu)
endif
if LYu==$78303130 then
set rGu=KYu
set sGu=$414D3274
set tGu=2
call SetUnitAbilityLevel(rGu,sGu,tGu)
endif
if LYu==$78303131 then
set iGu=KYu
set SGu=$414D3274
set cGu=3
call SetUnitAbilityLevel(iGu,SGu,cGu)
endif
set XYu=null
set CYu=null
set BYu=null
set NYu=null
set wGu=null
set uGu=null
set rGu=null
set iGu=null
set oGu=null
set OGu=null
endfunction
function Eyc takes nothing returns nothing
call lGu(GetTriggerUnit())
endfunction
function F2S takes nothing returns boolean
return true
endfunction
function h2e takes integer a2e,unit n2e,unit d2e returns nothing
local integer f2e
local unit R2e
local integer T2e
local unit Y2e
local integer G2e
local integer g2e
if a2e==$414D3074 then
set f2e=GetUnitAbilityLevel(d2e,$414D3074)
set R2e=n2e
set T2e=$414D3073
call UnitAddAbility(R2e,T2e)
set Y2e=n2e
set G2e=$414D3073
set g2e=f2e
call SetUnitAbilityLevel(Y2e,G2e,g2e)
endif
set R2e=null
set Y2e=null
endfunction
function F2e takes nothing returns nothing
call h2e(GetSpellAbilityId(),GetSpellTargetUnit(),GetTriggerUnit())
endfunction
function F2y takes nothing returns boolean
local trigger f2y
local playerunitevent R2y
local trigger T2y
local playerunitevent Y2y
local integer G2y
local trigger g2y
local code h2y
set hb=CreateTrigger()
set f2y=hb
set R2y=EVENT_PLAYER_UNIT_ATTACKED
set T2y=f2y
set Y2y=R2y
set G2y=0
loop
call TriggerRegisterPlayerUnitEvent(T2y,Player(G2y),Y2y,null)
set G2y=G2y+1
exitwhen G2y==bj_MAX_PLAYER_SLOTS
endloop
set g2y=hb
set h2y=K3
call TriggerAddAction(g2y,h2y)
set f2y=null
set R2y=null
set T2y=null
set Y2y=null
set g2y=null
return true
endfunction
function vHy takes string cHy returns boolean
local trigger oHy
local trigger OHy
local rect lHy
local region bHy
local trigger yHy
local code pHy
local trigger eHy
local trigger qHy
local rect aHy
local region nHy
local trigger dHy
local code fHy
local trigger RHy
local trigger THy
local rect YHy
local region GHy
local trigger gHy
local code hHy
local playerunitevent FHy
local code kHy
local playerunitevent jHy
local code xHy
set aW[qW]=cHy
set qW=qW+1
set Dp=null
set Hp=null
set Jp=null
set Kp=null
set Lp=null
set Xp=null
set Cp=CreateTrigger()
set Vp=CreateTrigger()
set Bp=CreateTrigger()
set re=1
set ce=kHw("when calling new_LinkedList in Expeditions, line 38")
set oHy=Cp
call DisableTrigger(oHy)
set OHy=Cp
set lHy=bj_mapInitialPlayableArea
set bHy=CreateRegion()
call RegionAddRect(bHy,lHy)
call TriggerRegisterEnterRegion(OHy,bHy,null)
set yHy=Cp
set pHy=A4
call TriggerAddAction(yHy,pHy)
set eHy=Bp
call DisableTrigger(eHy)
set qHy=Bp
set aHy=bj_mapInitialPlayableArea
set nHy=CreateRegion()
call RegionAddRect(nHy,aHy)
call TriggerRegisterEnterRegion(qHy,nHy,null)
set dHy=Bp
set fHy=D4
call TriggerAddAction(dHy,fHy)
set RHy=Vp
call DisableTrigger(RHy)
set THy=Vp
set YHy=bj_mapInitialPlayableArea
set GHy=CreateRegion()
call RegionAddRect(GHy,YHy)
call TriggerRegisterEnterRegion(THy,GHy,null)
set gHy=Vp
set hHy=H4
call TriggerAddAction(gHy,hHy)
call nye(ce,$41323431,$41323432,$41323433,$41323434,$41323435,$41323436,$41323437,$41323438,"when calling add in Expeditions, line 1172")
set FHy=EVENT_PLAYER_UNIT_SPELL_EFFECT
set kHy=J4
call emO(FHy,null,kHy,null)
set jHy=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xHy=K4
call emO(jHy,null,xHy,null)
set qW=qW-1
set oHy=null
set OHy=null
set lHy=null
set bHy=null
set yHy=null
set eHy=null
set qHy=null
set aHy=null
set nHy=null
set dHy=null
set RHy=null
set THy=null
set YHy=null
set GHy=null
set gHy=null
set FHy=null
set jHy=null
return true
endfunction
function F3w takes nothing returns boolean
set qW=0
return vHy("via function reference Expeditions, line 1")
endfunction
function F8e takes nothing returns nothing
local unit n8e=GetEnteringUnit()
local unit d8e=n8e
local unittype f8e=UNIT_TYPE_HERO
local unit R8e
local player T8e
local unit Y8e
local unit G8e
local integer g8e
local boolean h8e
if IsUnitType(d8e,f8e)==false then
set R8e=n8e
set Y8e=Ly
set T8e=GetOwningPlayer(Y8e)
set h8e=R8e!=null and IsUnitAlly(R8e,T8e)
else
set h8e=false
endif
if h8e then
set G8e=n8e
set g8e=$41303041
call UnitAddAbility(G8e,g8e)
endif
set n8e=null
set d8e=null
set f8e=null
set R8e=null
set T8e=null
set Y8e=null
set G8e=null
endfunction
function F9r takes nothing returns boolean
local trigger d9r
local trigger f9r
local playerunitevent R9r
local trigger T9r
local playerunitevent Y9r
local integer G9r
local trigger g9r
local code h9r
set fn=CreateTrigger()
set d9r=fn
call DisableTrigger(d9r)
set f9r=fn
set R9r=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set T9r=f9r
set Y9r=R9r
set G9r=0
loop
call TriggerRegisterPlayerUnitEvent(T9r,Player(G9r),Y9r,null)
set G9r=G9r+1
exitwhen G9r==bj_MAX_PLAYER_SLOTS
endloop
set g9r=fn
set h9r=s6
call TriggerAddAction(g9r,h9r)
set d9r=null
set f9r=null
set R9r=null
set T9r=null
set Y9r=null
set g9r=null
return true
endfunction
function FDb takes nothing returns nothing
local unit iDb=GetTriggerUnit()
local unit ODb=iDb
local integer SDb=GetUnitTypeId(ODb)
local unit lDb=iDb
local player cDb=GetOwningPlayer(lDb)
local player bDb=cDb
local integer oDb=GetPlayerId(bDb)
local sound yDb
local unit pDb
local real eDb
local real qDb
local real aDb
local unit nDb
local real dDb
local real fDb
local real RDb
local trigger TDb
local unit YDb
local real GDb
local real gDb
local real hDb
if SDb==$78303135 then
set yDb=og
if yDb!=null then
call StartSound(yDb)
endif
set pDb=iDb
set eDb=70.
set qDb=70.
set aDb=70.
call SetUnitScale(pDb,eDb*.01,qDb*.01,aDb*.01)
set i[oDb]=$484D3035
endif
if SDb==$6E6D7234 then
set nDb=iDb
set dDb=95.
set fDb=95.
set RDb=95.
call SetUnitScale(nDb,dDb*.01,fDb*.01,RDb*.01)
call SetPlayerTechResearched(cDb,$5230325A,1)
call SetPlayerTechResearched(Player(oDb+4),$5230325A,1)
set TDb=aG
call EnableTrigger(TDb)
set qG[oDb]=true
endif
if SDb==$68636173 then
call RemoveUnitFromStock(O[oDb],A[oDb])
call RemoveUnitFromStock(b[oDb],A[oDb])
call RemoveUnitFromStock(l[oDb],A[oDb])
set A[oDb]=$6E647472
call AddUnitToStock(O[oDb],A[oDb],1,3)
call AddUnitToStock(b[oDb],A[oDb],1,3)
call AddUnitToStock(l[oDb],A[oDb],1,3)
endif
if SDb==$686C756D then
call RemoveUnitFromStock(O[oDb],D[oDb])
call RemoveUnitFromStock(b[oDb],D[oDb])
call RemoveUnitFromStock(l[oDb],D[oDb])
set D[oDb]=$6E303356
call AddUnitToStock(O[oDb],D[oDb],1,3)
call AddUnitToStock(b[oDb],D[oDb],1,3)
call AddUnitToStock(l[oDb],D[oDb],1,3)
endif
if SDb==$6E65666D then
call RemoveUnitFromStock(O[oDb],H[oDb])
call RemoveUnitFromStock(b[oDb],H[oDb])
call RemoveUnitFromStock(l[oDb],H[oDb])
set H[oDb]=$6E303155
call AddUnitToStock(O[oDb],H[oDb],1,3)
call AddUnitToStock(b[oDb],H[oDb],1,3)
call AddUnitToStock(l[oDb],H[oDb],1,3)
endif
if SDb==$6E646831 then
set J[oDb]=$6E736767
endif
if SDb==$68616C74 then
set K[oDb]=$75617262
endif
if SDb==$68303253 then
set K[oDb]=$68303251
endif
if SDb==$6E677772 then
set L[oDb]=$6E676972
endif
if SDb==$6E6D7235 then
set YDb=iDb
set GDb=90.
set gDb=90.
set hDb=90.
call SetUnitScale(YDb,GDb*.01,gDb*.01,hDb*.01)
call SetPlayerTechResearched(cDb,$52303444,1)
call SetPlayerTechResearched(Player(oDb+4),$52303444,1)
endif
set iDb=null
set cDb=null
set ODb=null
set lDb=null
set bDb=null
set yDb=null
set pDb=null
set nDb=null
set TDb=null
set YDb=null
endfunction
function l3p takes string kMp returns nothing
local unit jMp
local integer xMp
local trigger vMp
local group mMp
local unit QMp
local real WMp
local real EMp
local filterfunc ZMp
local unit UMp
local group IMp
local integer PMp
local unit AMp
local unit DMp
local unit HMp
local trigger JMp
local unit KMp
local unit LMp
local group XMp
local group CMp
local unit VMp
local unit BMp
local unit NMp
local group MMp
local boolexpr w3p
local string u3p
local integer r3p
local real s3p
local integer t3p
local string i3p
local boolean S3p
local group c3p
local real o3p
local real O3p
set aW[qW]=kMp
set qW=qW+1
set jMp=GetAttacker()
set AMp=jMp
if GetUnitTypeId(AMp)==$6F303134 then
set DMp=jMp
set S3p=GetPlayerTechCount(GetOwningPlayer(DMp),$5268666C,true)>0
else
set S3p=false
endif
if S3p then
set HMp=jMp
set xMp=GetPlayerTechCount(GetOwningPlayer(HMp),$5268666C,true)
if GetRandomInt(1,100)<=15*xMp then
set vMp=GetTriggeringTrigger()
set JMp=vMp
call DisableTrigger(JMp)
set mMp=CreateGroup()
set QMp=GetTriggerUnit()
set WMp=I2R(20+10*xMp)
set EMp=I2R(100+25*xMp)
set ZMp=Filter(iuw)
set c3p=mMp
set KMp=QMp
set o3p=GetUnitX(KMp)
set LMp=QMp
call GroupEnumUnitsInRange(c3p,o3p,GetUnitY(LMp),EMp,ZMp)
set IMp=mMp
loop
set XMp=IMp
exitwhen not (FirstOfGroup(XMp)!=null)
set CMp=IMp
set VMp=FirstOfGroup(CMp)
call GroupRemoveUnit(CMp,VMp)
set UMp=VMp
call UnitDamageTarget(jMp,UMp,WMp,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_ENHANCED,WEAPON_TYPE_WHOKNOWS)
endloop
set BMp=QMp
set O3p=GetUnitX(BMp)
set NMp=QMp
call DestroyEffect(AddSpecialEffect("Conflagrate.mdl",O3p,GetUnitY(NMp)))
set MMp=mMp
call DestroyGroup(MMp)
set w3p=ZMp
call DestroyBoolExpr(w3p)
set u3p="when calling alloc_CallbackSingle_doAfter_SearingArrowsHuman in SearingArrowsHuman, line 124"
set aW[qW]=u3p
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set r3p=fF
set RF[r3p]=749
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_SearingArrowsHuman.","when calling error in SearingArrowsHuman, line 124")
set r3p=0
endif
else
set dF=dF-1
set r3p=nF[dF]
set RF[r3p]=749
endif
set qW=qW-1
set PMp=r3p
set rQ[PMp]=vMp
set s3p=3.
set t3p=PMp
set i3p="when calling doAfter in SearingArrowsHuman, line 124"
set aW[qW]=i3p
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),s3p,t3p,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set jMp=null
set vMp=null
set mMp=null
set QMp=null
set ZMp=null
set UMp=null
set IMp=null
set AMp=null
set DMp=null
set HMp=null
set JMp=null
set KMp=null
set LMp=null
set XMp=null
set CMp=null
set VMp=null
set BMp=null
set NMp=null
set MMp=null
set w3p=null
set c3p=null
endfunction
function FJo takes nothing returns nothing
set qW=0
call l3p("via function reference SearingArrowsHuman, line 130")
endfunction
function hfl takes string Mdl returns nothing
local unit wfl
local unit ufl
local effect rfl
local integer sfl
local integer tfl
local integer ifl
local unit Sfl
local integer cfl
local unit ofl
local unittype Ofl
local unit lfl
local widget bfl
local string yfl
local string pfl
local string efl
local integer qfl
local real afl
local integer nfl
local string dfl
local unit ffl
local integer Rfl
local player Tfl
local unit Yfl
local boolean Gfl
local boolean gfl
set aW[qW]=Mdl
set qW=qW+1
set wfl=GetKillingUnit()
set ufl=GetDyingUnit()
set Sfl=wfl
set cfl=$414D3667
if GetUnitAbilityLevel(Sfl,cfl)>0 then
set ofl=ufl
set Ofl=UNIT_TYPE_HERO
set Gfl=IsUnitType(ofl,Ofl)
else
set Gfl=false
endif
if Gfl then
set lfl=ufl
set gfl=not IsUnitIllusion(lfl)
else
set gfl=false
endif
if gfl then
set bfl=wfl
set yfl="UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
set pfl="overhead"
set rfl=AddSpecialEffectTarget(yfl,bfl,pfl)
set efl="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_BountyHunterEvent in BountyHunterEvent, line 21"
set aW[qW]=efl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set qfl=fF
set RF[qfl]=804
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_BountyHunterEvent.","when calling error in BountyHunterEvent, line 21")
set qfl=0
endif
else
set dF=dF-1
set qfl=nF[dF]
set RF[qfl]=804
endif
set qW=qW-1
set sfl=qfl
set cj[sfl]=rfl
set afl=.5
set nfl=sfl
set dfl="when calling doAfter in BountyHunterEvent, line 21"
set aW[qW]=dfl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),afl,nfl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set ffl=wfl
set Rfl=$414D3667
set tfl=100+25*GetUnitAbilityLevel(ffl,Rfl)
call UuS(wfl,tfl)
set Yfl=wfl
set Tfl=GetOwningPlayer(Yfl)
set ifl=GetPlayerId(Tfl)-4
set hr[ifl]=hr[ifl]+tfl
set Fr[ifl]=Fr[ifl]+tfl
set Br[ifl]=Br[ifl]+tfl
set Cr[ifl]=Cr[ifl]+tfl
endif
set qW=qW-1
set wfl=null
set ufl=null
set rfl=null
set Sfl=null
set ofl=null
set Ofl=null
set lfl=null
set bfl=null
set ffl=null
set Tfl=null
set Yfl=null
endfunction
function FJy takes nothing returns nothing
set qW=0
call hfl("via function reference BountyHunterEvent, line 16")
endfunction
function FVt takes string rVt returns nothing
local unit sVt
local integer tVt
local integer iVt
local unit SVt
local unit cVt
local unit oVt
local unit OVt
local unit lVt
local unit bVt
local unit yVt
local integer pVt
local unit eVt
local integer qVt
local integer aVt
local string nVt
local integer dVt
local real fVt
local integer RVt
local string TVt
local boolean YVt
local boolean GVt
local boolean gVt
local boolean hVt
set aW[qW]=rVt
set qW=qW+1
set sVt=GetAttacker()
set SVt=sVt
if GetUnitTypeId(SVt)==$6F30324F then
set YVt=true
else
set cVt=sVt
set YVt=GetUnitTypeId(cVt)==$6F30324D
endif
if YVt then
set GVt=true
else
set oVt=sVt
set GVt=GetUnitTypeId(oVt)==$6E303132
endif
if GVt then
set gVt=true
else
set OVt=sVt
set gVt=GetUnitTypeId(OVt)==$6E303147
endif
if gVt then
set lVt=sVt
set hVt=GetPlayerTechCount(GetOwningPlayer(lVt),$52303547,true)>0
else
set hVt=false
endif
if hVt then
set bVt=sVt
set tVt=GetPlayerTechCount(GetOwningPlayer(bVt),$52303547,true)
if GetRandomInt(1,100)<=20*tVt then
set yVt=sVt
set pVt=$4130584B
call UnitAddAbility(yVt,pVt)
set eVt=sVt
set qVt=$4130584B
set aVt=tVt
call SetUnitAbilityLevel(eVt,qVt,aVt)
set nVt="when calling alloc_CallbackSingle_doAfter_MeltingArmour in MeltingArmour, line 134"
set aW[qW]=nVt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set dVt=fF
set RF[dVt]=731
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_MeltingArmour.","when calling error in MeltingArmour, line 134")
set dVt=0
endif
else
set dF=dF-1
set dVt=nF[dF]
set RF[dVt]=731
endif
set qW=qW-1
set iVt=dVt
set km[iVt]=sVt
set fVt=3.
set RVt=iVt
set TVt="when calling doAfter in MeltingArmour, line 134"
set aW[qW]=TVt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),fVt,RVt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set sVt=null
set SVt=null
set cVt=null
set oVt=null
set OVt=null
set lVt=null
set bVt=null
set yVt=null
set eVt=null
endfunction
function FKr takes nothing returns nothing
set qW=0
call FVt("via function reference MeltingArmour, line 139")
endfunction
function FNS takes nothing returns nothing
local integer aNS=GetSpellAbilityId()
local unit nNS
local unit dNS
local unit fNS
local unit RNS
local unit TNS
local unit YNS
local real GNS
local player gNS
local real hNS
if aNS==$41727371 or aNS==$41303134 then
set nNS=GetSpellAbilityUnit()
set fNS=nNS
set gNS=GetOwningPlayer(fNS)
set RNS=nNS
set hNS=GetUnitX(RNS)
set TNS=nNS
set dNS=CreateUnit(gNS,$6E303235,hNS,GetUnitY(TNS),GetUnitFacing(nNS))
call dYr(dNS)
set YNS=dNS
set GNS=30.
call UnitApplyTimedLife(YNS,$42544C46,GNS)
endif
set nNS=null
set dNS=null
set fNS=null
set RNS=null
set TNS=null
set YNS=null
set gNS=null
endfunction
function FNb takes nothing returns nothing
local unit bNb=GetTriggerUnit()
local unit qNb=bNb
local integer yNb=GetUnitTypeId(qNb)
local unit aNb=bNb
local player pNb=GetOwningPlayer(aNb)
local player nNb=pNb
local integer eNb=GetPlayerId(nNb)
local trigger dNb
local trigger fNb
local trigger RNb
local trigger TNb
local trigger YNb
local trigger GNb
local trigger gNb
local trigger hNb
if yNb==$6E303332 then
set dNb=wf
call EnableTrigger(dNb)
call SetPlayerTechResearched(Player(eNb+4),$52303051,1)
set uf[eNb]=true
endif
if yNb==$6E303333 then
call RemoveUnitFromStock(O[eNb],A[eNb])
call RemoveUnitFromStock(b[eNb],A[eNb])
call RemoveUnitFromStock(l[eNb],A[eNb])
set A[eNb]=$6F303353
call AddUnitToStock(O[eNb],A[eNb],1,3)
call AddUnitToStock(b[eNb],A[eNb],1,3)
call AddUnitToStock(l[eNb],A[eNb],1,3)
endif
if yNb==$6E303334 then
call RemoveUnitFromStock(O[eNb],D[eNb])
call RemoveUnitFromStock(b[eNb],D[eNb])
call RemoveUnitFromStock(l[eNb],D[eNb])
set D[eNb]=$6F303354
call AddUnitToStock(O[eNb],D[eNb],1,3)
call AddUnitToStock(b[eNb],D[eNb],1,3)
call AddUnitToStock(l[eNb],D[eNb],1,3)
endif
if yNb==$6E303335 then
set fNb=oq
call EnableTrigger(fNb)
set RNb=Oq
call EnableTrigger(RNb)
call RemoveUnitFromStock(O[eNb],H[eNb])
call RemoveUnitFromStock(b[eNb],H[eNb])
call RemoveUnitFromStock(l[eNb],H[eNb])
set H[eNb]=$6F303355
call AddUnitToStock(O[eNb],H[eNb],1,3)
call AddUnitToStock(b[eNb],H[eNb],1,3)
call AddUnitToStock(l[eNb],H[eNb],1,3)
endif
if yNb==$6E303336 then
set J[eNb]=$6F303356
set TNb=lq
call EnableTrigger(TNb)
endif
if yNb==$6E303337 then
set YNb=th
call EnableTrigger(YNb)
call SetPlayerTechResearched(pNb,$52303753,1)
call SetPlayerTechResearched(Player(eNb+4),$52303753,1)
endif
if yNb==$6E303338 then
set K[eNb]=$6F303357
endif
if yNb==$6E303339 then
set L[eNb]=$6F303358
endif
if yNb==$6E303341 then
set L[eNb]=$6F30335A
endif
if yNb==$6E303342 then
call SetPlayerTechResearched(pNb,$52303755,1)
call SetPlayerTechResearched(Player(eNb+4),$52303755,1)
set GNb=QG
call EnableTrigger(GNb)
endif
if yNb==$6E303343 then
set X[eNb]=$6E303344
set gNb=Mn
call EnableTrigger(gNb)
set hNb=ah
call EnableTrigger(hNb)
endif
set bNb=null
set pNb=null
set qNb=null
set aNb=null
set nNb=null
set dNb=null
set fNb=null
set RNb=null
set TNb=null
set YNb=null
set GNb=null
set gNb=null
set hNb=null
endfunction
function FQt takes nothing returns nothing
local unit gmt
local integer hmt
local integer Fmt
local player kmt
local real jmt
local real xmt
local unit vmt
local player mmt
local real Qmt
local real Wmt
local unit Emt
local player Zmt
local real Umt
local real Imt
local unit Pmt
local player Amt
local real Dmt
local real Hmt
local unit Jmt
local player Kmt
local real Lmt
local real Xmt
local unit Cmt
local unit Vmt
local player Bmt
local real Nmt
local real Mmt
local unit wQt
local unit uQt
local unit rQt
local unit sQt
local unit tQt
local unit iQt
local unit SQt
local unit cQt
local unit oQt
local unit OQt
local unit lQt
local unit bQt
local unit yQt
local unit pQt
local unit eQt
local unit qQt
local unit aQt
local unit nQt
local unit dQt
local unit fQt
local unit RQt
local unit TQt
local unit YQt
local unit GQt
local unit gQt
local unit hQt
if mR!=null then
set gmt=GetEnteringUnit()
set hmt=GetRandomInt(1,100)
set uQt=gmt
set Fmt=GetUnitTypeId(uQt)
if fR!=0 then
if Fmt==$6E6D7972 then
if hmt<=fR then
set rQt=gmt
set kmt=GetOwningPlayer(rQt)
set sQt=gmt
set jmt=GetUnitX(sQt)
set tQt=gmt
set xmt=GetUnitY(tQt)
set iQt=gmt
call RemoveUnit(iQt)
set vmt=CreateUnit(kmt,$6E6E7375,jmt,xmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",vmt,"origin"))
endif
endif
if Fmt==$6E736E70 then
if hmt<=fR then
set SQt=gmt
set mmt=GetOwningPlayer(SQt)
set cQt=gmt
set Qmt=GetUnitX(cQt)
set oQt=gmt
set Wmt=GetUnitY(oQt)
set OQt=gmt
call RemoveUnit(OQt)
set Emt=CreateUnit(mmt,$6E687968,Qmt,Wmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",Emt,"origin"))
endif
endif
if Fmt==$6E6E7377 then
if hmt<=fR then
set lQt=gmt
set Zmt=GetOwningPlayer(lQt)
set bQt=gmt
set Umt=GetUnitX(bQt)
set yQt=gmt
set Imt=GetUnitY(yQt)
set pQt=gmt
call RemoveUnit(pQt)
set Pmt=CreateUnit(Zmt,$6E30304D,Umt,Imt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",Pmt,"origin"))
endif
endif
if Fmt==$6E6E7267 then
if hmt<=fR then
set eQt=gmt
set Amt=GetOwningPlayer(eQt)
set qQt=gmt
set Dmt=GetUnitX(qQt)
set aQt=gmt
set Hmt=GetUnitY(aQt)
set nQt=gmt
call RemoveUnit(nQt)
set Jmt=CreateUnit(Amt,$6E6E7273,Dmt,Hmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",Jmt,"origin"))
endif
endif
if Fmt==$6E776773 then
if hmt<=fR then
set dQt=gmt
set Kmt=GetOwningPlayer(dQt)
set fQt=gmt
set Lmt=GetUnitX(fQt)
set RQt=gmt
set Xmt=GetUnitY(RQt)
set TQt=gmt
call RemoveUnit(TQt)
if GetRandomInt(1,2)==1 then
set Cmt=CreateUnit(Kmt,$6E303154,Lmt,Xmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",Cmt,"origin"))
else
set Vmt=CreateUnit(Kmt,$6E666F74,Lmt,Xmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",Vmt,"origin"))
endif
endif
endif
if Fmt==$6E687963 then
if hmt<=fR then
set YQt=gmt
set Bmt=GetOwningPlayer(YQt)
set GQt=gmt
set Nmt=GetUnitX(GQt)
set gQt=gmt
set Mmt=GetUnitY(gQt)
set hQt=gmt
call RemoveUnit(hQt)
set wQt=CreateUnit(Bmt,$6E303432,Nmt,Mmt,GetUnitFacing(gmt))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge.mdl",wQt,"origin"))
endif
endif
endif
endif
set gmt=null
set kmt=null
set vmt=null
set mmt=null
set Emt=null
set Zmt=null
set Pmt=null
set Amt=null
set Jmt=null
set Kmt=null
set Cmt=null
set Vmt=null
set Bmt=null
set wQt=null
set uQt=null
set rQt=null
set sQt=null
set tQt=null
set iQt=null
set SQt=null
set cQt=null
set oQt=null
set OQt=null
set lQt=null
set bQt=null
set yQt=null
set pQt=null
set eQt=null
set qQt=null
set aQt=null
set nQt=null
set dQt=null
set fQt=null
set RQt=null
set TQt=null
set YQt=null
set GQt=null
set gQt=null
set hQt=null
endfunction
function FQu takes nothing returns boolean
local unit YQu=GetFilterUnit()
local integer gQu=GetUnitTypeId(YQu)
local player GQu=Xb
local boolean hQu=gQu==I[GetPlayerId(GQu)]
set YQu=null
set GQu=null
return hQu
endfunction
function FVb takes nothing returns boolean
return true
endfunction
function bMp takes string wNp returns nothing
local integer uNp
local string rNp
local boolean sNp
local integer tNp
local trigger iNp
local texttag SNp
local integer cNp
local string oNp
local integer ONp
local string lNp
local integer bNp
local integer yNp
local integer pNp
local string eNp
local integer qNp
local integer aNp
local integer nNp
local string dNp
local integer fNp
local integer RNp
local integer TNp
local string YNp
local integer GNp
local integer gNp
local integer hNp
local string FNp
local integer kNp
local integer jNp
local integer xNp
local string vNp
local integer mNp
local integer QNp
local integer WNp
local string ENp
local integer ZNp
local integer UNp
local integer INp
local string PNp
local integer ANp
local integer DNp
local integer HNp
local string JNp
local integer KNp
local integer LNp
local unit XNp
local integer CNp
local string VNp
local integer BNp
local integer NNp
local integer MNp
local string wMp
local integer uMp
local integer rMp
local unit sMp
local trigger tMp
local unit iMp
local unit SMp
local boolean cMp
local player oMp
local integer OMp
local real lMp
set aW[qW]=wNp
set qW=qW+1
if yO!=null then
set uNp=lO
set rNp="when calling isEmpty in AltarGold, line 1072"
set aW[qW]=rNp
set qW=qW+1
if ok[uNp]==0 then
if uNp==0 then
call L8c("Nullpointer exception when calling LinkedList.isEmpty","when calling error in LinkedList, line 158")
else
call L8c("Called LinkedList.isEmpty on invalid object.","when calling error in LinkedList, line 158")
endif
endif
set tNp=uNp
set sNp=Bv[tNp]==0
set qW=qW-1
set cMp=sNp==false
else
set cMp=false
endif
if cMp then
set iNp=iO
call DisableTrigger(iNp)
set SNp=yr
call DestroyTextTag(SNp)
set cNp=lO
set oNp="when calling shuffle in AltarGold, line 1075"
set aW[qW]=oNp
set qW=qW+1
if ok[cNp]==0 then
if cNp==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(cNp,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set ONp=lO
set lNp="when calling getFirst in AltarGold, line 1076"
set aW[qW]=lNp
set qW=qW+1
if ok[ONp]==0 then
if ONp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set yNp=ONp
set bNp=Hv[Kv[Vv[yNp]]]
set qW=qW-1
if bNp==$5230364F then
set qO="Carefull Investitions"
endif
set pNp=lO
set eNp="when calling getFirst in AltarGold, line 1078"
set aW[qW]=eNp
set qW=qW+1
if ok[pNp]==0 then
if pNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set aNp=pNp
set qNp=Hv[Kv[Vv[aNp]]]
set qW=qW-1
if qNp==$52303650 then
set qO="Cleaving Attack"
endif
set nNp=lO
set dNp="when calling getFirst in AltarGold, line 1080"
set aW[qW]=dNp
set qW=qW+1
if ok[nNp]==0 then
if nNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set RNp=nNp
set fNp=Hv[Kv[Vv[RNp]]]
set qW=qW-1
if fNp==$52303651 then
set qO="Fast Paws"
endif
set TNp=lO
set YNp="when calling getFirst in AltarGold, line 1082"
set aW[qW]=YNp
set qW=qW+1
if ok[TNp]==0 then
if TNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set gNp=TNp
set GNp=Hv[Kv[Vv[gNp]]]
set qW=qW-1
if GNp==$52303652 then
set qO="Finders Keepers"
endif
set hNp=lO
set FNp="when calling getFirst in AltarGold, line 1084"
set aW[qW]=FNp
set qW=qW+1
if ok[hNp]==0 then
if hNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set jNp=hNp
set kNp=Hv[Kv[Vv[jNp]]]
set qW=qW-1
if kNp==$52303653 then
set qO="Out in the Wilds"
endif
set xNp=lO
set vNp="when calling getFirst in AltarGold, line 1086"
set aW[qW]=vNp
set qW=qW+1
if ok[xNp]==0 then
if xNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set QNp=xNp
set mNp=Hv[Kv[Vv[QNp]]]
set qW=qW-1
if mNp==$52303654 then
set qO="Pounce"
endif
set WNp=lO
set ENp="when calling getFirst in AltarGold, line 1088"
set aW[qW]=ENp
set qW=qW+1
if ok[WNp]==0 then
if WNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set UNp=WNp
set ZNp=Hv[Kv[Vv[UNp]]]
set qW=qW-1
if ZNp==$52303655 then
set qO="Spare Potion"
endif
set INp=lO
set PNp="when calling getFirst in AltarGold, line 1090"
set aW[qW]=PNp
set qW=qW+1
if ok[INp]==0 then
if INp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set DNp=INp
set ANp=Hv[Kv[Vv[DNp]]]
set qW=qW-1
if ANp==$52303656 then
set qO="Tricky"
endif
set HNp=lO
set JNp="when calling getFirst in AltarGold, line 1092"
set aW[qW]=JNp
set qW=qW+1
if ok[HNp]==0 then
if HNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set LNp=HNp
set KNp=Hv[Kv[Vv[LNp]]]
set qW=qW-1
if KNp==$52303657 then
set qO="Vulpera Tents"
endif
set XNp=yO
set oMp=GetOwningPlayer(XNp)
set CNp=lO
set VNp="when calling getFirst in AltarGold, line 1094"
set aW[qW]=VNp
set qW=qW+1
if ok[CNp]==0 then
if CNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set NNp=CNp
set BNp=Hv[Kv[Vv[NNp]]]
set qW=qW-1
call SetPlayerTechResearched(oMp,BNp,1)
set OMp=lO
set MNp=lO
set wMp="when calling getFirst in AltarGold, line 1095"
set aW[qW]=wMp
set qW=qW+1
if ok[MNp]==0 then
if MNp==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set rMp=MNp
set uMp=Hv[Kv[Vv[rMp]]]
set qW=qW-1
call eWp(OMp,uMp,"when calling remove in AltarGold, line 1095")
set sMp=yO
call DisplayTextToPlayer(GetOwningPlayer(sMp),0.,0.,"You have unlocked "+qO+" level 4")
set tMp=iO
call EnableTrigger(tMp)
set pr=60
set iMp=yO
set lMp=GetUnitX(iMp)
set SMp=yO
set yr=jVl(lMp,GetUnitY(SMp),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(oO,60.,false,PN)
endif
set qW=qW-1
set iNp=null
set SNp=null
set XNp=null
set sMp=null
set tMp=null
set iMp=null
set SMp=null
set oMp=null
endfunction
function FWb takes nothing returns nothing
set qW=0
call bMp("via function reference AltarGold, line 1100")
endfunction
function FWi takes nothing returns boolean
local playerunitevent gWi=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code hWi=CM
call emO(gWi,null,hWi,null)
set gWi=null
return true
endfunction
function FYr takes nothing returns nothing
local integer TYr=0
local integer YYr=0
local group GYr=CreateGroup()
local real gYr=0.
local real hYr=0.
local unit fYr
local integer array RYr
set RYr[1]=$6E676F6C
set RYr[2]=$6E676D65
set RYr[3]=$6E676164
set RYr[4]=$6E776774
set RYr[5]=$6E64727A
set RYr[6]=$6E647272
set RYr[7]=$6E647275
set RYr[8]=$6E647267
set RYr[9]=$6E64726F
set RYr[10]=$6E64726B
set RYr[11]=$6E666F68
set RYr[12]=$6E6D7232
call GroupEnumUnitsInRect(GYr,bj_mapInitialPlayableArea,Condition(PE))
loop
set fYr=FirstOfGroup(GYr)
set gYr=GetUnitX(fYr)
set hYr=GetUnitY(fYr)
exitwhen fYr==null
call GroupRemoveUnit(GYr,fYr)
call RemoveUnit(fYr)
loop
set TYr=GetRandomInt(1,12)
exitwhen RYr[TYr]!=0
endloop
set fYr=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE),RYr[TYr],gYr,hYr,270.)
set YYr=YYr+1
set G[YYr]=fYr
call SetUnitAnimation(fYr,"Work")
set RYr[TYr]=0
endloop
call GroupClear(GYr)
call DestroyGroup(GYr)
set GYr=null
set fYr=null
set fYr=null
set GYr=null
endfunction
function fiS takes string AtS returns nothing
local integer DtS
local unit HtS
local unit JtS
local integer KtS
local real LtS
local real XtS
local real CtS
local real VtS
local player BtS
local unit NtS
local integer MtS
local unit wiS
local integer uiS
local unit riS
local unit siS
local unit tiS
local unit iiS
local unit SiS
local unit ciS
local real oiS
local unit OiS
local integer liS
local unit biS
local integer yiS
local integer piS
local string eiS
local integer qiS
local real aiS
local integer niS
local string diS
set aW[qW]=AtS
set qW=qW+1
set DtS=GetSpellAbilityId()
set HtS=GetSpellAbilityUnit()
set JtS=GetTriggerUnit()
if DtS==$41305953 then
set wiS=HtS
set uiS=$41305954
set KtS=GetUnitAbilityLevel(wiS,uiS)
set riS=HtS
set LtS=GetUnitX(riS)
set siS=HtS
set XtS=GetUnitY(siS)
set tiS=JtS
set CtS=GetUnitX(tiS)
set iiS=JtS
set VtS=GetUnitY(iiS)
set SiS=HtS
set BtS=GetOwningPlayer(SiS)
set NtS=CreateUnit(BtS,$75303030,LtS,XtS,GetUnitFacing(HtS))
set ciS=NtS
set oiS=5.
call UnitApplyTimedLife(ciS,$42544C46,oiS)
set OiS=NtS
set liS=$41305954
call UnitAddAbility(OiS,liS)
set biS=NtS
set yiS=$41305954
set piS=KtS
call SetUnitAbilityLevel(biS,yiS,piS)
call IssuePointOrder(NtS,"impale",CtS,VtS)
set eiS="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Malorne in Malorne, line 413"
set aW[qW]=eiS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set qiS=fF
set RF[qiS]=828
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Malorne.","when calling error in Malorne, line 413")
set qiS=0
endif
else
set dF=dF-1
set qiS=nF[dF]
set RF[qiS]=828
endif
set qW=qW-1
set MtS=qiS
set om[MtS]=BtS
set Om[MtS]=LtS
set lm[MtS]=XtS
set bm[MtS]=HtS
set ym[MtS]=KtS
set pm[MtS]=CtS
set em[MtS]=VtS
set aiS=.3
set niS=MtS
set diS="when calling doAfter in Malorne, line 413"
set aW[qW]=diS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),aiS,niS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set HtS=null
set JtS=null
set BtS=null
set NtS=null
set wiS=null
set riS=null
set siS=null
set tiS=null
set iiS=null
set SiS=null
set ciS=null
set OiS=null
set biS=null
endfunction
function F_u takes nothing returns nothing
set qW=0
call fiS("via function reference Malorne, line 397")
endfunction
function FbS takes nothing returns boolean
local trigger YbS
local trigger GbS
local playerunitevent gbS
local integer hbS
set pT=CreateTrigger()
set YbS=pT
call DisableTrigger(YbS)
set GbS=pT
set gbS=EVENT_PLAYER_UNIT_DEATH
set hbS=0
loop
call TriggerRegisterPlayerUnitEvent(GbS,Player(hbS),gbS,null)
set hbS=hbS+1
exitwhen hbS==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(pT,P0w)
set YbS=null
set GbS=null
set gbS=null
return true
endfunction
function Fbe takes nothing returns boolean
return true
endfunction
function Fcc takes nothing returns nothing
local integer bcc=0
local integer ycc
local unit pcc
local integer ecc
local integer qcc
local player acc
local player ncc
local integer dcc
local player fcc
local playerstate Rcc
local integer Tcc
local player Ycc
local playerstate Gcc
local player gcc
local playerstate hcc
loop
exitwhen bcc>3
set acc=Player(bcc)
set ycc=GetPlayerId(acc)
if o[ycc]!=null then
set pcc=o[ycc]
set ecc=GetPlayerTechCount(Player(bcc),ww[ycc],true)
if ecc>0 then
set qcc=25*ecc
set ncc=Player(bcc)
set dcc=qcc
set fcc=ncc
set Rcc=PLAYER_STATE_RESOURCE_GOLD
set Tcc=dcc
set gcc=fcc
set hcc=Rcc
set Ycc=fcc
set Gcc=Rcc
call SetPlayerState(gcc,hcc,GetPlayerState(Ycc,Gcc)+Tcc)
call UuS(pcc,qcc)
set hr[bcc]=hr[bcc]+qcc
set Fr[bcc]=Fr[bcc]+qcc
set Mr[bcc]=Mr[bcc]+qcc
endif
endif
set bcc=bcc+1
endloop
set pcc=null
set acc=null
set ncc=null
set fcc=null
set Rcc=null
set Ycc=null
set Gcc=null
set gcc=null
set hcc=null
endfunction
function FlO takes nothing returns nothing
local integer lSO=0
local multiboard bSO
local integer ySO
local integer pSO
local multiboarditem eSO
local string qSO
local string aSO
local string nSO
local integer dSO
local multiboarditem fSO
local multiboard RSO
local integer TSO
local integer YSO
local multiboarditem GSO
local string gSO
local string hSO
local string FSO
local integer kSO
local multiboarditem jSO
local multiboard xSO
local integer vSO
local integer mSO
local multiboarditem QSO
local string WSO
local string ESO
local string ZSO
local integer USO
local multiboarditem ISO
local multiboard PSO
local integer ASO
local integer DSO
local multiboarditem HSO
local string JSO
local string KSO
local string LSO
local integer XSO
local multiboarditem CSO
local multiboard VSO
local integer BSO
local integer NSO
local multiboarditem MSO
local string wcO
local string ucO
local string rcO
local integer scO
local multiboarditem tcO
local multiboard icO
local integer ScO
local integer ccO
local multiboarditem ocO
local string OcO
local string lcO
local string bcO
local integer ycO
local integer pcO
local multiboarditem ecO
local multiboard qcO
local integer acO
local integer ncO
local multiboarditem dcO
local string fcO
local string RcO
local string TcO
local integer YcO
local integer GcO
local multiboarditem gcO
local multiboard hcO
local integer FcO
local integer kcO
local multiboarditem jcO
local string xcO
local string vcO
local string mcO
local integer QcO
local integer WcO
local integer EcO
local integer ZcO
local multiboarditem UcO
local multiboard IcO
local integer PcO
local integer AcO
local multiboarditem DcO
local string HcO
local string JcO
local string KcO
local integer LcO
local multiboarditem XcO
local multiboard CcO
local integer VcO
local integer BcO
local multiboarditem NcO
local string McO
local string woO
local string uoO
local integer roO
local multiboarditem soO
local multiboard toO
local integer ioO
local integer SoO
local multiboarditem coO
local string ooO
local string OoO
local string loO
local integer boO
local multiboarditem yoO
local multiboard poO
local integer eoO
local integer qoO
local multiboarditem aoO
local string noO
local string doO
local string foO
local integer RoO
local multiboarditem ToO
local multiboard YoO
local integer GoO
local integer goO
local multiboarditem hoO
local string FoO
local string koO
local string joO
local integer xoO
local multiboarditem voO
local multiboard moO
local integer QoO
local integer WoO
local multiboarditem EoO
local string ZoO
local string UoO
local string IoO
local integer PoO
local multiboarditem AoO
local multiboard DoO
local integer HoO
local integer JoO
local multiboarditem KoO
local string LoO
local string XoO
local string CoO
local integer VoO
local multiboarditem BoO
local multiboard NoO
local integer MoO
local integer wOO
local multiboarditem uOO
local string rOO
local string sOO
local string tOO
local integer iOO
local multiboarditem SOO
local multiboard cOO
local integer oOO
local integer OOO
local multiboarditem lOO
local string bOO
local string yOO
local string pOO
local integer eOO
local multiboarditem qOO
local multiboard aOO
local integer nOO
local integer dOO
local multiboarditem fOO
local string ROO
local string TOO
local string YOO
local integer GOO
local multiboarditem gOO
local multiboard hOO
local integer FOO
local integer kOO
local multiboarditem jOO
local string xOO
local string vOO
local string mOO
local integer QOO
local integer WOO
local multiboarditem EOO
local multiboard ZOO
local integer UOO
local integer IOO
local multiboarditem POO
local string AOO
local string DOO
local string HOO
local integer JOO
local multiboarditem KOO
local multiboard LOO
local integer XOO
local integer COO
local multiboarditem VOO
local string BOO
local string NOO
local string MOO
local integer wlO
local multiboarditem ulO
local multiboard rlO
local integer slO
local integer tlO
local multiboarditem ilO
local string SlO
local string clO
local string olO
local integer OlO
local multiboarditem llO
local multiboard blO
local integer ylO
local integer plO
local multiboarditem elO
local string qlO
local string alO
local string nlO
local integer dlO
local multiboarditem flO
local string RlO
local string TlO
local string YlO
local string GlO
local string glO
local string hlO
loop
exitwhen lSO>3
set bSO=Tr[lSO]
set ySO=2
set pSO=1
set pd=MultiboardGetItem(bSO,ySO,pSO)
set eSO=pd
set dSO=hr[lSO]
set qSO=I2S(dSO)
if qSO==null then
set nSO=""
else
set nSO=qSO
endif
set aSO=nSO
call MultiboardSetItemValue(eSO,aSO)
set fSO=pd
call MultiboardReleaseItem(fSO)
set RSO=Tr[lSO]
set TSO=3
set YSO=1
set pd=MultiboardGetItem(RSO,TSO,YSO)
set GSO=pd
set kSO=Fr[lSO]
set gSO=I2S(kSO)
if gSO==null then
set FSO=""
else
set FSO=gSO
endif
set hSO=FSO
call MultiboardSetItemValue(GSO,hSO)
set jSO=pd
call MultiboardReleaseItem(jSO)
set xSO=Tr[lSO]
set vSO=4
set mSO=1
set pd=MultiboardGetItem(xSO,vSO,mSO)
set QSO=pd
set USO=kr[lSO]
set WSO=I2S(USO)
if WSO==null then
set ZSO=""
else
set ZSO=WSO
endif
set ESO=ZSO
call MultiboardSetItemValue(QSO,ESO)
set ISO=pd
call MultiboardReleaseItem(ISO)
set PSO=Tr[lSO]
set ASO=6
set DSO=1
set pd=MultiboardGetItem(PSO,ASO,DSO)
set HSO=pd
set XSO=jr[lSO]
set JSO=I2S(XSO)
if JSO==null then
set LSO=""
else
set LSO=JSO
endif
set KSO=LSO
call MultiboardSetItemValue(HSO,KSO)
set CSO=pd
call MultiboardReleaseItem(CSO)
set VSO=Tr[lSO]
set BSO=7
set NSO=1
set pd=MultiboardGetItem(VSO,BSO,NSO)
set MSO=pd
set scO=xr[lSO]
set wcO=I2S(scO)
if wcO==null then
set rcO=""
else
set rcO=wcO
endif
set ucO=rcO
call MultiboardSetItemValue(MSO,ucO)
set tcO=pd
call MultiboardReleaseItem(tcO)
set icO=Tr[lSO]
set ScO=8
set ccO=1
set pd=MultiboardGetItem(icO,ScO,ccO)
set ocO=pd
set ycO=mr[lSO]
set RlO=I2S(ycO)+"/"
set pcO=Wr[lSO]
set OcO=RlO+I2S(pcO)
if OcO==null then
set bcO=""
else
set bcO=OcO
endif
set lcO=bcO
call MultiboardSetItemValue(ocO,lcO)
set ecO=pd
call MultiboardReleaseItem(ecO)
set qcO=Tr[lSO]
set acO=9
set ncO=1
set pd=MultiboardGetItem(qcO,acO,ncO)
set dcO=pd
set YcO=vr[lSO]
set TlO=I2S(YcO)+"/"
set GcO=Qr[lSO]
set fcO=TlO+I2S(GcO)
if fcO==null then
set TcO=""
else
set TcO=fcO
endif
set RcO=TcO
call MultiboardSetItemValue(dcO,RcO)
set gcO=pd
call MultiboardReleaseItem(gcO)
set hcO=Tr[lSO]
set FcO=10
set kcO=1
set pd=MultiboardGetItem(hcO,FcO,kcO)
set jcO=pd
set QcO=Er[lSO]
set YlO=I2S(QcO)+"/"
set WcO=Zr[lSO]
set GlO=YlO+I2S(WcO)+"/"
set EcO=Ur[lSO]
set glO=GlO+I2S(EcO)+"/"
set ZcO=Ir[lSO]
set xcO=glO+I2S(ZcO)
if xcO==null then
set mcO=""
else
set mcO=xcO
endif
set vcO=mcO
call MultiboardSetItemValue(jcO,vcO)
set UcO=pd
call MultiboardReleaseItem(UcO)
set IcO=Tr[lSO]
set PcO=11
set AcO=1
set pd=MultiboardGetItem(IcO,PcO,AcO)
set DcO=pd
set LcO=Pr[lSO]
set HcO=I2S(LcO)
if HcO==null then
set KcO=""
else
set KcO=HcO
endif
set JcO=KcO
call MultiboardSetItemValue(DcO,JcO)
set XcO=pd
call MultiboardReleaseItem(XcO)
set CcO=Tr[lSO]
set VcO=12
set BcO=1
set pd=MultiboardGetItem(CcO,VcO,BcO)
set NcO=pd
set roO=Ar[lSO]
set McO=I2S(roO)
if McO==null then
set uoO=""
else
set uoO=McO
endif
set woO=uoO
call MultiboardSetItemValue(NcO,woO)
set soO=pd
call MultiboardReleaseItem(soO)
set toO=Tr[lSO]
set ioO=14
set SoO=1
set pd=MultiboardGetItem(toO,ioO,SoO)
set coO=pd
set boO=Dr[lSO]
set ooO=I2S(boO)
if ooO==null then
set loO=""
else
set loO=ooO
endif
set OoO=loO
call MultiboardSetItemValue(coO,OoO)
set yoO=pd
call MultiboardReleaseItem(yoO)
set poO=Tr[lSO]
set eoO=15
set qoO=1
set pd=MultiboardGetItem(poO,eoO,qoO)
set aoO=pd
set RoO=Hr[lSO]
set noO=I2S(RoO)
if noO==null then
set foO=""
else
set foO=noO
endif
set doO=foO
call MultiboardSetItemValue(aoO,doO)
set ToO=pd
call MultiboardReleaseItem(ToO)
set YoO=Tr[lSO]
set GoO=16
set goO=1
set pd=MultiboardGetItem(YoO,GoO,goO)
set hoO=pd
set xoO=Jr[lSO]
set FoO=I2S(xoO)
if FoO==null then
set joO=""
else
set joO=FoO
endif
set koO=joO
call MultiboardSetItemValue(hoO,koO)
set voO=pd
call MultiboardReleaseItem(voO)
set moO=Tr[lSO]
set QoO=17
set WoO=1
set pd=MultiboardGetItem(moO,QoO,WoO)
set EoO=pd
set PoO=Kr[lSO]
set ZoO=I2S(PoO)
if ZoO==null then
set IoO=""
else
set IoO=ZoO
endif
set UoO=IoO
call MultiboardSetItemValue(EoO,UoO)
set AoO=pd
call MultiboardReleaseItem(AoO)
set DoO=Tr[lSO]
set HoO=18
set JoO=1
set pd=MultiboardGetItem(DoO,HoO,JoO)
set KoO=pd
set VoO=Lr[lSO]
set LoO=I2S(VoO)
if LoO==null then
set CoO=""
else
set CoO=LoO
endif
set XoO=CoO
call MultiboardSetItemValue(KoO,XoO)
set BoO=pd
call MultiboardReleaseItem(BoO)
set NoO=Tr[lSO]
set MoO=19
set wOO=1
set pd=MultiboardGetItem(NoO,MoO,wOO)
set uOO=pd
set iOO=Xr[lSO]
set rOO=I2S(iOO)
if rOO==null then
set tOO=""
else
set tOO=rOO
endif
set sOO=tOO
call MultiboardSetItemValue(uOO,sOO)
set SOO=pd
call MultiboardReleaseItem(SOO)
set cOO=Tr[lSO]
set oOO=20
set OOO=1
set pd=MultiboardGetItem(cOO,oOO,OOO)
set lOO=pd
set eOO=Cr[lSO]
set bOO=I2S(eOO)
if bOO==null then
set pOO=""
else
set pOO=bOO
endif
set yOO=pOO
call MultiboardSetItemValue(lOO,yOO)
set qOO=pd
call MultiboardReleaseItem(qOO)
set aOO=Tr[lSO]
set nOO=21
set dOO=1
set pd=MultiboardGetItem(aOO,nOO,dOO)
set fOO=pd
set GOO=Vr[lSO]
set ROO=I2S(GOO)
if ROO==null then
set YOO=""
else
set YOO=ROO
endif
set TOO=YOO
call MultiboardSetItemValue(fOO,TOO)
set gOO=pd
call MultiboardReleaseItem(gOO)
set hOO=Tr[lSO]
set FOO=22
set kOO=1
set pd=MultiboardGetItem(hOO,FOO,kOO)
set jOO=pd
set QOO=Br[lSO]
set hlO=I2S(QOO)+"/"
set WOO=Nr[lSO]
set xOO=hlO+I2S(WOO)
if xOO==null then
set mOO=""
else
set mOO=xOO
endif
set vOO=mOO
call MultiboardSetItemValue(jOO,vOO)
set EOO=pd
call MultiboardReleaseItem(EOO)
set ZOO=Tr[lSO]
set UOO=23
set IOO=1
set pd=MultiboardGetItem(ZOO,UOO,IOO)
set POO=pd
set JOO=Mr[lSO]
set AOO=I2S(JOO)
if AOO==null then
set HOO=""
else
set HOO=AOO
endif
set DOO=HOO
call MultiboardSetItemValue(POO,DOO)
set KOO=pd
call MultiboardReleaseItem(KOO)
set LOO=Tr[lSO]
set XOO=24
set COO=1
set pd=MultiboardGetItem(LOO,XOO,COO)
set VOO=pd
set wlO=ws[lSO]
set BOO=I2S(wlO)
if BOO==null then
set MOO=""
else
set MOO=BOO
endif
set NOO=MOO
call MultiboardSetItemValue(VOO,NOO)
set ulO=pd
call MultiboardReleaseItem(ulO)
set rlO=Tr[lSO]
set slO=25
set tlO=1
set pd=MultiboardGetItem(rlO,slO,tlO)
set us[lSO]=hr[lSO]-300-ws[lSO]-Mr[lSO]-Vr[lSO]-Cr[lSO]-lr
set ilO=pd
set OlO=us[lSO]
set SlO=I2S(OlO)
if SlO==null then
set olO=""
else
set olO=SlO
endif
set clO=olO
call MultiboardSetItemValue(ilO,clO)
set llO=pd
call MultiboardReleaseItem(llO)
set blO=Tr[lSO]
set ylO=26
set plO=1
set pd=MultiboardGetItem(blO,ylO,plO)
set elO=pd
set dlO=rs[lSO]
set qlO=I2S(dlO)
if qlO==null then
set nlO=""
else
set nlO=qlO
endif
set alO=nlO
call MultiboardSetItemValue(elO,alO)
set flO=pd
call MultiboardReleaseItem(flO)
set lSO=lSO+1
endloop
set bSO=null
set eSO=null
set fSO=null
set RSO=null
set GSO=null
set jSO=null
set xSO=null
set QSO=null
set ISO=null
set PSO=null
set HSO=null
set CSO=null
set VSO=null
set MSO=null
set tcO=null
set icO=null
set ocO=null
set ecO=null
set qcO=null
set dcO=null
set gcO=null
set hcO=null
set jcO=null
set UcO=null
set IcO=null
set DcO=null
set XcO=null
set CcO=null
set NcO=null
set soO=null
set toO=null
set coO=null
set yoO=null
set poO=null
set aoO=null
set ToO=null
set YoO=null
set hoO=null
set voO=null
set moO=null
set EoO=null
set AoO=null
set DoO=null
set KoO=null
set BoO=null
set NoO=null
set uOO=null
set SOO=null
set cOO=null
set lOO=null
set qOO=null
set aOO=null
set fOO=null
set gOO=null
set hOO=null
set jOO=null
set EOO=null
set ZOO=null
set POO=null
set KOO=null
set LOO=null
set VOO=null
set ulO=null
set rlO=null
set ilO=null
set llO=null
set blO=null
set elO=null
set flO=null
endfunction
function Fle takes nothing returns nothing
local unit ple=GetEnteringUnit()
local unit ale=ple
local integer ele=GetUnitTypeId(ale)
local integer qle
local unit nle
local unit dle
local integer fle
local unit Rle
local integer Tle
local unit Yle
local integer Gle
local unit gle
local integer hle
if ele==$6F776E72 or ele==$6F737779 then
set nle=ple
set qle=GetPlayerTechCount(GetOwningPlayer(nle),$52303156,true)
if qle==1 then
set dle=ple
set fle=$41305557
call UnitAddAbility(dle,fle)
elseif qle==2 then
set Rle=ple
set Tle=$41305558
call UnitAddAbility(Rle,Tle)
elseif qle==3 then
set Yle=ple
set Gle=$41305559
call UnitAddAbility(Yle,Gle)
else
set gle=ple
set hle=$4130555A
call UnitAddAbility(gle,hle)
endif
endif
set ple=null
set ale=null
set nle=null
set dle=null
set Rle=null
set Yle=null
set gle=null
endfunction
function Fnt takes nothing returns nothing
local rect Tnt=bj_mapInitialPlayableArea
local boolexpr Ynt=Condition(AE)
local group Gnt
local code gnt
local boolean hnt
set Lo=CreateGroup()
call GroupEnumUnitsInRect(Lo,Tnt,Ynt)
call DestroyBoolExpr(Ynt)
set Co[21]=Lo
set Gnt=Co[21]
set gnt=DE
set hnt=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Gnt,gnt)
if hnt then
call DestroyGroup(Gnt)
endif
call DestroyGroup(Co[21])
set Tnt=null
set Ynt=null
set Gnt=null
endfunction
function Fpe takes nothing returns nothing
local integer wpe=GetSpellAbilityId()
local unit upe
local real rpe
local real spe
local integer tpe
local unit ipe
local unit Spe
local unit cpe
local unit ope
local unit Ope
local unit lpe
local unit bpe
local unit ype
local unit ppe
local integer epe
local unit qpe
local real ape
local unit npe
local unit dpe
local integer fpe
local unit Rpe
local string Tpe
local unit Ype
local real Gpe
local player gpe
local real hpe
if wpe==$414D3061 then
set upe=GetSpellAbilityUnit()
set ope=upe
set rpe=GetUnitX(ope)
set Ope=upe
set spe=GetUnitY(Ope)
set tpe=1
loop
exitwhen tpe>16
set lpe=upe
set gpe=GetOwningPlayer(lpe)
set bpe=upe
set hpe=GetUnitX(bpe)
set ype=upe
set ipe=CreateUnit(gpe,$75303030,hpe,GetUnitY(ype),270.)
set ppe=ipe
set epe=$414D3062
call UnitAddAbility(ppe,epe)
call IssuePointOrder(ipe,"carrionswarm",rpe+100.*Cos(67.5+I2R(tpe)*22.5*bj_DEGTORAD),spe+100.*Sin(67.5+I2R(tpe)*22.5*bj_DEGTORAD))
set qpe=ipe
set ape=3.
call UnitApplyTimedLife(qpe,$42544C46,ape)
set tpe=tpe+1
endloop
endif
if wpe==$414D3063 then
set Spe=GetSpellAbilityUnit()
set npe=Spe
set cpe=CreateUnit(GetOwningPlayer(npe),$75303030,GetSpellTargetX(),GetSpellTargetY(),270.)
set dpe=cpe
set fpe=$414D3064
call UnitAddAbility(dpe,fpe)
set Rpe=cpe
set Tpe="stomp"
call IssueImmediateOrder(Rpe,Tpe)
set Ype=cpe
set Gpe=3.
call UnitApplyTimedLife(Ype,$42544C46,Gpe)
endif
set upe=null
set ipe=null
set Spe=null
set cpe=null
set ope=null
set Ope=null
set lpe=null
set bpe=null
set ype=null
set ppe=null
set qpe=null
set npe=null
set dpe=null
set Rpe=null
set Ype=null
set gpe=null
endfunction
function Ftu takes nothing returns boolean
local unit etu=GetFilterUnit()
local unit qtu=etu
local unit atu
local integer ntu
local unit dtu
local integer ftu
local unit Rtu
local integer Ttu
local boolean Ytu
local boolean Gtu
local boolean gtu
local boolean htu
if UnitAlive(qtu) and IsPlayerAlly(GetOwningPlayer(LoadUnitHandle(qu,$556E6974,$556E6974)),GetOwningPlayer(etu))==true then
set atu=etu
set ntu=$416C6F63
set Ytu=GetUnitAbilityLevel(atu,ntu)==0
else
set Ytu=false
endif
if Ytu then
set dtu=etu
set ftu=$4176756C
set Gtu=GetUnitAbilityLevel(dtu,ftu)==0
else
set Gtu=false
endif
if Gtu then
set Rtu=etu
set Ttu=$42637963
set gtu=GetUnitAbilityLevel(Rtu,Ttu)==0
else
set gtu=false
endif
set htu=gtu and GetUnitState(etu,UNIT_STATE_LIFE)>GetUnitState(etu,UNIT_STATE_MAX_LIFE)*.25 and IsUnitType(etu,UNIT_TYPE_STRUCTURE)==false
set etu=null
set qtu=null
set atu=null
set dtu=null
set Rtu=null
return htu
endfunction
function uLi takes player WKi,integer EKi,real ZKi,real UKi,real IKi,unit PKi,string AKi returns nothing
local integer DKi
local real HKi
local real JKi
local real KKi
local real LKi
local player XKi
local integer CKi
local string VKi
local integer BKi
local real NKi
local integer MKi
local string wLi
set aW[qW]=AKi
set qW=qW+1
set DKi=GetPlayerId(WKi)
set HKi=UKi+100.*Cos(ZKi*bj_DEGTORAD)
set JKi=IKi+100.*Sin(ZKi*bj_DEGTORAD)
set KKi=UKi+85.*Cos(ZKi*bj_DEGTORAD)
set LKi=IKi+85.*Sin(ZKi*bj_DEGTORAD)
set XKi=Player(DKi+4)
if EKi>=1 then
if A[DKi]==$6E7A6F6D then
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
endif
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,D[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,H[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,X[DKi],KKi,LKi,ZKi)
if Nn[DKi]>0 then
if Nn[DKi]>=1 then
call CreateUnit(XKi,$6E303345,KKi,LKi,ZKi)
endif
if Nn[DKi]>=2 then
call CreateUnit(XKi,$6E303346,KKi,LKi,ZKi)
endif
if Nn[DKi]>=3 then
call CreateUnit(XKi,$6E303347,KKi,LKi,ZKi)
endif
endif
endif
if tu[DKi]==true and eu==PKi then
call CreateUnit(XKi,C[DKi],HKi,JKi,ZKi)
endif
if EKi>=2 then
if J[DKi]==$6E303358 then
call CreateUnit(XKi,J[DKi],HKi,JKi,ZKi)
else
call CreateUnit(XKi,J[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,J[DKi],HKi,JKi,ZKi)
endif
if A[DKi]==$6E7A6F6D then
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
endif
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
endif
if EKi>=3 then
call CreateUnit(XKi,D[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,H[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,K[DKi],KKi,LKi,ZKi)
endif
if EKi==4 then
call CreateUnit(XKi,J[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
if A[DKi]==$6E7A6F6D then
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
endif
if su[DKi]==true and PKi==O[DKi] then
call CreateUnit(XKi,L[DKi],KKi,LKi,ZKi)
endif
if uu[DKi]==true and PKi==b[DKi] then
call CreateUnit(XKi,L[DKi],KKi,LKi,ZKi)
endif
if ru[DKi]==true and PKi==l[DKi] then
call CreateUnit(XKi,L[DKi],KKi,LKi,ZKi)
if MT[DKi]==true then
call CreateUnit(XKi,L[DKi],KKi,LKi,ZKi)
endif
endif
endif
if VT[DKi]==true then
if BT[DKi]==true then
call CreateUnit(XKi,A[DKi],HKi,JKi,ZKi)
call CreateUnit(XKi,D[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,J[DKi],HKi,JKi,ZKi)
endif
if NT[DKi]==true then
call CreateUnit(XKi,H[DKi],KKi,LKi,ZKi)
call CreateUnit(XKi,H[DKi],KKi,LKi,ZKi)
endif
endif
set VKi="when calling alloc_CallbackSingle_doAfter_TimerSpawnBarake in TimerSpawnBarake, line 196"
set aW[qW]=VKi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set BKi=fF
set RF[BKi]=757
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TimerSpawnBarake.","when calling error in TimerSpawnBarake, line 196")
set BKi=0
endif
else
set dF=dF-1
set BKi=nF[dF]
set RF[BKi]=757
endif
set qW=qW-1
set CKi=BKi
set UQ[CKi]=PKi
set IQ[CKi]=WKi
set PQ[CKi]=DKi
set NKi=.3
set MKi=CKi
set wLi="when calling doAfter in TimerSpawnBarake, line 196"
set aW[qW]=wLi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),NKi,MKi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set XKi=null
endfunction
function BIs takes string wIs returns nothing
local integer uIs
local integer rIs
local integer sIs
local integer tIs
local integer iIs
local integer SIs
local integer cIs
local integer oIs
local integer OIs
local integer lIs
local unit bIs
local integer yIs
local unit pIs
local integer eIs
local unit qIs
local real aIs
local real nIs
local real dIs
local unit fIs
local integer RIs
local unit TIs
local integer YIs
local real GIs
local unit gIs
local integer hIs
local real FIs
local real kIs
local unit jIs
local integer xIs
local real vIs
local real mIs
local unit QIs
local integer WIs
local real EIs
local texttag ZIs
local string UIs
local real IIs
local integer PIs
local texttag AIs
local string DIs
local real HIs
local unit JIs
local unit KIs
local texttag LIs
local boolean XIs
local boolean CIs
local boolean VIs
set aW[qW]=wIs
set qW=qW+1
set uIs=0
loop
exitwhen uIs>3
if Cw[uIs]==0 then
if uu[uIs]==true then
set uu[uIs]=false
else
set uu[uIs]=true
endif
set bIs=b[uIs]
set yIs=$54344152
if GetUnitAbilityLevel(bIs,yIs)==1 then
set pIs=b[uIs]
set eIs=$54344152
call UnitRemoveAbility(pIs,eIs)
set uu[uIs]=true
endif
set qIs=b[uIs]
if UnitAlive(qIs)==false then
if Kw[uIs]==1 then
set Cw[uIs]=100
endif
if Kw[uIs]==2 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=87
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set rIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set aIs=2.75*rIs
set Cw[uIs]=92-R2I(aIs)
else
set Cw[uIs]=92
endif
endif
if Kw[uIs]==3 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=81
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=77
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set sIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set nIs=2.6*sIs
set Cw[uIs]=85-R2I(nIs)
else
set Cw[uIs]=85
endif
endif
if Kw[uIs]==4 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=78
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=74
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set tIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set dIs=2.5*tIs
set Cw[uIs]=82-R2I(dIs)
else
set Cw[uIs]=82
endif
endif
else
set fIs=b[uIs]
set RIs=$444F5053
if GetUnitAbilityLevel(fIs,RIs)==1 then
set tu[uIs]=true
endif
if Kw[uIs]==1 then
set Cw[uIs]=40
set TIs=b[uIs]
set YIs=$534C4F57
if GetUnitAbilityLevel(TIs,YIs)>=1 then
set Cw[uIs]=48
endif
endif
if Kw[uIs]==2 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=35
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set iIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set GIs=1.1*iIs
set Cw[uIs]=37-R2I(GIs)
else
set Cw[uIs]=37
endif
set gIs=b[uIs]
set hIs=$534C4F57
if GetUnitAbilityLevel(gIs,hIs)>=1 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=43
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set SIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set FIs=1.7*SIs
set Cw[uIs]=45-R2I(FIs)
else
set Cw[uIs]=45
endif
endif
endif
if Kw[uIs]==3 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=32
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=31
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set cIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set kIs=1.*cIs
set Cw[uIs]=34-R2I(kIs)
else
set Cw[uIs]=34
endif
set jIs=b[uIs]
set xIs=$534C4F57
if GetUnitAbilityLevel(jIs,xIs)>=1 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=39
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=37
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set oIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set vIs=1.5*oIs
set Cw[uIs]=41-R2I(vIs)
else
set Cw[uIs]=41
endif
endif
endif
if Kw[uIs]==4 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=31
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=30
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set OIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set mIs=1.*OIs
set Cw[uIs]=33-R2I(mIs)
else
set Cw[uIs]=33
endif
set QIs=b[uIs]
set WIs=$534C4F57
if GetUnitAbilityLevel(QIs,WIs)>=1 then
if GetPlayerTechCount(Player(uIs),$52303335,true)==1 then
set Cw[uIs]=37
elseif GetPlayerTechCount(Player(uIs),$52303659,true)==1 then
set Cw[uIs]=35
elseif GetPlayerTechCount(Player(uIs),$524D3135,true)>0 then
set lIs=GetPlayerTechCount(Player(uIs),$524D3135,true)
set EIs=1.47*lIs
set Cw[uIs]=39-R2I(EIs)
else
set Cw[uIs]=39
endif
endif
endif
endif
if GetLocalPlayer()==Player(uIs) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set ZIs=Nw[uIs]
set PIs=Cw[uIs]
set UIs=I2S(PIs)
set IIs=13.
call SetTextTagText(ZIs,UIs,IIs*.0023)
else
set AIs=Nw[uIs]
set DIs=""
set HIs=13.
call SetTextTagText(AIs,DIs,HIs*.0023)
endif
if e[uIs]==false then
call uLi(Player(uIs),Kw[uIs],iu[uIs],ou[uIs],bu[uIs],b[uIs],"when calling spawnUnits in TimerSpawnBarake, line 495")
endif
endif
if b[uIs]==null then
set XIs=true
else
set JIs=b[uIs]
set XIs=UnitAlive(JIs)==false
endif
if XIs then
if o[uIs]==null then
set CIs=true
else
set KIs=o[uIs]
set CIs=UnitAlive(KIs)==false
endif
set VIs=CIs
else
set VIs=false
endif
if VIs then
set e[uIs]=true
set LIs=Nw[uIs]
call DestroyTextTag(LIs)
set Nw[uIs]=null
set Cw[uIs]=0
set Kw[uIs]=0
set iu[uIs]=0.
set ou[uIs]=0.
set bu[uIs]=0.
set b[uIs]=null
endif
set uIs=uIs+1
endloop
set qW=qW-1
set bIs=null
set pIs=null
set qIs=null
set fIs=null
set TIs=null
set gIs=null
set jIs=null
set QIs=null
set ZIs=null
set AIs=null
set JIs=null
set KIs=null
set LIs=null
endfunction
function c5i takes string l2t returns nothing
local integer b2t
local integer y2t
local integer p2t
local integer e2t
local integer q2t
local integer a2t
local integer n2t
local integer d2t
local integer f2t
local integer R2t
local unit T2t
local integer Y2t
local unit G2t
local integer g2t
local unit h2t
local real F2t
local real k2t
local real j2t
local unit x2t
local integer v2t
local unit m2t
local integer Q2t
local real W2t
local unit E2t
local integer Z2t
local real U2t
local real I2t
local unit P2t
local integer A2t
local real D2t
local real H2t
local unit J2t
local integer K2t
local real L2t
local texttag X2t
local string C2t
local real V2t
local integer B2t
local texttag N2t
local string M2t
local real w5i
local unit u5i
local unit r5i
local texttag s5i
local boolean t5i
local boolean i5i
local boolean S5i
set aW[qW]=l2t
set qW=qW+1
set b2t=0
loop
exitwhen b2t>3
if Vw[b2t]==0 then
if ru[b2t]==true then
set ru[b2t]=false
else
set ru[b2t]=true
endif
set T2t=l[b2t]
set Y2t=$54344152
if GetUnitAbilityLevel(T2t,Y2t)==1 then
set G2t=l[b2t]
set g2t=$54344152
call UnitRemoveAbility(G2t,g2t)
set ru[b2t]=true
endif
set h2t=l[b2t]
if UnitAlive(h2t)==false then
if Lw[b2t]==1 then
set Vw[b2t]=100
endif
if Lw[b2t]==2 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=87
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set y2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set F2t=2.75*y2t
set Vw[b2t]=92-R2I(F2t)
else
set Vw[b2t]=92
endif
endif
if Lw[b2t]==3 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=81
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=77
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set p2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set k2t=2.6*p2t
set Vw[b2t]=85-R2I(k2t)
else
set Vw[b2t]=85
endif
endif
if Lw[b2t]==4 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=78
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=74
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set e2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set j2t=2.5*e2t
set Vw[b2t]=82-R2I(j2t)
else
set Vw[b2t]=82
endif
endif
else
set x2t=l[b2t]
set v2t=$444F5053
if GetUnitAbilityLevel(x2t,v2t)==1 then
set tu[b2t]=true
endif
if Lw[b2t]==1 then
set Vw[b2t]=40
set m2t=l[b2t]
set Q2t=$534C4F57
if GetUnitAbilityLevel(m2t,Q2t)>=1 then
set Vw[b2t]=48
endif
endif
if Lw[b2t]==2 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=35
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set q2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set W2t=1.1*q2t
set Vw[b2t]=37-R2I(W2t)
else
set Vw[b2t]=37
endif
set E2t=l[b2t]
set Z2t=$534C4F57
if GetUnitAbilityLevel(E2t,Z2t)>=1 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=43
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set a2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set U2t=1.7*a2t
set Vw[b2t]=45-R2I(U2t)
else
set Vw[b2t]=45
endif
endif
endif
if Lw[b2t]==3 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=32
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=31
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set n2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set I2t=1.*n2t
set Vw[b2t]=34-R2I(I2t)
else
set Vw[b2t]=34
endif
set P2t=l[b2t]
set A2t=$534C4F57
if GetUnitAbilityLevel(P2t,A2t)>=1 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=39
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=37
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set d2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set D2t=1.5*d2t
set Vw[b2t]=41-R2I(D2t)
else
set Vw[b2t]=41
endif
endif
endif
if Lw[b2t]==4 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=31
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=30
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set f2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set H2t=1.*f2t
set Vw[b2t]=33-R2I(H2t)
else
set Vw[b2t]=33
endif
set J2t=l[b2t]
set K2t=$534C4F57
if GetUnitAbilityLevel(J2t,K2t)>=1 then
if GetPlayerTechCount(Player(b2t),$52303335,true)==1 then
set Vw[b2t]=37
elseif GetPlayerTechCount(Player(b2t),$52303659,true)==1 then
set Vw[b2t]=35
elseif GetPlayerTechCount(Player(b2t),$524D3135,true)>0 then
set R2t=GetPlayerTechCount(Player(b2t),$524D3135,true)
set L2t=1.47*R2t
set Vw[b2t]=39-R2I(L2t)
else
set Vw[b2t]=39
endif
endif
endif
endif
if GetLocalPlayer()==Player(b2t) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set X2t=Mw[b2t]
set B2t=Vw[b2t]
set C2t=I2S(B2t)
set V2t=13.
call SetTextTagText(X2t,C2t,V2t*.0023)
else
set N2t=Mw[b2t]
set M2t=""
set w5i=13.
call SetTextTagText(N2t,M2t,w5i*.0023)
endif
if p[b2t]==false then
call uLi(Player(b2t),Lw[b2t],cu[b2t],Ou[b2t],yu[b2t],l[b2t],"when calling spawnUnits in TimerSpawnBarake, line 619")
endif
else
if l[b2t]==null then
set t5i=true
else
set u5i=l[b2t]
set t5i=UnitAlive(u5i)==false
endif
if t5i then
if o[b2t]==null then
set i5i=true
else
set r5i=o[b2t]
set i5i=UnitAlive(r5i)==false
endif
set S5i=i5i
else
set S5i=false
endif
if S5i then
set p[b2t]=true
set s5i=Mw[b2t]
call DestroyTextTag(s5i)
set Mw[b2t]=null
set Vw[b2t]=0
set Lw[b2t]=0
set cu[b2t]=0.
set Ou[b2t]=0.
set yu[b2t]=0.
set l[b2t]=null
endif
endif
set b2t=b2t+1
endloop
set qW=qW-1
set T2t=null
set G2t=null
set h2t=null
set x2t=null
set m2t=null
set E2t=null
set P2t=null
set J2t=null
set X2t=null
set N2t=null
set u5i=null
set r5i=null
set s5i=null
endfunction
function yDp takes string qAp returns nothing
local integer aAp
local integer nAp
local integer dAp
local integer fAp
local integer RAp
local integer TAp
local integer YAp
local integer GAp
local integer gAp
local integer hAp
local unit FAp
local integer kAp
local unit jAp
local integer xAp
local unit vAp
local real mAp
local real QAp
local real WAp
local unit EAp
local integer ZAp
local unit UAp
local integer IAp
local real PAp
local unit AAp
local integer DAp
local real HAp
local real JAp
local unit KAp
local integer LAp
local real XAp
local real CAp
local unit VAp
local integer BAp
local real NAp
local texttag MAp
local string wDp
local real uDp
local integer rDp
local texttag sDp
local string tDp
local real iDp
local unit SDp
local unit cDp
local texttag oDp
local boolean ODp
local boolean lDp
local boolean bDp
set aW[qW]=qAp
set qW=qW+1
set aAp=0
loop
exitwhen aAp>3
if Bw[aAp]==0 then
if su[aAp]==true then
set su[aAp]=false
else
set su[aAp]=true
endif
set FAp=O[aAp]
set kAp=$54344152
if GetUnitAbilityLevel(FAp,kAp)==1 then
set jAp=O[aAp]
set xAp=$54344152
call UnitRemoveAbility(jAp,xAp)
set su[aAp]=true
endif
set vAp=O[aAp]
if UnitAlive(vAp)==false then
if Xw[aAp]==1 then
set Bw[aAp]=100
endif
if Xw[aAp]==2 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=87
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set nAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set mAp=2.75*nAp
set Bw[aAp]=92-R2I(mAp)
else
set Bw[aAp]=92
endif
endif
if Xw[aAp]==3 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=81
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=77
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set dAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set QAp=2.6*dAp
set Bw[aAp]=85-R2I(QAp)
else
set Bw[aAp]=85
endif
endif
if Xw[aAp]==4 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=78
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=74
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set fAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set WAp=2.5*fAp
set Bw[aAp]=82-R2I(WAp)
else
set Bw[aAp]=82
endif
endif
else
set EAp=O[aAp]
set ZAp=$444F5053
if GetUnitAbilityLevel(EAp,ZAp)==1 then
set tu[aAp]=true
endif
if Xw[aAp]==1 then
set Bw[aAp]=40
set UAp=O[aAp]
set IAp=$534C4F57
if GetUnitAbilityLevel(UAp,IAp)>=1 then
set Bw[aAp]=48
endif
endif
if Xw[aAp]==2 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=35
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set RAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set PAp=1.1*RAp
set Bw[aAp]=37-R2I(PAp)
else
set Bw[aAp]=37
endif
set AAp=O[aAp]
set DAp=$534C4F57
if GetUnitAbilityLevel(AAp,DAp)>=1 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=43
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set TAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set HAp=1.7*TAp
set Bw[aAp]=45-R2I(HAp)
else
set Bw[aAp]=45
endif
endif
endif
if Xw[aAp]==3 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=32
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=31
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set YAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set JAp=1.*YAp
set Bw[aAp]=34-R2I(JAp)
else
set Bw[aAp]=34
endif
set KAp=O[aAp]
set LAp=$534C4F57
if GetUnitAbilityLevel(KAp,LAp)>=1 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=39
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=37
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set GAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set XAp=1.5*GAp
set Bw[aAp]=41-R2I(XAp)
else
set Bw[aAp]=41
endif
endif
endif
if Xw[aAp]==4 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=31
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=30
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set gAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set CAp=1.*gAp
set Bw[aAp]=33-R2I(CAp)
else
set Bw[aAp]=33
endif
set VAp=O[aAp]
set BAp=$534C4F57
if GetUnitAbilityLevel(VAp,BAp)>=1 then
if GetPlayerTechCount(Player(aAp),$52303335,true)==1 then
set Bw[aAp]=37
elseif GetPlayerTechCount(Player(aAp),$52303659,true)==1 then
set Bw[aAp]=35
elseif GetPlayerTechCount(Player(aAp),$524D3135,true)>0 then
set hAp=GetPlayerTechCount(Player(aAp),$524D3135,true)
set NAp=1.47*hAp
set Bw[aAp]=39-R2I(NAp)
else
set Bw[aAp]=39
endif
endif
endif
endif
if GetLocalPlayer()==Player(aAp) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set MAp=wu[aAp]
set rDp=Bw[aAp]
set wDp=I2S(rDp)
set uDp=13.
call SetTextTagText(MAp,wDp,uDp*.0023)
else
set sDp=wu[aAp]
set tDp=""
set iDp=13.
call SetTextTagText(sDp,tDp,iDp*.0023)
endif
if y[aAp]==false then
call uLi(Player(aAp),Xw[aAp],Su[aAp],lu[aAp],pu[aAp],O[aAp],"when calling spawnUnits in TimerSpawnBarake, line 373")
endif
endif
if O[aAp]==null then
set ODp=true
else
set SDp=O[aAp]
set ODp=UnitAlive(SDp)==false
endif
if ODp then
if o[aAp]==null then
set lDp=true
else
set cDp=o[aAp]
set lDp=UnitAlive(cDp)==false
endif
set bDp=lDp
else
set bDp=false
endif
if bDp then
set y[aAp]=true
set oDp=wu[aAp]
call DestroyTextTag(oDp)
set wu[aAp]=null
set Bw[aAp]=0
set Xw[aAp]=0
set Su[aAp]=0.
set lu[aAp]=0.
set pu[aAp]=0.
set O[aAp]=null
endif
set aAp=aAp+1
endloop
set qW=qW-1
set FAp=null
set jAp=null
set vAp=null
set EAp=null
set UAp=null
set AAp=null
set KAp=null
set VAp=null
set MAp=null
set sDp=null
set SDp=null
set cDp=null
set oDp=null
endfunction
function Cib takes string Gib returns nothing
local integer gib
local texttag hib
local string Fib
local real kib
local integer jib
local texttag xib
local string vib
local real mib
local texttag Qib
local string Wib
local real Eib
local integer Zib
local texttag Uib
local string Iib
local real Pib
local texttag Aib
local string Dib
local real Hib
local integer Jib
local texttag Kib
local string Lib
local real Xib
set aW[qW]=Gib
set qW=qW+1
set gib=0
loop
exitwhen gib>3
set Bw[gib]=Bw[gib]-1
set Cw[gib]=Cw[gib]-1
set Vw[gib]=Vw[gib]-1
if GetLocalPlayer()==Player(gib) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set hib=wu[gib]
set jib=Bw[gib]
set Fib=I2S(jib)
set kib=13.
call SetTextTagText(hib,Fib,kib*.0023)
else
set xib=wu[gib]
set vib=""
set mib=13.
call SetTextTagText(xib,vib,mib*.0023)
endif
if GetLocalPlayer()==Player(gib) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set Qib=Nw[gib]
set Zib=Cw[gib]
set Wib=I2S(Zib)
set Eib=13.
call SetTextTagText(Qib,Wib,Eib*.0023)
else
set Uib=Nw[gib]
set Iib=""
set Pib=13.
call SetTextTagText(Uib,Iib,Pib*.0023)
endif
if GetLocalPlayer()==Player(gib) or GetLocalPlayer()==Player(8) or GetLocalPlayer()==Player(9) or GetLocalPlayer()==Player(10) or GetLocalPlayer()==Player(11) then
set Aib=Mw[gib]
set Jib=Vw[gib]
set Dib=I2S(Jib)
set Hib=13.
call SetTextTagText(Aib,Dib,Hib*.0023)
else
set Kib=Mw[gib]
set Lib=""
set Xib=13.
call SetTextTagText(Kib,Lib,Xib*.0023)
endif
if Bw[gib]==0 then
call yDp("when calling leftWave in TimerSpawnBarake, line 650")
endif
if Cw[gib]==0 then
call BIs("when calling midWave in TimerSpawnBarake, line 652")
endif
if Vw[gib]==0 then
call c5i("when calling rightWave in TimerSpawnBarake, line 654")
endif
set gib=gib+1
endloop
set qW=qW-1
set hib=null
set xib=null
set Qib=null
set Uib=null
set Aib=null
set Kib=null
endfunction
function G5S takes nothing returns nothing
set qW=0
call Cib("via function reference TimerSpawnBarake, line 689")
endfunction
function ZOw takes unit pOw,unit eOw returns nothing
local unit aOw=pOw
local integer qOw=GetUnitTypeId(aOw)
local unit nOw
local integer dOw
local unit fOw
local unittype ROw
local unit TOw
local real YOw
local unit GOw
local unitstate gOw
local real hOw
local unit FOw
local unitstate kOw
local unit jOw
local unit xOw
local unitstate vOw
local boolean mOw
local boolean QOw
local unit WOw
local unitstate EOw
if qOw==$484D3036 then
set nOw=pOw
set dOw=$494D307D
set mOw=RTS(nOw,dOw)!=null==true
else
set mOw=false
endif
if mOw then
set fOw=eOw
set ROw=UNIT_TYPE_HERO
set QOw=IsUnitType(fOw,ROw)
else
set QOw=false
endif
if QOw then
set TOw=pOw
set jOw=pOw
set xOw=jOw
set vOw=UNIT_STATE_MAX_LIFE
set YOw=GetUnitState(xOw,vOw)*.3
set GOw=TOw
set gOw=UNIT_STATE_LIFE
set hOw=YOw
set WOw=GOw
set EOw=gOw
set FOw=GOw
set kOw=gOw
call SetUnitState(WOw,EOw,GetUnitState(FOw,kOw)+hOw)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",pOw,"origin"))
endif
set aOw=null
set nOw=null
set fOw=null
set ROw=null
set TOw=null
set GOw=null
set gOw=null
set FOw=null
set kOw=null
set jOw=null
set xOw=null
set vOw=null
set WOw=null
set EOw=null
endfunction
function G6b takes nothing returns nothing
call ZOw(GetKillingUnit(),GetDyingUnit())
endfunction
function G6i takes nothing returns boolean
return true
endfunction
function GAl takes nothing returns boolean
return true
endfunction
function GCl takes nothing returns boolean
return true
endfunction
function GFt takes nothing returns nothing
set cr=cr+20
endfunction
function GGl takes nothing returns boolean
return true
endfunction
function GGy takes nothing returns nothing
local unit nGy=GetTriggerUnit()
local player dGy=GetOwningPlayer(nGy)
local unit RGy=nGy
local integer fGy
local player TGy
local player YGy
if GetUnitTypeId(RGy)==$6E656637 then
set fGy=0
loop
exitwhen fGy>12
set TGy=UY[fGy]
set YGy=dGy
if IsPlayerAlly(TGy,YGy) then
set IO[fGy]=1
endif
set fGy=fGy+1
endloop
endif
set nGy=null
set dGy=null
set RGy=null
set TGy=null
set YGy=null
endfunction
function GHb takes nothing returns nothing
local unit lHb=GetEnteringUnit()
local unit pHb=lHb
local integer bHb=GetUnitTypeId(pHb)
local unit eHb=lHb
local integer yHb=GetPlayerTechCount(GetOwningPlayer(eHb),$52303745,true)
local unit qHb
local integer aHb
local unit nHb
local integer dHb
local unit fHb
local integer RHb
local unit THb
local integer YHb
if bHb==$6F303355 then
if yHb==0 then
set qHb=lHb
set aHb=$41323041
call UnitAddAbility(qHb,aHb)
endif
if yHb==1 then
set nHb=lHb
set dHb=$41323042
call UnitAddAbility(nHb,dHb)
endif
if yHb==2 then
set fHb=lHb
set RHb=$41323043
call UnitAddAbility(fHb,RHb)
endif
if yHb==3 then
set THb=lHb
set YHb=$41323044
call UnitAddAbility(THb,YHb)
endif
endif
set lHb=null
set pHb=null
set eHb=null
set qHb=null
set nHb=null
set fHb=null
set THb=null
endfunction
function GHl takes nothing returns nothing
local integer lHl=GetResearched()
local unit bHl
local integer yHl
local unit pHl
local unit eHl
local integer qHl
local player aHl
local unit nHl
local unit dHl
local integer fHl
local integer RHl
local player THl
local unit YHl
if lHl==$52756662 then
set bHl=GetTriggerUnit()
set pHl=bHl
set yHl=GetPlayerTechCount(GetOwningPlayer(pHl),$52756662,true)
if yHl==1 then
set nHl=bHl
set aHl=GetOwningPlayer(nHl)
set eHl=c[GetPlayerId(aHl)]
set qHl=$41303034
call UnitAddAbility(eHl,qHl)
else
set YHl=bHl
set THl=GetOwningPlayer(YHl)
set dHl=c[GetPlayerId(THl)]
set fHl=$41303034
set RHl=yHl
call SetUnitAbilityLevel(dHl,fHl,RHl)
endif
endif
set bHl=null
set pHl=null
set eHl=null
set aHl=null
set nHl=null
set dHl=null
set THl=null
set YHl=null
endfunction
function GIb takes nothing returns nothing
local unit JUb=GetKillingUnit()
local unit VUb=JUb
local group KUb
local filterfunc LUb
local unit XUb
local group CUb
local unit BUb
local unit NUb
local unit MUb
local unit wIb
local unit uIb
local unit rIb
local group sIb
local group tIb
local unit iIb
local unit SIb
local real cIb
local unit oIb
local unitstate OIb
local real lIb
local unit bIb
local unitstate yIb
local group pIb
local boolexpr eIb
local boolean qIb
local boolean aIb
local boolean nIb
local boolean dIb
local group fIb
local real RIb
local unit TIb
local unitstate YIb
if GetUnitTypeId(VUb)==$4F303344 then
set qIb=true
else
set BUb=JUb
set qIb=GetUnitTypeId(BUb)==$6F303345
endif
if qIb then
set aIb=true
else
set NUb=JUb
set aIb=GetUnitTypeId(NUb)==$7530304F
endif
if aIb then
set nIb=true
else
set MUb=JUb
set nIb=GetUnitTypeId(MUb)==$75303050
endif
if nIb then
set dIb=true
else
set wIb=JUb
set dIb=GetUnitTypeId(wIb)==$75303051
endif
if dIb then
set KUb=CreateGroup()
set LUb=Filter(Xww)
set fIb=KUb
set uIb=JUb
set RIb=GetUnitX(uIb)
set rIb=JUb
call GroupEnumUnitsInRange(fIb,RIb,GetUnitY(rIb),500.,LUb)
set CUb=KUb
loop
set sIb=CUb
exitwhen not (FirstOfGroup(sIb)!=null)
set tIb=CUb
set iIb=FirstOfGroup(tIb)
call GroupRemoveUnit(tIb,iIb)
set XUb=iIb
set SIb=XUb
set cIb=20.
set oIb=SIb
set OIb=UNIT_STATE_LIFE
set lIb=cIb
set TIb=oIb
set YIb=OIb
set bIb=oIb
set yIb=OIb
call SetUnitState(TIb,YIb,GetUnitState(bIb,yIb)+lIb)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",XUb,"chest"))
endloop
set pIb=KUb
call DestroyGroup(pIb)
set eIb=LUb
call DestroyBoolExpr(eIb)
endif
set JUb=null
set KUb=null
set LUb=null
set XUb=null
set CUb=null
set VUb=null
set BUb=null
set NUb=null
set MUb=null
set wIb=null
set uIb=null
set rIb=null
set sIb=null
set tIb=null
set iIb=null
set SIb=null
set oIb=null
set OIb=null
set bIb=null
set yIb=null
set pIb=null
set eIb=null
set fIb=null
set TIb=null
set YIb=null
endfunction
function Lki takes string aki returns nothing
local unit nki
local player dki
local real fki
local real Rki
local real Tki
local unit Yki
local unit Gki
local unit gki
local texttag hki
local unit Fki
local integer kki
local integer jki
local string xki
local unit vki
local integer mki
local integer Qki
local string Wki
local integer Eki
local integer Zki
local integer Uki
local string Iki
local integer Pki
local integer Aki
local trigger Dki
local unit Hki
local unit Jki
local real Kki
set aW[qW]=aki
set qW=qW+1
if yO!=null and nO==false then
set nki=yO
call DisplayTextToPlayer(GetOwningPlayer(nki),0.,0.,"Rerol quest")
set Yki=yO
set dki=GetOwningPlayer(Yki)
set Gki=yO
set fki=GetUnitX(Gki)
set gki=yO
set Rki=GetUnitY(gki)
set Tki=10.
if GetLocalPlayer()==dki then
call PingMinimap(fki,Rki,Tki)
endif
set hki=yr
call DestroyTextTag(hki)
set GO=YO
set Fki=yO
set kki=YO
call UnitRemoveAbility(Fki,kki)
call eWp(OO,YO,"when calling remove in AltarGold, line 1109")
set jki=OO
set xki="when calling shuffle in AltarGold, line 1110"
set aW[qW]=xki
set qW=qW+1
if ok[jki]==0 then
if jki==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(jki,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set vki=yO
set Qki=OO
set Wki="when calling getFirst in AltarGold, line 1111"
set aW[qW]=Wki
set qW=qW+1
if ok[Qki]==0 then
if Qki==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Zki=Qki
set Eki=Hv[Kv[Vv[Zki]]]
set qW=qW-1
set mki=Eki
call UnitAddAbility(vki,mki)
set Uki=OO
set Iki="when calling getFirst in AltarGold, line 1112"
set aW[qW]=Iki
set qW=qW+1
if ok[Uki]==0 then
if Uki==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Aki=Uki
set Pki=Hv[Kv[Vv[Aki]]]
set qW=qW-1
set YO=Pki
call x7s(OO,GO,"when calling add in AltarGold, line 1113")
set Dki=iO
call EnableTrigger(Dki)
set pr=300
set Hki=yO
set Kki=GetUnitX(Hki)
set Jki=yO
set yr=jVl(Kki,GetUnitY(Jki),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,AN)
endif
set qW=qW-1
set nki=null
set dki=null
set Yki=null
set Gki=null
set gki=null
set hki=null
set Fki=null
set vki=null
set Dki=null
set Hki=null
set Jki=null
endfunction
function GIl takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1557")
endfunction
function pac takes integer tac,timer iac,real Sac,string cac returns nothing
local timer oac
local timer Oac
local timer lac
local real bac
local code yac
set aW[qW]=cac
set qW=qW+1
set oac=iac
call MBp(oac,tac,"when calling setData in ClosureTimers, line 134")
set Oac=oac
set lac=Oac
set bac=Sac
set yac=Otw
call TimerStart(lac,bac,true,yac)
set aj[tac]=Oac
set qW=qW-1
set oac=null
set Oac=null
set lac=null
endfunction
function GtO takes real btO,integer ytO,string ptO returns integer
local integer etO
local timer qtO
local real atO
local integer ntO
local string dtO
local integer ftO
local timer RtO
local real TtO
local string YtO
set aW[qW]=ptO
set qW=qW+1
set qtO=F6c("when calling getTimer in ClosureTimers, line 57")
set atO=btO
set ntO=ytO
set dtO="when calling doPeriodically in ClosureTimers, line 57"
set aW[qW]=dtO
set qW=qW+1
set ftO=ntO
set RtO=qtO
set TtO=atO
set YtO="when calling start in ClosureTimers, line 45"
set aW[qW]=YtO
set qW=qW+1
if gF[ftO]==0 then
if ftO==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 132")
else
call L8c("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 132")
endif
endif
call pac(ftO,RtO,TtO,"when calling start in ClosureTimers, line 132")
set qW=qW-1
set qW=qW-1
set etO=ntO
set qW=qW-1
set qtO=null
set RtO=null
return etO
endfunction
function FRr takes string qRr returns nothing
local integer aRr
local unit nRr
local integer dRr
local integer fRr
local unit RRr
local unit TRr
local integer YRr
local string GRr
local integer gRr
local boolean hRr
set aW[qW]=qRr
set qW=qW+1
set aRr=GetSpellAbilityId()
if aRr==$41304658 then
set RRr=GetSpellAbilityUnit()
set hRr=GetUnitTypeId(RRr)==$4864676F
else
set hRr=false
endif
if hRr then
set nRr=GetSpellAbilityUnit()
set TRr=nRr
set YRr=$41304658
set dRr=GetUnitAbilityLevel(TRr,YRr)
set Ol=0
set GRr="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_AttackBot in AttackBot, line 266"
set aW[qW]=GRr
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set gRr=GF
set gF[gRr]=668
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_AttackBot.","when calling error in AttackBot, line 266")
set gRr=0
endif
else
set YF=YF-1
set gRr=TF[YF]
set gF[gRr]=668
endif
set qW=qW-1
set fRr=gRr
set Nk[fRr]=nRr
set Mk[fRr]=dRr
call GtO(2.,fRr,"when calling doPeriodically in AttackBot, line 266")
endif
set qW=qW-1
set nRr=null
set RRr=null
set TRr=null
endfunction
function GNr takes nothing returns nothing
set qW=0
call FRr("via function reference AttackBot, line 260")
endfunction
function GOc takes nothing returns boolean
return true
endfunction
function GTw takes nothing returns nothing
local integer STw=GetSpellAbilityId()
local unit cTw
local real oTw
local real OTw
local integer lTw
local unit bTw
local unit yTw
local unit pTw
local unit eTw
local unit qTw
local unit aTw
local unit nTw
local integer dTw
local unit fTw
local real RTw
local player TTw
local real YTw
if STw==$414D3177 then
set cTw=GetSpellAbilityUnit()
set yTw=cTw
set oTw=GetUnitX(yTw)
set pTw=cTw
set OTw=GetUnitY(pTw)
set lTw=1
loop
exitwhen lTw>16
set eTw=cTw
set TTw=GetOwningPlayer(eTw)
set qTw=cTw
set YTw=GetUnitX(qTw)
set aTw=cTw
set bTw=CreateUnit(TTw,$75303030,YTw,GetUnitY(aTw),270.)
set nTw=bTw
set dTw=$414D3178
call UnitAddAbility(nTw,dTw)
call IssuePointOrder(bTw,"carrionswarm",oTw+100.*Cos(67.5+I2R(lTw)*22.5*bj_DEGTORAD),OTw+100.*Sin(67.5+I2R(lTw)*22.5*bj_DEGTORAD))
set fTw=bTw
set RTw=3.
call UnitApplyTimedLife(fTw,$42544C46,RTw)
set lTw=lTw+1
endloop
endif
set cTw=null
set bTw=null
set yTw=null
set pTw=null
set eTw=null
set qTw=null
set aTw=null
set nTw=null
set fTw=null
set TTw=null
endfunction
function GVb takes nothing returns nothing
local unit eVb=GetTriggerUnit()
local unit qVb=eVb
local string aVb="attack"
local real TVb=Qw[17]
local real YVb=Ww[17]
local real nVb=TVb
local real dVb=YVb
local unit fVb
local unittype RVb
call IssuePointOrder(qVb,aVb,nVb,dVb)
set fVb=eVb
set RVb=UNIT_TYPE_HERO
if IsUnitType(fVb,RVb) then
call SaveInteger(qu,GetHandleId(eVb),$6D6F7665,17)
endif
set eVb=null
set qVb=null
set fVb=null
set RVb=null
endfunction
function GWi takes nothing returns boolean
local trigger nWi
local rect dWi
local region fWi
local trigger RWi
local boolexpr TWi
local trigger YWi
set eT=CreateTrigger()
set nWi=eT
set dWi=bj_mapInitialPlayableArea
set fWi=CreateRegion()
call RegionAddRect(fWi,dWi)
call TriggerRegisterEnterRegion(nWi,fWi,null)
set RWi=eT
set TWi=Condition(D0w)
call TriggerAddCondition(RWi,TWi)
set YWi=eT
call DisableTrigger(YWi)
set nWi=null
set dWi=null
set fWi=null
set RWi=null
set TWi=null
set YWi=null
return true
endfunction
function Gas takes nothing returns nothing
local unit das=GetTriggerUnit()
local unit fas
local integer Ras
local unit Tas
local boolean Yas
if GetUnitTypeId(das)==$5530304D then
set fas=GetTriggerUnit()
set Ras=$62726A63
set Yas=RTS(fas,Ras)!=null==true
else
set Yas=false
endif
if Yas and Vn==false then
set Tas=GetTriggerUnit()
set Cn=GetOwningPlayer(Tas)
if Vn==false then
call TimerStart(Xn,5.,false,K6)
set Vn=true
endif
endif
set das=null
set fas=null
set Tas=null
endfunction
function Gir takes nothing returns boolean
local trigger wrr
local rect urr
local region rrr
local trigger srr
local rect trr
local region irr
local trigger Srr
local rect crr
local region orr
local trigger Orr
local rect lrr
local region brr
local trigger yrr
local rect prr
local region err
local trigger qrr
local rect arr
local region nrr
local trigger drr
local rect frr
local region Rrr
local trigger Trr
local rect Yrr
local region Grr
local trigger grr
local rect hrr
local region Frr
local trigger krr
local rect jrr
local region xrr
local trigger vrr
local rect mrr
local region Qrr
local trigger Wrr
local rect Err
local region Zrr
local trigger Urr
local rect Irr
local region Prr
local trigger Arr
local rect Drr
local region Hrr
local trigger Jrr
local rect Krr
local region Lrr
local trigger Xrr
local rect Crr
local region Vrr
local trigger Brr
local rect Nrr
local region Mrr
local trigger wsr
local rect usr
local region rsr
local trigger ssr
local rect tsr
local region isr
local trigger Ssr
local rect csr
local region osr
local trigger Osr
local rect lsr
local region bsr
local trigger ysr
local rect psr
local region esr
local trigger qsr
local rect asr
local region nsr
local trigger dsr
local rect fsr
local region Rsr
local trigger Tsr
local rect Ysr
local region Gsr
local trigger gsr
local rect hsr
local region Fsr
local trigger ksr
local rect jsr
local region xsr
local trigger vsr
local rect msr
local region Qsr
local trigger Wsr
local rect Esr
local region Zsr
local trigger Usr
local rect Isr
local region Psr
local trigger Asr
local rect Dsr
local region Hsr
local trigger Jsr
local rect Ksr
local region Lsr
local trigger Xsr
local rect Csr
local region Vsr
local trigger Bsr
local rect Nsr
local region Msr
local trigger wtr
local rect utr
local region rtr
local trigger str
local rect ttr
local region itr
local trigger Str
local rect ctr
local region otr
local trigger Otr
local rect ltr
local region btr
local trigger ytr
local rect ptr
local region etr
local trigger qtr
local rect atr
local region ntr
local trigger dtr
local rect ftr
local region Rtr
local trigger Ttr
local rect Ytr
local region Gtr
local trigger gtr
local rect htr
local region Ftr
local trigger ktr
local rect jtr
local region xtr
local trigger vtr
local rect mtr
local region Qtr
local trigger Wtr
local rect Etr
local region Ztr
local trigger Utr
local rect Itr
local region Ptr
local trigger Atr
local rect Dtr
local region Htr
local trigger Jtr
local rect Ktr
local region Ltr
local trigger Xtr
local rect Ctr
local region Vtr
local trigger Btr
local rect Ntr
local region Mtr
local trigger wir
local rect uir
local region rir
local trigger sir
local rect tir
local region iir
local trigger Sir
local rect cir
local region oir
local trigger Oir
local rect lir
local region bir
local trigger yir
local rect pir
local region eir
local trigger qir
local rect air
local region nir
local trigger dir
local playerunitevent fir
local integer Rir
local trigger Tir
local real Yir
set lf=CreateTrigger()
set bf=CreateTrigger()
set yf=CreateTrigger()
set pf=CreateTrigger()
set ef=CreateTrigger()
set qf=CreateTrigger()
set af=CreateTrigger()
set nf=CreateTrigger()
set df=CreateTrigger()
set ff=CreateTrigger()
set Rf=CreateTrigger()
set Tf=CreateTrigger()
set Yf=CreateTrigger()
set Gf=CreateTrigger()
set gf=CreateTrigger()
set hf=CreateTrigger()
set Ff=CreateTrigger()
set kf=CreateTrigger()
set jf=CreateTrigger()
set xf=CreateTrigger()
set vf=CreateTrigger()
set mf=CreateTrigger()
set Qf=CreateTrigger()
set Wf=CreateTrigger()
set Ef=CreateTrigger()
set Zf=CreateTrigger()
set Uf=CreateTrigger()
set If=CreateTrigger()
set Pf=CreateTrigger()
set Af=CreateTrigger()
set Df=CreateTrigger()
set Hf=CreateTrigger()
set Jf=CreateTrigger()
set Kf=CreateTrigger()
set Lf=CreateTrigger()
set Xf=CreateTrigger()
set Cf=CreateTrigger()
set Vf=CreateTrigger()
set Bf=CreateTrigger()
set Nf=CreateTrigger()
set Mf=CreateTrigger()
set wR=CreateTrigger()
set uR=CreateTrigger()
set rR=CreateTrigger()
set sR=CreateTrigger()
set tR=CreateTrigger()
set iR=CreateTrigger()
set SR=CreateTrigger()
set cR=CreateTrigger()
set oR=CreateTrigger()
set OR=CreateTrigger()
set lR=CreateTrigger()
set bR=CreateTrigger()
set yR=CreateTrigger()
set pR=CreateTrigger()
set eR=CreateTrigger()
set qR=CreateTrigger()
set aR=CreateTrigger()
set nR=CreateTrigger()
set wrr=lf
set urr=bo
set rrr=CreateRegion()
call RegionAddRect(rrr,urr)
call TriggerRegisterEnterRegion(wrr,rrr,null)
call TriggerAddCondition(lf,Condition(a8))
call TriggerAddAction(lf,n8)
set srr=bf
set trr=yo
set irr=CreateRegion()
call RegionAddRect(irr,trr)
call TriggerRegisterEnterRegion(srr,irr,null)
call TriggerAddCondition(bf,Condition(a8))
call TriggerAddAction(bf,d8)
set Srr=yf
set crr=po
set orr=CreateRegion()
call RegionAddRect(orr,crr)
call TriggerRegisterEnterRegion(Srr,orr,null)
call TriggerAddCondition(yf,Condition(a8))
call TriggerAddAction(yf,f8)
set Orr=pf
set lrr=Yo
set brr=CreateRegion()
call RegionAddRect(brr,lrr)
call TriggerRegisterEnterRegion(Orr,brr,null)
call TriggerAddCondition(pf,Condition(R8))
call TriggerAddAction(pf,T8)
set yrr=ef
set prr=To
set err=CreateRegion()
call RegionAddRect(err,prr)
call TriggerRegisterEnterRegion(yrr,err,null)
call TriggerAddCondition(ef,Condition(R8))
call TriggerAddAction(ef,Y8)
set qrr=qf
set arr=Ro
set nrr=CreateRegion()
call RegionAddRect(nrr,arr)
call TriggerRegisterEnterRegion(qrr,nrr,null)
call TriggerAddCondition(qf,Condition(R8))
call TriggerAddAction(qf,G8)
set drr=af
set frr=ao
set Rrr=CreateRegion()
call RegionAddRect(Rrr,frr)
call TriggerRegisterEnterRegion(drr,Rrr,null)
call TriggerAddCondition(af,Condition(g8))
call TriggerAddAction(af,h8)
set Trr=nf
set Yrr=qo
set Grr=CreateRegion()
call RegionAddRect(Grr,Yrr)
call TriggerRegisterEnterRegion(Trr,Grr,null)
call TriggerAddCondition(nf,Condition(g8))
call TriggerAddAction(nf,F8)
set grr=df
set hrr=eo
set Frr=CreateRegion()
call RegionAddRect(Frr,hrr)
call TriggerRegisterEnterRegion(grr,Frr,null)
call TriggerAddCondition(df,Condition(g8))
call TriggerAddAction(df,k8)
set krr=ff
set jrr=no
set xrr=CreateRegion()
call RegionAddRect(xrr,jrr)
call TriggerRegisterEnterRegion(krr,xrr,null)
call TriggerAddCondition(ff,Condition(j8))
call TriggerAddAction(ff,x8)
set vrr=Rf
set mrr=do
set Qrr=CreateRegion()
call RegionAddRect(Qrr,mrr)
call TriggerRegisterEnterRegion(vrr,Qrr,null)
call TriggerAddCondition(Rf,Condition(j8))
call TriggerAddAction(Rf,v8)
set Wrr=Tf
set Err=fo
set Zrr=CreateRegion()
call RegionAddRect(Zrr,Err)
call TriggerRegisterEnterRegion(Wrr,Zrr,null)
call TriggerAddCondition(Tf,Condition(j8))
call TriggerAddAction(Tf,m8)
set Urr=Yf
set Irr=fc
set Prr=CreateRegion()
call RegionAddRect(Prr,Irr)
call TriggerRegisterEnterRegion(Urr,Prr,null)
call TriggerAddCondition(Yf,Condition(Q8))
call TriggerAddAction(Yf,W8)
set Arr=Gf
set Drr=Fc
set Hrr=CreateRegion()
call RegionAddRect(Hrr,Drr)
call TriggerRegisterEnterRegion(Arr,Hrr,null)
call TriggerAddCondition(Gf,Condition(Q8))
call TriggerAddAction(Gf,E8)
set Jrr=gf
set Krr=xc
set Lrr=CreateRegion()
call RegionAddRect(Lrr,Krr)
call TriggerRegisterEnterRegion(Jrr,Lrr,null)
call TriggerAddCondition(gf,Condition(Q8))
call TriggerAddAction(gf,Z8)
set Xrr=hf
set Crr=Jc
set Vrr=CreateRegion()
call RegionAddRect(Vrr,Crr)
call TriggerRegisterEnterRegion(Xrr,Vrr,null)
call TriggerAddCondition(hf,Condition(Q8))
call TriggerAddAction(hf,U8)
set Brr=Ff
set Nrr=Nc
set Mrr=CreateRegion()
call RegionAddRect(Mrr,Nrr)
call TriggerRegisterEnterRegion(Brr,Mrr,null)
call TriggerAddCondition(Ff,Condition(Q8))
call TriggerAddAction(Ff,I8)
set wsr=kf
set usr=uo
set rsr=CreateRegion()
call RegionAddRect(rsr,usr)
call TriggerRegisterEnterRegion(wsr,rsr,null)
call TriggerAddCondition(kf,Condition(Q8))
call TriggerAddAction(kf,P8)
set ssr=jf
set tsr=Bc
set isr=CreateRegion()
call RegionAddRect(isr,tsr)
call TriggerRegisterEnterRegion(ssr,isr,null)
call TriggerAddCondition(jf,Condition(Q8))
call TriggerAddAction(jf,A8)
set Ssr=xf
set csr=Uc
set osr=CreateRegion()
call RegionAddRect(osr,csr)
call TriggerRegisterEnterRegion(Ssr,osr,null)
call TriggerAddCondition(xf,Condition(Q8))
call TriggerAddAction(xf,D8)
set Osr=vf
set lsr=hc
set bsr=CreateRegion()
call RegionAddRect(bsr,lsr)
call TriggerRegisterEnterRegion(Osr,bsr,null)
call TriggerAddCondition(vf,Condition(Q8))
call TriggerAddAction(vf,H8)
set ysr=mf
set psr=Zc
set esr=CreateRegion()
call RegionAddRect(esr,psr)
call TriggerRegisterEnterRegion(ysr,esr,null)
call TriggerAddCondition(mf,Condition(Q8))
call TriggerAddAction(mf,J8)
set qsr=Qf
set asr=Ac
set nsr=CreateRegion()
call RegionAddRect(nsr,asr)
call TriggerRegisterEnterRegion(qsr,nsr,null)
call TriggerAddCondition(Qf,Condition(Q8))
call TriggerAddAction(Qf,K8)
set dsr=Wf
set fsr=oo
set Rsr=CreateRegion()
call RegionAddRect(Rsr,fsr)
call TriggerRegisterEnterRegion(dsr,Rsr,null)
call TriggerAddCondition(Wf,Condition(Q8))
call TriggerAddAction(Wf,L8)
set Tsr=Ef
set Ysr=Rc
set Gsr=CreateRegion()
call RegionAddRect(Gsr,Ysr)
call TriggerRegisterEnterRegion(Tsr,Gsr,null)
call TriggerAddCondition(Ef,Condition(Q8))
call TriggerAddAction(Ef,X8)
set gsr=Zf
set hsr=kc
set Fsr=CreateRegion()
call RegionAddRect(Fsr,hsr)
call TriggerRegisterEnterRegion(gsr,Fsr,null)
call TriggerAddCondition(Zf,Condition(Q8))
call TriggerAddAction(Zf,C8)
set ksr=Uf
set jsr=vc
set xsr=CreateRegion()
call RegionAddRect(xsr,jsr)
call TriggerRegisterEnterRegion(ksr,xsr,null)
call TriggerAddCondition(Uf,Condition(Q8))
call TriggerAddAction(Uf,V8)
set vsr=If
set msr=Kc
set Qsr=CreateRegion()
call RegionAddRect(Qsr,msr)
call TriggerRegisterEnterRegion(vsr,Qsr,null)
call TriggerAddCondition(If,Condition(Q8))
call TriggerAddAction(If,B8)
set Wsr=Pf
set Esr=Mc
set Zsr=CreateRegion()
call RegionAddRect(Zsr,Esr)
call TriggerRegisterEnterRegion(Wsr,Zsr,null)
call TriggerAddCondition(Pf,Condition(Q8))
call TriggerAddAction(Pf,N8)
set Usr=Af
set Isr=ro
set Psr=CreateRegion()
call RegionAddRect(Psr,Isr)
call TriggerRegisterEnterRegion(Usr,Psr,null)
call TriggerAddCondition(Af,Condition(Q8))
call TriggerAddAction(Af,M8)
set Asr=Df
set Dsr=Vc
set Hsr=CreateRegion()
call RegionAddRect(Hsr,Dsr)
call TriggerRegisterEnterRegion(Asr,Hsr,null)
call TriggerAddCondition(Df,Condition(Q8))
call TriggerAddAction(Df,w9)
set Jsr=Hf
set Ksr=Ic
set Lsr=CreateRegion()
call RegionAddRect(Lsr,Ksr)
call TriggerRegisterEnterRegion(Jsr,Lsr,null)
call TriggerAddCondition(Hf,Condition(Q8))
call TriggerAddAction(Hf,u9)
set Xsr=Jf
set Csr=gc
set Vsr=CreateRegion()
call RegionAddRect(Vsr,Csr)
call TriggerRegisterEnterRegion(Xsr,Vsr,null)
call TriggerAddCondition(Jf,Condition(Q8))
call TriggerAddAction(Jf,r9)
set Bsr=Kf
set Nsr=Ec
set Msr=CreateRegion()
call RegionAddRect(Msr,Nsr)
call TriggerRegisterEnterRegion(Bsr,Msr,null)
call TriggerAddCondition(Kf,Condition(Q8))
call TriggerAddAction(Kf,s9)
set wtr=Lf
set utr=Dc
set rtr=CreateRegion()
call RegionAddRect(rtr,utr)
call TriggerRegisterEnterRegion(wtr,rtr,null)
call TriggerAddCondition(Lf,Condition(Q8))
call TriggerAddAction(Lf,t9)
set str=Xf
set ttr=co
set itr=CreateRegion()
call RegionAddRect(itr,ttr)
call TriggerRegisterEnterRegion(str,itr,null)
call TriggerAddCondition(Xf,Condition(Q8))
call TriggerAddAction(Xf,i9)
set Str=Cf
set ctr=Tc
set otr=CreateRegion()
call RegionAddRect(otr,ctr)
call TriggerRegisterEnterRegion(Str,otr,null)
call TriggerAddCondition(Cf,Condition(Q8))
call TriggerAddAction(Cf,S9)
set Otr=Vf
set ltr=jc
set btr=CreateRegion()
call RegionAddRect(btr,ltr)
call TriggerRegisterEnterRegion(Otr,btr,null)
call TriggerAddCondition(Vf,Condition(Q8))
call TriggerAddAction(Vf,c9)
set ytr=Bf
set ptr=mc
set etr=CreateRegion()
call RegionAddRect(etr,ptr)
call TriggerRegisterEnterRegion(ytr,etr,null)
call TriggerAddCondition(Bf,Condition(Q8))
call TriggerAddAction(Bf,o9)
set qtr=Nf
set atr=Lc
set ntr=CreateRegion()
call RegionAddRect(ntr,atr)
call TriggerRegisterEnterRegion(qtr,ntr,null)
call TriggerAddCondition(Nf,Condition(Q8))
call TriggerAddAction(Nf,O9)
set dtr=Mf
set ftr=wo
set Rtr=CreateRegion()
call RegionAddRect(Rtr,ftr)
call TriggerRegisterEnterRegion(dtr,Rtr,null)
call TriggerAddCondition(Mf,Condition(Q8))
call TriggerAddAction(Mf,l9)
set Ttr=wR
set Ytr=so
set Gtr=CreateRegion()
call RegionAddRect(Gtr,Ytr)
call TriggerRegisterEnterRegion(Ttr,Gtr,null)
call TriggerAddCondition(wR,Condition(Q8))
call TriggerAddAction(wR,b9)
set gtr=uR
set htr=Cc
set Ftr=CreateRegion()
call RegionAddRect(Ftr,htr)
call TriggerRegisterEnterRegion(gtr,Ftr,null)
call TriggerAddCondition(uR,Condition(Q8))
call TriggerAddAction(uR,y9)
set ktr=rR
set jtr=Pc
set xtr=CreateRegion()
call RegionAddRect(xtr,jtr)
call TriggerRegisterEnterRegion(ktr,xtr,null)
call TriggerAddCondition(rR,Condition(Q8))
call TriggerAddAction(rR,p9)
set vtr=sR
set mtr=Gc
set Qtr=CreateRegion()
call RegionAddRect(Qtr,mtr)
call TriggerRegisterEnterRegion(vtr,Qtr,null)
call TriggerAddCondition(sR,Condition(Q8))
call TriggerAddAction(sR,e9)
set Wtr=tR
set Etr=Wc
set Ztr=CreateRegion()
call RegionAddRect(Ztr,Etr)
call TriggerRegisterEnterRegion(Wtr,Ztr,null)
call TriggerAddCondition(tR,Condition(Q8))
call TriggerAddAction(tR,q9)
set Utr=iR
set Itr=Hc
set Ptr=CreateRegion()
call RegionAddRect(Ptr,Itr)
call TriggerRegisterEnterRegion(Utr,Ptr,null)
call TriggerAddCondition(iR,Condition(Q8))
call TriggerAddAction(iR,a9)
set Atr=SR
set Dtr=So
set Htr=CreateRegion()
call RegionAddRect(Htr,Dtr)
call TriggerRegisterEnterRegion(Atr,Htr,null)
call TriggerAddCondition(SR,Condition(Q8))
call TriggerAddAction(SR,n9)
set Jtr=cR
set Ktr=Xc
set Ltr=CreateRegion()
call RegionAddRect(Ltr,Ktr)
call TriggerRegisterEnterRegion(Jtr,Ltr,null)
call TriggerAddCondition(cR,Condition(Q8))
call TriggerAddAction(cR,d9)
set Xtr=oR
set Ctr=io
set Vtr=CreateRegion()
call RegionAddRect(Vtr,Ctr)
call TriggerRegisterEnterRegion(Xtr,Vtr,null)
call TriggerAddCondition(oR,Condition(Q8))
call TriggerAddAction(oR,f9)
set Btr=OR
set Ntr=Yc
set Mtr=CreateRegion()
call RegionAddRect(Mtr,Ntr)
call TriggerRegisterEnterRegion(Btr,Mtr,null)
call TriggerAddCondition(OR,Condition(Q8))
call TriggerAddAction(OR,R9)
set wir=lR
set uir=Qc
set rir=CreateRegion()
call RegionAddRect(rir,uir)
call TriggerRegisterEnterRegion(wir,rir,null)
call TriggerAddCondition(lR,Condition(Q8))
call TriggerAddAction(lR,T9)
set sir=bR
set tir=yc
set iir=CreateRegion()
call RegionAddRect(iir,tir)
call TriggerRegisterEnterRegion(sir,iir,null)
call TriggerAddCondition(bR,Condition(Q8))
call TriggerAddAction(bR,Y9)
set Sir=yR
set cir=qc
set oir=CreateRegion()
call RegionAddRect(oir,cir)
call TriggerRegisterEnterRegion(Sir,oir,null)
call TriggerAddCondition(yR,Condition(Q8))
call TriggerAddAction(yR,G9)
set Oir=pR
set lir=dc
set bir=CreateRegion()
call RegionAddRect(bir,lir)
call TriggerRegisterEnterRegion(Oir,bir,null)
call TriggerAddCondition(pR,Condition(Q8))
call TriggerAddAction(pR,g9)
set yir=eR
set pir=ac
set eir=CreateRegion()
call RegionAddRect(eir,pir)
call TriggerRegisterEnterRegion(yir,eir,null)
call TriggerAddCondition(eR,Condition(Q8))
call TriggerAddAction(eR,h9)
set qir=qR
set air=nc
set nir=CreateRegion()
call RegionAddRect(nir,air)
call TriggerRegisterEnterRegion(qir,nir,null)
call TriggerAddCondition(qR,Condition(Q8))
call TriggerAddAction(qR,F9)
set dir=aR
set fir=EVENT_PLAYER_UNIT_SPELL_ENDCAST
set Rir=0
loop
call TriggerRegisterPlayerUnitEvent(dir,Player(Rir),fir,null)
set Rir=Rir+1
exitwhen Rir==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(aR,Condition(k9))
call TriggerAddAction(aR,j9)
set Tir=nR
set Yir=3.
call TriggerRegisterTimerEvent(Tir,Yir,true)
call TriggerAddAction(nR,x9)
set wrr=null
set urr=null
set rrr=null
set srr=null
set trr=null
set irr=null
set Srr=null
set crr=null
set orr=null
set Orr=null
set lrr=null
set brr=null
set yrr=null
set prr=null
set err=null
set qrr=null
set arr=null
set nrr=null
set drr=null
set frr=null
set Rrr=null
set Trr=null
set Yrr=null
set Grr=null
set grr=null
set hrr=null
set Frr=null
set krr=null
set jrr=null
set xrr=null
set vrr=null
set mrr=null
set Qrr=null
set Wrr=null
set Err=null
set Zrr=null
set Urr=null
set Irr=null
set Prr=null
set Arr=null
set Drr=null
set Hrr=null
set Jrr=null
set Krr=null
set Lrr=null
set Xrr=null
set Crr=null
set Vrr=null
set Brr=null
set Nrr=null
set Mrr=null
set wsr=null
set usr=null
set rsr=null
set ssr=null
set tsr=null
set isr=null
set Ssr=null
set csr=null
set osr=null
set Osr=null
set lsr=null
set bsr=null
set ysr=null
set psr=null
set esr=null
set qsr=null
set asr=null
set nsr=null
set dsr=null
set fsr=null
set Rsr=null
set Tsr=null
set Ysr=null
set Gsr=null
set gsr=null
set hsr=null
set Fsr=null
set ksr=null
set jsr=null
set xsr=null
set vsr=null
set msr=null
set Qsr=null
set Wsr=null
set Esr=null
set Zsr=null
set Usr=null
set Isr=null
set Psr=null
set Asr=null
set Dsr=null
set Hsr=null
set Jsr=null
set Ksr=null
set Lsr=null
set Xsr=null
set Csr=null
set Vsr=null
set Bsr=null
set Nsr=null
set Msr=null
set wtr=null
set utr=null
set rtr=null
set str=null
set ttr=null
set itr=null
set Str=null
set ctr=null
set otr=null
set Otr=null
set ltr=null
set btr=null
set ytr=null
set ptr=null
set etr=null
set qtr=null
set atr=null
set ntr=null
set dtr=null
set ftr=null
set Rtr=null
set Ttr=null
set Ytr=null
set Gtr=null
set gtr=null
set htr=null
set Ftr=null
set ktr=null
set jtr=null
set xtr=null
set vtr=null
set mtr=null
set Qtr=null
set Wtr=null
set Etr=null
set Ztr=null
set Utr=null
set Itr=null
set Ptr=null
set Atr=null
set Dtr=null
set Htr=null
set Jtr=null
set Ktr=null
set Ltr=null
set Xtr=null
set Ctr=null
set Vtr=null
set Btr=null
set Ntr=null
set Mtr=null
set wir=null
set uir=null
set rir=null
set sir=null
set tir=null
set iir=null
set Sir=null
set cir=null
set oir=null
set Oir=null
set lir=null
set bir=null
set yir=null
set pir=null
set eir=null
set qir=null
set air=null
set nir=null
set dir=null
set fir=null
set Tir=null
return true
endfunction
function Gku takes nothing returns boolean
local unit pku=GetFilterUnit()
local unit eku=pku
local unit aku=GetEnumUnit()
local player qku=GetOwningPlayer(aku)
local unit nku
local unittype dku
local unit fku
local unitstate Rku
local boolean Tku
local boolean Yku
if IsUnitEnemy(eku,qku) then
set nku=pku
set dku=UNIT_TYPE_HERO
set Tku=IsUnitType(nku,dku)==true
else
set Tku=false
endif
if Tku then
set fku=pku
set Rku=UNIT_STATE_LIFE
set Yku=GetUnitState(fku,Rku)>0.
else
set Yku=false
endif
set pku=null
set eku=null
set qku=null
set aku=null
set nku=null
set dku=null
set fku=null
set Rku=null
return Yku
endfunction
function CJc takes unit IJc,unit PJc,effect AJc,effect DJc returns nothing
local timer HJc=CreateTimer()
local integer JJc=GetHandleId(HJc)
local integer KJc=GetHandleId(IJc)
local group LJc=Mo
local unit XJc=PJc
if IsUnitInGroup(XJc,LJc)==true then
call SaveUnitHandle(qu,JJc,$556E6974,IJc)
call SaveUnitHandle(qu,JJc,$54617267,PJc)
call SaveInteger(qu,$41544344,KJc,2)
call SaveEffectHandle(qu,JJc,$45666631,AJc)
call SaveEffectHandle(qu,JJc,$45666632,DJc)
call TimerStart(HJc,10.,true,TN)
else
call SaveUnitHandle(qu,JJc,$556E6974,IJc)
call SaveUnitHandle(qu,JJc,$54617267,PJc)
call SaveInteger(qu,$41544344,KJc,2)
call SaveEffectHandle(qu,JJc,$45666631,AJc)
call SaveEffectHandle(qu,JJc,$45666632,DJc)
call TimerStart(HJc,15.,true,YN)
endif
set HJc=null
set LJc=null
set XJc=null
endfunction
function Gmt takes nothing returns nothing
local unit Ivt=GetOrderTargetUnit()
local unit Pvt=GetOrderedUnit()
local unit Nvt=Ivt
local real Avt=GetUnitX(Nvt)
local unit Mvt=Ivt
local real Dvt=GetUnitY(Mvt)
local unit wmt=Pvt
local real Hvt=GetUnitX(wmt)
local unit umt=Pvt
local real Jvt=GetUnitY(umt)
local real Kvt=SquareRoot((Hvt-Avt)*(Hvt-Avt)+(Jvt-Dvt)*(Jvt-Dvt))
local integer Lvt=GetHandleId(Pvt)
local group Xvt
local filterfunc Cvt
local unit Vvt
local group Bvt
local group rmt
local unit smt
local group tmt
local unit imt
local group Smt
local unit cmt
local unit omt
local unittype Omt
local group lmt
local unit bmt
local group ymt
local unit pmt
local group emt
local group qmt
local unit amt
local group nmt
local group dmt
local boolexpr fmt
local boolean Rmt
local boolean Tmt
local boolean Ymt
if LoadInteger(qu,$41544344,Lvt)==0 then
call SaveInteger(qu,$41544344,Lvt,1)
endif
if Kvt<=1200. and LoadInteger(qu,$41544344,Lvt)==1 then
set rmt=Mo
set smt=Ivt
set Rmt=IsUnitInGroup(smt,rmt)==false
else
set Rmt=false
endif
if Rmt then
set tmt=tO
set imt=Ivt
set Tmt=IsUnitInGroup(imt,tmt)==false
else
set Tmt=false
endif
if Tmt then
set Smt=wO
set cmt=Ivt
set Ymt=IsUnitInGroup(cmt,Smt)==false
else
set Ymt=false
endif
if Ymt then
set omt=Ivt
set Omt=UNIT_TYPE_ANCIENT
if IsUnitType(omt,Omt)==true then
set lmt=tO
set bmt=Ivt
call GroupAddUnit(lmt,bmt)
else
set ymt=Mo
set pmt=Ivt
call GroupAddUnit(ymt,pmt)
endif
set Xvt=CreateGroup()
call CJc(Pvt,Ivt,AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",Ivt,"overhead"),AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",Pvt,"overhead"))
call IssueTargetOrder(Ivt,"attack",Pvt)
call SaveUnitHandle(qu,$54416772,$556E6974,Ivt)
set Cvt=Filter(GN)
call GroupEnumUnitsInRange(Xvt,Avt,Dvt,1050.,Cvt)
set Bvt=Xvt
loop
set emt=Bvt
exitwhen not (FirstOfGroup(emt)!=null)
set qmt=Bvt
set amt=FirstOfGroup(qmt)
call GroupRemoveUnit(qmt,amt)
set Vvt=amt
call IssueTargetOrder(Vvt,"attack",Pvt)
endloop
set nmt=Xvt
call GroupClear(nmt)
set dmt=Xvt
call DestroyGroup(dmt)
set fmt=Cvt
call DestroyBoolExpr(fmt)
endif
set Ivt=null
set Pvt=null
set Xvt=null
set Cvt=null
set Vvt=null
set Bvt=null
set Nvt=null
set Mvt=null
set wmt=null
set umt=null
set rmt=null
set smt=null
set tmt=null
set imt=null
set Smt=null
set cmt=null
set omt=null
set Omt=null
set lmt=null
set bmt=null
set ymt=null
set pmt=null
set emt=null
set qmt=null
set amt=null
set nmt=null
set dmt=null
set fmt=null
endfunction
function GnS takes nothing returns nothing
local unit OnS=GetKillingUnit()
local unit lnS=OnS
local unit bnS
local real ynS
local unit pnS
local unitstate enS
local real qnS
local unit anS
local unitstate nnS
local unit dnS
local unit fnS
local unit RnS
local unitstate TnS
local real YnS
if GetUnitTypeId(lnS)==$6E736C72 then
set bnS=OnS
set ynS=75.
set pnS=bnS
set enS=UNIT_STATE_LIFE
set qnS=ynS
set RnS=pnS
set TnS=enS
set anS=pnS
set nnS=enS
call SetUnitState(RnS,TnS,GetUnitState(anS,nnS)+qnS)
set dnS=OnS
set YnS=GetUnitX(dnS)
set fnS=OnS
call DestroyEffect(AddSpecialEffect("Heal Orange.mdx",YnS,GetUnitY(fnS)))
endif
set OnS=null
set lnS=null
set bnS=null
set pnS=null
set enS=null
set anS=null
set nnS=null
set dnS=null
set fnS=null
set RnS=null
set TnS=null
endfunction
function Gwt takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1775")
endfunction
function Gxb takes nothing returns boolean
local trigger qxb
local trigger axb
local playerunitevent nxb
local trigger dxb
local playerunitevent fxb
local integer Rxb
local trigger Txb
local code Yxb
set wT=CreateTrigger()
set qxb=wT
call DisableTrigger(qxb)
set axb=wT
set nxb=EVENT_PLAYER_UNIT_DEATH
set dxb=axb
set fxb=nxb
set Rxb=0
loop
call TriggerRegisterPlayerUnitEvent(dxb,Player(Rxb),fxb,null)
set Rxb=Rxb+1
exitwhen Rxb==bj_MAX_PLAYER_SLOTS
endloop
set Txb=wT
set Yxb=G0w
call TriggerAddAction(Txb,Yxb)
set qxb=null
set axb=null
set nxb=null
set dxb=null
set fxb=null
set Txb=null
return true
endfunction
function Gxi takes nothing returns nothing
local unit txi=GetEnteringUnit()
local unit Sxi=txi
local integer ixi=GetUnitTypeId(Sxi)
local integer cxi
local player oxi
local unit Oxi
local integer lxi
local integer bxi
local player yxi
local unit pxi
local integer exi
local integer qxi
local player axi
local unit nxi
local integer dxi
local integer fxi
local player Rxi
local unit Txi
local integer Yxi
if ixi==$6E6C6C64 or ixi==$6E616E6F then
set cxi=$524D316E
set oxi=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(oxi,cxi,true)==1 then
set Oxi=txi
set lxi=$41303031
call UnitAddAbility(Oxi,lxi)
endif
set bxi=$524D316E
set yxi=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(yxi,bxi,true)==2 then
set pxi=txi
set exi=$41303053
call UnitAddAbility(pxi,exi)
endif
set qxi=$524D316E
set axi=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(axi,qxi,true)==3 then
set nxi=txi
set dxi=$41303254
call UnitAddAbility(nxi,dxi)
endif
set fxi=$524D316E
set Rxi=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(Rxi,fxi,true)==4 then
set Txi=txi
set Yxi=$41303931
call UnitAddAbility(Txi,Yxi)
endif
endif
set txi=null
set Sxi=null
set oxi=null
set Oxi=null
set yxi=null
set pxi=null
set axi=null
set nxi=null
set Rxi=null
set Txi=null
endfunction
function Gxs takes nothing returns boolean
local unit fxs=GetFilterUnit()
local unit Rxs=fxs
local unittype Txs=UNIT_TYPE_HERO
local boolean Yxs=IsUnitType(Rxs,Txs)
set fxs=null
set Rxs=null
set Txs=null
return Yxs
endfunction
function ppu takes integer opu,string Opu returns integer
local integer lpu
local string bpu
local integer ypu
set aW[qW]=Opu
set qW=qW+1
set bpu="when calling alloc_IdGenerator in ObjectIdGenerator, line 19"
set aW[qW]=bpu
set qW=qW+1
if lk==0 then
if bk<32768 then
set bk=bk+1
set ypu=bk
else
call L8c("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 13")
set ypu=0
endif
else
set lk=lk-1
set ypu=Ok[lk]
endif
set qW=qW-1
set lpu=ypu
set qW=qW-1
return lpu
endfunction
function H3b takes nothing returns boolean
local string D3b
set qW=0
set D3b="via function reference ObjectIdGenerator, line 1"
set aW[qW]=D3b
set qW=qW+1
call ppu($78303030,"when calling new_IdGenerator in ObjectIdGenerator, line 6")
call ppu($484D3030,"when calling new_IdGenerator in ObjectIdGenerator, line 7")
call ppu($414D3030,"when calling new_IdGenerator in ObjectIdGenerator, line 8")
call ppu($424D3030,"when calling new_IdGenerator in ObjectIdGenerator, line 9")
call ppu($494D3030,"when calling new_IdGenerator in ObjectIdGenerator, line 10")
call ppu($524D3030,"when calling new_IdGenerator in ObjectIdGenerator, line 11")
set qW=qW-1
return true
endfunction
function got takes unit oot,string Oot returns nothing
local integer lot
local unit bot
local integer yot
local integer pot
local string eot
local integer qot
local string aot
local integer dot
local integer fot
local unit Rot
local integer Tot
local string Yot
local unit Got
set aW[qW]=Oot
set qW=qW+1
set bot=oot
set yot=$414D637A
call UnitRemoveAbility(bot,yot)
set pot=gY
set eot="when calling shuffle in NewRandom, line 122"
set aW[qW]=eot
set qW=qW+1
if ok[pot]==0 then
if pot==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(pot,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set qot=gY
set aot="when calling getFirst in NewRandom, line 123"
set aW[qW]=aot
set qW=qW+1
if ok[qot]==0 then
if qot==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set fot=qot
set dot=Hv[Kv[Vv[fot]]]
set qW=qW-1
set lot=dot
set Rot=oot
call Gqp(GetOwningPlayer(Rot),lot,"when calling pickRaceRandom in NewRandom, line 124")
call eWp(gY,lot,"when calling remove in NewRandom, line 125")
set Tot=gY
set Yot="when calling shuffle in NewRandom, line 126"
set aW[qW]=Yot
set qW=qW+1
if ok[Tot]==0 then
if Tot==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Tot,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Got=oot
call RemoveUnit(Got)
set qW=qW-1
set bot=null
set Rot=null
set Got=null
endfunction
function H6S takes nothing returns nothing
local string A6S
local integer D6S
set qW=0
set A6S="via function reference NewRandom, line 153"
set aW[qW]=A6S
set qW=qW+1
set D6S=GetSpellAbilityId()
if D6S==$414D637A then
call got(GetTriggerUnit(),"when calling reRoll in NewRandom, line 156")
endif
set qW=qW-1
endfunction
function H6i takes nothing returns boolean
return true
endfunction
function H9e takes nothing returns nothing
local integer f9e=GetSpellAbilityId()
local unit R9e
local unit T9e
local unit Y9e
local unit G9e
local unit g9e
local unit h9e
local real F9e
local unit k9e
local integer j9e
local unit x9e
local string v9e
local real m9e
local real Q9e
local unit W9e
local unit E9e
local unit Z9e
local player U9e
local real I9e
local real P9e
local real A9e
local real D9e
if f9e==$41304C32 then
set R9e=GetSpellAbilityUnit()
set Y9e=R9e
set U9e=GetOwningPlayer(Y9e)
set G9e=R9e
set I9e=GetUnitX(G9e)
set g9e=R9e
set T9e=CreateUnit(U9e,$75303030,I9e,GetUnitY(g9e),0.)
set h9e=T9e
set F9e=22.
call UnitApplyTimedLife(h9e,$42544C46,F9e)
set k9e=T9e
set j9e=$41303658
call UnitAddAbility(k9e,j9e)
set x9e=T9e
set v9e="monsoon"
set W9e=R9e
set E9e=W9e
set P9e=GetUnitX(E9e)
set Z9e=W9e
set A9e=P9e
set D9e=GetUnitY(Z9e)
set m9e=A9e
set Q9e=D9e
call IssuePointOrder(x9e,v9e,m9e,Q9e)
endif
set R9e=null
set T9e=null
set Y9e=null
set G9e=null
set g9e=null
set h9e=null
set k9e=null
set x9e=null
set W9e=null
set E9e=null
set Z9e=null
set U9e=null
endfunction
function H9r takes nothing returns boolean
return true
endfunction
function HBr takes nothing returns nothing
local unit ABr=GetTriggerUnit()
local unit DBr
if GetUnitTypeId(ABr)==$484D3033 and GetHeroLevel(GetTriggerUnit())>=20 then
set DBr=GetTriggerUnit()
call SetPlayerTechResearched(GetOwningPlayer(DBr),$524D307C,1)
endif
set ABr=null
set DBr=null
endfunction
function L5u takes real T5u,real Y5u,real G5u,string g5u,real h5u returns texttag
local texttag F5u=CreateTextTag()
local texttag v5u=F5u
local boolean m5u=true
local texttag k5u
local texttag j5u
local texttag x5u
local texttag Q5u
local string W5u
local real E5u
local texttag Z5u
local real U5u
local real I5u
local real P5u
local texttag A5u
local boolean D5u
local real H5u
local real J5u
local real K5u
call SetTextTagPermanent(v5u,m5u)
set k5u=F5u
set Q5u=k5u
set W5u=g5u
set E5u=h5u
call SetTextTagText(Q5u,W5u,E5u*.0023)
set j5u=k5u
set Z5u=j5u
set H5u=T5u
set J5u=Y5u
set K5u=G5u
set U5u=H5u
set I5u=J5u
set P5u=K5u
call SetTextTagPos(Z5u,U5u,I5u,P5u)
set x5u=j5u
set A5u=x5u
set D5u=true
call SetTextTagVisibility(A5u,D5u)
set Ftw=x5u
set F5u=null
set k5u=null
set j5u=null
set x5u=null
set v5u=null
set Q5u=null
set Z5u=null
set A5u=null
return Ftw
endfunction
function s_c takes string h9c returns nothing
local integer F9c
local integer k9c
local integer j9c
local integer x9c
local integer v9c
local integer m9c
local string Q9c
local integer W9c
local string E9c
local integer Z9c
local integer U9c
local integer I9c
local string P9c
local integer A9c
local integer D9c
local unit H9c
local integer J9c
local player K9c
local unit L9c
local timerdialog X9c
local trigger C9c
local player V9c
local unit B9c
local unit N9c
local player M9c
local integer w0c
local real u0c
local real r0c
local real s0c
local real t0c
local unit i0c
local player S0c
local player c0c
local integer o0c
local real O0c
local real l0c
local real b0c
local real y0c
local unit p0c
local player e0c
local player q0c
local integer a0c
local real n0c
local real d0c
local real f0c
local real R0c
local unit T0c
local player Y0c
local player G0c
local real g0c
local real h0c
local unit F0c
local unit k0c
local timerdialog j0c
local real x0c
local player v0c
local integer m0c
local real Q0c
local real W0c
local player E0c
local integer Z0c
local real U0c
local real I0c
local player P0c
local integer A0c
local real D0c
local real H0c
local real J0c
local real K0c
local real L0c
local real X0c
local real C0c
local real V0c
local real B0c
local real N0c
local real M0c
local real w_c
local real u_c
local real r_c
set aW[qW]=h9c
set qW=qW+1
if Eu==false then
set Eu=true
set m9c=gY
set Q9c="when calling shuffle in PickRace, line 1605"
set aW[qW]=Q9c
set qW=qW+1
if ok[m9c]==0 then
if m9c==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(m9c,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set W9c=gY
set E9c="when calling getFirst in PickRace, line 1606"
set aW[qW]=E9c
set qW=qW+1
if ok[W9c]==0 then
if W9c==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set U9c=W9c
set Z9c=Hv[Kv[Vv[U9c]]]
set qW=qW-1
set F9c=Z9c
call Gqp(Tu,F9c,"when calling pickRaceRandom in PickRace, line 1607")
call eWp(gY,F9c,"when calling remove in PickRace, line 1608")
set I9c=vY
set P9c="when calling getFirst in PickRace, line 1609"
set aW[qW]=P9c
set qW=qW+1
if ok[I9c]==0 then
if I9c==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set D9c=I9c
set A9c=Hv[Kv[Vv[D9c]]]
set qW=qW-1
set k9c=A9c
set j9c=0
loop
exitwhen j9c>3
set H9c=k[j9c]
set J9c=k9c
call UnitRemoveAbility(H9c,J9c)
set j9c=j9c+1
endloop
call eWp(vY,k9c,"when calling remove in PickRace, line 1612")
set K9c=Tu
set x9c=GetPlayerId(K9c)
set L9c=F[x9c]
call ShowUnit(L9c,false)
set X9c=tr
call DestroyTimerDialog(X9c)
set C9c=GY
call EnableTrigger(C9c)
call TimerStart(ir,60.,false,Jww_720)
set tr=CreateTimerDialog(ir)
set j0c=tr
set V9c=Tu
call TimerDialogSetTitle(j0c,GetPlayerName(V9c)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set v9c=0
loop
exitwhen v9c>3
set B9c=F[v9c]
set x0c=GetUnitX(B9c)
set N9c=F[v9c]
set Mu=L5u(x0c,GetUnitY(N9c),50.,"BAN",10.)
set v9c=v9c+1
endloop
set M9c=Tu
set S0c=Yu
set i0c=F[GetPlayerId(S0c)]
set w0c=GetUnitTypeId(i0c)
set J0c=0.
set K0c=-400.
set u0c=J0c
set r0c=K0c
set L0c=bj_UNIT_FACING
set s0c=L0c
set v0c=M9c
set m0c=w0c
set Q0c=u0c
set W0c=r0c
set X0c=s0c
set t0c=X0c
set Zu=CreateUnit(v0c,m0c,Q0c,W0c,t0c*57.295779513)
set c0c=Tu
set e0c=Gu
set p0c=F[GetPlayerId(e0c)]
set o0c=GetUnitTypeId(p0c)
set C0c=-400.
set V0c=0.
set O0c=C0c
set l0c=V0c
set B0c=bj_UNIT_FACING
set b0c=B0c
set E0c=c0c
set Z0c=o0c
set U0c=O0c
set I0c=l0c
set N0c=b0c
set y0c=N0c
set Uu=CreateUnit(E0c,Z0c,U0c,I0c,y0c*57.295779513)
set q0c=Tu
set Y0c=gu
set T0c=F[GetPlayerId(Y0c)]
set a0c=GetUnitTypeId(T0c)
set M0c=400.
set w_c=0.
set n0c=M0c
set d0c=w_c
set u_c=bj_UNIT_FACING
set f0c=u_c
set P0c=q0c
set A0c=a0c
set D0c=n0c
set H0c=d0c
set r_c=f0c
set R0c=r_c
set Iu=CreateUnit(P0c,A0c,D0c,H0c,R0c*57.295779513)
set G0c=Tu
set F0c=Zu
set g0c=GetUnitX(F0c)
set k0c=Zu
set h0c=GetUnitY(k0c)
if GetLocalPlayer()==G0c then
call SetCameraPosition(g0c,h0c)
endif
endif
set qW=qW-1
set H9c=null
set K9c=null
set L9c=null
set X9c=null
set C9c=null
set V9c=null
set B9c=null
set N9c=null
set M9c=null
set i0c=null
set S0c=null
set c0c=null
set p0c=null
set e0c=null
set q0c=null
set T0c=null
set Y0c=null
set G0c=null
set F0c=null
set k0c=null
set j0c=null
set v0c=null
set E0c=null
set P0c=null
endfunction
function HDu takes nothing returns nothing
set qW=0
call s_c("via function reference PickRace, line 1513")
endfunction
function HDy takes nothing returns boolean
return true
endfunction
function HEb takes nothing returns boolean
return true
endfunction
function RYe takes unit ARe returns nothing
local unit MRe=ARe
local integer DRe
local effect HRe
local location JRe
local filterfunc KRe
local group LRe
local unit XRe
local group CRe
local integer VRe
local integer BRe
local integer NRe
local string wTe
local real uTe
local real rTe
local unit sTe
local unit tTe
local unit iTe
local effect STe
local real cTe
local location oTe
local boolexpr OTe
local group lTe
local group bTe
local group yTe
local unit pTe
local unit eTe
local real qTe
local unit aTe
local unitstate nTe
local real dTe
local unit fTe
local unitstate RTe
local unit TTe
local unittype YTe
local unit GTe
local unittype gTe
local player hTe
local unit FTe
local player kTe
local integer jTe
local player xTe
local playerstate vTe
local integer mTe
local player QTe
local playerstate WTe
local unit ETe
local unittype ZTe
local unit UTe
local unittype ITe
local player PTe
local unit ATe
local player DTe
local integer HTe
local player JTe
local playerstate KTe
local integer LTe
local player XTe
local playerstate CTe
local player VTe
local unit BTe
local player NTe
local integer MTe
local player wYe
local playerstate uYe
local integer rYe
local player sYe
local playerstate tYe
local group iYe
local boolexpr SYe
local real cYe
local unit oYe
local unitstate OYe
local boolean lYe
local player bYe
local playerstate yYe
local boolean pYe
local player eYe
local playerstate qYe
local player aYe
local playerstate nYe
local real dYe
local real fYe
if GetUnitTypeId(MRe)==$484D3035 then
set DRe=GetUnitAbilityLevel(ARe,$414D3266)
if DRe>=1 then
set wTe="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set sTe=ARe
set tTe=sTe
set cYe=GetUnitX(tTe)
set iTe=sTe
set dYe=cYe
set fYe=GetUnitY(iTe)
set uTe=dYe
set rTe=fYe
set HRe=AddSpecialEffect(wTe,uTe,rTe)
set STe=HRe
call DestroyEffect(STe)
set JRe=GetUnitLoc(ARe)
set KRe=Filter(Jsw)
set cTe=900.
set oTe=JRe
set OTe=KRe
set lTe=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(lTe,oTe,cTe,OTe)
call DestroyBoolExpr(OTe)
set LRe=lTe
set CRe=LRe
loop
set bTe=CRe
exitwhen not (FirstOfGroup(bTe)!=null)
set yTe=CRe
set pTe=FirstOfGroup(yTe)
call GroupRemoveUnit(yTe,pTe)
set XRe=pTe
set eTe=XRe
set qTe=-(750.*DRe)
set aTe=eTe
set nTe=UNIT_STATE_LIFE
set dTe=qTe
set oYe=aTe
set OYe=nTe
set fTe=aTe
set RTe=nTe
call SetUnitState(oYe,OYe,GetUnitState(fTe,RTe)+dTe)
set TTe=XRe
set YTe=UNIT_TYPE_HERO
if IsUnitType(TTe,YTe) then
set GTe=XRe
set gTe=UNIT_TYPE_ANCIENT
set lYe=IsUnitType(GTe,gTe)
else
set lYe=false
endif
if lYe then
set FTe=ARe
set hTe=GetOwningPlayer(FTe)
set VRe=GetPlayerId(hTe)-4
set kTe=Player(VRe)
set jTe=900
set xTe=kTe
set vTe=PLAYER_STATE_RESOURCE_GOLD
set mTe=jTe
set bYe=xTe
set yYe=vTe
set QTe=xTe
set WTe=vTe
call SetPlayerState(bYe,yYe,GetPlayerState(QTe,WTe)+mTe)
set hr[VRe]=hr[VRe]+900
set Fr[VRe]=Fr[VRe]+900
set Nr[VRe]=Nr[VRe]+900
else
set ETe=XRe
set ZTe=UNIT_TYPE_HERO
if IsUnitType(ETe,ZTe) then
set UTe=XRe
set ITe=UNIT_TYPE_ANCIENT
set pYe=not IsUnitType(UTe,ITe)
else
set pYe=false
endif
if pYe then
set ATe=ARe
set PTe=GetOwningPlayer(ATe)
set BRe=GetPlayerId(PTe)-4
set DTe=Player(BRe)
set HTe=360
set JTe=DTe
set KTe=PLAYER_STATE_RESOURCE_GOLD
set LTe=HTe
set eYe=JTe
set qYe=KTe
set XTe=JTe
set CTe=KTe
call SetPlayerState(eYe,qYe,GetPlayerState(XTe,CTe)+LTe)
set hr[BRe]=hr[BRe]+360
set Fr[BRe]=Fr[BRe]+360
set Br[BRe]=Br[BRe]+360
else
set BTe=ARe
set VTe=GetOwningPlayer(BTe)
set NRe=GetPlayerId(VTe)-4
set NTe=Player(NRe)
set MTe=25
set wYe=NTe
set uYe=PLAYER_STATE_RESOURCE_GOLD
set rYe=MTe
set aYe=wYe
set nYe=uYe
set sYe=wYe
set tYe=uYe
call SetPlayerState(aYe,nYe,GetPlayerState(sYe,tYe)+rYe)
set hr[NRe]=hr[NRe]+25
set Fr[NRe]=Fr[NRe]+25
set Cr[NRe]=Cr[NRe]+25
endif
endif
endloop
call RemoveLocation(JRe)
set iYe=LRe
call DestroyGroup(iYe)
set SYe=KRe
call DestroyBoolExpr(SYe)
endif
endif
set HRe=null
set JRe=null
set KRe=null
set LRe=null
set XRe=null
set CRe=null
set MRe=null
set sTe=null
set tTe=null
set iTe=null
set STe=null
set oTe=null
set OTe=null
set lTe=null
set bTe=null
set yTe=null
set pTe=null
set eTe=null
set aTe=null
set nTe=null
set fTe=null
set RTe=null
set TTe=null
set YTe=null
set GTe=null
set gTe=null
set hTe=null
set FTe=null
set kTe=null
set xTe=null
set vTe=null
set QTe=null
set WTe=null
set ETe=null
set ZTe=null
set UTe=null
set ITe=null
set PTe=null
set ATe=null
set DTe=null
set JTe=null
set KTe=null
set XTe=null
set CTe=null
set VTe=null
set BTe=null
set NTe=null
set wYe=null
set uYe=null
set sYe=null
set tYe=null
set iYe=null
set SYe=null
set oYe=null
set OYe=null
set bYe=null
set yYe=null
set eYe=null
set qYe=null
set aYe=null
set nYe=null
endfunction
function HHb takes nothing returns nothing
call RYe(GetTriggerUnit())
endfunction
function r5S takes string k2S returns nothing
local unit j2S
local integer x2S
local integer v2S
local unit m2S
local unit Q2S
local unit W2S
local unit E2S
local unit Z2S
local integer U2S
local string P2S
local integer A2S
local real D2S
local integer H2S
local string J2S
local unit K2S
local integer L2S
local unit X2S
local integer C2S
local unit V2S
local integer B2S
local unit N2S
local integer M2S
local boolean w5S
local boolean u5S
set aW[qW]=k2S
set qW=qW+1
set j2S=GetAttacker()
set m2S=j2S
if GetUnitTypeId(m2S)==$6F303531 then
set w5S=true
else
set Q2S=j2S
set w5S=GetUnitTypeId(Q2S)==$6F303549
endif
if w5S then
set u5S=true
else
set W2S=j2S
set u5S=GetUnitTypeId(W2S)==$6F303552
endif
if u5S then
set E2S=j2S
set x2S=GetPlayerTechCount(GetOwningPlayer(E2S),$52303844,true)
set Z2S=j2S
set U2S=$4132314B
if GetUnitAbilityLevel(Z2S,U2S)==1 then
set P2S="when calling alloc_CallbackSingle_doAfter_Marksmanship in Marksmanship, line 98"
set aW[qW]=P2S
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set A2S=fF
set RF[A2S]=730
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Marksmanship.","when calling error in Marksmanship, line 98")
set A2S=0
endif
else
set dF=dF-1
set A2S=nF[dF]
set RF[A2S]=730
endif
set qW=qW-1
set v2S=A2S
set Gm[v2S]=j2S
set D2S=.5
set H2S=v2S
set J2S="when calling doAfter in Marksmanship, line 98"
set aW[qW]=J2S
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),D2S,H2S,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set K2S=j2S
set L2S=$4132314B
if GetUnitAbilityLevel(K2S,L2S)==0 then
set X2S=j2S
set C2S=$4132314C
call IncUnitAbilityLevel(X2S,C2S)
set V2S=j2S
set B2S=$4132314C
if GetUnitAbilityLevel(V2S,B2S)==9-1*x2S then
set N2S=j2S
set M2S=$4132314B
call UnitAddAbility(N2S,M2S)
endif
endif
endif
set qW=qW-1
set j2S=null
set m2S=null
set Q2S=null
set W2S=null
set E2S=null
set Z2S=null
set K2S=null
set X2S=null
set V2S=null
set N2S=null
endfunction
function HIy takes nothing returns nothing
set qW=0
call r5S("via function reference Marksmanship, line 110")
endfunction
function HLu takes nothing returns boolean
local unit xLu=GetFilterUnit()
local unit vLu=xLu
local unit mLu
local unittype QLu
local unit WLu
local unit ELu
local unit ZLu
local player ULu
local unit ILu
local boolean PLu
local boolean ALu
local boolean DLu
if UnitAlive(vLu) then
set mLu=xLu
set QLu=UNIT_TYPE_HERO
set PLu=IsUnitType(mLu,QLu)==true
else
set PLu=false
endif
if PLu then
set WLu=xLu
set ELu=Dp
if WLu!=null and ELu!=null then
set ZLu=WLu
set ILu=ELu
set ULu=GetOwningPlayer(ILu)
set ALu=ZLu!=null and IsUnitAlly(ZLu,ULu)
else
set ALu=false
endif
set DLu=ALu==true
else
set DLu=false
endif
set xLu=null
set vLu=null
set mLu=null
set QLu=null
set WLu=null
set ELu=null
set ZLu=null
set ULu=null
set ILu=null
return DLu
endfunction
function HMw takes nothing returns boolean
set Ch=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterPissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(Ch,5374)
call SetSoundChannel(Ch,0)
call SetSoundVolume(Ch,250)
call SetSoundPitch(Ch,1.)
return true
endfunction
function HMy takes nothing returns nothing
local unit ZMy=GetTriggerUnit()
local unit UMy=ZMy
local unit IMy
local integer PMy
local trigger AMy
local boolean DMy
if GetUnitTypeId(UMy)==$4F303438 then
set IMy=ZMy
set PMy=$41323231
set DMy=GetUnitAbilityLevel(IMy,PMy)>0
else
set DMy=false
endif
if DMy then
set AMy=Gl
call TriggerExecute(AMy)
endif
set ZMy=null
set UMy=null
set IMy=null
set AMy=null
endfunction
function AZo takes integer HEo,unit JEo,string KEo returns nothing
local location LEo
local unit XEo
local integer CEo
local unit VEo
local real BEo
local unit NEo
local unitstate MEo
local real wZo
local unit uZo
local unit rZo
local unitstate sZo
local integer tZo
local integer iZo
local player SZo
local location cZo
local real oZo
local unit OZo
local integer lZo
local unit bZo
local real yZo
local unit pZo
local integer eZo
local real qZo
local real aZo
local unit nZo
local unit dZo
local unit fZo
local integer RZo
local unit TZo
local integer YZo
local string GZo
local integer gZo
local real hZo
local integer FZo
local string kZo
local unit jZo
local integer xZo
local unit vZo
local integer mZo
local string QZo
local real WZo
local player EZo
local unit ZZo
local real UZo
local real IZo
local real PZo
set aW[qW]=KEo
set qW=qW+1
if JEo!=null then
set VEo=Rg
set uZo=Rg
set rZo=uZo
set sZo=UNIT_STATE_MANA
set BEo=GetUnitState(rZo,sZo)-75.
set NEo=VEo
set MEo=UNIT_STATE_MANA
set wZo=BEo
call SetUnitState(NEo,MEo,wZo)
set LEo=GetUnitLoc(Rg)
set tZo=1
set iZo=$75303030
set SZo=GetOwningPlayer(Rg)
set cZo=LEo
set oZo=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set tZo=tZo-1
exitwhen tZo<0
call CreateUnitAtLocSaveLast(SZo,iZo,cZo,oZo)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set XEo=bj_lastCreatedUnit
set OZo=XEo
set lZo=$41313047
call UnitAddAbility(OZo,lZo)
set bZo=XEo
set yZo=2.
call UnitApplyTimedLife(bZo,$42544C46,yZo)
set pZo=XEo
set eZo=852125
set nZo=mQ[HEo]
set UZo=GetUnitX(nZo)
set dZo=mQ[HEo]
set IZo=UZo
set PZo=GetUnitY(dZo)
set qZo=IZo
set aZo=PZo
call IssuePointOrderById(pZo,eZo,qZo,aZo)
call RemoveLocation(LEo)
if Yg==false then
set fZo=fg
set RZo=$41313434
call UnitRemoveAbility(fZo,RZo)
set TZo=fg
set YZo=$414D626B
call UnitRemoveAbility(TZo,YZo)
set GZo="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 824"
set aW[qW]=GZo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set gZo=fF
set RF[gZo]=793
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 824")
set gZo=0
endif
else
set dF=dF-1
set gZo=nF[dF]
set RF[gZo]=793
endif
set qW=qW-1
set CEo=gZo
set hZo=80.
set FZo=CEo
set kZo="when calling doAfter in TheEpiphanyOfDeath, line 824"
set aW[qW]=kZo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),hZo,FZo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set jZo=fg
set xZo=$414D6269
call UnitRemoveAbility(jZo,xZo)
set vZo=fg
set mZo=$414D6269
call UnitAddAbility(vZo,mZo)
set QZo="Spell targert too far away from Talnos"
set WZo=5.
set ZZo=fg
set EZo=GetOwningPlayer(ZZo)
call DisplayTimedTextToPlayer(EZo,0.,0.,WZo,QZo)
endif
set qW=qW-1
set LEo=null
set XEo=null
set VEo=null
set NEo=null
set MEo=null
set uZo=null
set rZo=null
set sZo=null
set SZo=null
set cZo=null
set OZo=null
set bZo=null
set pZo=null
set nZo=null
set dZo=null
set fZo=null
set TZo=null
set jZo=null
set vZo=null
set EZo=null
set ZZo=null
endfunction
function C_S takes integer L0S,unit X0S,string C0S returns nothing
local location V0S
local unit B0S
local integer N0S
local unit M0S
local real w_S
local unit u_S
local unitstate r_S
local real s_S
local unit t_S
local unit i_S
local unitstate S_S
local integer c_S
local integer o_S
local player O_S
local location l_S
local real b_S
local unit y_S
local integer p_S
local unit e_S
local integer q_S
local integer a_S
local unit n_S
local real d_S
local unit f_S
local integer R_S
local real T_S
local real Y_S
local unit G_S
local unit g_S
local unit h_S
local unit F_S
local integer k_S
local unit j_S
local integer x_S
local string v_S
local integer m_S
local real Q_S
local integer W_S
local string E_S
local unit Z_S
local integer U_S
local unit I_S
local integer P_S
local string A_S
local real D_S
local player H_S
local unit J_S
local real K_S
local real L_S
local real X_S
set aW[qW]=C0S
set qW=qW+1
if X0S!=null then
set M0S=Rg
set t_S=Rg
set i_S=t_S
set S_S=UNIT_STATE_MANA
set w_S=GetUnitState(i_S,S_S)-150.
set u_S=M0S
set r_S=UNIT_STATE_MANA
set s_S=w_S
call SetUnitState(u_S,r_S,s_S)
set V0S=GetUnitLoc(Rg)
set c_S=1
set o_S=$75303030
set O_S=GetOwningPlayer(Rg)
set l_S=V0S
set b_S=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set c_S=c_S-1
exitwhen c_S<0
call CreateUnitAtLocSaveLast(O_S,o_S,l_S,b_S)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set B0S=bj_lastCreatedUnit
set y_S=B0S
set p_S=$41313834
call UnitAddAbility(y_S,p_S)
set e_S=B0S
set q_S=$41313834
set a_S=7
call SetUnitAbilityLevel(e_S,q_S,a_S)
set n_S=B0S
set d_S=30.
call UnitApplyTimedLife(n_S,$42544C46,d_S)
set f_S=B0S
set R_S=852591
set G_S=EQ[L0S]
set g_S=G_S
set K_S=GetUnitX(g_S)
set h_S=G_S
set L_S=K_S
set X_S=GetUnitY(h_S)
set T_S=L_S
set Y_S=X_S
call IssuePointOrderById(f_S,R_S,T_S,Y_S)
call RemoveLocation(V0S)
if Yg==false then
set F_S=fg
set k_S=$414D626D
call UnitRemoveAbility(F_S,k_S)
set j_S=fg
set x_S=$414D626F
call UnitRemoveAbility(j_S,x_S)
set v_S="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 994"
set aW[qW]=v_S
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set m_S=fF
set RF[m_S]=796
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 994")
set m_S=0
endif
else
set dF=dF-1
set m_S=nF[dF]
set RF[m_S]=796
endif
set qW=qW-1
set N0S=m_S
set Q_S=300.
set W_S=N0S
set E_S="when calling doAfter in TheEpiphanyOfDeath, line 994"
set aW[qW]=E_S
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Q_S,W_S,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set Z_S=fg
set U_S=$414D626E
call UnitRemoveAbility(Z_S,U_S)
set I_S=fg
set P_S=$414D626E
call UnitAddAbility(I_S,P_S)
set A_S="Spell targert too far away from Talnos"
set D_S=5.
set J_S=fg
set H_S=GetOwningPlayer(J_S)
call DisplayTimedTextToPlayer(H_S,0.,0.,D_S,A_S)
endif
set qW=qW-1
set V0S=null
set B0S=null
set M0S=null
set u_S=null
set r_S=null
set t_S=null
set i_S=null
set S_S=null
set O_S=null
set l_S=null
set y_S=null
set e_S=null
set n_S=null
set f_S=null
set G_S=null
set g_S=null
set h_S=null
set F_S=null
set j_S=null
set Z_S=null
set I_S=null
set H_S=null
set J_S=null
endfunction
function Ztt takes integer dtt,integer ftt,string Rtt returns boolean
local boolean Ttt
local integer Ytt
local integer Gtt
local string gtt
local boolean htt
local integer Ftt
local integer ktt
local string jtt
local boolean xtt
local integer vtt
local integer mtt
local hashtable Qtt
local integer Wtt
local integer Ett
set aW[qW]=Rtt
set qW=qW+1
if KF[dtt]==0 then
if dtt==0 then
call L8c("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 13")
else
call L8c("Called HashMap.has on invalid object.","when calling error in HashMap, line 13")
endif
endif
set Ytt=dtt
set Gtt=ftt
set gtt="when calling has in HashMap, line 13"
set aW[qW]=gtt
set qW=qW+1
set Ftt=Ytt
set ktt=Gtt
set jtt="when calling hasInt in HashMap, line 14"
set aW[qW]=jtt
set qW=qW+1
if KF[Ftt]==0 then
if Ftt==0 then
call L8c("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 10")
else
call L8c("Called Table.hasInt on invalid object.","when calling error in Table, line 10")
endif
endif
set vtt=Ftt
set mtt=ktt
set Qtt=Sg
set Wtt=vtt
set Ett=mtt
set xtt=HaveSavedInteger(Qtt,Wtt,Ett)
set qW=qW-1
set htt=xtt
set qW=qW-1
set Ttt=htt
set qW=qW-1
set Qtt=null
return Ttt
endfunction
function XVe takes integer vVe,integer mVe,integer QVe,string WVe returns nothing
local integer EVe
local integer ZVe
local integer UVe
local string IVe
local integer PVe
local integer AVe
local integer DVe
local hashtable HVe
local integer JVe
local integer KVe
local integer LVe
set aW[qW]=WVe
set qW=qW+1
if not Ztt(vVe,mVe,"when calling has in HashMap, line 18") then
set Ex[vVe]=Ex[vVe]+1
endif
set EVe=vVe
set ZVe=mVe
set UVe=QVe
set IVe="when calling saveInt in HashMap, line 20"
set aW[qW]=IVe
set qW=qW+1
if KF[EVe]==0 then
if EVe==0 then
call L8c("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 43")
else
call L8c("Called Table.saveInt on invalid object.","when calling error in Table, line 43")
endif
endif
set PVe=EVe
set AVe=ZVe
set DVe=UVe
set HVe=Sg
set JVe=PVe
set KVe=AVe
set LVe=DVe
call SaveInteger(HVe,JVe,KVe,LVe)
set qW=qW-1
set qW=qW-1
set HVe=null
endfunction
function YeS takes integer SeS,integer ceS,string oeS returns nothing
local hashtable OeS
local integer leS
local integer beS
local integer yeS
local integer peS
local integer eeS
local string qeS
local integer aeS
local integer neS
local integer deS
local hashtable feS
local integer ReS
local integer TeS
set aW[qW]=oeS
set qW=qW+1
set OeS=dq
set leS=SeS
set beS=ceS
set peS=SeS
set eeS=ceS
set qeS="when calling count in HashList, line 31"
set aW[qW]=qeS
set qW=qW+1
if AF[peS]==0 then
if peS==0 then
call L8c("Nullpointer exception when calling HashList.count","when calling error in HashList, line 24")
else
call L8c("Called HashList.count on invalid object.","when calling error in HashList, line 24")
endif
endif
set neS=peS
set deS=eeS
set feS=dq
set ReS=neS
set TeS=deS
set aeS=LoadInteger(feS,ReS,TeS)
set qW=qW-1
set yeS=aeS+1
call SaveInteger(OeS,leS,beS,yeS)
set qW=qW-1
set OeS=null
set feS=null
endfunction
function EJc takes integer gJc,integer hJc,string FJc returns nothing
local hashtable kJc
local integer jJc
local integer xJc
local integer vJc
local integer mJc
local integer QJc
local string WJc
set aW[qW]=FJc
set qW=qW+1
set kJc=nq
set jJc=gJc
set xJc=Wx[gJc]
set vJc=hJc
call SaveInteger(kJc,jJc,xJc,vJc)
set mJc=gJc
set QJc=hJc
set WJc="when calling incrOccurences in HashList, line 40"
set aW[qW]=WJc
set qW=qW+1
if AF[mJc]==0 then
if mJc==0 then
call L8c("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 30")
else
call L8c("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 30")
endif
endif
call YeS(mJc,QJc,"when calling incrOccurences in HashList, line 30")
set qW=qW-1
set Wx[gJc]=Wx[gJc]+1
set qW=qW-1
set kJc=null
endfunction
function Xwt takes integer jwt,integer xwt,string vwt returns boolean
local boolean mwt
local integer Qwt
local integer Wwt
local string Ewt
local boolean Zwt
local integer Uwt
local integer Iwt
local string Pwt
local integer Awt
local integer Dwt
local integer Hwt
local hashtable Jwt
local integer Kwt
local integer Lwt
set aW[qW]=vwt
set qW=qW+1
if AF[jwt]==0 then
if jwt==0 then
call L8c("Nullpointer exception when calling HashList.has","when calling error in HashList, line 104")
else
call L8c("Called HashList.has on invalid object.","when calling error in HashList, line 104")
endif
endif
set Qwt=jwt
set Wwt=xwt
set Ewt="when calling has in HashList, line 104"
set aW[qW]=Ewt
set qW=qW+1
set Uwt=Qwt
set Iwt=Wwt
set Pwt="when calling count in HashList, line 105"
set aW[qW]=Pwt
set qW=qW+1
if AF[Uwt]==0 then
if Uwt==0 then
call L8c("Nullpointer exception when calling HashList.count","when calling error in HashList, line 24")
else
call L8c("Called HashList.count on invalid object.","when calling error in HashList, line 24")
endif
endif
set Dwt=Uwt
set Hwt=Iwt
set Jwt=dq
set Kwt=Dwt
set Lwt=Hwt
set Awt=LoadInteger(Jwt,Kwt,Lwt)
set qW=qW-1
set Zwt=Awt>0
set qW=qW-1
set mwt=Zwt
set qW=qW-1
set Jwt=null
return mwt
endfunction
function jPS takes integer pPS,integer ePS,integer qPS,string aPS returns nothing
local integer nPS
local integer dPS
local string fPS
local boolean RPS
local integer TPS
local integer YPS
local string GPS
local boolean gPS
local integer hPS
local integer FPS
local string kPS
set aW[qW]=aPS
set qW=qW+1
call XVe(pPS,ePS,qPS,"when calling put in HashMap, line 60")
set nPS=pPS
set dPS=ePS
set fPS="when calling hasKey in HashMap, line 61"
set aW[qW]=fPS
set qW=qW+1
if KF[nPS]==0 then
if nPS==0 then
call L8c("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call L8c("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set TPS=nPS
set YPS=dPS
set GPS="when calling hasKey in HashMap, line 87"
set aW[qW]=GPS
set qW=qW+1
set gPS=Xwt(Zx[TPS],YPS,"when calling has in HashMap, line 88")
set qW=qW-1
set RPS=gPS
set qW=qW-1
if not RPS then
set hPS=Zx[pPS]
set FPS=ePS
set kPS="when calling add in HashMap, line 62"
set aW[qW]=kPS
set qW=qW+1
if AF[hPS]==0 then
if hPS==0 then
call L8c("Nullpointer exception when calling HashList.add","when calling error in HashList, line 37")
else
call L8c("Called HashList.add on invalid object.","when calling error in HashList, line 37")
endif
endif
call EJc(hPS,FPS,"when calling add in HashList, line 37")
set qW=qW-1
endif
set qW=qW-1
endfunction
function TKO takes integer nKO,integer dKO,integer fKO,string RKO returns nothing
set aW[qW]=RKO
set qW=qW+1
if KF[nKO]==0 then
if nKO==0 then
call L8c("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 17")
else
call L8c("Called HashMap.put on invalid object.","when calling error in HashMap, line 17")
endif
endif
if KF[nKO]<=2641 then
call XVe(nKO,dKO,fKO,"when calling put in HashMap, line 17")
else
call jPS(nKO,dKO,fKO,"when calling put in HashMap, line 17")
endif
set qW=qW-1
endfunction
function Sgu takes integer NGu,integer MGu,string wgu returns nothing
local integer ugu
local integer rgu
local string sgu
local integer tgu
local integer igu
set aW[qW]=wgu
set qW=qW+1
if Ztt(NGu,MGu,"when calling has in HashMap, line 28") then
set Ex[NGu]=Ex[NGu]-1
endif
set ugu=NGu
set rgu=MGu
set sgu="when calling removeInt in HashMap, line 30"
set aW[qW]=sgu
set qW=qW+1
if KF[ugu]==0 then
if ugu==0 then
call L8c("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 25")
else
call L8c("Called Table.removeInt on invalid object.","when calling error in Table, line 25")
endif
endif
set tgu=ugu
set igu=rgu
call RemoveSavedInteger(Sg,tgu,igu)
set qW=qW-1
set qW=qW-1
endfunction
function fSw takes integer sSw,integer tSw,string iSw returns nothing
local hashtable SSw
local integer cSw
local integer oSw
local integer OSw
local integer lSw
local integer bSw
local string ySw
local integer pSw
local integer eSw
local integer qSw
local hashtable aSw
local integer nSw
local integer dSw
set aW[qW]=iSw
set qW=qW+1
set SSw=dq
set cSw=sSw
set oSw=tSw
set lSw=sSw
set bSw=tSw
set ySw="when calling count in HashList, line 34"
set aW[qW]=ySw
set qW=qW+1
if AF[lSw]==0 then
if lSw==0 then
call L8c("Nullpointer exception when calling HashList.count","when calling error in HashList, line 24")
else
call L8c("Called HashList.count on invalid object.","when calling error in HashList, line 24")
endif
endif
set eSw=lSw
set qSw=bSw
set aSw=dq
set nSw=eSw
set dSw=qSw
set pSw=LoadInteger(aSw,nSw,dSw)
set qW=qW-1
set OSw=pSw-1
call SaveInteger(SSw,cSw,oSw,OSw)
set qW=qW-1
set SSw=null
set aSw=null
endfunction
function Zcl takes integer pcl,integer ecl,string qcl returns integer
local integer acl
local integer ncl
local integer dcl
local integer fcl
local integer Rcl
local string Tcl
local hashtable Ycl
local integer Gcl
local integer gcl
local hashtable hcl
local integer Fcl
local integer kcl
local hashtable jcl
local integer xcl
local integer vcl
local integer mcl
local hashtable Qcl
local integer Wcl
local integer Ecl
set aW[qW]=qcl
set qW=qW+1
set fcl=pcl
set Ycl=nq
set Gcl=pcl
set gcl=ecl
set Rcl=LoadInteger(Ycl,Gcl,gcl)
set Tcl="when calling decrOccurences in HashList, line 73"
set aW[qW]=Tcl
set qW=qW+1
if AF[fcl]==0 then
if fcl==0 then
call L8c("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 33")
else
call L8c("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 33")
endif
endif
call fSw(fcl,Rcl,"when calling decrOccurences in HashList, line 33")
set qW=qW-1
set hcl=nq
set Fcl=pcl
set kcl=ecl
set acl=LoadInteger(hcl,Fcl,kcl)
set ncl=ecl
set dcl=Wx[pcl]
loop
exitwhen ncl>dcl
set jcl=nq
set xcl=pcl
set vcl=ncl
set Qcl=nq
set Wcl=pcl
set Ecl=ncl+1
set mcl=LoadInteger(Qcl,Wcl,Ecl)
call SaveInteger(jcl,xcl,vcl,mcl)
set ncl=ncl+1
endloop
set Wx[pcl]=Wx[pcl]-1
set qW=qW-1
set Ycl=null
set hcl=null
set jcl=null
set Qcl=null
return acl
endfunction
function eAp takes integer uAp,integer rAp,string sAp returns boolean
local boolean tAp
local integer iAp
local integer SAp
local hashtable cAp
local integer oAp
local integer OAp
local integer lAp
local integer bAp
local string yAp
local integer pAp
set aW[qW]=sAp
set qW=qW+1
set tAp=false
set iAp=0
set SAp=Wx[uAp]-1
loop
exitwhen iAp>SAp
set pAp=rAp
set cAp=nq
set oAp=uAp
set OAp=iAp
if pAp==LoadInteger(cAp,oAp,OAp) then
set tAp=true
set lAp=uAp
set bAp=iAp
set yAp="when calling removeAt in HashList, line 87"
set aW[qW]=yAp
set qW=qW+1
if AF[lAp]==0 then
if lAp==0 then
call L8c("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 72")
else
call L8c("Called HashList.removeAt on invalid object.","when calling error in HashList, line 72")
endif
endif
call Zcl(lAp,bAp,"when calling removeAt in HashList, line 72")
set qW=qW-1
exitwhen true
endif
set iAp=iAp+1
endloop
set qW=qW-1
set cAp=null
return tAp
endfunction
function yle takes integer NOe,integer MOe,string wle returns nothing
local integer ule
local integer rle
local string sle
local boolean tle
local integer ile
local integer Sle
local string cle
local boolean ole
local integer Ole
local integer lle
local string ble
set aW[qW]=wle
set qW=qW+1
call Sgu(NOe,MOe,"when calling remove in HashMap, line 66")
set ule=NOe
set rle=MOe
set sle="when calling hasKey in HashMap, line 67"
set aW[qW]=sle
set qW=qW+1
if KF[ule]==0 then
if ule==0 then
call L8c("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call L8c("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set ile=ule
set Sle=rle
set cle="when calling hasKey in HashMap, line 87"
set aW[qW]=cle
set qW=qW+1
set ole=Xwt(Zx[ile],Sle,"when calling has in HashMap, line 88")
set qW=qW-1
set tle=ole
set qW=qW-1
if tle then
set Ole=Zx[NOe]
set lle=MOe
set ble="when calling remove in HashMap, line 68"
set aW[qW]=ble
set qW=qW+1
if AF[Ole]==0 then
if Ole==0 then
call L8c("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 82")
else
call L8c("Called HashList.remove on invalid object.","when calling error in HashList, line 82")
endif
endif
call eAp(Ole,lle,"when calling remove in HashList, line 82")
set qW=qW-1
endif
set qW=qW-1
endfunction
function plc takes integer llc,integer blc,string ylc returns nothing
set aW[qW]=ylc
set qW=qW+1
if KF[llc]==0 then
if llc==0 then
call L8c("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 27")
else
call L8c("Called HashMap.remove on invalid object.","when calling error in HashMap, line 27")
endif
endif
if KF[llc]<=2641 then
call Sgu(llc,blc,"when calling remove in HashMap, line 27")
else
call yle(llc,blc,"when calling remove in HashMap, line 27")
endif
set qW=qW-1
endfunction
function QDp takes integer pDp,unit eDp,string qDp returns nothing
local unit aDp
local integer nDp
local widget dDp
local unit fDp
local handle RDp
local unit TDp
local handle YDp
local unit GDp
local handle gDp
local group hDp
local unit FDp
local group kDp
local unit jDp
local integer xDp
local integer vDp
local integer mDp
set aW[qW]=qDp
set qW=qW+1
if eDp!=null then
set aDp=SQ[pDp]
set nDp=851983
set dDp=eDp
call IssueTargetOrderById(aDp,nDp,dDp)
set xDp=CG
set fDp=SQ[pDp]
set RDp=fDp
call plc(xDp,GetHandleId(RDp),"when calling remove in SpecialUnits, line 27")
set vDp=CG
set TDp=SQ[pDp]
set YDp=TDp
set mDp=GetHandleId(YDp)
set GDp=eDp
set gDp=GDp
call TKO(vDp,mDp,GetHandleId(gDp),"when calling put in SpecialUnits, line 28")
if IsUnitInGroup(SQ[pDp],uO)==false then
set hDp=uO
set FDp=SQ[pDp]
call GroupAddUnit(hDp,FDp)
endif
if IsUnitInGroup(eDp,uO)==false then
set kDp=uO
set jDp=eDp
call GroupAddUnit(kDp,jDp)
endif
endif
set qW=qW-1
set aDp=null
set dDp=null
set fDp=null
set RDp=null
set TDp=null
set YDp=null
set GDp=null
set gDp=null
set hDp=null
set FDp=null
set kDp=null
set jDp=null
endfunction
function Roc takes integer kcc,unit jcc,string xcc returns nothing
local real vcc
local real mcc
local real Qcc
local integer Wcc
local unit Ecc
local unit Zcc
local unitstate Ucc
local unit Icc
local unit Pcc
local unitstate Acc
local unit Dcc
local unit Hcc
local unitstate Jcc
local unit Kcc
local real Lcc
local unit Xcc
local unitstate Ccc
local real Vcc
local unit Bcc
local real Ncc
local unit Mcc
local unitstate woc
local real uoc
local unit roc
local unit soc
local integer toc
local unit ioc
local integer Soc
local string coc
local integer ooc
local real Ooc
local integer loc
local string boc
local unit yoc
local integer poc
local unit eoc
local integer qoc
local string aoc
local real noc
local player doc
local unit foc
set aW[qW]=xcc
set qW=qW+1
if jcc!=null then
set Ecc=xQ[kcc]
set Zcc=Ecc
set Ucc=UNIT_STATE_LIFE
set vcc=GetUnitState(Zcc,Ucc)*.1
set Icc=Rg
set Pcc=Icc
set Acc=UNIT_STATE_MANA
set mcc=GetUnitState(Pcc,Acc)
set Dcc=Rg
set Hcc=Dcc
set Jcc=UNIT_STATE_MAX_MANA
set Qcc=GetUnitState(Hcc,Jcc)
if mcc+vcc>=Qcc then
set Kcc=Rg
set Lcc=Qcc
set Xcc=Kcc
set Ccc=UNIT_STATE_MANA
set Vcc=Lcc
call SetUnitState(Xcc,Ccc,Vcc)
else
set Bcc=Rg
set Ncc=mcc+vcc
set Mcc=Bcc
set woc=UNIT_STATE_MANA
set uoc=Ncc
call SetUnitState(Mcc,woc,uoc)
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl",xQ[kcc],"chest"))
set roc=xQ[kcc]
call KillUnit(roc)
if Yg==false then
set soc=fg
set toc=$414D6267
call UnitRemoveAbility(soc,toc)
set ioc=fg
set Soc=$414D6268
call UnitRemoveAbility(ioc,Soc)
set coc="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 753"
set aW[qW]=coc
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ooc=fF
set RF[ooc]=791
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 753")
set ooc=0
endif
else
set dF=dF-1
set ooc=nF[dF]
set RF[ooc]=791
endif
set qW=qW-1
set Wcc=ooc
set Ooc=40.
set loc=Wcc
set boc="when calling doAfter in TheEpiphanyOfDeath, line 753"
set aW[qW]=boc
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Ooc,loc,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set yoc=fg
set poc=$414D6266
call UnitRemoveAbility(yoc,poc)
set eoc=fg
set qoc=$414D6266
call UnitAddAbility(eoc,qoc)
set aoc="Spell targert too far away from Talnos"
set noc=5.
set foc=fg
set doc=GetOwningPlayer(foc)
call DisplayTimedTextToPlayer(doc,0.,0.,noc,aoc)
endif
set qW=qW-1
set Ecc=null
set Zcc=null
set Ucc=null
set Icc=null
set Pcc=null
set Acc=null
set Dcc=null
set Hcc=null
set Jcc=null
set Kcc=null
set Xcc=null
set Ccc=null
set Bcc=null
set Mcc=null
set woc=null
set roc=null
set soc=null
set ioc=null
set yoc=null
set eoc=null
set doc=null
set foc=null
endfunction
function SBy takes integer vVb,unit mVb returns nothing
local unit QVb=mVb
local player MVb=GetOwningPlayer(QVb)
local unit WVb=Rg
local unit EVb
local unittype ZVb
local unit UVb
local unittype IVb
local unit PVb
local unittype AVb
local unit DVb
local unit HVb
local unit JVb
local group KVb
local unit LVb
local unit XVb
local integer CVb
local unit VVb
local integer BVb
local integer NVb
local boolean wBy
local boolean uBy
local boolean rBy
local boolean sBy
local boolean tBy
local boolean iBy
if MVb==GetOwningPlayer(WVb) then
set EVb=mVb
set ZVb=UNIT_TYPE_HERO
set wBy=IsUnitType(EVb,ZVb)==false
else
set wBy=false
endif
if wBy then
set UVb=mVb
set IVb=UNIT_TYPE_STRUCTURE
set uBy=IsUnitType(UVb,IVb)==false
else
set uBy=false
endif
if uBy then
set PVb=mVb
set AVb=UNIT_TYPE_MECHANICAL
set rBy=IsUnitType(PVb,AVb)==false
else
set rBy=false
endif
if rBy then
set DVb=mVb
if GetUnitTypeId(DVb)==$75303030 then
set sBy=true
else
set HVb=mVb
set sBy=GetUnitTypeId(HVb)==$7864756D
endif
set tBy=not sBy
else
set tBy=false
endif
if tBy then
set JVb=mVb
set iBy=UnitAlive(JVb)
else
set iBy=false
endif
if iBy then
set KVb=Tg
set LVb=mVb
call GroupAddUnit(KVb,LVb)
set XVb=mVb
set CVb=$417A6E7A
call UnitAddAbility(XVb,CVb)
set VVb=mVb
set BVb=$417A6E7A
set NVb=1
call SetUnitAbilityLevel(VVb,BVb,NVb)
endif
set QVb=null
set WVb=null
set EVb=null
set ZVb=null
set UVb=null
set IVb=null
set PVb=null
set AVb=null
set DVb=null
set HVb=null
set JVb=null
set KVb=null
set LVb=null
set XVb=null
set VVb=null
set MVb=null
endfunction
function SPo takes integer bIo,unit yIo,string pIo returns nothing
local location eIo
local unit qIo
local integer aIo
local unit nIo
local real dIo
local unit fIo
local unitstate RIo
local real TIo
local unit YIo
local unit GIo
local unitstate gIo
local integer hIo
local integer FIo
local player kIo
local location jIo
local real xIo
local unit vIo
local integer mIo
local unit QIo
local integer WIo
local integer EIo
local unit ZIo
local real UIo
local unit IIo
local integer PIo
local widget AIo
local unit DIo
local integer HIo
local unit JIo
local integer KIo
local string LIo
local integer XIo
local real CIo
local integer VIo
local string BIo
local unit NIo
local integer MIo
local unit wPo
local integer uPo
local string rPo
local real sPo
local player tPo
local unit iPo
set aW[qW]=pIo
set qW=qW+1
if yIo!=null then
set nIo=Rg
set YIo=Rg
set GIo=YIo
set gIo=UNIT_STATE_MANA
set dIo=GetUnitState(GIo,gIo)-100.
set fIo=nIo
set RIo=UNIT_STATE_MANA
set TIo=dIo
call SetUnitState(fIo,RIo,TIo)
set eIo=GetUnitLoc(Rg)
set hIo=1
set FIo=$75303030
set kIo=GetOwningPlayer(Rg)
set jIo=eIo
set xIo=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set hIo=hIo-1
exitwhen hIo<0
call CreateUnitAtLocSaveLast(kIo,FIo,jIo,xIo)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set qIo=bj_lastCreatedUnit
set vIo=qIo
set mIo=$415A736F
call UnitAddAbility(vIo,mIo)
set QIo=qIo
set WIo=$415A736F
set EIo=3
call SetUnitAbilityLevel(QIo,WIo,EIo)
set ZIo=qIo
set UIo=2.
call UnitApplyTimedLife(ZIo,$42544C46,UIo)
set IIo=qIo
set PIo=852668
set AIo=QQ[bIo]
call IssueTargetOrderById(IIo,PIo,AIo)
call RemoveLocation(eIo)
if Yg==false then
set DIo=fg
set HIo=$41305657
call UnitRemoveAbility(DIo,HIo)
set JIo=fg
set KIo=$414D626C
call UnitRemoveAbility(JIo,KIo)
set LIo="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 856"
set aW[qW]=LIo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set XIo=fF
set RF[XIo]=794
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 856")
set XIo=0
endif
else
set dF=dF-1
set XIo=nF[dF]
set RF[XIo]=794
endif
set qW=qW-1
set aIo=XIo
set CIo=105.
set VIo=aIo
set BIo="when calling doAfter in TheEpiphanyOfDeath, line 856"
set aW[qW]=BIo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),CIo,VIo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set NIo=fg
set MIo=$414D626A
call UnitRemoveAbility(NIo,MIo)
set wPo=fg
set uPo=$414D626A
call UnitAddAbility(wPo,uPo)
set rPo="Spell targert too far away from Talnos"
set sPo=5.
set iPo=fg
set tPo=GetOwningPlayer(iPo)
call DisplayTimedTextToPlayer(tPo,0.,0.,sPo,rPo)
endif
set qW=qW-1
set eIo=null
set qIo=null
set nIo=null
set fIo=null
set RIo=null
set YIo=null
set GIo=null
set gIo=null
set kIo=null
set jIo=null
set vIo=null
set QIo=null
set ZIo=null
set IIo=null
set AIo=null
set DIo=null
set JIo=null
set NIo=null
set wPo=null
set tPo=null
set iPo=null
endfunction
function a8e takes integer o7e,unit O7e returns nothing
local player l7e
local integer b7e
local integer y7e
local player p7e
local integer e7e
local real q7e
local real a7e
local real n7e
local real d7e
local player f7e
local integer R7e
local real T7e
local real Y7e
local real G7e
local real g7e
local player h7e
local integer F7e
local real k7e
local real j7e
local real x7e
local real v7e
local unit m7e
local real Q7e
local unit W7e
local unitstate E7e
local real Z7e
local unit U7e
local unit I7e
local unitstate P7e
local string A7e
local real D7e
local player H7e
local unit J7e
local player K7e
local integer L7e
local real X7e
local real C7e
local player V7e
local integer B7e
local real N7e
local real M7e
local player w8e
local integer u8e
local real r8e
local real s8e
local real t8e
local real i8e
local real S8e
local real c8e
local real o8e
local real O8e
local real l8e
local real b8e
local real y8e
local real p8e
local real e8e
local real q8e
if O7e!=null then
set l7e=wG
set b7e=1
set y7e=Cm[o7e]+1
loop
exitwhen b7e>y7e
set p7e=l7e
set e7e=$6E736767
set t8e=Vm[o7e]
set i8e=Bm[o7e]
set q7e=t8e
set a7e=i8e
set S8e=270.
set n7e=S8e
set K7e=p7e
set L7e=e7e
set X7e=q7e
set C7e=a7e
set c8e=n7e
set d7e=c8e
call CreateUnit(K7e,L7e,X7e,C7e,d7e*57.295779513)
set b7e=b7e+1
endloop
if Cm[o7e]>=2 then
set f7e=l7e
set R7e=$75617262
set o8e=Vm[o7e]
set O8e=Bm[o7e]
set T7e=o8e
set Y7e=O8e
set l8e=270.
set G7e=l8e
set V7e=f7e
set B7e=R7e
set N7e=T7e
set M7e=Y7e
set b8e=G7e
set g7e=b8e
call CreateUnit(V7e,B7e,N7e,M7e,g7e*57.295779513)
endif
if Cm[o7e]==3 then
set h7e=l7e
set F7e=$6E676972
set y8e=Vm[o7e]
set p8e=Bm[o7e]
set k7e=y8e
set j7e=p8e
set e8e=270.
set x7e=e8e
set w8e=h7e
set u8e=F7e
set r8e=k7e
set s8e=j7e
set q8e=x7e
set v7e=q8e
call CreateUnit(w8e,u8e,r8e,s8e,v7e*57.295779513)
endif
else
set m7e=MY
set U7e=MY
set I7e=U7e
set P7e=UNIT_STATE_MANA
set Q7e=GetUnitState(I7e,P7e)+40.
set W7e=m7e
set E7e=UNIT_STATE_MANA
set Z7e=Q7e
call SetUnitState(W7e,E7e,Z7e)
set A7e="You can only use this near your buildings!"
set D7e=5.
set J7e=MY
set H7e=GetOwningPlayer(J7e)
call DisplayTimedTextToPlayer(H7e,0.,0.,D7e,A7e)
endif
set l7e=null
set p7e=null
set f7e=null
set h7e=null
set m7e=null
set W7e=null
set E7e=null
set U7e=null
set I7e=null
set P7e=null
set H7e=null
set J7e=null
set K7e=null
set V7e=null
set w8e=null
endfunction
function abt takes integer ibt,unit Sbt,string cbt returns nothing
local integer obt
local group Obt
local unit lbt
local string bbt
local integer ybt
local real pbt
local integer ebt
local string qbt
set aW[qW]=cbt
set qW=qW+1
if Sbt!=null then
set Obt=sO
set lbt=Rk[ibt]
call GroupAddUnit(Obt,lbt)
set bbt="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_AgroBaza in AgroBaza, line 206"
set aW[qW]=bbt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ybt=fF
set RF[ybt]=790
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_AgroBaza.","when calling error in AgroBaza, line 206")
set ybt=0
endif
else
set dF=dF-1
set ybt=nF[dF]
set RF[ybt]=790
endif
set qW=qW-1
set obt=ybt
set Tk[obt]=Rk[ibt]
set pbt=4.
set ebt=obt
set qbt="when calling doAfter in AgroBaza, line 206"
set aW[qW]=qbt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),pbt,ebt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Obt=null
set lbt=null
endfunction
function epi takes integer opi,string Opi returns nothing
local integer lpi
local string bpi
local integer ypi
local string ppi
set aW[qW]=Opi
set qW=qW+1
if aF[opi]==0 then
if opi==0 then
call L8c("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call L8c("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set lpi=opi
set bpi="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set aW[qW]=bpi
set qW=qW+1
set ypi=lpi
set ppi="when calling dealloc_ForGroupCallback in ClosureForGroups, line 3"
set aW[qW]=ppi
set qW=qW+1
if aF[ypi]==0 then
call L8c("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set pF[eF]=ypi
set eF=eF+1
set aF[ypi]=0
endif
set qW=qW-1
set qW=qW-1
set qW=qW-1
endfunction
function g9c takes integer c9c,unit o9c returns nothing
local unit O9c
local unit l9c
local unit b9c
local unit y9c
local real p9c
local unit e9c
local integer q9c
local unit a9c
local integer n9c
local integer d9c
local unit f9c
local string R9c
local widget T9c
local player Y9c
local real G9c
if o9c!=null then
set Y9c=Player(tx[c9c]+4)
set l9c=o9c
set G9c=GetUnitX(l9c)
set b9c=o9c
set O9c=CreateUnit(Y9c,$75303030,G9c,GetUnitY(b9c),0.)
set y9c=O9c
set p9c=3.
call UnitApplyTimedLife(y9c,$42544C46,p9c)
set e9c=O9c
set q9c=$41323359
call UnitAddAbility(e9c,q9c)
set a9c=O9c
set n9c=$41323359
set d9c=ix[c9c]
call SetUnitAbilityLevel(a9c,n9c,d9c)
set f9c=O9c
set R9c="curse"
set T9c=o9c
call IssueTargetOrder(f9c,R9c,T9c)
endif
set O9c=null
set l9c=null
set b9c=null
set y9c=null
set e9c=null
set a9c=null
set f9c=null
set T9c=null
set Y9c=null
endfunction
function gNu takes integer ZBu,unit UBu,string IBu returns nothing
local integer PBu
local unit ABu
local unit DBu
local player HBu
local integer JBu
local integer KBu
local integer LBu
local widget XBu
local real CBu
local real VBu
local real BBu
local real NBu
local unit MBu
local unit wNu
local unit uNu
local unit rNu
local unit sNu
local integer tNu
local unit iNu
local integer SNu
local integer cNu
local string oNu
local integer ONu
local real lNu
local integer bNu
local string yNu
local player pNu
local real eNu
local player qNu
local integer aNu
local integer nNu
local integer dNu
local widget fNu
local real RNu
local real TNu
local real YNu
local real GNu
set aW[qW]=IBu
set qW=qW+1
set ABu=UBu
set pNu=GetOwningPlayer(ABu)
set DBu=cQ[ZBu]
if pNu==GetOwningPlayer(DBu) then
set MBu=cQ[ZBu]
set HBu=GetOwningPlayer(MBu)
set JBu=$414D327C
set KBu=1
set LBu=852066
set XBu=UBu
set wNu=UBu
set uNu=wNu
set eNu=GetUnitX(uNu)
set rNu=wNu
set RNu=eNu
set TNu=GetUnitY(rNu)
set CBu=RNu
set VBu=TNu
set qNu=HBu
set aNu=JBu
set nNu=KBu
set dNu=LBu
set fNu=XBu
set YNu=CBu
set GNu=VBu
set BBu=YNu
set NBu=GNu
call I9S(qNu,aNu,nNu,dNu,fNu,BBu,NBu,0.)
set sNu=UBu
set tNu=$414D327D
call UnitAddAbility(sNu,tNu)
set iNu=UBu
set SNu=$414D327D
set cNu=oQ[ZBu]
call SetUnitAbilityLevel(iNu,SNu,cNu)
set oNu="when calling alloc_CallbackSingle_doAfter_forUnitsInRange_registerPlayerUnitEvent_SpiritProtection in SpiritProtection, line 71"
set aW[qW]=oNu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ONu=fF
set RF[ONu]=797
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forUnitsInRange_registerPlayerUnitEvent_SpiritProtection.","when calling error in SpiritProtection, line 71")
set ONu=0
endif
else
set dF=dF-1
set ONu=nF[dF]
set RF[ONu]=797
endif
set qW=qW-1
set PBu=ONu
set OQ[PBu]=UBu
set lNu=17.
set bNu=PBu
set yNu="when calling doAfter in SpiritProtection, line 71"
set aW[qW]=yNu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),lNu,bNu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set ABu=null
set DBu=null
set HBu=null
set XBu=null
set MBu=null
set wNu=null
set uNu=null
set rNu=null
set sNu=null
set iNu=null
set pNu=null
set qNu=null
set fNu=null
endfunction
function lWl takes integer JQl,unit KQl,string LQl returns nothing
local integer XQl
local unit CQl
local string VQl
local integer BQl
local unit NQl
local integer MQl
local unit wWl
local integer uWl
local unit rWl
local integer sWl
local integer tWl
local integer iWl
local player SWl
local string cWl
local real oWl
local player OWl
set aW[qW]=LQl
set qW=qW+1
if KQl!=null then
set VQl="when calling alloc_CallbackPeriodic_doPeriodically_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos in ReignOfChaos, line 280"
set aW[qW]=VQl
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set BQl=GF
set gF[BQl]=667
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos.","when calling error in ReignOfChaos, line 280")
set BQl=0
endif
else
set YF=YF-1
set BQl=TF[YF]
set gF[BQl]=667
endif
set qW=qW-1
set XQl=BQl
set Mm[XQl]=Nm[JQl]
call GtO(1.,XQl,"when calling doPeriodically in ReignOfChaos, line 280")
else
set CQl=GetSpellAbilityUnit()
set NQl=CQl
set MQl=$414D3173
call UnitRemoveAbility(NQl,MQl)
set wWl=CQl
set uWl=$414D3173
call UnitAddAbility(wWl,uWl)
set rWl=CQl
set sWl=$414D3173
set iWl=$52303339
set SWl=tG
set tWl=GetPlayerTechCount(SWl,iWl,true)+1
call SetUnitAbilityLevel(rWl,sWl,tWl)
set cWl="You can only use this near your units!"
set oWl=5.
set OWl=tG
call DisplayTimedTextToPlayer(OWl,0.,0.,oWl,cWl)
call RemoveLocation(Nm[JQl])
endif
set qW=qW-1
set CQl=null
set NQl=null
set wWl=null
set rWl=null
set SWl=null
set OWl=null
endfunction
function m3r takes integer UMr,unit IMr,string PMr returns nothing
local location AMr
local unit DMr
local integer HMr
local unit JMr
local real KMr
local unit LMr
local unitstate XMr
local real CMr
local unit VMr
local unit BMr
local unitstate NMr
local integer MMr
local integer w3r
local player u3r
local location r3r
local real s3r
local unit t3r
local integer i3r
local unit S3r
local integer c3r
local integer o3r
local unit O3r
local real l3r
local unit b3r
local integer y3r
local widget p3r
local unit e3r
local integer q3r
local unit a3r
local integer n3r
local string d3r
local integer f3r
local real R3r
local integer T3r
local string Y3r
local unit G3r
local integer g3r
local unit h3r
local integer F3r
local string k3r
local real j3r
local player x3r
local unit v3r
set aW[qW]=PMr
set qW=qW+1
if IMr!=null then
set JMr=Rg
set VMr=Rg
set BMr=VMr
set NMr=UNIT_STATE_MANA
set KMr=GetUnitState(BMr,NMr)-50.
set LMr=JMr
set XMr=UNIT_STATE_MANA
set CMr=KMr
call SetUnitState(LMr,XMr,CMr)
set AMr=GetUnitLoc(Rg)
set MMr=1
set w3r=$75303030
set u3r=GetOwningPlayer(Rg)
set r3r=AMr
set s3r=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set MMr=MMr-1
exitwhen MMr<0
call CreateUnitAtLocSaveLast(u3r,w3r,r3r,s3r)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set DMr=bj_lastCreatedUnit
set t3r=DMr
set i3r=$415A666E
call UnitAddAbility(t3r,i3r)
set S3r=DMr
set c3r=$415A666E
set o3r=2
call SetUnitAbilityLevel(S3r,c3r,o3r)
set O3r=DMr
set l3r=2.
call UnitApplyTimedLife(O3r,$42544C46,l3r)
set b3r=DMr
set y3r=852226
set p3r=vQ[UMr]
call IssueTargetOrderById(b3r,y3r,p3r)
call RemoveLocation(AMr)
if Yg==false then
set e3r=fg
set q3r=$414D6267
call UnitRemoveAbility(e3r,q3r)
set a3r=fg
set n3r=$414D6266
call UnitRemoveAbility(a3r,n3r)
set d3r="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 798"
set aW[qW]=d3r
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set f3r=fF
set RF[f3r]=792
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 798")
set f3r=0
endif
else
set dF=dF-1
set f3r=nF[dF]
set RF[f3r]=792
endif
set qW=qW-1
set HMr=f3r
set R3r=40.
set T3r=HMr
set Y3r="when calling doAfter in TheEpiphanyOfDeath, line 798"
set aW[qW]=Y3r
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),R3r,T3r,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set G3r=fg
set g3r=$414D6268
call UnitRemoveAbility(G3r,g3r)
set h3r=fg
set F3r=$414D6268
call UnitAddAbility(h3r,F3r)
set k3r="Spell targert too far away from Talnos"
set j3r=5.
set v3r=fg
set x3r=GetOwningPlayer(v3r)
call DisplayTimedTextToPlayer(x3r,0.,0.,j3r,k3r)
endif
set qW=qW-1
set AMr=null
set DMr=null
set JMr=null
set LMr=null
set XMr=null
set VMr=null
set BMr=null
set NMr=null
set u3r=null
set r3r=null
set t3r=null
set S3r=null
set O3r=null
set b3r=null
set p3r=null
set e3r=null
set a3r=null
set G3r=null
set h3r=null
set x3r=null
set v3r=null
endfunction
function mgc takes integer fgc,unit Rgc returns nothing
local unit Ygc=Rgc
local unit Ggc=Ygc
local unitstate ggc=UNIT_STATE_LIFE
local real Tgc=GetUnitState(Ggc,ggc)
local unit hgc
local real Fgc
local unit kgc
local unitstate jgc
local real xgc
local unit vgc
if Tgc-25.>0. then
set hgc=Rgc
set Fgc=Tgc-25.
set kgc=hgc
set jgc=UNIT_STATE_LIFE
set xgc=Fgc
call SetUnitState(kgc,jgc,xgc)
else
set vgc=Rgc
call KillUnit(vgc)
endif
set Ygc=null
set Ggc=null
set ggc=null
set hgc=null
set kgc=null
set jgc=null
set vgc=null
endfunction
function tbw takes integer Llw,unit Xlw,string Clw returns nothing
local integer Vlw
local group Blw
local unit Nlw
local string Mlw
local integer wbw
local real ubw
local integer rbw
local string sbw
set aW[qW]=Clw
set qW=qW+1
if Xlw!=null then
set Blw=sO
set Nlw=nk[Llw]
call GroupAddUnit(Blw,Nlw)
set Mlw="when calling alloc_CallbackSingle_doAfter_forNearestUnit_AgroBaza in AgroBaza, line 171"
set aW[qW]=Mlw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set wbw=fF
set RF[wbw]=789
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_AgroBaza.","when calling error in AgroBaza, line 171")
set wbw=0
endif
else
set dF=dF-1
set wbw=nF[dF]
set RF[wbw]=789
endif
set qW=qW-1
set Vlw=wbw
set dk[Vlw]=nk[Llw]
set ubw=4.
set rbw=Vlw
set sbw="when calling doAfter in AgroBaza, line 171"
set aW[qW]=sbw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ubw,rbw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Blw=null
set Nlw=null
endfunction
function WXp takes integer vJp,integer mJp,unit QJp,string WJp,real EJp,real ZJp,real UJp,boolean IJp,integer PJp,string AJp,filterfunc DJp,integer HJp,string JJp returns nothing
local integer KJp
local real LJp
local real XJp
local real CJp
local filterfunc VJp
local unit BJp
local unit NJp
local unit MJp
local string wKp
local integer uKp
local unit rKp
local integer sKp
local widget tKp
local real iKp
local real SKp
local real cKp
local unit oKp
local group OKp
local integer lKp
local group bKp
local group yKp
local unit pKp
local string eKp
local group qKp
local integer aKp
local string nKp
local group dKp
local integer fKp
local trigger RKp
local integer TKp
local real YKp
local real GKp
local unit gKp
local real hKp
local unit FKp
local unitstate kKp
local real jKp
local unit xKp
local unit vKp
local unitstate mKp
local string QKp
local integer WKp
local real EKp
local real ZKp
local real UKp
local integer IKp
local string PKp
local trigger AKp
local real DKp
local trigger HKp
local code JKp
local unit KKp
local integer LKp
local unit XKp
local integer CKp
local string VKp
local integer BKp
local real NKp
local integer MKp
local string wLp
local unit uLp
local integer rLp
local unit sLp
local integer tLp
local string iLp
local real SLp
local player cLp
local unit oLp
local real OLp
local real lLp
local real bLp
local real yLp
local integer pLp
local unit eLp
local string qLp
local unit aLp
local handle nLp
local unit dLp
local unit fLp
local integer RLp
local unit TLp
local group YLp
local unit GLp
local unit gLp
local string hLp
local widget FLp
local integer kLp
local unit jLp
local group xLp
local unit vLp
local unit mLp
local string QLp
local widget WLp
local integer ELp
local unit ZLp
local unit ULp
local integer ILp
local widget PLp
local integer ALp
local unit DLp
local unit HLp
local integer JLp
local widget KLp
local unit LLp
local integer XLp
local widget CLp
local integer VLp
local unit BLp
local unit NLp
local integer MLp
local widget wXp
local integer uXp
local unit rXp
local unit sXp
local integer tXp
local widget iXp
local integer SXp
local unit cXp
local real oXp
local unit OXp
local group lXp
local real bXp
local integer yXp
local group pXp
local group eXp
local unit qXp
local real aXp
local real nXp
local real dXp
local real fXp
local real RXp
local real TXp
local unit YXp
local unit GXp
local unit gXp
local string hXp
local group FXp
local real kXp
local real jXp
local real xXp
local real vXp
local real mXp
local real QXp
if vJp==0 then
set aW[qW]=WJp
set qW=qW+1
if QJp!=null then
if Xk[mJp]==800. then
set BJp=Ck[mJp]
set NJp=BJp
set iKp=GetUnitX(NJp)
set MJp=BJp
set SKp=iKp
set cKp=GetUnitY(MJp)
set LJp=SKp
set XJp=cKp
set CJp=Xk[mJp]
set VJp=Filter(otw)
set wKp="when calling alloc_ForGroupCallback_forNearestUnit_forNearestUnit_AssassinsHelpers in AssassinsHelpers, line 21"
set aW[qW]=wKp
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set uKp=qF
set aF[uKp]=869
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_forNearestUnit_AssassinsHelpers.","when calling error in AssassinsHelpers, line 21")
set uKp=0
endif
else
set eF=eF-1
set uKp=pF[eF]
set aF[uKp]=869
endif
set qW=qW-1
set KJp=uKp
set Vk[KJp]=Ck[mJp]
set Bk[KJp]=QJp
call WXp(4,0,null,null,LJp,XJp,CJp,false,0,null,VJp,KJp,"when calling forNearestUnit in AssassinsHelpers, line 21")
else
set rKp=Ck[mJp]
set sKp=851983
set tKp=QJp
call IssueTargetOrderById(rKp,sKp,tKp)
endif
endif
set qW=qW-1
elseif vJp==1 then
set aW[qW]=AJp
set qW=qW+1
if IJp then
set lKp=PJp
set kb[jb]=lKp
set jb=jb+1
set vb=0
set xb=$7FFFFFFF
call GroupEnumUnitsInRange(bq,EJp,ZJp,UJp+197.,null)
set OKp=bq
loop
set bKp=OKp
exitwhen not (FirstOfGroup(bKp)!=null)
set yKp=OKp
set pKp=FirstOfGroup(yKp)
call GroupRemoveUnit(yKp,pKp)
set oKp=pKp
if IsUnitInRangeXY(oKp,EJp,ZJp,UJp) then
call WXp(3,PJp,oKp,"when calling callback in ClosureForGroups, line 110",0.,0.,0.,false,0,null,null,0,null)
endif
endloop
set eKp="when calling popCallback in ClosureForGroups, line 111"
set aW[qW]=eKp
set qW=qW+1
set qKp=Fb
call GroupClear(qKp)
set jb=jb-1
call epi(kb[jb],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set qW=qW-1
else
set aKp=PJp
set kb[jb]=aKp
set jb=jb+1
set vb=0
set xb=$7FFFFFFF
call GroupEnumUnitsInRange(Fb,EJp,ZJp,UJp,mb)
set nKp="when calling popCallback in ClosureForGroups, line 115"
set aW[qW]=nKp
set qW=qW+1
set dKp=Fb
call GroupClear(dKp)
set jb=jb-1
call epi(kb[jb],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set qW=qW-1
endif
set qW=qW-1
elseif vJp==2 then
set aW[qW]=WJp
set qW=qW+1
if QJp!=null then
set gKp=Rg
set xKp=Rg
set vKp=xKp
set mKp=UNIT_STATE_MANA
set hKp=GetUnitState(vKp,mKp)-75.
set FKp=gKp
set kKp=UNIT_STATE_MANA
set jKp=hKp
call SetUnitState(FKp,kKp,jKp)
set OLp=GetLocationX(WQ[mJp])
set lLp=GetLocationY(WQ[mJp])
set YKp=OLp
set GKp=lLp
set QKp="when calling alloc_ForGroupCallback_forUnitsInRange_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 916"
set aW[qW]=QKp
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set WKp=qF
set aF[WKp]=881
else
call L8c("Out of memory: Could not create ForGroupCallback_forUnitsInRange_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 916")
set WKp=0
endif
else
set eF=eF-1
set WKp=pF[eF]
set aF[WKp]=881
endif
set qW=qW-1
set fKp=WKp
set bLp=YKp
set yLp=GKp
set EKp=bLp
set ZKp=yLp
set UKp=600.
set IKp=fKp
set PKp="when calling forUnitsInRange in TheEpiphanyOfDeath, line 916"
set aW[qW]=PKp
set qW=qW+1
call WXp(1,0,null,null,EKp,ZKp,UKp,false,IKp,"when calling forUnitsInRange in ClosureForGroups, line 96",null,0,null)
set qW=qW-1
set RKp=CreateTrigger()
set AKp=RKp
set DKp=1.
call TriggerRegisterTimerEvent(AKp,DKp,true)
set HKp=RKp
set JKp=ntw
call TriggerAddAction(HKp,JKp)
if Yg==false then
set KKp=fg
set LKp=$414D6269
call UnitRemoveAbility(KKp,LKp)
set XKp=fg
set CKp=$414D626B
call UnitRemoveAbility(XKp,CKp)
set VKp="when calling alloc_CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 927"
set aW[qW]=VKp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set BKp=fF
set RF[BKp]=795
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 927")
set BKp=0
endif
else
set dF=dF-1
set BKp=nF[dF]
set RF[BKp]=795
endif
set qW=qW-1
set TKp=BKp
set NKp=80.
set MKp=TKp
set wLp="when calling doAfter in TheEpiphanyOfDeath, line 927"
set aW[qW]=wLp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),NKp,MKp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set uLp=fg
set rLp=$41313434
call UnitRemoveAbility(uLp,rLp)
set sLp=fg
set tLp=$41313434
call UnitAddAbility(sLp,tLp)
set iLp="Spell targert too far away from Talnos"
set SLp=5.
set oLp=fg
set cLp=GetOwningPlayer(oLp)
call DisplayTimedTextToPlayer(cLp,0.,0.,SLp,iLp)
endif
set qW=qW-1
elseif vJp==3 then
set aW[qW]=WJp
set qW=qW+1
if aF[mJp]==0 then
if mJp==0 then
call L8c("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call L8c("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if aF[mJp]<=870 then
if aF[mJp]<=864 then
if aF[mJp]<=861 then
if aF[mJp]<=860 then
if aF[mJp]<=859 then
set pLp=mJp
set eLp=QJp
set qLp="when calling callback_forEachFrom_LinkedList in ClosureForGroups, line 4"
set aW[qW]=qLp
set qW=qW+1
set SXp=Dv[pLp]
set aLp=eLp
set nLp=aLp
call x7s(SXp,GetHandleId(nLp),"when calling add in LinkedList, line 544")
set qW=qW-1
else
set dLp=QJp
set fLp=dLp
call RemoveUnit(fLp)
endif
else
call mgc(mJp,QJp)
endif
elseif aF[mJp]<=863 then
if aF[mJp]<=862 then
set RLp=mJp
set TLp=QJp
if TLp==null then
set YLp=wO
set GLp=qk[RLp]
call GroupRemoveUnit(YLp,GLp)
else
set gLp=qk[RLp]
set hLp="attack"
set FLp=TLp
call IssueTargetOrder(gLp,hLp,FLp)
endif
else
set kLp=mJp
set jLp=QJp
if jLp==null then
set xLp=uO
set vLp=ak[kLp]
call GroupRemoveUnit(xLp,vLp)
else
set mLp=ak[kLp]
set QLp="attack"
set WLp=jLp
call IssueTargetOrder(mLp,QLp,WLp)
endif
endif
else
call tbw(mJp,QJp,"when calling callback_forNearestUnit_AgroBaza in ClosureForGroups, line 4")
endif
elseif aF[mJp]<=867 then
if aF[mJp]<=866 then
if aF[mJp]<=865 then
set ELp=mJp
set ZLp=QJp
if ZLp!=null then
set ULp=fk[ELp]
set ILp=851983
set PLp=ZLp
call IssueTargetOrderById(ULp,ILp,PLp)
endif
else
call WXp(0,mJp,QJp,"when calling callback_forNearestUnit_AssassinsHelpers in ClosureForGroups, line 4",0.,0.,0.,false,0,null,null,0,null)
endif
else
call QDp(mJp,QJp,"when calling callback_forNearestUnit_SpecialUnits in ClosureForGroups, line 4")
endif
elseif aF[mJp]<=869 then
if aF[mJp]<=868 then
call g9c(mJp,QJp)
else
set ALp=mJp
set DLp=QJp
if DLp!=null then
set HLp=Vk[ALp]
set JLp=851983
set KLp=DLp
call IssueTargetOrderById(HLp,JLp,KLp)
else
set LLp=Vk[ALp]
set XLp=851983
set CLp=Bk[ALp]
call IssueTargetOrderById(LLp,XLp,CLp)
endif
endif
else
call abt(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_AgroBaza in ClosureForGroups, line 4")
endif
elseif aF[mJp]<=876 then
if aF[mJp]<=873 then
if aF[mJp]<=872 then
if aF[mJp]<=871 then
set VLp=mJp
set BLp=QJp
if BLp!=null then
set NLp=Yk[VLp]
set MLp=851983
set wXp=BLp
call IssueTargetOrderById(NLp,MLp,wXp)
endif
else
call a8e(mJp,QJp)
endif
else
call lWl(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos in ClosureForGroups, line 4")
endif
elseif aF[mJp]<=875 then
if aF[mJp]<=874 then
set uXp=mJp
set rXp=QJp
set sXp=bQ[uXp]
set tXp=851983
set iXp=rXp
call IssueTargetOrderById(sXp,tXp,iXp)
else
call Roc(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4")
endif
else
call m3r(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4")
endif
elseif aF[mJp]<=879 then
if aF[mJp]<=878 then
if aF[mJp]<=877 then
call AZo(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4")
else
call SPo(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4")
endif
else
call WXp(2,mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4",0.,0.,0.,false,0,null,null,0,null)
endif
elseif aF[mJp]<=881 then
if aF[mJp]<=880 then
call C_S(mJp,QJp,"when calling callback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureForGroups, line 4")
else
call SBy(mJp,QJp)
endif
else
call gNu(mJp,QJp,"when calling callback_forUnitsInRange_registerPlayerUnitEvent_SpiritProtection in ClosureForGroups, line 4")
endif
set qW=qW-1
elseif vJp==4 then
set aW[qW]=JJp
set qW=qW+1
set yXp=HJp
set kb[jb]=yXp
set jb=jb+1
set vb=0
set xb=$7FFFFFFF
call GroupEnumUnitsInRange(bq,EJp,ZJp,UJp,DJp)
set cXp=null
set oXp=340282366920938000000000000000000000000.
set lXp=bq
loop
set pXp=lXp
exitwhen not (FirstOfGroup(pXp)!=null)
set eXp=lXp
set qXp=FirstOfGroup(eXp)
call GroupRemoveUnit(eXp,qXp)
set OXp=qXp
set xXp=EJp
set vXp=ZJp
set aXp=xXp
set nXp=vXp
set YXp=OXp
set GXp=YXp
set kXp=GetUnitX(GXp)
set gXp=YXp
set mXp=kXp
set QXp=GetUnitY(gXp)
set dXp=mXp
set fXp=QXp
set RXp=dXp-aXp
set jXp=RXp*RXp
set TXp=fXp-nXp
set bXp=jXp+TXp*TXp
if bXp<oXp then
set cXp=OXp
set oXp=bXp
endif
endloop
call WXp(3,HJp,cXp,"when calling callback in ClosureForGroups, line 143",0.,0.,0.,false,0,null,null,0,null)
set hXp="when calling popCallback in ClosureForGroups, line 144"
set aW[qW]=hXp
set qW=qW+1
set FXp=Fb
call GroupClear(FXp)
set jb=jb-1
call epi(kb[jb],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set qW=qW-1
set qW=qW-1
endif
set VJp=null
set BJp=null
set NJp=null
set MJp=null
set rKp=null
set tKp=null
set oKp=null
set OKp=null
set bKp=null
set yKp=null
set pKp=null
set qKp=null
set dKp=null
set RKp=null
set gKp=null
set FKp=null
set kKp=null
set xKp=null
set vKp=null
set mKp=null
set AKp=null
set HKp=null
set KKp=null
set XKp=null
set uLp=null
set sLp=null
set cLp=null
set oLp=null
set eLp=null
set aLp=null
set nLp=null
set dLp=null
set fLp=null
set TLp=null
set YLp=null
set GLp=null
set gLp=null
set FLp=null
set jLp=null
set xLp=null
set vLp=null
set mLp=null
set WLp=null
set ZLp=null
set ULp=null
set PLp=null
set DLp=null
set HLp=null
set KLp=null
set LLp=null
set CLp=null
set BLp=null
set NLp=null
set wXp=null
set rXp=null
set sXp=null
set iXp=null
set cXp=null
set OXp=null
set lXp=null
set pXp=null
set eXp=null
set qXp=null
set YXp=null
set GXp=null
set gXp=null
set FXp=null
endfunction
function HNr takes nothing returns nothing
local string PNr
local unit ANr
local string DNr
set qW=0
set PNr="via function reference ClosureForGroups, line 14"
set aW[qW]=PNr
set qW=qW+1
set ANr=GetFilterUnit()
set DNr="when calling filterCallback in ClosureForGroups, line 14"
set aW[qW]=DNr
set qW=qW+1
if vb<xb then
call WXp(3,kb[jb-1],ANr,"when calling callback in ClosureForGroups, line 18",0.,0.,0.,false,0,null,null,0,null)
endif
set vb=vb+1
set qW=qW-1
set qW=qW-1
set ANr=null
endfunction
function HOS takes nothing returns boolean
return true
endfunction
function HOc takes nothing returns boolean
local trigger WOc
local rect EOc
local region ZOc
local trigger UOc
local boolexpr IOc
local trigger POc
local playerunitevent AOc
local code DOc
set kn=CreateTrigger()
set WOc=kn
set EOc=bj_mapInitialPlayableArea
set ZOc=CreateRegion()
call RegionAddRect(ZOc,EOc)
call TriggerRegisterEnterRegion(WOc,ZOc,null)
set UOc=kn
set IOc=Condition(q6)
call TriggerAddCondition(UOc,IOc)
set POc=kn
call DisableTrigger(POc)
set AOc=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DOc=a6
call emO(AOc,null,DOc,null)
set WOc=null
set EOc=null
set ZOc=null
set UOc=null
set IOc=null
set POc=null
set AOc=null
return true
endfunction
function HOt takes nothing returns boolean
local trigger IOt
local trigger POt
local playerunitevent AOt
local integer DOt
set An=CreateTrigger()
set IOt=An
call DisableTrigger(IOt)
set POt=An
set AOt=EVENT_PLAYER_UNIT_ATTACKED
set DOt=0
loop
call TriggerRegisterPlayerUnitEvent(POt,Player(DOt),AOt,null)
set DOt=DOt+1
exitwhen DOt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(An,Q6)
set IOt=null
set POt=null
set AOt=null
return true
endfunction
function RWu takes nothing returns nothing
local integer kQu
local timerdialog jQu
local string xQu
local real vQu
local string mQu
local real QQu
local player WQu
local real EQu
local real ZQu
local unit UQu
local unit IQu
local unit PQu
local player AQu
local player DQu
local real HQu
local real JQu
local unit KQu
local unit LQu
local unit XQu
local player CQu
local player VQu
local real BQu
local real NQu
local unit MQu
local unit wWu
local unit uWu
local player rWu
local player sWu
local real tWu
local real iWu
local unit SWu
local unit cWu
local unit oWu
local player OWu
local unit lWu
local integer bWu
local unit yWu
local integer pWu
local unit eWu
local integer qWu
local unit aWu
local integer nWu
local unit dWu
local integer fWu
if GetClickedButton()==Rr[1] then
call DialogClear(sr)
set jQu=tr
call DestroyTimerDialog(jQu)
set xQu="Mode: |cffffff00All Pick|r"
set vQu=15.
set mQu=xQu
set QQu=vQu
call DisplayTimedTextToPlayer(IY,0.,0.,QQu,mQu)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set WQu=Yu
set UQu=k[0]
set EQu=GetUnitX(UQu)
set IQu=k[0]
set ZQu=GetUnitY(IQu)
if GetLocalPlayer()==WQu then
call SetCameraPosition(EQu,ZQu)
endif
set PQu=k[0]
set AQu=Yu
if GetLocalPlayer()==AQu then
call ClearSelection()
call SelectUnit(PQu,true)
endif
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set DQu=Tu
set KQu=k[1]
set HQu=GetUnitX(KQu)
set LQu=k[1]
set JQu=GetUnitY(LQu)
if GetLocalPlayer()==DQu then
call SetCameraPosition(HQu,JQu)
endif
set XQu=k[1]
set CQu=Tu
if GetLocalPlayer()==CQu then
call ClearSelection()
call SelectUnit(XQu,true)
endif
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set VQu=Gu
set MQu=k[2]
set BQu=GetUnitX(MQu)
set wWu=k[2]
set NQu=GetUnitY(wWu)
if GetLocalPlayer()==VQu then
call SetCameraPosition(BQu,NQu)
endif
set uWu=k[2]
set rWu=Gu
if GetLocalPlayer()==rWu then
call ClearSelection()
call SelectUnit(uWu,true)
endif
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set sWu=gu
set SWu=k[3]
set tWu=GetUnitX(SWu)
set cWu=k[3]
set iWu=GetUnitY(cWu)
if GetLocalPlayer()==sWu then
call SetCameraPosition(tWu,iWu)
endif
set oWu=k[3]
set OWu=gu
if GetLocalPlayer()==OWu then
call ClearSelection()
call SelectUnit(oWu,true)
endif
set kQu=0
loop
exitwhen kQu>3
set lWu=k[kQu]
set bWu=$50494331
call UnitAddAbility(lWu,bWu)
set yWu=k[kQu]
set pWu=$50494332
call UnitAddAbility(yWu,pWu)
set eWu=k[kQu]
set qWu=$50494333
call UnitAddAbility(eWu,qWu)
set aWu=k[kQu]
set nWu=$50494334
call UnitAddAbility(aWu,nWu)
set dWu=k[kQu]
set fWu=$50494335
call UnitAddAbility(dWu,fWu)
set kQu=kQu+1
endloop
call TimerStart(ir,30.,false,jN)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
endif
set jQu=null
set WQu=null
set UQu=null
set IQu=null
set PQu=null
set AQu=null
set DQu=null
set KQu=null
set LQu=null
set XQu=null
set CQu=null
set VQu=null
set MQu=null
set wWu=null
set uWu=null
set rWu=null
set sWu=null
set SWu=null
set cWu=null
set oWu=null
set OWu=null
set lWu=null
set yWu=null
set eWu=null
set aWu=null
set dWu=null
endfunction
function HQl takes nothing returns nothing
local timerdialog DQl
call DialogDisplay(Player(0),sr,false)
call DialogDisplay(Player(1),sr,false)
call DialogDisplay(Player(2),sr,false)
call DialogDisplay(Player(3),sr,false)
set DQl=tr
call DestroyTimerDialog(DQl)
call RWu()
set DQl=null
endfunction
function HRr takes nothing returns boolean
local playerunitevent ARr=EVENT_PLAYER_UNIT_SPELL_CAST
local code DRr=Drw
call emO(ARr,null,DRr,null)
set ARr=null
return true
endfunction
function HSl takes nothing returns nothing
local integer nSl=GetSpellAbilityId()
local unit dSl
local integer fSl
local unit RSl
local unit TSl
local integer YSl
local unit GSl
local unit gSl
local unit hSl
local unit FSl
local real kSl
local unit jSl
local integer xSl
local unit vSl
local integer mSl
local integer QSl
local unit WSl
local string ESl
local real ZSl
local real USl
local player ISl
local real PSl
local real ASl
local real DSl
if nSl==$4130344F then
set dSl=GetSpellAbilityUnit()
set TSl=dSl
set YSl=$4130344F
set fSl=GetUnitAbilityLevel(TSl,YSl)
set GSl=dSl
set ISl=GetOwningPlayer(GSl)
set gSl=dSl
set PSl=GetUnitX(gSl)
set hSl=dSl
set RSl=CreateUnit(ISl,$75303030,PSl,GetUnitY(hSl),0.)
set FSl=RSl
set kSl=22.
call UnitApplyTimedLife(FSl,$42544C46,kSl)
set jSl=RSl
set xSl=$4130325A
call UnitAddAbility(jSl,xSl)
set vSl=RSl
set mSl=$4130325A
set QSl=fSl
call SetUnitAbilityLevel(vSl,mSl,QSl)
set WSl=RSl
set ESl="monsoon"
set ASl=GetSpellTargetX()
set DSl=GetSpellTargetY()
set ZSl=ASl
set USl=DSl
call IssuePointOrder(WSl,ESl,ZSl,USl)
endif
set dSl=null
set RSl=null
set TSl=null
set GSl=null
set gSl=null
set hSl=null
set FSl=null
set jSl=null
set vSl=null
set WSl=null
set ISl=null
endfunction
function HTS takes nothing returns boolean
return true
endfunction
function HUb takes nothing returns boolean
local trigger WUb
local trigger EUb
local playerunitevent ZUb
local trigger UUb
local playerunitevent IUb
local integer PUb
local trigger AUb
local code DUb
set Tn=CreateTrigger()
set WUb=Tn
call DisableTrigger(WUb)
set EUb=Tn
set ZUb=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UUb=EUb
set IUb=ZUb
set PUb=0
loop
call TriggerRegisterPlayerUnitEvent(UUb,Player(PUb),IUb,null)
set PUb=PUb+1
exitwhen PUb==bj_MAX_PLAYER_SLOTS
endloop
set AUb=Tn
set DUb=i6
call TriggerAddAction(AUb,DUb)
set WUb=null
set EUb=null
set ZUb=null
set UUb=null
set IUb=null
set AUb=null
return true
endfunction
function HUi takes nothing returns boolean
local trigger WUi
local trigger EUi
local playerunitevent ZUi
local trigger UUi
local playerunitevent IUi
local integer PUi
local trigger AUi
local code DUi
set oY=CreateTrigger()
set WUi=oY
call DisableTrigger(WUi)
set EUi=oY
set ZUi=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set UUi=EUi
set IUi=ZUi
set PUi=0
loop
call TriggerRegisterPlayerUnitEvent(UUi,Player(PUi),IUi,null)
set PUi=PUi+1
exitwhen PUi==bj_MAX_PLAYER_SLOTS
endloop
set AUi=oY
set DUi=hww_2484
call TriggerAddAction(AUi,DUi)
set WUi=null
set EUi=null
set ZUi=null
set UUi=null
set IUi=null
set AUi=null
return true
endfunction
function HWy takes nothing returns boolean
set Yp=OF
return true
endfunction
function HYu takes nothing returns boolean
return true
endfunction
function HeS takes nothing returns boolean
return true
endfunction
function Hgy takes nothing returns boolean
return true
endfunction
function Hht takes nothing returns boolean
local string Aht="0123456789"
local string Dht
call StringLength(Aht)
set Dht="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
call StringLength(Dht)
return true
endfunction
function Hji takes nothing returns boolean
local unit Uji=GetTriggerUnit()
local unit Pji=Uji
local integer Iji=GetUnitTypeId(Pji)
local unit Aji=Uji
local boolean Dji=GetOwningPlayer(Aji)==nu and Iji!=$75303031 and Iji!=$75303030 and Iji!=$75303032 and Iji!=$75303033 and Iji!=$75303034 and Iji!=$75303035 and Iji!=$75303036 and Iji!=$75303037 and Iji!=$75303131
set Uji=null
set Pji=null
set Aji=null
return Dji
endfunction
function HmO takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1389")
endfunction
function Hnr takes nothing returns boolean
return true
endfunction
function Hpu takes nothing returns boolean
local unit vpu=GetTriggerUnit()
local unit mpu=GetAttacker()
local unit Qpu=vpu
local unit Wpu
local integer Epu
local unit Zpu
local unittype Upu
local unit Ipu
local boolean Ppu
local boolean Apu
local boolean Dpu
if GetUnitTypeId(Qpu)==$4F677268 then
set Wpu=vpu
set Epu=$4130354D
set Ppu=GetUnitAbilityLevel(Wpu,Epu)>0
else
set Ppu=false
endif
if Ppu then
set Zpu=mpu
set Upu=UNIT_TYPE_HERO
set Apu=IsUnitType(Zpu,Upu)==true
else
set Apu=false
endif
if Apu then
set Ipu=vpu
set Dpu=IsUnitIllusion(Ipu)==false
else
set Dpu=false
endif
set vpu=null
set mpu=null
set Qpu=null
set Wpu=null
set Zpu=null
set Upu=null
set Ipu=null
return Dpu
endfunction
function HvO takes nothing returns boolean
return true
endfunction
function Hyu takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1625")
endfunction
function I0r takes nothing returns boolean
local unit m0r=GetAttacker()
local unit Q0r=m0r
local unit W0r
local unit E0r
local boolean Z0r
local boolean U0r
if GetUnitTypeId(Q0r)==$6F303349 then
set Z0r=true
else
set W0r=m0r
set Z0r=GetUnitTypeId(W0r)==$6F303350
endif
if Z0r then
set U0r=true
else
set E0r=m0r
set U0r=GetUnitTypeId(E0r)==$6F303353
endif
set m0r=null
set Q0r=null
set W0r=null
set E0r=null
return U0r
endfunction
function I0u takes nothing returns boolean
set wF=CreateSound("ZulHaha.wav",false,false,false,127,127,"DefaultEAXON")
return true
endfunction
function I1o takes nothing returns nothing
local texttag W1o
local string E1o
local real Z1o
local integer U1o
if pr>0 then
set pr=pr-1
set W1o=yr
set U1o=pr
set E1o=I2S(U1o)
set Z1o=13.
call SetTextTagText(W1o,E1o,Z1o*.0023)
endif
set W1o=null
endfunction
function I2e takes nothing returns boolean
local trigger x2e
local trigger v2e
local playerunitevent m2e
local trigger Q2e
local playerunitevent W2e
local integer E2e
local trigger Z2e
local code U2e
set le=CreateTrigger()
set x2e=le
call DisableTrigger(x2e)
set v2e=le
set m2e=EVENT_PLAYER_UNIT_DEATH
set Q2e=v2e
set W2e=m2e
set E2e=0
loop
call TriggerRegisterPlayerUnitEvent(Q2e,Player(E2e),W2e,null)
set E2e=E2e+1
exitwhen E2e==bj_MAX_PLAYER_SLOTS
endloop
set Z2e=le
set U2e=t2
call TriggerAddAction(Z2e,U2e)
set x2e=null
set v2e=null
set m2e=null
set Q2e=null
set W2e=null
set Z2e=null
return true
endfunction
function I6i takes nothing returns boolean
local integer Z6i=GetSpellAbilityId()
local integer U6i=0
loop
set U6i=U6i+1
exitwhen U6i>80
if Z6i==Ss[U6i] or Z6i==ts[U6i] then
return true
endif
endloop
return false
endfunction
function I7i takes nothing returns boolean
local trigger x7i
local rect v7i
local region m7i
local trigger Q7i
local boolexpr W7i
local trigger E7i
local playerunitevent Z7i
local code U7i
set hO=CreateTrigger()
set x7i=hO
set v7i=bj_mapInitialPlayableArea
set m7i=CreateRegion()
call RegionAddRect(m7i,v7i)
call TriggerRegisterEnterRegion(x7i,m7i,null)
set Q7i=hO
set W7i=Condition(lM)
call TriggerAddCondition(Q7i,W7i)
set E7i=hO
call DisableTrigger(E7i)
set Z7i=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set U7i=bM
call emO(Z7i,null,U7i,null)
set x7i=null
set v7i=null
set m7i=null
set Q7i=null
set W7i=null
set E7i=null
set Z7i=null
return true
endfunction
function IBt takes nothing returns boolean
set bq=CreateGroup()
set eq=null
return true
endfunction
function ICu takes nothing returns nothing
local unit mCu=GetTriggerUnit()
local unit QCu
local unittype WCu
local unit ECu
local integer ZCu
local boolean UCu
if mO==true then
set QCu=mCu
set WCu=UNIT_TYPE_STRUCTURE
set UCu=IsUnitType(QCu,WCu)==true
else
set UCu=false
endif
if UCu then
set ECu=mCu
set ZCu=$4130424C
call UnitAddAbility(ECu,ZCu)
endif
set mCu=null
set QCu=null
set WCu=null
set ECu=null
endfunction
function IDl takes nothing returns nothing
local unit GDl=GetEnteringUnit()
local unit kDl=GDl
local integer gDl=GetUnitTypeId(kDl)
local unit jDl=GDl
local player hDl=GetOwningPlayer(jDl)
local integer FDl
local unit xDl
local integer vDl
local unit mDl
local integer QDl
local unit WDl
local integer EDl
local unit ZDl
local integer UDl
if gDl==$7561626F or gDl==$6E66676C or gDl==$6E30335A or gDl==$6E7A6F6D or gDl==$6F303445 then
set FDl=GetPlayerTechCount(hDl,$52303136,true)
if FDl==1 then
set xDl=GDl
set vDl=$41303041
call UnitAddAbility(xDl,vDl)
elseif FDl==2 then
set mDl=GDl
set QDl=$41303048
call UnitAddAbility(mDl,QDl)
elseif FDl==3 then
set WDl=GDl
set EDl=$41303742
call UnitAddAbility(WDl,EDl)
else
set ZDl=GDl
set UDl=$506F5372
call UnitAddAbility(ZDl,UDl)
endif
endif
set GDl=null
set hDl=null
set kDl=null
set jDl=null
set xDl=null
set mDl=null
set WDl=null
set ZDl=null
endfunction
function IEw takes nothing returns nothing
local unit xEw=GetKillingUnit()
local unit mEw=xEw
local integer vEw=GetUnitTypeId(mEw)
local unit QEw
local unit WEw
local string EEw
local widget ZEw
local boolean UEw
if vEw==$6F677275 or vEw==$6F726169 or vEw==$6E736B6F or vEw==$6F737731 or vEw==$6E6D7368 or vEw==$6E716233 or vEw==$6F737733 then
set QEw=xEw
set UEw=GetPlayerTechCount(GetOwningPlayer(QEw),$52303046,true)>0
else
set UEw=false
endif
if UEw then
set WEw=xEw
set EEw="innerfire"
set ZEw=xEw
call IssueTargetOrder(WEw,EEw,ZEw)
endif
set xEw=null
set mEw=null
set QEw=null
set WEw=null
set ZEw=null
endfunction
function IGS takes nothing returns boolean
local trigger xGS
local rect vGS
local region mGS
local trigger QGS
local boolexpr WGS
local trigger EGS
local playerunitevent ZGS
local code UGS
set je=CreateTrigger()
set xGS=je
set vGS=bj_mapInitialPlayableArea
set mGS=CreateRegion()
call RegionAddRect(mGS,vGS)
call TriggerRegisterEnterRegion(xGS,mGS,null)
set QGS=je
set WGS=Condition(a2)
call TriggerAddCondition(QGS,WGS)
set EGS=je
call DisableTrigger(EGS)
set ZGS=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UGS=n2
call emO(ZGS,null,UGS,null)
set xGS=null
set vGS=null
set mGS=null
set QGS=null
set WGS=null
set EGS=null
set ZGS=null
return true
endfunction
function BSS takes string PSS returns nothing
local integer ASS
local unit DSS
local integer HSS
local integer JSS
local string KSS
local integer LSS
local real XSS
local integer CSS
local string VSS
set aW[qW]=PSS
set qW=qW+1
set ASS=GetSpellAbilityId()
set DSS=GetSpellAbilityUnit()
if ASS==$41304545 or ASS==$4145496C or ASS==$4130594C or ASS==$41456D65 then
set HSS=LoadInteger(qu,GetHandleId(DSS),$6D6F7665)
set KSS="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_FormAddHash in FormAddHash, line 16"
set aW[qW]=KSS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set LSS=fF
set RF[LSS]=814
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_FormAddHash.","when calling error in FormAddHash, line 16")
set LSS=0
endif
else
set dF=dF-1
set LSS=nF[dF]
set RF[LSS]=814
endif
set qW=qW-1
set JSS=LSS
set lx[JSS]=HSS
set XSS=.75
set CSS=JSS
set VSS="when calling doAfter in FormAddHash, line 16"
set aW[qW]=VSS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),XSS,CSS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set DSS=null
endfunction
function IHu takes nothing returns nothing
set qW=0
call BSS("via function reference FormAddHash, line 11")
endfunction
function IIu takes nothing returns boolean
local trigger hIu
local trigger FIu
local trigger kIu
local boolexpr jIu
local trigger xIu
local dialog vIu
local trigger mIu
local boolexpr QIu
local trigger WIu
local dialog EIu
local playerunitevent ZIu
local code UIu
set MR=CreateTimer()
set hIu=CreateTrigger()
set kIu=hIu
set jIu=Condition(n0w)
call TriggerAddCondition(kIu,jIu)
set xIu=hIu
set vIu=sr
call TriggerRegisterDialogEvent(xIu,vIu)
set FIu=CreateTrigger()
set mIu=FIu
set QIu=Condition(d0w)
call TriggerAddCondition(mIu,QIu)
set WIu=FIu
set EIu=sr
call TriggerRegisterDialogEvent(WIu,EIu)
set ZIu=EVENT_PLAYER_UNIT_SPELL_CAST
set UIu=f0w
call emO(ZIu,null,UIu,null)
set hIu=null
set FIu=null
set kIu=null
set jIu=null
set xIu=null
set vIu=null
set mIu=null
set QIu=null
set WIu=null
set EIu=null
set ZIu=null
return true
endfunction
function IIw takes nothing returns boolean
local playerunitevent ZIw=EVENT_PLAYER_UNIT_DEATH
local code UIw=suw
call emO(ZIw,null,UIw,null)
set ZIw=null
return true
endfunction
function INS takes nothing returns nothing
local integer WNS=GetResearched()
local trigger ENS
local trigger ZNS
local trigger UNS
if WNS==$524D3175 then
set ENS=pl
call EnableTrigger(ENS)
endif
if WNS==$524D3177 then
set ZNS=pe
call EnableTrigger(ZNS)
endif
if WNS==$524D3131 then
set UNS=Fd
call EnableTrigger(UNS)
endif
set ENS=null
set ZNS=null
set UNS=null
endfunction
function INr takes nothing returns boolean
local trigger vNr
local playerunitevent mNr
local trigger QNr
local playerunitevent WNr
local integer ENr
local trigger ZNr
local code UNr
set dR=CreateTrigger()
set vNr=dR
set mNr=EVENT_PLAYER_UNIT_ATTACKED
set QNr=vNr
set WNr=mNr
set ENr=0
loop
call TriggerRegisterPlayerUnitEvent(QNr,Player(ENr),WNr,null)
set ENr=ENr+1
exitwhen ENr==bj_MAX_PLAYER_SLOTS
endloop
set ZNr=dR
set UNr=m9
call TriggerAddAction(ZNr,UNr)
set vNr=null
set mNr=null
set QNr=null
set WNr=null
set ZNr=null
return true
endfunction
function IQO takes nothing returns nothing
local unit EQO=GetDyingUnit()
local unit ZQO=EQO
local unittype UQO=UNIT_TYPE_HERO
if IsUnitType(ZQO,UQO) and IsUnitInGroup(EQO,Rb) then
call GroupRemoveUnit(Rb,EQO)
endif
set EQO=null
set ZQO=null
set UQO=null
endfunction
function IQt takes nothing returns boolean
local playerunitevent ZQt=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code UQt=Iww
call emO(ZQt,null,UQt,null)
set ZQt=null
return true
endfunction
function IRr takes nothing returns boolean
local unit QRr=GetFilterUnit()
local unit WRr=QRr
local unit ERr
local unittype ZRr
local boolean URr
if UnitAlive(WRr) then
set ERr=QRr
set ZRr=UNIT_TYPE_STRUCTURE
set URr=IsUnitType(ERr,ZRr)==true
else
set URr=false
endif
set QRr=null
set WRr=null
set ERr=null
set ZRr=null
return URr
endfunction
function IVp takes nothing returns boolean
local trigger QVp
local playerunitevent WVp
local trigger EVp
local playerunitevent ZVp
local integer UVp
set ja=CreateTrigger()
set QVp=ja
set WVp=EVENT_PLAYER_UNIT_ATTACKED
set EVp=QVp
set ZVp=WVp
set UVp=0
loop
call TriggerRegisterPlayerUnitEvent(EVp,Player(UVp),ZVp,null)
set UVp=UVp+1
exitwhen UVp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ja,o5)
set QVp=null
set WVp=null
set EVp=null
set ZVp=null
return true
endfunction
function IWi takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1533")
endfunction
function I_r takes nothing returns nothing
local unit r_r=GetAttacker()
local unit s_r=GetTriggerUnit()
local unit t_r=s_r
local unit i_r
local integer S_r
local unit c_r
local string o_r
local unit O_r
local unit l_r
local integer b_r
local unit y_r
local string p_r
local widget e_r
local unit q_r
local unit a_r
local integer n_r
local unit d_r
local string f_r
local real R_r
local real T_r
local unit Y_r
local unit G_r
local unit g_r
local unit h_r
local unit F_r
local integer k_r
local unit j_r
local string x_r
local boolean v_r
local boolean m_r
local boolean Q_r
local real W_r
local boolean E_r
local real Z_r
local real U_r
if GetUnitTypeId(t_r)==$45303037 then
set i_r=s_r
set S_r=$4130594C
set v_r=GetUnitAbilityLevel(i_r,S_r)>0
else
set v_r=false
endif
if v_r then
set c_r=s_r
set o_r="metamorphosis"
call IssueImmediateOrder(c_r,o_r)
endif
set O_r=r_r
if GetUnitTypeId(O_r)==$45303037 then
set l_r=r_r
set b_r=$41304D32
set m_r=GetUnitAbilityLevel(l_r,b_r)>0
else
set m_r=false
endif
if m_r then
set y_r=r_r
set p_r="bloodlust"
set e_r=r_r
call IssueTargetOrder(y_r,p_r,e_r)
endif
set q_r=r_r
if GetUnitTypeId(q_r)==$45303037 then
set a_r=r_r
set n_r=$41305949
set Q_r=GetUnitAbilityLevel(a_r,n_r)>0
else
set Q_r=false
endif
if Q_r then
set d_r=r_r
set f_r="carrionswarm"
set Y_r=s_r
set G_r=Y_r
set W_r=GetUnitX(G_r)
set g_r=Y_r
set Z_r=W_r
set U_r=GetUnitY(g_r)
set R_r=Z_r
set T_r=U_r
call IssuePointOrder(d_r,f_r,R_r,T_r)
endif
set h_r=r_r
if GetUnitTypeId(h_r)==$45303038 then
set F_r=r_r
set k_r=$4130594C
set E_r=GetUnitAbilityLevel(F_r,k_r)>0
else
set E_r=false
endif
if E_r then
set j_r=r_r
set x_r="thunderclap"
call IssueImmediateOrder(j_r,x_r)
endif
set r_r=null
set s_r=null
set t_r=null
set i_r=null
set c_r=null
set O_r=null
set l_r=null
set y_r=null
set e_r=null
set q_r=null
set a_r=null
set d_r=null
set Y_r=null
set G_r=null
set g_r=null
set h_r=null
set F_r=null
set j_r=null
endfunction
function Iae takes nothing returns nothing
local unit Iqe=GetTriggerUnit()
local unit Aqe=Iqe
local player Pqe=GetOwningPlayer(Aqe)
local unit Dqe
local string Hqe
local real Jqe
local real Kqe
local unit Lqe
local unittype Xqe
local unit Cqe
local string Vqe
local real Bqe
local real Nqe
local unit Mqe
local unittype wae
local unit uae
local string rae
local real sae
local real tae
local unit iae
local unittype Sae
local unit cae
local string oae
local real Oae
local real lae
local unit bae
local unittype yae
local unit pae
local string eae
local real qae
local real aae
local unit nae
local unittype dae
local unit fae
local string Rae
local real Tae
local real Yae
local unit Gae
local unittype gae
local real hae
local real Fae
local real kae
local real jae
local real xae
local real vae
local real mae
local real Qae
local real Wae
local real Eae
local real Zae
local real Uae
if Pqe==du then
set Dqe=Iqe
set Hqe="attack"
set hae=Qw[56]
set Fae=Ww[56]
set Jqe=hae
set Kqe=Fae
call IssuePointOrder(Dqe,Hqe,Jqe,Kqe)
set Lqe=Iqe
set Xqe=UNIT_TYPE_HERO
if IsUnitType(Lqe,Xqe) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,56)
endif
endif
if Pqe==nu then
if Ew[3]==true then
set Cqe=Iqe
set Vqe="attack"
set kae=Qw[34]
set jae=Ww[34]
set Bqe=kae
set Nqe=jae
call IssuePointOrder(Cqe,Vqe,Bqe,Nqe)
set Mqe=Iqe
set wae=UNIT_TYPE_HERO
if IsUnitType(Mqe,wae) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,34)
endif
else
set uae=Iqe
set rae="attack"
set xae=Qw[56]
set vae=Ww[56]
set sae=xae
set tae=vae
call IssuePointOrder(uae,rae,sae,tae)
set iae=Iqe
set Sae=UNIT_TYPE_HERO
if IsUnitType(iae,Sae) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,56)
endif
endif
endif
if Pqe==fu then
if Ew[0]==true then
set cae=Iqe
set oae="attack"
set mae=Qw[56]
set Qae=Ww[56]
set Oae=mae
set lae=Qae
call IssuePointOrder(cae,oae,Oae,lae)
set bae=Iqe
set yae=UNIT_TYPE_HERO
if IsUnitType(bae,yae) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,56)
endif
else
set pae=Iqe
set eae="attack"
set Wae=Qw[34]
set Eae=Ww[34]
set qae=Wae
set aae=Eae
call IssuePointOrder(pae,eae,qae,aae)
set nae=Iqe
set dae=UNIT_TYPE_HERO
if IsUnitType(nae,dae) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,34)
endif
endif
endif
if Pqe==Ru then
set fae=Iqe
set Rae="attack"
set Zae=Qw[34]
set Uae=Ww[34]
set Tae=Zae
set Yae=Uae
call IssuePointOrder(fae,Rae,Tae,Yae)
set Gae=Iqe
set gae=UNIT_TYPE_HERO
if IsUnitType(Gae,gae) then
call SaveInteger(qu,GetHandleId(Iqe),$6D6F7665,34)
endif
endif
set Iqe=null
set Pqe=null
set Aqe=null
set Dqe=null
set Lqe=null
set Xqe=null
set Cqe=null
set Mqe=null
set wae=null
set uae=null
set iae=null
set Sae=null
set cae=null
set bae=null
set yae=null
set pae=null
set nae=null
set dae=null
set fae=null
set Gae=null
set gae=null
endfunction
function Ibe takes nothing returns nothing
local unit jbe=GetAttacker()
local unit xbe
local unit vbe
local unitstate mbe
local unit Qbe
local unit Wbe
local unitstate Ebe
local real Zbe
local boolean Ube
if GetUnitTypeId(jbe)==$6E30314C and GetUnitAbilityLevel(jbe,$41313133)==1 then
set xbe=jbe
set vbe=xbe
set mbe=UNIT_STATE_LIFE
set Zbe=GetUnitState(vbe,mbe)
set Qbe=jbe
set Wbe=Qbe
set Ebe=UNIT_STATE_MAX_LIFE
set Ube=Zbe<=GetUnitState(Wbe,Ebe)*.3
else
set Ube=false
endif
if Ube then
call IssueTargetOrderById(jbe,852066,jbe)
endif
set jbe=null
set xbe=null
set vbe=null
set mbe=null
set Qbe=null
set Wbe=null
set Ebe=null
endfunction
function Ibt takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1581")
endfunction
function Ide takes nothing returns nothing
local integer mde=GetResearched()
local unit Qde
local player Wde
local integer Ede
local unit Zde
local player Ude
if mde==$5230334D then
set Qde=GetTriggerUnit()
set Zde=Qde
set Wde=GetOwningPlayer(Zde)
set Ede=GetPlayerTechCount(Wde,$5230334D,true)
set Ude=Wde
call SetPlayerTechResearched(Player(GetPlayerId(Ude)+4),$52303456,Ede)
endif
set Qde=null
set Wde=null
set Zde=null
set Ude=null
endfunction
function Idl takes nothing returns nothing
local unit Edl=GetSpellAbilityUnit()
local unit Zdl=Edl
local integer Udl=$494D3032
if RTS(Zdl,Udl)!=null then
if GetRandomInt(1,100)<=40 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl",Edl,"chest"))
call UnitResetCooldown(Edl)
endif
endif
set Edl=null
set Zdl=null
endfunction
function Idt takes nothing returns nothing
local integer ldt
local string bdt
local real ydt
local player pdt
local unit edt
local integer qdt
local player adt
local unit ndt
local unit ddt
local integer fdt
local unit Rdt
local integer Tdt
local unit Ydt
local integer Gdt
local integer gdt
local unit hdt
local integer Fdt
local unit kdt
local integer jdt
local unit xdt
local integer vdt
local unit mdt
local integer Qdt
local integer Wdt
local trigger Edt
local timer Zdt
local timer Udt
if iy!=null then
set bdt="|cffff0000Relic saturate it thrist, at least for now...|r"
set ydt=10.
set edt=iy
set pdt=GetOwningPlayer(edt)
call DisplayTimedTextToPlayer(pdt,0.,0.,ydt,bdt)
set qdt=$52313339
set ndt=iy
set adt=GetOwningPlayer(ndt)
set ldt=GetPlayerTechCount(adt,qdt,true)
set ddt=iy
set fdt=$41325257
call UnitRemoveAbility(ddt,fdt)
set Rdt=iy
set Tdt=$41315257
call UnitAddAbility(Rdt,Tdt)
set Ydt=iy
set Gdt=$41315257
set gdt=1+ldt
call SetUnitAbilityLevel(Ydt,Gdt,gdt)
set hdt=iy
set Fdt=$41324B57
call UnitRemoveAbility(hdt,Fdt)
set kdt=iy
set jdt=$41314B57
call UnitAddAbility(kdt,jdt)
set xdt=iy
set vdt=$41314936
call UnitAddAbility(xdt,vdt)
set mdt=iy
set Qdt=$41314936
set Wdt=1+ldt
call SetUnitAbilityLevel(mdt,Qdt,Wdt)
set Edt=oy
call EnableTrigger(Edt)
set Zdt=cy
call PauseTimer(Zdt)
set Udt=cy
call DestroyTimer(Udt)
endif
set pdt=null
set edt=null
set adt=null
set ndt=null
set ddt=null
set Rdt=null
set Ydt=null
set hdt=null
set kdt=null
set xdt=null
set mdt=null
set Edt=null
set Zdt=null
set Udt=null
endfunction
function Ihl takes nothing returns boolean
local trigger hhl
local trigger Fhl
local playerunitevent khl
local integer jhl
local trigger xhl
local trigger vhl
local playerunitevent mhl
local integer Qhl
local trigger Whl
local trigger Ehl
local playerunitevent Zhl
local integer Uhl
set Ua=CreateTrigger()
set Ia=CreateTrigger()
set Pa=CreateTrigger()
set Aa=CreateTrigger()
set hhl=Ua
call DisableTrigger(hhl)
set Fhl=Ua
set khl=EVENT_PLAYER_UNIT_ATTACKED
set jhl=0
loop
call TriggerRegisterPlayerUnitEvent(Fhl,Player(jhl),khl,null)
set jhl=jhl+1
exitwhen jhl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ua,f5)
set xhl=Ia
call DisableTrigger(xhl)
set vhl=Ia
set mhl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Qhl=0
loop
call TriggerRegisterPlayerUnitEvent(vhl,Player(Qhl),mhl,null)
set Qhl=Qhl+1
exitwhen Qhl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ia,R5)
set Whl=Pa
call DisableTrigger(Whl)
set Ehl=Pa
set Zhl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Uhl=0
loop
call TriggerRegisterPlayerUnitEvent(Ehl,Player(Uhl),Zhl,null)
set Uhl=Uhl+1
exitwhen Uhl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Pa,T5)
set hhl=null
set Fhl=null
set khl=null
set xhl=null
set vhl=null
set mhl=null
set Whl=null
set Ehl=null
set Zhl=null
return true
endfunction
function InS takes nothing returns nothing
local unit ZnS=GetDyingUnit()
local unit UnS=ZnS
if GetUnitTypeId(UnS)==$5530304A then
set Zy=false
endif
set ZnS=null
set UnS=null
endfunction
function Iol takes nothing returns boolean
local playerunitevent Zol=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code Uol=M7
call emO(Zol,null,Uol,null)
set Zol=null
return true
endfunction
function ItO takes nothing returns boolean
local unit htO=GetFilterUnit()
local unit FtO=htO
local unit jtO=GetEnumUnit()
local player ktO=GetOwningPlayer(jtO)
local unit xtO
local unittype vtO
local unit mtO
local unittype QtO
local unit WtO
local boolean EtO
local boolean ZtO
local boolean UtO
if IsUnitEnemy(FtO,ktO) then
set xtO=htO
set vtO=UNIT_TYPE_HERO
if IsUnitType(xtO,vtO)==true then
set mtO=htO
set QtO=UNIT_TYPE_ANCIENT
set EtO=IsUnitType(mtO,QtO)==true
else
set EtO=false
endif
set ZtO=EtO
else
set ZtO=false
endif
if ZtO then
set WtO=htO
set UtO=UnitAlive(WtO)
else
set UtO=false
endif
set htO=null
set FtO=null
set ktO=null
set jtO=null
set xtO=null
set vtO=null
set mtO=null
set QtO=null
set WtO=null
return UtO
endfunction
function IuS takes nothing returns boolean
return true
endfunction
function IxO takes nothing returns nothing
local unit HjO=GetDyingUnit()
local unit VjO=HjO
local integer JjO=GetPlayerTechCount(GetOwningPlayer(VjO),$52303449,true)
local real KjO
local real LjO
local texttag XjO
local unit CjO
local unit BjO
local unittype NjO
local unit MjO
local unit wxO
local unit uxO
local texttag rxO
local real sxO
local real txO
local real ixO
local texttag SxO
local integer cxO
local integer oxO
local integer OxO
local integer lxO
local texttag bxO
local real yxO
local texttag pxO
local real exO
local texttag qxO
local boolean axO
local texttag nxO
local boolean dxO
local texttag fxO
local string RxO
local real TxO
local texttag YxO
local real GxO
local real gxO
local unit hxO
local unit FxO
local integer kxO
local unit jxO
local integer xxO
local integer vxO
local unit mxO
local string QxO
local unit WxO
local real ExO
local boolean ZxO
local boolean UxO
if JjO>0 then
set BjO=HjO
set NjO=UNIT_TYPE_HERO
set ZxO=IsUnitType(BjO,NjO)
else
set ZxO=false
endif
if ZxO then
set MjO=HjO
set UxO=IsUnitIllusion(MjO)==false
else
set UxO=false
endif
if UxO then
set wxO=HjO
set KjO=GetUnitX(wxO)
set uxO=HjO
set LjO=GetUnitY(uxO)
call DestroyEffect(AddSpecialEffect("Star of Hope.mdl",KjO,LjO))
set XjO=CreateTextTag()
set rxO=XjO
set sxO=KjO
set txO=LjO
set ixO=50.
call SetTextTagPos(rxO,sxO,txO,ixO)
set SxO=XjO
set cxO=255
set oxO=0
set OxO=0
set lxO=255
call SetTextTagColor(SxO,cxO,oxO,OxO,lxO)
set bxO=XjO
set yxO=6.
call SetTextTagLifespan(bxO,yxO)
set pxO=XjO
set exO=4.
call SetTextTagFadepoint(pxO,exO)
set qxO=XjO
set axO=true
call SetTextTagVisibility(qxO,axO)
set nxO=XjO
set dxO=false
call SetTextTagPermanent(nxO,dxO)
set fxO=XjO
set RxO="Blood Sacrifice"
set TxO=10.
call SetTextTagText(fxO,RxO,TxO*.0023)
set YxO=XjO
set GxO=0.
set gxO=.03
call SetTextTagVelocity(YxO,GxO,gxO)
set hxO=HjO
set CjO=CreateUnit(GetOwningPlayer(hxO),$75303030,KjO,LjO,0.)
set FxO=CjO
set kxO=$41726F61
call UnitAddAbility(FxO,kxO)
set jxO=CjO
set xxO=$41726F61
set vxO=JjO
call SetUnitAbilityLevel(jxO,xxO,vxO)
set mxO=CjO
set QxO="roar"
call IssueImmediateOrder(mxO,QxO)
set WxO=CjO
set ExO=3.
call UnitApplyTimedLife(WxO,$42544C46,ExO)
endif
set HjO=null
set XjO=null
set CjO=null
set VjO=null
set BjO=null
set NjO=null
set MjO=null
set wxO=null
set uxO=null
set rxO=null
set SxO=null
set bxO=null
set pxO=null
set qxO=null
set nxO=null
set fxO=null
set YxO=null
set hxO=null
set FxO=null
set jxO=null
set mxO=null
set WxO=null
endfunction
function Ixt takes nothing returns boolean
return true
endfunction
function Iyu takes nothing returns boolean
local trigger xyu
local trigger vyu
local playerunitevent myu
local trigger Qyu
local playerunitevent Wyu
local integer Eyu
local trigger Zyu
local code Uyu
set Gn=CreateTrigger()
set xyu=Gn
call DisableTrigger(xyu)
set vyu=Gn
set myu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Qyu=vyu
set Wyu=myu
set Eyu=0
loop
call TriggerRegisterPlayerUnitEvent(Qyu,Player(Eyu),Wyu,null)
set Eyu=Eyu+1
exitwhen Eyu==bj_MAX_PLAYER_SLOTS
endloop
set Zyu=Gn
set Uyu=O6
call TriggerAddAction(Zyu,Uyu)
set xyu=null
set vyu=null
set myu=null
set Qyu=null
set Wyu=null
set Zyu=null
return true
endfunction
function J3b takes nothing returns boolean
return true
endfunction
function dDu takes unit cDu returns nothing
local unit bDu=cDu
local player oDu=GetOwningPlayer(bDu)
local unit yDu=cDu
local integer ODu=GetUnitTypeId(yDu)
local integer lDu
local unit pDu
local real eDu
local real qDu
local real aDu
local player nDu
if ODu==$68303242 then
set pDu=cDu
set eDu=70.
set qDu=70.
set aDu=70.
call SetUnitScale(pDu,eDu*.01,qDu*.01,aDu*.01)
set nDu=oDu
set lDu=GetPlayerId(nDu)
set K[lDu]=$6E303237
endif
set oDu=null
set bDu=null
set yDu=null
set pDu=null
set nDu=null
endfunction
function J5c takes nothing returns nothing
call dDu(GetTriggerUnit())
endfunction
function J5i takes nothing returns nothing
local unit j5i=GetEnteringUnit()
local unit Q5i=j5i
local integer x5i=GetUnitTypeId(Q5i)
local unit W5i=j5i
local player v5i=GetOwningPlayer(W5i)
local integer m5i
local unit E5i
local integer Z5i
local unit U5i
local integer I5i
local unit P5i
local integer A5i
local unit D5i
local integer H5i
if x5i==$686D7072 or x5i==$6E303244 and GetPlayerTechCount(v5i,$5230314E,true)>0 then
set m5i=GetPlayerTechCount(v5i,$5230314E,true)
if m5i==1 then
set E5i=j5i
set Z5i=$41303832
call UnitAddAbility(E5i,Z5i)
elseif m5i==2 then
set U5i=j5i
set I5i=$41303247
call UnitAddAbility(U5i,I5i)
elseif m5i==3 then
set P5i=j5i
set A5i=$41303833
call UnitAddAbility(P5i,A5i)
else
set D5i=j5i
set H5i=$41304558
call UnitAddAbility(D5i,H5i)
endif
endif
set j5i=null
set v5i=null
set Q5i=null
set W5i=null
set E5i=null
set U5i=null
set P5i=null
set D5i=null
endfunction
function J6r takes nothing returns nothing
local unit G6r=GetTriggerUnit()
local unit h6r=G6r
local player g6r=GetOwningPlayer(h6r)
local unit F6r
local string k6r
local real j6r
local real x6r
local unit v6r
local unittype m6r
local unit Q6r
local string W6r
local real E6r
local real Z6r
local unit U6r
local unittype I6r
local real P6r
local real A6r
local real D6r
local real H6r
if g6r==nu then
set F6r=G6r
set k6r="attack"
set P6r=Qw[29]
set A6r=Ww[29]
set j6r=P6r
set x6r=A6r
call IssuePointOrder(F6r,k6r,j6r,x6r)
set v6r=G6r
set m6r=UNIT_TYPE_HERO
if IsUnitType(v6r,m6r) then
call SaveInteger(qu,GetHandleId(G6r),$6D6F7665,29)
endif
else
set Q6r=G6r
set W6r="attack"
set D6r=Qw[54]
set H6r=Ww[54]
set E6r=D6r
set Z6r=H6r
call IssuePointOrder(Q6r,W6r,E6r,Z6r)
set U6r=G6r
set I6r=UNIT_TYPE_HERO
if IsUnitType(U6r,I6r) then
call SaveInteger(qu,GetHandleId(G6r),$6D6F7665,54)
endif
endif
set G6r=null
set g6r=null
set h6r=null
set F6r=null
set v6r=null
set m6r=null
set Q6r=null
set U6r=null
set I6r=null
endfunction
function J7S takes nothing returns boolean
local trigger R7S
local trigger T7S
local trigger Y7S
local rect G7S
local region g7S
local trigger h7S
local boolexpr F7S
local trigger k7S
local trigger j7S
local rect x7S
local region v7S
local trigger m7S
local boolexpr Q7S
local trigger W7S
local playerunitevent E7S
local code Z7S
local playerunitevent U7S
local code I7S
local playerunitevent P7S
local code A7S
local playerunitevent D7S
local code H7S
set FR=CreateTimer()
set kR=CreateTrigger()
set jR=CreateTrigger()
set xR=CreateTrigger()
set vR=CreateTrigger()
set mR=null
set QR=null
set R7S=kR
call DisableTrigger(R7S)
call TriggerRegisterTimerEvent(kR,1.,true)
call TriggerAddAction(kR,W9)
set T7S=jR
call DisableTrigger(T7S)
call TriggerRegisterTimerEvent(jR,180.,true)
call TriggerAddAction(jR,E9)
set Y7S=xR
set G7S=bj_mapInitialPlayableArea
set g7S=CreateRegion()
call RegionAddRect(g7S,G7S)
call TriggerRegisterEnterRegion(Y7S,g7S,null)
set h7S=xR
set F7S=Condition(Z9)
call TriggerAddCondition(h7S,F7S)
set k7S=xR
call DisableTrigger(k7S)
set j7S=vR
set x7S=bj_mapInitialPlayableArea
set v7S=CreateRegion()
call RegionAddRect(v7S,x7S)
call TriggerRegisterEnterRegion(j7S,v7S,null)
set m7S=vR
set Q7S=Condition(U9)
call TriggerAddCondition(m7S,Q7S)
set W7S=vR
call DisableTrigger(W7S)
set E7S=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Z7S=I9
call emO(E7S,null,Z7S,null)
set U7S=EVENT_PLAYER_UNIT_SPELL_CAST
set I7S=P9
call emO(U7S,null,I7S,null)
set P7S=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set A7S=A9
call emO(P7S,null,A7S,null)
set D7S=EVENT_PLAYER_UNIT_DEATH
set H7S=D9
call emO(D7S,null,H7S,null)
set R7S=null
set T7S=null
set Y7S=null
set G7S=null
set g7S=null
set h7S=null
set F7S=null
set k7S=null
set j7S=null
set x7S=null
set v7S=null
set m7S=null
set Q7S=null
set W7S=null
set E7S=null
set U7S=null
set P7S=null
set D7S=null
return true
endfunction
function J9S takes nothing returns nothing
local filterfunc P9S
local unit A9S
local boolexpr D9S
local unit H9S
if FirstOfGroup(Rb)!=null then
set P9S=Filter(P3)
call GroupEnumUnitsInRect(Rb,fs,P9S)
set fb=GroupPickRandomUnit(Rb)
set H9S=pb
set A9S=fb
call SetUnitOwner(H9S,GetOwningPlayer(A9S),true)
set D9S=P9S
call DestroyBoolExpr(D9S)
endif
set P9S=null
set A9S=null
set D9S=null
set H9S=null
endfunction
function JBt takes nothing returns boolean
local trigger PBt
local trigger ABt
local playerunitevent DBt
local integer HBt
set bn=CreateTrigger()
set PBt=bn
call DisableTrigger(PBt)
set ABt=bn
set DBt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HBt=0
loop
call TriggerRegisterPlayerUnitEvent(ABt,Player(HBt),DBt,null)
set HBt=HBt+1
exitwhen HBt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(bn,C5)
set PBt=null
set ABt=null
set DBt=null
return true
endfunction
function JCO takes nothing returns boolean
local trigger UCO
local rect ICO
local region PCO
local trigger ACO
local boolexpr DCO
local trigger HCO
set Wh=CreateTrigger()
set UCO=Wh
set ICO=bj_mapInitialPlayableArea
set PCO=CreateRegion()
call RegionAddRect(PCO,ICO)
call TriggerRegisterEnterRegion(UCO,PCO,null)
set ACO=Wh
set DCO=Condition(ksw)
call TriggerAddCondition(ACO,DCO)
set HCO=Wh
call DisableTrigger(HCO)
set UCO=null
set ICO=null
set PCO=null
set ACO=null
set DCO=null
set HCO=null
return true
endfunction
function JDu takes nothing returns boolean
return true
endfunction
function xxu takes string qxu returns nothing
local unit axu
local integer nxu
local unit dxu
local unit fxu
local integer Rxu
local unit Txu
local integer Yxu
local string Gxu
local integer gxu
local real hxu
local integer Fxu
local string kxu
local integer jxu
set aW[qW]=qxu
set qW=qW+1
set axu=GetAttacker()
set dxu=axu
if GetUnitTypeId(dxu)==$48303247 then
set jxu=GetRandomInt(1,100)
set fxu=axu
set Rxu=$414D3034
if jxu<=10*GetUnitAbilityLevel(fxu,Rxu) then
set Txu=axu
set Yxu=$414D3033
call UnitAddAbility(Txu,Yxu)
set Gxu="when calling alloc_CallbackSingle_doAfter_Terokk in Terokk, line 203"
set aW[qW]=Gxu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set gxu=fF
set RF[gxu]=753
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Terokk.","when calling error in Terokk, line 203")
set gxu=0
endif
else
set dF=dF-1
set gxu=nF[dF]
set RF[gxu]=753
endif
set qW=qW-1
set nxu=gxu
set hQ[nxu]=axu
set hxu=2.
set Fxu=nxu
set kxu="when calling doAfter in Terokk, line 203"
set aW[qW]=kxu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),hxu,Fxu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set axu=null
set dxu=null
set fxu=null
set Txu=null
endfunction
function JIy takes nothing returns nothing
set qW=0
call xxu("via function reference Terokk, line 229")
endfunction
function j5y takes unit j2y,string x2y returns nothing
local integer v2y
local item m2y
local item Q2y
local item W2y
local item E2y
local unit Z2y
local integer U2y
local unit I2y
local integer P2y
local unit A2y
local string D2y
local unit H2y
local unit J2y
local handle K2y
local unit L2y
local integer X2y
local unit C2y
local string V2y
local unit B2y
local unit N2y
local handle M2y
local unit w5y
local integer u5y
local unit r5y
local string s5y
local unit t5y
local unit i5y
local handle S5y
local unit c5y
local integer o5y
local unit O5y
local string l5y
local unit b5y
local unit y5y
local handle p5y
local string e5y
local real q5y
local player a5y
local unit n5y
local player d5y
local unit f5y
local integer R5y
local integer T5y
local integer Y5y
local integer G5y
local integer g5y
local integer h5y
local integer F5y
local integer k5y
set aW[qW]=x2y
set qW=qW+1
if jWu(j2y)<6 then
set v2y=GetRandomInt(1,100)
set Z2y=j2y
set U2y=$494D3038
if RTS(Z2y,U2y)!=null==false then
if v2y<=74 then
set Qn=ss[GetRandomInt(1,4)]
endif
if v2y>=75 then
set Qn=ss[GetRandomInt(5,7)]
endif
if Wn!=Qn then
set Wn=Qn
set I2y=j2y
set P2y=Qn
set m2y=UnitAddItemById(I2y,P2y)
if m2y!=null then
set A2y=j2y
set D2y="when calling saveHero in ItemMerchantAdd, line 26"
set aW[qW]=D2y
set qW=qW+1
set R5y=mG
set H2y=A2y
set T5y=GetUnitTypeId(H2y)
set J2y=A2y
set K2y=J2y
call TKO(R5y,T5y,GetHandleId(K2y),"when calling put in SaveHero, line 9")
set qW=qW-1
endif
else
if v2y<=74 then
set Qn=ss[GetRandomInt(1,4)]
endif
if v2y>=75 then
set Qn=ss[GetRandomInt(5,7)]
endif
set Wn=Qn
set L2y=j2y
set X2y=Qn
set Q2y=UnitAddItemById(L2y,X2y)
if Q2y!=null then
set C2y=j2y
set V2y="when calling saveHero in ItemMerchantAdd, line 35"
set aW[qW]=V2y
set qW=qW+1
set Y5y=mG
set B2y=C2y
set G5y=GetUnitTypeId(B2y)
set N2y=C2y
set M2y=N2y
call TKO(Y5y,G5y,GetHandleId(M2y),"when calling put in SaveHero, line 9")
set qW=qW-1
endif
endif
else
set Qn=ss[GetRandomInt(1,4)]
if Wn!=Qn then
set Wn=Qn
set w5y=j2y
set u5y=Qn
set W2y=UnitAddItemById(w5y,u5y)
if W2y!=null then
set r5y=j2y
set s5y="when calling saveHero in ItemMerchantAdd, line 42"
set aW[qW]=s5y
set qW=qW+1
set g5y=mG
set t5y=r5y
set h5y=GetUnitTypeId(t5y)
set i5y=r5y
set S5y=i5y
call TKO(g5y,h5y,GetHandleId(S5y),"when calling put in SaveHero, line 9")
set qW=qW-1
endif
else
set Qn=ss[GetRandomInt(1,4)]
set Wn=Qn
set c5y=j2y
set o5y=Qn
set E2y=UnitAddItemById(c5y,o5y)
if E2y!=null then
set O5y=j2y
set l5y="when calling saveHero in ItemMerchantAdd, line 48"
set aW[qW]=l5y
set qW=qW+1
set F5y=mG
set b5y=O5y
set k5y=GetUnitTypeId(b5y)
set y5y=O5y
set p5y=y5y
call TKO(F5y,k5y,GetHandleId(p5y),"when calling put in SaveHero, line 9")
set qW=qW-1
endif
endif
endif
else
set n5y=j2y
set e5y=GetUnitName(n5y)+" full inventory. Item not visible"
set q5y=10.
set f5y=j2y
set d5y=GetOwningPlayer(f5y)
set a5y=Player(GetPlayerId(d5y)-4)
call DisplayTimedTextToPlayer(a5y,0.,0.,q5y,e5y)
endif
set qW=qW-1
set m2y=null
set Q2y=null
set W2y=null
set E2y=null
set Z2y=null
set I2y=null
set A2y=null
set H2y=null
set J2y=null
set K2y=null
set L2y=null
set C2y=null
set B2y=null
set N2y=null
set M2y=null
set w5y=null
set r5y=null
set t5y=null
set i5y=null
set S5y=null
set c5y=null
set O5y=null
set b5y=null
set y5y=null
set p5y=null
set a5y=null
set n5y=null
set d5y=null
set f5y=null
endfunction
function Q8s takes string X7s returns nothing
local unit C7s
local unit V7s
local player B7s
local real N7s
local real M7s
local group w8s
local group u8s
local unit r8s
local unit s8s
local unit t8s
local unittype i8s
local unit S8s
local unit c8s
local unit o8s
local unit O8s
local unit l8s
local unittype b8s
local rect y8s
local boolexpr p8s
local group e8s
local real q8s
local real a8s
local real n8s
local group d8s
local group f8s
local group R8s
local unit T8s
local unit Y8s
local group G8s
local group g8s
local group h8s
local group F8s
local real k8s
local real j8s
local real x8s
local real v8s
local real m8s
set aW[qW]=X7s
set qW=qW+1
set C7s=GetDyingUnit()
set t8s=C7s
set i8s=UNIT_TYPE_HERO
if IsUnitType(t8s,i8s) then
set V7s=GetKillingUnit()
set S8s=V7s
set B7s=GetOwningPlayer(S8s)
if GetPlayerTechCount(B7s,$52303259,true)==1 then
set c8s=C7s
set o8s=c8s
set k8s=GetUnitX(o8s)
set O8s=c8s
set j8s=k8s
set x8s=GetUnitY(O8s)
set N7s=j8s
set M7s=x8s
set l8s=V7s
set b8s=UNIT_TYPE_HERO
if IsUnitType(l8s,b8s)==false then
set v8s=N7s
set m8s=M7s
set q8s=v8s
set a8s=m8s
set n8s=900.
set y8s=Rect(q8s-n8s,a8s-n8s,q8s+n8s,a8s+n8s)
set p8s=Filter(f6)
set e8s=CreateGroup()
call GroupEnumUnitsInRect(e8s,y8s,p8s)
call DestroyBoolExpr(p8s)
set w8s=e8s
set d8s=w8s
set qq=CreateGroup()
call ForGroup(d8s,X3)
set u8s=qq
loop
set f8s=u8s
exitwhen not (FirstOfGroup(f8s)!=null)
set R8s=u8s
set T8s=FirstOfGroup(R8s)
call GroupRemoveUnit(R8s,T8s)
set r8s=T8s
if r8s!=null then
set Y8s=r8s
if GetPlayerTechCount(GetOwningPlayer(Y8s),$52303259,true)>0 then
set s8s=Dgy(w8s)
call j5y(s8s,"when calling addRandomItem in ItemMerchantAdd, line 93")
endif
endif
endloop
set G8s=u8s
set g8s=G8s
call GroupClear(g8s)
set h8s=G8s
call DestroyGroup(h8s)
set F8s=w8s
call DestroyGroup(F8s)
elseif V7s!=null then
call j5y(V7s,"when calling addRandomItem in ItemMerchantAdd, line 96")
endif
endif
endif
set qW=qW-1
set C7s=null
set V7s=null
set B7s=null
set w8s=null
set u8s=null
set r8s=null
set s8s=null
set t8s=null
set i8s=null
set S8s=null
set c8s=null
set o8s=null
set O8s=null
set l8s=null
set b8s=null
set y8s=null
set p8s=null
set e8s=null
set d8s=null
set f8s=null
set R8s=null
set T8s=null
set Y8s=null
set G8s=null
set g8s=null
set h8s=null
set F8s=null
endfunction
function JOc takes nothing returns nothing
set qW=0
call Q8s("via function reference ItemMerchantAdd, line 103")
endfunction
function JOw takes nothing returns nothing
local unit UOw=GetTriggerUnit()
local unit IOw=UOw
local unit POw
local unittype AOw
local unit DOw
local integer HOw
if UO[GetPlayerId(GetOwningPlayer(IOw))] then
set POw=UOw
set AOw=UNIT_TYPE_STRUCTURE
if IsUnitType(POw,AOw) then
set DOw=UOw
set HOw=$4130424C
call UnitAddAbility(DOw,HOw)
endif
endif
set UOw=null
set IOw=null
set POw=null
set AOw=null
set DOw=null
endfunction
function JSl takes nothing returns boolean
return true
endfunction
function JSw takes nothing returns boolean
local trigger ESw
local trigger ZSw
local playerunitevent USw
local trigger ISw
local playerunitevent PSw
local integer ASw
local trigger DSw
local code HSw
set LG=CreateTrigger()
set ESw=LG
call DisableTrigger(ESw)
set ZSw=LG
set USw=EVENT_PLAYER_UNIT_DEATH
set ISw=ZSw
set PSw=USw
set ASw=0
loop
call TriggerRegisterPlayerUnitEvent(ISw,Player(ASw),PSw,null)
set ASw=ASw+1
exitwhen ASw==bj_MAX_PLAYER_SLOTS
endloop
set DSw=LG
set HSw=quw
call TriggerAddAction(DSw,HSw)
set ESw=null
set ZSw=null
set USw=null
set ISw=null
set PSw=null
set DSw=null
return true
endfunction
function JTS takes nothing returns boolean
return true
endfunction
function JUi takes nothing returns boolean
return true
endfunction
function JVr takes nothing returns boolean
local unit PVr=GetFilterUnit()
local unit AVr=PVr
local unit DVr
local boolean HVr
if GetUnitTypeId(AVr)==$45303037 then
set HVr=true
else
set DVr=PVr
set HVr=GetUnitTypeId(DVr)==$45303038
endif
set PVr=null
set AVr=null
set DVr=null
return HVr
endfunction
function u2b takes string X1b returns nothing
local integer C1b
local integer V1b
local string B1b
local real N1b
local string M1b
local real w4b
local trigger u4b
local trigger r4b
local trigger s4b
local string t4b
local real i4b
local string S4b
local real c4b
local timerdialog o4b
local trigger O4b
local trigger l4b
local trigger b4b
local trigger y4b
local integer p4b
local string e4b
local texttag q4b
local integer a4b
local integer n4b
local integer d4b
local integer f4b
local texttag R4b
local integer T4b
local integer Y4b
local integer G4b
local integer g4b
local string h4b
local integer F4b
local unit k4b
local integer j4b
local unit x4b
local integer v4b
local unit m4b
local integer Q4b
local unit W4b
local integer E4b
local unit Z4b
local integer U4b
local unit I4b
local player P4b
local playerstate A4b
local integer D4b
local unit H4b
local player J4b
local timerdialog K4b
local integer L4b
local integer X4b
local integer C4b
local integer V4b
local integer B4b
local integer N4b
local integer M4b
local integer w2b
set aW[qW]=X1b
set qW=qW+1
if GetClickedButton()==Rr[4] then
set xu=true
set hu=true
set B1b="Mode: |cffF88017Tournament Mode|r / |cffa020f0Double Bonus|r |cff00ff00ON|r"
set N1b=15.
set M1b=B1b
set w4b=N1b
call DisplayTimedTextToPlayer(IY,0.,0.,w4b,M1b)
if ju==true then
set u4b=Vo
call DisableTrigger(u4b)
set r4b=Bo
call DisableTrigger(r4b)
set s4b=No
call DisableTrigger(s4b)
set t4b="Mode: |cffFFFF00Hard Mode|r |cff00ff00ON|r"
set i4b=15.
set S4b=t4b
set c4b=i4b
call DisplayTimedTextToPlayer(IY,0.,0.,c4b,S4b)
endif
call DialogClear(sr)
set o4b=tr
call DestroyTimerDialog(o4b)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set vu=true
set O4b=Bg
call EnableTrigger(O4b)
set l4b=un
call DisableTrigger(l4b)
set b4b=Na
call DisableTrigger(b4b)
set y4b=rn
call DisableTrigger(y4b)
set p4b=hY
set e4b="when calling shuffle in TournamentMode, line 125"
set aW[qW]=e4b
set qW=qW+1
if ok[p4b]==0 then
if p4b==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(p4b,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TY=L5u(-150.,540.,128.,"AutoBan:",10.)
set q4b=TY
set L4b=255
set X4b=106
set C4b=6
set V4b=255
set a4b=L4b
set n4b=X4b
set d4b=C4b
set f4b=V4b
call SetTextTagColor(q4b,a4b,n4b,d4b,f4b)
set YY=L5u(150.,540.,128.,"PlayerBan:",10.)
set R4b=YY
set B4b=255
set N4b=6
set M4b=6
set w2b=255
set T4b=B4b
set Y4b=N4b
set G4b=M4b
set g4b=w2b
call SetTextTagColor(R4b,T4b,Y4b,G4b,g4b)
set h4b="when calling alloc_CallbackPeriodic_doPeriodically_TournamentMode in TournamentMode, line 130"
set aW[qW]=h4b
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set F4b=GF
set gF[F4b]=665
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_TournamentMode.","when calling error in TournamentMode, line 130")
set F4b=0
endif
else
set YF=YF-1
set F4b=TF[YF]
set gF[F4b]=665
endif
set qW=qW-1
set C1b=F4b
call GtO(.25,C1b,"when calling doPeriodically in TournamentMode, line 130")
set V1b=0
loop
exitwhen V1b>3
set k4b=k[V1b]
set j4b=$50494331
call UnitAddAbility(k4b,j4b)
set x4b=k[V1b]
set v4b=$50494332
call UnitAddAbility(x4b,v4b)
set m4b=k[V1b]
set Q4b=$50494333
call UnitAddAbility(m4b,Q4b)
set W4b=k[V1b]
set E4b=$50494334
call UnitAddAbility(W4b,E4b)
set Z4b=k[V1b]
set U4b=$50494335
call UnitAddAbility(Z4b,U4b)
set I4b=k[V1b]
call ShowUnit(I4b,false)
set P4b=Player(V1b)
set A4b=PLAYER_STATE_RESOURCE_FOOD_USED
set D4b=0
call SetPlayerState(P4b,A4b,D4b)
set H4b=k[1]
call ShowUnit(H4b,true)
call TimerStart(ir,30.,false,mrw)
set tr=CreateTimerDialog(ir)
set K4b=tr
set J4b=Tu
call TimerDialogSetTitle(K4b,GetPlayerName(J4b)+" ban race")
call TimerDialogDisplay(tr,true)
set V1b=V1b+1
endloop
endif
set qW=qW-1
set u4b=null
set r4b=null
set s4b=null
set o4b=null
set O4b=null
set l4b=null
set b4b=null
set y4b=null
set q4b=null
set R4b=null
set k4b=null
set x4b=null
set m4b=null
set W4b=null
set Z4b=null
set I4b=null
set P4b=null
set A4b=null
set H4b=null
set J4b=null
set K4b=null
endfunction
function JYu takes nothing returns nothing
set qW=0
call u2b("via function reference TournamentMode, line 1005")
endfunction
function Jcw takes nothing returns boolean
return true
endfunction
function bwS takes integer rwS returns nothing
local unit swS
local unit twS
local unit iwS
local integer SwS
local unit cwS
local real owS
local unit OwS
local integer lwS
if rwS==$414D3232 then
set twS=GetSpellAbilityUnit()
set swS=CreateUnit(GetOwningPlayer(twS),$75303030,GetSpellTargetX(),GetSpellTargetY(),0.)
set iwS=swS
set SwS=$414D3233
call UnitAddAbility(iwS,SwS)
set cwS=swS
set owS=3.
call UnitApplyTimedLife(cwS,$42544C46,owS)
set OwS=swS
set lwS=852127
call IssueImmediateOrderById(OwS,lwS)
endif
set swS=null
set twS=null
set iwS=null
set cwS=null
set OwS=null
endfunction
function Jht takes nothing returns nothing
call bwS(GetSpellAbilityId())
endfunction
function JmO takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function Jow takes nothing returns boolean
local playerunitevent Dow=EVENT_PLAYER_UNIT_SPELL_FINISH
local code How=Arw
call emO(Dow,null,How,null)
set Dow=null
return true
endfunction
function Jqi takes nothing returns nothing
local unit Zqi=GetDyingUnit()
local unittype Uqi=UNIT_TYPE_STRUCTURE
local player Eqi
local unit Iqi
local unit Pqi
local player Aqi
local unit Dqi
local boolean Hqi
if IsUnitType(Zqi,Uqi) then
set Iqi=GetTriggerUnit()
set Hqi=UO[GetPlayerId(GetOwningPlayer(Iqi))]
else
set Hqi=false
endif
if Hqi then
set Pqi=GetDyingUnit()
set Eqi=GetOwningPlayer(Pqi)
set Aqi=Eqi
if Tw[GetPlayerId(Aqi)]==0 then
set Dqi=ZO
call RemoveUnit(Dqi)
set ZO=null
endif
endif
set Eqi=null
set Zqi=null
set Uqi=null
set Iqi=null
set Pqi=null
set Aqi=null
set Dqi=null
endfunction
function Jrt takes nothing returns boolean
local trigger Ert
local trigger Zrt
local playerunitevent Urt
local trigger Irt
local playerunitevent Prt
local integer Art
local trigger Drt
local code Hrt
set hd=CreateTrigger()
set Ert=hd
call DisableTrigger(Ert)
set Zrt=hd
set Urt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Irt=Zrt
set Prt=Urt
set Art=0
loop
call TriggerRegisterPlayerUnitEvent(Irt,Player(Art),Prt,null)
set Art=Art+1
exitwhen Art==bj_MAX_PLAYER_SLOTS
endloop
set Drt=hd
set Hrt=Q7
call TriggerAddAction(Drt,Hrt)
set Ert=null
set Zrt=null
set Urt=null
set Irt=null
set Prt=null
set Drt=null
return true
endfunction
function JtO takes nothing returns nothing
local unit AtO=GetLeavingUnit()
local unit DtO=AtO
local unittype HtO=UNIT_TYPE_HERO
if IsUnitType(DtO,HtO)==true then
call GroupRemoveUnit(Rb,AtO)
endif
set AtO=null
set DtO=null
set HtO=null
endfunction
function Jtt takes nothing returns boolean
local trigger Utt
local trigger Itt
local rect Ptt
local region Att
local trigger Dtt
local boolexpr Htt
set Oe=CreateTrigger()
set Utt=Oe
call DisableTrigger(Utt)
set Itt=Oe
set Ptt=bj_mapInitialPlayableArea
set Att=CreateRegion()
call RegionAddRect(Att,Ptt)
call TriggerRegisterEnterRegion(Itt,Att,null)
set Dtt=Oe
set Htt=Condition(s2)
call TriggerAddCondition(Dtt,Htt)
set Utt=null
set Itt=null
set Ptt=null
set Att=null
set Dtt=null
set Htt=null
return true
endfunction
function JuS takes nothing returns boolean
local trigger PuS
local trigger AuS
local playerunitevent DuS
local integer HuS
set Rn=CreateTrigger()
set PuS=Rn
call DisableTrigger(PuS)
set AuS=Rn
set DuS=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HuS=0
loop
call TriggerRegisterPlayerUnitEvent(AuS,Player(HuS),DuS,null)
set HuS=HuS+1
exitwhen HuS==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Rn,t6)
set PuS=null
set AuS=null
set DuS=null
return true
endfunction
function Mat takes string Rat returns nothing
local unit Tat
local integer Yat
local integer Gat
local unit gat
local integer hat
local integer Fat
local unit kat
local unit jat
local integer xat
local unit vat
local unittype mat
local unit Qat
local integer Wat
local unit Eat
local integer Zat
local string Uat
local integer Iat
local real Pat
local integer Aat
local string Dat
local unit Hat
local integer Jat
local unit Kat
local integer Lat
local string Xat
local integer Cat
local real Vat
local integer Bat
local string Nat
set aW[qW]=Rat
set qW=qW+1
set Tat=GetKillingUnit()
set kat=Tat
if GetUnitTypeId(kat)==$484D3063 then
set jat=Tat
set xat=$414D3364
set Yat=GetUnitAbilityLevel(jat,xat)
set Gat=GetRandomInt(1,100)
set gat=GetDyingUnit()
set vat=gat
set mat=UNIT_TYPE_HERO
if IsUnitType(vat,mat) and Yat>0 then
set Qat=Tat
set Wat=$414D3365
call UnitAddAbility(Qat,Wat)
set Eat=Tat
set Zat=852561
call IssueImmediateOrderById(Eat,Zat)
set Uat="when calling alloc_CallbackSingle_doAfter_IlGinot in IlGinot, line 100"
set aW[qW]=Uat
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Iat=fF
set RF[Iat]=718
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_IlGinot.","when calling error in IlGinot, line 100")
set Iat=0
endif
else
set dF=dF-1
set Iat=nF[dF]
set RF[Iat]=718
endif
set qW=qW-1
set hat=Iat
set uv[hat]=Tat
set Pat=10.
set Aat=hat
set Dat="when calling doAfter in IlGinot, line 100"
set aW[qW]=Dat
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Pat,Aat,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
elseif Gat<=7+Yat then
set Hat=Tat
set Jat=$414D3365
call UnitAddAbility(Hat,Jat)
set Kat=Tat
set Lat=852561
call IssueImmediateOrderById(Kat,Lat)
set Xat="when calling alloc_CallbackSingle_doAfter_IlGinot in IlGinot, line 106"
set aW[qW]=Xat
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Cat=fF
set RF[Cat]=719
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_IlGinot.","when calling error in IlGinot, line 106")
set Cat=0
endif
else
set dF=dF-1
set Cat=nF[dF]
set RF[Cat]=719
endif
set qW=qW-1
set Fat=Cat
set rv[Fat]=Tat
set Vat=10.
set Bat=Fat
set Nat="when calling doAfter in IlGinot, line 106"
set aW[qW]=Nat
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Vat,Bat,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set Tat=null
set gat=null
set kat=null
set jat=null
set vat=null
set mat=null
set Qat=null
set Eat=null
set Hat=null
set Kat=null
endfunction
function JvO takes nothing returns nothing
set qW=0
call Mat("via function reference IlGinot, line 113")
endfunction
function Jvi takes nothing returns boolean
local trigger Zvi
local playerunitevent Uvi
local trigger Ivi
local playerunitevent Pvi
local integer Avi
local trigger Dvi
local code Hvi
set Nd=CreateTrigger()
set Zvi=Nd
set Uvi=EVENT_PLAYER_UNIT_ATTACKED
set Ivi=Zvi
set Pvi=Uvi
set Avi=0
loop
call TriggerRegisterPlayerUnitEvent(Ivi,Player(Avi),Pvi,null)
set Avi=Avi+1
exitwhen Avi==bj_MAX_PLAYER_SLOTS
endloop
set Dvi=Nd
set Hvi=s8
call TriggerAddAction(Dvi,Hvi)
set Zvi=null
set Uvi=null
set Ivi=null
set Pvi=null
set Dvi=null
return true
endfunction
function HWs takes integer hWs,integer FWs,integer kWs,integer jWs,integer xWs,integer vWs,integer mWs,integer QWs,integer WWs,integer EWs,integer ZWs,integer UWs,integer IWs,integer PWs,string AWs returns integer
local integer DWs
set aW[qW]=AWs
set qW=qW+1
set DWs=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(DWs,hWs,"when calling add in LinkedList, line 412")
call x7s(DWs,FWs,"when calling add in LinkedList, line 412")
call x7s(DWs,kWs,"when calling add in LinkedList, line 412")
call x7s(DWs,jWs,"when calling add in LinkedList, line 412")
call x7s(DWs,xWs,"when calling add in LinkedList, line 412")
call x7s(DWs,vWs,"when calling add in LinkedList, line 412")
call x7s(DWs,mWs,"when calling add in LinkedList, line 412")
call x7s(DWs,QWs,"when calling add in LinkedList, line 412")
call x7s(DWs,WWs,"when calling add in LinkedList, line 412")
call x7s(DWs,EWs,"when calling add in LinkedList, line 412")
call x7s(DWs,ZWs,"when calling add in LinkedList, line 412")
call x7s(DWs,UWs,"when calling add in LinkedList, line 412")
call x7s(DWs,IWs,"when calling add in LinkedList, line 412")
call x7s(DWs,PWs,"when calling add in LinkedList, line 412")
set qW=qW-1
return DWs
endfunction
function bGw takes integer IYw,integer PYw,integer AYw,integer DYw,integer HYw,integer JYw,integer KYw,integer LYw,integer XYw,integer CYw,integer VYw,integer BYw,integer NYw,integer MYw,integer wGw,integer uGw,integer rGw,integer sGw,integer tGw,integer iGw,integer SGw,integer cGw,integer oGw,string OGw returns integer
local integer lGw
set aW[qW]=OGw
set qW=qW+1
set lGw=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(lGw,IYw,"when calling add in LinkedList, line 412")
call x7s(lGw,PYw,"when calling add in LinkedList, line 412")
call x7s(lGw,AYw,"when calling add in LinkedList, line 412")
call x7s(lGw,DYw,"when calling add in LinkedList, line 412")
call x7s(lGw,HYw,"when calling add in LinkedList, line 412")
call x7s(lGw,JYw,"when calling add in LinkedList, line 412")
call x7s(lGw,KYw,"when calling add in LinkedList, line 412")
call x7s(lGw,LYw,"when calling add in LinkedList, line 412")
call x7s(lGw,XYw,"when calling add in LinkedList, line 412")
call x7s(lGw,CYw,"when calling add in LinkedList, line 412")
call x7s(lGw,VYw,"when calling add in LinkedList, line 412")
call x7s(lGw,BYw,"when calling add in LinkedList, line 412")
call x7s(lGw,NYw,"when calling add in LinkedList, line 412")
call x7s(lGw,MYw,"when calling add in LinkedList, line 412")
call x7s(lGw,wGw,"when calling add in LinkedList, line 412")
call x7s(lGw,uGw,"when calling add in LinkedList, line 412")
call x7s(lGw,rGw,"when calling add in LinkedList, line 412")
call x7s(lGw,sGw,"when calling add in LinkedList, line 412")
call x7s(lGw,tGw,"when calling add in LinkedList, line 412")
call x7s(lGw,iGw,"when calling add in LinkedList, line 412")
call x7s(lGw,SGw,"when calling add in LinkedList, line 412")
call x7s(lGw,cGw,"when calling add in LinkedList, line 412")
call x7s(lGw,oGw,"when calling add in LinkedList, line 412")
set qW=qW-1
return lGw
endfunction
function q9l takes integer X8l,integer C8l,integer V8l,integer B8l,integer N8l,integer M8l,integer w9l,integer u9l,integer r9l,integer s9l,integer t9l,integer i9l,integer S9l,integer c9l,integer o9l,integer O9l,integer l9l,integer b9l,integer y9l,string p9l returns integer
local integer e9l
set aW[qW]=p9l
set qW=qW+1
set e9l=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(e9l,X8l,"when calling add in LinkedList, line 412")
call x7s(e9l,C8l,"when calling add in LinkedList, line 412")
call x7s(e9l,V8l,"when calling add in LinkedList, line 412")
call x7s(e9l,B8l,"when calling add in LinkedList, line 412")
call x7s(e9l,N8l,"when calling add in LinkedList, line 412")
call x7s(e9l,M8l,"when calling add in LinkedList, line 412")
call x7s(e9l,w9l,"when calling add in LinkedList, line 412")
call x7s(e9l,u9l,"when calling add in LinkedList, line 412")
call x7s(e9l,r9l,"when calling add in LinkedList, line 412")
call x7s(e9l,s9l,"when calling add in LinkedList, line 412")
call x7s(e9l,t9l,"when calling add in LinkedList, line 412")
call x7s(e9l,i9l,"when calling add in LinkedList, line 412")
call x7s(e9l,S9l,"when calling add in LinkedList, line 412")
call x7s(e9l,c9l,"when calling add in LinkedList, line 412")
call x7s(e9l,o9l,"when calling add in LinkedList, line 412")
call x7s(e9l,O9l,"when calling add in LinkedList, line 412")
call x7s(e9l,l9l,"when calling add in LinkedList, line 412")
call x7s(e9l,b9l,"when calling add in LinkedList, line 412")
call x7s(e9l,y9l,"when calling add in LinkedList, line 412")
set qW=qW-1
return e9l
endfunction
function Owt takes string owt returns boolean
set aW[qW]=owt
set qW=qW+1
call bGw($484D3062,$484D3061,$4E62726E,$4E6E6773,$4867616D,$4E616C6D,$4870616C,$48616D67,$48626C6D,$4F746872,$486B616C,$4F666172,$45667572,$4F676C64,$4F736864,$556C6963,$48616E74,$4F647274,$4E666972,$456D6F6F,$456D6672,$4E74696E,$48686B6C,"when calling asList in HeroesType, line 11")
call q9l($4861706D,$4F677268,$4F73616D,$4E626263,$55616E62,$45777264,$456B6767,$484D3036,$484D3063,$4E736A73,$486D6764,$5562616C,$5563726C,$45776172,$4E726F62,$4864676F,$4563656E,$45747972,$4F636232,"when calling asList in HeroesType, line 12")
call HWs($484D3039,$4F726578,$55646561,$48303144,$45696C6C,$4E706C68,$4F626C61,$4F746368,$55647265,$4E627374,$4F706768,$4564656D,$556B746C,$45696C6D,"when calling asList in HeroesType, line 13")
set qW=qW-1
return true
endfunction
function K0S takes nothing returns boolean
set qW=0
return Owt("via function reference HeroesType, line 1")
endfunction
function K7S takes nothing returns boolean
return true
endfunction
function KBS takes nothing returns boolean
local unit gBS=GetEnteringUnit()
local unit FBS=gBS
local player hBS=GetOwningPlayer(FBS)
local player kBS=hBS
local unit xBS=G[6]
local player jBS=GetOwningPlayer(xBS)
local unit vBS
local unit mBS
local unittype QBS
local unit WBS
local unit EBS
local unit ZBS
local unit UBS
local boolean IBS
local boolean PBS
local boolean ABS
local boolean DBS
local boolean HBS
local boolean JBS
if IsPlayerEnemy(kBS,jBS) then
set IBS=true
else
set vBS=G[6]
set IBS=GetOwningPlayer(vBS)==Player(15)
endif
if IBS then
set mBS=gBS
set QBS=UNIT_TYPE_HERO
set PBS=IsUnitType(mBS,QBS)==true or GetUnitLevel(gBS)>=7
else
set PBS=false
endif
if PBS then
set WBS=gBS
set ABS=GetUnitTypeId(WBS)!=$6830324C
else
set ABS=false
endif
if ABS then
set EBS=gBS
set DBS=GetUnitTypeId(EBS)!=$6830324D
else
set DBS=false
endif
if DBS then
set ZBS=gBS
set HBS=GetUnitTypeId(ZBS)!=$68303254
else
set HBS=false
endif
if HBS then
set UBS=gBS
set JBS=GetUnitTypeId(UBS)!=$6830324F
else
set JBS=false
endif
set gBS=null
set hBS=null
set FBS=null
set kBS=null
set jBS=null
set xBS=null
set vBS=null
set mBS=null
set QBS=null
set WBS=null
set EBS=null
set ZBS=null
set UBS=null
return JBS
endfunction
function Bfr takes string Bdr returns nothing
local integer Ndr
local integer Mdr
local string wfr
local real ufr
local string rfr
local real sfr
local timerdialog tfr
local trigger ifr
local trigger Sfr
local trigger cfr
local trigger ofr
local integer Ofr
local string lfr
local texttag bfr
local integer yfr
local integer pfr
local integer efr
local integer qfr
local texttag afr
local integer nfr
local integer dfr
local integer ffr
local integer Rfr
local string Tfr
local integer Yfr
local unit Gfr
local integer gfr
local unit hfr
local integer Ffr
local unit kfr
local integer jfr
local unit xfr
local integer vfr
local unit mfr
local integer Qfr
local unit Wfr
local player Efr
local playerstate Zfr
local integer Ufr
local unit Ifr
local player Pfr
local timerdialog Afr
local integer Dfr
local integer Hfr
local integer Jfr
local integer Kfr
local integer Lfr
local integer Xfr
local integer Cfr
local integer Vfr
set aW[qW]=Bdr
set qW=qW+1
if GetClickedButton()==Rr[3] then
set xu=true
set wfr="Mode: |cffF88017Tournament Mode|r / |cffa020f0Double Bonus|r |cffFF0000OFF|r"
set ufr=15.
set rfr=wfr
set sfr=ufr
call DisplayTimedTextToPlayer(IY,0.,0.,sfr,rfr)
call DialogClear(sr)
set tfr=tr
call DestroyTimerDialog(tfr)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set vu=true
set ifr=Bg
call EnableTrigger(ifr)
set Sfr=un
call DisableTrigger(Sfr)
set cfr=Na
call DisableTrigger(cfr)
set ofr=rn
call DisableTrigger(ofr)
set Ofr=hY
set lfr="when calling shuffle in TournamentMode, line 69"
set aW[qW]=lfr
set qW=qW+1
if ok[Ofr]==0 then
if Ofr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Ofr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TY=L5u(-150.,540.,128.,"AutoBan:",10.)
set bfr=TY
set Dfr=255
set Hfr=106
set Jfr=6
set Kfr=255
set yfr=Dfr
set pfr=Hfr
set efr=Jfr
set qfr=Kfr
call SetTextTagColor(bfr,yfr,pfr,efr,qfr)
set YY=L5u(150.,540.,128.,"PlayerBan:",10.)
set afr=YY
set Lfr=255
set Xfr=6
set Cfr=6
set Vfr=255
set nfr=Lfr
set dfr=Xfr
set ffr=Cfr
set Rfr=Vfr
call SetTextTagColor(afr,nfr,dfr,ffr,Rfr)
set Tfr="when calling alloc_CallbackPeriodic_doPeriodically_TournamentMode in TournamentMode, line 74"
set aW[qW]=Tfr
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Yfr=GF
set gF[Yfr]=664
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_TournamentMode.","when calling error in TournamentMode, line 74")
set Yfr=0
endif
else
set YF=YF-1
set Yfr=TF[YF]
set gF[Yfr]=664
endif
set qW=qW-1
set Ndr=Yfr
call GtO(.25,Ndr,"when calling doPeriodically in TournamentMode, line 74")
set Mdr=0
loop
exitwhen Mdr>3
set Gfr=k[Mdr]
set gfr=$50494331
call UnitAddAbility(Gfr,gfr)
set hfr=k[Mdr]
set Ffr=$50494332
call UnitAddAbility(hfr,Ffr)
set kfr=k[Mdr]
set jfr=$50494333
call UnitAddAbility(kfr,jfr)
set xfr=k[Mdr]
set vfr=$50494334
call UnitAddAbility(xfr,vfr)
set mfr=k[Mdr]
set Qfr=$50494335
call UnitAddAbility(mfr,Qfr)
set Wfr=k[Mdr]
call ShowUnit(Wfr,false)
set Efr=Player(Mdr)
set Zfr=PLAYER_STATE_RESOURCE_FOOD_USED
set Ufr=0
call SetPlayerState(Efr,Zfr,Ufr)
set Mdr=Mdr+1
endloop
set Ifr=k[1]
call ShowUnit(Ifr,true)
call TimerStart(ir,30.,false,mrw)
set tr=CreateTimerDialog(ir)
set Afr=tr
set Pfr=Tu
call TimerDialogSetTitle(Afr,GetPlayerName(Pfr)+" ban race")
call TimerDialogDisplay(tr,true)
endif
set qW=qW-1
set tfr=null
set ifr=null
set Sfr=null
set cfr=null
set ofr=null
set bfr=null
set afr=null
set Gfr=null
set hfr=null
set kfr=null
set xfr=null
set mfr=null
set Wfr=null
set Efr=null
set Zfr=null
set Ifr=null
set Pfr=null
set Afr=null
endfunction
function Wyc takes integer Qyc returns string
if Qyc==$41313930 then
return "Pandaren"
endif
if Qyc==$41313931 then
return "Arakkoa"
endif
if Qyc==$41313932 then
return "Draconid"
endif
if Qyc==$41313933 then
return "Rogue"
endif
if Qyc==$41313934 then
return "Vulpera"
endif
if Qyc==$41313935 then
return "Satyr"
endif
if Qyc==$41313936 then
return "Human"
endif
if Qyc==$41313937 then
return "Orc"
endif
if Qyc==$41313938 then
return "Dwarf"
endif
if Qyc==$41313939 then
return "Night Elf"
endif
if Qyc==$41313941 then
return "Tauren"
endif
if Qyc==$41313942 then
return "Blood Elf"
endif
if Qyc==$41313943 then
return "Goblin"
endif
if Qyc==$41313944 then
return "Troll"
endif
if Qyc==$41313945 then
return "Demon"
endif
if Qyc==$41313946 then
return "Fel Orc"
endif
if Qyc==$4131394A then
return "Kultiras"
endif
if Qyc==$41313949 then
return "Gnoll"
endif
if Qyc==$41313947 then
return "Undead"
endif
if Qyc==$41313948 then
return "Naga"
endif
set Vg=Vg+1
return ""
endfunction
function LZs takes string JWs returns nothing
local integer KWs
local integer LWs
local integer XWs
local integer CWs
local integer VWs
local integer BWs
local string NWs
local string MWs
local real wEs
local string uEs
local real rEs
local trigger sEs
local timerdialog tEs
local player iEs
local real SEs
local real cEs
local unit oEs
local unit OEs
local unit lEs
local player bEs
local player yEs
local real pEs
local real eEs
local unit qEs
local unit aEs
local unit nEs
local player dEs
local player fEs
local real REs
local real TEs
local unit YEs
local unit GEs
local unit gEs
local player hEs
local player FEs
local real kEs
local real jEs
local unit xEs
local unit vEs
local unit mEs
local player QEs
local integer WEs
local string EEs
local integer ZEs
local string UEs
local integer IEs
local integer PEs
local player AEs
local integer DEs
local string HEs
local unit JEs
local integer KEs
local integer LEs
local string XEs
local integer CEs
local string VEs
local integer BEs
local integer NEs
local player MEs
local integer wZs
local string uZs
local unit rZs
local integer sZs
local integer tZs
local string iZs
local integer SZs
local string cZs
local integer oZs
local integer OZs
local player lZs
local integer bZs
local string yZs
local unit pZs
local integer eZs
local integer qZs
local string aZs
local integer nZs
local string dZs
local integer fZs
local integer RZs
local player TZs
local integer YZs
local string GZs
local unit gZs
local integer hZs
local integer FZs
local string kZs
local integer jZs
local string xZs
local integer vZs
local integer mZs
local integer QZs
local texttag WZs
local integer EZs
local integer ZZs
local integer UZs
local integer IZs
local string PZs
local real AZs
local integer DZs
local integer HZs
local integer JZs
local integer KZs
set aW[qW]=JWs
set qW=qW+1
if GetClickedButton()==Rr[6] then
set ku=true
set MWs="Mode: |cff1464afThree Race Pick|r / |cffFF0000Fast Mode|r |cff00ff00ON|r"
set wEs=15.
set uEs=MWs
set rEs=wEs
call DisplayTimedTextToPlayer(IY,0.,0.,rEs,uEs)
set sEs=sn
call EnableTrigger(sEs)
call DialogClear(sr)
set tEs=tr
call DestroyTimerDialog(tEs)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set iEs=Yu
set oEs=k[0]
set SEs=GetUnitX(oEs)
set OEs=k[0]
set cEs=GetUnitY(OEs)
if GetLocalPlayer()==iEs then
call SetCameraPosition(SEs,cEs)
endif
set lEs=k[0]
set bEs=Yu
if GetLocalPlayer()==bEs then
call ClearSelection()
call SelectUnit(lEs,true)
endif
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set yEs=Tu
set qEs=k[1]
set pEs=GetUnitX(qEs)
set aEs=k[1]
set eEs=GetUnitY(aEs)
if GetLocalPlayer()==yEs then
call SetCameraPosition(pEs,eEs)
endif
set nEs=k[1]
set dEs=Tu
if GetLocalPlayer()==dEs then
call ClearSelection()
call SelectUnit(nEs,true)
endif
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set fEs=Gu
set YEs=k[2]
set REs=GetUnitX(YEs)
set GEs=k[2]
set TEs=GetUnitY(GEs)
if GetLocalPlayer()==fEs then
call SetCameraPosition(REs,TEs)
endif
set gEs=k[2]
set hEs=Gu
if GetLocalPlayer()==hEs then
call ClearSelection()
call SelectUnit(gEs,true)
endif
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set FEs=gu
set xEs=k[3]
set kEs=GetUnitX(xEs)
set vEs=k[3]
set jEs=GetUnitY(vEs)
if GetLocalPlayer()==FEs then
call SetCameraPosition(kEs,jEs)
endif
set mEs=k[3]
set QEs=gu
if GetLocalPlayer()==QEs then
call ClearSelection()
call SelectUnit(mEs,true)
endif
call TimerStart(ir,30.,false,Trw)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
set WEs=hY
set EEs="when calling shuffle in ThreeRacePick, line 247"
set aW[qW]=EEs
set qW=qW+1
if ok[WEs]==0 then
if WEs==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(WEs,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set KWs=1
loop
exitwhen KWs>3
set ZEs=hY
set UEs="when calling getFirst in ThreeRacePick, line 250"
set aW[qW]=UEs
set qW=qW+1
if ok[ZEs]==0 then
if ZEs==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set PEs=ZEs
set IEs=Hv[Kv[Vv[PEs]]]
set qW=qW-1
set mg=IEs
set AEs=Yu
set DEs=mg
set HEs="when calling numRace1 in ThreeRacePick, line 251"
set aW[qW]=HEs
set qW=qW+1
if AEs==Yu then
if DEs==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if DEs==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if DEs==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if DEs==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if DEs==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if DEs==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if DEs==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if DEs==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if DEs==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if DEs==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if DEs==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if DEs==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if DEs==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if DEs==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if DEs==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if DEs==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if DEs==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if DEs==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if DEs==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if DEs==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if AEs==Tu then
if DEs==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if DEs==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if DEs==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if DEs==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if DEs==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if DEs==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if DEs==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if DEs==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if DEs==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if DEs==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if DEs==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if DEs==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if DEs==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if DEs==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if DEs==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if DEs==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if DEs==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if DEs==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if DEs==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if DEs==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if AEs==Gu then
if DEs==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if DEs==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if DEs==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if DEs==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if DEs==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if DEs==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if DEs==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if DEs==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if DEs==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if DEs==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if DEs==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if DEs==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if DEs==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if DEs==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if DEs==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if DEs==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if DEs==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if DEs==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if DEs==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if DEs==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if AEs==gu then
if DEs==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if DEs==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if DEs==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if DEs==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if DEs==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if DEs==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if DEs==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if DEs==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if DEs==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if DEs==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if DEs==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if DEs==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if DEs==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if DEs==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if DEs==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if DEs==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if DEs==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if DEs==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if DEs==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if DEs==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set JEs=k[0]
set KEs=mg
call UnitAddAbility(JEs,KEs)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 253")
set LEs=hY
set XEs="when calling shuffle in ThreeRacePick, line 254"
set aW[qW]=XEs
set qW=qW+1
if ok[LEs]==0 then
if LEs==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(LEs,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set KWs=KWs+1
endloop
set LWs=1
loop
exitwhen LWs>3
set CEs=hY
set VEs="when calling getFirst in ThreeRacePick, line 257"
set aW[qW]=VEs
set qW=qW+1
if ok[CEs]==0 then
if CEs==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set NEs=CEs
set BEs=Hv[Kv[Vv[NEs]]]
set qW=qW-1
set mg=BEs
set MEs=Tu
set wZs=mg
set uZs="when calling numRace1 in ThreeRacePick, line 258"
set aW[qW]=uZs
set qW=qW+1
if MEs==Yu then
if wZs==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if wZs==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if wZs==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if wZs==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if wZs==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if wZs==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if wZs==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if wZs==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if wZs==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if wZs==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if wZs==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if wZs==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if wZs==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if wZs==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if wZs==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if wZs==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if wZs==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if wZs==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if wZs==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if wZs==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if MEs==Tu then
if wZs==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if wZs==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if wZs==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if wZs==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if wZs==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if wZs==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if wZs==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if wZs==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if wZs==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if wZs==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if wZs==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if wZs==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if wZs==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if wZs==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if wZs==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if wZs==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if wZs==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if wZs==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if wZs==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if wZs==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if MEs==Gu then
if wZs==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if wZs==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if wZs==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if wZs==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if wZs==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if wZs==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if wZs==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if wZs==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if wZs==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if wZs==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if wZs==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if wZs==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if wZs==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if wZs==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if wZs==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if wZs==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if wZs==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if wZs==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if wZs==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if wZs==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if MEs==gu then
if wZs==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if wZs==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if wZs==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if wZs==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if wZs==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if wZs==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if wZs==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if wZs==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if wZs==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if wZs==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if wZs==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if wZs==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if wZs==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if wZs==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if wZs==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if wZs==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if wZs==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if wZs==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if wZs==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if wZs==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set rZs=k[1]
set sZs=mg
call UnitAddAbility(rZs,sZs)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 260")
set tZs=hY
set iZs="when calling shuffle in ThreeRacePick, line 261"
set aW[qW]=iZs
set qW=qW+1
if ok[tZs]==0 then
if tZs==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(tZs,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set LWs=LWs+1
endloop
set XWs=1
loop
exitwhen XWs>3
set SZs=hY
set cZs="when calling getFirst in ThreeRacePick, line 264"
set aW[qW]=cZs
set qW=qW+1
if ok[SZs]==0 then
if SZs==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set OZs=SZs
set oZs=Hv[Kv[Vv[OZs]]]
set qW=qW-1
set mg=oZs
set lZs=Gu
set bZs=mg
set yZs="when calling numRace1 in ThreeRacePick, line 265"
set aW[qW]=yZs
set qW=qW+1
if lZs==Yu then
if bZs==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if bZs==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if bZs==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if bZs==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if bZs==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if bZs==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if bZs==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if bZs==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if bZs==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if bZs==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if bZs==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if bZs==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if bZs==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if bZs==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if bZs==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if bZs==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if bZs==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if bZs==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if bZs==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if bZs==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if lZs==Tu then
if bZs==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if bZs==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if bZs==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if bZs==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if bZs==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if bZs==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if bZs==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if bZs==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if bZs==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if bZs==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if bZs==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if bZs==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if bZs==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if bZs==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if bZs==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if bZs==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if bZs==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if bZs==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if bZs==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if bZs==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if lZs==Gu then
if bZs==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if bZs==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if bZs==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if bZs==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if bZs==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if bZs==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if bZs==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if bZs==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if bZs==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if bZs==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if bZs==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if bZs==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if bZs==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if bZs==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if bZs==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if bZs==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if bZs==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if bZs==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if bZs==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if bZs==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if lZs==gu then
if bZs==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if bZs==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if bZs==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if bZs==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if bZs==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if bZs==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if bZs==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if bZs==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if bZs==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if bZs==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if bZs==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if bZs==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if bZs==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if bZs==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if bZs==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if bZs==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if bZs==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if bZs==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if bZs==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if bZs==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set pZs=k[2]
set eZs=mg
call UnitAddAbility(pZs,eZs)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 267")
set qZs=hY
set aZs="when calling shuffle in ThreeRacePick, line 268"
set aW[qW]=aZs
set qW=qW+1
if ok[qZs]==0 then
if qZs==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(qZs,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set XWs=XWs+1
endloop
set CWs=1
loop
exitwhen CWs>3
set nZs=hY
set dZs="when calling getFirst in ThreeRacePick, line 271"
set aW[qW]=dZs
set qW=qW+1
if ok[nZs]==0 then
if nZs==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set RZs=nZs
set fZs=Hv[Kv[Vv[RZs]]]
set qW=qW-1
set mg=fZs
set TZs=gu
set YZs=mg
set GZs="when calling numRace1 in ThreeRacePick, line 272"
set aW[qW]=GZs
set qW=qW+1
if TZs==Yu then
if YZs==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if YZs==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if YZs==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if YZs==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if YZs==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if YZs==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if YZs==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if YZs==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if YZs==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if YZs==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if YZs==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if YZs==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if YZs==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if YZs==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if YZs==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if YZs==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if YZs==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if YZs==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if YZs==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if YZs==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if TZs==Tu then
if YZs==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if YZs==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if YZs==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if YZs==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if YZs==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if YZs==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if YZs==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if YZs==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if YZs==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if YZs==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if YZs==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if YZs==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if YZs==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if YZs==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if YZs==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if YZs==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if YZs==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if YZs==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if YZs==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if YZs==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if TZs==Gu then
if YZs==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if YZs==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if YZs==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if YZs==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if YZs==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if YZs==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if YZs==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if YZs==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if YZs==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if YZs==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if YZs==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if YZs==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if YZs==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if YZs==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if YZs==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if YZs==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if YZs==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if YZs==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if YZs==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if YZs==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if TZs==gu then
if YZs==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if YZs==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if YZs==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if YZs==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if YZs==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if YZs==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if YZs==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if YZs==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if YZs==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if YZs==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if YZs==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if YZs==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if YZs==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if YZs==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if YZs==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if YZs==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if YZs==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if YZs==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if YZs==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if YZs==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set gZs=k[3]
set hZs=mg
call UnitAddAbility(gZs,hZs)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 274")
set FZs=hY
set kZs="when calling shuffle in ThreeRacePick, line 275"
set aW[qW]=kZs
set qW=qW+1
if ok[FZs]==0 then
if FZs==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(FZs,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set CWs=CWs+1
endloop
set VWs=0
loop
exitwhen VWs>7
set jZs=hY
set xZs="when calling getFirst in ThreeRacePick, line 279"
set aW[qW]=xZs
set qW=qW+1
if ok[jZs]==0 then
if jZs==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set mZs=jZs
set vZs=Hv[Kv[Vv[mZs]]]
set qW=qW-1
set BWs=vZs
set NWs=Wyc(BWs)
set QZs=220-100*VWs
set kY[VWs]=L5u(40.,QZs*1.,128.,NWs,10.)
set WZs=kY[VWs]
set DZs=255
set HZs=6
set JZs=6
set KZs=255
set EZs=DZs
set ZZs=HZs
set UZs=JZs
set IZs=KZs
call SetTextTagColor(WZs,EZs,ZZs,UZs,IZs)
set PZs=NWs
set AZs=10.
call DisplayTimedTextToPlayer(IY,0.,0.,AZs,PZs)
call eWp(hY,BWs,"when calling remove in ThreeRacePick, line 284")
set VWs=VWs+1
endloop
endif
set qW=qW-1
set sEs=null
set tEs=null
set iEs=null
set oEs=null
set OEs=null
set lEs=null
set bEs=null
set yEs=null
set qEs=null
set aEs=null
set nEs=null
set dEs=null
set fEs=null
set YEs=null
set GEs=null
set gEs=null
set hEs=null
set FEs=null
set xEs=null
set vEs=null
set mEs=null
set QEs=null
set AEs=null
set JEs=null
set MEs=null
set rZs=null
set lZs=null
set pZs=null
set TZs=null
set gZs=null
set WZs=null
endfunction
function Lkp takes nothing returns nothing
local string jkp
local real xkp
local string vkp
local real mkp
local string Qkp
local real Wkp
local string Ekp
local real Zkp
local string Ukp
local real Ikp
local string Pkp
local real Akp
local string Dkp
local real Hkp
local string Jkp
local real Kkp
set Rr[0]=DialogAddButton(sr,"|cff00ff00Random|r",0)
set Rr[1]=DialogAddButton(sr,"|cffffff00All Pick|r",0)
set Rr[2]=DialogAddButton(sr,"|cff177296Three Race Pick|r",0)
set Rr[3]=DialogAddButton(sr,"|cffF88017Tournament Mode|r",0)
set Rr[4]=DialogAddButton(sr,"|cffa020f0Double Bonus|r",0)
set Rr[5]=DialogAddButton(sr,"|cff0000FFCHAOS|r",0)
set Rr[6]=DialogAddButton(sr,"|cffFF0000Fast Mode|r",0)
set Rr[7]=DialogAddButton(sr,"|cffF88017Tournament Mode|r / |cffffff00Hard Mode|r",0)
call DialogSetMessage(sr,"Game Mode")
if GetPlayerController(Player(0))==MAP_CONTROL_USER then
call DialogDisplay(Player(0),sr,true)
set jkp="|cffffff00"+GetPlayerName(Player(0))+"|r"+" has 14 seconds to select game mode..."
set xkp=10.
set vkp=jkp
set mkp=xkp
call DisplayTimedTextToPlayer(IY,0.,0.,mkp,vkp)
elseif GetPlayerController(Player(1))==MAP_CONTROL_USER then
call DialogDisplay(Player(1),sr,true)
set Qkp="|cffffff00"+GetPlayerName(Player(1))+"|r"+" has 14 seconds to select game mode..."
set Wkp=10.
set Ekp=Qkp
set Zkp=Wkp
call DisplayTimedTextToPlayer(IY,0.,0.,Zkp,Ekp)
elseif GetPlayerController(Player(2))==MAP_CONTROL_USER then
call DialogDisplay(Player(2),sr,true)
set Ukp="|cffffff00"+GetPlayerName(Player(2))+"|r"+" has 14 seconds to select game mode..."
set Ikp=10.
set Pkp=Ukp
set Akp=Ikp
call DisplayTimedTextToPlayer(IY,0.,0.,Akp,Pkp)
else
call DialogDisplay(Player(3),sr,true)
set Dkp="|cffffff00"+GetPlayerName(Player(3))+"|r"+" has 14 seconds to select game mode..."
set Hkp=10.
set Jkp=Dkp
set Kkp=Hkp
call DisplayTimedTextToPlayer(IY,0.,0.,Kkp,Jkp)
endif
call TimerStart(ir,14.,false,y6)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game Mode:")
call TimerDialogDisplay(tr,true)
endfunction
function Nvl takes string Rxl returns nothing
local integer Txl
local integer Yxl
local string Gxl
local real gxl
local string hxl
local real Fxl
local timerdialog kxl
local player jxl
local real xxl
local real vxl
local unit mxl
local unit Qxl
local unit Wxl
local player Exl
local player Zxl
local real Uxl
local real Ixl
local unit Pxl
local unit Axl
local unit Dxl
local player Hxl
local player Jxl
local real Kxl
local real Lxl
local unit Xxl
local unit Cxl
local unit Vxl
local player Bxl
local player Nxl
local real Mxl
local real wvl
local unit uvl
local unit rvl
local unit svl
local player tvl
local integer ivl
local string Svl
local integer cvl
local string ovl
local integer Ovl
local integer lvl
local unit bvl
local integer yvl
local integer pvl
local string evl
local integer qvl
local string avl
local integer nvl
local string dvl
local integer fvl
local integer Rvl
local unit Tvl
local integer Yvl
local integer Gvl
local string gvl
local integer hvl
local string Fvl
local integer kvl
local string jvl
local integer xvl
local integer vvl
local unit mvl
local integer Qvl
local integer Wvl
local string Evl
local integer Zvl
local string Uvl
local integer Ivl
local string Pvl
local integer Avl
local integer Dvl
local unit Hvl
local integer Jvl
local integer Kvl
local string Lvl
local integer Xvl
local string Cvl
local unit Vvl
local integer Bvl
set aW[qW]=Rxl
set qW=qW+1
if GetClickedButton()==Rr[0] then
set Gxl="Mode: |cff00ff00Random|r / |cff0000FFCHAOS|r |cffFF0000OFF|r"
set gxl=15.
set hxl=Gxl
set Fxl=gxl
call DisplayTimedTextToPlayer(IY,0.,0.,Fxl,hxl)
call DialogClear(sr)
set kxl=tr
call DestroyTimerDialog(kxl)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set jxl=Yu
set mxl=k[0]
set xxl=GetUnitX(mxl)
set Qxl=k[0]
set vxl=GetUnitY(Qxl)
if GetLocalPlayer()==jxl then
call SetCameraPosition(xxl,vxl)
endif
set Wxl=k[0]
set Exl=Yu
if GetLocalPlayer()==Exl then
call ClearSelection()
call SelectUnit(Wxl,true)
endif
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set Zxl=Tu
set Pxl=k[1]
set Uxl=GetUnitX(Pxl)
set Axl=k[1]
set Ixl=GetUnitY(Axl)
if GetLocalPlayer()==Zxl then
call SetCameraPosition(Uxl,Ixl)
endif
set Dxl=k[1]
set Hxl=Tu
if GetLocalPlayer()==Hxl then
call ClearSelection()
call SelectUnit(Dxl,true)
endif
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set Jxl=Gu
set Xxl=k[2]
set Kxl=GetUnitX(Xxl)
set Cxl=k[2]
set Lxl=GetUnitY(Cxl)
if GetLocalPlayer()==Jxl then
call SetCameraPosition(Kxl,Lxl)
endif
set Vxl=k[2]
set Bxl=Gu
if GetLocalPlayer()==Bxl then
call ClearSelection()
call SelectUnit(Vxl,true)
endif
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set Nxl=gu
set uvl=k[3]
set Mxl=GetUnitX(uvl)
set rvl=k[3]
set wvl=GetUnitY(rvl)
if GetLocalPlayer()==Nxl then
call SetCameraPosition(Mxl,wvl)
endif
set svl=k[3]
set tvl=gu
if GetLocalPlayer()==tvl then
call ClearSelection()
call SelectUnit(svl,true)
endif
call TimerStart(MR,30.,false,R0w)
set tr=CreateTimerDialog(MR)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
set ivl=hY
set Svl="when calling shuffle in NewRandom, line 44"
set aW[qW]=Svl
set qW=qW+1
if ok[ivl]==0 then
if ivl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(ivl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set cvl=hY
set ovl="when calling getFirst in NewRandom, line 45"
set aW[qW]=ovl
set qW=qW+1
if ok[cvl]==0 then
if cvl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set lvl=cvl
set Ovl=Hv[Kv[Vv[lvl]]]
set qW=qW-1
set Txl=Ovl
set bvl=k[0]
set yvl=Txl
call UnitAddAbility(bvl,yvl)
set pvl=Txl
set evl="when calling numRace in NewRandom, line 47"
set aW[qW]=evl
set qW=qW+1
if pvl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if pvl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if pvl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if pvl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if pvl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if pvl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if pvl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if pvl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if pvl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if pvl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if pvl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if pvl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if pvl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if pvl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if pvl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if pvl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if pvl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if pvl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if pvl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if pvl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,Txl,"when calling remove in NewRandom, line 48")
set qvl=hY
set avl="when calling shuffle in NewRandom, line 49"
set aW[qW]=avl
set qW=qW+1
if ok[qvl]==0 then
if qvl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(qvl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set nvl=hY
set dvl="when calling getFirst in NewRandom, line 50"
set aW[qW]=dvl
set qW=qW+1
if ok[nvl]==0 then
if nvl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Rvl=nvl
set fvl=Hv[Kv[Vv[Rvl]]]
set qW=qW-1
set Txl=fvl
set Tvl=k[1]
set Yvl=Txl
call UnitAddAbility(Tvl,Yvl)
set Gvl=Txl
set gvl="when calling numRace in NewRandom, line 52"
set aW[qW]=gvl
set qW=qW+1
if Gvl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if Gvl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if Gvl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if Gvl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if Gvl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if Gvl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if Gvl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if Gvl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if Gvl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if Gvl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if Gvl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if Gvl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if Gvl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if Gvl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if Gvl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if Gvl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if Gvl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if Gvl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if Gvl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if Gvl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,Txl,"when calling remove in NewRandom, line 53")
set hvl=hY
set Fvl="when calling shuffle in NewRandom, line 54"
set aW[qW]=Fvl
set qW=qW+1
if ok[hvl]==0 then
if hvl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(hvl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set kvl=hY
set jvl="when calling getFirst in NewRandom, line 55"
set aW[qW]=jvl
set qW=qW+1
if ok[kvl]==0 then
if kvl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set vvl=kvl
set xvl=Hv[Kv[Vv[vvl]]]
set qW=qW-1
set Txl=xvl
set mvl=k[2]
set Qvl=Txl
call UnitAddAbility(mvl,Qvl)
set Wvl=Txl
set Evl="when calling numRace in NewRandom, line 57"
set aW[qW]=Evl
set qW=qW+1
if Wvl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if Wvl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if Wvl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if Wvl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if Wvl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if Wvl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if Wvl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if Wvl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if Wvl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if Wvl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if Wvl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if Wvl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if Wvl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if Wvl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if Wvl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if Wvl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if Wvl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if Wvl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if Wvl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if Wvl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,Txl,"when calling remove in NewRandom, line 58")
set Zvl=hY
set Uvl="when calling shuffle in NewRandom, line 59"
set aW[qW]=Uvl
set qW=qW+1
if ok[Zvl]==0 then
if Zvl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Zvl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Ivl=hY
set Pvl="when calling getFirst in NewRandom, line 60"
set aW[qW]=Pvl
set qW=qW+1
if ok[Ivl]==0 then
if Ivl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Dvl=Ivl
set Avl=Hv[Kv[Vv[Dvl]]]
set qW=qW-1
set Txl=Avl
set Hvl=k[3]
set Jvl=Txl
call UnitAddAbility(Hvl,Jvl)
set Kvl=Txl
set Lvl="when calling numRace in NewRandom, line 62"
set aW[qW]=Lvl
set qW=qW+1
if Kvl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if Kvl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if Kvl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if Kvl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if Kvl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if Kvl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if Kvl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if Kvl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if Kvl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if Kvl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if Kvl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if Kvl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if Kvl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if Kvl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if Kvl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if Kvl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if Kvl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if Kvl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if Kvl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if Kvl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,Txl,"when calling remove in NewRandom, line 63")
set Xvl=hY
set Cvl="when calling shuffle in NewRandom, line 64"
set aW[qW]=Cvl
set qW=qW+1
if ok[Xvl]==0 then
if Xvl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Xvl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Yxl=0
loop
exitwhen Yxl>3
set Vvl=k[Yxl]
set Bvl=$414D637A
call UnitAddAbility(Vvl,Bvl)
set Yxl=Yxl+1
endloop
endif
set qW=qW-1
set kxl=null
set jxl=null
set mxl=null
set Qxl=null
set Wxl=null
set Exl=null
set Zxl=null
set Pxl=null
set Axl=null
set Dxl=null
set Hxl=null
set Jxl=null
set Xxl=null
set Cxl=null
set Vxl=null
set Bxl=null
set Nxl=null
set uvl=null
set rvl=null
set svl=null
set tvl=null
set bvl=null
set Tvl=null
set mvl=null
set Hvl=null
set Vvl=null
endfunction
function S6w takes string S5w returns nothing
local integer c5w
local integer o5w
local string O5w
local real l5w
local string b5w
local real y5w
local timerdialog p5w
local player e5w
local real q5w
local real a5w
local unit n5w
local unit d5w
local unit f5w
local player R5w
local player T5w
local real Y5w
local real G5w
local unit g5w
local unit h5w
local unit F5w
local player k5w
local player j5w
local real x5w
local real v5w
local unit m5w
local unit Q5w
local unit W5w
local player E5w
local player Z5w
local real U5w
local real I5w
local unit P5w
local unit A5w
local unit D5w
local player H5w
local integer J5w
local string K5w
local integer L5w
local string X5w
local integer C5w
local integer V5w
local integer B5w
local string N5w
local integer M5w
local string w6w
local string u6w
local integer r6w
local real s6w
local integer t6w
local string i6w
set aW[qW]=S5w
set qW=qW+1
if GetClickedButton()==Rr[5] then
set Fu=true
set O5w="Mode: |cff00ff00Random|r / |cff0000FFCHAOS|r |cff00ff00ON|r"
set l5w=15.
set b5w=O5w
set y5w=l5w
call DisplayTimedTextToPlayer(IY,0.,0.,y5w,b5w)
call DialogClear(sr)
set p5w=tr
call DestroyTimerDialog(p5w)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set e5w=Yu
set n5w=k[0]
set q5w=GetUnitX(n5w)
set d5w=k[0]
set a5w=GetUnitY(d5w)
if GetLocalPlayer()==e5w then
call SetCameraPosition(q5w,a5w)
endif
set f5w=k[0]
set R5w=Yu
if GetLocalPlayer()==R5w then
call ClearSelection()
call SelectUnit(f5w,true)
endif
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set T5w=Tu
set g5w=k[1]
set Y5w=GetUnitX(g5w)
set h5w=k[1]
set G5w=GetUnitY(h5w)
if GetLocalPlayer()==T5w then
call SetCameraPosition(Y5w,G5w)
endif
set F5w=k[1]
set k5w=Tu
if GetLocalPlayer()==k5w then
call ClearSelection()
call SelectUnit(F5w,true)
endif
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set j5w=Gu
set m5w=k[2]
set x5w=GetUnitX(m5w)
set Q5w=k[2]
set v5w=GetUnitY(Q5w)
if GetLocalPlayer()==j5w then
call SetCameraPosition(x5w,v5w)
endif
set W5w=k[2]
set E5w=Gu
if GetLocalPlayer()==E5w then
call ClearSelection()
call SelectUnit(W5w,true)
endif
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set Z5w=gu
set P5w=k[3]
set U5w=GetUnitX(P5w)
set A5w=k[3]
set I5w=GetUnitY(A5w)
if GetLocalPlayer()==Z5w then
call SetCameraPosition(U5w,I5w)
endif
set D5w=k[3]
set H5w=gu
if GetLocalPlayer()==H5w then
call ClearSelection()
call SelectUnit(D5w,true)
endif
set J5w=gY
set K5w="when calling shuffle in NewRandom, line 87"
set aW[qW]=K5w
set qW=qW+1
if ok[J5w]==0 then
if J5w==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(J5w,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set L5w=gY
set X5w="when calling getFirst in NewRandom, line 88"
set aW[qW]=X5w
set qW=qW+1
if ok[L5w]==0 then
if L5w==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set V5w=L5w
set C5w=Hv[Kv[Vv[V5w]]]
set qW=qW-1
set c5w=C5w
set B5w=c5w
set N5w="when calling numRace in NewRandom, line 89"
set aW[qW]=N5w
set qW=qW+1
if B5w==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if B5w==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if B5w==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if B5w==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if B5w==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if B5w==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if B5w==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if B5w==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if B5w==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if B5w==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if B5w==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if B5w==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if B5w==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if B5w==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if B5w==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if B5w==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if B5w==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if B5w==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if B5w==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if B5w==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Yu,c5w,"when calling pickRaceRandom in NewRandom, line 90")
call eWp(gY,c5w,"when calling remove in NewRandom, line 91")
set M5w=gY
set w6w="when calling shuffle in NewRandom, line 92"
set aW[qW]=w6w
set qW=qW+1
if ok[M5w]==0 then
if M5w==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(M5w,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set u6w="when calling alloc_CallbackSingle_doAfter_NewRandom in NewRandom, line 93"
set aW[qW]=u6w
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set r6w=fF
set RF[r6w]=743
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NewRandom.","when calling error in NewRandom, line 93")
set r6w=0
endif
else
set dF=dF-1
set r6w=nF[dF]
set RF[r6w]=743
endif
set qW=qW-1
set o5w=r6w
set Pm[o5w]=c5w
set s6w=.5
set t6w=o5w
set i6w="when calling doAfter in NewRandom, line 93"
set aW[qW]=i6w
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),s6w,t6w,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set p5w=null
set e5w=null
set n5w=null
set d5w=null
set f5w=null
set R5w=null
set T5w=null
set g5w=null
set h5w=null
set F5w=null
set k5w=null
set j5w=null
set m5w=null
set Q5w=null
set W5w=null
set E5w=null
set Z5w=null
set P5w=null
set A5w=null
set D5w=null
set H5w=null
endfunction
function TYu takes string RRu returns nothing
local integer TRu
local integer YRu
local integer GRu
local integer gRu
local integer hRu
local integer FRu
local string kRu
local string jRu
local real xRu
local string vRu
local real mRu
local timerdialog QRu
local player WRu
local real ERu
local real ZRu
local unit URu
local unit IRu
local unit PRu
local player ARu
local player DRu
local real HRu
local real JRu
local unit KRu
local unit LRu
local unit XRu
local player CRu
local player VRu
local real BRu
local real NRu
local unit MRu
local unit wTu
local unit uTu
local player rTu
local player sTu
local real tTu
local real iTu
local unit STu
local unit cTu
local unit oTu
local player OTu
local integer lTu
local string bTu
local integer yTu
local string pTu
local integer eTu
local integer qTu
local player aTu
local integer nTu
local string dTu
local unit fTu
local integer RTu
local integer TTu
local string YTu
local integer GTu
local string gTu
local integer hTu
local integer FTu
local player kTu
local integer jTu
local string xTu
local unit vTu
local integer mTu
local integer QTu
local string WTu
local integer ETu
local string ZTu
local integer UTu
local integer ITu
local player PTu
local integer ATu
local string DTu
local unit HTu
local integer JTu
local integer KTu
local string LTu
local integer XTu
local string CTu
local integer VTu
local integer BTu
local player NTu
local integer MTu
local string wYu
local unit uYu
local integer rYu
local integer sYu
local string tYu
local integer iYu
local string SYu
local integer cYu
local integer oYu
local integer OYu
local texttag lYu
local integer bYu
local integer yYu
local integer pYu
local integer eYu
local string qYu
local real aYu
local integer nYu
local integer dYu
local integer fYu
local integer RYu
set aW[qW]=RRu
set qW=qW+1
if GetClickedButton()==Rr[2] then
set jRu="Mode: |cff1464afThree Race Pick|r / |cffFF0000Fast Mode|r |cffFF0000OFF|r"
set xRu=15.
set vRu=jRu
set mRu=xRu
call DisplayTimedTextToPlayer(IY,0.,0.,mRu,vRu)
call DialogClear(sr)
set QRu=tr
call DestroyTimerDialog(QRu)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set WRu=Yu
set URu=k[0]
set ERu=GetUnitX(URu)
set IRu=k[0]
set ZRu=GetUnitY(IRu)
if GetLocalPlayer()==WRu then
call SetCameraPosition(ERu,ZRu)
endif
set PRu=k[0]
set ARu=Yu
if GetLocalPlayer()==ARu then
call ClearSelection()
call SelectUnit(PRu,true)
endif
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set DRu=Tu
set KRu=k[1]
set HRu=GetUnitX(KRu)
set LRu=k[1]
set JRu=GetUnitY(LRu)
if GetLocalPlayer()==DRu then
call SetCameraPosition(HRu,JRu)
endif
set XRu=k[1]
set CRu=Tu
if GetLocalPlayer()==CRu then
call ClearSelection()
call SelectUnit(XRu,true)
endif
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set VRu=Gu
set MRu=k[2]
set BRu=GetUnitX(MRu)
set wTu=k[2]
set NRu=GetUnitY(wTu)
if GetLocalPlayer()==VRu then
call SetCameraPosition(BRu,NRu)
endif
set uTu=k[2]
set rTu=Gu
if GetLocalPlayer()==rTu then
call ClearSelection()
call SelectUnit(uTu,true)
endif
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set sTu=gu
set STu=k[3]
set tTu=GetUnitX(STu)
set cTu=k[3]
set iTu=GetUnitY(cTu)
if GetLocalPlayer()==sTu then
call SetCameraPosition(tTu,iTu)
endif
set oTu=k[3]
set OTu=gu
if GetLocalPlayer()==OTu then
call ClearSelection()
call SelectUnit(oTu,true)
endif
call TimerStart(ir,30.,false,Yrw)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
set lTu=hY
set bTu="when calling shuffle in ThreeRacePick, line 309"
set aW[qW]=bTu
set qW=qW+1
if ok[lTu]==0 then
if lTu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(lTu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TRu=1
loop
exitwhen TRu>3
set yTu=hY
set pTu="when calling getFirst in ThreeRacePick, line 312"
set aW[qW]=pTu
set qW=qW+1
if ok[yTu]==0 then
if yTu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set qTu=yTu
set eTu=Hv[Kv[Vv[qTu]]]
set qW=qW-1
set mg=eTu
set aTu=Yu
set nTu=mg
set dTu="when calling numRace1 in ThreeRacePick, line 313"
set aW[qW]=dTu
set qW=qW+1
if aTu==Yu then
if nTu==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if nTu==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if nTu==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if nTu==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if nTu==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if nTu==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if nTu==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if nTu==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if nTu==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if nTu==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if nTu==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if nTu==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if nTu==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if nTu==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if nTu==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if nTu==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if nTu==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if nTu==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if nTu==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if nTu==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if aTu==Tu then
if nTu==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if nTu==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if nTu==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if nTu==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if nTu==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if nTu==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if nTu==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if nTu==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if nTu==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if nTu==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if nTu==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if nTu==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if nTu==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if nTu==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if nTu==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if nTu==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if nTu==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if nTu==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if nTu==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if nTu==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if aTu==Gu then
if nTu==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if nTu==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if nTu==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if nTu==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if nTu==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if nTu==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if nTu==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if nTu==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if nTu==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if nTu==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if nTu==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if nTu==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if nTu==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if nTu==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if nTu==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if nTu==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if nTu==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if nTu==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if nTu==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if nTu==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if aTu==gu then
if nTu==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if nTu==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if nTu==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if nTu==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if nTu==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if nTu==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if nTu==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if nTu==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if nTu==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if nTu==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if nTu==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if nTu==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if nTu==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if nTu==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if nTu==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if nTu==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if nTu==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if nTu==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if nTu==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if nTu==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set fTu=k[0]
set RTu=mg
call UnitAddAbility(fTu,RTu)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 315")
set TTu=hY
set YTu="when calling shuffle in ThreeRacePick, line 316"
set aW[qW]=YTu
set qW=qW+1
if ok[TTu]==0 then
if TTu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(TTu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TRu=TRu+1
endloop
set YRu=1
loop
exitwhen YRu>3
set GTu=hY
set gTu="when calling getFirst in ThreeRacePick, line 319"
set aW[qW]=gTu
set qW=qW+1
if ok[GTu]==0 then
if GTu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set FTu=GTu
set hTu=Hv[Kv[Vv[FTu]]]
set qW=qW-1
set mg=hTu
set kTu=Tu
set jTu=mg
set xTu="when calling numRace1 in ThreeRacePick, line 320"
set aW[qW]=xTu
set qW=qW+1
if kTu==Yu then
if jTu==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if jTu==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if jTu==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if jTu==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if jTu==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if jTu==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if jTu==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if jTu==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if jTu==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if jTu==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if jTu==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if jTu==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if jTu==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if jTu==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if jTu==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if jTu==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if jTu==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if jTu==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if jTu==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if jTu==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if kTu==Tu then
if jTu==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if jTu==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if jTu==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if jTu==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if jTu==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if jTu==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if jTu==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if jTu==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if jTu==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if jTu==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if jTu==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if jTu==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if jTu==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if jTu==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if jTu==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if jTu==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if jTu==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if jTu==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if jTu==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if jTu==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if kTu==Gu then
if jTu==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if jTu==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if jTu==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if jTu==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if jTu==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if jTu==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if jTu==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if jTu==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if jTu==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if jTu==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if jTu==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if jTu==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if jTu==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if jTu==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if jTu==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if jTu==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if jTu==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if jTu==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if jTu==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if jTu==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if kTu==gu then
if jTu==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if jTu==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if jTu==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if jTu==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if jTu==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if jTu==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if jTu==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if jTu==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if jTu==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if jTu==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if jTu==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if jTu==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if jTu==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if jTu==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if jTu==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if jTu==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if jTu==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if jTu==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if jTu==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if jTu==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set vTu=k[1]
set mTu=mg
call UnitAddAbility(vTu,mTu)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 322")
set QTu=hY
set WTu="when calling shuffle in ThreeRacePick, line 323"
set aW[qW]=WTu
set qW=qW+1
if ok[QTu]==0 then
if QTu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(QTu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set YRu=YRu+1
endloop
set GRu=1
loop
exitwhen GRu>3
set ETu=hY
set ZTu="when calling getFirst in ThreeRacePick, line 326"
set aW[qW]=ZTu
set qW=qW+1
if ok[ETu]==0 then
if ETu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set ITu=ETu
set UTu=Hv[Kv[Vv[ITu]]]
set qW=qW-1
set mg=UTu
set PTu=Gu
set ATu=mg
set DTu="when calling numRace1 in ThreeRacePick, line 327"
set aW[qW]=DTu
set qW=qW+1
if PTu==Yu then
if ATu==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if ATu==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if ATu==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if ATu==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if ATu==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if ATu==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if ATu==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if ATu==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if ATu==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if ATu==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if ATu==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if ATu==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if ATu==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if ATu==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if ATu==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if ATu==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if ATu==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if ATu==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if ATu==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if ATu==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if PTu==Tu then
if ATu==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if ATu==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if ATu==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if ATu==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if ATu==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if ATu==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if ATu==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if ATu==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if ATu==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if ATu==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if ATu==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if ATu==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if ATu==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if ATu==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if ATu==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if ATu==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if ATu==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if ATu==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if ATu==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if ATu==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if PTu==Gu then
if ATu==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if ATu==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if ATu==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if ATu==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if ATu==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if ATu==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if ATu==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if ATu==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if ATu==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if ATu==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if ATu==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if ATu==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if ATu==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if ATu==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if ATu==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if ATu==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if ATu==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if ATu==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if ATu==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if ATu==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if PTu==gu then
if ATu==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if ATu==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if ATu==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if ATu==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if ATu==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if ATu==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if ATu==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if ATu==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if ATu==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if ATu==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if ATu==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if ATu==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if ATu==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if ATu==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if ATu==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if ATu==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if ATu==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if ATu==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if ATu==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if ATu==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set HTu=k[2]
set JTu=mg
call UnitAddAbility(HTu,JTu)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 329")
set KTu=hY
set LTu="when calling shuffle in ThreeRacePick, line 330"
set aW[qW]=LTu
set qW=qW+1
if ok[KTu]==0 then
if KTu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(KTu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set GRu=GRu+1
endloop
set gRu=1
loop
exitwhen gRu>3
set XTu=hY
set CTu="when calling getFirst in ThreeRacePick, line 333"
set aW[qW]=CTu
set qW=qW+1
if ok[XTu]==0 then
if XTu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set BTu=XTu
set VTu=Hv[Kv[Vv[BTu]]]
set qW=qW-1
set mg=VTu
set NTu=gu
set MTu=mg
set wYu="when calling numRace1 in ThreeRacePick, line 334"
set aW[qW]=wYu
set qW=qW+1
if NTu==Yu then
if MTu==$41313930 then
call x7s(Wg,1,"when calling add in ThreeRacePick, line 19")
endif
if MTu==$41313931 then
call x7s(Wg,2,"when calling add in ThreeRacePick, line 21")
endif
if MTu==$41313932 then
call x7s(Wg,3,"when calling add in ThreeRacePick, line 23")
endif
if MTu==$41313933 then
call x7s(Wg,4,"when calling add in ThreeRacePick, line 25")
endif
if MTu==$41313934 then
call x7s(Wg,5,"when calling add in ThreeRacePick, line 27")
endif
if MTu==$41313935 then
call x7s(Wg,6,"when calling add in ThreeRacePick, line 29")
endif
if MTu==$41313936 then
call x7s(Wg,7,"when calling add in ThreeRacePick, line 31")
endif
if MTu==$41313937 then
call x7s(Wg,8,"when calling add in ThreeRacePick, line 33")
endif
if MTu==$41313938 then
call x7s(Wg,9,"when calling add in ThreeRacePick, line 35")
endif
if MTu==$41313939 then
call x7s(Wg,10,"when calling add in ThreeRacePick, line 37")
endif
if MTu==$41313941 then
call x7s(Wg,11,"when calling add in ThreeRacePick, line 39")
endif
if MTu==$41313942 then
call x7s(Wg,12,"when calling add in ThreeRacePick, line 41")
endif
if MTu==$41313943 then
call x7s(Wg,13,"when calling add in ThreeRacePick, line 43")
endif
if MTu==$41313944 then
call x7s(Wg,14,"when calling add in ThreeRacePick, line 45")
endif
if MTu==$41313945 then
call x7s(Wg,15,"when calling add in ThreeRacePick, line 47")
endif
if MTu==$41313946 then
call x7s(Wg,16,"when calling add in ThreeRacePick, line 49")
endif
if MTu==$41313947 then
call x7s(Wg,17,"when calling add in ThreeRacePick, line 51")
endif
if MTu==$41313948 then
call x7s(Wg,18,"when calling add in ThreeRacePick, line 53")
endif
if MTu==$4131394A then
call x7s(Wg,19,"when calling add in ThreeRacePick, line 55")
endif
if MTu==$41313949 then
call x7s(Wg,20,"when calling add in ThreeRacePick, line 57")
endif
endif
if NTu==Tu then
if MTu==$41313930 then
call x7s(Eg,1,"when calling add in ThreeRacePick, line 60")
endif
if MTu==$41313931 then
call x7s(Eg,2,"when calling add in ThreeRacePick, line 62")
endif
if MTu==$41313932 then
call x7s(Eg,3,"when calling add in ThreeRacePick, line 64")
endif
if MTu==$41313933 then
call x7s(Eg,4,"when calling add in ThreeRacePick, line 66")
endif
if MTu==$41313934 then
call x7s(Eg,5,"when calling add in ThreeRacePick, line 68")
endif
if MTu==$41313935 then
call x7s(Eg,6,"when calling add in ThreeRacePick, line 70")
endif
if MTu==$41313936 then
call x7s(Eg,7,"when calling add in ThreeRacePick, line 72")
endif
if MTu==$41313937 then
call x7s(Eg,8,"when calling add in ThreeRacePick, line 74")
endif
if MTu==$41313938 then
call x7s(Eg,9,"when calling add in ThreeRacePick, line 76")
endif
if MTu==$41313939 then
call x7s(Eg,10,"when calling add in ThreeRacePick, line 78")
endif
if MTu==$41313941 then
call x7s(Eg,11,"when calling add in ThreeRacePick, line 80")
endif
if MTu==$41313942 then
call x7s(Eg,12,"when calling add in ThreeRacePick, line 82")
endif
if MTu==$41313943 then
call x7s(Eg,13,"when calling add in ThreeRacePick, line 84")
endif
if MTu==$41313944 then
call x7s(Eg,14,"when calling add in ThreeRacePick, line 86")
endif
if MTu==$41313945 then
call x7s(Eg,15,"when calling add in ThreeRacePick, line 88")
endif
if MTu==$41313946 then
call x7s(Eg,16,"when calling add in ThreeRacePick, line 90")
endif
if MTu==$41313947 then
call x7s(Eg,17,"when calling add in ThreeRacePick, line 92")
endif
if MTu==$41313948 then
call x7s(Eg,18,"when calling add in ThreeRacePick, line 94")
endif
if MTu==$4131394A then
call x7s(Eg,19,"when calling add in ThreeRacePick, line 96")
endif
if MTu==$41313949 then
call x7s(Eg,20,"when calling add in ThreeRacePick, line 98")
endif
endif
if NTu==Gu then
if MTu==$41313930 then
call x7s(Zg,1,"when calling add in ThreeRacePick, line 101")
endif
if MTu==$41313931 then
call x7s(Zg,2,"when calling add in ThreeRacePick, line 103")
endif
if MTu==$41313932 then
call x7s(Zg,3,"when calling add in ThreeRacePick, line 105")
endif
if MTu==$41313933 then
call x7s(Zg,4,"when calling add in ThreeRacePick, line 107")
endif
if MTu==$41313934 then
call x7s(Zg,5,"when calling add in ThreeRacePick, line 109")
endif
if MTu==$41313935 then
call x7s(Zg,6,"when calling add in ThreeRacePick, line 111")
endif
if MTu==$41313936 then
call x7s(Zg,7,"when calling add in ThreeRacePick, line 113")
endif
if MTu==$41313937 then
call x7s(Zg,8,"when calling add in ThreeRacePick, line 115")
endif
if MTu==$41313938 then
call x7s(Zg,9,"when calling add in ThreeRacePick, line 117")
endif
if MTu==$41313939 then
call x7s(Zg,10,"when calling add in ThreeRacePick, line 119")
endif
if MTu==$41313941 then
call x7s(Zg,11,"when calling add in ThreeRacePick, line 121")
endif
if MTu==$41313942 then
call x7s(Zg,12,"when calling add in ThreeRacePick, line 123")
endif
if MTu==$41313943 then
call x7s(Zg,13,"when calling add in ThreeRacePick, line 125")
endif
if MTu==$41313944 then
call x7s(Zg,14,"when calling add in ThreeRacePick, line 127")
endif
if MTu==$41313945 then
call x7s(Zg,15,"when calling add in ThreeRacePick, line 129")
endif
if MTu==$41313946 then
call x7s(Zg,16,"when calling add in ThreeRacePick, line 131")
endif
if MTu==$41313947 then
call x7s(Zg,17,"when calling add in ThreeRacePick, line 133")
endif
if MTu==$41313948 then
call x7s(Zg,18,"when calling add in ThreeRacePick, line 135")
endif
if MTu==$4131394A then
call x7s(Zg,19,"when calling add in ThreeRacePick, line 137")
endif
if MTu==$41313949 then
call x7s(Zg,20,"when calling add in ThreeRacePick, line 139")
endif
endif
if NTu==gu then
if MTu==$41313930 then
call x7s(Ug,1,"when calling add in ThreeRacePick, line 142")
endif
if MTu==$41313931 then
call x7s(Ug,2,"when calling add in ThreeRacePick, line 144")
endif
if MTu==$41313932 then
call x7s(Ug,3,"when calling add in ThreeRacePick, line 146")
endif
if MTu==$41313933 then
call x7s(Ug,4,"when calling add in ThreeRacePick, line 148")
endif
if MTu==$41313934 then
call x7s(Ug,5,"when calling add in ThreeRacePick, line 150")
endif
if MTu==$41313935 then
call x7s(Ug,6,"when calling add in ThreeRacePick, line 152")
endif
if MTu==$41313936 then
call x7s(Ug,7,"when calling add in ThreeRacePick, line 154")
endif
if MTu==$41313937 then
call x7s(Ug,8,"when calling add in ThreeRacePick, line 156")
endif
if MTu==$41313938 then
call x7s(Ug,9,"when calling add in ThreeRacePick, line 158")
endif
if MTu==$41313939 then
call x7s(Ug,10,"when calling add in ThreeRacePick, line 160")
endif
if MTu==$41313941 then
call x7s(Ug,11,"when calling add in ThreeRacePick, line 162")
endif
if MTu==$41313942 then
call x7s(Ug,12,"when calling add in ThreeRacePick, line 164")
endif
if MTu==$41313943 then
call x7s(Ug,13,"when calling add in ThreeRacePick, line 166")
endif
if MTu==$41313944 then
call x7s(Ug,14,"when calling add in ThreeRacePick, line 168")
endif
if MTu==$41313945 then
call x7s(Ug,15,"when calling add in ThreeRacePick, line 170")
endif
if MTu==$41313946 then
call x7s(Ug,16,"when calling add in ThreeRacePick, line 172")
endif
if MTu==$41313947 then
call x7s(Ug,17,"when calling add in ThreeRacePick, line 174")
endif
if MTu==$41313948 then
call x7s(Ug,18,"when calling add in ThreeRacePick, line 176")
endif
if MTu==$4131394A then
call x7s(Ug,19,"when calling add in ThreeRacePick, line 178")
endif
if MTu==$41313949 then
call x7s(Ug,20,"when calling add in ThreeRacePick, line 180")
endif
endif
set qW=qW-1
set uYu=k[3]
set rYu=mg
call UnitAddAbility(uYu,rYu)
call eWp(hY,mg,"when calling remove in ThreeRacePick, line 336")
set sYu=hY
set tYu="when calling shuffle in ThreeRacePick, line 337"
set aW[qW]=tYu
set qW=qW+1
if ok[sYu]==0 then
if sYu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sYu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set gRu=gRu+1
endloop
set hRu=0
loop
exitwhen hRu>7
set iYu=hY
set SYu="when calling getFirst in ThreeRacePick, line 340"
set aW[qW]=SYu
set qW=qW+1
if ok[iYu]==0 then
if iYu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set oYu=iYu
set cYu=Hv[Kv[Vv[oYu]]]
set qW=qW-1
set FRu=cYu
set kRu=Wyc(FRu)
set OYu=220-100*hRu
set kY[hRu]=L5u(40.,OYu*1.,128.,kRu,10.)
set lYu=kY[hRu]
set nYu=255
set dYu=6
set fYu=6
set RYu=255
set bYu=nYu
set yYu=dYu
set pYu=fYu
set eYu=RYu
call SetTextTagColor(lYu,bYu,yYu,pYu,eYu)
set qYu=kRu
set aYu=10.
call DisplayTimedTextToPlayer(IY,0.,0.,aYu,qYu)
call eWp(hY,FRu,"when calling remove in ThreeRacePick, line 345")
set hRu=hRu+1
endloop
endif
set qW=qW-1
set QRu=null
set WRu=null
set URu=null
set IRu=null
set PRu=null
set ARu=null
set DRu=null
set KRu=null
set LRu=null
set XRu=null
set CRu=null
set VRu=null
set MRu=null
set wTu=null
set uTu=null
set rTu=null
set sTu=null
set STu=null
set cTu=null
set oTu=null
set OTu=null
set aTu=null
set fTu=null
set kTu=null
set vTu=null
set PTu=null
set HTu=null
set NTu=null
set uYu=null
set lYu=null
endfunction
function dKu takes string pJu returns nothing
local integer eJu
local integer qJu
local string aJu
local real nJu
local string dJu
local real fJu
local trigger RJu
local string TJu
local real YJu
local string GJu
local real gJu
local timerdialog hJu
local trigger FJu
local trigger kJu
local trigger jJu
local trigger xJu
local integer vJu
local string mJu
local texttag QJu
local integer WJu
local integer EJu
local integer ZJu
local integer UJu
local texttag IJu
local integer PJu
local integer AJu
local integer DJu
local integer HJu
local string JJu
local integer KJu
local unit LJu
local integer XJu
local unit CJu
local integer VJu
local unit BJu
local integer NJu
local unit MJu
local integer wKu
local unit uKu
local integer rKu
local unit sKu
local player tKu
local playerstate iKu
local integer SKu
local unit cKu
local player oKu
local timerdialog OKu
local integer lKu
local integer bKu
local integer yKu
local integer pKu
local integer eKu
local integer qKu
local integer aKu
local integer nKu
set aW[qW]=pJu
set qW=qW+1
if GetClickedButton()==Rr[7] then
set xu=true
set ju=true
set aJu="Mode: |cffF88017Tournament Mode|r / |cffa020f0Double Bonus|r |cffFF0000OFF|r"
set nJu=15.
set dJu=aJu
set fJu=nJu
call DisplayTimedTextToPlayer(IY,0.,0.,fJu,dJu)
if ju==true then
set RJu=Vo
call DisableTrigger(RJu)
set TJu="Mode: |cffFFFF00Hard Mode|r |cff00ff00ON|r"
set YJu=15.
set GJu=TJu
set gJu=YJu
call DisplayTimedTextToPlayer(IY,0.,0.,gJu,GJu)
endif
call DialogClear(sr)
set hJu=tr
call DestroyTimerDialog(hJu)
set k[0]=CreateUnit(Yu,$7530305A,50.,-650.,0.)
set k[1]=CreateUnit(Tu,$7530305A,50.,650.,0.)
set k[2]=CreateUnit(Gu,$7530305A,-650.,50.,0.)
set k[3]=CreateUnit(gu,$7530305A,650.,50.,0.)
set vu=true
set FJu=Bg
call EnableTrigger(FJu)
set kJu=un
call DisableTrigger(kJu)
set jJu=Na
call DisableTrigger(jJu)
set xJu=rn
call DisableTrigger(xJu)
set vJu=hY
set mJu="when calling shuffle in TournamentMode, line 181"
set aW[qW]=mJu
set qW=qW+1
if ok[vJu]==0 then
if vJu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(vJu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TY=L5u(-150.,540.,128.,"AutoBan:",10.)
set QJu=TY
set lKu=255
set bKu=106
set yKu=6
set pKu=255
set WJu=lKu
set EJu=bKu
set ZJu=yKu
set UJu=pKu
call SetTextTagColor(QJu,WJu,EJu,ZJu,UJu)
set YY=L5u(150.,540.,128.,"PlayerBan:",10.)
set IJu=YY
set eKu=255
set qKu=6
set aKu=6
set nKu=255
set PJu=eKu
set AJu=qKu
set DJu=aKu
set HJu=nKu
call SetTextTagColor(IJu,PJu,AJu,DJu,HJu)
set JJu="when calling alloc_CallbackPeriodic_doPeriodically_TournamentMode in TournamentMode, line 186"
set aW[qW]=JJu
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set KJu=GF
set gF[KJu]=666
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_TournamentMode.","when calling error in TournamentMode, line 186")
set KJu=0
endif
else
set YF=YF-1
set KJu=TF[YF]
set gF[KJu]=666
endif
set qW=qW-1
set eJu=KJu
call GtO(.25,eJu,"when calling doPeriodically in TournamentMode, line 186")
set qJu=0
loop
exitwhen qJu>3
set LJu=k[qJu]
set XJu=$50494331
call UnitAddAbility(LJu,XJu)
set CJu=k[qJu]
set VJu=$50494332
call UnitAddAbility(CJu,VJu)
set BJu=k[qJu]
set NJu=$50494333
call UnitAddAbility(BJu,NJu)
set MJu=k[qJu]
set wKu=$50494334
call UnitAddAbility(MJu,wKu)
set uKu=k[qJu]
set rKu=$50494335
call UnitAddAbility(uKu,rKu)
set sKu=k[qJu]
call ShowUnit(sKu,false)
set tKu=Player(qJu)
set iKu=PLAYER_STATE_RESOURCE_FOOD_USED
set SKu=0
call SetPlayerState(tKu,iKu,SKu)
set cKu=k[1]
call ShowUnit(cKu,true)
call TimerStart(ir,30.,false,mrw)
set tr=CreateTimerDialog(ir)
set OKu=tr
set oKu=Tu
call TimerDialogSetTitle(OKu,GetPlayerName(oKu)+" ban race")
call TimerDialogDisplay(tr,true)
set qJu=qJu+1
endloop
endif
set qW=qW-1
set RJu=null
set hJu=null
set FJu=null
set kJu=null
set jJu=null
set xJu=null
set QJu=null
set IJu=null
set LJu=null
set CJu=null
set BJu=null
set MJu=null
set uKu=null
set sKu=null
set tKu=null
set iKu=null
set cKu=null
set oKu=null
set OKu=null
endfunction
function IVr takes string UVr returns nothing
set aW[qW]=UVr
set qW=qW+1
if er=="nr" then
call Nvl("when calling _New_Random_ in ResolveHCLMode, line 12")
elseif er=="tp" then
call TYu("when calling threeRacePick in ResolveHCLMode, line 14")
elseif er=="tm" then
call Bfr("when calling tournamentmodePickRace in ResolveHCLMode, line 16")
elseif er=="db" then
call u2b("when calling tournamentmodePickRace_DB in ResolveHCLMode, line 18")
elseif er=="ap" then
call RWu()
elseif er=="cm" then
call S6w("when calling _New_Random_C in ResolveHCLMode, line 22")
elseif er=="fm" then
call LZs("when calling threeRacePickM in ResolveHCLMode, line 24")
elseif er=="th" then
call dKu("when calling tournamentmodePickRace_HD in ResolveHCLMode, line 26")
else
call Lkp()
endif
set qW=qW-1
endfunction
function KBt takes nothing returns nothing
set qW=0
call IVr("via function reference ResolveHCLMode, line 31")
endfunction
function Q8i takes string P7i returns nothing
local integer A7i
local unit D7i
local integer H7i
local unit J7i
local integer K7i
local unit L7i
local real X7i
local real C7i
local real V7i
local real B7i
local player N7i
local integer M7i
local unit w8i
local integer u8i
local unit r8i
local unit s8i
local unit t8i
local unit i8i
local real S8i
local unit c8i
local integer o8i
local unit O8i
local integer l8i
local integer b8i
local unit y8i
local string p8i
local real e8i
local real q8i
local unit a8i
local integer n8i
local unit d8i
local unit f8i
local unit R8i
local unit T8i
local unit Y8i
local string G8i
local integer g8i
local real h8i
local integer F8i
local string k8i
local player j8i
local real x8i
local real v8i
local real m8i
set aW[qW]=P7i
set qW=qW+1
set A7i=GetSpellAbilityId()
set D7i=GetSpellAbilityUnit()
if A7i==$41323631 then
set w8i=D7i
set u8i=$41323631
set H7i=GetUnitAbilityLevel(w8i,u8i)
set r8i=D7i
set j8i=GetOwningPlayer(r8i)
set s8i=D7i
set x8i=GetUnitX(s8i)
set t8i=D7i
set J7i=CreateUnit(j8i,$75303030,x8i,GetUnitY(t8i),0.)
set i8i=J7i
set S8i=23.
call UnitApplyTimedLife(i8i,$42544C46,S8i)
set c8i=J7i
set o8i=$41323632
call UnitAddAbility(c8i,o8i)
set O8i=J7i
set l8i=$41323632
set b8i=H7i
call SetUnitAbilityLevel(O8i,l8i,b8i)
set y8i=J7i
set p8i="volcano"
set v8i=GetSpellTargetX()
set m8i=GetSpellTargetY()
set e8i=v8i
set q8i=m8i
call IssuePointOrder(y8i,p8i,e8i,q8i)
endif
if A7i==$41323635 then
set a8i=D7i
set n8i=$41323635
set K7i=GetUnitAbilityLevel(a8i,n8i)
set L7i=GetTriggerUnit()
set d8i=D7i
set X7i=GetUnitX(d8i)
set f8i=D7i
set C7i=GetUnitY(f8i)
set R8i=L7i
set V7i=GetUnitX(R8i)
set T8i=L7i
set B7i=GetUnitY(T8i)
set Y8i=D7i
set N7i=GetOwningPlayer(Y8i)
set G8i="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_GuffRunetotem in GuffRunetotem, line 511"
set aW[qW]=G8i
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set g8i=fF
set RF[g8i]=815
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_GuffRunetotem.","when calling error in GuffRunetotem, line 511")
set g8i=0
endif
else
set dF=dF-1
set g8i=nF[dF]
set RF[g8i]=815
endif
set qW=qW-1
set M7i=g8i
set ax[M7i]=N7i
set nx[M7i]=X7i
set dx[M7i]=C7i
set fx[M7i]=D7i
set Rx[M7i]=K7i
set Tx[M7i]=V7i
set Yx[M7i]=B7i
set h8i=.3
set F8i=M7i
set k8i="when calling doAfter in GuffRunetotem, line 511"
set aW[qW]=k8i
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),h8i,F8i,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set D7i=null
set J7i=null
set L7i=null
set N7i=null
set w8i=null
set r8i=null
set s8i=null
set t8i=null
set i8i=null
set c8i=null
set O8i=null
set y8i=null
set a8i=null
set d8i=null
set f8i=null
set R8i=null
set T8i=null
set Y8i=null
set j8i=null
endfunction
function KCO takes nothing returns nothing
set qW=0
call Q8i("via function reference GuffRunetotem, line 493")
endfunction
function KCb takes nothing returns nothing
call RemoveItem(GetEnumItem())
endfunction
function KIS takes string smS returns nothing
local integer tmS
local player imS
local integer SmS
local integer cmS
local integer omS
local integer OmS
local integer lmS
local integer bmS
local integer ymS
local unit pmS
local unit emS
local integer qmS
local sound amS
local integer nmS
local string dmS
local string fmS
local real RmS
local string TmS
local real YmS
local trigger GmS
local trigger gmS
local trigger hmS
local trigger FmS
local trigger kmS
local integer jmS
local string xmS
local string vmS
local real mmS
local string QmS
local real WmS
local trigger EmS
local trigger ZmS
local trigger UmS
local trigger ImS
local trigger PmS
local integer AmS
local string DmS
local string HmS
local real JmS
local string KmS
local real LmS
local trigger XmS
local trigger CmS
local trigger VmS
local trigger BmS
local trigger NmS
local integer MmS
local string wQS
local string uQS
local real rQS
local string sQS
local real tQS
local integer iQS
local string SQS
local string cQS
local real oQS
local string OQS
local real lQS
local trigger bQS
local trigger yQS
local integer pQS
local string eQS
local string qQS
local real aQS
local string nQS
local real dQS
local trigger fQS
local trigger RQS
local trigger TQS
local trigger YQS
local integer GQS
local string gQS
local string hQS
local real FQS
local string kQS
local real jQS
local trigger xQS
local trigger vQS
local integer mQS
local string QQS
local string WQS
local real EQS
local string ZQS
local real UQS
local trigger IQS
local trigger PQS
local trigger AQS
local integer DQS
local string HQS
local string JQS
local real KQS
local string LQS
local real XQS
local trigger CQS
local integer VQS
local string BQS
local string NQS
local real MQS
local string wWS
local real uWS
local trigger rWS
local trigger sWS
local integer tWS
local string iWS
local string SWS
local real cWS
local string oWS
local real OWS
local trigger lWS
local trigger bWS
local integer yWS
local string pWS
local string eWS
local real qWS
local string aWS
local real nWS
local trigger dWS
local trigger fWS
local integer RWS
local string TWS
local string YWS
local real GWS
local string gWS
local real hWS
local trigger FWS
local integer kWS
local string jWS
local string xWS
local real vWS
local string mWS
local real QWS
local trigger WWS
local trigger EWS
local integer ZWS
local string UWS
local string IWS
local real PWS
local string AWS
local real DWS
local trigger HWS
local trigger JWS
local trigger KWS
local trigger LWS
local integer XWS
local string CWS
local string VWS
local real BWS
local string NWS
local real MWS
local trigger wES
local trigger uES
local trigger rES
local integer sES
local string tES
local string iES
local real SES
local string cES
local real oES
local trigger OES
local trigger lES
local trigger bES
local trigger yES
local trigger pES
local integer eES
local string qES
local string aES
local real nES
local string dES
local real fES
local trigger RES
local trigger TES
local integer YES
local string GES
local string gES
local real hES
local string FES
local real kES
local trigger jES
local trigger xES
local integer vES
local string mES
local string QES
local real WES
local string EES
local real ZES
local trigger UES
local trigger IES
local trigger PES
local trigger AES
local unit DES
local integer HES
local integer JES
local integer KES
local integer LES
local unit XES
local integer CES
local integer VES
local integer BES
local integer NES
local unit MES
local integer wZS
local integer uZS
local integer rZS
local integer sZS
local unit tZS
local integer iZS
local integer SZS
local integer cZS
local integer oZS
local player OZS
local real lZS
local real bZS
local unit yZS
local unit pZS
local unit eZS
local integer qZS
local unit aZS
local player nZS
local real dZS
local real fZS
local unit RZS
local unit TZS
local unit YZS
local timerdialog GZS
local player gZS
local unit hZS
local integer FZS
local unit kZS
local player jZS
local real xZS
local real vZS
local unit mZS
local unit QZS
local unit WZS
local timerdialog EZS
local player ZZS
local unit UZS
local integer IZS
local unit PZS
local player AZS
local real DZS
local real HZS
local unit JZS
local unit KZS
local unit LZS
local timerdialog XZS
local player CZS
local unit VZS
local integer BZS
local unit NZS
local timerdialog MZS
local trigger wUS
local player uUS
local unit rUS
local unit sUS
local player tUS
local integer iUS
local real SUS
local real cUS
local real oUS
local real OUS
local unit lUS
local player bUS
local player yUS
local integer pUS
local real eUS
local real qUS
local real aUS
local real nUS
local unit dUS
local player fUS
local player RUS
local integer TUS
local real YUS
local real GUS
local real gUS
local real hUS
local unit FUS
local player kUS
local player jUS
local real xUS
local real vUS
local unit mUS
local unit QUS
local player WUS
local integer EUS
local player ZUS
local integer UUS
local player IUS
local integer PUS
local player AUS
local integer DUS
local player HUS
local integer JUS
local player KUS
local integer LUS
local player XUS
local integer CUS
local player VUS
local integer BUS
local player NUS
local integer MUS
local player wIS
local integer uIS
local player rIS
local integer sIS
local player tIS
local integer iIS
local player SIS
local integer cIS
local player oIS
local integer OIS
local player lIS
local integer bIS
local player yIS
local integer pIS
local timerdialog eIS
local timerdialog qIS
local timerdialog aIS
local timerdialog nIS
local real dIS
local player fIS
local integer RIS
local real TIS
local real YIS
local player GIS
local integer gIS
local real hIS
local real FIS
local player kIS
local integer jIS
local real xIS
local real vIS
local real mIS
local real QIS
local real WIS
local real EIS
local real ZIS
local real UIS
local real IIS
local real PIS
local real AIS
local real DIS
local real HIS
local real JIS
set aW[qW]=smS
set qW=qW+1
set tmS=GetSpellAbilityId()
set pmS=GetSpellAbilityUnit()
set imS=GetOwningPlayer(pmS)
set SmS=GetPlayerId(imS)
if vu==false then
set br=br+1
set cmS=0
loop
exitwhen cmS>3
set emS=k[cmS]
set qmS=tmS
call UnitRemoveAbility(emS,qmS)
set cmS=cmS+1
endloop
set amS=bj_questUpdatedSound
call StartSound(amS)
if tmS==$41313930 then
set nmS=$41313930
set dmS="when calling numRace in PickRace, line 237"
set aW[qW]=dmS
set qW=qW+1
if nmS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if nmS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if nmS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if nmS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if nmS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if nmS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if nmS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if nmS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if nmS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if nmS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if nmS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if nmS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if nmS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if nmS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if nmS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if nmS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if nmS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if nmS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if nmS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if nmS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set fmS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff22832fPandaren|r!"
set RmS=30.
set TmS=fmS
set YmS=RmS
call DisplayTimedTextToPlayer(IY,0.,0.,YmS,TmS)
call SetPlayerTechResearched(imS,$526E7369,2)
set GmS=dn
call EnableTrigger(GmS)
set gmS=BY
call EnableTrigger(gmS)
set hmS=NY
call EnableTrigger(hmS)
set FmS=tg
call EnableTrigger(FmS)
set kmS=yY
call EnableTrigger(kmS)
set u[SmS]=1
set w[SmS]=$414D3176
set j[SmS]=$414D3175
set r[SmS]=$484D306B
set s[SmS]=$484D306A
set t[SmS]=$484D3068
set i[SmS]=$484D3069
set v[SmS]=$78303073
set m[SmS]=$78303074
set Q[SmS]=$78303075
set W[SmS]=$78303172
set E[SmS]=$78303173
set Z[SmS]=$78303174
set U[SmS]=$78303175
set I[SmS]=$7830317A
set P[SmS]=$78303275
set A[SmS]=$6E30304F
set D[SmS]=$78303176
set H[SmS]=$78303177
set J[SmS]=$7830316D
set K[SmS]=$6E303051
set L[SmS]=$78303178
set V[SmS]=$524D3073
set B[SmS]=$524D3074
set N[SmS]=$524D3077
set M[SmS]=$524D3075
set ww[SmS]=$524D3076
set uw[SmS]=$52303331
set rw[SmS]=$524D3163
set sw[SmS]=$524D3166
set tw[SmS]=$524D3165
set iw[SmS]=$524D3169
set Sw[SmS]=$524D3167
set cw[SmS]=$524D316A
set ow[SmS]=$524D3139
set Ow[SmS]=$524D3164
set lw[SmS]=$6E303045
set bw[SmS]=$68303143
set yw[SmS]=$6E656630
set pw[SmS]=$6E303047
set ew[SmS]=$6E303048
set qw[SmS]=$6E303049
set aw[SmS]=$6E30304A
set nw[SmS]=$6E30304B
set dw[SmS]=$6E30324D
set fw[SmS]=$6E30324E
call SetPlayerTechMaxAllowed(Player(SmS),$484D3033,0)
endif
if tmS==$41313931 then
set jmS=$41313931
set xmS="when calling numRace in PickRace, line 301"
set aW[qW]=xmS
set qW=qW+1
if jmS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if jmS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if jmS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if jmS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if jmS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if jmS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if jmS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if jmS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if jmS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if jmS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if jmS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if jmS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if jmS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if jmS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if jmS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if jmS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if jmS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if jmS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if jmS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if jmS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set vmS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff9400D3Arakkoa|r!"
set mmS=30.
set QmS=vmS
set WmS=mmS
call DisplayTimedTextToPlayer(IY,0.,0.,WmS,QmS)
call SetPlayerTechResearched(imS,$526E7369,3)
call GetTriggerPlayer()
set EmS=cn
call EnableTrigger(EmS)
set ZmS=eg
call EnableTrigger(ZmS)
set UmS=qg
call EnableTrigger(UmS)
set ImS=PO
call EnableTrigger(ImS)
set PmS=uY
call EnableTrigger(PmS)
set u[SmS]=2
set w[SmS]=$414D3039
set j[SmS]=$78303035
set r[SmS]=$48303247
set s[SmS]=$48303248
set t[SmS]=$48303249
set i[SmS]=$4830324A
set v[SmS]=$78323232
set m[SmS]=$78303033
set Q[SmS]=$78303034
set W[SmS]=$7830307E
set E[SmS]=$78303121
set Z[SmS]=$78303130
set U[SmS]=$78303131
set I[SmS]=$78303072
set P[SmS]=$78303270
set A[SmS]=$78303039
set D[SmS]=$78303062
set H[SmS]=$78303063
set J[SmS]=$78303061
set K[SmS]=$7830326F
set L[SmS]=$78303071
set V[SmS]=$524D3031
set B[SmS]=$524D3032
set N[SmS]=$524D3036
set M[SmS]=$524D3033
set ww[SmS]=$524D3034
set uw[SmS]=$524D306A
set rw[SmS]=$524D3068
set sw[SmS]=$524D3070
set tw[SmS]=$524D3071
set iw[SmS]=$524D3072
set Sw[SmS]=$524D3067
set cw[SmS]=$524D3063
set ow[SmS]=$524D3069
set Ow[SmS]=$52303230
set lw[SmS]=$6E303044
set bw[SmS]=$6E303043
set yw[SmS]=$6E303041
set pw[SmS]=$6E303042
set ew[SmS]=$78313131
set qw[SmS]=$78303064
set aw[SmS]=$78303036
set nw[SmS]=$6E303250
set dw[SmS]=$78303038
set fw[SmS]=$6E656630
call SetPlayerTechMaxAllowed(Player(SmS),$4830324B,0)
endif
if tmS==$41313932 then
set AmS=$41313932
set DmS="when calling numRace in PickRace, line 362"
set aW[qW]=DmS
set qW=qW+1
if AmS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if AmS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if AmS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if AmS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if AmS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if AmS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if AmS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if AmS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if AmS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if AmS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if AmS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if AmS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if AmS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if AmS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if AmS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if AmS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if AmS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if AmS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if AmS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if AmS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set HmS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff1E90FFDraconid|r"
set JmS=30.
set KmS=HmS
set LmS=JmS
call DisplayTimedTextToPlayer(IY,0.,0.,LmS,KmS)
call SetPlayerTechResearched(imS,$526E7369,2)
set gd=GetTriggerPlayer()
set XmS=WR
call EnableTrigger(XmS)
set CmS=HG
call EnableTrigger(CmS)
set VmS=bn
call EnableTrigger(VmS)
set BmS=tY
call EnableTrigger(BmS)
set NmS=ma
call EnableTrigger(NmS)
set u[SmS]=3
set w[SmS]=$41305635
set j[SmS]=$41305634
set r[SmS]=$55303041
set s[SmS]=$55303042
set t[SmS]=$55303043
set i[SmS]=$55303045
set v[SmS]=$6F303246
set m[SmS]=$6F303247
set Q[SmS]=$6F303248
set W[SmS]=$6F303250
set E[SmS]=$6F303251
set Z[SmS]=$6F303252
set U[SmS]=$6F303253
set I[SmS]=$6F30324F
set P[SmS]=$6E303054
set A[SmS]=$6F303249
set D[SmS]=$6F30324A
set H[SmS]=$6F30324B
set J[SmS]=$6F30324C
set K[SmS]=$6F30324D
set L[SmS]=$6F30324E
set V[SmS]=$5230345A
set B[SmS]=$52303534
set N[SmS]=$52303545
set M[SmS]=$52303537
set ww[SmS]=$52303539
set uw[SmS]=$52303546
set rw[SmS]=$52303547
set sw[SmS]=$52303548
set tw[SmS]=$52303549
set iw[SmS]=$5230354A
set Sw[SmS]=$5230354B
set cw[SmS]=$5230354C
set ow[SmS]=$5230354D
set Ow[SmS]=$5230354E
set lw[SmS]=$6E303059
set bw[SmS]=$6E30305A
set yw[SmS]=$6E303131
set pw[SmS]=$6E303133
set ew[SmS]=$6E303134
set qw[SmS]=$6E303136
set aw[SmS]=$6E656630
set nw[SmS]=$6E303242
set dw[SmS]=$6E303248
set fw[SmS]=$6E303246
call SetPlayerTechMaxAllowed(Player(SmS),$55303046,0)
call SetPlayerTechMaxAllowed(Player(SmS),$55303048,0)
call SetPlayerTechMaxAllowed(Player(SmS),$5530304A,0)
call SetPlayerTechMaxAllowed(Player(SmS),$55303049,0)
call SetPlayerTechMaxAllowed(Player(SmS),$55303047,0)
call SetPlayerTechMaxAllowed(Player(SmS),$5530304D,0)
endif
if tmS==$41313933 then
set MmS=$41313933
set wQS="when calling numRace in PickRace, line 428"
set aW[qW]=wQS
set qW=qW+1
if MmS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if MmS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if MmS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if MmS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if MmS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if MmS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if MmS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if MmS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if MmS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if MmS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if MmS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if MmS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if MmS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if MmS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if MmS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if MmS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if MmS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if MmS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if MmS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if MmS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set uQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff00b7ffRogue|r"
set rQS=30.
set sQS=uQS
set tQS=rQS
call DisplayTimedTextToPlayer(IY,0.,0.,tQS,sQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set u[SmS]=4
set w[SmS]=$414D3132
set j[SmS]=$78303068
set r[SmS]=$484D3064
set s[SmS]=$484D3067
set t[SmS]=$484D3066
set i[SmS]=$484D3065
set v[SmS]=$6F303243
set m[SmS]=$78303066
set Q[SmS]=$78303067
set W[SmS]=$78303234
set E[SmS]=$78303235
set Z[SmS]=$78303236
set U[SmS]=$78303237
set I[SmS]=$78303233
set P[SmS]=$78303276
set A[SmS]=$6E656E66
set D[SmS]=$6E627267
set H[SmS]=$6E6D6564
set J[SmS]=$6E616E6F
set K[SmS]=$7830317D
set L[SmS]=$7830317E
set V[SmS]=$524D306C
set B[SmS]=$524D306E
set N[SmS]=$414D3131
set M[SmS]=$524D306D
set ww[SmS]=$524D306F
set uw[SmS]=$52303535
set rw[SmS]=$524D316B
set sw[SmS]=$52303543
set tw[SmS]=$524D316E
set iw[SmS]=$52303538
set Sw[SmS]=$52303541
set cw[SmS]=$524D316D
set ow[SmS]=$52303536
set Ow[SmS]=$52303542
set lw[SmS]=$78303239
set bw[SmS]=$6E393931
set yw[SmS]=$6E30324F
set pw[SmS]=$78303230
set ew[SmS]=$78303232
set qw[SmS]=$6E303245
set aw[SmS]=$78303231
set nw[SmS]=$65646162
set dw[SmS]=$78303221
set fw[SmS]=$6E656630
call SetPlayerTechMaxAllowed(Player(SmS),$456D3173,0)
endif
if tmS==$41313934 then
set iQS=$41313934
set SQS="when calling numRace in PickRace, line 483"
set aW[qW]=SQS
set qW=qW+1
if iQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if iQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if iQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if iQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if iQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if iQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if iQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if iQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if iQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if iQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if iQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if iQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if iQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if iQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if iQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if iQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if iQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if iQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if iQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if iQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set cQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffFF4500Vulpera|r!"
set oQS=30.
set OQS=cQS
set lQS=oQS
call DisplayTimedTextToPlayer(IY,0.,0.,lQS,OQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set bQS=Yn
call EnableTrigger(bQS)
set yQS=dY
call EnableTrigger(yQS)
set Ud=Player(SmS)
set u[SmS]=5
set w[SmS]=$41313037
set j[SmS]=$41313036
set r[SmS]=$4F303258
set s[SmS]=$4F303337
set t[SmS]=$4F303338
set i[SmS]=$4F303339
set v[SmS]=$6830315A
set m[SmS]=$6830314B
set Q[SmS]=$6830314C
set W[SmS]=$6830314E
set E[SmS]=$6830314F
set Z[SmS]=$68303150
set U[SmS]=$68303151
set I[SmS]=$6E303152
set P[SmS]=$6830314D
set A[SmS]=$6F303359
set D[SmS]=$6F30325A
set H[SmS]=$6F303330
set J[SmS]=$6F303331
set K[SmS]=$6F303332
set L[SmS]=$6F303333
set C[SmS]=$6E30314F
set V[SmS]=$52303550
set B[SmS]=$52303552
set N[SmS]=$52303556
set M[SmS]=$52303553
set ww[SmS]=$52303555
set uw[SmS]=$52303559
set rw[SmS]=$5230355A
set sw[SmS]=$52303631
set tw[SmS]=$52303638
set iw[SmS]=$52303639
set Sw[SmS]=$52303641
set cw[SmS]=$52303642
set ow[SmS]=$52303643
set Ow[SmS]=$52303644
set lw[SmS]=$68303152
set bw[SmS]=$6E30314B
set yw[SmS]=$68303154
set pw[SmS]=$68303155
set ew[SmS]=$68303156
set qw[SmS]=$6E30314D
set aw[SmS]=$6E656630
set nw[SmS]=$68303157
set dw[SmS]=$6E303150
set fw[SmS]=$6E303151
call SetPlayerTechMaxAllowed(Player(SmS),$4F303430,0)
call SetPlayerTechMaxAllowed(Player(SmS),$4F303344,0)
endif
if tmS==$41313935 then
set pQS=$41313935
set eQS="when calling numRace in PickRace, line 543"
set aW[qW]=eQS
set qW=qW+1
if pQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if pQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if pQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if pQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if pQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if pQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if pQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if pQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if pQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if pQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if pQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if pQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if pQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if pQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if pQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if pQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if pQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if pQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if pQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if pQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set qQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff8c00ffSatyr|r!"
set aQS=30.
set nQS=qQS
set dQS=aQS
call DisplayTimedTextToPlayer(IY,0.,0.,dQS,nQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set fQS=gn
call EnableTrigger(fQS)
set RQS=pY
call EnableTrigger(RQS)
set TQS=Da
call EnableTrigger(TQS)
set YQS=Fd
call EnableTrigger(YQS)
set u[SmS]=6
set w[SmS]=$414D3238
set j[SmS]=$414D3231
set r[SmS]=$484D3039
set s[SmS]=$484D3061
set t[SmS]=$484D3062
set i[SmS]=$484D3063
set v[SmS]=$75393954
set m[SmS]=$6E303156
set Q[SmS]=$6E303157
set W[SmS]=$68303158
set E[SmS]=$68303159
set Z[SmS]=$68303230
set U[SmS]=$68303231
set I[SmS]=$6F303343
set P[SmS]=$7830327B
set A[SmS]=$7830327E
set D[SmS]=$78303321
set H[SmS]=$78303279
set J[SmS]=$7830327C
set K[SmS]=$7830327D
set L[SmS]=$78303278
set V[SmS]=$524D307E
set B[SmS]=$524D3130
set N[SmS]=$414D3237
set M[SmS]=$524D3121
set ww[SmS]=$524D3131
set uw[SmS]=$524D3175
set rw[SmS]=$524D3178
set sw[SmS]=$524D3173
set tw[SmS]=$524D3135
set iw[SmS]=$524D3171
set Sw[SmS]=$524D316F
set cw[SmS]=$524D3170
set ow[SmS]=$524D3176
set Ow[SmS]=$524D3177
set lw[SmS]=$78303263
set bw[SmS]=$7830316C
set yw[SmS]=$7830326A
set pw[SmS]=$78303265
set ew[SmS]=$78303261
set qw[SmS]=$6E303053
set aw[SmS]=$6E303138
set nw[SmS]=$6F303256
set dw[SmS]=$6E656630
set fw[SmS]=$78303269
call SetPlayerTechMaxAllowed(Player(SmS),$484D3037,0)
call SetPlayerTechMaxAllowed(Player(SmS),$484D3036,0)
endif
if tmS==$41313936 then
set GQS=$41313936
set gQS="when calling numRace in PickRace, line 603"
set aW[qW]=gQS
set qW=qW+1
if GQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if GQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if GQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if GQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if GQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if GQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if GQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if GQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if GQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if GQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if GQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if GQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if GQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if GQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if GQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if GQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if GQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if GQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if GQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if GQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set hQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff1c86eeHuman|r!"
set FQS=30.
set kQS=hQS
set jQS=FQS
call DisplayTimedTextToPlayer(IY,0.,0.,jQS,kQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set xQS=en
call EnableTrigger(xQS)
set vQS=Gn
call EnableTrigger(vQS)
set u[SmS]=7
set w[SmS]=$4130364C
set j[SmS]=$41304E59
set r[SmS]=$4870616C
set s[SmS]=$4861706D
set t[SmS]=$48616D67
set i[SmS]=$4867616D
set v[SmS]=$6F303032
set m[SmS]=$6F303033
set Q[SmS]=$6F303034
set W[SmS]=$68303031
set E[SmS]=$68303044
set Z[SmS]=$68303043
set U[SmS]=$68303130
set I[SmS]=$6F303134
set P[SmS]=$6F30314D
set A[SmS]=$68666F6F
set D[SmS]=$6E676E61
set H[SmS]=$6E656D69
set J[SmS]=$686B6E69
set K[SmS]=$68677279
set L[SmS]=$68727474
set V[SmS]=$52686D65
set B[SmS]=$52686C68
set N[SmS]=$52687074
set M[SmS]=$52686172
set ww[SmS]=$52686163
set uw[SmS]=$52303030
set rw[SmS]=$52686465
set sw[SmS]=$52303031
set tw[SmS]=$52303032
set iw[SmS]=$52303033
set Sw[SmS]=$5268616E
set cw[SmS]=$5268666C
set ow[SmS]=$52303151
set Ow[SmS]=$5230344C
set lw[SmS]=$68777477
set bw[SmS]=$68677477
set yw[SmS]=$68626172
set pw[SmS]=$68766C74
set ew[SmS]=$68617273
set qw[SmS]=$6E6D7237
set aw[SmS]=$6E636238
set nw[SmS]=$6E636239
set dw[SmS]=$6E656630
set fw[SmS]=$6E636261
call SetPlayerTechMaxAllowed(Player(SmS),$486A6169,0)
endif
if tmS==$41313937 then
set mQS=$41313937
set QQS="when calling numRace in PickRace, line 661"
set aW[qW]=QQS
set qW=qW+1
if mQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if mQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if mQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if mQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if mQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if mQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if mQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if mQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if mQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if mQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if mQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if mQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if mQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if mQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if mQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if mQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if mQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if mQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if mQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if mQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set WQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff990012Orc|r!"
set EQS=30.
set ZQS=WQS
set UQS=EQS
call DisplayTimedTextToPlayer(IY,0.,0.,UQS,ZQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set IQS=nn
call EnableTrigger(IQS)
set PQS=Sn
call EnableTrigger(PQS)
set AQS=jG
call EnableTrigger(AQS)
set u[SmS]=8
set w[SmS]=$41304149
set j[SmS]=$41304F31
set r[SmS]=$4E627374
set s[SmS]=$4F677268
set t[SmS]=$4F746872
set i[SmS]=$4E736A73
set v[SmS]=$6F303042
set m[SmS]=$6F303043
set Q[SmS]=$6F303044
set W[SmS]=$68303034
set E[SmS]=$68303045
set Z[SmS]=$68303048
set U[SmS]=$68303133
set I[SmS]=$6F303132
set P[SmS]=$6F303150
set A[SmS]=$6F677275
set D[SmS]=$6E617373
set H[SmS]=$6F73686D
set J[SmS]=$6F726169
set K[SmS]=$6F777976
set L[SmS]=$6E636174
set V[SmS]=$526F7067
set B[SmS]=$526F7261
set N[SmS]=$52303731
set M[SmS]=$526F6172
set ww[SmS]=$526F7370
set uw[SmS]=$52303046
set rw[SmS]=$526F656E
set sw[SmS]=$526F7673
set tw[SmS]=$526F7262
set iw[SmS]=$52303047
set Sw[SmS]=$526F6266
set cw[SmS]=$52303048
set ow[SmS]=$52303154
set Ow[SmS]=$5230344E
set lw[SmS]=$6F626172
set bw[SmS]=$6E636231
set yw[SmS]=$6F667274
set pw[SmS]=$6E636233
set ew[SmS]=$6E636232
set qw[SmS]=$6E636230
set aw[SmS]=$6F626561
set nw[SmS]=$6E706772
set dw[SmS]=$6E656630
set fw[SmS]=$6E303144
call SetPlayerTechMaxAllowed(Player(SmS),$5530304C,0)
endif
if tmS==$41313938 then
set DQS=$41313938
set HQS="when calling numRace in PickRace, line 720"
set aW[qW]=HQS
set qW=qW+1
if DQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if DQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if DQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if DQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if DQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if DQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if DQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if DQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if DQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if DQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if DQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if DQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if DQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if DQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if DQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if DQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if DQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if DQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if DQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if DQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set JQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffFE8A0EDwarf|r!"
set KQS=30.
set LQS=JQS
set XQS=KQS
call DisplayTimedTextToPlayer(IY,0.,0.,XQS,LQS)
call SetPlayerTechResearched(imS,$526E7369,2)
set CQS=iY
call EnableTrigger(CQS)
set u[SmS]=9
set w[SmS]=$41304142
set j[SmS]=$41304F30
set r[SmS]=$486D6B67
set s[SmS]=$486B616C
set t[SmS]=$48616E74
set i[SmS]=$48686B6C
set v[SmS]=$6F303035
set m[SmS]=$6F303036
set Q[SmS]=$6F303030
set W[SmS]=$68303033
set E[SmS]=$68303046
set Z[SmS]=$68303047
set U[SmS]=$68303131
set I[SmS]=$6F303135
set P[SmS]=$6F30314E
set A[SmS]=$68686573
set D[SmS]=$68726966
set H[SmS]=$68637468
set J[SmS]=$686D7474
set K[SmS]=$68677972
set L[SmS]=$68626577
set V[SmS]=$52687274
set B[SmS]=$52687261
set N[SmS]=$52686364
set M[SmS]=$5268706D
set ww[SmS]=$52687365
set uw[SmS]=$52303034
set rw[SmS]=$52687373
set sw[SmS]=$52303035
set tw[SmS]=$52686762
set iw[SmS]=$52686673
set Sw[SmS]=$52303036
set cw[SmS]=$52303037
set ow[SmS]=$52303152
set Ow[SmS]=$52303346
set lw[SmS]=$68626C61
set bw[SmS]=$6861726D
set yw[SmS]=$68746F77
set pw[SmS]=$68677261
set ew[SmS]=$6E636232
set qw[SmS]=$68637477
set aw[SmS]=$6E646368
set nw[SmS]=$6E6D7233
set dw[SmS]=$6E656630
set fw[SmS]=$6E637432
endif
if tmS==$41313939 then
set VQS=$41313939
set BQS="when calling numRace in PickRace, line 776"
set aW[qW]=BQS
set qW=qW+1
if VQS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if VQS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if VQS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if VQS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if VQS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if VQS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if VQS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if VQS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if VQS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if VQS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if VQS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if VQS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if VQS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if VQS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if VQS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if VQS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if VQS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if VQS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if VQS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if VQS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set NQS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff00ff00Night Elf|r!"
set MQS=30.
set wWS=NQS
set uWS=MQS
call DisplayTimedTextToPlayer(IY,0.,0.,uWS,wWS)
call SetPlayerTechResearched(imS,$526E7369,3)
set rWS=an
call EnableTrigger(rWS)
set sWS=bY
call EnableTrigger(sWS)
set u[SmS]=10
set w[SmS]=$4130414E
set j[SmS]=$41304F37
set r[SmS]=$45777264
set s[SmS]=$456D6F6F
set t[SmS]=$45667572
set i[SmS]=$4563656E
set v[SmS]=$65303031
set m[SmS]=$65303032
set Q[SmS]=$65303030
set W[SmS]=$68303041
set E[SmS]=$68303056
set Z[SmS]=$68303055
set U[SmS]=$68303139
set I[SmS]=$6F303139
set P[SmS]=$6F303156
set A[SmS]=$65646F63
set D[SmS]=$65617263
set H[SmS]=$65646F74
set J[SmS]=$6573656E
set K[SmS]=$65687072
set L[SmS]=$6E6D7065
set V[SmS]=$5265736D
set B[SmS]=$52657377
set N[SmS]=$52656474
set M[SmS]=$52656D61
set ww[SmS]=$52656E62
set uw[SmS]=$52656562
set rw[SmS]=$52656873
set sw[SmS]=$52656D6B
set tw[SmS]=$52656962
set iw[SmS]=$52656D67
set Sw[SmS]=$52656563
set cw[SmS]=$52657268
set ow[SmS]=$5230315A
set Ow[SmS]=$5267666F
set lw[SmS]=$6E6D7236
set bw[SmS]=$65616F77
set yw[SmS]=$65616F6D
set pw[SmS]=$65616F65
set ew[SmS]=$65747270
set qw[SmS]=$65646F73
set aw[SmS]=$65746F6C
set nw[SmS]=$65646F62
set dw[SmS]=$6E656630
set fw[SmS]=$78303170
call SetPlayerTechMaxAllowed(Player(SmS),$456B6565,0)
call SetPlayerTechMaxAllowed(Player(SmS),$45303039,0)
endif
if tmS==$41313941 then
set tWS=$41313941
set iWS="when calling numRace in PickRace, line 834"
set aW[qW]=iWS
set qW=qW+1
if tWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if tWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if tWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if tWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if tWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if tWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if tWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if tWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if tWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if tWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if tWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if tWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if tWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if tWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if tWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if tWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if tWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if tWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if tWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if tWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set SWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffffff01Tauren|r!"
set cWS=30.
set oWS=SWS
set OWS=cWS
call DisplayTimedTextToPlayer(IY,0.,0.,OWS,oWS)
call SetPlayerTechResearched(imS,$526E7369,2)
set lWS=fn
call EnableTrigger(lWS)
set bWS=eY
call EnableTrigger(bWS)
set u[SmS]=11
set w[SmS]=$4130414B
set j[SmS]=$41304F33
set r[SmS]=$4F746368
set s[SmS]=$4F73616D
set t[SmS]=$4F676C64
set i[SmS]=$4F636232
set v[SmS]=$6F303041
set m[SmS]=$6F303049
set Q[SmS]=$6F303048
set W[SmS]=$68303035
set E[SmS]=$68303049
set Z[SmS]=$6830304C
set U[SmS]=$68303134
set I[SmS]=$6F303131
set P[SmS]=$6F303152
set A[SmS]=$6E62616E
set D[SmS]=$6E676E77
set H[SmS]=$6F737077
set J[SmS]=$6F746175
set K[SmS]=$6F776E72
set L[SmS]=$65696C77
set V[SmS]=$526F6D65
set B[SmS]=$526F6273
set N[SmS]=$526F7774
set M[SmS]=$526F7472
set ww[SmS]=$526F626B
set uw[SmS]=$52303050
set rw[SmS]=$5230335A
set sw[SmS]=$52303053
set tw[SmS]=$52303055
set iw[SmS]=$52303054
set Sw[SmS]=$52303052
set cw[SmS]=$52303056
set ow[SmS]=$52303156
set Ow[SmS]=$52303451
set lw[SmS]=$6E667431
set bw[SmS]=$6E636263
set yw[SmS]=$6E636264
set pw[SmS]=$6F74746F
set ew[SmS]=$6F737472
set qw[SmS]=$6F677265
set aw[SmS]=$6F666F72
set nw[SmS]=$6E6D7230
set dw[SmS]=$6E656630
set fw[SmS]=$6E6D7239
call SetPlayerTechMaxAllowed(Player(SmS),$4F303443,0)
call SetPlayerTechMaxAllowed(Player(SmS),$4F636268,0)
endif
if tmS==$41313942 then
set yWS=$41313942
set pWS="when calling numRace in PickRace, line 892"
set aW[qW]=pWS
set qW=qW+1
if yWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if yWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if yWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if yWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if yWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if yWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if yWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if yWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if yWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if yWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if yWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if yWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if yWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if yWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if yWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if yWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if yWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if yWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if yWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if yWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set eWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffff0000Blood Elf|r!"
set qWS=30.
set aWS=eWS
set nWS=qWS
call DisplayTimedTextToPlayer(IY,0.,0.,nWS,aWS)
call SetPlayerTechResearched(imS,$526E7369,3)
set dWS=On
call EnableTrigger(dWS)
set fWS=rY
call EnableTrigger(fWS)
set u[SmS]=12
set w[SmS]=$41304148
set j[SmS]=$41304F39
set r[SmS]=$45696C6C
set s[SmS]=$45776172
set t[SmS]=$48303238
set i[SmS]=$45747972
set v[SmS]=$6F303057
set m[SmS]=$6F303058
set Q[SmS]=$6F303056
set W[SmS]=$68303042
set E[SmS]=$6830305A
set Z[SmS]=$68303059
set U[SmS]=$68303142
set I[SmS]=$6F303142
set P[SmS]=$6F303158
set A[SmS]=$6E62656C
set D[SmS]=$65736864
set H[SmS]=$68736F72
set J[SmS]=$686D7072
set K[SmS]=$68646877
set L[SmS]=$6562616C
set V[SmS]=$52657363
set B[SmS]=$52657273
set N[SmS]=$52656463
set M[SmS]=$5265706D
set ww[SmS]=$52657369
set uw[SmS]=$5230314A
set rw[SmS]=$5230314B
set sw[SmS]=$5230314C
set tw[SmS]=$5230314D
set iw[SmS]=$5230314E
set Sw[SmS]=$5230314F
set cw[SmS]=$52303150
set ow[SmS]=$52303231
set Ow[SmS]=$52303449
set lw[SmS]=$6E667632
set bw[SmS]=$6E767232
set yw[SmS]=$6E636234
set pw[SmS]=$6E636237
set ew[SmS]=$6E667634
set qw[SmS]=$6E767230
set aw[SmS]=$6E636236
set nw[SmS]=$6E30324A
set dw[SmS]=$6E656630
set fw[SmS]=$6E30324B
call SetPlayerTechMaxAllowed(Player(SmS),$484D3032,0)
endif
if tmS==$41313943 then
set RWS=$41313943
set TWS="when calling numRace in PickRace, line 949"
set aW[qW]=TWS
set qW=qW+1
if RWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if RWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if RWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if RWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if RWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if RWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if RWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if RWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if RWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if RWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if RWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if RWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if RWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if RWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if RWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if RWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if RWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if RWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if RWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if RWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set YWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffFDD017Goblin|r!"
set GWS=30.
set gWS=YWS
set hWS=GWS
call DisplayTimedTextToPlayer(IY,0.,0.,hWS,gWS)
call SetPlayerTechResearched(imS,$526E7369,2)
set FWS=oY
call EnableTrigger(FWS)
set u[SmS]=13
set w[SmS]=$41304146
set j[SmS]=$41304E5A
set r[SmS]=$4E726F62
set s[SmS]=$4E616C63
set t[SmS]=$4E74696E
set i[SmS]=$4864676F
set v[SmS]=$6F303037
set m[SmS]=$6F303038
set Q[SmS]=$6F303039
set W[SmS]=$68303032
set E[SmS]=$6830304A
set Z[SmS]=$6830304B
set U[SmS]=$68303132
set I[SmS]=$6F303133
set P[SmS]=$6F30314F
set A[SmS]=$6E66726C
set D[SmS]=$6E697474
set H[SmS]=$6E737261
set J[SmS]=$6E777267
set K[SmS]=$6E7A6570
set L[SmS]=$6E6E6D67
set V[SmS]=$52686862
set B[SmS]=$52687374
set N[SmS]=$52686663
set M[SmS]=$52686C61
set ww[SmS]=$52687269
set uw[SmS]=$52303041
set rw[SmS]=$52303042
set sw[SmS]=$52303043
set tw[SmS]=$52303044
set iw[SmS]=$52303045
set Sw[SmS]=$52303038
set cw[SmS]=$52303039
set ow[SmS]=$52303153
set Ow[SmS]=$5230344B
set lw[SmS]=$6E646830
set bw[SmS]=$68636173
set yw[SmS]=$68616C74
set pw[SmS]=$6E677772
set ew[SmS]=$6E646831
set qw[SmS]=$6E656630
set aw[SmS]=$6E6D7234
set nw[SmS]=$6E6D7235
set dw[SmS]=$6E65666D
set fw[SmS]=$686B6565
call SetPlayerTechMaxAllowed(Player(SmS),$484D3035,0)
endif
if tmS==$41313944 then
set kWS=$41313944
set jWS="when calling numRace in PickRace, line 1006"
set aW[qW]=jWS
set qW=qW+1
if kWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if kWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if kWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if kWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if kWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if kWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if kWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if kWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if kWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if kWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if kWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if kWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if kWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if kWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if kWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if kWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if kWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if kWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if kWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if kWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set xWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff008080Troll|r!"
set vWS=30.
set mWS=xWS
set QWS=vWS
call DisplayTimedTextToPlayer(IY,0.,0.,QWS,mWS)
call SetPlayerTechResearched(imS,$526E7369,3)
set WWS=Rn
call EnableTrigger(WWS)
set EWS=aY
call EnableTrigger(EWS)
set u[SmS]=14
set w[SmS]=$41304147
set j[SmS]=$41304F32
set r[SmS]=$4F626C61
set s[SmS]=$4F736864
set t[SmS]=$4F647274
set i[SmS]=$4F726578
set v[SmS]=$6F303045
set m[SmS]=$6F303046
set Q[SmS]=$6F30304A
set W[SmS]=$68303030
set E[SmS]=$6830304D
set Z[SmS]=$6830304E
set U[SmS]=$68303135
set I[SmS]=$6F303130
set P[SmS]=$6F303151
set A[SmS]=$6F67726B
set D[SmS]=$6F68756E
set H[SmS]=$6F646F63
set J[SmS]=$6F6E7A67
set K[SmS]=$6F746272
set L[SmS]=$6F636174
set V[SmS]=$526F6C66
set B[SmS]=$526F7773
set N[SmS]=$526F7764
set M[SmS]=$5277646D
set ww[SmS]=$526F706D
set uw[SmS]=$52303049
set rw[SmS]=$5230304A
set sw[SmS]=$5230304B
set tw[SmS]=$5230304C
set iw[SmS]=$5230304D
set Sw[SmS]=$5230304E
set cw[SmS]=$5230304F
set ow[SmS]=$52303155
set Ow[SmS]=$5230324C
set lw[SmS]=$6E636262
set bw[SmS]=$6F766C6E
set yw[SmS]=$6F736879
set pw[SmS]=$6E776331
set ew[SmS]=$6E647262
set qw[SmS]=$6F636277
set aw[SmS]=$6E706766
set nw[SmS]=$6E657431
set dw[SmS]=$6E656630
set fw[SmS]=$6F747262
call SetPlayerTechMaxAllowed(Player(SmS),$4F726B6E,0)
call SetPlayerTechMaxAllowed(Player(SmS),$45303037,0)
endif
if tmS==$41313945 then
set ZWS=$41313945
set UWS="when calling numRace in PickRace, line 1064"
set aW[qW]=UWS
set qW=qW+1
if ZWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if ZWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if ZWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if ZWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if ZWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if ZWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if ZWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if ZWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if ZWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if ZWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if ZWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if ZWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if ZWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if ZWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if ZWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if ZWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if ZWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if ZWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if ZWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if ZWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set IWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffA23BECDemon|r!"
set PWS=30.
set AWS=IWS
set DWS=PWS
call DisplayTimedTextToPlayer(IY,0.,0.,DWS,AWS)
call SetPlayerTechResearched(imS,$526E7369,1)
set HWS=qd
call EnableTrigger(HWS)
set JWS=ln
call EnableTrigger(JWS)
set KWS=sY
call EnableTrigger(KWS)
set LWS=qg
call EnableTrigger(LWS)
set u[SmS]=15
set w[SmS]=$4130414C
set j[SmS]=$41304F34
set r[SmS]=$4E706C68
set s[SmS]=$55647265
set t[SmS]=$4E666972
set i[SmS]=$5563726C
set v[SmS]=$6F30304E
set m[SmS]=$6F30304F
set Q[SmS]=$6F303050
set W[SmS]=$68303037
set E[SmS]=$68303050
set Z[SmS]=$6830304F
set U[SmS]=$68303136
set I[SmS]=$6F303137
set P[SmS]=$6F303153
set A[SmS]=$6E666762
set D[SmS]=$6E64716E
set H[SmS]=$6E657264
set J[SmS]=$6E66656C
set K[SmS]=$75627370
set L[SmS]=$6E696E61
set V[SmS]=$52756D65
set B[SmS]=$52756275
set N[SmS]=$52756261
set M[SmS]=$52756172
set ww[SmS]=$52756578
set uw[SmS]=$52756372
set rw[SmS]=$52303057
set sw[SmS]=$52303058
set tw[SmS]=$52303059
set iw[SmS]=$5230305A
set Sw[SmS]=$52303130
set cw[SmS]=$52303131
set ow[SmS]=$52303157
set Ow[SmS]=$5230344A
set lw[SmS]=$75736170
set bw[SmS]=$75677276
set yw[SmS]=$75616F64
set pw[SmS]=$757A6967
set ew[SmS]=$6E6D7261
set qw[SmS]=$6E6D7262
set aw[SmS]=$6E6D7263
set nw[SmS]=$6E6D7266
set dw[SmS]=$6E656630
set fw[SmS]=$6E636E74
call SetPlayerTechMaxAllowed(Player(SmS),$55776172,0)
endif
if tmS==$41313946 then
set XWS=$41313946
set CWS="when calling numRace in PickRace, line 1123"
set aW[qW]=CWS
set qW=qW+1
if XWS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if XWS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if XWS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if XWS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if XWS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if XWS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if XWS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if XWS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if XWS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if XWS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if XWS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if XWS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if XWS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if XWS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if XWS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if XWS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if XWS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if XWS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if XWS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if XWS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set VWS=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffff00ffFel Orc|r!"
set BWS=30.
set NWS=VWS
set MWS=BWS
call DisplayTimedTextToPlayer(IY,0.,0.,MWS,NWS)
call SetPlayerTechResearched(imS,$526E7369,1)
set wES=hd
call EnableTrigger(wES)
set uES=yn
call EnableTrigger(uES)
set rES=SY
call EnableTrigger(rES)
set u[SmS]=16
set w[SmS]=$4130414D
set j[SmS]=$41304F36
set r[SmS]=$4F706768
set s[SmS]=$4E626263
set t[SmS]=$4F666172
set i[SmS]=$5562616C
set v[SmS]=$6F303051
set m[SmS]=$6F303047
set Q[SmS]=$6F303052
set W[SmS]=$68303038
set E[SmS]=$68303054
set Z[SmS]=$68303053
set U[SmS]=$68303138
set I[SmS]=$6F303136
set P[SmS]=$6F303155
set A[SmS]=$6E636867
set D[SmS]=$6E676E73
set H[SmS]=$6E636877
set J[SmS]=$6E636872
set K[SmS]=$6F303347
set L[SmS]=$6E696E63
set V[SmS]=$5275736C
set B[SmS]=$52757261
set N[SmS]=$5275706D
set M[SmS]=$5275736D
set ww[SmS]=$52756766
set uw[SmS]=$52303138
set rw[SmS]=$52303139
set sw[SmS]=$52303141
set tw[SmS]=$52303142
set iw[SmS]=$52303143
set Sw[SmS]=$52757370
set cw[SmS]=$52303144
set ow[SmS]=$52303159
set Ow[SmS]=$52303257
set lw[SmS]=$6E656633
set bw[SmS]=$6E656634
set yw[SmS]=$6E65676D
set pw[SmS]=$6E656635
set ew[SmS]=$6E656636
set qw[SmS]=$6E656632
set aw[SmS]=$75676F6C
set nw[SmS]=$756E7032
set dw[SmS]=$6E656630
set fw[SmS]=$75736870
call SetPlayerTechMaxAllowed(Player(SmS),$4E6D616E,0)
endif
if tmS==$41313947 then
set sES=$41313947
set tES="when calling numRace in PickRace, line 1181"
set aW[qW]=tES
set qW=qW+1
if sES==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if sES==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if sES==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if sES==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if sES==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if sES==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if sES==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if sES==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if sES==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if sES==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if sES==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if sES==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if sES==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if sES==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if sES==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if sES==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if sES==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if sES==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if sES==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if sES==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set iES=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff7EBFF1Undead|r!"
set SES=30.
set cES=iES
set oES=SES
call DisplayTimedTextToPlayer(IY,0.,0.,oES,cES)
call SetPlayerTechResearched(imS,$526E7369,1)
set OES=Zd
call EnableTrigger(OES)
set lES=Tn
call EnableTrigger(lES)
set bES=rq
call EnableTrigger(bES)
set yES=ig
call EnableTrigger(yES)
set pES=nY
call EnableTrigger(pES)
set u[SmS]=17
set w[SmS]=$4130414F
set j[SmS]=$41304F35
set r[SmS]=$55646561
set s[SmS]=$4E62726E
set t[SmS]=$556C6963
set i[SmS]=$556B746C
set v[SmS]=$6F30304B
set m[SmS]=$6F30304C
set Q[SmS]=$6F30304D
set W[SmS]=$68303036
set E[SmS]=$68303051
set Z[SmS]=$68303052
set U[SmS]=$68303137
set I[SmS]=$6F303138
set P[SmS]=$6F303154
set A[SmS]=$7567686F
set D[SmS]=$75637279
set H[SmS]=$756E6563
set J[SmS]=$7561626F
set K[SmS]=$75676172
set L[SmS]=$756D7477
set V[SmS]=$52757762
set B[SmS]=$52756163
set N[SmS]=$52756E65
set M[SmS]=$52757366
set ww[SmS]=$52756662
set uw[SmS]=$52303132
set rw[SmS]=$52757063
set sw[SmS]=$52303134
set tw[SmS]=$52303133
set iw[SmS]=$52303135
set Sw[SmS]=$52303136
set cw[SmS]=$52303137
set ow[SmS]=$52303158
set Ow[SmS]=$52303448
set lw[SmS]=$757A6731
set bw[SmS]=$75746F6D
set yw[SmS]=$686F6261
set pw[SmS]=$756E706C
set ew[SmS]=$75626F6E
set qw[SmS]=$686F6666
set aw[SmS]=$6E62736D
set nw[SmS]=$6E66726D
set dw[SmS]=$6E676E69
set fw[SmS]=$6E646D67
call SetPlayerTechMaxAllowed(Player(SmS),$55616E62,0)
call SetPlayerTechMaxAllowed(Player(SmS),$48617266,0)
call SetPlayerTechMaxAllowed(Player(SmS),$484D3038,0)
call SetPlayerTechMaxAllowed(Player(SmS),$55647468,0)
call SetPlayerTechMaxAllowed(Player(SmS),$55303130,0)
endif
if tmS==$41313948 then
set eES=$41313948
set qES="when calling numRace in PickRace, line 1245"
set aW[qW]=qES
set qW=qW+1
if eES==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if eES==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if eES==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if eES==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if eES==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if eES==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if eES==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if eES==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if eES==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if eES==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if eES==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if eES==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if eES==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if eES==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if eES==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if eES==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if eES==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if eES==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if eES==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if eES==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set aES=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff00ffffNaga|r!"
set nES=30.
set dES=aES
set fES=nES
call DisplayTimedTextToPlayer(IY,0.,0.,fES,dES)
call SetPlayerTechResearched(imS,$526E7369,2)
set RES=Mh
call EnableTrigger(RES)
set TES=fY
call EnableTrigger(TES)
set u[SmS]=18
set w[SmS]=$4130414A
set j[SmS]=$41304F38
set r[SmS]=$4564656D
set s[SmS]=$4E6E6773
set t[SmS]=$456D6672
set i[SmS]=$456D6E73
set v[SmS]=$6F303054
set m[SmS]=$6F303055
set Q[SmS]=$6F303053
set W[SmS]=$68303039
set E[SmS]=$68303057
set Z[SmS]=$68303058
set U[SmS]=$68303141
set I[SmS]=$6F303141
set P[SmS]=$6F303157
set A[SmS]=$6E6D7972
set D[SmS]=$6E736E70
set H[SmS]=$6E6E7377
set J[SmS]=$6E6E7267
set K[SmS]=$6E776773
set L[SmS]=$6E687963
set V[SmS]=$526E6174
set B[SmS]=$52656362
set N[SmS]=$526E7377
set M[SmS]=$526E616D
set ww[SmS]=$52656874
set uw[SmS]=$52657062
set rw[SmS]=$52303145
set sw[SmS]=$52303147
set tw[SmS]=$52657576
set iw[SmS]=$52657773
set Sw[SmS]=$52303146
set cw[SmS]=$52303148
set ow[SmS]=$52303457
set Ow[SmS]=$52303359
set lw[SmS]=$65617465
set bw[SmS]=$656D6F77
set yw[SmS]=$65746F65
set pw[SmS]=$65746F61
set ew[SmS]=$6E736870
set qw[SmS]=$6E6D726B
set aw[SmS]=$6E667633
set nw[SmS]=$6E637431
set dw[SmS]=$6E6E6164
set fw[SmS]=$6E303431
call SetPlayerTechMaxAllowed(Player(SmS),$45657669,0)
call SetPlayerTechMaxAllowed(Player(SmS),$484D3034,0)
endif
if tmS==$4131394A then
set YES=$4131394A
set GES="when calling numRace in PickRace, line 1303"
set aW[qW]=GES
set qW=qW+1
if YES==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if YES==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if YES==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if YES==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if YES==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if YES==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if YES==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if YES==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if YES==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if YES==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if YES==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if YES==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if YES==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if YES==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if YES==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if YES==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if YES==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if YES==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if YES==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if YES==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set gES=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cff008000Admiralty of Kul'Tiras|r!"
set hES=30.
set FES=gES
set kES=hES
call DisplayTimedTextToPlayer(IY,0.,0.,kES,FES)
call SetPlayerTechResearched(imS,$526E7369,2)
set jES=qn
call EnableTrigger(jES)
set xES=OY
call EnableTrigger(xES)
set u[SmS]=19
set w[SmS]=$41323133
set j[SmS]=$41323130
set r[SmS]=$4F303435
set s[SmS]=$4F303436
set t[SmS]=$4F303437
set i[SmS]=$4F303438
set v[SmS]=$6F303542
set m[SmS]=$6F303543
set Q[SmS]=$6F303544
set W[SmS]=$6F303537
set E[SmS]=$6F303538
set Z[SmS]=$6F303539
set U[SmS]=$6F303541
set I[SmS]=$6F303536
set P[SmS]=$6F303545
set A[SmS]=$6F303530
set D[SmS]=$6F303531
set H[SmS]=$6F303532
set J[SmS]=$6F303533
set K[SmS]=$6F303534
set L[SmS]=$6F303535
set V[SmS]=$52303831
set B[SmS]=$52303832
set N[SmS]=$52303835
set M[SmS]=$52303833
set ww[SmS]=$52303834
set uw[SmS]=$52303846
set rw[SmS]=$52303837
set sw[SmS]=$52303838
set tw[SmS]=$52303839
set iw[SmS]=$52303847
set Sw[SmS]=$52303842
set cw[SmS]=$52303843
set ow[SmS]=$52303844
set Ow[SmS]=$52303845
set lw[SmS]=$6F303556
set bw[SmS]=$6F303546
set yw[SmS]=$6F303548
set pw[SmS]=$6F30354A
set ew[SmS]=$6F30354C
set qw[SmS]=$6F30354D
set aw[SmS]=$6F30354F
set nw[SmS]=$6F303551
set dw[SmS]=$6F303553
set fw[SmS]=$6F303555
call SetPlayerTechMaxAllowed(Player(SmS),$4F303439,0)
endif
if tmS==$41313949 then
set vES=$41313949
set mES="when calling numRace in PickRace, line 1360"
set aW[qW]=mES
set qW=qW+1
if vES==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if vES==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if vES==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if vES==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if vES==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if vES==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if vES==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if vES==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if vES==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if vES==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if vES==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if vES==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if vES==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if vES==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if vES==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if vES==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if vES==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if vES==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if vES==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if vES==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set QES=Aw[SmS]+GetPlayerName(imS)+"|r"+" has chosen |cffDC143CGnoll|r!"
set WES=30.
set EES=QES
set ZES=WES
call DisplayTimedTextToPlayer(IY,0.,0.,ZES,EES)
call SetPlayerTechResearched(imS,$526E7369,2)
set UES=pn
call EnableTrigger(UES)
set IES=cY
call EnableTrigger(IES)
set PES=iq
call EnableTrigger(PES)
set AES=Sq
call EnableTrigger(AES)
set u[SmS]=20
set w[SmS]=$41313841
set j[SmS]=$41313839
set r[SmS]=$4F303431
set s[SmS]=$4F303432
set t[SmS]=$4F303433
set i[SmS]=$4F303434
set v[SmS]=$6E303259
set m[SmS]=$6E30325A
set Q[SmS]=$6E303330
set W[SmS]=$6E303253
set E[SmS]=$6E303254
set Z[SmS]=$6E303255
set U[SmS]=$6E303256
set I[SmS]=$6F30334F
set P[SmS]=$6E303331
set A[SmS]=$6F303349
set D[SmS]=$6F30334A
set H[SmS]=$6F30334B
set J[SmS]=$6F30334C
set K[SmS]=$6F30334D
set L[SmS]=$6F30334E
set V[SmS]=$52303741
set B[SmS]=$52303742
set N[SmS]=$52303745
set M[SmS]=$52303743
set ww[SmS]=$52303744
set uw[SmS]=$52303747
set rw[SmS]=$52303748
set sw[SmS]=$52303749
set tw[SmS]=$5230374A
set iw[SmS]=$5230374B
set Sw[SmS]=$5230374C
set cw[SmS]=$5230374D
set ow[SmS]=$5230374E
set Ow[SmS]=$5230374F
set lw[SmS]=$6E303332
set bw[SmS]=$6E303333
set yw[SmS]=$6E303334
set pw[SmS]=$6E303335
set ew[SmS]=$6E303336
set qw[SmS]=$6E303337
set aw[SmS]=$6E303338
set nw[SmS]=$6E303339
set dw[SmS]=$6E303341
set fw[SmS]=$6E303342
endif
if Rw[SmS]==90 then
set DES=k[1]
call RemoveUnit(DES)
set WUS=Player(SmS)
set EUS=v[SmS]
set HES=Rw[SmS]
set o[SmS]=CreateUnit(WUS,EUS,64.,5056.,HES*1.+180.)
set ZUS=Player(SmS)
set UUS=W[SmS]
set JES=Rw[SmS]
set O[SmS]=CreateUnit(ZUS,UUS,640.,5056.,JES*1.-90.)
set IUS=Player(SmS)
set PUS=W[SmS]
set KES=Rw[SmS]
set l[SmS]=CreateUnit(IUS,PUS,-512.,5056.,KES*1.+90.)
set AUS=Player(SmS)
set DUS=W[SmS]
set LES=Rw[SmS]
set b[SmS]=CreateUnit(AUS,DUS,64.,4480.,LES*1.+180.)
call CreateUnit(Player(SmS),I[SmS],-320.,4672.,225.)
call CreateUnit(Player(SmS),I[SmS],-320.,5440.,135.)
call CreateUnit(Player(SmS),I[SmS],448.,5440.,45.)
call CreateUnit(Player(SmS),I[SmS],448.,4672.,31.)
set F[SmS]=CreateUnit(Player(SmS),P[SmS],-1088.,3968.,270.)
endif
if Rw[SmS]==0 then
set XES=k[3]
call RemoveUnit(XES)
set HUS=Player(SmS)
set JUS=v[SmS]
set CES=Rw[SmS]
set o[SmS]=CreateUnit(HUS,JUS,5056.,64.,CES*1.+180.)
set KUS=Player(SmS)
set LUS=W[SmS]
set VES=Rw[SmS]
set O[SmS]=CreateUnit(KUS,LUS,5056.,-512.,VES*1.-90.)
set XUS=Player(SmS)
set CUS=W[SmS]
set BES=Rw[SmS]
set l[SmS]=CreateUnit(XUS,CUS,5056.,640.,BES*1.+90.)
set VUS=Player(SmS)
set BUS=W[SmS]
set NES=Rw[SmS]
set b[SmS]=CreateUnit(VUS,BUS,4480.,64.,NES*1.+180.)
call CreateUnit(Player(SmS),I[SmS],4672.,448.,135.)
call CreateUnit(Player(SmS),I[SmS],5440.,448.,45.)
call CreateUnit(Player(SmS),I[SmS],5440.,-320.,315.)
call CreateUnit(Player(SmS),I[SmS],4672.,-320.,225.)
set F[SmS]=CreateUnit(Player(SmS),P[SmS],3904.,1216.,270.)
endif
if Rw[SmS]==270 then
set MES=k[0]
call RemoveUnit(MES)
set NUS=Player(SmS)
set MUS=v[SmS]
set wZS=Rw[SmS]
set o[SmS]=CreateUnit(NUS,MUS,64.,-4928.,wZS*1.+180.)
set wIS=Player(SmS)
set uIS=W[SmS]
set uZS=Rw[SmS]
set O[SmS]=CreateUnit(wIS,uIS,-512.,-4928.,uZS*1.-90.)
set rIS=Player(SmS)
set sIS=W[SmS]
set rZS=Rw[SmS]
set l[SmS]=CreateUnit(rIS,sIS,640.,-4928.,rZS*1.+90.)
set tIS=Player(SmS)
set iIS=W[SmS]
set sZS=Rw[SmS]
set b[SmS]=CreateUnit(tIS,iIS,64.,-4352.,sZS*1.+180.)
call CreateUnit(Player(SmS),I[SmS],-320.,-4544.,135.)
call CreateUnit(Player(SmS),I[SmS],-320.,-5312.,225.)
call CreateUnit(Player(SmS),I[SmS],448.,-5312.,315.)
call CreateUnit(Player(SmS),I[SmS],448.,-4544.,45.)
set F[SmS]=CreateUnit(Player(SmS),P[SmS],1280.,-3712.,270.)
endif
if Rw[SmS]==180 then
set tZS=k[2]
call RemoveUnit(tZS)
set SIS=Player(SmS)
set cIS=v[SmS]
set iZS=Rw[SmS]
set o[SmS]=CreateUnit(SIS,cIS,-4928.,64.,iZS*1.+180.)
set oIS=Player(SmS)
set OIS=W[SmS]
set SZS=Rw[SmS]
set O[SmS]=CreateUnit(oIS,OIS,-4928.,640.,SZS*1.-90.)
set lIS=Player(SmS)
set bIS=W[SmS]
set cZS=Rw[SmS]
set l[SmS]=CreateUnit(lIS,bIS,-4928.,-512.,cZS*1.+90.)
set yIS=Player(SmS)
set pIS=W[SmS]
set oZS=Rw[SmS]
set b[SmS]=CreateUnit(yIS,pIS,-4352.,64.,oZS*1.+180.)
call CreateUnit(Player(SmS),I[SmS],-4544.,-320.,315.)
call CreateUnit(Player(SmS),I[SmS],-5312.,-320.,225.)
call CreateUnit(Player(SmS),I[SmS],-5312.,448.,135.)
call CreateUnit(Player(SmS),I[SmS],-4544.,448.,45.)
set F[SmS]=CreateUnit(Player(SmS),P[SmS],-3840.,-1088.,270.)
endif
call AddUnitToStock(O[SmS],A[SmS],2,4)
call AddUnitToStock(O[SmS],D[SmS],1,3)
call AddUnitToStock(O[SmS],H[SmS],1,3)
call AddUnitToStock(l[SmS],A[SmS],2,4)
call AddUnitToStock(l[SmS],D[SmS],1,3)
call AddUnitToStock(l[SmS],H[SmS],1,3)
call AddUnitToStock(b[SmS],A[SmS],2,4)
call AddUnitToStock(b[SmS],D[SmS],1,3)
call AddUnitToStock(b[SmS],H[SmS],1,3)
call SetPlayerTechMaxAllowed(Player(SmS),r[SmS],0)
call SetPlayerTechMaxAllowed(Player(SmS),s[SmS],0)
call SetPlayerTechMaxAllowed(Player(SmS),t[SmS],0)
call SetPlayerTechMaxAllowed(Player(SmS),i[SmS],0)
set OZS=Player(SmS)
set yZS=o[SmS]
set lZS=GetUnitX(yZS)
set pZS=o[SmS]
set bZS=GetUnitY(pZS)
if GetLocalPlayer()==OZS then
call SetCameraPosition(lZS,bZS)
endif
if xu==true then
if imS==Gu then
set mu=true
set omS=0
loop
exitwhen omS>3
set eZS=k[omS]
set qZS=tmS
call UnitRemoveAbility(eZS,qZS)
set omS=omS+1
endloop
set aZS=k[0]
call ShowUnit(aZS,true)
set nZS=Yu
set RZS=k[0]
set dZS=GetUnitX(RZS)
set TZS=k[0]
set fZS=GetUnitY(TZS)
if GetLocalPlayer()==nZS then
call SetCameraPosition(dZS,fZS)
endif
set YZS=F[SmS]
call ShowUnit(YZS,false)
set GZS=tr
call DestroyTimerDialog(GZS)
call TimerStart(ir,30.,false,Aww_77)
set tr=CreateTimerDialog(ir)
set eIS=tr
set gZS=Yu
call TimerDialogSetTitle(eIS,GetPlayerName(gZS)+" pick race")
call TimerDialogDisplay(tr,true)
endif
if imS==Yu then
set Qu=true
set OmS=0
loop
exitwhen OmS>3
set hZS=k[OmS]
set FZS=tmS
call UnitRemoveAbility(hZS,FZS)
set OmS=OmS+1
endloop
set kZS=k[3]
call ShowUnit(kZS,true)
set jZS=gu
set mZS=k[3]
set xZS=GetUnitX(mZS)
set QZS=k[3]
set vZS=GetUnitY(QZS)
if GetLocalPlayer()==jZS then
call SetCameraPosition(xZS,vZS)
endif
set WZS=F[SmS]
call ShowUnit(WZS,false)
set EZS=tr
call DestroyTimerDialog(EZS)
call TimerStart(ir,30.,false,Dww_287)
set tr=CreateTimerDialog(ir)
set qIS=tr
set ZZS=gu
call TimerDialogSetTitle(qIS,GetPlayerName(ZZS)+" pick race")
call TimerDialogDisplay(tr,true)
endif
if imS==gu then
set Wu=true
set lmS=0
loop
exitwhen lmS>3
set UZS=k[lmS]
set IZS=tmS
call UnitRemoveAbility(UZS,IZS)
set lmS=lmS+1
endloop
set PZS=k[1]
call ShowUnit(PZS,true)
set AZS=Tu
set JZS=k[1]
set DZS=GetUnitX(JZS)
set KZS=k[1]
set HZS=GetUnitY(KZS)
if GetLocalPlayer()==AZS then
call SetCameraPosition(DZS,HZS)
endif
set LZS=F[SmS]
call ShowUnit(LZS,false)
set XZS=tr
call DestroyTimerDialog(XZS)
call TimerStart(ir,30.,false,Hww_582)
set tr=CreateTimerDialog(ir)
set aIS=tr
set CZS=Tu
call TimerDialogSetTitle(aIS,GetPlayerName(CZS)+" pick race")
call TimerDialogDisplay(tr,true)
endif
if imS==Tu then
set Eu=true
set bmS=0
loop
exitwhen bmS>3
set VZS=k[bmS]
set BZS=tmS
call UnitRemoveAbility(VZS,BZS)
set bmS=bmS+1
endloop
set NZS=F[SmS]
call ShowUnit(NZS,false)
set MZS=tr
call DestroyTimerDialog(MZS)
set wUS=GY
call EnableTrigger(wUS)
call TimerStart(ir,30.,false,Jww_720)
set tr=CreateTimerDialog(ir)
set nIS=tr
set uUS=Tu
call TimerDialogSetTitle(nIS,GetPlayerName(uUS)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set ymS=0
loop
exitwhen ymS>3
set rUS=F[ymS]
set dIS=GetUnitX(rUS)
set sUS=F[ymS]
set Mu=L5u(dIS,GetUnitY(sUS),50.,"BAN",10.)
set ymS=ymS+1
endloop
set tUS=Tu
set bUS=Yu
set lUS=F[GetPlayerId(bUS)]
set iUS=GetUnitTypeId(lUS)
set mIS=0.
set QIS=-400.
set SUS=mIS
set cUS=QIS
set WIS=bj_UNIT_FACING
set oUS=WIS
set fIS=tUS
set RIS=iUS
set TIS=SUS
set YIS=cUS
set EIS=oUS
set OUS=EIS
set Zu=CreateUnit(fIS,RIS,TIS,YIS,OUS*57.295779513)
set yUS=Tu
set fUS=Gu
set dUS=F[GetPlayerId(fUS)]
set pUS=GetUnitTypeId(dUS)
set ZIS=-400.
set UIS=0.
set eUS=ZIS
set qUS=UIS
set IIS=bj_UNIT_FACING
set aUS=IIS
set GIS=yUS
set gIS=pUS
set hIS=eUS
set FIS=qUS
set PIS=aUS
set nUS=PIS
set Uu=CreateUnit(GIS,gIS,hIS,FIS,nUS*57.295779513)
set RUS=Tu
set kUS=gu
set FUS=F[GetPlayerId(kUS)]
set TUS=GetUnitTypeId(FUS)
set AIS=400.
set DIS=0.
set YUS=AIS
set GUS=DIS
set HIS=bj_UNIT_FACING
set gUS=HIS
set kIS=RUS
set jIS=TUS
set xIS=YUS
set vIS=GUS
set JIS=gUS
set hUS=JIS
set Iu=CreateUnit(kIS,jIS,xIS,vIS,hUS*57.295779513)
set jUS=Tu
set mUS=Uu
set xUS=GetUnitX(mUS)
set QUS=Uu
set vUS=GetUnitY(QUS)
if GetLocalPlayer()==jUS then
call SetCameraPosition(xUS,vUS)
endif
endif
endif
endif
set qW=qW-1
set imS=null
set pmS=null
set emS=null
set amS=null
set GmS=null
set gmS=null
set hmS=null
set FmS=null
set kmS=null
set EmS=null
set ZmS=null
set UmS=null
set ImS=null
set PmS=null
set XmS=null
set CmS=null
set VmS=null
set BmS=null
set NmS=null
set bQS=null
set yQS=null
set fQS=null
set RQS=null
set TQS=null
set YQS=null
set xQS=null
set vQS=null
set IQS=null
set PQS=null
set AQS=null
set CQS=null
set rWS=null
set sWS=null
set lWS=null
set bWS=null
set dWS=null
set fWS=null
set FWS=null
set WWS=null
set EWS=null
set HWS=null
set JWS=null
set KWS=null
set LWS=null
set wES=null
set uES=null
set rES=null
set OES=null
set lES=null
set bES=null
set yES=null
set pES=null
set RES=null
set TES=null
set jES=null
set xES=null
set UES=null
set IES=null
set PES=null
set AES=null
set DES=null
set XES=null
set MES=null
set tZS=null
set OZS=null
set yZS=null
set pZS=null
set eZS=null
set aZS=null
set nZS=null
set RZS=null
set TZS=null
set YZS=null
set GZS=null
set gZS=null
set hZS=null
set kZS=null
set jZS=null
set mZS=null
set QZS=null
set WZS=null
set EZS=null
set ZZS=null
set UZS=null
set PZS=null
set AZS=null
set JZS=null
set KZS=null
set LZS=null
set XZS=null
set CZS=null
set VZS=null
set NZS=null
set MZS=null
set wUS=null
set uUS=null
set rUS=null
set sUS=null
set tUS=null
set lUS=null
set bUS=null
set yUS=null
set dUS=null
set fUS=null
set RUS=null
set FUS=null
set kUS=null
set jUS=null
set mUS=null
set QUS=null
set WUS=null
set ZUS=null
set IUS=null
set AUS=null
set HUS=null
set KUS=null
set XUS=null
set VUS=null
set NUS=null
set wIS=null
set rIS=null
set tIS=null
set SIS=null
set oIS=null
set lIS=null
set yIS=null
set eIS=null
set qIS=null
set aIS=null
set nIS=null
set fIS=null
set GIS=null
set kIS=null
endfunction
function KDu takes nothing returns nothing
set qW=0
call KIS("via function reference PickRace, line 3300")
endfunction
function KMc takes nothing returns nothing
local unit BNc
local unit NNc
local unittype MNc
local player wMc
local player uMc
local unit rMc
local unit sMc
local unit tMc
local unit iMc
local unit SMc
local unit cMc
local unitstate oMc
local unit OMc
local unit lMc
local unitstate bMc
local unit yMc
local real pMc
local unit eMc
local unitstate qMc
local real aMc
local unit nMc
local unit dMc
local unitstate fMc
local unit RMc
local integer TMc
local unit YMc
local integer GMc
local integer gMc
local integer hMc
local player FMc
local unit kMc
local unit jMc
local integer xMc
local unit vMc
local integer mMc
local unit QMc
local integer WMc
local trigger EMc
local string ZMc
local real UMc
local player IMc
local unit PMc
local player AMc
local boolean DMc
local boolean HMc
local real JMc
if iy!=null then
set BNc=GetDyingUnit()
set NNc=BNc
set MNc=UNIT_TYPE_HERO
if IsUnitType(NNc,MNc) then
set rMc=GetKillingUnit()
set wMc=GetOwningPlayer(rMc)
set sMc=iy
set uMc=GetOwningPlayer(sMc)
if IsPlayerAlly(wMc,uMc) then
set DMc=true
else
set tMc=GetKillingUnit()
set AMc=GetOwningPlayer(tMc)
set iMc=iy
set DMc=AMc==GetOwningPlayer(iMc)
endif
set HMc=DMc
else
set HMc=false
endif
if HMc then
if Oy then
set SMc=iy
set cMc=SMc
set oMc=UNIT_STATE_MAX_MANA
set JMc=GetUnitState(cMc,oMc)
set OMc=iy
set lMc=OMc
set bMc=UNIT_STATE_MANA
if JMc!=GetUnitState(lMc,bMc) then
set yMc=iy
set nMc=iy
set dMc=nMc
set fMc=UNIT_STATE_MANA
set pMc=GetUnitState(dMc,fMc)+1.
set eMc=yMc
set qMc=UNIT_STATE_MANA
set aMc=pMc
call SetUnitState(eMc,qMc,aMc)
endif
else
set RMc=iy
set TMc=$41315257
call UnitAddAbility(RMc,TMc)
set YMc=iy
set GMc=$41315257
set hMc=$52313339
set kMc=iy
set FMc=GetOwningPlayer(kMc)
set gMc=1+GetPlayerTechCount(FMc,hMc,true)
call SetUnitAbilityLevel(YMc,GMc,gMc)
set jMc=iy
set xMc=$41384358
call UnitAddAbility(jMc,xMc)
set vMc=iy
set mMc=$41394358
call UnitAddAbility(vMc,mMc)
set QMc=iy
set WMc=$41374358
call UnitRemoveAbility(QMc,WMc)
set Oy=true
set EMc=oy
call EnableTrigger(EMc)
set ZMc="|cffff0000My thirst is growing...|r"
set UMc=10.
set PMc=iy
set IMc=GetOwningPlayer(PMc)
call DisplayTimedTextToPlayer(IMc,0.,0.,UMc,ZMc)
endif
endif
endif
set BNc=null
set NNc=null
set MNc=null
set wMc=null
set uMc=null
set rMc=null
set sMc=null
set tMc=null
set iMc=null
set SMc=null
set cMc=null
set oMc=null
set OMc=null
set lMc=null
set bMc=null
set yMc=null
set eMc=null
set qMc=null
set nMc=null
set dMc=null
set fMc=null
set RMc=null
set YMc=null
set FMc=null
set kMc=null
set jMc=null
set vMc=null
set QMc=null
set EMc=null
set IMc=null
set PMc=null
set AMc=null
endfunction
function GxS takes string NjS returns boolean
local integer MjS
local trigger wxS
local player uxS
local string rxS
local trigger sxS
local real txS
local boolean ixS
local trigger SxS
local code cxS
local trigger oxS
local playerunitevent OxS
local trigger lxS
local playerunitevent bxS
local integer yxS
local trigger pxS
local code exS
local playerunitevent qxS
local code axS
local playerunitevent nxS
local code dxS
local playerunitevent fxS
local code RxS
local playerunitevent TxS
local code YxS
set aW[qW]=NjS
set qW=qW+1
call kHw("when calling new_LinkedList in TheVoid, line 11")
set jg=CreateTrigger()
set uxS=Player(11)
set rxS="The Void"
call SetPlayerName(uxS,rxS)
set MjS=0
loop
exitwhen MjS>7
call SetPlayerAllianceStateBJ(Player(11),Player(MjS),0)
call SetPlayerAllianceStateBJ(Player(MjS),Player(11),0)
set MjS=MjS+1
endloop
set wxS=CreateTrigger()
set sxS=wxS
set txS=300.
set ixS=true
call TriggerRegisterTimerEvent(sxS,txS,ixS)
set SxS=wxS
set cxS=orw
call TriggerAddAction(SxS,cxS)
set oxS=jg
set OxS=EVENT_PLAYER_UNIT_SPELL_EFFECT
set lxS=oxS
set bxS=OxS
set yxS=0
loop
call TriggerRegisterPlayerUnitEvent(lxS,Player(yxS),bxS,null)
set yxS=yxS+1
exitwhen yxS==bj_MAX_PLAYER_SLOTS
endloop
set pxS=jg
set exS=Orw
call TriggerAddAction(pxS,exS)
set qxS=EVENT_PLAYER_UNIT_ATTACKED
set axS=lrw
call emO(qxS,null,axS,null)
set nxS=EVENT_PLAYER_UNIT_SPELL_EFFECT
set dxS=brw
call emO(nxS,null,dxS,null)
set fxS=EVENT_PLAYER_UNIT_SPELL_ENDCAST
set RxS=yrw
call emO(fxS,null,RxS,null)
set TxS=EVENT_PLAYER_UNIT_DEATH
set YxS=prw
call emO(TxS,null,YxS,null)
set qW=qW-1
set wxS=null
set uxS=null
set sxS=null
set SxS=null
set oxS=null
set OxS=null
set lxS=null
set bxS=null
set pxS=null
set qxS=null
set nxS=null
set fxS=null
set TxS=null
return true
endfunction
function KOw takes nothing returns boolean
set qW=0
return GxS("via function reference TheVoid, line 1")
endfunction
function K_t takes nothing returns boolean
local trigger W_t
local trigger E_t
local playerunitevent Z_t
local trigger U_t
local playerunitevent I_t
local integer P_t
local trigger A_t
local boolexpr D_t
local trigger H_t
local code J_t
set ig=CreateTrigger()
set W_t=ig
call DisableTrigger(W_t)
set E_t=ig
set Z_t=EVENT_PLAYER_UNIT_SPELL_CAST
set U_t=E_t
set I_t=Z_t
set P_t=0
loop
call TriggerRegisterPlayerUnitEvent(U_t,Player(P_t),I_t,null)
set P_t=P_t+1
exitwhen P_t==bj_MAX_PLAYER_SLOTS
endloop
set A_t=ig
set D_t=Condition(Euw)
call TriggerAddCondition(A_t,D_t)
set H_t=ig
set J_t=Zuw
call TriggerAddAction(H_t,J_t)
set W_t=null
set E_t=null
set Z_t=null
set U_t=null
set I_t=null
set A_t=null
set D_t=null
set H_t=null
return true
endfunction
function Kac takes nothing returns boolean
return true
endfunction
function KbO takes nothing returns nothing
local integer QbO=GetSpellAbilityId()
local unit WbO
local unit EbO
local unit ZbO
local unit UbO
local unit IbO
local integer PbO
local unit AbO
local real DbO
local player HbO
local real JbO
if QbO==$41313844 then
set WbO=GetSpellAbilityUnit()
set HbO=GetOwningPlayer(WbO)
set ZbO=WbO
set JbO=GetUnitX(ZbO)
set UbO=WbO
set EbO=CreateUnit(HbO,$75303030,JbO,GetUnitY(UbO),0.)
set IbO=EbO
set PbO=$41313853
call UnitAddAbility(IbO,PbO)
set AbO=EbO
set DbO=8.
call UnitApplyTimedLife(AbO,$42544C46,DbO)
endif
set WbO=null
set EbO=null
set ZbO=null
set UbO=null
set IbO=null
set AbO=null
set HbO=null
endfunction
function Fuu takes string Xwu returns nothing
local unit Cwu
local trigger Vwu
local unit Bwu
local unit Nwu
local integer Mwu
local unit wuu
local unit uuu
local unit ruu
local trigger suu
local unit tuu
local unit iuu
local unit Suu
local unit cuu
local real ouu
local unit Ouu
local integer luu
local unit buu
local integer yuu
local integer puu
local unit euu
local unit quu
local string auu
local string nuu
local integer duu
local real fuu
local integer Ruu
local string Tuu
local boolean Yuu
local integer Guu
local player guu
local real huu
set aW[qW]=Xwu
set qW=qW+1
set Cwu=GetAttacker()
set wuu=Cwu
if GetUnitTypeId(wuu)==$6F303130 then
set uuu=Cwu
set Yuu=GetPlayerTechCount(GetOwningPlayer(uuu),$5230304B,true)>0
else
set Yuu=false
endif
if Yuu then
set Guu=GetRandomInt(1,100)
set ruu=Cwu
if Guu<=15*GetPlayerTechCount(GetOwningPlayer(ruu),$5230304B,true) then
set Vwu=GetTriggeringTrigger()
set suu=Vwu
call DisableTrigger(suu)
set Bwu=GetTriggerUnit()
set tuu=Cwu
set guu=GetOwningPlayer(tuu)
set iuu=Bwu
set huu=GetUnitX(iuu)
set Suu=Bwu
set Nwu=CreateUnit(guu,$75303030,huu,GetUnitY(Suu),0.)
set cuu=Nwu
set ouu=3.
call UnitApplyTimedLife(cuu,$42544C46,ouu)
set Ouu=Nwu
set luu=$41313655
call UnitAddAbility(Ouu,luu)
set buu=Nwu
set yuu=$41313655
set euu=Cwu
set puu=GetPlayerTechCount(GetOwningPlayer(euu),$5230304B,true)
call SetUnitAbilityLevel(buu,yuu,puu)
set quu=Nwu
set auu="fanofknives"
call IssueImmediateOrder(quu,auu)
set nuu="when calling alloc_CallbackSingle_doAfter_ShredderSpears in ShredderSpears, line 179"
set aW[qW]=nuu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set duu=fF
set RF[duu]=751
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ShredderSpears.","when calling error in ShredderSpears, line 179")
set duu=0
endif
else
set dF=dF-1
set duu=nF[dF]
set RF[duu]=751
endif
set qW=qW-1
set Mwu=duu
set tQ[Mwu]=Vwu
set fuu=2.
set Ruu=Mwu
set Tuu="when calling doAfter in ShredderSpears, line 179"
set aW[qW]=Tuu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),fuu,Ruu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set Cwu=null
set Vwu=null
set Bwu=null
set Nwu=null
set wuu=null
set uuu=null
set ruu=null
set suu=null
set tuu=null
set iuu=null
set Suu=null
set cuu=null
set Ouu=null
set buu=null
set euu=null
set quu=null
set guu=null
endfunction
function Kcw takes nothing returns nothing
set qW=0
call Fuu("via function reference ShredderSpears, line 184")
endfunction
function Kiw takes nothing returns nothing
local integer Giw=GetResearched()
local trigger giw
local trigger hiw
local unit Fiw
local unit kiw
local unit jiw
local player xiw
local unit viw
local player miw
local integer Qiw
local trigger Wiw
local trigger Eiw
local trigger Ziw
local real Uiw
local real Iiw
local real Piw
local real Aiw
local real Diw
local real Hiw
local real Jiw
if Giw==$524D3070 then
set giw=uy
call EnableTrigger(giw)
endif
if Giw==$524D3063 then
set hiw=dh
call EnableTrigger(hiw)
endif
if Giw==$524D3072 then
set Fiw=GetResearchingUnit()
set on=GetOwningPlayer(Fiw)
set kiw=GetResearchingUnit()
if GetPlayerTechCount(GetOwningPlayer(kiw),$524D3072,true)==1 then
set tT=240
set xiw=on
set jiw=o[GetPlayerId(xiw)]
set Uiw=GetUnitX(jiw)
set miw=on
set viw=o[GetPlayerId(miw)]
set Diw=Uiw
set Hiw=GetUnitY(viw)
set Jiw=400.
set Iiw=Diw
set Piw=Hiw
set Aiw=Jiw
set Qiw=tT
set rT=jVl(Iiw,Piw,Aiw,I2S(Qiw),13.,255,230,0,255)
set Wiw=uT
call EnableTrigger(Wiw)
call TimerStart(sT,240.,false,H5)
endif
endif
if Giw==$524D3071 then
set Eiw=ry
call EnableTrigger(Eiw)
endif
if Giw==$52303230 then
set Ziw=DO
call EnableTrigger(Ziw)
endif
set giw=null
set hiw=null
set Fiw=null
set kiw=null
set jiw=null
set xiw=null
set viw=null
set miw=null
set Wiw=null
set Eiw=null
set Ziw=null
endfunction
function Klw takes nothing returns boolean
local playerunitevent Hlw=EVENT_PLAYER_UNIT_ATTACKED
local code Jlw=r7
call emO(Hlw,null,Jlw,null)
set Hlw=null
return true
endfunction
function KmO takes nothing returns boolean
return true
endfunction
function Kni takes nothing returns boolean
local trigger Ani
local trigger Dni
local playerunitevent Hni
local integer Jni
set ry=CreateTrigger()
set Ani=ry
call DisableTrigger(Ani)
set Dni=ry
set Hni=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Jni=0
loop
call TriggerRegisterPlayerUnitEvent(Dni,Player(Jni),Hni,null)
set Jni=Jni+1
exitwhen Jni==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ry,i1)
set Ani=null
set Dni=null
set Hni=null
return true
endfunction
function Kqp takes nothing returns nothing
local unit Hqp=GetTriggerUnit()
local unit Jqp=Hqp
if GetUnitTypeId(Jqp)==$757A6733 then
set wl=Hqp
endif
set Hqp=null
set Jqp=null
endfunction
function KrS takes nothing returns nothing
local unit KuS=GetTriggerUnit()
local unit XuS=KuS
local player LuS=GetOwningPlayer(XuS)
local unit CuS
local string VuS
local real BuS
local real NuS
local unit MuS
local unittype wrS
local unit urS
local string rrS
local real srS
local real trS
local unit irS
local unittype SrS
local unit crS
local string orS
local real OrS
local real lrS
local unit brS
local unittype yrS
local unit prS
local string erS
local real qrS
local real arS
local unit nrS
local unittype drS
local unit frS
local string RrS
local real TrS
local real YrS
local unit GrS
local unittype grS
local unit hrS
local string FrS
local real krS
local real jrS
local unit xrS
local unittype vrS
local real mrS
local real QrS
local real WrS
local real ErS
local real ZrS
local real UrS
local real IrS
local real PrS
local real ArS
local real DrS
local real HrS
local real JrS
if LuS==du then
set CuS=KuS
set VuS="attack"
set mrS=Qw[55]
set QrS=Ww[55]
set BuS=mrS
set NuS=QrS
call IssuePointOrder(CuS,VuS,BuS,NuS)
set MuS=KuS
set wrS=UNIT_TYPE_HERO
if IsUnitType(MuS,wrS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,55)
endif
endif
if LuS==nu then
if Ew[2]==true then
set urS=KuS
set rrS="attack"
set WrS=Qw[33]
set ErS=Ww[33]
set srS=WrS
set trS=ErS
call IssuePointOrder(urS,rrS,srS,trS)
set irS=KuS
set SrS=UNIT_TYPE_HERO
if IsUnitType(irS,SrS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,33)
endif
else
set crS=KuS
set orS="attack"
set ZrS=Qw[55]
set UrS=Ww[55]
set OrS=ZrS
set lrS=UrS
call IssuePointOrder(crS,orS,OrS,lrS)
set brS=KuS
set yrS=UNIT_TYPE_HERO
if IsUnitType(brS,yrS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,55)
endif
endif
endif
if LuS==fu then
set prS=KuS
set erS="attack"
set IrS=Qw[33]
set PrS=Ww[33]
set qrS=IrS
set arS=PrS
call IssuePointOrder(prS,erS,qrS,arS)
set nrS=KuS
set drS=UNIT_TYPE_HERO
if IsUnitType(nrS,drS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,33)
endif
endif
if LuS==Ru then
if Ew[0]==true then
set frS=KuS
set RrS="attack"
set ArS=Qw[55]
set DrS=Ww[55]
set TrS=ArS
set YrS=DrS
call IssuePointOrder(frS,RrS,TrS,YrS)
set GrS=KuS
set grS=UNIT_TYPE_HERO
if IsUnitType(GrS,grS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,55)
endif
else
set hrS=KuS
set FrS="attack"
set HrS=Qw[33]
set JrS=Ww[33]
set krS=HrS
set jrS=JrS
call IssuePointOrder(hrS,FrS,krS,jrS)
set xrS=KuS
set vrS=UNIT_TYPE_HERO
if IsUnitType(xrS,vrS) then
call SaveInteger(qu,GetHandleId(KuS),$6D6F7665,33)
endif
endif
endif
set KuS=null
set LuS=null
set XuS=null
set CuS=null
set MuS=null
set wrS=null
set urS=null
set irS=null
set SrS=null
set crS=null
set brS=null
set yrS=null
set prS=null
set nrS=null
set drS=null
set frS=null
set GrS=null
set grS=null
set hrS=null
set xrS=null
set vrS=null
endfunction
function Kru takes nothing returns boolean
local trigger Aru
local trigger Dru
local playerunitevent Hru
local integer Jru
set Hy=CreateTrigger()
set Aru=Hy
call DisableTrigger(Aru)
set Dru=Hy
set Hru=EVENT_PLAYER_UNIT_DEATH
set Jru=0
loop
call TriggerRegisterPlayerUnitEvent(Dru,Player(Jru),Hru,null)
set Jru=Jru+1
exitwhen Jru==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Hy,s4)
set Aru=null
set Dru=null
set Hru=null
return true
endfunction
function Ktt takes nothing returns boolean
return true
endfunction
function HIb takes string gIb returns nothing
local unit hIb
local unit FIb
local integer kIb
local real jIb
local real xIb
local filterfunc vIb
local unit mIb
local unittype QIb
local unit WIb
local unit EIb
local unit ZIb
local string UIb
local integer IIb
local real PIb
local real AIb
local real DIb
set aW[qW]=gIb
set qW=qW+1
set hIb=GetAttacker()
if IsUnitInGroup(hIb,sg) then
set FIb=GetTriggerUnit()
set mIb=FIb
set QIb=UNIT_TYPE_STRUCTURE
if IsUnitType(mIb,QIb) then
set WIb=hIb
set EIb=WIb
set PIb=GetUnitX(EIb)
set ZIb=WIb
set AIb=PIb
set DIb=GetUnitY(ZIb)
set jIb=AIb
set xIb=DIb
set vIb=Filter(Quw)
set UIb="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_StunAgroFix in StunAgroFix, line 31"
set aW[qW]=UIb
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set IIb=qF
set aF[IIb]=874
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_StunAgroFix.","when calling error in StunAgroFix, line 31")
set IIb=0
endif
else
set eF=eF-1
set IIb=pF[eF]
set aF[IIb]=874
endif
set qW=qW-1
set kIb=IIb
set bQ[kIb]=hIb
call WXp(4,0,null,null,jIb,xIb,1000.,false,0,null,vIb,kIb,"when calling forNearestUnit in StunAgroFix, line 31")
endif
endif
set qW=qW-1
set hIb=null
set FIb=null
set vIb=null
set mIb=null
set QIb=null
set WIb=null
set EIb=null
set ZIb=null
endfunction
function Kvi takes nothing returns nothing
set qW=0
call HIb("via function reference StunAgroFix, line 25")
endfunction
function Kxi takes nothing returns boolean
local unit jxi=GetFilterUnit()
local unit xxi=jxi
local unit vxi
local unit mxi
local unit Qxi
local player Wxi
local unit Exi
local unit Zxi
local integer Uxi
local unit Ixi
local integer Pxi
local boolean Axi
local boolean Dxi
local boolean Hxi
local boolean Jxi
if UnitAlive(xxi)==true then
set vxi=jxi
set mxi=GetSpellAbilityUnit()
if vxi!=null and mxi!=null then
set Qxi=vxi
set Exi=mxi
set Wxi=GetOwningPlayer(Exi)
set Axi=Qxi!=null and IsUnitAlly(Qxi,Wxi)
else
set Axi=false
endif
set Dxi=Axi==true
else
set Dxi=false
endif
if Dxi then
set Zxi=jxi
set Uxi=$42303733
set Hxi=GetUnitAbilityLevel(Zxi,Uxi)==0
else
set Hxi=false
endif
if Hxi then
set Ixi=jxi
set Pxi=$42303734
set Jxi=GetUnitAbilityLevel(Ixi,Pxi)==0
else
set Jxi=false
endif
set jxi=null
set xxi=null
set vxi=null
set mxi=null
set Qxi=null
set Wxi=null
set Exi=null
set Zxi=null
set Ixi=null
return Jxi
endfunction
function Kyu takes nothing returns nothing
local rect Jyu=Mc
set Xo[3]=Location(GetRectCenterX(Jyu),GetRectCenterY(Jyu))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set Jyu=null
endfunction
function L1b takes nothing returns boolean
local unit A1b=GetTriggerUnit()
local unit H1b=A1b
local integer D1b=GetUnitTypeId(H1b)
local unit J1b=A1b
local boolean K1b=GetOwningPlayer(J1b)==fu and D1b!=$75303031 and D1b!=$75303030 and D1b!=$75303032 and D1b!=$75303033 and D1b!=$75303034 and D1b!=$75303035 and D1b!=$75303036 and D1b!=$75303037 and D1b!=$75303131
set A1b=null
set H1b=null
set J1b=null
return K1b
endfunction
function L1e takes nothing returns nothing
local integer H1e=GetSpellAbilityId()
local unit J1e
local unit K1e
if H1e==$414E656E then
set J1e=GetSpellTargetUnit()
set K1e=GetSpellAbilityUnit()
call UnitDamageTarget(K1e,J1e,300.,true,false,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endif
set J1e=null
set K1e=null
endfunction
function L3c takes nothing returns nothing
local unit LMc=GetTriggerUnit()
local unit CMc=LMc
local player XMc=GetOwningPlayer(CMc)
local unit VMc
local string BMc
local real NMc
local real MMc
local unit w3c
local unittype u3c
local unit r3c
local string s3c
local real t3c
local real i3c
local unit S3c
local unittype c3c
local unit o3c
local string O3c
local real l3c
local real b3c
local unit y3c
local unittype p3c
local unit e3c
local string q3c
local real a3c
local real n3c
local unit d3c
local unittype f3c
local unit R3c
local string T3c
local real Y3c
local real G3c
local unit g3c
local unittype h3c
local unit F3c
local string k3c
local real j3c
local real x3c
local unit v3c
local unittype m3c
local real Q3c
local real W3c
local real E3c
local real Z3c
local real U3c
local real I3c
local real P3c
local real A3c
local real D3c
local real H3c
local real J3c
local real K3c
if XMc==du then
set VMc=LMc
set BMc="attack"
set Q3c=Qw[52]
set W3c=Ww[52]
set NMc=Q3c
set MMc=W3c
call IssuePointOrder(VMc,BMc,NMc,MMc)
set w3c=LMc
set u3c=UNIT_TYPE_HERO
if IsUnitType(w3c,u3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,52)
endif
endif
if XMc==nu then
if Ew[3]==true then
set r3c=LMc
set s3c="attack"
set E3c=Qw[27]
set Z3c=Ww[27]
set t3c=E3c
set i3c=Z3c
call IssuePointOrder(r3c,s3c,t3c,i3c)
set S3c=LMc
set c3c=UNIT_TYPE_HERO
if IsUnitType(S3c,c3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,27)
endif
else
set o3c=LMc
set O3c="attack"
set U3c=Qw[52]
set I3c=Ww[52]
set l3c=U3c
set b3c=I3c
call IssuePointOrder(o3c,O3c,l3c,b3c)
set y3c=LMc
set p3c=UNIT_TYPE_HERO
if IsUnitType(y3c,p3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,52)
endif
endif
endif
if XMc==fu then
if Ew[0]==true then
set e3c=LMc
set q3c="attack"
set P3c=Qw[52]
set A3c=Ww[52]
set a3c=P3c
set n3c=A3c
call IssuePointOrder(e3c,q3c,a3c,n3c)
set d3c=LMc
set f3c=UNIT_TYPE_HERO
if IsUnitType(d3c,f3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,52)
endif
else
set R3c=LMc
set T3c="attack"
set D3c=Qw[27]
set H3c=Ww[27]
set Y3c=D3c
set G3c=H3c
call IssuePointOrder(R3c,T3c,Y3c,G3c)
set g3c=LMc
set h3c=UNIT_TYPE_HERO
if IsUnitType(g3c,h3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,27)
endif
endif
endif
if XMc==Ru then
set F3c=LMc
set k3c="attack"
set J3c=Qw[27]
set K3c=Ww[27]
set j3c=J3c
set x3c=K3c
call IssuePointOrder(F3c,k3c,j3c,x3c)
set v3c=LMc
set m3c=UNIT_TYPE_HERO
if IsUnitType(v3c,m3c) then
call SaveInteger(qu,GetHandleId(LMc),$6D6F7665,27)
endif
endif
set LMc=null
set XMc=null
set CMc=null
set VMc=null
set w3c=null
set u3c=null
set r3c=null
set S3c=null
set c3c=null
set o3c=null
set y3c=null
set p3c=null
set e3c=null
set d3c=null
set f3c=null
set R3c=null
set g3c=null
set h3c=null
set F3c=null
set v3c=null
set m3c=null
endfunction
function L3e takes nothing returns boolean
return true
endfunction
function L3i takes nothing returns boolean
local trigger U3i
local trigger I3i
local playerunitevent P3i
local trigger A3i
local playerunitevent D3i
local integer H3i
local trigger J3i
local code K3i
set Tp=CreateTrigger()
set U3i=Tp
call DisableTrigger(U3i)
set I3i=Tp
set P3i=EVENT_PLAYER_UNIT_DEATH
set A3i=I3i
set D3i=P3i
set H3i=0
loop
call TriggerRegisterPlayerUnitEvent(A3i,Player(H3i),D3i,null)
set H3i=H3i+1
exitwhen H3i==bj_MAX_PLAYER_SLOTS
endloop
set J3i=Tp
set K3i=h4
call TriggerAddAction(J3i,K3i)
set U3i=null
set I3i=null
set P3i=null
set A3i=null
set D3i=null
set J3i=null
return true
endfunction
function L4i takes nothing returns boolean
local unit Z4i=GetFilterUnit()
local unit I4i=Z4i
local integer U4i=GetUnitTypeId(I4i)
local unit P4i=Z4i
local unit D4i=GetTriggerUnit()
local player A4i=GetOwningPlayer(D4i)
local unit H4i
local unittype J4i
local boolean K4i
if IsUnitEnemy(P4i,A4i) then
set H4i=Z4i
set J4i=UNIT_TYPE_STRUCTURE
set K4i=not IsUnitType(H4i,J4i)
else
set K4i=false
endif
set Z4i=null
set I4i=null
set P4i=null
set A4i=null
set D4i=null
set H4i=null
set J4i=null
return K4i and not (U4i==$75303030 or U4i==$7864756D)
endfunction
function OHb takes string kDb returns nothing
local integer jDb
local unit xDb
local real vDb
local real mDb
local integer QDb
local unit WDb
local real EDb
local real ZDb
local integer UDb
local unit IDb
local unit PDb
local unit ADb
local unit DDb
local unit HDb
local integer JDb
local unit KDb
local unit LDb
local real XDb
local unit CDb
local integer VDb
local string BDb
local integer NDb
local unit MDb
local unit wHb
local unit uHb
local integer rHb
local unit sHb
local unit tHb
local real iHb
local unit SHb
local unit cHb
local real oHb
set aW[qW]=kDb
set qW=qW+1
set jDb=GetSpellAbilityId()
if jDb==$41304E48 then
set xDb=GetSpellAbilityUnit()
set ADb=xDb
set vDb=GetUnitX(ADb)
set DDb=xDb
set mDb=GetUnitY(DDb)
set HDb=xDb
set JDb=$41304E48
set Ha=9+1*GetUnitAbilityLevel(HDb,JDb)
set KDb=xDb
set Ja=CreateUnit(GetOwningPlayer(KDb),$75303036,vDb,mDb,0.)
set LDb=Ja
set XDb=40.
call UnitApplyTimedLife(LDb,$42544C46,XDb)
set CDb=Ja
set VDb=$41304E49
call UnitAddAbility(CDb,VDb)
set BDb="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Illidan in Illidan, line 309"
set aW[qW]=BDb
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set NDb=GF
set gF[NDb]=674
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Illidan.","when calling error in Illidan, line 309")
set NDb=0
endif
else
set YF=YF-1
set NDb=TF[YF]
set gF[NDb]=674
endif
set qW=qW-1
set QDb=NDb
set sv[QDb]=vDb
set tv[QDb]=mDb
call GtO(2.,QDb,"when calling doPeriodically in Illidan, line 309")
endif
if jDb==$41305431 then
set WDb=GetSpellAbilityUnit()
set MDb=WDb
set EDb=GetUnitX(MDb)
set wHb=WDb
set ZDb=GetUnitY(wHb)
set uHb=WDb
set rHb=$41305431
set UDb=GetUnitAbilityLevel(uHb,rHb)
if GetHeroLevel(WDb)>=20 then
set sHb=WDb
set IDb=CreateUnit(GetOwningPlayer(sHb),$6E73656C,EDb,ZDb,GetUnitFacing(WDb))
set tHb=IDb
set iHb=55.*UDb
call UnitApplyTimedLife(tHb,$42544C46,iHb)
set SHb=WDb
set PDb=CreateUnit(GetOwningPlayer(SHb),$6E73656C,EDb,ZDb,GetUnitFacing(WDb))
set cHb=PDb
set oHb=55.*UDb
call UnitApplyTimedLife(cHb,$42544C46,oHb)
endif
endif
set qW=qW-1
set xDb=null
set WDb=null
set IDb=null
set PDb=null
set ADb=null
set DDb=null
set HDb=null
set KDb=null
set LDb=null
set CDb=null
set MDb=null
set wHb=null
set uHb=null
set sHb=null
set tHb=null
set SHb=null
set cHb=null
endfunction
function L7s takes nothing returns nothing
set qW=0
call OHb("via function reference Illidan, line 299")
endfunction
function L8l takes nothing returns nothing
local integer H8l=GetResearched()
local player J8l
local trigger K8l
if H8l==$52303035 then
set J8l=GetTriggerPlayer()
if GetPlayerTechCount(J8l,$52303035,true)==1 then
set K8l=je
call EnableTrigger(K8l)
endif
endif
set J8l=null
set K8l=null
endfunction
function L9e takes nothing returns boolean
local playerunitevent J9e=EVENT_PLAYER_UNIT_SPELL_CAST
local code K9e=Prw
call emO(J9e,null,K9e,null)
set J9e=null
return true
endfunction
function LBt takes nothing returns boolean
return true
endfunction
function LCO takes nothing returns boolean
return true
endfunction
function LCb takes nothing returns boolean
return true
endfunction
function LDu takes nothing returns boolean
return true
endfunction
function LFc takes nothing returns nothing
local unit AFc=GetKillingUnit()
local unit DFc=AFc
local unit HFc
local string JFc
local widget KFc
if GetUnitTypeId(DFc)==$6E30304C then
set HFc=AFc
set JFc="innerfire"
set KFc=AFc
call IssueTargetOrder(HFc,JFc,KFc)
endif
set AFc=null
set DFc=null
set HFc=null
set KFc=null
endfunction
function LIl takes nothing returns boolean
local trigger DIl
local trigger HIl
local playerunitevent JIl
local integer KIl
set Zd=CreateTrigger()
set DIl=Zd
call DisableTrigger(DIl)
set HIl=Zd
set JIl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KIl=0
loop
call TriggerRegisterPlayerUnitEvent(HIl,Player(KIl),JIl,null)
set KIl=KIl+1
exitwhen KIl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Zd,L7)
set DIl=null
set HIl=null
set JIl=null
return true
endfunction
function LLr takes nothing returns boolean
local trigger ULr=CreateTrigger()
local integer ILr=0
local trigger PLr
local player ALr
local string DLr
local boolean HLr
local trigger JLr
local code KLr
loop
exitwhen ILr>3
set PLr=ULr
set ALr=Player(ILr)
set DLr="-end"
set HLr=true
call TriggerRegisterPlayerChatEvent(PLr,ALr,DLr,HLr)
set ILr=ILr+1
endloop
set JLr=ULr
set KLr=C3
call TriggerAddAction(JLr,KLr)
set ULr=null
set PLr=null
set ALr=null
set JLr=null
return true
endfunction
function LNr takes nothing returns boolean
local playerunitevent JNr=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code KNr=S8
call emO(JNr,null,KNr,null)
set JNr=null
return true
endfunction
function LOt takes nothing returns boolean
local playerunitevent JOt=EVENT_PLAYER_UNIT_SPELL_CAST
local code KOt=KM
call emO(JOt,null,KOt,null)
set JOt=null
return true
endfunction
function LOw takes nothing returns boolean
return true
endfunction
function LPp takes nothing returns boolean
local unit ZPp=GetFilterUnit()
local unit UPp=ZPp
local unit PPp=GetTriggerUnit()
local player IPp=GetOwningPlayer(PPp)
local unit APp
local unittype DPp
local unit HPp
local boolean JPp
local boolean KPp
if IsUnitEnemy(UPp,IPp) then
set APp=ZPp
set DPp=UNIT_TYPE_HERO
set JPp=IsUnitType(APp,DPp)==true
else
set JPp=false
endif
if JPp then
set HPp=ZPp
set KPp=UnitAlive(HPp)
else
set KPp=false
endif
set ZPp=null
set UPp=null
set IPp=null
set PPp=null
set APp=null
set DPp=null
set HPp=null
return KPp
endfunction
function LVp takes nothing returns boolean
local trigger PVp
local rect AVp
local region DVp
local trigger HVp
local boolexpr JVp
local trigger KVp
set Dy=CreateTrigger()
set PVp=Dy
set AVp=bj_mapInitialPlayableArea
set DVp=CreateRegion()
call RegionAddRect(DVp,AVp)
call TriggerRegisterEnterRegion(PVp,DVp,null)
set HVp=Dy
set JVp=Condition(u4)
call TriggerAddCondition(HVp,JVp)
set KVp=Dy
call DisableTrigger(KVp)
set PVp=null
set AVp=null
set DVp=null
set HVp=null
set JVp=null
set KVp=null
return true
endfunction
function LXs takes nothing returns nothing
local unit GPs=GetLevelingUnit()
local unit hPs=GPs
local integer gPs
local unit FPs
local unit kPs
local unit jPs
local unit xPs
local unit vPs
local integer mPs
local unit QPs
local integer WPs
local integer EPs
local unit ZPs
local integer UPs
local unit IPs
local integer PPs
local integer APs
local unit DPs
local integer HPs
local unit JPs
local integer KPs
local integer LPs
local unit XPs
local integer CPs
local unit VPs
local integer BPs
local integer NPs
local unit MPs
local integer wAs
local unit uAs
local integer rAs
local integer sAs
local unit tAs
local integer iAs
local unit SAs
local integer cAs
local integer oAs
local unit OAs
local integer lAs
local unit bAs
local integer yAs
local integer pAs
local unit eAs
local integer qAs
local unit aAs
local integer nAs
local integer dAs
local unit fAs
local unit RAs
local integer TAs
local integer YAs
local unit GAs
local integer gAs
local integer hAs
local unit FAs
local integer kAs
local integer jAs
local unit xAs
local integer vAs
local integer mAs
local unit QAs
local unit WAs
local integer EAs
local integer ZAs
local unit UAs
local integer IAs
local integer PAs
local unit AAs
local integer DAs
local integer HAs
local unit JAs
local integer KAs
local integer LAs
local unit XAs
local unit CAs
local integer VAs
local integer BAs
local unit NAs
local integer MAs
local integer wDs
local unit uDs
local integer rDs
local integer sDs
local unit tDs
local integer iDs
local integer SDs
local unit cDs
local integer oDs
local integer ODs
local unit lDs
local integer bDs
local integer yDs
local unit pDs
local unit eDs
local integer qDs
local integer aDs
local unit nDs
local integer dDs
local integer fDs
local unit RDs
local integer TDs
local integer YDs
local unit GDs
local integer gDs
local integer hDs
local unit FDs
local integer kDs
local integer jDs
local unit xDs
local integer vDs
local integer mDs
local unit QDs
local unit WDs
local integer EDs
local integer ZDs
local unit UDs
local integer IDs
local integer PDs
local unit ADs
local integer DDs
local integer HDs
local unit JDs
local integer KDs
local integer LDs
local unit XDs
local integer CDs
local integer VDs
local unit BDs
local integer NDs
local integer MDs
local unit wHs
local unit uHs
local integer rHs
local integer sHs
local unit tHs
local integer iHs
local integer SHs
local unit cHs
local integer oHs
local integer OHs
local unit lHs
local integer bHs
local integer yHs
local unit pHs
local integer eHs
local integer qHs
local unit aHs
local integer nHs
local integer dHs
local unit fHs
local unit RHs
local integer THs
local integer YHs
local unit GHs
local integer gHs
local integer hHs
local unit FHs
local integer kHs
local integer jHs
local unit xHs
local integer vHs
local integer mHs
local unit QHs
local integer WHs
local integer EHs
local unit ZHs
local integer UHs
local integer IHs
local unit PHs
local unit AHs
local integer DHs
local integer HHs
local unit JHs
local integer KHs
local integer LHs
local unit XHs
local integer CHs
local integer VHs
local unit BHs
local integer NHs
local integer MHs
local unit wJs
local integer uJs
local integer rJs
local unit sJs
local integer tJs
local integer iJs
local unit SJs
local unit cJs
local integer oJs
local integer OJs
local unit lJs
local integer bJs
local integer yJs
local unit pJs
local integer eJs
local integer qJs
local unit aJs
local integer nJs
local integer dJs
local unit fJs
local integer RJs
local integer TJs
local unit YJs
local integer GJs
local integer gJs
local unit hJs
local unit FJs
local integer kJs
local integer jJs
local unit xJs
local integer vJs
local integer mJs
local unit QJs
local integer WJs
local integer EJs
local unit ZJs
local integer UJs
local integer IJs
local unit PJs
local integer AJs
local integer DJs
local unit HJs
local integer JJs
local integer KJs
local unit LJs
local unit XJs
local integer CJs
local integer VJs
local unit BJs
local integer NJs
local integer MJs
local unit wKs
local integer uKs
local integer rKs
local unit sKs
local integer tKs
local integer iKs
local unit SKs
local integer cKs
local integer oKs
local unit OKs
local integer lKs
local integer bKs
local unit yKs
local unit pKs
local integer eKs
local integer qKs
local unit aKs
local integer nKs
local integer dKs
local unit fKs
local integer RKs
local integer TKs
local unit YKs
local integer GKs
local integer gKs
local unit hKs
local integer FKs
local integer kKs
local unit jKs
local integer xKs
local integer vKs
local unit mKs
local unit QKs
local integer WKs
local integer EKs
local unit ZKs
local integer UKs
local integer IKs
local unit PKs
local integer AKs
local integer DKs
local unit HKs
local integer JKs
local integer KKs
local unit LKs
local integer XKs
local integer CKs
local unit VKs
local integer BKs
local integer NKs
local unit MKs
local unit wLs
local integer uLs
local integer rLs
local unit sLs
local integer tLs
local integer iLs
local unit SLs
local integer cLs
local integer oLs
local unit OLs
local integer lLs
local integer bLs
local unit yLs
local integer pLs
local integer eLs
local unit qLs
local integer aLs
local integer nLs
local unit dLs
local unit fLs
local integer RLs
local integer TLs
local unit YLs
local integer GLs
local integer gLs
local unit hLs
local integer FLs
local integer kLs
local unit jLs
local integer xLs
local integer vLs
local unit mLs
local integer QLs
local integer WLs
local unit ELs
local integer ZLs
local integer ULs
local unit ILs
local unit PLs
local integer ALs
local integer DLs
local unit HLs
local integer JLs
local integer KLs
local unit LLs
local integer XLs
local integer CLs
local unit VLs
local integer BLs
local integer NLs
local unit MLs
local integer wXs
local integer uXs
local unit rXs
local integer sXs
local integer tXs
local unit iXs
local unit SXs
local integer cXs
local integer oXs
local unit OXs
local integer lXs
local integer bXs
local unit yXs
local integer pXs
local integer eXs
local unit qXs
local integer aXs
local integer nXs
local unit dXs
local integer fXs
local integer RXs
local unit TXs
local integer YXs
local integer GXs
local unit gXs
local unit hXs
local integer FXs
local integer kXs
local unit jXs
local integer xXs
local integer vXs
local unit mXs
local integer QXs
local integer WXs
local unit EXs
local integer ZXs
local integer UXs
local unit IXs
local integer PXs
local integer AXs
local unit DXs
local integer HXs
local integer JXs
local boolean KXs
if GetUnitTypeId(hPs)==$45303037 then
set rF=GPs
endif
set FPs=GPs
if GetUnitTypeId(FPs)==$45303038 then
endif
set kPs=GPs
if GetUnitTypeId(kPs)==$45303037 then
set KXs=true
else
set jPs=GPs
set KXs=GetUnitTypeId(jPs)==$45303038
endif
if KXs then
set gPs=GetHeroLevel(GPs)
set uF=gPs
set xPs=GPs
if GetUnitTypeId(xPs)==$45303037 then
if gPs==2 then
set vPs=GPs
set mPs=$41305949
call UnitAddAbility(vPs,mPs)
set QPs=GPs
set WPs=$41305949
set EPs=1
call SetUnitAbilityLevel(QPs,WPs,EPs)
set ZPs=GPs
set UPs=$41304D32
call UnitAddAbility(ZPs,UPs)
set IPs=GPs
set PPs=$41304D32
set APs=1
call SetUnitAbilityLevel(IPs,PPs,APs)
endif
if gPs==3 then
if $41305949==0 then
set DPs=GPs
set HPs=$41305949
call UnitAddAbility(DPs,HPs)
set JPs=GPs
set KPs=$41305949
set LPs=1
call SetUnitAbilityLevel(JPs,KPs,LPs)
endif
if $41304D32==0 then
set XPs=GPs
set CPs=$41304D32
call UnitAddAbility(XPs,CPs)
set VPs=GPs
set BPs=$41304D32
set NPs=1
call SetUnitAbilityLevel(VPs,BPs,NPs)
endif
set MPs=GPs
set wAs=$414D3261
call UnitAddAbility(MPs,wAs)
set uAs=GPs
set rAs=$414D3261
set sAs=1
call SetUnitAbilityLevel(uAs,rAs,sAs)
endif
if gPs==4 then
if $41305949==0 then
set tAs=GPs
set iAs=$41305949
call UnitAddAbility(tAs,iAs)
set SAs=GPs
set cAs=$41305949
set oAs=1
call SetUnitAbilityLevel(SAs,cAs,oAs)
endif
if $41304D32==0 then
set OAs=GPs
set lAs=$41304D32
call UnitAddAbility(OAs,lAs)
set bAs=GPs
set yAs=$41304D32
set pAs=1
call SetUnitAbilityLevel(bAs,yAs,pAs)
endif
if $414D3261==0 then
set eAs=GPs
set qAs=$414D3261
call UnitAddAbility(eAs,qAs)
set aAs=GPs
set nAs=$414D3261
set dAs=1
call SetUnitAbilityLevel(aAs,nAs,dAs)
endif
endif
endif
if gPs==5 then
set fAs=GPs
if GetUnitTypeId(fAs)==$45303037 then
set RAs=GPs
set TAs=$41305949
set YAs=2
call SetUnitAbilityLevel(RAs,TAs,YAs)
set GAs=GPs
set gAs=$41304D32
set hAs=1
call SetUnitAbilityLevel(GAs,gAs,hAs)
set FAs=GPs
set kAs=$414D3261
set jAs=1
call SetUnitAbilityLevel(FAs,kAs,jAs)
else
set xAs=GPs
set vAs=$41303945
set mAs=2
call SetUnitAbilityLevel(xAs,vAs,mAs)
endif
endif
if gPs==6 then
set QAs=GPs
if GetUnitTypeId(QAs)==$45303037 then
set WAs=GPs
set EAs=$41305949
set ZAs=2
call SetUnitAbilityLevel(WAs,EAs,ZAs)
set UAs=GPs
set IAs=$41304D32
set PAs=2
call SetUnitAbilityLevel(UAs,IAs,PAs)
set AAs=GPs
set DAs=$414D3261
set HAs=1
call SetUnitAbilityLevel(AAs,DAs,HAs)
else
set JAs=GPs
set KAs=$41304D39
set LAs=2
call SetUnitAbilityLevel(JAs,KAs,LAs)
endif
endif
if gPs>=7 and gPs<9 then
set XAs=GPs
if GetUnitTypeId(XAs)==$45303037 then
set CAs=GPs
set VAs=$41305949
set BAs=2
call SetUnitAbilityLevel(CAs,VAs,BAs)
set NAs=GPs
set MAs=$41304D32
set wDs=2
call SetUnitAbilityLevel(NAs,MAs,wDs)
set uDs=GPs
set rDs=$414D3261
set sDs=2
call SetUnitAbilityLevel(uDs,rDs,sDs)
else
set tDs=GPs
set iDs=$41303945
set SDs=2
call SetUnitAbilityLevel(tDs,iDs,SDs)
set cDs=GPs
set oDs=$41304D39
set ODs=2
call SetUnitAbilityLevel(cDs,oDs,ODs)
set lDs=GPs
set bDs=$41456576
set yDs=2
call SetUnitAbilityLevel(lDs,bDs,yDs)
endif
endif
if gPs==9 then
set pDs=GPs
if GetUnitTypeId(pDs)==$45303037 then
set eDs=GPs
set qDs=$41305949
set aDs=3
call SetUnitAbilityLevel(eDs,qDs,aDs)
set nDs=GPs
set dDs=$41304D32
set fDs=2
call SetUnitAbilityLevel(nDs,dDs,fDs)
set RDs=GPs
set TDs=$414D3261
set YDs=2
call SetUnitAbilityLevel(RDs,TDs,YDs)
else
set GDs=GPs
set gDs=$41303945
set hDs=3
call SetUnitAbilityLevel(GDs,gDs,hDs)
set FDs=GPs
set kDs=$41304D39
set jDs=2
call SetUnitAbilityLevel(FDs,kDs,jDs)
set xDs=GPs
set vDs=$41456576
set mDs=2
call SetUnitAbilityLevel(xDs,vDs,mDs)
endif
endif
if gPs==10 then
set QDs=GPs
if GetUnitTypeId(QDs)==$45303037 then
set WDs=GPs
set EDs=$41305949
set ZDs=3
call SetUnitAbilityLevel(WDs,EDs,ZDs)
set UDs=GPs
set IDs=$41304D32
set PDs=3
call SetUnitAbilityLevel(UDs,IDs,PDs)
set ADs=GPs
set DDs=$414D3261
set HDs=2
call SetUnitAbilityLevel(ADs,DDs,HDs)
else
set JDs=GPs
set KDs=$41303945
set LDs=3
call SetUnitAbilityLevel(JDs,KDs,LDs)
set XDs=GPs
set CDs=$41304D39
set VDs=3
call SetUnitAbilityLevel(XDs,CDs,VDs)
set BDs=GPs
set NDs=$41456576
set MDs=2
call SetUnitAbilityLevel(BDs,NDs,MDs)
endif
endif
if gPs>=11 and gPs<13 then
set wHs=GPs
if GetUnitTypeId(wHs)==$45303037 then
set uHs=GPs
set rHs=$41305949
set sHs=3
call SetUnitAbilityLevel(uHs,rHs,sHs)
set tHs=GPs
set iHs=$41304D32
set SHs=3
call SetUnitAbilityLevel(tHs,iHs,SHs)
set cHs=GPs
set oHs=$414D3261
set OHs=3
call SetUnitAbilityLevel(cHs,oHs,OHs)
else
set lHs=GPs
set bHs=$41303945
set yHs=3
call SetUnitAbilityLevel(lHs,bHs,yHs)
set pHs=GPs
set eHs=$41304D39
set qHs=3
call SetUnitAbilityLevel(pHs,eHs,qHs)
set aHs=GPs
set nHs=$41456576
set dHs=3
call SetUnitAbilityLevel(aHs,nHs,dHs)
endif
endif
if gPs==13 then
set fHs=GPs
if GetUnitTypeId(fHs)==$45303037 then
set RHs=GPs
set THs=$41305949
set YHs=4
call SetUnitAbilityLevel(RHs,THs,YHs)
set GHs=GPs
set gHs=$41304D32
set hHs=3
call SetUnitAbilityLevel(GHs,gHs,hHs)
set FHs=GPs
set kHs=$414D3261
set jHs=3
call SetUnitAbilityLevel(FHs,kHs,jHs)
else
set xHs=GPs
set vHs=$41303945
set mHs=4
call SetUnitAbilityLevel(xHs,vHs,mHs)
set QHs=GPs
set WHs=$41304D39
set EHs=3
call SetUnitAbilityLevel(QHs,WHs,EHs)
set ZHs=GPs
set UHs=$41456576
set IHs=3
call SetUnitAbilityLevel(ZHs,UHs,IHs)
endif
endif
if gPs==14 then
set PHs=GPs
if GetUnitTypeId(PHs)==$45303037 then
set AHs=GPs
set DHs=$41305949
set HHs=4
call SetUnitAbilityLevel(AHs,DHs,HHs)
set JHs=GPs
set KHs=$41304D32
set LHs=4
call SetUnitAbilityLevel(JHs,KHs,LHs)
set XHs=GPs
set CHs=$414D3261
set VHs=3
call SetUnitAbilityLevel(XHs,CHs,VHs)
else
set BHs=GPs
set NHs=$41303945
set MHs=4
call SetUnitAbilityLevel(BHs,NHs,MHs)
set wJs=GPs
set uJs=$41304D39
set rJs=4
call SetUnitAbilityLevel(wJs,uJs,rJs)
set sJs=GPs
set tJs=$41456576
set iJs=3
call SetUnitAbilityLevel(sJs,tJs,iJs)
endif
endif
if gPs>=15 and gPs<17 then
set SJs=GPs
if GetUnitTypeId(SJs)==$45303037 then
set cJs=GPs
set oJs=$41305949
set OJs=4
call SetUnitAbilityLevel(cJs,oJs,OJs)
set lJs=GPs
set bJs=$41304D32
set yJs=4
call SetUnitAbilityLevel(lJs,bJs,yJs)
set pJs=GPs
set eJs=$414D3261
set qJs=4
call SetUnitAbilityLevel(pJs,eJs,qJs)
else
set aJs=GPs
set nJs=$41303945
set dJs=4
call SetUnitAbilityLevel(aJs,nJs,dJs)
set fJs=GPs
set RJs=$41304D39
set TJs=4
call SetUnitAbilityLevel(fJs,RJs,TJs)
set YJs=GPs
set GJs=$41456576
set gJs=4
call SetUnitAbilityLevel(YJs,GJs,gJs)
endif
endif
if gPs==17 then
set hJs=GPs
if GetUnitTypeId(hJs)==$45303037 then
set FJs=GPs
set kJs=$41305949
set jJs=5
call SetUnitAbilityLevel(FJs,kJs,jJs)
set xJs=GPs
set vJs=$41304D32
set mJs=4
call SetUnitAbilityLevel(xJs,vJs,mJs)
set QJs=GPs
set WJs=$414D3261
set EJs=4
call SetUnitAbilityLevel(QJs,WJs,EJs)
else
set ZJs=GPs
set UJs=$41303945
set IJs=5
call SetUnitAbilityLevel(ZJs,UJs,IJs)
set PJs=GPs
set AJs=$41304D39
set DJs=4
call SetUnitAbilityLevel(PJs,AJs,DJs)
set HJs=GPs
set JJs=$41456576
set KJs=4
call SetUnitAbilityLevel(HJs,JJs,KJs)
endif
endif
if gPs==18 then
set LJs=GPs
if GetUnitTypeId(LJs)==$45303037 then
set XJs=GPs
set CJs=$41305949
set VJs=5
call SetUnitAbilityLevel(XJs,CJs,VJs)
set BJs=GPs
set NJs=$41304D32
set MJs=5
call SetUnitAbilityLevel(BJs,NJs,MJs)
set wKs=GPs
set uKs=$414D3261
set rKs=4
call SetUnitAbilityLevel(wKs,uKs,rKs)
else
set sKs=GPs
set tKs=$41303945
set iKs=5
call SetUnitAbilityLevel(sKs,tKs,iKs)
set SKs=GPs
set cKs=$41304D39
set oKs=5
call SetUnitAbilityLevel(SKs,cKs,oKs)
set OKs=GPs
set lKs=$41456576
set bKs=4
call SetUnitAbilityLevel(OKs,lKs,bKs)
endif
endif
if gPs>=19 and gPs<21 then
set yKs=GPs
if GetUnitTypeId(yKs)==$45303037 then
set pKs=GPs
set eKs=$41305949
set qKs=5
call SetUnitAbilityLevel(pKs,eKs,qKs)
set aKs=GPs
set nKs=$41304D32
set dKs=5
call SetUnitAbilityLevel(aKs,nKs,dKs)
set fKs=GPs
set RKs=$414D3261
set TKs=5
call SetUnitAbilityLevel(fKs,RKs,TKs)
else
set YKs=GPs
set GKs=$41303945
set gKs=5
call SetUnitAbilityLevel(YKs,GKs,gKs)
set hKs=GPs
set FKs=$41304D39
set kKs=5
call SetUnitAbilityLevel(hKs,FKs,kKs)
set jKs=GPs
set xKs=$41456576
set vKs=5
call SetUnitAbilityLevel(jKs,xKs,vKs)
endif
endif
if gPs==21 then
set mKs=GPs
if GetUnitTypeId(mKs)==$45303037 then
set QKs=GPs
set WKs=$41305949
set EKs=6
call SetUnitAbilityLevel(QKs,WKs,EKs)
set ZKs=GPs
set UKs=$41304D32
set IKs=5
call SetUnitAbilityLevel(ZKs,UKs,IKs)
set PKs=GPs
set AKs=$414D3261
set DKs=5
call SetUnitAbilityLevel(PKs,AKs,DKs)
else
set HKs=GPs
set JKs=$41303945
set KKs=6
call SetUnitAbilityLevel(HKs,JKs,KKs)
set LKs=GPs
set XKs=$41304D39
set CKs=5
call SetUnitAbilityLevel(LKs,XKs,CKs)
set VKs=GPs
set BKs=$41456576
set NKs=5
call SetUnitAbilityLevel(VKs,BKs,NKs)
endif
endif
if gPs==22 then
set MKs=GPs
if GetUnitTypeId(MKs)==$45303037 then
set wLs=GPs
set uLs=$41305949
set rLs=6
call SetUnitAbilityLevel(wLs,uLs,rLs)
set sLs=GPs
set tLs=$41304D32
set iLs=6
call SetUnitAbilityLevel(sLs,tLs,iLs)
set SLs=GPs
set cLs=$414D3261
set oLs=5
call SetUnitAbilityLevel(SLs,cLs,oLs)
else
set OLs=GPs
set lLs=$41303945
set bLs=6
call SetUnitAbilityLevel(OLs,lLs,bLs)
set yLs=GPs
set pLs=$41304D39
set eLs=6
call SetUnitAbilityLevel(yLs,pLs,eLs)
set qLs=GPs
set aLs=$41456576
set nLs=5
call SetUnitAbilityLevel(qLs,aLs,nLs)
endif
endif
if gPs>=23 and gPs<25 then
set dLs=GPs
if GetUnitTypeId(dLs)==$45303037 then
set fLs=GPs
set RLs=$41305949
set TLs=6
call SetUnitAbilityLevel(fLs,RLs,TLs)
set YLs=GPs
set GLs=$41304D32
set gLs=6
call SetUnitAbilityLevel(YLs,GLs,gLs)
set hLs=GPs
set FLs=$414D3261
set kLs=6
call SetUnitAbilityLevel(hLs,FLs,kLs)
else
set jLs=GPs
set xLs=$41303945
set vLs=6
call SetUnitAbilityLevel(jLs,xLs,vLs)
set mLs=GPs
set QLs=$41304D39
set WLs=6
call SetUnitAbilityLevel(mLs,QLs,WLs)
set ELs=GPs
set ZLs=$41456576
set ULs=6
call SetUnitAbilityLevel(ELs,ZLs,ULs)
endif
endif
if gPs==25 then
set ILs=GPs
if GetUnitTypeId(ILs)==$45303037 then
set PLs=GPs
set ALs=$41305949
set DLs=7
call SetUnitAbilityLevel(PLs,ALs,DLs)
set HLs=GPs
set JLs=$41304D32
set KLs=6
call SetUnitAbilityLevel(HLs,JLs,KLs)
set LLs=GPs
set XLs=$414D3261
set CLs=6
call SetUnitAbilityLevel(LLs,XLs,CLs)
else
set VLs=GPs
set BLs=$41303945
set NLs=7
call SetUnitAbilityLevel(VLs,BLs,NLs)
set MLs=GPs
set wXs=$41304D39
set uXs=6
call SetUnitAbilityLevel(MLs,wXs,uXs)
set rXs=GPs
set sXs=$41456576
set tXs=6
call SetUnitAbilityLevel(rXs,sXs,tXs)
endif
endif
if gPs==26 then
set iXs=GPs
if GetUnitTypeId(iXs)==$45303037 then
set SXs=GPs
set cXs=$41305949
set oXs=7
call SetUnitAbilityLevel(SXs,cXs,oXs)
set OXs=GPs
set lXs=$41304D32
set bXs=7
call SetUnitAbilityLevel(OXs,lXs,bXs)
set yXs=GPs
set pXs=$414D3261
set eXs=6
call SetUnitAbilityLevel(yXs,pXs,eXs)
else
set qXs=GPs
set aXs=$41303945
set nXs=7
call SetUnitAbilityLevel(qXs,aXs,nXs)
set dXs=GPs
set fXs=$41304D39
set RXs=7
call SetUnitAbilityLevel(dXs,fXs,RXs)
set TXs=GPs
set YXs=$41456576
set GXs=6
call SetUnitAbilityLevel(TXs,YXs,GXs)
endif
endif
if gPs>=27 then
set gXs=GPs
if GetUnitTypeId(gXs)==$45303037 then
set hXs=GPs
set FXs=$41305949
set kXs=7
call SetUnitAbilityLevel(hXs,FXs,kXs)
set jXs=GPs
set xXs=$41304D32
set vXs=7
call SetUnitAbilityLevel(jXs,xXs,vXs)
set mXs=GPs
set QXs=$414D3261
set WXs=7
call SetUnitAbilityLevel(mXs,QXs,WXs)
else
set EXs=GPs
set ZXs=$41303945
set UXs=7
call SetUnitAbilityLevel(EXs,ZXs,UXs)
set IXs=GPs
set PXs=$41304D39
set AXs=7
call SetUnitAbilityLevel(IXs,PXs,AXs)
set DXs=GPs
set HXs=$41456576
set JXs=7
call SetUnitAbilityLevel(DXs,HXs,JXs)
endif
endif
endif
set GPs=null
set hPs=null
set FPs=null
set kPs=null
set jPs=null
set xPs=null
set vPs=null
set QPs=null
set ZPs=null
set IPs=null
set DPs=null
set JPs=null
set XPs=null
set VPs=null
set MPs=null
set uAs=null
set tAs=null
set SAs=null
set OAs=null
set bAs=null
set eAs=null
set aAs=null
set fAs=null
set RAs=null
set GAs=null
set FAs=null
set xAs=null
set QAs=null
set WAs=null
set UAs=null
set AAs=null
set JAs=null
set XAs=null
set CAs=null
set NAs=null
set uDs=null
set tDs=null
set cDs=null
set lDs=null
set pDs=null
set eDs=null
set nDs=null
set RDs=null
set GDs=null
set FDs=null
set xDs=null
set QDs=null
set WDs=null
set UDs=null
set ADs=null
set JDs=null
set XDs=null
set BDs=null
set wHs=null
set uHs=null
set tHs=null
set cHs=null
set lHs=null
set pHs=null
set aHs=null
set fHs=null
set RHs=null
set GHs=null
set FHs=null
set xHs=null
set QHs=null
set ZHs=null
set PHs=null
set AHs=null
set JHs=null
set XHs=null
set BHs=null
set wJs=null
set sJs=null
set SJs=null
set cJs=null
set lJs=null
set pJs=null
set aJs=null
set fJs=null
set YJs=null
set hJs=null
set FJs=null
set xJs=null
set QJs=null
set ZJs=null
set PJs=null
set HJs=null
set LJs=null
set XJs=null
set BJs=null
set wKs=null
set sKs=null
set SKs=null
set OKs=null
set yKs=null
set pKs=null
set aKs=null
set fKs=null
set YKs=null
set hKs=null
set jKs=null
set mKs=null
set QKs=null
set ZKs=null
set PKs=null
set HKs=null
set LKs=null
set VKs=null
set MKs=null
set wLs=null
set sLs=null
set SLs=null
set OLs=null
set yLs=null
set qLs=null
set dLs=null
set fLs=null
set YLs=null
set hLs=null
set jLs=null
set mLs=null
set ELs=null
set ILs=null
set PLs=null
set HLs=null
set LLs=null
set VLs=null
set MLs=null
set rXs=null
set iXs=null
set SXs=null
set OXs=null
set yXs=null
set qXs=null
set dXs=null
set TXs=null
set gXs=null
set hXs=null
set jXs=null
set mXs=null
set EXs=null
set IXs=null
set DXs=null
endfunction
function LZt takes nothing returns boolean
local trigger UZt
local trigger IZt
local playerunitevent PZt
local trigger AZt
local playerunitevent DZt
local integer HZt
local trigger JZt
local code KZt
set fY=CreateTrigger()
set UZt=fY
call DisableTrigger(UZt)
set IZt=fY
set PZt=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set AZt=IZt
set DZt=PZt
set HZt=0
loop
call TriggerRegisterPlayerUnitEvent(AZt,Player(HZt),DZt,null)
set HZt=HZt+1
exitwhen HZt==bj_MAX_PLAYER_SLOTS
endloop
set JZt=fY
set KZt=Zww
call TriggerAddAction(JZt,KZt)
set UZt=null
set IZt=null
set PZt=null
set AZt=null
set DZt=null
set JZt=null
return true
endfunction
function L_r takes nothing returns nothing
local integer H_r=GetResearched()
local player J_r
local trigger K_r
if H_r==$52686673 then
set J_r=GetTriggerPlayer()
if GetPlayerTechCount(J_r,$52686673,true)==1 then
set K_r=of
call EnableTrigger(K_r)
endif
endif
set J_r=null
set K_r=null
endfunction
function Lai takes nothing returns boolean
local trigger Uai
local rect Iai
local region Pai
local trigger Aai
local boolexpr Dai
local trigger Hai
local playerunitevent Jai
local code Kai
set GT=CreateTrigger()
set Uai=GT
set Iai=bj_mapInitialPlayableArea
set Pai=CreateRegion()
call RegionAddRect(Pai,Iai)
call TriggerRegisterEnterRegion(Uai,Pai,null)
set Aai=GT
set Dai=Condition(L0w)
call TriggerAddCondition(Aai,Dai)
set Hai=GT
call DisableTrigger(Hai)
set Jai=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Kai=X0w
call emO(Jai,null,Kai,null)
set Uai=null
set Iai=null
set Pai=null
set Aai=null
set Dai=null
set Hai=null
set Jai=null
return true
endfunction
function LeS takes nothing returns nothing
local rect KeS=Dc
set Xo[3]=Location(GetRectCenterX(KeS),GetRectCenterY(KeS))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set KeS=null
endfunction
function Lfl takes nothing returns nothing
local integer Ffl=GetResearched()
local unit kfl
local player jfl
local integer xfl
local unit vfl
local integer mfl
local unit Qfl
local unit Wfl
local integer Efl
local player Zfl
local unit Ufl
local integer Ifl
local integer Pfl
local player Afl
local unit Dfl
local unit Hfl
local unit Jfl
local unit Kfl
if Ffl==$52303539 then
set kfl=GetTriggerUnit()
set Qfl=kfl
set jfl=GetOwningPlayer(Qfl)
set xfl=GetPlayerTechCount(jfl,Ffl,true)
if xfl==1 then
set Zfl=jfl
set Wfl=c[GetPlayerId(Zfl)]
set Efl=$41303034
call UnitAddAbility(Wfl,Efl)
else
set Afl=jfl
set Ufl=c[GetPlayerId(Afl)]
set Ifl=$41303034
set Pfl=xfl
call SetUnitAbilityLevel(Ufl,Ifl,Pfl)
endif
endif
if Ffl==$52303545 then
set vfl=GetTriggerUnit()
set Dfl=vfl
set mfl=GetPlayerTechCount(GetOwningPlayer(Dfl),$52303545,true)
if mfl!=2 then
set Hfl=vfl
call SetPlayerTechResearched(GetOwningPlayer(Hfl),$52303454,mfl+1)
else
set Jfl=vfl
if GetUnitTypeId(Jfl)==$6F303248 and mfl==2 then
set Kfl=vfl
call SetPlayerTechResearched(GetOwningPlayer(Kfl),$52303454,3)
endif
endif
endif
set kfl=null
set jfl=null
set vfl=null
set Qfl=null
set Wfl=null
set Zfl=null
set Ufl=null
set Afl=null
set Dfl=null
set Hfl=null
set Jfl=null
set Kfl=null
endfunction
function Lne takes nothing returns nothing
local unit ine=GetDyingUnit()
local unit ane=ine
local integer Sne=GetUnitTypeId(ane)
local unit nne=ine
local integer cne=GetPlayerTechCount(GetOwningPlayer(nne),$52303359,true)
local real one
local real One
local group lne
local filterfunc bne
local real yne
local unit pne
local group ene
local unit qne
local unit dne
local unit fne
local group Rne
local group Tne
local unit Yne
local unit Gne
local real gne
local unit hne
local unitstate Fne
local real kne
local unit jne
local unitstate xne
local group vne
local boolexpr mne
local unit Qne
local unit Wne
local real Ene
local unit Zne
local integer Une
local unit Ine
local integer Pne
local integer Ane
local unit Dne
local string Hne
local unit Jne
local unitstate Kne
if Sne==$6E666F64 then
set dne=ine
set one=GetUnitX(dne)
set fne=ine
set One=GetUnitY(fne)
set lne=CreateGroup()
set bne=Filter(Q0w)
set yne=20.*cne
call GroupEnumUnitsInRange(lne,one,One,500.,bne)
set ene=lne
loop
set Rne=ene
exitwhen not (FirstOfGroup(Rne)!=null)
set Tne=ene
set Yne=FirstOfGroup(Tne)
call GroupRemoveUnit(Tne,Yne)
set pne=Yne
set Gne=pne
set gne=yne
set hne=Gne
set Fne=UNIT_STATE_LIFE
set kne=gne
set Jne=hne
set Kne=Fne
set jne=hne
set xne=Fne
call SetUnitState(Jne,Kne,GetUnitState(jne,xne)+kne)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",pne,"chest"))
endloop
set vne=lne
call DestroyGroup(vne)
set mne=bne
call DestroyBoolExpr(mne)
if cne>=3 then
set Qne=ine
set qne=CreateUnit(GetOwningPlayer(Qne),$75303030,one,One,0.)
set Wne=qne
set Ene=3.
call UnitApplyTimedLife(Wne,$42544C46,Ene)
set Zne=qne
set Une=$41333031
call UnitAddAbility(Zne,Une)
if cne==4 then
set Ine=qne
set Pne=$41333031
set Ane=2
call SetUnitAbilityLevel(Ine,Pne,Ane)
endif
set Dne=qne
set Hne="roar"
call IssueImmediateOrder(Dne,Hne)
endif
endif
set ine=null
set lne=null
set bne=null
set pne=null
set ene=null
set qne=null
set ane=null
set nne=null
set dne=null
set fne=null
set Rne=null
set Tne=null
set Yne=null
set Gne=null
set hne=null
set Fne=null
set jne=null
set xne=null
set vne=null
set mne=null
set Qne=null
set Wne=null
set Zne=null
set Ine=null
set Dne=null
set Jne=null
set Kne=null
endfunction
function LoS takes nothing returns nothing
local unit GoS=GetKillingUnit()
local unit goS=GetDyingUnit()
local unit xoS=goS
local real hoS=GetUnitX(xoS)
local unit voS=goS
local real FoS=GetUnitY(voS)
local unit moS=GoS
local integer QoS=$41304D53
local integer koS=GetUnitAbilityLevel(moS,QoS)
local unit WoS=GoS
local unit joS=CreateUnit(GetOwningPlayer(WoS),$75303030,hoS,FoS,0.)
local unit EoS=joS
local real ZoS=3.
local unit UoS
local integer IoS
local unit PoS
local integer AoS
local integer DoS
local unit HoS
local string JoS
local widget KoS
call UnitApplyTimedLife(EoS,$42544C46,ZoS)
set UoS=joS
set IoS=$41304D52
call UnitAddAbility(UoS,IoS)
set PoS=joS
set AoS=$41304D52
set DoS=koS
call SetUnitAbilityLevel(PoS,AoS,DoS)
set HoS=joS
set JoS="deathcoil"
set KoS=GoS
call IssueTargetOrder(HoS,JoS,KoS)
set GoS=null
set goS=null
set joS=null
set xoS=null
set voS=null
set moS=null
set WoS=null
set EoS=null
set UoS=null
set PoS=null
set HoS=null
set KoS=null
endfunction
function Lol takes nothing returns boolean
local trigger Pol
local rect Aol
local region Dol
local trigger Hol
local boolexpr Jol
local trigger Kol
set wf=CreateTrigger()
call CreateTrigger()
set Pol=wf
set Aol=bj_mapInitialPlayableArea
set Dol=CreateRegion()
call RegionAddRect(Dol,Aol)
call TriggerRegisterEnterRegion(Pol,Dol,null)
set Hol=wf
set Jol=Condition(i8)
call TriggerAddCondition(Hol,Jol)
set Kol=wf
call DisableTrigger(Kol)
set Pol=null
set Aol=null
set Dol=null
set Hol=null
set Jol=null
set Kol=null
return true
endfunction
function Lot takes nothing returns boolean
local trigger Dot
local trigger Hot
local playerunitevent Jot
local integer Kot
set pe=CreateTrigger()
set Dot=pe
call DisableTrigger(Dot)
set Hot=pe
set Jot=EVENT_PLAYER_UNIT_DEATH
set Kot=0
loop
call TriggerRegisterPlayerUnitEvent(Hot,Player(Kot),Jot,null)
set Kot=Kot+1
exitwhen Kot==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(pe,O2)
set Dot=null
set Hot=null
set Jot=null
return true
endfunction
function LrS takes nothing returns boolean
return true
endfunction
function Lvi takes nothing returns boolean
return true
endfunction
function Lvw takes nothing returns boolean
local playerunitevent Dvw=EVENT_PLAYER_UNIT_ATTACKED
local code Hvw=DM
local playerunitevent Jvw
local code Kvw
call emO(Dvw,null,Hvw,null)
set Jvw=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Kvw=HM
call emO(Jvw,null,Kvw,null)
set Dvw=null
set Jvw=null
return true
endfunction
function Lxi takes nothing returns boolean
return true
endfunction
function M2e takes nothing returns boolean
local playerunitevent B2e=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code N2e=I0w
call emO(B2e,null,N2e,null)
set B2e=null
return true
endfunction
function eCe takes player sCe,integer tCe,real iCe,real SCe,real cCe returns nothing
local integer oCe=GetPlayerId(sCe)
local real OCe=SCe+100.*Cos(iCe*bj_DEGTORAD)
local real lCe=cCe+100.*Sin(iCe*bj_DEGTORAD)
local real bCe=SCe+85.*Cos(iCe*bj_DEGTORAD)
local real yCe=cCe+85.*Sin(iCe*bj_DEGTORAD)
local player pCe=Player(oCe+4)
if tCe>=1 then
if A[oCe]==$6E7A6F6D then
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
endif
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,D[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,H[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,X[oCe],bCe,yCe,iCe)
endif
if tu[oCe]==true then
call CreateUnit(pCe,C[oCe],OCe,lCe,iCe)
endif
if tCe>=2 then
if J[oCe]==$6E303358 then
call CreateUnit(pCe,J[oCe],OCe,lCe,iCe)
else
call CreateUnit(pCe,J[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,J[oCe],OCe,lCe,iCe)
endif
if A[oCe]==$6E7A6F6D then
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
endif
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
endif
if tCe>=3 then
call CreateUnit(pCe,D[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,H[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,K[oCe],bCe,yCe,iCe)
endif
if tCe==4 then
call CreateUnit(pCe,J[oCe],OCe,lCe,iCe)
if A[oCe]==$6E7A6F6D then
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
endif
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,L[oCe],bCe,yCe,iCe)
endif
if VT[oCe]==true then
if BT[oCe]==true then
call CreateUnit(pCe,A[oCe],OCe,lCe,iCe)
call CreateUnit(pCe,D[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,J[oCe],OCe,lCe,iCe)
endif
if NT[oCe]==true then
call CreateUnit(pCe,H[oCe],bCe,yCe,iCe)
call CreateUnit(pCe,D[oCe],bCe,yCe,iCe)
endif
if MT[oCe]==true then
call CreateUnit(pCe,L[oCe],bCe,yCe,iCe)
endif
endif
set pCe=null
endfunction
function M3l takes nothing returns nothing
local integer NMl=GetSpellAbilityId()
local unit MMl
local group w3l
local real u3l
local real r3l
local filterfunc s3l
local unit t3l
local group i3l
local unit S3l
local unit c3l
local integer o3l
local unit O3l
local unit l3l
local group b3l
local group y3l
local unit p3l
local unit e3l
local unit q3l
local unit a3l
local unit n3l
local real d3l
local unit f3l
local integer R3l
local unit T3l
local string Y3l
local widget G3l
local group g3l
local player h3l
local unit F3l
local effect k3l
local string j3l
local real x3l
local real v3l
local unit m3l
local effect Q3l
local string W3l
local real E3l
local real Z3l
local unit U3l
local effect I3l
local string P3l
local real A3l
local real D3l
local unit H3l
local player J3l
local real K3l
local real L3l
local real X3l
local real C3l
local real V3l
local real B3l
local real N3l
if NMl==$41777268 then
set MMl=GetSpellAbilityUnit()
set w3l=CreateGroup()
set O3l=MMl
set u3l=GetUnitX(O3l)
set l3l=MMl
set r3l=GetUnitY(l3l)
set s3l=Filter(Guw)
call GroupEnumUnitsInRange(w3l,u3l,r3l,1000.,s3l)
set i3l=w3l
loop
set b3l=i3l
exitwhen not (FirstOfGroup(b3l)!=null)
set y3l=i3l
set p3l=FirstOfGroup(y3l)
call GroupRemoveUnit(y3l,p3l)
set t3l=p3l
set e3l=MMl
set J3l=GetOwningPlayer(e3l)
set q3l=t3l
set K3l=GetUnitX(q3l)
set a3l=t3l
set S3l=CreateUnit(J3l,$75303030,K3l,GetUnitY(a3l),0.)
set n3l=S3l
set d3l=3.
call UnitApplyTimedLife(n3l,$42544C46,d3l)
set f3l=S3l
set R3l=$41616D32
call UnitAddAbility(f3l,R3l)
set T3l=S3l
set Y3l="antimagicshell"
set G3l=t3l
call IssueTargetOrder(T3l,Y3l,G3l)
endloop
set g3l=w3l
call DestroyGroup(g3l)
endif
if NMl==$4132344F then
set c3l=GetSpellAbilityUnit()
set F3l=c3l
set h3l=GetOwningPlayer(F3l)
set o3l=GetPlayerId(h3l)
set j3l="Void Teleport Silver Target.mdl"
set L3l=lu[o3l]
set X3l=pu[o3l]
set x3l=L3l
set v3l=X3l
set k3l=AddSpecialEffect(j3l,x3l,v3l)
call DestroyEffect(k3l)
set m3l=c3l
call eCe(GetOwningPlayer(m3l),Xw[o3l],Su[o3l],lu[o3l],pu[o3l])
set W3l="Void Teleport Silver Target.mdl"
set C3l=ou[o3l]
set V3l=bu[o3l]
set E3l=C3l
set Z3l=V3l
set Q3l=AddSpecialEffect(W3l,E3l,Z3l)
call DestroyEffect(Q3l)
set U3l=c3l
call eCe(GetOwningPlayer(U3l),Kw[o3l],iu[o3l],ou[o3l],bu[o3l])
set P3l="Void Teleport Silver Target.mdl"
set B3l=Ou[o3l]
set N3l=yu[o3l]
set A3l=B3l
set D3l=N3l
set I3l=AddSpecialEffect(P3l,A3l,D3l)
call DestroyEffect(I3l)
set H3l=c3l
call eCe(GetOwningPlayer(H3l),Lw[o3l],cu[o3l],Ou[o3l],yu[o3l])
endif
set MMl=null
set w3l=null
set s3l=null
set t3l=null
set i3l=null
set S3l=null
set c3l=null
set O3l=null
set l3l=null
set b3l=null
set y3l=null
set p3l=null
set e3l=null
set q3l=null
set a3l=null
set n3l=null
set f3l=null
set T3l=null
set G3l=null
set g3l=null
set h3l=null
set F3l=null
set k3l=null
set m3l=null
set Q3l=null
set U3l=null
set I3l=null
set H3l=null
set J3l=null
endfunction
function IPw takes string VIw returns nothing
local integer BIw
local unit NIw
local integer MIw
local unit wPw
local integer uPw
local unit rPw
local integer sPw
local unit tPw
local unit iPw
local unit SPw
local unit cPw
local real oPw
local unit OPw
local integer lPw
local unit bPw
local string yPw
local effect pPw
local string ePw
local real qPw
local real aPw
local unit nPw
local unit dPw
local unit fPw
local unit RPw
local integer TPw
local unit YPw
local integer GPw
local unit gPw
local integer hPw
local integer FPw
local string kPw
local integer jPw
local real xPw
local integer vPw
local string mPw
local player QPw
local real WPw
local real EPw
local real ZPw
local real UPw
set aW[qW]=VIw
set qW=qW+1
set BIw=GetSpellAbilityId()
if BIw==$41323341 then
set NIw=GetSpellAbilityUnit()
set rPw=NIw
set sPw=$41323341
set MIw=GetUnitAbilityLevel(rPw,sPw)
set tPw=NIw
set QPw=GetOwningPlayer(tPw)
set iPw=NIw
set WPw=GetUnitX(iPw)
set SPw=NIw
set wPw=CreateUnit(QPw,$75303030,WPw,GetUnitY(SPw),0.)
set cPw=wPw
set oPw=3.
call UnitApplyTimedLife(cPw,$42544C46,oPw)
set OPw=wPw
set lPw=$41323342
call UnitAddAbility(OPw,lPw)
set bPw=wPw
set yPw="stomp"
call IssueImmediateOrder(bPw,yPw)
set ePw="Heaven's Gate.mdx"
set nPw=NIw
set dPw=nPw
set EPw=GetUnitX(dPw)
set fPw=nPw
set ZPw=EPw
set UPw=GetUnitY(fPw)
set qPw=ZPw
set aPw=UPw
set pPw=AddSpecialEffect(ePw,qPw,aPw)
call DestroyEffect(pPw)
set RPw=NIw
set TPw=$41323343
call UnitAddAbility(RPw,TPw)
set YPw=NIw
set GPw=$41323344
call UnitAddAbility(YPw,GPw)
set gPw=NIw
set hPw=$41323344
set FPw=MIw
call SetUnitAbilityLevel(gPw,hPw,FPw)
set kPw="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Anduin in Anduin, line 374"
set aW[qW]=kPw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set jPw=fF
set RF[jPw]=799
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Anduin.","when calling error in Anduin, line 374")
set jPw=0
endif
else
set dF=dF-1
set jPw=nF[dF]
set RF[jPw]=799
endif
set qW=qW-1
set uPw=jPw
set Qk[uPw]=NIw
set xPw=10.
set vPw=uPw
set mPw="when calling doAfter in Anduin, line 374"
set aW[qW]=mPw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),xPw,vPw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set NIw=null
set wPw=null
set rPw=null
set tPw=null
set iPw=null
set SPw=null
set cPw=null
set OPw=null
set bPw=null
set pPw=null
set nPw=null
set dPw=null
set fPw=null
set RPw=null
set YPw=null
set gPw=null
set QPw=null
endfunction
function M6S takes nothing returns nothing
set qW=0
call IPw("via function reference Anduin, line 361")
endfunction
function M6e takes nothing returns nothing
local unit r5e=GetTriggerUnit()
local unit t5e=r5e
local player s5e=GetOwningPlayer(t5e)
local unit i5e
local string S5e
local real c5e
local real o5e
local unit O5e
local unittype l5e
local unit b5e
local string y5e
local real p5e
local real e5e
local unit q5e
local unittype a5e
local unit n5e
local string d5e
local real f5e
local real R5e
local unit T5e
local unittype Y5e
local unit G5e
local string g5e
local real h5e
local real F5e
local unit k5e
local unittype j5e
local unit x5e
local string v5e
local real m5e
local real Q5e
local unit W5e
local unittype E5e
local unit Z5e
local string U5e
local real I5e
local real P5e
local unit A5e
local unittype D5e
local unit H5e
local string J5e
local real K5e
local real L5e
local unit X5e
local unittype C5e
local unit V5e
local string B5e
local real N5e
local real M5e
local unit w6e
local unittype u6e
local unit r6e
local string s6e
local real t6e
local real i6e
local unit S6e
local unittype c6e
local unit o6e
local string O6e
local real l6e
local real b6e
local unit y6e
local unittype p6e
local unit e6e
local string q6e
local real a6e
local real n6e
local unit d6e
local unittype f6e
local unit R6e
local string T6e
local real Y6e
local real G6e
local unit g6e
local unittype h6e
local real F6e
local real k6e
local real j6e
local real x6e
local real v6e
local real m6e
local real Q6e
local real W6e
local real E6e
local real Z6e
local real U6e
local real I6e
local real P6e
local real A6e
local real D6e
local real H6e
local real J6e
local real K6e
local real L6e
local real X6e
local real C6e
local real V6e
local real B6e
local real N6e
if s5e==du then
if Ew[1]==false then
set i5e=r5e
set S5e="attack"
set F6e=Qw[41]
set k6e=Ww[41]
set c5e=F6e
set o5e=k6e
call IssuePointOrder(i5e,S5e,c5e,o5e)
set O5e=r5e
set l5e=UNIT_TYPE_HERO
if IsUnitType(O5e,l5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,41)
endif
elseif Ew[1]==true and Ew[2]==false then
set b5e=r5e
set y5e="attack"
set j6e=Qw[44]
set x6e=Ww[44]
set p5e=j6e
set e5e=x6e
call IssuePointOrder(b5e,y5e,p5e,e5e)
set q5e=r5e
set a5e=UNIT_TYPE_HERO
if IsUnitType(q5e,a5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,44)
endif
elseif Ew[1]==true and Ew[2]==true then
set n5e=r5e
set d5e="attack"
set v6e=Qw[47]
set m6e=Ww[47]
set f5e=v6e
set R5e=m6e
call IssuePointOrder(n5e,d5e,f5e,R5e)
set T5e=r5e
set Y5e=UNIT_TYPE_HERO
if IsUnitType(T5e,Y5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,47)
endif
endif
endif
if s5e==nu then
if Ew[0]==false then
set G5e=r5e
set g5e="attack"
set Q6e=Qw[38]
set W6e=Ww[38]
set h5e=Q6e
set F5e=W6e
call IssuePointOrder(G5e,g5e,h5e,F5e)
set k5e=r5e
set j5e=UNIT_TYPE_HERO
if IsUnitType(k5e,j5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,38)
endif
elseif Ew[3]==false and Ew[0]==true then
set x5e=r5e
set v5e="attack"
set E6e=Qw[47]
set Z6e=Ww[47]
set m5e=E6e
set Q5e=Z6e
call IssuePointOrder(x5e,v5e,m5e,Q5e)
set W5e=r5e
set E5e=UNIT_TYPE_HERO
if IsUnitType(W5e,E5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,47)
endif
elseif Ew[2]==false and Ew[3]==true and Ew[0]==true then
set Z5e=r5e
set U5e="attack"
set U6e=Qw[44]
set I6e=Ww[44]
set I5e=U6e
set P5e=I6e
call IssuePointOrder(Z5e,U5e,I5e,P5e)
set A5e=r5e
set D5e=UNIT_TYPE_HERO
if IsUnitType(A5e,D5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,44)
endif
endif
endif
if s5e==fu then
if Ew[3]==false then
set H5e=r5e
set J5e="attack"
set P6e=Qw[47]
set A6e=Ww[47]
set K5e=P6e
set L5e=A6e
call IssuePointOrder(H5e,J5e,K5e,L5e)
set X5e=r5e
set C5e=UNIT_TYPE_HERO
if IsUnitType(X5e,C5e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,47)
endif
elseif Ew[1]==false and Ew[3]==true then
set V5e=r5e
set B5e="attack"
set D6e=Qw[41]
set H6e=Ww[41]
set N5e=D6e
set M5e=H6e
call IssuePointOrder(V5e,B5e,N5e,M5e)
set w6e=r5e
set u6e=UNIT_TYPE_HERO
if IsUnitType(w6e,u6e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,41)
endif
elseif Ew[0]==false and Ew[1]==true and Ew[3]==true then
set r6e=r5e
set s6e="attack"
set J6e=Qw[38]
set K6e=Ww[38]
set t6e=J6e
set i6e=K6e
call IssuePointOrder(r6e,s6e,t6e,i6e)
set S6e=r5e
set c6e=UNIT_TYPE_HERO
if IsUnitType(S6e,c6e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,38)
endif
endif
endif
if s5e==Ru then
if Ew[2]==false then
set o6e=r5e
set O6e="attack"
set L6e=Qw[44]
set X6e=Ww[44]
set l6e=L6e
set b6e=X6e
call IssuePointOrder(o6e,O6e,l6e,b6e)
set y6e=r5e
set p6e=UNIT_TYPE_HERO
if IsUnitType(y6e,p6e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,44)
endif
elseif Ew[0]==false and Ew[2]==true then
set e6e=r5e
set q6e="attack"
set C6e=Qw[38]
set V6e=Ww[38]
set a6e=C6e
set n6e=V6e
call IssuePointOrder(e6e,q6e,a6e,n6e)
set d6e=r5e
set f6e=UNIT_TYPE_HERO
if IsUnitType(d6e,f6e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,38)
endif
elseif Ew[1]==false and Ew[0]==true and Ew[2]==true then
set R6e=r5e
set T6e="attack"
set B6e=Qw[41]
set N6e=Ww[41]
set Y6e=B6e
set G6e=N6e
call IssuePointOrder(R6e,T6e,Y6e,G6e)
set g6e=r5e
set h6e=UNIT_TYPE_HERO
if IsUnitType(g6e,h6e) then
call SaveInteger(qu,GetHandleId(r5e),$6D6F7665,41)
endif
endif
endif
set r5e=null
set s5e=null
set t5e=null
set i5e=null
set O5e=null
set l5e=null
set b5e=null
set q5e=null
set a5e=null
set n5e=null
set T5e=null
set Y5e=null
set G5e=null
set k5e=null
set j5e=null
set x5e=null
set W5e=null
set E5e=null
set Z5e=null
set A5e=null
set D5e=null
set H5e=null
set X5e=null
set C5e=null
set V5e=null
set w6e=null
set u6e=null
set r6e=null
set S6e=null
set c6e=null
set o6e=null
set y6e=null
set p6e=null
set e6e=null
set d6e=null
set f6e=null
set R6e=null
set g6e=null
set h6e=null
endfunction
function qKO takes string qPO returns nothing
local trigger aPO
local unit nPO
local player dPO
local player fPO
local integer RPO
local real TPO
local real YPO
local integer GPO
local integer gPO
local integer hPO
local integer FPO
local integer kPO
local integer jPO
local integer xPO
local integer vPO
local integer mPO
local integer QPO
local integer WPO
local real EPO
local real ZPO
local integer UPO
local integer IPO
local integer PPO
local integer APO
local integer DPO
local integer HPO
local integer JPO
local integer KPO
local integer LPO
local integer XPO
local integer CPO
local integer VPO
local unit BPO
local player NPO
local player MPO
local trigger wAO
local unit uAO
local sound rAO
local unit sAO
local player tAO
local boolean iAO
local player SAO
local integer cAO
local player oAO
local playerstate OAO
local integer lAO
local player bAO
local playerstate yAO
local string pAO
local real eAO
local string qAO
local real aAO
local unit nAO
local player dAO
local boolean fAO
local unit RAO
local unit TAO
local unit YAO
local unit GAO
local integer gAO
local unit hAO
local integer FAO
local unit kAO
local integer jAO
local integer xAO
local unit vAO
local unit mAO
local integer QAO
local unit WAO
local integer EAO
local unit ZAO
local integer UAO
local integer IAO
local unit PAO
local unit AAO
local integer DAO
local unit HAO
local integer JAO
local unit KAO
local integer LAO
local integer XAO
local unit CAO
local unit VAO
local integer BAO
local unit NAO
local integer MAO
local unit wDO
local integer uDO
local integer rDO
local unit sDO
local unit tDO
local integer iDO
local unit SDO
local integer cDO
local unit oDO
local integer ODO
local unit lDO
local integer bDO
local integer yDO
local unit pDO
local integer eDO
local unit qDO
local integer aDO
local integer nDO
local unit dDO
local unit fDO
local integer RDO
local unit TDO
local unit YDO
local integer GDO
local unit gDO
local unit hDO
local integer FDO
local unit kDO
local integer jDO
local unit xDO
local integer vDO
local integer mDO
local unit QDO
local unit WDO
local integer EDO
local unit ZDO
local integer UDO
local unit IDO
local integer PDO
local integer ADO
local unit DDO
local unit HDO
local integer JDO
local unit KDO
local integer LDO
local unit XDO
local integer CDO
local integer VDO
local unit BDO
local unit NDO
local integer MDO
local unit wHO
local integer uHO
local unit rHO
local integer sHO
local integer tHO
local unit iHO
local unit SHO
local integer cHO
local unit oHO
local integer OHO
local unit lHO
local integer bHO
local integer yHO
local unit pHO
local unit eHO
local unit qHO
local integer aHO
local unit nHO
local unit dHO
local integer fHO
local unit RHO
local integer THO
local unit YHO
local integer GHO
local integer gHO
local unit hHO
local unit FHO
local integer kHO
local unit jHO
local integer xHO
local unit vHO
local integer mHO
local integer QHO
local unit WHO
local unit EHO
local integer ZHO
local unit UHO
local integer IHO
local unit PHO
local integer AHO
local integer DHO
local unit HHO
local unit JHO
local integer KHO
local unit LHO
local integer XHO
local unit CHO
local integer VHO
local integer BHO
local unit NHO
local unit MHO
local integer wJO
local unit uJO
local integer rJO
local unit sJO
local integer tJO
local unit iJO
local integer SJO
local integer cJO
local unit oJO
local integer OJO
local unit lJO
local integer bJO
local integer yJO
local unit pJO
local unit eJO
local integer qJO
local unit aJO
local unit nJO
local integer dJO
local unit fJO
local unit RJO
local integer TJO
local unit YJO
local integer GJO
local unit gJO
local integer hJO
local integer FJO
local unit kJO
local unit jJO
local integer xJO
local unit vJO
local integer mJO
local unit QJO
local integer WJO
local integer EJO
local unit ZJO
local unit UJO
local integer IJO
local unit PJO
local integer AJO
local unit DJO
local integer HJO
local integer JJO
local unit KJO
local unit LJO
local integer XJO
local unit CJO
local integer VJO
local unit BJO
local integer NJO
local integer MJO
local unit wKO
local unit uKO
local integer rKO
local unit sKO
local integer tKO
local unit iKO
local integer SKO
local integer cKO
local string oKO
local integer OKO
local real lKO
local integer bKO
local string yKO
local player pKO
local playerstate eKO
set aW[qW]=qPO
set qW=qW+1
set aPO=GetTriggeringTrigger()
set nPO=GetEnteringUnit()
set BPO=nPO
set dPO=GetOwningPlayer(BPO)
set NPO=dPO
set fPO=Player(GetPlayerId(NPO)-4)
set MPO=fPO
set RPO=GetPlayerId(MPO)
set wAO=aPO
call DisableTrigger(wAO)
set uAO=G[2]
if GetOwningPlayer(uAO)==Player(15) then
set rAO=bj_questUpdatedSound
call StartSound(rAO)
set sAO=G[2]
set tAO=fPO
set iAO=false
call SetUnitOwner(sAO,tAO,iAO)
call UuS(G[2],75)
set SAO=fPO
set cAO=75
set oAO=SAO
set OAO=PLAYER_STATE_RESOURCE_GOLD
set lAO=cAO
set pKO=oAO
set eKO=OAO
set bAO=oAO
set yAO=OAO
call SetPlayerState(pKO,eKO,GetPlayerState(bAO,yAO)+lAO)
set pAO=Aw[RPO]+GetPlayerName(fPO)+"|r"+" has captured neutral building!"
set eAO=10.
set qAO=pAO
set aAO=eAO
call DisplayTimedTextToPlayer(IY,0.,0.,aAO,qAO)
set hr[RPO]=hr[RPO]+75
set Fr[RPO]=Fr[RPO]+75
set Vr[RPO]=Vr[RPO]+75
else
set nAO=G[2]
set dAO=fPO
set fAO=false
call SetUnitOwner(nAO,dAO,fAO)
endif
if fPO==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set RAO=G[2]
set TPO=GetUnitX(RAO)
set TAO=G[2]
set YPO=GetUnitY(TAO)
set g[2]=CreateUnit(Ud,$6E303349,TPO,YPO,0.)
set YAO=G[2]
if GetUnitTypeId(YAO)==$6E676164 then
set GAO=G[2]
set gAO=$41303042
set GPO=GetUnitAbilityLevel(GAO,gAO)
set hAO=g[2]
set FAO=$41313053
call UnitAddAbility(hAO,FAO)
set kAO=g[2]
set jAO=$41313053
set xAO=GPO
call SetUnitAbilityLevel(kAO,jAO,xAO)
endif
set vAO=G[2]
if GetUnitTypeId(vAO)==$6E64727A then
set mAO=G[2]
set QAO=$41303852
set gPO=GetUnitAbilityLevel(mAO,QAO)
set WAO=g[2]
set EAO=$41313049
call UnitAddAbility(WAO,EAO)
set ZAO=g[2]
set UAO=$41313049
set IAO=gPO
call SetUnitAbilityLevel(ZAO,UAO,IAO)
endif
set PAO=G[2]
if GetUnitTypeId(PAO)==$6E647267 then
set AAO=G[2]
set DAO=$41303856
set hPO=GetUnitAbilityLevel(AAO,DAO)
set HAO=g[2]
set JAO=$41313054
call UnitAddAbility(HAO,JAO)
set KAO=g[2]
set LAO=$41313054
set XAO=hPO
call SetUnitAbilityLevel(KAO,LAO,XAO)
endif
set CAO=G[2]
if GetUnitTypeId(CAO)==$6E676D65 then
set VAO=G[2]
set BAO=$4130384F
set FPO=GetUnitAbilityLevel(VAO,BAO)
set NAO=g[2]
set MAO=$4131304A
call UnitAddAbility(NAO,MAO)
set wDO=g[2]
set uDO=$4131304A
set rDO=FPO
call SetUnitAbilityLevel(wDO,uDO,rDO)
endif
set sDO=G[2]
if GetUnitTypeId(sDO)==$6E647272 then
set tDO=G[2]
set iDO=$41303858
set kPO=GetUnitAbilityLevel(tDO,iDO)
set SDO=G[2]
set cDO=$41303859
set jPO=GetUnitAbilityLevel(SDO,cDO)
set oDO=g[2]
set ODO=$4131304B
call UnitAddAbility(oDO,ODO)
set lDO=g[2]
set bDO=$4131304B
set yDO=kPO
call SetUnitAbilityLevel(lDO,bDO,yDO)
set pDO=g[2]
set eDO=$4131304C
call UnitAddAbility(pDO,eDO)
set qDO=g[2]
set aDO=$4131304C
set nDO=jPO
call SetUnitAbilityLevel(qDO,aDO,nDO)
endif
set dDO=G[2]
if GetUnitTypeId(dDO)==$6E6D7232 then
set fDO=g[2]
set RDO=$41303853
call UnitAddAbility(fDO,RDO)
endif
set TDO=G[2]
if GetUnitTypeId(TDO)==$6E676F6C then
set YDO=g[2]
set GDO=$41303853
call UnitAddAbility(YDO,GDO)
endif
set gDO=G[2]
if GetUnitTypeId(gDO)==$6E64726F then
set hDO=G[2]
set FDO=$41303855
set xPO=GetUnitAbilityLevel(hDO,FDO)
set kDO=g[2]
set jDO=$4131304E
call UnitAddAbility(kDO,jDO)
set xDO=g[2]
set vDO=$4131304E
set mDO=xPO
call SetUnitAbilityLevel(xDO,vDO,mDO)
endif
set QDO=G[2]
if GetUnitTypeId(QDO)==$6E776774 then
set WDO=G[2]
set EDO=$41303850
set vPO=GetUnitAbilityLevel(WDO,EDO)
set ZDO=g[2]
set UDO=$4131304F
call UnitAddAbility(ZDO,UDO)
set IDO=g[2]
set PDO=$4131304F
set ADO=vPO
call SetUnitAbilityLevel(IDO,PDO,ADO)
endif
set DDO=G[2]
if GetUnitTypeId(DDO)==$6E647275 then
set HDO=G[2]
set JDO=$4130384E
set mPO=GetUnitAbilityLevel(HDO,JDO)
set KDO=g[2]
set LDO=$41313050
call UnitAddAbility(KDO,LDO)
set XDO=g[2]
set CDO=$41313050
set VDO=mPO
call SetUnitAbilityLevel(XDO,CDO,VDO)
endif
set BDO=G[2]
if GetUnitTypeId(BDO)==$6E666F68 then
set NDO=G[2]
set MDO=$4130384D
set QPO=GetUnitAbilityLevel(NDO,MDO)
set wHO=g[2]
set uHO=$41313051
call UnitAddAbility(wHO,uHO)
set rHO=g[2]
set sHO=$41313051
set tHO=QPO
call SetUnitAbilityLevel(rHO,sHO,tHO)
endif
set iHO=G[2]
if GetUnitTypeId(iHO)==$6E64726B then
set SHO=G[2]
set cHO=$41303851
set WPO=GetUnitAbilityLevel(SHO,cHO)
set oHO=g[2]
set OHO=$41313052
call UnitAddAbility(oHO,OHO)
set lHO=g[2]
set bHO=$41313052
set yHO=WPO
call SetUnitAbilityLevel(lHO,bHO,yHO)
endif
endif
if fPO!=Ud and g[2]!=null then
call RemoveUnit(g[2])
set g[2]=null
endif
if fPO==Ud and fq==true then
set pHO=G[2]
set EPO=GetUnitX(pHO)
set eHO=G[2]
set ZPO=GetUnitY(eHO)
set h[2]=CreateUnit(Ud,$6E303349,EPO,ZPO,0.)
set qHO=h[2]
set aHO=$4545564F
call UnitAddAbility(qHO,aHO)
set nHO=G[2]
if GetUnitTypeId(nHO)==$6E676164 then
set dHO=G[2]
set fHO=$41303042
set UPO=GetUnitAbilityLevel(dHO,fHO)
set RHO=h[2]
set THO=$41313641
call UnitAddAbility(RHO,THO)
set YHO=h[2]
set GHO=$41313641
set gHO=UPO
call SetUnitAbilityLevel(YHO,GHO,gHO)
endif
set hHO=G[2]
if GetUnitTypeId(hHO)==$6E64727A then
set FHO=G[2]
set kHO=$41303852
set IPO=GetUnitAbilityLevel(FHO,kHO)
set jHO=h[2]
set xHO=$41313630
call UnitAddAbility(jHO,xHO)
set vHO=h[2]
set mHO=$41313630
set QHO=IPO
call SetUnitAbilityLevel(vHO,mHO,QHO)
endif
set WHO=G[2]
if GetUnitTypeId(WHO)==$6E647267 then
set EHO=G[2]
set ZHO=$41303856
set PPO=GetUnitAbilityLevel(EHO,ZHO)
set UHO=h[2]
set IHO=$41313642
call UnitAddAbility(UHO,IHO)
set PHO=h[2]
set AHO=$41313642
set DHO=PPO
call SetUnitAbilityLevel(PHO,AHO,DHO)
endif
set HHO=G[2]
if GetUnitTypeId(HHO)==$6E676D65 then
set JHO=G[2]
set KHO=$4130384F
set APO=GetUnitAbilityLevel(JHO,KHO)
set LHO=h[2]
set XHO=$41313631
call UnitAddAbility(LHO,XHO)
set CHO=h[2]
set VHO=$41313631
set BHO=APO
call SetUnitAbilityLevel(CHO,VHO,BHO)
endif
set NHO=G[2]
if GetUnitTypeId(NHO)==$6E647272 then
set MHO=G[2]
set wJO=$41303858
set DPO=GetUnitAbilityLevel(MHO,wJO)
set uJO=G[2]
set rJO=$41303859
set HPO=GetUnitAbilityLevel(uJO,rJO)
set sJO=h[2]
set tJO=$41313632
call UnitAddAbility(sJO,tJO)
set iJO=h[2]
set SJO=$41313633
set cJO=DPO
call SetUnitAbilityLevel(iJO,SJO,cJO)
set oJO=h[2]
set OJO=$41313632
call UnitAddAbility(oJO,OJO)
set lJO=h[2]
set bJO=$41313633
set yJO=HPO
call SetUnitAbilityLevel(lJO,bJO,yJO)
endif
set pJO=G[2]
if GetUnitTypeId(pJO)==$6E6D7232 then
set eJO=h[2]
set qJO=$41303853
call UnitAddAbility(eJO,qJO)
endif
set aJO=G[2]
if GetUnitTypeId(aJO)==$6E676F6C then
set nJO=h[2]
set dJO=$41303853
call UnitAddAbility(nJO,dJO)
endif
set fJO=G[2]
if GetUnitTypeId(fJO)==$6E64726F then
set RJO=G[2]
set TJO=$41303855
set JPO=GetUnitAbilityLevel(RJO,TJO)
set YJO=h[2]
set GJO=$41313635
call UnitAddAbility(YJO,GJO)
set gJO=h[2]
set hJO=$41313635
set FJO=JPO
call SetUnitAbilityLevel(gJO,hJO,FJO)
endif
set kJO=G[2]
if GetUnitTypeId(kJO)==$6E776774 then
set jJO=G[2]
set xJO=$41303850
set KPO=GetUnitAbilityLevel(jJO,xJO)
set vJO=h[2]
set mJO=$41313636
call UnitAddAbility(vJO,mJO)
set QJO=h[2]
set WJO=$41313636
set EJO=KPO
call SetUnitAbilityLevel(QJO,WJO,EJO)
endif
set ZJO=G[2]
if GetUnitTypeId(ZJO)==$6E647275 then
set UJO=G[2]
set IJO=$4130384E
set LPO=GetUnitAbilityLevel(UJO,IJO)
set PJO=h[2]
set AJO=$41313637
call UnitAddAbility(PJO,AJO)
set DJO=h[2]
set HJO=$41313637
set JJO=LPO
call SetUnitAbilityLevel(DJO,HJO,JJO)
endif
set KJO=G[2]
if GetUnitTypeId(KJO)==$6E666F68 then
set LJO=G[2]
set XJO=$4130384D
set XPO=GetUnitAbilityLevel(LJO,XJO)
set CJO=h[2]
set VJO=$41313638
call UnitAddAbility(CJO,VJO)
set BJO=h[2]
set NJO=$41313638
set MJO=XPO
call SetUnitAbilityLevel(BJO,NJO,MJO)
endif
set wKO=G[2]
if GetUnitTypeId(wKO)==$6E64726B then
set uKO=G[2]
set rKO=$41303851
set CPO=GetUnitAbilityLevel(uKO,rKO)
set sKO=h[2]
set tKO=$41313639
call UnitAddAbility(sKO,tKO)
set iKO=h[2]
set SKO=$41313639
set cKO=CPO
call SetUnitAbilityLevel(iKO,SKO,cKO)
endif
endif
if fPO!=Ud and h[2]!=null then
call RemoveUnit(h[2])
set h[2]=null
endif
set oKO="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 352"
set aW[qW]=oKO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set OKO=fF
set RF[OKO]=736
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 352")
set OKO=0
endif
else
set dF=dF-1
set OKO=nF[dF]
set RF[OKO]=736
endif
set qW=qW-1
set VPO=OKO
set mm[VPO]=aPO
set lKO=2.
set bKO=VPO
set yKO="when calling doAfter in NeutralStructures, line 352"
set aW[qW]=yKO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),lKO,bKO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set aPO=null
set nPO=null
set dPO=null
set fPO=null
set BPO=null
set NPO=null
set MPO=null
set wAO=null
set uAO=null
set rAO=null
set sAO=null
set tAO=null
set SAO=null
set oAO=null
set OAO=null
set bAO=null
set yAO=null
set nAO=null
set dAO=null
set RAO=null
set TAO=null
set YAO=null
set GAO=null
set hAO=null
set kAO=null
set vAO=null
set mAO=null
set WAO=null
set ZAO=null
set PAO=null
set AAO=null
set HAO=null
set KAO=null
set CAO=null
set VAO=null
set NAO=null
set wDO=null
set sDO=null
set tDO=null
set SDO=null
set oDO=null
set lDO=null
set pDO=null
set qDO=null
set dDO=null
set fDO=null
set TDO=null
set YDO=null
set gDO=null
set hDO=null
set kDO=null
set xDO=null
set QDO=null
set WDO=null
set ZDO=null
set IDO=null
set DDO=null
set HDO=null
set KDO=null
set XDO=null
set BDO=null
set NDO=null
set wHO=null
set rHO=null
set iHO=null
set SHO=null
set oHO=null
set lHO=null
set pHO=null
set eHO=null
set qHO=null
set nHO=null
set dHO=null
set RHO=null
set YHO=null
set hHO=null
set FHO=null
set jHO=null
set vHO=null
set WHO=null
set EHO=null
set UHO=null
set PHO=null
set HHO=null
set JHO=null
set LHO=null
set CHO=null
set NHO=null
set MHO=null
set uJO=null
set sJO=null
set iJO=null
set oJO=null
set lJO=null
set pJO=null
set eJO=null
set aJO=null
set nJO=null
set fJO=null
set RJO=null
set YJO=null
set gJO=null
set kJO=null
set jJO=null
set vJO=null
set QJO=null
set ZJO=null
set UJO=null
set PJO=null
set DJO=null
set KJO=null
set LJO=null
set CJO=null
set BJO=null
set wKO=null
set uKO=null
set sKO=null
set iKO=null
set pKO=null
set eKO=null
endfunction
function M7S takes nothing returns nothing
set qW=0
call qKO("via function reference NeutralStructures, line 1733")
endfunction
function MDl takes nothing returns nothing
local integer PDl=GetResearched()
local unit ADl
local player DDl
local integer HDl
local unit JDl
local unit KDl
local integer LDl
local player XDl
local unit CDl
local integer VDl
local integer BDl
local player NDl
if PDl==$52303555 then
set ADl=GetTriggerUnit()
set JDl=ADl
set DDl=GetOwningPlayer(JDl)
set HDl=GetPlayerTechCount(DDl,$52303555,true)
if HDl==1 then
set XDl=DDl
set KDl=c[GetPlayerId(XDl)]
set LDl=$4130594A
call UnitAddAbility(KDl,LDl)
else
set NDl=DDl
set CDl=c[GetPlayerId(NDl)]
set VDl=$4130594A
set BDl=HDl
call SetUnitAbilityLevel(CDl,VDl,BDl)
endif
endif
set ADl=null
set DDl=null
set JDl=null
set KDl=null
set XDl=null
set CDl=null
set NDl=null
endfunction
function MDo takes nothing returns nothing
local integer HAo=GetSpellAbilityId()
local unit JAo
local unit KAo
local integer LAo
local integer XAo
local unit CAo
local unit VAo
local unit BAo
local unit NAo
local integer MAo
local unit wDo
local integer uDo
local unit rDo
local integer sDo
local integer tDo
local unit iDo
local unit SDo
local unit cDo
local unit oDo
local real ODo
local unit lDo
local integer bDo
local unit yDo
local integer pDo
local integer eDo
local unit qDo
local string aDo
local widget nDo
local unit dDo
local unit fDo
local unit RDo
local unit TDo
local real YDo
local unit GDo
local integer gDo
local unit hDo
local integer FDo
local integer kDo
local unit jDo
local string xDo
local widget vDo
local unit mDo
local unit QDo
local unit WDo
local unit EDo
local real ZDo
local unit UDo
local integer IDo
local unit PDo
local integer ADo
local integer DDo
local unit HDo
local string JDo
local widget KDo
local player LDo
local real XDo
local player CDo
local real VDo
local player BDo
local real NDo
if HAo==$41305A46 then
set JAo=GetSpellAbilityUnit()
set KAo=GetSpellTargetUnit()
set NAo=JAo
set MAo=$41305A46
set LAo=GetUnitAbilityLevel(NAo,MAo)
set XAo=GetRandomInt(1,4)
if XAo==1 then
set wDo=KAo
set uDo=$41305731
call UnitAddAbility(wDo,uDo)
set rDo=KAo
set sDo=$41305731
set tDo=LAo
call SetUnitAbilityLevel(rDo,sDo,tDo)
elseif XAo==2 then
set iDo=JAo
set LDo=GetOwningPlayer(iDo)
set SDo=JAo
set XDo=GetUnitX(SDo)
set cDo=JAo
set CAo=CreateUnit(LDo,$75303030,XDo,GetUnitY(cDo),0.)
set oDo=CAo
set ODo=3.
call UnitApplyTimedLife(oDo,$42544C46,ODo)
set lDo=CAo
set bDo=$41305737
call UnitAddAbility(lDo,bDo)
set yDo=CAo
set pDo=$41305737
set eDo=LAo
call SetUnitAbilityLevel(yDo,pDo,eDo)
set qDo=CAo
set aDo="holybolt"
set nDo=KAo
call IssueTargetOrder(qDo,aDo,nDo)
elseif XAo==3 then
set dDo=JAo
set CDo=GetOwningPlayer(dDo)
set fDo=JAo
set VDo=GetUnitX(fDo)
set RDo=JAo
set VAo=CreateUnit(CDo,$75303030,VDo,GetUnitY(RDo),0.)
set TDo=VAo
set YDo=3.
call UnitApplyTimedLife(TDo,$42544C46,YDo)
set GDo=VAo
set gDo=$41313443
call UnitAddAbility(GDo,gDo)
set hDo=VAo
set FDo=$41313443
set kDo=LAo
call SetUnitAbilityLevel(hDo,FDo,kDo)
set jDo=VAo
set xDo="innerfire"
set vDo=KAo
call IssueTargetOrder(jDo,xDo,vDo)
elseif XAo==4 then
set mDo=JAo
set BDo=GetOwningPlayer(mDo)
set QDo=JAo
set NDo=GetUnitX(QDo)
set WDo=JAo
set BAo=CreateUnit(BDo,$75303030,NDo,GetUnitY(WDo),0.)
set EDo=BAo
set ZDo=3.
call UnitApplyTimedLife(EDo,$42544C46,ZDo)
set UDo=BAo
set IDo=$4131344E
call UnitAddAbility(UDo,IDo)
set PDo=BAo
set ADo=$4131344E
set DDo=LAo
call SetUnitAbilityLevel(PDo,ADo,DDo)
set HDo=BAo
set JDo="innerfire"
set KDo=KAo
call IssueTargetOrder(HDo,JDo,KDo)
endif
endif
set JAo=null
set KAo=null
set CAo=null
set VAo=null
set BAo=null
set NAo=null
set wDo=null
set rDo=null
set iDo=null
set SDo=null
set cDo=null
set oDo=null
set lDo=null
set yDo=null
set qDo=null
set nDo=null
set dDo=null
set fDo=null
set RDo=null
set TDo=null
set GDo=null
set hDo=null
set jDo=null
set vDo=null
set mDo=null
set QDo=null
set WDo=null
set EDo=null
set UDo=null
set PDo=null
set HDo=null
set KDo=null
set LDo=null
set CDo=null
set BDo=null
endfunction
function MEi takes nothing returns nothing
local integer IEi=GetSpellAbilityId()
local unit PEi
local real AEi
local real DEi
local integer HEi
local unit JEi
local unit KEi
local unit LEi
local unit XEi
local unit CEi
local integer VEi
local unit BEi
local real NEi
if IEi==$41323132 then
set PEi=GetSpellAbilityUnit()
set KEi=PEi
set AEi=GetUnitX(KEi)
set LEi=PEi
set DEi=GetUnitY(LEi)
set HEi=1
loop
exitwhen HEi>16
set XEi=PEi
set JEi=CreateUnit(GetOwningPlayer(XEi),$75303030,AEi,DEi,0.)
set CEi=JEi
set VEi=$41304C38
call UnitAddAbility(CEi,VEi)
call IssuePointOrder(JEi,"carrionswarm",AEi+100.*Cos(67.5+I2R(HEi)*22.5*bj_DEGTORAD),DEi+100.*Sin(67.5+I2R(HEi)*22.5*bj_DEGTORAD))
set BEi=JEi
set NEi=3.
call UnitApplyTimedLife(BEi,$42544C46,NEi)
set HEi=HEi+1
endloop
endif
set PEi=null
set JEi=null
set KEi=null
set LEi=null
set XEi=null
set CEi=null
set BEi=null
endfunction
function MEw takes nothing returns nothing
local unit PEw=GetEnteringUnit()
local unit DEw=PEw
local integer AEw=GetUnitTypeId(DEw)
local unit HEw=PEw
local unit JEw
local integer KEw
local unit LEw
local integer XEw
local unit CEw
local integer VEw
local unit BEw
local integer NEw
if uf[GetPlayerId(GetOwningPlayer(HEw))-4]==true then
if AEw==$4F303431 or AEw==$4F303432 or AEw==$4F303433 or AEw==$4F303434 or AEw==$6F303350 or AEw==$6F303351 then
set JEw=PEw
set KEw=$41706976
if GetUnitAbilityLevel(JEw,KEw)==0 then
set LEw=PEw
set XEw=$41706976
call UnitAddAbility(LEw,XEw)
endif
endif
if AEw==$6F303349 or AEw==$6F30334A or AEw==$6F30334B or AEw==$6F30334C then
set CEw=PEw
set VEw=$41304A31
call UnitAddAbility(CEw,VEw)
endif
if AEw==$6F303349 or AEw==$6F30334A or AEw==$6F30334B or AEw==$6F30334C or AEw==$6F30334D or AEw==$6F30334E then
set BEw=PEw
set NEw=$41706976
call UnitAddAbility(BEw,NEw)
endif
endif
set PEw=null
set DEw=null
set HEw=null
set JEw=null
set LEw=null
set CEw=null
set BEw=null
endfunction
function MGl takes nothing returns nothing
local integer AGl=GetResearched()
local player DGl
local trigger HGl
local trigger JGl
local unit KGl
local trigger LGl
local player XGl
local integer CGl
local player VGl
local trigger BGl
local trigger NGl
if AGl==$52303548 then
set HGl=Yy
call EnableTrigger(HGl)
endif
if AGl==$5230354E then
set JGl=Bn
call EnableTrigger(JGl)
endif
if AGl==$5230354C then
set KGl=GetTriggerUnit()
set DGl=GetOwningPlayer(KGl)
set LGl=bd
call EnableTrigger(LGl)
set XGl=DGl
set X[GetPlayerId(XGl)]=$68303146
set CGl=$5230354C
set VGl=DGl
if GetPlayerTechCount(VGl,CGl,true)>=2 then
set BGl=ld
call EnableTrigger(BGl)
endif
endif
if AGl==$5230354B then
set NGl=uG
call EnableTrigger(NGl)
endif
set DGl=null
set HGl=null
set JGl=null
set KGl=null
set LGl=null
set XGl=null
set VGl=null
set BGl=null
set NGl=null
endfunction
function MGr takes nothing returns nothing
local unit GGr=GetSpellAbilityUnit()
local integer gGr=GetSpellAbilityId()
local unit QGr=GGr
local group hGr
local real FGr
local real kGr
local filterfunc jGr
local unit xGr
local group vGr
local unit mGr
local unit WGr
local integer EGr
local unit ZGr
local unit UGr
local group IGr
local group PGr
local unit AGr
local unit DGr
local unit HGr
local integer JGr
local unit KGr
local real LGr
local unit XGr
local string CGr
local widget VGr
local group BGr
local boolexpr NGr
if GetUnitTypeId(QGr)==$484D3037 then
if gGr==$414D3269 or gGr==$414D326A then
set WGr=GGr
set EGr=$494D3073
if RTS(WGr,EGr)!=null then
set hGr=CreateGroup()
set ZGr=GGr
set FGr=GetUnitX(ZGr)
set UGr=GGr
set kGr=GetUnitY(UGr)
set jGr=Filter(x6)
call GroupEnumUnitsInRange(hGr,FGr,kGr,900.,jGr)
set vGr=hGr
loop
set IGr=vGr
exitwhen not (FirstOfGroup(IGr)!=null)
set PGr=vGr
set AGr=FirstOfGroup(PGr)
call GroupRemoveUnit(PGr,AGr)
set xGr=AGr
set DGr=GGr
set mGr=CreateUnit(GetOwningPlayer(DGr),$75303030,FGr,kGr,0.)
set HGr=mGr
set JGr=$414D326E
call UnitAddAbility(HGr,JGr)
set KGr=mGr
set LGr=3.
call UnitApplyTimedLife(KGr,$42544C46,LGr)
set XGr=mGr
set CGr="shadowstrike"
set VGr=xGr
call IssueTargetOrder(XGr,CGr,VGr)
endloop
set BGr=hGr
call DestroyGroup(BGr)
set NGr=jGr
call DestroyBoolExpr(NGr)
endif
endif
endif
set GGr=null
set hGr=null
set jGr=null
set xGr=null
set vGr=null
set mGr=null
set QGr=null
set WGr=null
set ZGr=null
set UGr=null
set IGr=null
set PGr=null
set AGr=null
set DGr=null
set HGr=null
set KGr=null
set XGr=null
set VGr=null
set BGr=null
set NGr=null
endfunction
function MGw takes nothing returns nothing
local integer vGw
local integer mGw
local unit QGw
local unit WGw
local unit EGw
local unit ZGw
local unit UGw
local unit IGw
local unit PGw
local real AGw
local unit DGw
local real HGw
local unit JGw
local real KGw
local unit LGw
local real XGw
local unit CGw
local real VGw
local unit BGw
local real NGw
if Ze!=null then
if Zy==true then
set vGw=1
loop
exitwhen vGw>20
set mGw=GetRandomInt(1,6)
if mGw==1 then
set QGw=CreateUnit(Wy,$6F303255,-4800.,I2R(GetRandomInt(-4700,4900)),0.)
set PGw=QGw
set AGw=60.
call UnitApplyTimedLife(PGw,$42544C46,AGw)
call dYr(QGw)
endif
if mGw==2 then
set WGw=CreateUnit(Wy,$6F303255,60.,I2R(GetRandomInt(-4700,4900)),0.)
set DGw=WGw
set HGw=60.
call UnitApplyTimedLife(DGw,$42544C46,HGw)
call dYr(WGw)
endif
if mGw==3 then
set EGw=CreateUnit(Wy,$6F303255,4800.,I2R(GetRandomInt(-4700,4900)),0.)
set JGw=EGw
set KGw=60.
call UnitApplyTimedLife(JGw,$42544C46,KGw)
call dYr(EGw)
endif
if mGw==4 then
set ZGw=CreateUnit(Wy,$6F303255,I2R(GetRandomInt(-4800,4800)),4900.,0.)
set LGw=ZGw
set XGw=60.
call UnitApplyTimedLife(LGw,$42544C46,XGw)
call dYr(ZGw)
endif
if mGw==5 then
set UGw=CreateUnit(Wy,$6F303255,I2R(GetRandomInt(-4800,4800)),80.,0.)
set CGw=UGw
set VGw=60.
call UnitApplyTimedLife(CGw,$42544C46,VGw)
call dYr(UGw)
endif
if mGw==6 then
set IGw=CreateUnit(Wy,$6F303255,I2R(GetRandomInt(-4800,4800)),-4700.,0.)
set BGw=IGw
set NGw=60.
call UnitApplyTimedLife(BGw,$42544C46,NGw)
call dYr(IGw)
endif
set vGw=vGw+1
endloop
endif
call TimerStart(Qy,300.,false,V1)
endif
set QGw=null
set WGw=null
set EGw=null
set ZGw=null
set UGw=null
set IGw=null
set PGw=null
set DGw=null
set JGw=null
set LGw=null
set CGw=null
set BGw=null
endfunction
function MKr takes nothing returns boolean
return true
endfunction
function MNe takes nothing returns boolean
local playerunitevent BNe=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code NNe=Pww
call emO(BNe,null,NNe,null)
set BNe=null
return true
endfunction
function MOc takes nothing returns boolean
return IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==true
endfunction
function MRt takes nothing returns boolean
local playerunitevent BRt=EVENT_PLAYER_HERO_LEVEL
local code NRt=r1
call emO(BRt,null,NRt,null)
set BRt=null
return true
endfunction
function MSl takes nothing returns boolean
return true
endfunction
function MUl takes nothing returns boolean
local unit CUl=GetFilterUnit()
local unit VUl=CUl
local unittype BUl=UNIT_TYPE_STRUCTURE
local boolean NUl=IsUnitType(VUl,BUl) and GetUnitAbilityLevel(CUl,$4176756C)==0
set CUl=null
set VUl=null
set BUl=null
return NUl
endfunction
function pcS takes string rcS returns nothing
local unit scS
local integer tcS
local unit icS
local unit ScS
local integer ccS
local string ocS
local integer OcS
local real lcS
local integer bcS
local string ycS
set aW[qW]=rcS
set qW=qW+1
set scS=GetAttacker()
set icS=scS
if GetUnitTypeId(icS)==$6F303547 then
if GetRandomInt(1,100)<=15 then
set ScS=scS
set ccS=$414D3033
call UnitAddAbility(ScS,ccS)
set ocS="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_KultirasT2SiegeBonus in KultirasT2SiegeBonus, line 62"
set aW[qW]=ocS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set OcS=fF
set RF[OcS]=822
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_KultirasT2SiegeBonus.","when calling error in KultirasT2SiegeBonus, line 62")
set OcS=0
endif
else
set dF=dF-1
set OcS=nF[dF]
set RF[OcS]=822
endif
set qW=qW-1
set tcS=OcS
set vv[tcS]=scS
set lcS=1.5
set bcS=tcS
set ycS="when calling doAfter in KultirasT2SiegeBonus, line 62"
set aW[qW]=ycS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),lcS,bcS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set scS=null
set icS=null
set ScS=null
endfunction
function MUs takes nothing returns nothing
set qW=0
call pcS("via function reference KultirasT2SiegeBonus, line 57")
endfunction
function MVu takes nothing returns boolean
return true
endfunction
function MWb takes nothing returns nothing
local unit UWb=GetEnteringUnit()
local unit PWb=UWb
local integer IWb=GetUnitTypeId(PWb)
local unit AWb=UWb
local unit DWb
local integer HWb
local unit JWb
local integer KWb
local unit LWb
local integer XWb
local unit CWb
local integer VWb
local unit BWb
local integer NWb
if nG[GetPlayerId(GetOwningPlayer(AWb))-4]==true then
if IWb==$45777264 or IWb==$456B6767 or IWb==$456D6F6F or IWb==$45667572 or IWb==$4563656E then
set DWb=UWb
set HWb=$41706976
if GetUnitAbilityLevel(DWb,HWb)==0 then
set JWb=UWb
set KWb=$41706976
call UnitAddAbility(JWb,KWb)
endif
endif
if IWb==$65646F63 or IWb==$6564636D or IWb==$65617263 or IWb==$65646F74 or IWb==$6573656E then
set LWb=UWb
set XWb=$41706976
call UnitAddAbility(LWb,XWb)
set CWb=UWb
set VWb=$41304A31
call UnitAddAbility(CWb,VWb)
endif
if IWb==$65646F63 or IWb==$6564636D or IWb==$65617263 or IWb==$65646F74 or IWb==$6573656E or IWb==$65687072 or IWb==$6E6D7065 or IWb==$65777370 or IWb==$65666F6E or IWb==$65303033 or IWb==$65303034 or IWb==$65303035 then
set BWb=UWb
set NWb=$41706976
call UnitAddAbility(BWb,NWb)
endif
endif
set UWb=null
set PWb=null
set AWb=null
set DWb=null
set JWb=null
set LWb=null
set CWb=null
set BWb=null
endfunction
function MYp takes nothing returns boolean
local playerunitevent BYp=EVENT_PLAYER_UNIT_SPELL_CAST
local code NYp=W7
call emO(BYp,null,NYp,null)
set BYp=null
return true
endfunction
function MZO takes nothing returns boolean
local trigger LZO
local trigger XZO
local rect CZO
local region VZO
local trigger BZO
local boolexpr NZO
set rg=CreateTrigger()
set LZO=rg
call DisableTrigger(LZO)
set XZO=rg
set CZO=bj_mapInitialPlayableArea
set VZO=CreateRegion()
call RegionAddRect(VZO,CZO)
call TriggerRegisterEnterRegion(XZO,VZO,null)
set BZO=rg
set NZO=Condition(xuw)
call TriggerAddCondition(BZO,NZO)
set LZO=null
set XZO=null
set CZO=null
set VZO=null
set BZO=null
set NZO=null
return true
endfunction
function Mae takes nothing returns nothing
local unit Aae=GetDyingUnit()
local unit Kae=Aae
local integer Dae
local integer Hae
local unit Jae
local unit Lae
local unit Xae
local unit Cae
local unit Vae
local player Bae
local real Nae
if GetUnitTypeId(Kae)==$686B6E69 then
set Dae=GetRandomInt(1,100)
set Lae=Aae
set Hae=GetPlayerTechCount(GetOwningPlayer(Lae),$5230344D,true)
if Dae<=30+20*Hae then
set Xae=Aae
set Bae=GetOwningPlayer(Xae)
set Cae=Aae
set Nae=GetUnitX(Cae)
set Vae=Aae
set Jae=CreateUnit(Bae,$6E6A6B73,Nae,GetUnitY(Vae),0.)
call dYr(Jae)
endif
endif
set Aae=null
set Jae=null
set Kae=null
set Lae=null
set Xae=null
set Cae=null
set Vae=null
set Bae=null
endfunction
function Mde takes nothing returns nothing
local rect Nde=Rc
set Xo[3]=Location(GetRectCenterX(Nde),GetRectCenterY(Nde))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set Nde=null
endfunction
function Mfo takes nothing returns nothing
local unit afo=GetDyingUnit()
local unit Gfo=afo
local real nfo=GetUnitX(Gfo)
local unit gfo=afo
local real dfo=GetUnitY(gfo)
local unit hfo=afo
local integer ffo=GetPlayerTechCount(GetOwningPlayer(hfo),$5230355A,true)
local integer Rfo
local unit Tfo
local integer Yfo
local unit Ffo
local unit kfo
local unit jfo
local player xfo
local integer vfo
local player mfo
local playerstate Qfo
local integer Wfo
local player Efo
local playerstate Zfo
local player Ufo
local unit Ifo
local integer Pfo
local unit Afo
local integer Dfo
local integer Hfo
local unit Jfo
local integer Kfo
local unit Lfo
local integer Xfo
local boolean Cfo
local boolean Vfo
local player Bfo
local playerstate Nfo
if ffo>0 then
set Ffo=afo
if GetUnitTypeId(Ffo)==$6F303331 then
set Cfo=true
else
set kfo=afo
set Cfo=GetUnitTypeId(kfo)==$6E303239
endif
set Vfo=Cfo
else
set Vfo=false
endif
if Vfo then
set Rfo=GetRandomInt(1,100)
if Rfo<=10*ffo then
set jfo=afo
set Tfo=CreateUnit(GetOwningPlayer(jfo),$6F303334,nfo,dfo,0.)
set xfo=Ud
set vfo=10*ffo
set mfo=xfo
set Qfo=PLAYER_STATE_RESOURCE_GOLD
set Wfo=vfo
set Bfo=mfo
set Nfo=Qfo
set Efo=mfo
set Zfo=Qfo
call SetPlayerState(Bfo,Nfo,GetPlayerState(Efo,Zfo)+Wfo)
call UuS(afo,10*ffo)
set Ufo=Ud
set Yfo=GetPlayerId(Ufo)
set hr[Yfo]=hr[Yfo]+10*ffo
set Fr[Yfo]=Fr[Yfo]+10*ffo
set Cr[Yfo]=Cr[Yfo]+10*ffo
if ffo>=2 then
set Ifo=Tfo
set Pfo=$41414138
call UnitAddAbility(Ifo,Pfo)
set Afo=Tfo
set Dfo=$41414138
set Hfo=ffo-1
call SetUnitAbilityLevel(Afo,Dfo,Hfo)
endif
if ffo==3 then
set Jfo=Tfo
set Kfo=$41303031
call UnitAddAbility(Jfo,Kfo)
endif
if ffo==4 then
set Lfo=Tfo
set Xfo=$41303053
call UnitAddAbility(Lfo,Xfo)
endif
endif
endif
set afo=null
set Tfo=null
set Gfo=null
set gfo=null
set hfo=null
set Ffo=null
set kfo=null
set jfo=null
set xfo=null
set mfo=null
set Qfo=null
set Efo=null
set Zfo=null
set Ufo=null
set Ifo=null
set Afo=null
set Jfo=null
set Lfo=null
set Bfo=null
set Nfo=null
endfunction
function Mfr takes nothing returns boolean
return true
endfunction
function Mgt takes nothing returns nothing
local integer Zgt=GetSpellAbilityId()
local unit Ugt=GetSpellAbilityUnit()
local group Igt
local filterfunc Pgt
local unit Agt
local group Dgt
local unit Hgt
local group Jgt
local group Kgt
local unit Lgt
local unit Xgt
local integer Cgt
local group Vgt
local boolexpr Bgt
local boolean Ngt
if Zgt==$41304545 then
set Hgt=Ugt
set Ngt=nG[GetPlayerId(GetOwningPlayer(Hgt))-4]==true
else
set Ngt=false
endif
if Ngt then
set Igt=CreateGroup()
set Pgt=Filter(Eww)
call GroupEnumUnitsInRect(Igt,bj_mapInitialPlayableArea,Pgt)
set Dgt=Igt
loop
set Jgt=Dgt
exitwhen not (FirstOfGroup(Jgt)!=null)
set Kgt=Dgt
set Lgt=FirstOfGroup(Kgt)
call GroupRemoveUnit(Kgt,Lgt)
set Agt=Lgt
set Xgt=Agt
set Cgt=$41706976
call UnitAddAbility(Xgt,Cgt)
endloop
set Vgt=Igt
call DestroyGroup(Vgt)
set Bgt=Pgt
call DestroyBoolExpr(Bgt)
endif
set Ugt=null
set Igt=null
set Pgt=null
set Agt=null
set Dgt=null
set Hgt=null
set Jgt=null
set Kgt=null
set Lgt=null
set Xgt=null
set Vgt=null
set Bgt=null
endfunction
function MiO takes nothing returns nothing
local group AiO=CreateGroup()
local filterfunc DiO=Filter(L4)
local unit HiO
local group JiO
local group KiO
local group LiO
local unit XiO
local unit CiO
local integer ViO
local group BiO
local boolexpr NiO
call GroupEnumUnitsInRect(AiO,bj_mapInitialPlayableArea,DiO)
set JiO=AiO
loop
set KiO=JiO
exitwhen not (FirstOfGroup(KiO)!=null)
set LiO=JiO
set XiO=FirstOfGroup(LiO)
call GroupRemoveUnit(LiO,XiO)
set HiO=XiO
set CiO=HiO
set ViO=$494D3038
call UnitAddItemById(CiO,ViO)
endloop
set BiO=AiO
call DestroyGroup(BiO)
set NiO=DiO
call DestroyBoolExpr(NiO)
set AiO=null
set DiO=null
set HiO=null
set JiO=null
set KiO=null
set LiO=null
set XiO=null
set CiO=null
set BiO=null
set NiO=null
endfunction
function MlS takes nothing returns boolean
return true
endfunction
function Mne takes nothing returns boolean
local trigger Cne
local trigger Vne
local playerunitevent Bne
local integer Nne
set HG=CreateTrigger()
set Cne=HG
call DisableTrigger(Cne)
set Vne=HG
set Bne=EVENT_PLAYER_UNIT_DEATH
set Nne=0
loop
call TriggerRegisterPlayerUnitEvent(Vne,Player(Nne),Bne,null)
set Nne=Nne+1
exitwhen Nne==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(HG,buw)
set Cne=null
set Vne=null
set Bne=null
return true
endfunction
function Mno takes nothing returns nothing
local rect Nno=ro
set Xo[3]=Location(GetRectCenterX(Nno),GetRectCenterY(Nno))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set Nno=null
endfunction
function LNb takes integer jNb,unit xNb,unit vNb,string mNb returns nothing
local integer QNb
local integer WNb
local unit ENb
local integer ZNb
local unit UNb
local integer INb
local integer PNb
local string ANb
local integer DNb
local real HNb
local integer JNb
local string KNb
set aW[qW]=mNb
set qW=qW+1
if jNb==$414D3338 then
set QNb=GetUnitAbilityLevel(vNb,$414D3338)
set ENb=xNb
set ZNb=$414D3339
call UnitAddAbility(ENb,ZNb)
set UNb=xNb
set INb=$414D3339
set PNb=QNb
call SetUnitAbilityLevel(UNb,INb,PNb)
set ANb="when calling alloc_CallbackSingle_doAfter_TheCurseOfChaos in TheCurseOfChaos, line 69"
set aW[qW]=ANb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set DNb=fF
set RF[DNb]=755
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TheCurseOfChaos.","when calling error in TheCurseOfChaos, line 69")
set DNb=0
endif
else
set dF=dF-1
set DNb=nF[dF]
set RF[DNb]=755
endif
set qW=qW-1
set WNb=DNb
set jQ[WNb]=xNb
set HNb=15.
set JNb=WNb
set KNb="when calling doAfter in TheCurseOfChaos, line 69"
set aW[qW]=KNb
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),HNb,JNb,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set ENb=null
set UNb=null
endfunction
function MrS takes nothing returns nothing
local string NrS
set qW=0
set NrS="via function reference TheCurseOfChaos, line 74"
set aW[qW]=NrS
set qW=qW+1
call LNb(GetSpellAbilityId(),GetSpellTargetUnit(),GetTriggerUnit(),"when calling criticalstrikeAdd in TheCurseOfChaos, line 75")
set qW=qW-1
endfunction
function lmu takes string xvu returns nothing
local unit vvu
local integer mvu
local unit Qvu
local unittype Wvu
local unit Evu
local unit Zvu
local unit Uvu
local unit Ivu
local player Pvu
local unit Avu
local unit Dvu
local real Hvu
local real Jvu
local boolean Kvu
local unit Lvu
local unit Xvu
local unit Cvu
local unit Vvu
local unit Bvu
local string Nvu
local unit Mvu
local unit wmu
local handle umu
local boolean rmu
local boolean smu
local boolean tmu
local real imu
local integer Smu
local integer cmu
local real omu
local real Omu
set aW[qW]=xvu
set qW=qW+1
set vvu=GetDyingUnit()
set Qvu=vvu
set Wvu=UNIT_TYPE_HERO
if IsUnitType(Qvu,Wvu) then
set Evu=vvu
if GetUnitTypeId(Evu)==$48303144 then
set rmu=true
else
set Zvu=vvu
set rmu=GetUnitTypeId(Zvu)==$456B6767
endif
if rmu then
set smu=true
else
set Uvu=vvu
set smu=GetUnitTypeId(Uvu)==$45646D6D
endif
if smu then
set tmu=true
else
set Ivu=vvu
set tmu=GetUnitTypeId(Ivu)==$45303038
endif
if tmu then
set Avu=vvu
set Pvu=GetOwningPlayer(Avu)
set mvu=GetPlayerId(Pvu)
set S[mvu]=1
set Dvu=vvu
set Lvu=vvu
set Xvu=Lvu
set imu=GetUnitX(Xvu)
set Cvu=Lvu
set omu=imu
set Omu=GetUnitY(Cvu)
set Hvu=omu
set Jvu=Omu
set Kvu=false
call ReviveHero(Dvu,Hvu,Jvu,Kvu)
set Vvu=vvu
call KillUnit(Vvu)
call FlushChildHashtable(qu,GetHandleId(vvu))
set S[mvu]=0
else
set Bvu=vvu
set Nvu="when calling saveHero in SaveHero, line 23"
set aW[qW]=Nvu
set qW=qW+1
set Smu=mG
set Mvu=Bvu
set cmu=GetUnitTypeId(Mvu)
set wmu=Bvu
set umu=wmu
call TKO(Smu,cmu,GetHandleId(umu),"when calling put in SaveHero, line 9")
set qW=qW-1
endif
endif
set qW=qW-1
set vvu=null
set Qvu=null
set Wvu=null
set Evu=null
set Zvu=null
set Uvu=null
set Ivu=null
set Pvu=null
set Avu=null
set Dvu=null
set Lvu=null
set Xvu=null
set Cvu=null
set Vvu=null
set Bvu=null
set Mvu=null
set wmu=null
set umu=null
endfunction
function Mtt takes nothing returns nothing
set qW=0
call lmu("via function reference SaveHero, line 12")
endfunction
function cyu takes unit Vbu returns nothing
local integer Bbu=GetSpellAbilityId()
local unit Nbu
local unit Mbu
local unit wyu
local unit uyu
local integer ryu
local unit syu
local real tyu
local player iyu
local real Syu
if Bbu==$414D3236 then
set iyu=GetOwningPlayer(Vbu)
set Mbu=Vbu
set Syu=GetUnitX(Mbu)
set wyu=Vbu
set Nbu=CreateUnit(iyu,$75303030,Syu,GetUnitY(wyu),0.)
set uyu=Nbu
set ryu=$41414142
call UnitAddAbility(uyu,ryu)
set syu=Nbu
set tyu=18.
call UnitApplyTimedLife(syu,$42544C46,tyu)
endif
set Nbu=null
set Mbu=null
set wyu=null
set uyu=null
set syu=null
set iyu=null
endfunction
function Mur takes nothing returns nothing
call cyu(GetTriggerUnit())
endfunction
function Mye takes nothing returns nothing
local unit mye=GetTriggerUnit()
local unit Wye=mye
local player Qye=GetOwningPlayer(Wye)
local unit Eye
local string Zye
local real Uye
local real Iye
local unit Pye
local unittype Aye
local unit Dye
local string Hye
local real Jye
local real Kye
local unit Lye
local unittype Xye
local real Cye
local real Vye
local real Bye
local real Nye
if Qye==fu then
set Eye=mye
set Zye="attack"
set Cye=Qw[32]
set Vye=Ww[32]
set Uye=Cye
set Iye=Vye
call IssuePointOrder(Eye,Zye,Uye,Iye)
set Pye=mye
set Aye=UNIT_TYPE_HERO
if IsUnitType(Pye,Aye) then
call SaveInteger(qu,GetHandleId(mye),$6D6F7665,32)
endif
else
set Dye=mye
set Hye="attack"
set Bye=Qw[55]
set Nye=Ww[55]
set Jye=Bye
set Kye=Nye
call IssuePointOrder(Dye,Hye,Jye,Kye)
set Lye=mye
set Xye=UNIT_TYPE_HERO
if IsUnitType(Lye,Xye) then
call SaveInteger(qu,GetHandleId(mye),$6D6F7665,55)
endif
endif
set mye=null
set Qye=null
set Wye=null
set Eye=null
set Pye=null
set Aye=null
set Dye=null
set Lye=null
set Xye=null
endfunction
function N1o takes nothing returns boolean
local unit P1o=GetFilterUnit()
local unit A1o=P1o
local unit D1o
local unittype H1o
local unit J1o
local unittype K1o
local unit L1o
local unittype X1o
local boolean C1o
local boolean V1o
local boolean B1o
if UnitAlive(A1o)==true then
set D1o=P1o
set H1o=UNIT_TYPE_STRUCTURE
set C1o=IsUnitType(D1o,H1o)==false
else
set C1o=false
endif
if C1o and IsUnitEnemy(P1o,Be) then
set J1o=P1o
set K1o=UNIT_TYPE_ANCIENT
set V1o=IsUnitType(J1o,K1o)==false
else
set V1o=false
endif
if V1o then
set L1o=P1o
set X1o=UNIT_TYPE_HERO
set B1o=IsUnitType(L1o,X1o)==false
else
set B1o=false
endif
set P1o=null
set A1o=null
set D1o=null
set H1o=null
set J1o=null
set K1o=null
set L1o=null
set X1o=null
return B1o
endfunction
function N4i takes nothing returns boolean
local trigger X4i
local trigger C4i
local playerunitevent V4i
local integer B4i
set Yy=CreateTrigger()
set X4i=Yy
call DisableTrigger(X4i)
set C4i=Yy
set V4i=EVENT_PLAYER_UNIT_DEATH
set B4i=0
loop
call TriggerRegisterPlayerUnitEvent(C4i,Player(B4i),V4i,null)
set B4i=B4i+1
exitwhen B4i==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Yy,v1)
set X4i=null
set C4i=null
set V4i=null
return true
endfunction
function Vxt takes integer Dxt,unit Hxt returns nothing
local unit Jxt
local unit Kxt
local unit Lxt
local player Xxt
local real Cxt
if Dxt==$414D3337 then
set Jxt=GetSpellAbilityUnit()
set Xxt=GetOwningPlayer(Jxt)
set Kxt=Hxt
set Cxt=GetUnitX(Kxt)
set Lxt=Hxt
call CreateUnit(Xxt,$78303137,Cxt,GetUnitY(Lxt),0.)
endif
set Jxt=null
set Kxt=null
set Lxt=null
set Xxt=null
endfunction
function N5s takes nothing returns nothing
call Vxt(GetSpellAbilityId(),GetSpellTargetUnit())
endfunction
function N6S takes nothing returns boolean
local playerunitevent V6S=EVENT_PLAYER_UNIT_SPELL_CAST
local code B6S=Nuw
call emO(V6S,null,B6S,null)
set V6S=null
return true
endfunction
function N7S takes nothing returns boolean
return true
endfunction
function N9u takes nothing returns boolean
return true
endfunction
function NCu takes nothing returns boolean
return true
endfunction
function NFi takes nothing returns nothing
local integer HFi=GetResearched()
local unit JFi
local trigger KFi
local trigger LFi
local unit XFi
local unit CFi
local player VFi
local unit BFi
if HFi==$52303047 then
set KFi=Rp
call EnableTrigger(KFi)
endif
if HFi==$52303046 then
set LFi=el
call EnableTrigger(LFi)
endif
if HFi==$52303048 then
set JFi=GetTriggerUnit()
set XFi=JFi
if GetPlayerTechCount(GetOwningPlayer(XFi),$52303048,true)==1 then
set CFi=JFi
call SetPlayerTechResearched(GetOwningPlayer(CFi),$52303332,1)
set BFi=JFi
set VFi=GetOwningPlayer(BFi)
call SetPlayerTechResearched(Player(GetPlayerId(VFi)+4),$52303332,1)
endif
endif
set JFi=null
set KFi=null
set LFi=null
set XFi=null
set CFi=null
set VFi=null
set BFi=null
endfunction
function NFp takes nothing returns boolean
local trigger HFp
local trigger JFp
local playerunitevent KFp
local trigger LFp
local playerunitevent XFp
local integer CFp
local trigger VFp
local code BFp
set Mn=CreateTrigger()
set HFp=Mn
call DisableTrigger(HFp)
set JFp=Mn
set KFp=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LFp=JFp
set XFp=KFp
set CFp=0
loop
call TriggerRegisterPlayerUnitEvent(LFp,Player(CFp),XFp,null)
set CFp=CFp+1
exitwhen CFp==bj_MAX_PLAYER_SLOTS
endloop
set VFp=Mn
set BFp=B6
call TriggerAddAction(VFp,BFp)
set HFp=null
set JFp=null
set KFp=null
set LFp=null
set XFp=null
set VFp=null
return true
endfunction
function NGy takes nothing returns nothing
local integer AGy=GetResearched()
local player DGy
local integer HGy
local trigger JGy
local trigger KGy
local unit LGy
local player XGy
local trigger CGy
local player VGy
local unit BGy
if AGy==$52303031 then
set JGy=rg
call EnableTrigger(JGy)
endif
if AGy==$52303033 then
set KGy=Ty
call EnableTrigger(KGy)
endif
if AGy==$5230344C then
set LGy=GetResearchingUnit()
set DGy=GetOwningPlayer(LGy)
set XGy=DGy
set X[GetPlayerId(XGy)]=$686D696C
set CGy=Fy
call EnableTrigger(CGy)
endif
if AGy==$52303032 then
set BGy=GetResearchingUnit()
set VGy=GetOwningPlayer(BGy)
set HGy=GetPlayerId(VGy)
call SetPlayerTechResearched(Player(HGy+4),$52303351,GetPlayerTechCount(Player(HGy),$52303032,true))
endif
set DGy=null
set JGy=null
set KGy=null
set LGy=null
set XGy=null
set CGy=null
set VGy=null
set BGy=null
endfunction
function NKr takes nothing returns boolean
return true
endfunction
function NMe takes nothing returns boolean
return true
endfunction
function NOc takes nothing returns nothing
local unit BOc=GetSpellAbilityUnit()
if GetUnitTypeId(BOc)==$78303179 then
if GetRandomInt(1,100)<=15 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl",GetSpellAbilityUnit(),"chest"))
call UnitResetCooldown(GetSpellAbilityUnit())
endif
endif
set BOc=null
endfunction
function NOw takes nothing returns boolean
local playerunitevent VOw=EVENT_PLAYER_UNIT_SPELL_CAST
local code BOw=u8
call emO(VOw,null,BOw,null)
set VOw=null
return true
endfunction
function jNc takes string UBc returns nothing
local unit IBc
local unit PBc
local integer ABc
local integer DBc
local unit HBc
local unit JBc
local unit KBc
local unit LBc
local unit XBc
local unit CBc
local unittype VBc
local unit BBc
local unit NBc
local real MBc
local unit wNc
local unitstate uNc
local real rNc
local unit sNc
local unitstate tNc
local unit iNc
local integer SNc
local unit cNc
local integer oNc
local integer ONc
local unit lNc
local string bNc
local widget yNc
local string pNc
local integer eNc
local real qNc
local integer aNc
local string nNc
local unit dNc
local integer fNc
local unit RNc
local integer TNc
local boolean YNc
local boolean GNc
local boolean gNc
local boolean hNc
local unit FNc
local unitstate kNc
set aW[qW]=UBc
set qW=qW+1
set IBc=GetKillingUnit()
set PBc=GetDyingUnit()
set HBc=IBc
if GetUnitTypeId(HBc)==$6F303349 then
set YNc=true
else
set JBc=IBc
set YNc=GetUnitTypeId(JBc)==$6F30334C
endif
if YNc then
set GNc=true
else
set KBc=IBc
set GNc=GetUnitTypeId(KBc)==$6F30334E
endif
if GNc then
set gNc=true
else
set LBc=IBc
set gNc=GetUnitTypeId(LBc)==$6E737070
endif
if gNc then
set hNc=true
else
set XBc=IBc
set hNc=GetUnitTypeId(XBc)==$6F303357
endif
if hNc then
set CBc=PBc
set VBc=UNIT_TYPE_MECHANICAL
if IsUnitType(CBc,VBc)==false then
set BBc=IBc
set ABc=GetPlayerTechCount(GetOwningPlayer(BBc),$5230374A,true)
set NBc=IBc
set MBc=150.
set wNc=NBc
set uNc=UNIT_STATE_LIFE
set rNc=MBc
set FNc=wNc
set kNc=uNc
set sNc=wNc
set tNc=uNc
call SetUnitState(FNc,kNc,GetUnitState(sNc,tNc)+rNc)
set iNc=IBc
set SNc=$41305649
call UnitAddAbility(iNc,SNc)
set cNc=IBc
set oNc=$41305649
set ONc=ABc
call SetUnitAbilityLevel(cNc,oNc,ONc)
set lNc=IBc
set bNc="bloodlust"
set yNc=IBc
call IssueTargetOrder(lNc,bNc,yNc)
set pNc="when calling alloc_CallbackSingle_doAfter_FeedingFrenzy in FeedingFrenzy, line 54"
set aW[qW]=pNc
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set eNc=fF
set RF[eNc]=710
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_FeedingFrenzy.","when calling error in FeedingFrenzy, line 54")
set eNc=0
endif
else
set dF=dF-1
set eNc=nF[dF]
set RF[eNc]=710
endif
set qW=qW-1
set DBc=eNc
set ox[DBc]=IBc
set qNc=2.
set aNc=DBc
set nNc="when calling doAfter in FeedingFrenzy, line 54"
set aW[qW]=nNc
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),qNc,aNc,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set dNc=PBc
set fNc=$4131384B
if GetUnitAbilityLevel(dNc,fNc)==1 then
set RNc=PBc
set TNc=$4131384B
call UnitRemoveAbility(RNc,TNc)
endif
set qW=qW-1
set IBc=null
set PBc=null
set HBc=null
set JBc=null
set KBc=null
set LBc=null
set XBc=null
set CBc=null
set VBc=null
set BBc=null
set NBc=null
set wNc=null
set uNc=null
set sNc=null
set tNc=null
set iNc=null
set cNc=null
set lNc=null
set yNc=null
set dNc=null
set RNc=null
set FNc=null
set kNc=null
endfunction
function NQi takes nothing returns nothing
set qW=0
call jNc("via function reference FeedingFrenzy, line 65")
endfunction
function NRw takes nothing returns boolean
return true
endfunction
function NSl takes nothing returns boolean
local unit KSl=GetFilterUnit()
local unit XSl=KSl
local integer LSl=GetUnitTypeId(XSl)
local unit CSl=KSl
local unit VSl
local boolean BSl
if GetOwningPlayer(CSl)==tG then
set BSl=true
else
set VSl=KSl
set BSl=GetOwningPlayer(VSl)==iG
endif
set KSl=null
set XSl=null
set CSl=null
set VSl=null
return BSl and not (LSl==$75303030 or LSl==$7864756D)
endfunction
function NUs takes nothing returns nothing
local unit DUs=GetTriggerUnit()
local unit HUs=DUs
local string JUs="attack"
local real VUs=Qw[19]
local real BUs=Ww[19]
local real KUs=VUs
local real LUs=BUs
local unit XUs
local unittype CUs
call IssuePointOrder(HUs,JUs,KUs,LUs)
set XUs=DUs
set CUs=UNIT_TYPE_HERO
if IsUnitType(XUs,CUs) then
call SaveInteger(qu,GetHandleId(DUs),$6D6F7665,19)
endif
set DUs=null
set HUs=null
set XUs=null
set CUs=null
endfunction
function NVS takes nothing returns boolean
return true
endfunction
function NXr takes nothing returns nothing
call RemoveItem(GetEnumItem())
endfunction
function NYl takes nothing returns nothing
local unit ATl=GetDyingUnit()
local real DTl
local real HTl
local group JTl
local filterfunc KTl
local unit LTl
local unit XTl
local unit CTl
local unit VTl
local unit BTl
local unittype NTl
local unit MTl
local real wYl
local unit uYl
local unitstate rYl
local real sYl
local unit tYl
local unitstate iYl
local unit SYl
local unit cYl
local unitstate oYl
local unit OYl
local real lYl
local unit bYl
local unitstate yYl
local real pYl
local unit eYl
local unitstate qYl
local effect aYl
local widget nYl
local string dYl
local string fYl
local unit RYl
local integer TYl
local unit YYl
local integer GYl
local unit gYl
local integer hYl
local unit FYl
local integer kYl
local unit jYl
local integer xYl
local unit vYl
local integer mYl
local unit QYl
local integer WYl
local unit EYl
local integer ZYl
local group UYl
local boolexpr IYl
local unit PYl
local unittype AYl
local unit DYl
local integer HYl
local unit JYl
local integer KYl
local unit LYl
local unitstate XYl
local unit CYl
local unitstate VYl
local boolean BYl
if ATl==ul then
set XTl=ATl
if GetUnitTypeId(XTl)==$55303139 then
set CTl=ATl
set DTl=GetUnitX(CTl)
set VTl=ATl
set HTl=GetUnitY(VTl)
set JTl=CreateGroup()
set KTl=Filter(AM)
call GroupEnumUnitsInRange(JTl,DTl,HTl,700.,KTl)
set LTl=Dgy(JTl)
set BTl=LTl
set NTl=UNIT_TYPE_ANCIENT
if IsUnitType(BTl,NTl) then
set MTl=LTl
set SYl=LTl
set cYl=SYl
set oYl=UNIT_STATE_MAX_LIFE
set wYl=GetUnitState(cYl,oYl)*.5
set uYl=MTl
set rYl=UNIT_STATE_LIFE
set sYl=wYl
set LYl=uYl
set XYl=rYl
set tYl=uYl
set iYl=rYl
call SetUnitState(LYl,XYl,GetUnitState(tYl,iYl)+sYl)
else
set OYl=LTl
set lYl=50000.
set bYl=OYl
set yYl=UNIT_STATE_LIFE
set pYl=lYl
set CYl=bYl
set VYl=yYl
set eYl=bYl
set qYl=yYl
call SetUnitState(CYl,VYl,GetUnitState(eYl,qYl)+pYl)
endif
set nYl=LTl
set dYl="Soul Discharge.mdx"
set fYl="chest"
set aYl=AddSpecialEffectTarget(dYl,nYl,fYl)
call DestroyEffect(aYl)
set RYl=LTl
set TYl=$41323451
if GetUnitAbilityLevel(RYl,TYl)>0 then
set YYl=LTl
set GYl=$41323451
call UnitRemoveAbility(YYl,GYl)
set gYl=LTl
set hYl=$41323453
call UnitRemoveAbility(gYl,hYl)
set FYl=LTl
set kYl=$41323454
call UnitRemoveAbility(FYl,kYl)
set jYl=LTl
set xYl=$41323455
call UnitRemoveAbility(jYl,xYl)
set vYl=LTl
set mYl=$41323456
if GetUnitAbilityLevel(vYl,mYl)>0 then
set QYl=LTl
set WYl=$41323456
call UnitRemoveAbility(QYl,WYl)
endif
else
set EYl=LTl
set ZYl=$41303053
call UnitAddAbility(EYl,ZYl)
endif
set UYl=JTl
call DestroyGroup(UYl)
set IYl=KTl
call DestroyBoolExpr(IYl)
endif
set ul=null
endif
set PYl=ATl
set AYl=UNIT_TYPE_HERO
if IsUnitType(PYl,AYl) then
set DYl=ATl
set HYl=$41303053
set BYl=GetUnitAbilityLevel(DYl,HYl)==1
else
set BYl=false
endif
if BYl then
set JYl=ATl
set KYl=$41303053
call UnitRemoveAbility(JYl,KYl)
endif
set ATl=null
set JTl=null
set KTl=null
set LTl=null
set XTl=null
set CTl=null
set VTl=null
set BTl=null
set NTl=null
set MTl=null
set uYl=null
set rYl=null
set tYl=null
set iYl=null
set SYl=null
set cYl=null
set oYl=null
set OYl=null
set bYl=null
set yYl=null
set eYl=null
set qYl=null
set aYl=null
set nYl=null
set RYl=null
set YYl=null
set gYl=null
set FYl=null
set jYl=null
set vYl=null
set QYl=null
set EYl=null
set UYl=null
set IYl=null
set PYl=null
set AYl=null
set DYl=null
set JYl=null
set LYl=null
set XYl=null
set CYl=null
set VYl=null
endfunction
function N_S takes nothing returns boolean
local playerunitevent V_S=EVENT_PLAYER_UNIT_SPELL_CAST
local code B_S=R7
call emO(V_S,null,B_S,null)
set V_S=null
return true
endfunction
function dHt takes string RAt returns nothing
local integer TAt
local unit YAt
local integer GAt
local integer gAt
local unit hAt
local integer FAt
local player kAt
local unit jAt
local string xAt
local real vAt
local string mAt
local real QAt
local unit WAt
local texttag EAt
local integer ZAt
local integer UAt
local integer IAt
local integer PAt
local integer AAt
local string DAt
local unit HAt
local unit JAt
local player KAt
local real LAt
local real XAt
local unit CAt
local unit VAt
local timerdialog BAt
local player NAt
local texttag MAt
local integer wDt
local integer uDt
local integer rDt
local integer sDt
local integer tDt
local string iDt
local unit SDt
local unit cDt
local player oDt
local real ODt
local real lDt
local unit bDt
local unit yDt
local timerdialog pDt
local player eDt
local texttag qDt
local integer aDt
local integer nDt
local integer dDt
local integer fDt
local integer RDt
local string TDt
local unit YDt
local unit GDt
local player gDt
local real hDt
local real FDt
local unit kDt
local unit jDt
local timerdialog xDt
local player vDt
local texttag mDt
local integer QDt
local integer WDt
local integer EDt
local integer ZDt
local integer UDt
local string IDt
local unit PDt
local unit ADt
local player DDt
local real HDt
local real JDt
local unit KDt
local unit LDt
local timerdialog XDt
local player CDt
local trigger VDt
local string BDt
local timerdialog NDt
local timerdialog MDt
local timerdialog wHt
local timerdialog uHt
local integer rHt
local integer sHt
local integer tHt
local integer iHt
local integer SHt
local integer cHt
local integer oHt
local integer OHt
local integer lHt
local integer bHt
local integer yHt
local integer pHt
local integer eHt
local integer qHt
local integer aHt
local integer nHt
set aW[qW]=RAt
set qW=qW+1
set TAt=GetSpellAbilityId()
set YAt=GetSpellAbilityUnit()
if YAt==k[0] or YAt==k[1] or YAt==k[2] or YAt==k[3] and TAt!=$50494331 or TAt!=$50494332 or TAt!=$50494333 or TAt!=$50494334 or TAt!=$50494335 then
if xu==true then
set GAt=0
loop
exitwhen GAt>3
set hAt=k[GAt]
set FAt=TAt
call UnitRemoveAbility(hAt,FAt)
set GAt=GAt+1
endloop
set jAt=YAt
set kAt=GetOwningPlayer(jAt)
set gAt=GetPlayerId(kAt)
set BDt=Aw[gAt]
set WAt=YAt
set xAt=BDt+GetPlayerName(GetOwningPlayer(WAt))+"|r"+" has banned "+Wyc(TAt)
set vAt=10.
set mAt=xAt
set QAt=vAt
call DisplayTimedTextToPlayer(IY,0.,0.,QAt,mAt)
if YAt==k[1] then
set xY[1]=L5u(150.,440.,128.,Wyc(TAt),10.)
set EAt=xY[1]
set rHt=255
set sHt=6
set tHt=6
set iHt=255
set ZAt=rHt
set UAt=sHt
set IAt=tHt
set PAt=iHt
call SetTextTagColor(EAt,ZAt,UAt,IAt,PAt)
set Mg=true
set AAt=TAt
set DAt="when calling numRace in TournamentMode, line 229"
set aW[qW]=DAt
set qW=qW+1
if AAt==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if AAt==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if AAt==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if AAt==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if AAt==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if AAt==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if AAt==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if AAt==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if AAt==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if AAt==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if AAt==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if AAt==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if AAt==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if AAt==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if AAt==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if AAt==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if AAt==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if AAt==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if AAt==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if AAt==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set HAt=YAt
call ShowUnit(HAt,false)
set JAt=k[3]
call ShowUnit(JAt,true)
set KAt=gu
set CAt=k[3]
set LAt=GetUnitX(CAt)
set VAt=k[3]
set XAt=GetUnitY(VAt)
if GetLocalPlayer()==KAt then
call SetCameraPosition(LAt,XAt)
endif
set BAt=tr
call DestroyTimerDialog(BAt)
call TimerStart(ir,30.,false,Qrw)
set tr=CreateTimerDialog(ir)
set NDt=tr
set NAt=gu
call TimerDialogSetTitle(NDt,GetPlayerName(NAt)+" ban race")
call TimerDialogDisplay(tr,true)
endif
if YAt==k[3] then
set xY[3]=L5u(150.,340.,128.,Wyc(TAt),10.)
set MAt=xY[3]
set SHt=255
set cHt=6
set oHt=6
set OHt=255
set wDt=SHt
set uDt=cHt
set rDt=oHt
set sDt=OHt
call SetTextTagColor(MAt,wDt,uDt,rDt,sDt)
set wh=true
set tDt=TAt
set iDt="when calling numRace in TournamentMode, line 242"
set aW[qW]=iDt
set qW=qW+1
if tDt==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if tDt==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if tDt==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if tDt==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if tDt==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if tDt==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if tDt==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if tDt==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if tDt==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if tDt==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if tDt==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if tDt==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if tDt==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if tDt==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if tDt==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if tDt==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if tDt==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if tDt==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if tDt==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if tDt==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set SDt=YAt
call ShowUnit(SDt,false)
set cDt=k[0]
call ShowUnit(cDt,true)
set oDt=Yu
set bDt=k[0]
set ODt=GetUnitX(bDt)
set yDt=k[0]
set lDt=GetUnitY(yDt)
if GetLocalPlayer()==oDt then
call SetCameraPosition(ODt,lDt)
endif
set pDt=tr
call DestroyTimerDialog(pDt)
call TimerStart(ir,30.,false,Wrw)
set tr=CreateTimerDialog(ir)
set MDt=tr
set eDt=Yu
call TimerDialogSetTitle(MDt,GetPlayerName(eDt)+" ban race")
call TimerDialogDisplay(tr,true)
endif
if YAt==k[0] then
set xY[0]=L5u(150.,240.,128.,Wyc(TAt),10.)
set qDt=xY[0]
set lHt=255
set bHt=6
set yHt=6
set pHt=255
set aDt=lHt
set nDt=bHt
set dDt=yHt
set fDt=pHt
call SetTextTagColor(qDt,aDt,nDt,dDt,fDt)
set uh=true
set RDt=TAt
set TDt="when calling numRace in TournamentMode, line 255"
set aW[qW]=TDt
set qW=qW+1
if RDt==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if RDt==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if RDt==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if RDt==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if RDt==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if RDt==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if RDt==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if RDt==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if RDt==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if RDt==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if RDt==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if RDt==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if RDt==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if RDt==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if RDt==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if RDt==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if RDt==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if RDt==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if RDt==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if RDt==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set YDt=YAt
call ShowUnit(YDt,false)
set GDt=k[2]
call ShowUnit(GDt,true)
set gDt=Gu
set kDt=k[2]
set hDt=GetUnitX(kDt)
set jDt=k[2]
set FDt=GetUnitY(jDt)
if GetLocalPlayer()==gDt then
call SetCameraPosition(hDt,FDt)
endif
set xDt=tr
call DestroyTimerDialog(xDt)
call TimerStart(ir,30.,false,Erw)
set tr=CreateTimerDialog(ir)
set wHt=tr
set vDt=Gu
call TimerDialogSetTitle(wHt,GetPlayerName(vDt)+" ban race")
call TimerDialogDisplay(tr,true)
endif
if YAt==k[2] then
set xY[2]=L5u(150.,140.,128.,Wyc(TAt),10.)
set mDt=xY[2]
set eHt=255
set qHt=6
set aHt=6
set nHt=255
set QDt=eHt
set WDt=qHt
set EDt=aHt
set ZDt=nHt
call SetTextTagColor(mDt,QDt,WDt,EDt,ZDt)
set rh=true
set UDt=TAt
set IDt="when calling numRace in TournamentMode, line 268"
set aW[qW]=IDt
set qW=qW+1
if UDt==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if UDt==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if UDt==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if UDt==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if UDt==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if UDt==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if UDt==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if UDt==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if UDt==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if UDt==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if UDt==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if UDt==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if UDt==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if UDt==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if UDt==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if UDt==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if UDt==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if UDt==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if UDt==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if UDt==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
set PDt=YAt
call ShowUnit(PDt,false)
set ADt=k[2]
call ShowUnit(ADt,true)
set DDt=Gu
set KDt=k[2]
set HDt=GetUnitX(KDt)
set LDt=k[2]
set JDt=GetUnitY(LDt)
if GetLocalPlayer()==DDt then
call SetCameraPosition(HDt,JDt)
endif
set XDt=tr
call DestroyTimerDialog(XDt)
call TimerStart(ir,30.,false,Zrw)
set tr=CreateTimerDialog(ir)
set uHt=tr
set CDt=Gu
call TimerDialogSetTitle(uHt,GetPlayerName(CDt)+" pick race")
call TimerDialogDisplay(tr,true)
set vu=false
set VDt=Bg
call DisableTrigger(VDt)
endif
endif
endif
set qW=qW-1
set YAt=null
set hAt=null
set kAt=null
set jAt=null
set WAt=null
set EAt=null
set HAt=null
set JAt=null
set KAt=null
set CAt=null
set VAt=null
set BAt=null
set NAt=null
set MAt=null
set SDt=null
set cDt=null
set oDt=null
set bDt=null
set yDt=null
set pDt=null
set eDt=null
set qDt=null
set YDt=null
set GDt=null
set gDt=null
set kDt=null
set jDt=null
set xDt=null
set vDt=null
set mDt=null
set PDt=null
set ADt=null
set DDt=null
set KDt=null
set LDt=null
set XDt=null
set CDt=null
set VDt=null
set NDt=null
set MDt=null
set wHt=null
set uHt=null
endfunction
function Nct takes nothing returns nothing
set qW=0
call dHt("via function reference TournamentMode, line 1013")
endfunction
function VVO takes string BCO returns nothing
local unit NCO
local unit MCO
local player wVO
local integer uVO
local integer rVO
local unit sVO
local real tVO
local player iVO
local unit SVO
local integer cVO
local unit oVO
local integer OVO
local unit lVO
local integer bVO
local player yVO
local integer pVO
local player eVO
local playerstate qVO
local integer aVO
local player nVO
local playerstate dVO
local unit fVO
local player RVO
local unit TVO
local player YVO
local unit GVO
local player gVO
local integer hVO
local player FVO
local playerstate kVO
local integer jVO
local player xVO
local playerstate vVO
local unit mVO
local unittype QVO
local string WVO
local integer EVO
local real ZVO
local integer UVO
local string IVO
local unit PVO
local unit AVO
local unit DVO
local unit HVO
local boolean JVO
local player KVO
local playerstate LVO
local player XVO
local playerstate CVO
set aW[qW]=BCO
set qW=qW+1
set NCO=GetKillingUnit()
set MCO=GetDyingUnit()
set sVO=NCO
set wVO=GetOwningPlayer(sVO)
if ku==true then
set tVO=GetUnitPointValue(MCO)*1.5
set py=R2I(tVO)
else
set py=GetUnitPointValue(MCO)
endif
if wVO==Player(4) or wVO==Player(0) then
set ay=Player(0)
endif
if wVO==Player(5) or wVO==Player(1) then
set ay=Player(1)
endif
if wVO==Player(6) or wVO==Player(2) then
set ay=Player(2)
endif
if wVO==Player(7) or wVO==Player(3) then
set ay=Player(3)
endif
set iVO=ay
set ey=GetPlayerId(iVO)
if IsUnitType(MCO,UNIT_TYPE_HERO)==false then
set jr[ey]=jr[ey]+1
else
if IsUnitType(MCO,UNIT_TYPE_HERO)==true and IsUnitType(MCO,UNIT_TYPE_ANCIENT)==false then
set SVO=NCO
set cVO=$42303746
set JVO=GetUnitAbilityLevel(SVO,cVO)!=1
else
set JVO=false
endif
if JVO then
set mr[ey]=mr[ey]+1
set Br[ey]=Br[ey]+py
elseif IsUnitType(MCO,UNIT_TYPE_HERO)==true and IsUnitType(MCO,UNIT_TYPE_ANCIENT)==true then
set Wr[ey]=Wr[ey]+1
set Nr[ey]=Nr[ey]+py
endif
endif
set oVO=NCO
set OVO=$42303241
if GetUnitAbilityLevel(oVO,OVO)>0 then
set py=R2I(py*.75)
set ws[ey]=ws[ey]+py
endif
set lVO=NCO
set bVO=$42303847
if GetUnitAbilityLevel(lVO,bVO)>0 then
set ws[ey]=ws[ey]+py
endif
if IsUnitType(MCO,UNIT_TYPE_STRUCTURE)==true then
call UuS(MCO,py)
set fVO=MCO
set yVO=GetOwningPlayer(fVO)
set pVO=py
set eVO=yVO
set qVO=PLAYER_STATE_RESOURCE_GOLD
set aVO=pVO
set KVO=eVO
set LVO=qVO
set nVO=eVO
set dVO=qVO
call SetPlayerState(KVO,LVO,GetPlayerState(nVO,dVO)+aVO)
set TVO=MCO
set RVO=GetOwningPlayer(TVO)
set uVO=GetPlayerId(RVO)
set Ar[ey]=Ar[ey]+1
set Cr[uVO]=Cr[uVO]+py
endif
set GVO=MCO
set YVO=GetOwningPlayer(GVO)
if Zw[GetPlayerId(YVO)]==false then
set gVO=ay
set hVO=py
set FVO=gVO
set kVO=PLAYER_STATE_RESOURCE_GOLD
set jVO=hVO
set XVO=FVO
set CVO=kVO
set xVO=FVO
set vVO=kVO
call SetPlayerState(XVO,CVO,GetPlayerState(xVO,vVO)+jVO)
set hr[ey]=hr[ey]+py
set Fr[ey]=Fr[ey]+py
endif
set ny=GetOwningPlayer(MCO)
if ny==Player(4) then
set ny=Player(0)
endif
if ny==Player(5) then
set ny=Player(1)
endif
if ny==Player(6) then
set ny=Player(2)
endif
if ny==Player(7) then
set ny=Player(3)
endif
set qy=GetPlayerId(ny)
set mVO=MCO
set QVO=UNIT_TYPE_HERO
if IsUnitType(mVO,QVO) then
set WVO="when calling alloc_CallbackSingle_doAfter_DeathGold in DeathGold, line 75"
set aW[qW]=WVO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EVO=fF
set RF[EVO]=700
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DeathGold.","when calling error in DeathGold, line 75")
set EVO=0
endif
else
set dF=dF-1
set EVO=nF[dF]
set RF[EVO]=700
endif
set qW=qW-1
set rVO=EVO
set Yj[rVO]=MCO
set ZVO=1.
set UVO=rVO
set IVO="when calling doAfter in DeathGold, line 75"
set aW[qW]=IVO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ZVO,UVO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set PVO=MCO
if GetUnitTypeId(PVO)==r[qy] then
if f[qy]==true then
set f[qy]=false
endif
call SetPlayerTechMaxAllowed(ny,r[qy],999)
endif
set AVO=MCO
if GetUnitTypeId(AVO)==s[qy] then
if R[qy]==true then
set R[qy]=false
endif
call SetPlayerTechMaxAllowed(ny,s[qy],999)
endif
set DVO=MCO
if GetUnitTypeId(DVO)==t[qy] then
if T[qy]==true then
set T[qy]=false
endif
call SetPlayerTechMaxAllowed(ny,t[qy],999)
endif
set HVO=MCO
if GetUnitTypeId(HVO)==i[qy] then
if Y[qy]==true then
set Y[qy]=false
endif
call SetPlayerTechMaxAllowed(ny,i[qy],999)
endif
set ny=null
set ay=null
set qW=qW-1
set NCO=null
set MCO=null
set wVO=null
set sVO=null
set iVO=null
set SVO=null
set oVO=null
set lVO=null
set yVO=null
set eVO=null
set qVO=null
set nVO=null
set dVO=null
set fVO=null
set RVO=null
set TVO=null
set YVO=null
set GVO=null
set gVO=null
set FVO=null
set kVO=null
set xVO=null
set vVO=null
set mVO=null
set QVO=null
set PVO=null
set AVO=null
set DVO=null
set HVO=null
set KVO=null
set LVO=null
set XVO=null
set CVO=null
endfunction
function Nfr takes nothing returns nothing
set qW=0
call VVO("via function reference DeathGold, line 105")
endfunction
function Ngc takes nothing returns boolean
return true
endfunction
function Ngl takes nothing returns boolean
local trigger Hgl
local trigger Jgl
local playerunitevent Kgl
local trigger Lgl
local playerunitevent Xgl
local integer Cgl
local trigger Vgl
local code Bgl
set pn=CreateTrigger()
set Hgl=pn
call DisableTrigger(Hgl)
set Jgl=pn
set Kgl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lgl=Jgl
set Xgl=Kgl
set Cgl=0
loop
call TriggerRegisterPlayerUnitEvent(Lgl,Player(Cgl),Xgl,null)
set Cgl=Cgl+1
exitwhen Cgl==bj_MAX_PLAYER_SLOTS
endloop
set Vgl=pn
set Bgl=B5
call TriggerAddAction(Vgl,Bgl)
set Hgl=null
set Jgl=null
set Kgl=null
set Lgl=null
set Xgl=null
set Vgl=null
return true
endfunction
function Ngu takes nothing returns boolean
local trigger Hgu
local trigger Jgu
local playerunitevent Kgu
local trigger Lgu
local playerunitevent Xgu
local integer Cgu
local trigger Vgu
local code Bgu
set qn=CreateTrigger()
set Hgu=qn
call DisableTrigger(Hgu)
set Jgu=qn
set Kgu=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lgu=Jgu
set Xgu=Kgu
set Cgu=0
loop
call TriggerRegisterPlayerUnitEvent(Lgu,Player(Cgu),Xgu,null)
set Cgu=Cgu+1
exitwhen Cgu==bj_MAX_PLAYER_SLOTS
endloop
set Vgu=qn
set Bgu=M5
call TriggerAddAction(Vgu,Bgu)
set Hgu=null
set Jgu=null
set Kgu=null
set Lgu=null
set Xgu=null
set Vgu=null
return true
endfunction
function Nhc takes nothing returns boolean
local unit Ihc=GetFilterUnit()
local unit Phc=Ihc
local unit Ahc
local unittype Dhc
local unit Hhc
local unit Jhc
local unit Khc
local player Lhc
local unit Xhc
local boolean Chc
local boolean Vhc
local boolean Bhc
if UnitAlive(Phc) then
set Ahc=Ihc
set Dhc=UNIT_TYPE_STRUCTURE
set Chc=IsUnitType(Ahc,Dhc)==false
else
set Chc=false
endif
if Chc then
set Hhc=Ihc
set Jhc=GetDyingUnit()
if Hhc!=null and Jhc!=null then
set Khc=Hhc
set Xhc=Jhc
set Lhc=GetOwningPlayer(Xhc)
set Vhc=Khc!=null and IsUnitAlly(Khc,Lhc)
else
set Vhc=false
endif
set Bhc=Vhc
else
set Bhc=false
endif
set Ihc=null
set Phc=null
set Ahc=null
set Dhc=null
set Hhc=null
set Jhc=null
set Khc=null
set Lhc=null
set Xhc=null
return Bhc
endfunction
function NlS takes nothing returns nothing
local unit ZlS=GetEnteringUnit()
local unit AlS=ZlS
local integer UlS=GetUnitTypeId(AlS)
local unit DlS=ZlS
local player IlS=GetOwningPlayer(DlS)
local integer PlS
local unit HlS
local integer JlS
local unit KlS
local integer LlS
local unit XlS
local integer ClS
local unit VlS
local integer BlS
if UlS==$65736864 or UlS==$68303235 and GetPlayerTechCount(IlS,$52303150,true)>0 then
set PlS=GetPlayerTechCount(IlS,$52303150,true)
if PlS==1 then
set HlS=ZlS
set JlS=$41305443
call UnitAddAbility(HlS,JlS)
elseif PlS==2 then
set KlS=ZlS
set LlS=$41305444
call UnitAddAbility(KlS,LlS)
elseif PlS==3 then
set XlS=ZlS
set ClS=$41305445
call UnitAddAbility(XlS,ClS)
else
set VlS=ZlS
set BlS=$41305437
call UnitAddAbility(VlS,BlS)
endif
endif
set ZlS=null
set IlS=null
set AlS=null
set DlS=null
set HlS=null
set KlS=null
set XlS=null
set VlS=null
endfunction
function LWO takes string PQO returns nothing
local integer AQO
local integer DQO
local integer HQO
local integer JQO
local string KQO
local integer LQO
local string XQO
local integer CQO
local integer VQO
local unit BQO
local integer NQO
local unit MQO
local integer wWO
local unit uWO
local integer rWO
local unit sWO
local integer tWO
local unit iWO
local integer SWO
local unit cWO
local integer oWO
local unit OWO
local integer lWO
local unit bWO
local integer yWO
local unit pWO
local integer eWO
local unit qWO
local integer aWO
local integer nWO
local string dWO
local integer fWO
local string RWO
local integer TWO
local integer YWO
local unit GWO
local integer gWO
local unit hWO
local integer FWO
local unit kWO
local integer jWO
local unit xWO
local integer vWO
local unit mWO
local integer QWO
local unit WWO
local integer EWO
local unit ZWO
local integer UWO
local unit IWO
local integer PWO
local unit AWO
local integer DWO
local unit HWO
local integer JWO
local timerdialog KWO
set aW[qW]=PQO
set qW=qW+1
set AQO=0
loop
exitwhen AQO>3
set JQO=FY
set KQO="when calling shuffle in PickRace, line 3089"
set aW[qW]=KQO
set qW=qW+1
if ok[JQO]==0 then
if JQO==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(JQO,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set LQO=FY
set XQO="when calling getFirst in PickRace, line 3090"
set aW[qW]=XQO
set qW=qW+1
if ok[LQO]==0 then
if LQO==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set VQO=LQO
set CQO=Hv[Kv[Vv[VQO]]]
set qW=qW-1
set DQO=CQO
if DQO==1 then
set BQO=F[AQO]
set NQO=lw[AQO]
call IssueImmediateOrderById(BQO,NQO)
elseif DQO==2 then
set MQO=F[AQO]
set wWO=bw[AQO]
call IssueImmediateOrderById(MQO,wWO)
elseif DQO==3 then
set uWO=F[AQO]
set rWO=yw[AQO]
call IssueImmediateOrderById(uWO,rWO)
elseif DQO==4 then
set sWO=F[AQO]
set tWO=pw[AQO]
call IssueImmediateOrderById(sWO,tWO)
elseif DQO==5 then
set iWO=F[AQO]
set SWO=ew[AQO]
call IssueImmediateOrderById(iWO,SWO)
elseif DQO==6 then
set cWO=F[AQO]
set oWO=qw[AQO]
call IssueImmediateOrderById(cWO,oWO)
elseif DQO==7 then
set OWO=F[AQO]
set lWO=aw[AQO]
call IssueImmediateOrderById(OWO,lWO)
elseif DQO==8 then
set bWO=F[AQO]
set yWO=nw[AQO]
call IssueImmediateOrderById(bWO,yWO)
elseif DQO==9 then
set pWO=F[AQO]
set eWO=dw[AQO]
call IssueImmediateOrderById(pWO,eWO)
else
set qWO=F[AQO]
set aWO=fw[AQO]
call IssueImmediateOrderById(qWO,aWO)
endif
call eWp(FY,DQO,"when calling remove in PickRace, line 3111")
if hw[AQO]!=null then
set nWO=FY
set dWO="when calling shuffle in PickRace, line 3113"
set aW[qW]=dWO
set qW=qW+1
if ok[nWO]==0 then
if nWO==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(nWO,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set fWO=FY
set RWO="when calling getFirst in PickRace, line 3114"
set aW[qW]=RWO
set qW=qW+1
if ok[fWO]==0 then
if fWO==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set YWO=fWO
set TWO=Hv[Kv[Vv[YWO]]]
set qW=qW-1
set HQO=TWO
if HQO==1 then
set GWO=hw[AQO]
set gWO=lw[AQO]
call IssueImmediateOrderById(GWO,gWO)
elseif HQO==2 then
set hWO=hw[AQO]
set FWO=bw[AQO]
call IssueImmediateOrderById(hWO,FWO)
elseif HQO==3 then
set kWO=hw[AQO]
set jWO=yw[AQO]
call IssueImmediateOrderById(kWO,jWO)
elseif HQO==4 then
set xWO=hw[AQO]
set vWO=pw[AQO]
call IssueImmediateOrderById(xWO,vWO)
elseif HQO==5 then
set mWO=hw[AQO]
set QWO=ew[AQO]
call IssueImmediateOrderById(mWO,QWO)
elseif HQO==6 then
set WWO=hw[AQO]
set EWO=qw[AQO]
call IssueImmediateOrderById(WWO,EWO)
elseif HQO==7 then
set ZWO=hw[AQO]
set UWO=aw[AQO]
call IssueImmediateOrderById(ZWO,UWO)
elseif HQO==8 then
set IWO=hw[AQO]
set PWO=nw[AQO]
call IssueImmediateOrderById(IWO,PWO)
elseif HQO==9 then
set AWO=hw[AQO]
set DWO=dw[AQO]
call IssueImmediateOrderById(AWO,DWO)
else
set HWO=hw[AQO]
set JWO=fw[AQO]
call IssueImmediateOrderById(HWO,JWO)
endif
endif
set AQO=AQO+1
endloop
set KWO=tr
call DestroyTimerDialog(KWO)
set qW=qW-1
set BQO=null
set MQO=null
set uWO=null
set sWO=null
set iWO=null
set cWO=null
set OWO=null
set bWO=null
set pWO=null
set qWO=null
set GWO=null
set hWO=null
set kWO=null
set xWO=null
set mWO=null
set WWO=null
set ZWO=null
set IWO=null
set AWO=null
set HWO=null
set KWO=null
endfunction
function Nol takes nothing returns nothing
set qW=0
call LWO("via function reference PickRace, line 3213")
endfunction
function Nqc takes nothing returns nothing
local unit Dqc=GetSpellAbilityUnit()
local unit Jqc=Dqc
local integer Hqc
local unit Kqc
local string Lqc
local real Xqc
local real Cqc
local real Vqc
local real Bqc
if UnitAlive(Jqc) and Dqc!=null then
set Hqc=LoadInteger(qu,GetHandleId(Dqc),$6D6F7665)
set Kqc=Dqc
set Lqc="attack"
set Vqc=Qw[Hqc]
set Bqc=Ww[Hqc]
set Xqc=Vqc
set Cqc=Bqc
call IssuePointOrder(Kqc,Lqc,Xqc,Cqc)
endif
set Dqc=null
set Jqc=null
set Kqc=null
endfunction
function Nst takes nothing returns boolean
local trigger kst
local rect jst
local region xst
local trigger vst
local boolexpr mst
local trigger Qst
local trigger Wst
local rect Est
local region Zst
local trigger Ust
local boolexpr Ist
local trigger Pst
local trigger Ast
local trigger Dst
local trigger Hst
local trigger Jst
local playerunitevent Kst
local integer Lst
local trigger Xst
local trigger Cst
local playerunitevent Vst
local integer Bst
set pb=null
set eb=1
set qb=CreateTrigger()
set nb=CreateTrigger()
set db=CreateTrigger()
set fb=null
set Rb=CreateGroup()
set Tb=CreateTrigger()
set Yb=CreateTrigger()
set Gb=CreateTrigger()
set gb=CreateSound("-_-_Heroes_of_the_Storm_mp3cut.net_1.mp3",false,false,false,127,127,"DefaultEAXON")
set kst=nb
set jst=fs
set xst=CreateRegion()
call RegionAddRect(xst,jst)
call TriggerRegisterEnterRegion(kst,xst,null)
set vst=nb
set mst=Condition(Q3)
call TriggerAddCondition(vst,mst)
set Qst=nb
call DisableTrigger(Qst)
set Wst=db
set Est=fs
set Zst=CreateRegion()
call RegionAddRect(Zst,Est)
call TriggerRegisterLeaveRegion(Wst,Zst,null)
set Ust=db
set Ist=Condition(W3)
call TriggerAddCondition(Ust,Ist)
set Pst=db
call DisableTrigger(Pst)
call SetSoundDuration(gb,5374)
call SetSoundChannel(gb,0)
call SetSoundVolume(gb,250)
call SetSoundPitch(gb,1.)
call TriggerRegisterTimerEvent(qb,1.,true)
call TriggerAddAction(qb,E3)
set Ast=qb
call DisableTrigger(Ast)
call TriggerRegisterTimerEvent(Tb,10.,true)
call TriggerAddAction(Tb,Z3)
set Dst=Tb
call DisableTrigger(Dst)
set Hst=Gb
call DisableTrigger(Hst)
set Jst=Gb
set Kst=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Lst=0
loop
call TriggerRegisterPlayerUnitEvent(Jst,Player(Lst),Kst,null)
set Lst=Lst+1
exitwhen Lst==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Gb,U3)
set Xst=Yb
call DisableTrigger(Xst)
set Cst=Yb
set Vst=EVENT_PLAYER_UNIT_DEATH
set Bst=0
loop
call TriggerRegisterPlayerUnitEvent(Cst,Player(Bst),Vst,null)
set Bst=Bst+1
exitwhen Bst==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Yb,I3)
set kst=null
set jst=null
set xst=null
set vst=null
set mst=null
set Qst=null
set Wst=null
set Est=null
set Zst=null
set Ust=null
set Ist=null
set Pst=null
set Ast=null
set Dst=null
set Hst=null
set Jst=null
set Kst=null
set Xst=null
set Cst=null
set Vst=null
return true
endfunction
function Nur takes nothing returns boolean
return true
endfunction
function O1b takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1246")
endfunction
function O2c takes nothing returns boolean
local trigger r2c
local playerunitevent s2c
local trigger t2c
local playerunitevent i2c
local integer S2c
local trigger c2c
local code o2c
set oe=CreateTrigger()
set r2c=oe
set s2c=EVENT_PLAYER_UNIT_ATTACKED
set t2c=r2c
set i2c=s2c
set S2c=0
loop
call TriggerRegisterPlayerUnitEvent(t2c,Player(S2c),i2c,null)
set S2c=S2c+1
exitwhen S2c==bj_MAX_PLAYER_SLOTS
endloop
set c2c=oe
set o2c=r2
call TriggerAddAction(c2c,o2c)
set r2c=null
set s2c=null
set t2c=null
set i2c=null
set c2c=null
return true
endfunction
function IOe takes unit ROe,string TOe returns nothing
local integer YOe
local location GOe
local effect gOe
local integer hOe
local unit FOe
local unit kOe
local integer jOe
local location xOe
local string vOe
local string mOe
local integer QOe
local real WOe
local integer EOe
local string ZOe
local boolean UOe
set aW[qW]=TOe
set qW=qW+1
set FOe=ROe
set YOe=GetUnitTypeId(FOe)
if YOe==$484D3038 then
set kOe=ROe
set jOe=$494D3138
set UOe=GetInventoryIndexOfItemTypeBJ(kOe,jOe)>0==true
else
set UOe=false
endif
if UOe then
set GOe=GetUnitLoc(ROe)
set xOe=GOe
set vOe="Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl"
set bj_lastCreatedEffect=AddSpecialEffectLoc(vOe,xOe)
set gOe=bj_lastCreatedEffect
call RemoveLocation(GOe)
set mOe="when calling alloc_CallbackSingle_doAfter_BoneBells in BoneBells, line 36"
set aW[qW]=mOe
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set QOe=fF
set RF[QOe]=685
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BoneBells.","when calling error in BoneBells, line 36")
set QOe=0
endif
else
set dF=dF-1
set QOe=nF[dF]
set RF[QOe]=685
endif
set qW=qW-1
set hOe=QOe
set ij[hOe]=gOe
set Sj[hOe]=ROe
set WOe=1.
set EOe=hOe
set ZOe="when calling doAfter in BoneBells, line 36"
set aW[qW]=ZOe
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),WOe,EOe,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set GOe=null
set gOe=null
set FOe=null
set kOe=null
set xOe=null
endfunction
function O2t takes nothing returns nothing
local string o2t
set qW=0
set o2t="via function reference BoneBells, line 42"
set aW[qW]=o2t
set qW=qW+1
call IOe(GetDyingUnit(),"when calling bloodlust in BoneBells, line 43")
set qW=qW-1
endfunction
function O3e takes nothing returns nothing
local unit MMe=GetSpellAbilityUnit()
local unit w3e=GetSpellTargetUnit()
local unit u3e=w3e
local integer r3e=$554C564C
local unit s3e
local integer t3e
local unit i3e
local integer S3e
local force c3e
local string o3e
if GetUnitAbilityLevel(u3e,r3e)>=1 then
set s3e=MMe
set t3e=$446F7055
call UnitRemoveAbility(s3e,t3e)
set i3e=w3e
set S3e=$444F5053
call UnitAddAbility(i3e,S3e)
set eu=w3e
set c3e=bj_FORCE_ALL_PLAYERS
set o3e=GetPlayerName(GetOwningPlayer(w3e))+" has Extra Units! (Link Map)"
if IsPlayerInForce(GetLocalPlayer(),c3e) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,o3e)
endif
call PingMinimapForForceEx(bj_FORCE_ALL_PLAYERS,GetUnitX(w3e),GetUnitY(w3e),15.,bj_MINIMAPPINGSTYLE_SIMPLE,255.,255.,0.)
endif
set MMe=null
set w3e=null
set u3e=null
set s3e=null
set i3e=null
set c3e=null
endfunction
function O3w takes nothing returns nothing
local unit VMw=GetLevelingUnit()
local unit BMw=VMw
local unit NMw
local integer MMw
local unit w3w
local integer u3w
local unit r3w
local integer s3w
local unit t3w
local integer i3w
local integer S3w
local unit c3w
local integer o3w
if GetUnitTypeId(BMw)==$4F303436 then
set NMw=VMw
set MMw=$414F7368
if GetUnitAbilityLevel(NMw,MMw)==1 then
set w3w=VMw
set u3w=$41323155
call UnitAddAbility(w3w,u3w)
else
set r3w=VMw
set s3w=$414F7368
if GetUnitAbilityLevel(r3w,s3w)>1 then
set t3w=VMw
set i3w=$41323155
set c3w=VMw
set o3w=$414F7368
set S3w=GetUnitAbilityLevel(c3w,o3w)
call SetUnitAbilityLevel(t3w,i3w,S3w)
endif
endif
endif
set VMw=null
set BMw=null
set NMw=null
set w3w=null
set r3w=null
set t3w=null
set c3w=null
endfunction
function fVp takes nothing returns boolean
local unit aVp=GetTriggerUnit()
local integer nVp=bj_forLoopAIndex
local boolean dVp=GetItemTypeId(UnitItemInSlot(aVp,nVp-1))==Os[1]
set aVp=null
return dVp
endfunction
function O4p takes nothing returns nothing
set ls[1]=0
set Os[1]=GetItemTypeId(GetManipulatedItem())
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if fVp() then
set ls[1]=ls[1]+1
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
if ls[1]>1 then
call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(),Os[1]))
set Os[2]=os[GetRandomInt(1,4)]
if Os[2]!=Os[1] then
call UnitAddItemByIdSwapped(Os[2],GetTriggerUnit())
set ls[1]=0
set Os[1]=GetItemTypeId(null)
set Os[2]=GetItemTypeId(null)
else
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=10
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if Os[2]==Os[1] then
set Os[2]=os[GetRandomInt(1,4)]
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
call UnitAddItemByIdSwapped(Os[2],GetTriggerUnit())
set ls[1]=0
set Os[1]=GetItemTypeId(null)
set Os[2]=GetItemTypeId(null)
endif
else
set ls[1]=0
set Os[1]=GetItemTypeId(null)
set Os[2]=GetItemTypeId(null)
endif
endfunction
function s3b takes string GMb returns nothing
local unit gMb
local integer hMb
local integer FMb
local unit kMb
local unit jMb
local unit xMb
local integer vMb
local unit mMb
local integer QMb
local unit WMb
local integer EMb
local unit ZMb
local integer UMb
local unit IMb
local integer PMb
local unit AMb
local integer DMb
local unit HMb
local integer JMb
local unit KMb
local integer LMb
local unit XMb
local integer CMb
local unit VMb
local integer BMb
local string NMb
local integer MMb
local real w3b
local integer u3b
local string r3b
set aW[qW]=GMb
set qW=qW+1
set gMb=GetSpellAbilityUnit()
set kMb=gMb
if GetUnitTypeId(kMb)==$6F303554 then
if GetRandomInt(1,100)<=25 then
set jMb=gMb
set hMb=GetPlayerTechCount(GetOwningPlayer(jMb),$52303835,true)
if hMb==0 then
set xMb=gMb
set vMb=$41323333
call UnitAddAbility(xMb,vMb)
elseif hMb==1 then
set mMb=gMb
set QMb=$41323333
call UnitAddAbility(mMb,QMb)
set WMb=gMb
set EMb=$41323334
call UnitAddAbility(WMb,EMb)
elseif hMb==2 then
set ZMb=gMb
set UMb=$41323333
call UnitAddAbility(ZMb,UMb)
set IMb=gMb
set PMb=$41323334
call UnitAddAbility(IMb,PMb)
set AMb=gMb
set DMb=$41323335
call UnitAddAbility(AMb,DMb)
else
set HMb=gMb
set JMb=$41323333
call UnitAddAbility(HMb,JMb)
set KMb=gMb
set LMb=$41323334
call UnitAddAbility(KMb,LMb)
set XMb=gMb
set CMb=$41323335
call UnitAddAbility(XMb,CMb)
set VMb=gMb
set BMb=$41323336
call UnitAddAbility(VMb,BMb)
endif
set NMb="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_KultirasT1MageBonus in KultirasT1MageBonus, line 162"
set aW[qW]=NMb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set MMb=fF
set RF[MMb]=821
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_KultirasT1MageBonus.","when calling error in KultirasT1MageBonus, line 162")
set MMb=0
endif
else
set dF=dF-1
set MMb=nF[dF]
set RF[MMb]=821
endif
set qW=qW-1
set FMb=MMb
set jv[FMb]=hMb
set xv[FMb]=gMb
set w3b=1.
set u3b=FMb
set r3b="when calling doAfter in KultirasT1MageBonus, line 162"
set aW[qW]=r3b
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),w3b,u3b,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set gMb=null
set kMb=null
set jMb=null
set xMb=null
set mMb=null
set WMb=null
set ZMb=null
set IMb=null
set AMb=null
set HMb=null
set KMb=null
set XMb=null
set VMb=null
endfunction
function O5p takes nothing returns nothing
set qW=0
call s3b("via function reference KultirasT1MageBonus, line 143")
endfunction
function gvs takes string Uxs returns nothing
local unit Ixs
local integer Pxs
local unit Axs
local integer Dxs
local integer Hxs
local integer Jxs
local real Kxs
local unit Lxs
local unit Xxs
local integer Cxs
local widget Vxs
local unit Bxs
local integer Nxs
local unit Mxs
local integer wvs
local widget uvs
local string rvs
local string svs
local unit tvs
local integer ivs
local unit Svs
local integer cvs
local integer ovs
local unit Ovs
local integer lvs
local string bvs
local integer yvs
local real pvs
local integer evs
local string qvs
local unit avs
local integer nvs
local string dvs
local integer fvs
local real Rvs
local integer Tvs
local string Yvs
local boolean Gvs
set aW[qW]=Uxs
set qW=qW+1
set Ixs=GetAttacker()
set Lxs=Ixs
set Pxs=GetUnitTypeId(Lxs)
if Pxs==$484D3034 then
set Axs=GetTriggerUnit()
set Xxs=Ixs
set Cxs=852662
set Vxs=Axs
call IssueTargetOrderById(Xxs,Cxs,Vxs)
if xa==0 then
set Bxs=Ixs
set Nxs=$414D3262
set Gvs=GetUnitAbilityLevel(Bxs,Nxs)>0
else
set Gvs=false
endif
if Gvs then
set Mxs=Ixs
set wvs=$414D3262
set Dxs=GetUnitAbilityLevel(Mxs,wvs)
set uvs=Ixs
set rvs="Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl"
set svs="head"
set va=AddSpecialEffectTarget(rvs,uvs,svs)
set tvs=Ixs
set ivs=$414D3263
call UnitAddAbility(tvs,ivs)
set Svs=Ixs
set cvs=$414D3263
set ovs=Dxs
call SetUnitAbilityLevel(Svs,cvs,ovs)
set xa=1
set Ovs=Ixs
set lvs=$414D3262
set Kxs=22.-GetUnitAbilityLevel(Ovs,lvs)
set bvs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Himeron in Himeron, line 424"
set aW[qW]=bvs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set yvs=fF
set RF[yvs]=817
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Himeron.","when calling error in Himeron, line 424")
set yvs=0
endif
else
set dF=dF-1
set yvs=nF[dF]
set RF[yvs]=817
endif
set qW=qW-1
set Hxs=yvs
set Kx[Hxs]=Ixs
set pvs=Kxs
set evs=Hxs
set qvs="when calling doAfter in Himeron, line 424"
set aW[qW]=qvs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),pvs,evs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set avs=Ixs
set nvs=$414D3263
if GetUnitAbilityLevel(avs,nvs)!=0 then
set dvs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Himeron in Himeron, line 429"
set aW[qW]=dvs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set fvs=fF
set RF[fvs]=818
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Himeron.","when calling error in Himeron, line 429")
set fvs=0
endif
else
set dF=dF-1
set fvs=nF[dF]
set RF[fvs]=818
endif
set qW=qW-1
set Jxs=fvs
set Lx[Jxs]=Ixs
set Rvs=1.75
set Tvs=Jxs
set Yvs="when calling doAfter in Himeron, line 429"
set aW[qW]=Yvs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Rvs,Tvs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set Ixs=null
set Axs=null
set Lxs=null
set Xxs=null
set Vxs=null
set Bxs=null
set Mxs=null
set uvs=null
set tvs=null
set Svs=null
set Ovs=null
set avs=null
endfunction
function O7b takes nothing returns nothing
set qW=0
call gvs("via function reference Himeron, line 412")
endfunction
function O7t takes nothing returns boolean
return true
endfunction
function O9i takes nothing returns nothing
local unit W8i=GetTriggerUnit()
local unit E8i=GetKillingUnit()
local unit P8i=E8i
local integer Z8i
local integer U8i
local integer I8i
local unit A8i
local unittype D8i
local unit H8i
local unittype J8i
local real K8i
local unit L8i
local unit X8i
local unit C8i
local unit V8i
local unittype B8i
local unit N8i
local unittype M8i
local unit w9i
local unit u9i
local unit r9i
local boolean s9i
local player t9i
local real i9i
local boolean S9i
local player c9i
local real o9i
if GetUnitTypeId(P8i)==$55647468 then
set A8i=W8i
set D8i=UNIT_TYPE_HERO
if not IsUnitType(A8i,D8i) then
set H8i=W8i
set J8i=UNIT_TYPE_STRUCTURE
set s9i=not IsUnitType(H8i,J8i)
else
set s9i=false
endif
if s9i then
set K8i=GetHeroLevel(E8i)*1./4
set Z8i=R2I(K8i)
if Z8i!=0 then
set U8i=GetRandomInt(1,100)
if U8i<=7+Z8i then
set L8i=E8i
set t9i=GetOwningPlayer(L8i)
set X8i=W8i
set i9i=GetUnitX(X8i)
set C8i=W8i
call CreateUnit(t9i,$78303331,i9i,GetUnitY(C8i),180.)
endif
endif
endif
set V8i=W8i
set B8i=UNIT_TYPE_HERO
if IsUnitType(V8i,B8i) then
set N8i=W8i
set M8i=UNIT_TYPE_STRUCTURE
set S9i=not IsUnitType(N8i,M8i)
else
set S9i=false
endif
if S9i then
set I8i=GetRandomInt(1,100)
if I8i<=60 then
set w9i=E8i
set c9i=GetOwningPlayer(w9i)
set u9i=W8i
set o9i=GetUnitX(u9i)
set r9i=W8i
call CreateUnit(c9i,$78303331,o9i,GetUnitY(r9i),180.)
endif
endif
endif
set W8i=null
set E8i=null
set P8i=null
set A8i=null
set D8i=null
set H8i=null
set J8i=null
set L8i=null
set X8i=null
set C8i=null
set V8i=null
set B8i=null
set N8i=null
set M8i=null
set w9i=null
set u9i=null
set r9i=null
set t9i=null
set c9i=null
endfunction
function OEu takes nothing returns nothing
local group vWu=CreateGroup()
local filterfunc mWu=Filter(I5)
local unit QWu
local group WWu
local player EWu
local group ZWu
local group UWu
local unit IWu
local unit PWu
local integer AWu
local unit DWu
local integer HWu
local unit JWu
local integer KWu
local unit LWu
local integer XWu
local unit CWu
local integer VWu
local unit BWu
local player NWu
local integer MWu
local player wEu
local playerstate uEu
local integer rEu
local player sEu
local playerstate tEu
local group iEu
local boolexpr SEu
local player cEu
local playerstate oEu
call GroupEnumUnitsInRect(vWu,bj_mapInitialPlayableArea,mWu)
set WWu=vWu
loop
set ZWu=WWu
exitwhen not (FirstOfGroup(ZWu)!=null)
set UWu=WWu
set IWu=FirstOfGroup(UWu)
call GroupRemoveUnit(UWu,IWu)
set QWu=IWu
set PWu=QWu
set AWu=$41303853
if GetUnitAbilityLevel(PWu,AWu)==1 then
set tn=25
endif
set DWu=QWu
set HWu=$41303853
if GetUnitAbilityLevel(DWu,HWu)==2 then
set tn=5
endif
set JWu=QWu
set KWu=$41303853
if GetUnitAbilityLevel(JWu,KWu)==3 then
set tn=1
endif
set LWu=QWu
set XWu=$41303738
if GetUnitAbilityLevel(LWu,XWu)==1 then
set tn=tn+25
endif
set CWu=QWu
set VWu=$41303854
if GetUnitAbilityLevel(CWu,VWu)==1 then
set tn=tn+25
endif
set BWu=QWu
set EWu=GetOwningPlayer(BWu)
call UuS(QWu,tn)
set NWu=EWu
set MWu=tn
set wEu=NWu
set uEu=PLAYER_STATE_RESOURCE_GOLD
set rEu=MWu
set cEu=wEu
set oEu=uEu
set sEu=wEu
set tEu=uEu
call SetPlayerState(cEu,oEu,GetPlayerState(sEu,tEu)+rEu)
set hr[GetPlayerId(EWu)]=hr[GetPlayerId(EWu)]+tn
set Fr[GetPlayerId(EWu)]=Fr[GetPlayerId(EWu)]+tn
set Vr[GetPlayerId(EWu)]=Vr[GetPlayerId(EWu)]+tn
endloop
set iEu=vWu
call DestroyGroup(iEu)
set SEu=mWu
call DestroyBoolExpr(SEu)
set vWu=null
set mWu=null
set QWu=null
set WWu=null
set EWu=null
set ZWu=null
set UWu=null
set IWu=null
set PWu=null
set DWu=null
set JWu=null
set LWu=null
set CWu=null
set BWu=null
set NWu=null
set wEu=null
set uEu=null
set sEu=null
set tEu=null
set iEu=null
set SEu=null
set cEu=null
set oEu=null
endfunction
function OFw takes nothing returns nothing
local unit uFw=GetTriggerUnit()
local unit sFw=uFw
local integer rFw=GetUnitTypeId(sFw)
local player tFw
local trigger iFw
local unit SFw
local unit cFw
local real oFw
if rFw==$6E6D7263 then
set oG=uFw
set tG=GetTriggerPlayer()
set tFw=tG
set iG=Player(GetPlayerId(tFw)+4)
set iFw=bG
call EnableTrigger(iFw)
set yG=180
set SFw=uFw
set oFw=GetUnitX(SFw)
set cFw=uFw
set OG=jVl(oFw,GetUnitY(cFw),0.,I2S(yG),13.,0,100,0,255)
call TimerStart(lG,180.,false,hww)
call SetPlayerTechMaxAllowed(tG,$52303342,0)
call SetPlayerTechMaxAllowed(tG,$52303341,0)
call SetPlayerTechMaxAllowed(tG,$52303339,0)
endif
set uFw=null
set sFw=null
set tFw=null
set iFw=null
set SFw=null
set cFw=null
endfunction
function OHl takes nothing returns boolean
return true
endfunction
function OKl takes nothing returns boolean
local trigger uKl
local trigger rKl
local playerunitevent sKl
local trigger tKl
local playerunitevent iKl
local integer SKl
local trigger cKl
local code oKl
set an=CreateTrigger()
set uKl=an
call DisableTrigger(uKl)
set rKl=an
set sKl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tKl=rKl
set iKl=sKl
set SKl=0
loop
call TriggerRegisterPlayerUnitEvent(tKl,Player(SKl),iKl,null)
set SKl=SKl+1
exitwhen SKl==bj_MAX_PLAYER_SLOTS
endloop
set cKl=an
set oKl=w6
call TriggerAddAction(cKl,oKl)
set uKl=null
set rKl=null
set sKl=null
set tKl=null
set iKl=null
set cKl=null
return true
endfunction
function ONe takes nothing returns boolean
return true
endfunction
function OOS takes nothing returns nothing
local unit NoS=GetEnteringUnit()
local unit wOS=NoS
local integer MoS=GetUnitTypeId(wOS)
local unit uOS
local integer rOS
local unit sOS
local integer tOS
local unit iOS
local integer SOS
local unit cOS
local integer oOS
if MoS==$6F303530 then
set uOS=NoS
set rOS=$4130494C
call UnitAddAbility(uOS,rOS)
set sOS=NoS
set tOS=$414D316D
call UnitAddAbility(sOS,tOS)
endif
if MoS==$6F303533 then
set iOS=NoS
set SOS=$4130494F
call UnitAddAbility(iOS,SOS)
set cOS=NoS
set oOS=$414D316D
call UnitAddAbility(cOS,oOS)
endif
set NoS=null
set wOS=null
set uOS=null
set sOS=null
set iOS=null
set cOS=null
endfunction
function OPy takes nothing returns nothing
local unit tPy=GetDyingUnit()
local unit iPy=tPy
local integer SPy=$41304A44
local unit cPy
local integer oPy
call UnitRemoveAbility(iPy,SPy)
set cPy=tPy
set oPy=$41304231
call UnitRemoveAbility(cPy,oPy)
set tPy=null
set iPy=null
set cPy=null
endfunction
function OQi takes nothing returns boolean
local playerunitevent uQi
local code rQi
local playerunitevent sQi
local code tQi
local playerunitevent iQi
local code SQi
local playerunitevent cQi
local code oQi
set va=null
set uQi=EVENT_PLAYER_UNIT_ATTACKED
set rQi=O5
call emO(uQi,null,rQi,null)
set sQi=EVENT_PLAYER_UNIT_DEATH
set tQi=l5
call emO(sQi,null,tQi,null)
set iQi=EVENT_PLAYER_HERO_LEVEL
set SQi=b5
call emO(iQi,null,SQi,null)
set cQi=EVENT_PLAYER_HERO_REVIVE_FINISH
set oQi=y5
call emO(cQi,null,oQi,null)
set uQi=null
set sQi=null
set iQi=null
set cQi=null
return true
endfunction
function OSO takes nothing returns nothing
local unit uSO=GetTriggerUnit()
local unit rSO=uSO
local unit sSO
local unit tSO
local integer iSO
local unit SSO
local boolean cSO
local boolean oSO
if GetUnitTypeId(rSO)==$45303037 then
set cSO=true
else
set sSO=uSO
set cSO=GetUnitTypeId(sSO)==$45303038
endif
if cSO then
set tSO=uSO
set iSO=$62727362
set oSO=GetInventoryIndexOfItemTypeBJ(tSO,iSO)>0==true
else
set oSO=false
endif
if oSO and sF==false then
set sF=true
set tF=true
set SSO=uSO
set SF=GetOwningPlayer(SSO)
call TimerStart(iF,1.,false,ctw)
endif
set uSO=null
set rSO=null
set sSO=null
set tSO=null
set SSO=null
endfunction
function OUw takes nothing returns boolean
local trigger uUw=CreateTrigger()
local trigger rUw=uUw
local playerunitevent sUw=EVENT_PLAYER_UNIT_RESEARCH_FINISH
local trigger tUw=rUw
local playerunitevent iUw=sUw
local integer SUw=0
local trigger cUw
local code oUw
loop
call TriggerRegisterPlayerUnitEvent(tUw,Player(SUw),iUw,null)
set SUw=SUw+1
exitwhen SUw==bj_MAX_PLAYER_SLOTS
endloop
set cUw=uUw
set oUw=nuw
call TriggerAddAction(cUw,oUw)
set uUw=null
set rUw=null
set sUw=null
set tUw=null
set iUw=null
set cUw=null
return true
endfunction
function gIu takes unit mZu,player QZu returns nothing
local player PZu=QZu
local integer WZu=GetPlayerId(PZu)
local unit EZu
local unit ZZu
local integer UZu
local unit IZu
local unit AZu
local unit DZu
local unit HZu
local integer JZu
local unit KZu
local real LZu
local unit XZu
local integer CZu
local unit VZu
local string BZu
local widget NZu
local unit MZu
local unit wUu
local unit uUu
local integer rUu
local unit sUu
local real tUu
local unit iUu
local integer SUu
local unit cUu
local integer oUu
local integer OUu
local unit lUu
local string bUu
local widget yUu
local unit pUu
local unit eUu
local unit qUu
local integer aUu
local unit nUu
local real dUu
local unit fUu
local integer RUu
local unit TUu
local integer YUu
local integer GUu
local unit gUu
local integer hUu
local integer FUu
local unit kUu
local integer jUu
local integer xUu
local unit vUu
local integer mUu
local integer QUu
local unit WUu
local integer EUu
local integer ZUu
local unit UUu
local integer IUu
local integer PUu
local unit AUu
local integer DUu
local integer HUu
local unit JUu
local integer KUu
local integer LUu
local unit XUu
local integer CUu
local integer VUu
local unit BUu
local integer NUu
local integer MUu
local unit wIu
local integer uIu
local integer rIu
local unit sIu
local integer tIu
local integer iIu
local unit SIu
local integer cIu
local integer oIu
local unit OIu
local integer lIu
local integer bIu
local unit yIu
local integer pIu
local integer eIu
local unit qIu
local string aIu
local widget nIu
local player dIu
local real fIu
local player RIu
local real TIu
local player YIu
local real GIu
if Gw[WZu]==1 then
set dIu=Player(11)
set AZu=mZu
set fIu=GetUnitX(AZu)
set DZu=mZu
set EZu=CreateUnit(dIu,$75303030,fIu,GetUnitY(DZu),0.)
set HZu=EZu
set JZu=$41313136
call UnitAddAbility(HZu,JZu)
set KZu=EZu
set LZu=5.
call UnitApplyTimedLife(KZu,$42544C46,LZu)
set XZu=EZu
set CZu=$4132374E
call UnitAddAbility(XZu,CZu)
set VZu=EZu
set BZu="doom"
set NZu=mZu
call IssueTargetOrder(VZu,BZu,NZu)
endif
if Gw[WZu]==2 then
set RIu=Player(11)
set MZu=mZu
set TIu=GetUnitX(MZu)
set wUu=mZu
set ZZu=CreateUnit(RIu,$75303030,TIu,GetUnitY(wUu),0.)
set uUu=ZZu
set rUu=$41313136
call UnitAddAbility(uUu,rUu)
set sUu=ZZu
set tUu=5.
call UnitApplyTimedLife(sUu,$42544C46,tUu)
set iUu=ZZu
set SUu=$4132374E
call UnitAddAbility(iUu,SUu)
set cUu=ZZu
set oUu=$4132374E
set OUu=2
call SetUnitAbilityLevel(cUu,oUu,OUu)
set lUu=ZZu
set bUu="doom"
set yUu=mZu
call IssueTargetOrder(lUu,bUu,yUu)
endif
if Gw[WZu]==3 then
set UZu=GetRandomInt(1,3)
set YIu=Player(11)
set pUu=mZu
set GIu=GetUnitX(pUu)
set eUu=mZu
set IZu=CreateUnit(YIu,$75303030,GIu,GetUnitY(eUu),0.)
set qUu=IZu
set aUu=$41313136
call UnitAddAbility(qUu,aUu)
set nUu=IZu
set dUu=5.
call UnitApplyTimedLife(nUu,$42544C46,dUu)
set fUu=IZu
set RUu=$4132374E
call UnitAddAbility(fUu,RUu)
if UZu==1 then
if jw==false then
set jw=true
set TUu=IZu
set YUu=$4132374E
set GUu=3
call SetUnitAbilityLevel(TUu,YUu,GUu)
elseif xw==false then
set xw=true
set gUu=IZu
set hUu=$4132374E
set FUu=4
call SetUnitAbilityLevel(gUu,hUu,FUu)
elseif vw==false then
set vw=true
set kUu=IZu
set jUu=$4132374E
set xUu=5
call SetUnitAbilityLevel(kUu,jUu,xUu)
elseif GetRandomInt(1,2)==1 then
set vUu=IZu
set mUu=$4132374E
set QUu=1
call SetUnitAbilityLevel(vUu,mUu,QUu)
else
set WUu=IZu
set EUu=$4132374E
set ZUu=2
call SetUnitAbilityLevel(WUu,EUu,ZUu)
endif
endif
if UZu==2 then
if xw==false then
set xw=true
set UUu=IZu
set IUu=$4132374E
set PUu=4
call SetUnitAbilityLevel(UUu,IUu,PUu)
elseif jw==false then
set jw=true
set AUu=IZu
set DUu=$4132374E
set HUu=3
call SetUnitAbilityLevel(AUu,DUu,HUu)
elseif vw==false then
set vw=true
set JUu=IZu
set KUu=$4132374E
set LUu=5
call SetUnitAbilityLevel(JUu,KUu,LUu)
elseif GetRandomInt(1,2)==1 then
set XUu=IZu
set CUu=$4132374E
set VUu=1
call SetUnitAbilityLevel(XUu,CUu,VUu)
else
set BUu=IZu
set NUu=$4132374E
set MUu=2
call SetUnitAbilityLevel(BUu,NUu,MUu)
endif
endif
if UZu==3 then
if vw==false then
set vw=true
set wIu=IZu
set uIu=$4132374E
set rIu=5
call SetUnitAbilityLevel(wIu,uIu,rIu)
elseif jw==false then
set jw=true
set sIu=IZu
set tIu=$4132374E
set iIu=3
call SetUnitAbilityLevel(sIu,tIu,iIu)
elseif xw==false then
set xw=true
set SIu=IZu
set cIu=$4132374E
set oIu=4
call SetUnitAbilityLevel(SIu,cIu,oIu)
elseif GetRandomInt(1,2)==1 then
set OIu=IZu
set lIu=$4132374E
set bIu=1
call SetUnitAbilityLevel(OIu,lIu,bIu)
else
set yIu=IZu
set pIu=$4132374E
set eIu=2
call SetUnitAbilityLevel(yIu,pIu,eIu)
endif
endif
set qIu=IZu
set aIu="doom"
set nIu=mZu
call IssueTargetOrder(qIu,aIu,nIu)
endif
set EZu=null
set ZZu=null
set IZu=null
set PZu=null
set AZu=null
set DZu=null
set HZu=null
set KZu=null
set XZu=null
set VZu=null
set NZu=null
set MZu=null
set wUu=null
set uUu=null
set sUu=null
set iUu=null
set cUu=null
set lUu=null
set yUu=null
set pUu=null
set eUu=null
set qUu=null
set nUu=null
set fUu=null
set TUu=null
set gUu=null
set kUu=null
set vUu=null
set WUu=null
set UUu=null
set AUu=null
set JUu=null
set XUu=null
set BUu=null
set wIu=null
set sIu=null
set SIu=null
set OIu=null
set yIu=null
set qIu=null
set nIu=null
set dIu=null
set RIu=null
set YIu=null
endfunction
function O_O takes nothing returns nothing
local integer v0O=GetSpellAbilityId()
local unit m0O
local integer Q0O
local unit W0O
local unit E0O
local real Z0O
local real U0O
local integer I0O
local unit P0O
local unit A0O
local unit D0O
local player H0O
local unit J0O
local unit K0O
local integer L0O
local unit X0O
local integer C0O
local string V0O
local real B0O
local unit N0O
local unit M0O
local unit w_O
local unit u_O
local real r_O
local unit s_O
local unit t_O
local real i_O
local unit S_O
local unit c_O
local real o_O
if v0O==$41323459 then
set m0O=GetSpellAbilityUnit()
set J0O=m0O
set H0O=GetOwningPlayer(J0O)
set Q0O=GetPlayerId(H0O)
set W0O=GetSpellTargetUnit()
if Gw[Q0O]!=3 then
set Gw[Q0O]=Gw[Q0O]+1
set K0O=m0O
set L0O=$41323459
if GetUnitAbilityLevel(K0O,L0O)!=3 then
set X0O=m0O
set C0O=$41323459
call IncUnitAbilityLevel(X0O,C0O)
endif
endif
set V0O=Aw[Q0O]+GetPlayerName(Player(Q0O))+"|r"+" used |cff800080The Void|r"
set B0O=10.
call DisplayTimedTextToPlayer(IY,0.,0.,B0O,V0O)
call PingMinimapForForceEx(bj_FORCE_ALL_PLAYERS,GetUnitX(W0O),GetUnitY(W0O),5.,1,128.,0.,128.)
call gIu(W0O,Player(Q0O))
endif
if v0O==$41323535 then
set E0O=GetSpellAbilityUnit()
set N0O=E0O
set Z0O=GetUnitX(N0O)
set M0O=E0O
set U0O=GetUnitY(M0O)
set I0O=0
loop
exitwhen I0O>3
set w_O=E0O
set P0O=CreateUnit(GetOwningPlayer(w_O),$78303273,Z0O,U0O,0.)
set u_O=P0O
set r_O=45.
call UnitApplyTimedLife(u_O,$42544C46,r_O)
set s_O=E0O
set A0O=CreateUnit(GetOwningPlayer(s_O),$6E30334C,Z0O,U0O,0.)
set t_O=A0O
set i_O=60.
call UnitApplyTimedLife(t_O,$42544C46,i_O)
set S_O=E0O
set D0O=CreateUnit(GetOwningPlayer(S_O),$78303272,Z0O,U0O,0.)
set c_O=D0O
set o_O=45.
call UnitApplyTimedLife(c_O,$42544C46,o_O)
set I0O=I0O+1
endloop
endif
set m0O=null
set W0O=null
set E0O=null
set P0O=null
set A0O=null
set D0O=null
set H0O=null
set J0O=null
set K0O=null
set X0O=null
set N0O=null
set M0O=null
set w_O=null
set u_O=null
set s_O=null
set t_O=null
set S_O=null
set c_O=null
endfunction
function O_t takes nothing returns boolean
local unit c_t=GetFilterUnit()
local boolean o_t=GetUnitTypeId(c_t)==$4F303430
set c_t=null
return o_t
endfunction
function Oat takes nothing returns boolean
local unit tat=GetFilterUnit()
local unittype iat=UNIT_TYPE_HERO
local unit Sat
local player cat
local boolean oat
if IsUnitType(tat,iat)==true then
set Sat=GetFilterUnit()
set cat=GetTriggerPlayer()
set oat=(Sat!=null and IsUnitAlly(Sat,cat))==true
else
set oat=false
endif
set tat=null
set iat=null
set Sat=null
set cat=null
return oat
endfunction
function Ohu takes nothing returns boolean
return true
endfunction
function OkO takes nothing returns nothing
local timerdialog uFO
local player rFO
local unit sFO
local unit tFO
local unit iFO
local player SFO
local integer cFO
local real oFO
local real OFO
local real lFO
local real bFO
local unit yFO
local player pFO
local player eFO
local integer qFO
local real aFO
local real nFO
local real dFO
local real fFO
local unit RFO
local player TFO
local player YFO
local integer GFO
local real gFO
local real hFO
local real FFO
local real kFO
local unit jFO
local player xFO
local player vFO
local real mFO
local real QFO
local unit WFO
local unit EFO
local timerdialog ZFO
local player UFO
local integer IFO
local real PFO
local real AFO
local player DFO
local integer HFO
local real JFO
local real KFO
local player LFO
local integer XFO
local real CFO
local real VFO
local real BFO
local real NFO
local real MFO
local real wkO
local real ukO
local real rkO
local real skO
local real tkO
local real ikO
local real SkO
local real ckO
local real okO
if Au==false and Vu<3 then
set Au=true
set uFO=tr
call DestroyTimerDialog(uFO)
call TimerStart(ir,60.,false,Vww_1578)
set tr=CreateTimerDialog(ir)
set ZFO=tr
set rFO=Yu
call TimerDialogSetTitle(ZFO,GetPlayerName(rFO)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set sFO=Zu
call RemoveUnit(sFO)
set tFO=Uu
call RemoveUnit(tFO)
set iFO=Iu
call RemoveUnit(iFO)
set SFO=Yu
set pFO=Tu
set yFO=F[GetPlayerId(pFO)]
set cFO=GetUnitTypeId(yFO)
set BFO=0.
set NFO=400.
set oFO=BFO
set OFO=NFO
set MFO=bj_UNIT_FACING
set lFO=MFO
set UFO=SFO
set IFO=cFO
set PFO=oFO
set AFO=OFO
set wkO=lFO
set bFO=wkO
set Zu=CreateUnit(UFO,IFO,PFO,AFO,bFO*57.295779513)
set eFO=Yu
set TFO=Gu
set RFO=F[GetPlayerId(TFO)]
set qFO=GetUnitTypeId(RFO)
set ukO=-400.
set rkO=0.
set aFO=ukO
set nFO=rkO
set skO=bj_UNIT_FACING
set dFO=skO
set DFO=eFO
set HFO=qFO
set JFO=aFO
set KFO=nFO
set tkO=dFO
set fFO=tkO
set Uu=CreateUnit(DFO,HFO,JFO,KFO,fFO*57.295779513)
set YFO=Yu
set xFO=gu
set jFO=F[GetPlayerId(xFO)]
set GFO=GetUnitTypeId(jFO)
set ikO=400.
set SkO=0.
set gFO=ikO
set hFO=SkO
set ckO=bj_UNIT_FACING
set FFO=ckO
set LFO=YFO
set XFO=GFO
set CFO=gFO
set VFO=hFO
set okO=FFO
set kFO=okO
set Iu=CreateUnit(LFO,XFO,CFO,VFO,kFO*57.295779513)
set vFO=Yu
set WFO=Zu
set mFO=GetUnitX(WFO)
set EFO=Zu
set QFO=GetUnitY(EFO)
if GetLocalPlayer()==vFO then
call SetCameraPosition(mFO,QFO)
endif
endif
set uFO=null
set rFO=null
set sFO=null
set tFO=null
set iFO=null
set SFO=null
set yFO=null
set pFO=null
set eFO=null
set RFO=null
set TFO=null
set YFO=null
set jFO=null
set xFO=null
set vFO=null
set WFO=null
set EFO=null
set ZFO=null
set UFO=null
set DFO=null
set LFO=null
endfunction
function Okp takes nothing returns nothing
local unit skp=GetDyingUnit()
local unit tkp=skp
local trigger ikp
local effect Skp
local unit ckp
local integer okp
if GetUnitTypeId(tkp)==$5563726C then
set ikp=Dn
call DisableTrigger(ikp)
set Skp=Hn
call DestroyEffect(Skp)
set Hn=null
set ckp=skp
set okp=$41313730
call UnitRemoveAbility(ckp,okp)
endif
set skp=null
set tkp=null
set ikp=null
set Skp=null
set ckp=null
endfunction
function Olc takes nothing returns nothing
local unit wlc=GetTriggerUnit()
local unit ulc=wlc
local string rlc="attack"
local real clc=Qw[18]
local real olc=Ww[18]
local real slc=clc
local real tlc=olc
local unit ilc
local unittype Slc
call IssuePointOrder(ulc,rlc,slc,tlc)
set ilc=wlc
set Slc=UNIT_TYPE_HERO
if IsUnitType(ilc,Slc) then
call SaveInteger(qu,GetHandleId(wlc),$6D6F7665,18)
endif
set wlc=null
set ulc=null
set ilc=null
set Slc=null
endfunction
function Oll takes nothing returns nothing
local unit ZOl=GetTriggerUnit()
local unit AOl=ZOl
local integer UOl=GetUnitTypeId(AOl)
local unit DOl=ZOl
local player IOl=GetOwningPlayer(DOl)
local player HOl=IOl
local integer POl=GetPlayerId(HOl)
local unit JOl
local real KOl
local real LOl
local real XOl
local sound COl
local trigger VOl
local trigger BOl
local unit NOl
local real MOl
local real wll
local real ull
local trigger rll
local trigger sll
local trigger tll
local unit ill
local real Sll
local real cll
local real oll
if UOl==$68766C74 then
set JOl=ZOl
set KOl=140.
set LOl=140.
set XOl=140.
call SetUnitScale(JOl,KOl*.01,LOl*.01,XOl*.01)
set COl=Ks
if COl!=null then
call StartSound(COl)
endif
set t[POl]=$486A6169
endif
if UOl==$68777477 then
set VOl=yg
call EnableTrigger(VOl)
set BOl=pg
call EnableTrigger(BOl)
set NOl=ZOl
set MOl=90.
set wll=90.
set ull=90.
call SetUnitScale(NOl,MOl*.01,wll*.01,ull*.01)
call SetPlayerTechResearched(IOl,$52303051,1)
call SetPlayerTechResearched(Player(POl+4),$52303051,1)
endif
if UOl==$6E6D7237 then
set rll=ah
call EnableTrigger(rll)
call RemoveUnitFromStock(O[POl],A[POl])
call RemoveUnitFromStock(b[POl],A[POl])
call RemoveUnitFromStock(l[POl],A[POl])
set A[POl]=$6E686566
call AddUnitToStock(O[POl],A[POl],1,3)
call AddUnitToStock(b[POl],A[POl],1,3)
call AddUnitToStock(l[POl],A[POl],1,3)
endif
if UOl==$6E636238 then
call RemoveUnitFromStock(O[POl],D[POl])
call RemoveUnitFromStock(b[POl],D[POl])
call RemoveUnitFromStock(l[POl],D[POl])
set D[POl]=$6E736B6D
call AddUnitToStock(O[POl],D[POl],1,3)
call AddUnitToStock(b[POl],D[POl],1,3)
call AddUnitToStock(l[POl],D[POl],1,3)
endif
if UOl==$6E636239 then
call RemoveUnitFromStock(O[POl],H[POl])
call RemoveUnitFromStock(b[POl],H[POl])
call RemoveUnitFromStock(l[POl],H[POl])
set H[POl]=$6E68796D
call AddUnitToStock(O[POl],H[POl],1,3)
call AddUnitToStock(b[POl],H[POl],1,3)
call AddUnitToStock(l[POl],H[POl],1,3)
endif
if UOl==$68626172 then
set sll=fp
call EnableTrigger(sll)
call SetPlayerTechResearched(IOl,$5230344D,1)
call SetPlayerTechResearched(Player(POl+4),$5230344D,1)
endif
if UOl==$68686F75 then
set J[POl]=$68303236
endif
if UOl==$68677477 then
set K[POl]=$68303145
set tll=FT
call EnableTrigger(tll)
endif
if UOl==$6E636261 then
set L[POl]=$6E656C65
endif
if UOl==$68617273 then
set ill=ZOl
set Sll=90.
set cll=90.
set oll=90.
call SetUnitScale(ill,Sll*.01,cll*.01,oll*.01)
call SetPlayerTechResearched(IOl,$52303246,1)
call SetPlayerTechResearched(Player(POl+4),$52303246,1)
endif
set ZOl=null
set IOl=null
set AOl=null
set DOl=null
set HOl=null
set JOl=null
set COl=null
set VOl=null
set BOl=null
set NOl=null
set rll=null
set sll=null
set tll=null
set ill=null
endfunction
function Ont takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1117")
endfunction
function OrO takes nothing returns boolean
return true
endfunction
function Ott takes nothing returns boolean
local unit Mst=GetFilterUnit()
local unit wtt=Mst
local unittype utt=UNIT_TYPE_STRUCTURE
local unit rtt
local integer stt
local unit ttt
local player itt
local unit Stt
local boolean ctt
local boolean ott
if IsUnitType(wtt,utt)==true then
set rtt=Mst
set stt=$4176756C
set ctt=GetUnitAbilityLevel(rtt,stt)==0
else
set ctt=false
endif
if ctt then
set ttt=Mst
set Stt=GetSpellAbilityUnit()
set itt=GetOwningPlayer(Stt)
set ott=IsUnitEnemy(ttt,itt)==true
else
set ott=false
endif
set Mst=null
set wtt=null
set utt=null
set rtt=null
set ttt=null
set itt=null
set Stt=null
return ott
endfunction
function OuS takes nothing returns boolean
local playerunitevent cuS=EVENT_PLAYER_HERO_LEVEL
local code ouS=Cww
call emO(cuS,null,ouS,null)
set cuS=null
return true
endfunction
function Ovi takes nothing returns nothing
local unit svi=GetAttacker()
local unit tvi=svi
local unit ivi
local unit Svi
local unitstate cvi
local boolean ovi
if GetUnitTypeId(tvi)==$456D3173 then
set ivi=svi
set Svi=ivi
set cvi=UNIT_STATE_LIFE
set ovi=GetUnitState(Svi,cvi)<2000.
else
set ovi=false
endif
if ovi then
call IssueTargetOrderById(svi,852066,svi)
endif
set svi=null
set tvi=null
set ivi=null
set Svi=null
set cvi=null
endfunction
function Oxy takes nothing returns boolean
local playerunitevent cxy=EVENT_PLAYER_HERO_LEVEL
local code oxy=Suw
call emO(cxy,null,oxy,null)
set cxy=null
return true
endfunction
function ePO takes string NIO returns nothing
local unit MIO
local integer wPO
local real uPO
local real rPO
local filterfunc sPO
local unit tPO
local unittype iPO
local unit SPO
local unit cPO
local unit oPO
local string OPO
local integer lPO
local real bPO
local real yPO
local real pPO
set aW[qW]=NIO
set qW=qW+1
set MIO=GetTriggerUnit()
set tPO=MIO
set iPO=UNIT_TYPE_STRUCTURE
if IsUnitType(tPO,iPO)==true then
if IsUnitInGroup(MIO,sO)==false then
set SPO=MIO
set cPO=SPO
set bPO=GetUnitX(cPO)
set oPO=SPO
set yPO=bPO
set pPO=GetUnitY(oPO)
set uPO=yPO
set rPO=pPO
set sPO=Filter(gN)
set OPO="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_AgroBaza in AgroBaza, line 203"
set aW[qW]=OPO
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set lPO=qF
set aF[lPO]=870
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_AgroBaza.","when calling error in AgroBaza, line 203")
set lPO=0
endif
else
set eF=eF-1
set lPO=pF[eF]
set aF[lPO]=870
endif
set qW=qW-1
set wPO=lPO
set Rk[wPO]=MIO
call WXp(4,0,null,null,uPO,rPO,1050.,false,0,null,sPO,wPO,"when calling forNearestUnit in AgroBaza, line 203")
endif
endif
set qW=qW-1
set MIO=null
set sPO=null
set tPO=null
set iPO=null
set SPO=null
set cPO=null
set oPO=null
endfunction
function P0u takes nothing returns nothing
set qW=0
call ePO("via function reference AgroBaza, line 199")
endfunction
function P1b takes nothing returns boolean
local trigger Q1b
local rect W1b
local region E1b
local trigger Z1b
local boolexpr U1b
local trigger I1b
set Xh=CreateTrigger()
set Q1b=Xh
set W1b=GetWorldBounds()
set E1b=CreateRegion()
call RegionAddRect(E1b,W1b)
call TriggerRegisterEnterRegion(Q1b,E1b,null)
set Z1b=Xh
set U1b=Condition(Dsw)
call TriggerAddCondition(Z1b,U1b)
set I1b=Xh
call DisableTrigger(I1b)
set Q1b=null
set W1b=null
set E1b=null
set Z1b=null
set U1b=null
set I1b=null
return true
endfunction
function P1p takes nothing returns nothing
local integer c1p=GetRandomInt(1,100)
local integer o1p
local integer O1p
local player l1p
local unit b1p
local string y1p
local real p1p
local player e1p
local unit q1p
local string a1p
local real n1p
local player d1p
local unit f1p
local string R1p
local real T1p
local player Y1p
local unit G1p
local string g1p
local real h1p
local player F1p
local unit k1p
local string j1p
local real x1p
local player v1p
local unit m1p
local unit Q1p
local integer W1p
local unit E1p
local integer Z1p
local timer U1p
local timer I1p
if c1p<=20*re-2 then
set b1p=Dp
set l1p=GetOwningPlayer(b1p)
set o1p=GetPlayerId(l1p)
set O1p=GetRandomInt(1,4)
if O1p==1 then
if GetPlayerTechCount(Player(o1p+4),$52303850,true)<21 then
call SetPlayerTechResearched(Player(o1p+4),$52303850,GetPlayerTechCount(Player(o1p+4),$52303850,true)+1)
set y1p="You have received 1 lvl of Attack Melee"
set p1p=10.
set q1p=Dp
set e1p=GetOwningPlayer(q1p)
call DisplayTimedTextToPlayer(e1p,0.,0.,p1p,y1p)
endif
endif
if O1p==2 then
if GetPlayerTechCount(Player(o1p+4),$52303852,true)<21 then
call SetPlayerTechResearched(Player(o1p+4),$52303852,GetPlayerTechCount(Player(o1p+4),$52303852,true)+1)
set a1p="You have received 1 lvl of Attack Range"
set n1p=10.
set f1p=Dp
set d1p=GetOwningPlayer(f1p)
call DisplayTimedTextToPlayer(d1p,0.,0.,n1p,a1p)
endif
endif
if O1p==3 then
if GetPlayerTechCount(Player(o1p+4),$52303851,true)<21 then
call SetPlayerTechResearched(Player(o1p+4),$52303851,GetPlayerTechCount(Player(o1p+4),$52303851,true)+1)
set R1p="You have received 1 lvl of Armor"
set T1p=10.
set G1p=Dp
set Y1p=GetOwningPlayer(G1p)
call DisplayTimedTextToPlayer(Y1p,0.,0.,T1p,R1p)
endif
endif
if O1p==4 then
if GetPlayerTechCount(Player(o1p+4),$52303853,true)<21 then
call SetPlayerTechResearched(Player(o1p+4),$52303853,GetPlayerTechCount(Player(o1p+4),$52303853,true)+1)
set g1p="You have received 1 lvl of Attack Mage"
set h1p=10.
set k1p=Dp
set F1p=GetOwningPlayer(k1p)
call DisplayTimedTextToPlayer(F1p,0.,0.,h1p,g1p)
endif
endif
else
set j1p="The expedition failed..."
set x1p=10.
set m1p=Dp
set v1p=GetOwningPlayer(m1p)
call DisplayTimedTextToPlayer(v1p,0.,0.,x1p,j1p)
endif
if re<4 then
set Q1p=Dp
set W1p=$41323352
call UnitAddAbility(Q1p,W1p)
endif
if re==4 then
set E1p=Dp
set Z1p=$41323350
call UnitAddAbility(E1p,Z1p)
endif
set U1p=Kp
call PauseTimer(U1p)
set I1p=Kp
call DestroyTimer(I1p)
set Kp=null
set l1p=null
set b1p=null
set e1p=null
set q1p=null
set d1p=null
set f1p=null
set Y1p=null
set G1p=null
set F1p=null
set k1p=null
set v1p=null
set m1p=null
set Q1p=null
set E1p=null
set U1p=null
set I1p=null
endfunction
function P7s takes nothing returns nothing
local unit I7s=GetSoldUnit()
if GetUnitTypeId(I7s)==$4F303430 then
set Pp=GetSoldUnit()
set Qp=true
endif
set I7s=null
endfunction
function P8r takes nothing returns boolean
local trigger Q8r
local rect W8r
local region E8r
local trigger Z8r
local boolexpr U8r
local trigger I8r
call CreateTrigger()
set aG=CreateTrigger()
set Q8r=aG
set W8r=bj_mapInitialPlayableArea
set E8r=CreateRegion()
call RegionAddRect(E8r,W8r)
call TriggerRegisterEnterRegion(Q8r,E8r,null)
set Z8r=aG
set U8r=Condition(vww)
call TriggerAddCondition(Z8r,U8r)
set I8r=aG
call DisableTrigger(I8r)
set Q8r=null
set W8r=null
set E8r=null
set Z8r=null
set U8r=null
set I8r=null
return true
endfunction
function PAw takes nothing returns nothing
local unit PPw=GetTriggerUnit()
local unit DPw=PPw
local player APw=GetOwningPlayer(DPw)
local unit HPw
local string JPw
local real KPw
local real LPw
local unit XPw
local unittype CPw
local unit VPw
local string BPw
local real NPw
local real MPw
local unit wAw
local unittype uAw
local unit rAw
local string sAw
local real tAw
local real iAw
local unit SAw
local unittype cAw
local unit oAw
local string OAw
local real lAw
local real bAw
local unit yAw
local unittype pAw
local unit eAw
local string qAw
local real aAw
local real nAw
local unit dAw
local unittype fAw
local unit RAw
local string TAw
local real YAw
local real GAw
local unit gAw
local unittype hAw
local real FAw
local real kAw
local real jAw
local real xAw
local real vAw
local real mAw
local real QAw
local real WAw
local real EAw
local real ZAw
local real UAw
local real IAw
if APw==du then
if Ew[3]==true then
set HPw=PPw
set JPw="attack"
set FAw=Qw[50]
set kAw=Ww[50]
set KPw=FAw
set LPw=kAw
call IssuePointOrder(HPw,JPw,KPw,LPw)
set XPw=PPw
set CPw=UNIT_TYPE_HERO
if IsUnitType(XPw,CPw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,50)
endif
else
set VPw=PPw
set BPw="attack"
set jAw=Qw[36]
set xAw=Ww[36]
set NPw=jAw
set MPw=xAw
call IssuePointOrder(VPw,BPw,NPw,MPw)
set wAw=PPw
set uAw=UNIT_TYPE_HERO
if IsUnitType(wAw,uAw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,36)
endif
endif
endif
if APw==nu then
set rAw=PPw
set sAw="attack"
set vAw=Qw[36]
set mAw=Ww[36]
set tAw=vAw
set iAw=mAw
call IssuePointOrder(rAw,sAw,tAw,iAw)
set SAw=PPw
set cAw=UNIT_TYPE_HERO
if IsUnitType(SAw,cAw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,36)
endif
endif
if APw==fu then
if Ew[1]==true then
set oAw=PPw
set OAw="attack"
set QAw=Qw[36]
set WAw=Ww[36]
set lAw=QAw
set bAw=WAw
call IssuePointOrder(oAw,OAw,lAw,bAw)
set yAw=PPw
set pAw=UNIT_TYPE_HERO
if IsUnitType(yAw,pAw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,36)
endif
else
set eAw=PPw
set qAw="attack"
set EAw=Qw[50]
set ZAw=Ww[50]
set aAw=EAw
set nAw=ZAw
call IssuePointOrder(eAw,qAw,aAw,nAw)
set dAw=PPw
set fAw=UNIT_TYPE_HERO
if IsUnitType(dAw,fAw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,50)
endif
endif
endif
if APw==Ru then
set RAw=PPw
set TAw="attack"
set UAw=Qw[50]
set IAw=Ww[50]
set YAw=UAw
set GAw=IAw
call IssuePointOrder(RAw,TAw,YAw,GAw)
set gAw=PPw
set hAw=UNIT_TYPE_HERO
if IsUnitType(gAw,hAw) then
call SaveInteger(qu,GetHandleId(PPw),$6D6F7665,50)
endif
endif
set PPw=null
set APw=null
set DPw=null
set HPw=null
set XPw=null
set CPw=null
set VPw=null
set wAw=null
set uAw=null
set rAw=null
set SAw=null
set cAw=null
set oAw=null
set yAw=null
set pAw=null
set eAw=null
set dAw=null
set fAw=null
set RAw=null
set gAw=null
set hAw=null
endfunction
function PFc takes nothing returns boolean
local unit EFc=GetDyingUnit()
local unit ZFc=EFc
local unit UFc
local boolean IFc
if GetUnitTypeId(ZFc)==$6E62616E then
set IFc=true
else
set UFc=EFc
set IFc=GetUnitTypeId(UFc)==$6E676E77
endif
set EFc=null
set ZFc=null
set UFc=null
return IFc
endfunction
function PHl takes nothing returns nothing
local integer WHl=GetResearched()
local player EHl
local integer ZHl
local player UHl
local trigger IHl
if WHl==$524D316E then
set EHl=GetTriggerPlayer()
set ZHl=$524D316E
set UHl=EHl
if GetPlayerTechCount(UHl,ZHl,true)==1 then
set IHl=jn
call EnableTrigger(IHl)
endif
endif
set EHl=null
set UHl=null
set IHl=null
endfunction
function PIl takes nothing returns nothing
local integer gIl=GetSpellAbilityId()
local player hIl
local integer FIl
local integer kIl
local integer jIl
local player xIl
local integer vIl
local player mIl
local playerstate QIl
local integer WIl
local player EIl
local player ZIl
local playerstate UIl
local player IIl
if gIl==$41353858 then
set hIl=GetTriggerPlayer()
set FIl=GetUnitAbilityLevel(MY,$41353858)-1
set kIl=250+250*FIl
set xIl=hIl
set EIl=hIl
set ZIl=EIl
set UIl=PLAYER_STATE_RESOURCE_GOLD
set vIl=GetPlayerState(ZIl,UIl)+kIl
set mIl=xIl
set QIl=PLAYER_STATE_RESOURCE_GOLD
set WIl=vIl
call SetPlayerState(mIl,QIl,WIl)
set IIl=hIl
set jIl=GetPlayerId(IIl)
set hr[jIl]=hr[jIl]+kIl
set Fr[jIl]=Fr[jIl]+kIl
set Cr[jIl]=Cr[jIl]+kIl
endif
set hIl=null
set xIl=null
set mIl=null
set QIl=null
set EIl=null
set ZIl=null
set UIl=null
set IIl=null
endfunction
function PLl takes nothing returns nothing
local unit iLl
local unit SLl
local integer cLl
local integer oLl
local unit OLl
local unittype lLl
local unit bLl
local unittype yLl
local player pLl
local player eLl
local unit qLl
local unit aLl
local integer nLl
local player dLl
local unit fLl
local unit RLl
local unittype TLl
local string YLl
local real GLl
local player gLl
local integer hLl
local unit FLl
local unit kLl
local unit jLl
local unittype xLl
local string vLl
local real mLl
local player QLl
local integer WLl
local unit ELl
local unit ZLl
local boolean ULl
local boolean ILl
if iy!=null then
set iLl=GetTriggerUnit()
set SLl=GetAttacker()
set OLl=iLl
set lLl=UNIT_TYPE_MECHANICAL
if IsUnitType(OLl,lLl) then
set ULl=true
else
set bLl=iLl
set yLl=UNIT_TYPE_STRUCTURE
set ULl=IsUnitType(bLl,yLl)
endif
if ULl then
set qLl=SLl
set pLl=GetOwningPlayer(qLl)
set aLl=iy
set eLl=GetOwningPlayer(aLl)
if IsPlayerAlly(pLl,eLl) and ly!=10 then
set nLl=$52313339
set fLl=iy
set dLl=GetOwningPlayer(fLl)
set ILl=GetPlayerTechCount(dLl,nLl,true)<2
else
set ILl=false
endif
if ILl then
set RLl=iLl
set TLl=UNIT_TYPE_MECHANICAL
if IsUnitType(RLl,TLl) then
set cLl=GetRandomInt(1,228)
if cLl==1 then
set ly=ly+1
set hLl=ly
set YLl="You got tiny piece of relic! You have "+I2S(hLl)+"/10 now!"
set GLl=10.
set FLl=iy
set gLl=GetOwningPlayer(FLl)
call DisplayTimedTextToPlayer(gLl,0.,0.,GLl,YLl)
if ly==10 then
set kLl=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(kLl),$52313339,2)
endif
endif
endif
set jLl=iLl
set xLl=UNIT_TYPE_STRUCTURE
if IsUnitType(jLl,xLl) then
set oLl=GetRandomInt(1,100)
if oLl<5 then
set ly=ly+1
set WLl=ly
set vLl="You got tiny piece of relic! You have "+I2S(WLl)+"/10 now!"
set mLl=10.
set ELl=iy
set QLl=GetOwningPlayer(ELl)
call DisplayTimedTextToPlayer(QLl,0.,0.,mLl,vLl)
if ly==10 then
set ZLl=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(ZLl),$52313339,2)
endif
endif
endif
endif
endif
endif
set iLl=null
set SLl=null
set OLl=null
set lLl=null
set bLl=null
set yLl=null
set pLl=null
set eLl=null
set qLl=null
set aLl=null
set dLl=null
set fLl=null
set RLl=null
set TLl=null
set gLl=null
set FLl=null
set kLl=null
set jLl=null
set xLl=null
set QLl=null
set ELl=null
set ZLl=null
endfunction
function NYr takes string UYr returns nothing
local unit IYr
local integer PYr
local unit AYr
local unittype DYr
local group HYr
local unit JYr
local string KYr
local integer LYr
local real XYr
local integer CYr
local string VYr
local boolean BYr
set aW[qW]=UYr
set qW=qW+1
if GetUnitCurrentOrder(GetTriggerUnit())==852127 then
set AYr=GetTriggerUnit()
set DYr=UNIT_TYPE_HERO
set BYr=IsUnitType(AYr,DYr)
else
set BYr=false
endif
if BYr then
set IYr=GetTriggerUnit()
set HYr=sg
set JYr=IYr
call GroupAddUnit(HYr,JYr)
set KYr="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_StunAgroFix in StunAgroFix, line 22"
set aW[qW]=KYr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set LYr=fF
set RF[LYr]=832
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_StunAgroFix.","when calling error in StunAgroFix, line 22")
set LYr=0
endif
else
set dF=dF-1
set LYr=nF[dF]
set RF[LYr]=832
endif
set qW=qW-1
set PYr=LYr
set lQ[PYr]=IYr
set XYr=6.
set CYr=PYr
set VYr="when calling doAfter in StunAgroFix, line 22"
set aW[qW]=VYr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),XYr,CYr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set IYr=null
set AYr=null
set DYr=null
set HYr=null
set JYr=null
endfunction
function PQt takes nothing returns nothing
set qW=0
call NYr("via function reference StunAgroFix, line 18")
endfunction
function PRe takes nothing returns nothing
local unit xRe=GetEnteringUnit()
local unit mRe=xRe
local integer vRe=GetUnitTypeId(mRe)
local unit QRe
local integer WRe
local unit ERe
local integer ZRe
local unit URe
local integer IRe
if vRe==$68686573 or vRe==$68726966 or vRe==$68637468 or vRe==$686D7474 then
set QRe=xRe
set WRe=$41304A31
call UnitAddAbility(QRe,WRe)
endif
if vRe==$68686573 then
set ERe=xRe
set ZRe=$41304655
call UnitAddAbility(ERe,ZRe)
endif
if vRe==$68726966 then
set URe=xRe
set IRe=$4130434C
call UnitAddAbility(URe,IRe)
endif
set xRe=null
set mRe=null
set QRe=null
set ERe=null
set URe=null
endfunction
function PRr takes nothing returns boolean
return true
endfunction
function PTl takes nothing returns nothing
local unit cTl=Rh
local integer STl
local effect oTl
local string OTl
local real lTl
local real bTl
local unit yTl
local unit pTl
local unit eTl
local unit qTl
local integer aTl
local unit nTl
local integer dTl
local texttag fTl
local texttag RTl
local unit TTl
local unit YTl
local unit GTl
local unit gTl
local unit hTl
local unit FTl
local texttag kTl
local texttag jTl
local trigger xTl
local timer vTl
local timer mTl
local real QTl
local real WTl
local real ETl
local real ZTl
local real UTl
local real ITl
if UnitAlive(cTl)==true then
set OTl="LightningNovaR.mdx"
set yTl=Rh
set pTl=yTl
set QTl=GetUnitX(pTl)
set eTl=yTl
set UTl=QTl
set ITl=GetUnitY(eTl)
set lTl=UTl
set bTl=ITl
set oTl=AddSpecialEffect(OTl,lTl,bTl)
call DestroyEffect(oTl)
set qTl=Rh
set aTl=Th
call UnitRemoveAbility(qTl,aTl)
set Th=Jw[1]
set nTl=Rh
set dTl=Th
call UnitAddAbility(nTl,dTl)
set STl=GetRandomInt(2,16)
set Jw[1]=Jw[STl]
set Hw[1]=Hw[STl]
set fTl=Gh
call DestroyTextTag(fTl)
set RTl=hh
call DestroyTextTag(RTl)
set Fh=60
set TTl=Rh
set WTl=GetUnitX(TTl)
set YTl=Rh
set hh=jVl(WTl,GetUnitY(YTl),0.,I2S(60),13.,255,230,0,255)
set GTl=Rh
set ETl=GetUnitX(GTl)-512.
set gTl=Rh
set Gh=jVl(ETl,GetUnitY(gTl)+128.,0.,Hw[1],8.,100,0,100,255)
call TimerStart(Yh,60.,false,Rsw)
set hTl=Rh
set ZTl=GetUnitX(hTl)
set FTl=Rh
call PingMinimapEx(ZTl,GetUnitY(FTl),10.,100,0,0,false)
else
set kTl=Gh
call DestroyTextTag(kTl)
set jTl=hh
call DestroyTextTag(jTl)
set Fh=0
set xTl=gh
call DisableTrigger(xTl)
set Rh=null
set vTl=Yh
call PauseTimer(vTl)
set mTl=Yh
call DestroyTimer(mTl)
set Yh=null
set hh=null
set Gh=null
set Th=0
endif
set cTl=null
set oTl=null
set yTl=null
set pTl=null
set eTl=null
set qTl=null
set nTl=null
set fTl=null
set RTl=null
set TTl=null
set YTl=null
set GTl=null
set gTl=null
set hTl=null
set FTl=null
set kTl=null
set jTl=null
set xTl=null
set vTl=null
set mTl=null
endfunction
function PUs takes nothing returns nothing
local integer ZUs=GetResearched()
local trigger UUs
local trigger IUs
if ZUs==$5267666F then
set UUs=qh
call EnableTrigger(UUs)
endif
if ZUs==$52656873 then
set IUs=Rl
call EnableTrigger(IUs)
endif
set UUs=null
set IUs=null
endfunction
function PYy takes nothing returns nothing
local texttag EYy
local string ZYy
local real UYy
local integer IYy
if Jl>0 then
set Jl=Jl-1
set EYy=Hl
set IYy=Jl
set ZYy=I2S(IYy)
set UYy=13.
call SetTextTagText(EYy,ZYy,UYy*.0023)
endif
set EYy=null
endfunction
function PZl takes nothing returns boolean
local playerunitevent UZl=EVENT_PLAYER_UNIT_SPELL_CAST
local code IZl=Z7
call emO(UZl,null,IZl,null)
set UZl=null
return true
endfunction
function P_r takes nothing returns boolean
return true
endfunction
function Pae takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function Pao takes nothing returns boolean
local trigger Eao
local trigger Zao
local playerunitevent Uao
local integer Iao
set tg=CreateTrigger()
set Eao=tg
call DisableTrigger(Eao)
set Zao=tg
set Uao=EVENT_PLAYER_UNIT_ATTACKED
set Iao=0
loop
call TriggerRegisterPlayerUnitEvent(Zao,Player(Iao),Uao,null)
set Iao=Iao+1
exitwhen Iao==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(tg,Wuw)
set Eao=null
set Zao=null
set Uao=null
return true
endfunction
function Pbc takes nothing returns nothing
local unit elc=GetTriggerUnit()
local unit alc=elc
local player qlc=GetOwningPlayer(alc)
local unit nlc
local string dlc
local real flc
local real Rlc
local unit Tlc
local unittype Ylc
local unit Glc
local string glc
local real hlc
local real Flc
local unit klc
local unittype jlc
local unit xlc
local string vlc
local real mlc
local real Qlc
local unit Wlc
local unittype Elc
local unit Zlc
local string Ulc
local real Ilc
local real Plc
local unit Alc
local unittype Dlc
local unit Hlc
local string Jlc
local real Klc
local real Llc
local unit Xlc
local unittype Clc
local unit Vlc
local string Blc
local real Nlc
local real Mlc
local unit wbc
local unittype ubc
local unit rbc
local string sbc
local real tbc
local real ibc
local unit Sbc
local unittype cbc
local unit obc
local string Obc
local real lbc
local real bbc
local unit ybc
local unittype pbc
local unit ebc
local string qbc
local real abc
local real nbc
local unit dbc
local unittype fbc
local real Rbc
local real Tbc
local real Ybc
local real Gbc
local real gbc
local real hbc
local real Fbc
local real kbc
local real jbc
local real xbc
local real vbc
local real mbc
local real Qbc
local real Wbc
local real Ebc
local real Zbc
local real Ubc
local real Ibc
if qlc==fu then
if Ew[3]==false then
set nlc=elc
set dlc="attack"
set Rbc=Qw[35]
set Tbc=Ww[35]
set flc=Rbc
set Rlc=Tbc
call IssuePointOrder(nlc,dlc,flc,Rlc)
set Tlc=elc
set Ylc=UNIT_TYPE_HERO
if IsUnitType(Tlc,Ylc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,35)
endif
else
set Glc=elc
set glc="attack"
set Ybc=Qw[61]
set Gbc=Ww[61]
set hlc=Ybc
set Flc=Gbc
call IssuePointOrder(Glc,glc,hlc,Flc)
set klc=elc
set jlc=UNIT_TYPE_HERO
if IsUnitType(klc,jlc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,61)
endif
endif
endif
if qlc==Ru then
set xlc=elc
set vlc="attack"
set gbc=Qw[61]
set hbc=Ww[61]
set mlc=gbc
set Qlc=hbc
call IssuePointOrder(xlc,vlc,mlc,Qlc)
set Wlc=elc
set Elc=UNIT_TYPE_HERO
if IsUnitType(Wlc,Elc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,61)
endif
endif
if qlc==nu then
if Ew[0]==false then
set Zlc=elc
set Ulc="attack"
set Fbc=Qw[38]
set kbc=Ww[38]
set Ilc=Fbc
set Plc=kbc
call IssuePointOrder(Zlc,Ulc,Ilc,Plc)
set Alc=elc
set Dlc=UNIT_TYPE_HERO
if IsUnitType(Alc,Dlc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,38)
endif
elseif Ew[3]==false then
set Hlc=elc
set Jlc="attack"
set jbc=Qw[35]
set xbc=Ww[35]
set Klc=jbc
set Llc=xbc
call IssuePointOrder(Hlc,Jlc,Klc,Llc)
set Xlc=elc
set Clc=UNIT_TYPE_HERO
if IsUnitType(Xlc,Clc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,35)
endif
elseif Ew[2]==false then
set Vlc=elc
set Blc="attack"
set vbc=Qw[44]
set mbc=Ww[44]
set Nlc=vbc
set Mlc=mbc
call IssuePointOrder(Vlc,Blc,Nlc,Mlc)
set wbc=elc
set ubc=UNIT_TYPE_HERO
if IsUnitType(wbc,ubc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,44)
endif
endif
endif
if qlc==du then
if Ew[1]==false then
set rbc=elc
set sbc="attack"
set Qbc=Qw[41]
set Wbc=Ww[41]
set tbc=Qbc
set ibc=Wbc
call IssuePointOrder(rbc,sbc,tbc,ibc)
set Sbc=elc
set cbc=UNIT_TYPE_HERO
if IsUnitType(Sbc,cbc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,41)
endif
elseif Ew[2]==false then
set obc=elc
set Obc="attack"
set Ebc=Qw[44]
set Zbc=Ww[44]
set lbc=Ebc
set bbc=Zbc
call IssuePointOrder(obc,Obc,lbc,bbc)
set ybc=elc
set pbc=UNIT_TYPE_HERO
if IsUnitType(ybc,pbc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,44)
endif
elseif Ew[3]==false then
set ebc=elc
set qbc="attack"
set Ubc=Qw[35]
set Ibc=Ww[35]
set abc=Ubc
set nbc=Ibc
call IssuePointOrder(ebc,qbc,abc,nbc)
set dbc=elc
set fbc=UNIT_TYPE_HERO
if IsUnitType(dbc,fbc) then
call SaveInteger(qu,GetHandleId(elc),$6D6F7665,35)
endif
endif
endif
set elc=null
set qlc=null
set alc=null
set nlc=null
set Tlc=null
set Ylc=null
set Glc=null
set klc=null
set jlc=null
set xlc=null
set Wlc=null
set Elc=null
set Zlc=null
set Alc=null
set Dlc=null
set Hlc=null
set Xlc=null
set Clc=null
set Vlc=null
set wbc=null
set ubc=null
set rbc=null
set Sbc=null
set cbc=null
set obc=null
set ybc=null
set pbc=null
set ebc=null
set dbc=null
set fbc=null
endfunction
function Pht takes nothing returns boolean
local playerunitevent Uht=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code Iht=B2
call emO(Uht,null,Iht,null)
set Uht=null
return true
endfunction
function PlO takes nothing returns nothing
local unit QlO=GetTriggerUnit()
local unit ZlO=QlO
local integer WlO=GetUnitTypeId(ZlO)
local player ElO
local trigger UlO
local player IlO
if WlO==$6E393931 then
set ElO=GetTriggerPlayer()
set UlO=hO
call EnableTrigger(UlO)
call SetPlayerTechResearched(ElO,$52303051,1)
set IlO=ElO
call SetPlayerTechResearched(Player(GetPlayerId(IlO)+4),$52303051,1)
call GetPlayerId(ElO)
endif
set QlO=null
set ElO=null
set ZlO=null
set UlO=null
set IlO=null
endfunction
function PnS takes nothing returns boolean
return true
endfunction
function Pqw takes nothing returns nothing
local unit Pew=GetTriggerUnit()
local unit Dew=Pew
local player Aew=GetOwningPlayer(Dew)
local unit Hew
local string Jew
local real Kew
local real Lew
local unit Xew
local unittype Cew
local unit Vew
local string Bew
local real New
local real Mew
local unit wqw
local unittype uqw
local unit rqw
local string sqw
local real tqw
local real iqw
local unit Sqw
local unittype cqw
local unit oqw
local string Oqw
local real lqw
local real bqw
local unit yqw
local unittype pqw
local unit eqw
local string qqw
local real aqw
local real nqw
local unit dqw
local unittype fqw
local unit Rqw
local string Tqw
local real Yqw
local real Gqw
local unit gqw
local unittype hqw
local real Fqw
local real kqw
local real jqw
local real xqw
local real vqw
local real mqw
local real Qqw
local real Wqw
local real Eqw
local real Zqw
local real Uqw
local real Iqw
if Aew==du then
set Hew=Pew
set Jew="attack"
set Fqw=Qw[46]
set kqw=Ww[46]
set Kew=Fqw
set Lew=kqw
call IssuePointOrder(Hew,Jew,Kew,Lew)
set Xew=Pew
set Cew=UNIT_TYPE_HERO
if IsUnitType(Xew,Cew) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,46)
endif
endif
if Aew==nu then
if Ew[3]==true then
set Vew=Pew
set Bew="attack"
set jqw=Qw[39]
set xqw=Ww[39]
set New=jqw
set Mew=xqw
call IssuePointOrder(Vew,Bew,New,Mew)
set wqw=Pew
set uqw=UNIT_TYPE_HERO
if IsUnitType(wqw,uqw) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,39)
endif
else
set rqw=Pew
set sqw="attack"
set vqw=Qw[46]
set mqw=Ww[46]
set tqw=vqw
set iqw=mqw
call IssuePointOrder(rqw,sqw,tqw,iqw)
set Sqw=Pew
set cqw=UNIT_TYPE_HERO
if IsUnitType(Sqw,cqw) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,46)
endif
endif
endif
if Aew==fu then
if Ew[0]==true then
set oqw=Pew
set Oqw="attack"
set Qqw=Qw[46]
set Wqw=Ww[46]
set lqw=Qqw
set bqw=Wqw
call IssuePointOrder(oqw,Oqw,lqw,bqw)
set yqw=Pew
set pqw=UNIT_TYPE_HERO
if IsUnitType(yqw,pqw) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,46)
endif
else
set eqw=Pew
set qqw="attack"
set Eqw=Qw[39]
set Zqw=Ww[39]
set aqw=Eqw
set nqw=Zqw
call IssuePointOrder(eqw,qqw,aqw,nqw)
set dqw=Pew
set fqw=UNIT_TYPE_HERO
if IsUnitType(dqw,fqw) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,39)
endif
endif
endif
if Aew==Ru then
set Rqw=Pew
set Tqw="attack"
set Uqw=Qw[39]
set Iqw=Ww[39]
set Yqw=Uqw
set Gqw=Iqw
call IssuePointOrder(Rqw,Tqw,Yqw,Gqw)
set gqw=Pew
set hqw=UNIT_TYPE_HERO
if IsUnitType(gqw,hqw) then
call SaveInteger(qu,GetHandleId(Pew),$6D6F7665,39)
endif
endif
set Pew=null
set Aew=null
set Dew=null
set Hew=null
set Xew=null
set Cew=null
set Vew=null
set wqw=null
set uqw=null
set rqw=null
set Sqw=null
set cqw=null
set oqw=null
set yqw=null
set pqw=null
set eqw=null
set dqw=null
set fqw=null
set Rqw=null
set gqw=null
set hqw=null
endfunction
function Prb takes nothing returns nothing
local rect Irb=kc
set Xo[3]=Location(GetRectCenterX(Irb),GetRectCenterY(Irb))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set Irb=null
endfunction
function Pru takes nothing returns boolean
return true
endfunction
function PtO takes nothing returns nothing
set qW=0
call S6w("via function reference NewRandom, line 150")
endfunction
function Pvw takes nothing returns nothing
local integer evw=GetSpellAbilityId()
local unit qvw
local integer avw
local real nvw
local real dvw
local integer fvw
local unit Rvw
local unit Tvw
local unit Yvw
local unit Gvw
local unit gvw
local unit hvw
local unit Fvw
local real kvw
local unit jvw
local unit xvw
local real vvw
local string mvw
local real Qvw
local string Wvw
local real Evw
local unit Zvw
local unit Uvw
local real Ivw
if evw==$41323536 then
set qvw=GetSpellAbilityUnit()
set avw=GetRandomInt(1,100)
set Gvw=qvw
set nvw=GetUnitX(Gvw)
set gvw=qvw
set dvw=GetUnitY(gvw)
set fvw=0
loop
exitwhen fvw>3
set hvw=qvw
set Rvw=CreateUnit(GetOwningPlayer(hvw),$78303273,nvw,dvw,0.)
set Fvw=Rvw
set kvw=45.
call UnitApplyTimedLife(Fvw,$42544C46,kvw)
set jvw=qvw
set Tvw=CreateUnit(GetOwningPlayer(jvw),$6E30334C,nvw,dvw,0.)
set xvw=Tvw
set vvw=60.
call UnitApplyTimedLife(xvw,$42544C46,vvw)
set fvw=fvw+1
endloop
if avw>89 and avw<99 then
set mvw="|cffff0000Fuck it!|r"
set Qvw=15.
set Wvw=mvw
set Evw=Qvw
call DisplayTimedTextToPlayer(IY,0.,0.,Evw,Wvw)
call PingMinimapForForceEx(bj_FORCE_ALL_PLAYERS,nvw,dvw,5.,1,128.,0.,128.)
set Zvw=qvw
set Yvw=CreateUnit(GetOwningPlayer(Zvw),$78303332,nvw,dvw,0.)
set Uvw=Yvw
set Ivw=600.
call UnitApplyTimedLife(Uvw,$42544C46,Ivw)
endif
endif
set qvw=null
set Rvw=null
set Tvw=null
set Yvw=null
set Gvw=null
set gvw=null
set hvw=null
set Fvw=null
set jvw=null
set xvw=null
set Zvw=null
set Uvw=null
endfunction
function PxO takes nothing returns boolean
return true
endfunction
function Q0e takes string T0e returns nothing
local unit Y0e
local integer G0e
local integer g0e
local unit h0e
local string F0e
local integer k0e
local real j0e
local integer x0e
local string v0e
local boolean m0e
set aW[qW]=T0e
set qW=qW+1
set Y0e=GetSpellAbilityUnit()
set G0e=GetSpellAbilityId()
if G0e==$4130594C then
set h0e=Y0e
set m0e=GetUnitTypeId(h0e)==$45303037
else
set m0e=false
endif
if m0e then
set F0e="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_ZulJin in ZulJin, line 605"
set aW[qW]=F0e
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set k0e=fF
set RF[k0e]=847
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_ZulJin.","when calling error in ZulJin, line 605")
set k0e=0
endif
else
set dF=dF-1
set k0e=nF[dF]
set RF[k0e]=847
endif
set qW=qW-1
set g0e=k0e
set pW[g0e]=Y0e
set j0e=2.
set x0e=g0e
set v0e="when calling doAfter in ZulJin, line 605"
set aW[qW]=v0e
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),j0e,x0e,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Y0e=null
set h0e=null
endfunction
function Pxt takes nothing returns nothing
set qW=0
call Q0e("via function reference ZulJin, line 601")
endfunction
function Pyc takes nothing returns boolean
local playerunitevent Uyc=EVENT_PLAYER_UNIT_SPELL_CAST
local code Iyc=FN
call emO(Uyc,null,Iyc,null)
set Uyc=null
return true
endfunction
function inc takes unit Lac returns nothing
local unit Bac=Lac
local player Xac=GetOwningPlayer(Bac)
local unit Nac=Lac
local integer Cac=GetUnitTypeId(Nac)
local integer Vac
local sound Mac
local unit wnc
local real unc
local real rnc
local real snc
local player tnc
if Cac==$78303239 then
set Mac=rf
if Mac!=null then
call StartSound(Mac)
endif
set wnc=GetTriggerUnit()
set unc=70.
set rnc=70.
set snc=70.
call SetUnitScale(wnc,unc*.01,rnc*.01,snc*.01)
set tnc=Xac
set Vac=GetPlayerId(tnc)
set t[Vac]=$456D3173
endif
set Xac=null
set Bac=null
set Nac=null
set Mac=null
set wnc=null
set tnc=null
endfunction
function Q1o takes nothing returns nothing
call inc(GetTriggerUnit())
endfunction
function Q5S takes nothing returns boolean
local trigger F5S
local trigger k5S
local rect j5S
local region x5S
local trigger v5S
local boolexpr m5S
set Rl=CreateTrigger()
set F5S=Rl
call DisableTrigger(F5S)
set k5S=Rl
set j5S=bj_mapInitialPlayableArea
set x5S=CreateRegion()
call RegionAddRect(x5S,j5S)
call TriggerRegisterEnterRegion(k5S,x5S,null)
set v5S=Rl
set m5S=Condition(i3)
call TriggerAddCondition(v5S,m5S)
set F5S=null
set k5S=null
set j5S=null
set x5S=null
set v5S=null
set m5S=null
return true
endfunction
function Q6S takes nothing returns boolean
local trigger F6S
local trigger k6S
local playerunitevent j6S
local integer x6S
local playerunitevent v6S
local code m6S
set qd=CreateTrigger()
set F6S=qd
call DisableTrigger(F6S)
set k6S=qd
set j6S=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set x6S=0
loop
call TriggerRegisterPlayerUnitEvent(k6S,Player(x6S),j6S,null)
set x6S=x6S+1
exitwhen x6S==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(qd,k7)
set v6S=EVENT_PLAYER_UNIT_SPELL_CAST
set m6S=j7
call emO(v6S,null,m6S,null)
set F6S=null
set k6S=null
set j6S=null
set v6S=null
return true
endfunction
function QBe takes nothing returns boolean
return true
endfunction
function QBt takes nothing returns boolean
local playerunitevent vBt=EVENT_PLAYER_UNIT_SPELL_CAST
local code mBt=G4
call emO(vBt,null,mBt,null)
set vBt=null
return true
endfunction
function QCe takes nothing returns nothing
local trigger aCe
local texttag nCe
local unit dCe
local real fCe
local unit RCe
local unitstate TCe
local real YCe
local unit GCe
local unitstate gCe
local unit hCe
local unit FCe
local unit kCe
local trigger jCe
local unit xCe
local unitstate vCe
local real mCe
if mR!=null then
set aCe=kR
call DisableTrigger(aCe)
set nCe=hR
call DestroyTextTag(nCe)
set dCe=mR
set fCe=I2R(1+YR)
set RCe=dCe
set TCe=UNIT_STATE_MANA
set YCe=fCe
set xCe=RCe
set vCe=TCe
set GCe=RCe
set gCe=TCe
call SetUnitState(xCe,vCe,GetUnitState(GCe,gCe)+YCe)
set hCe=mR
call DisplayTextToPlayer(GetOwningPlayer(hCe),0.,0.,"You gets: "+I2S(1+YR)+" mana")
set GR=300-30*TR
set FCe=mR
set mCe=GetUnitX(FCe)
set kCe=mR
set hR=jVl(mCe,GetUnitY(kCe),0.,I2S(GR),13.,255,230,0,255)
call TimerStart(FR,I2R(300-30*TR),false,H9)
set jCe=kR
call EnableTrigger(jCe)
endif
set aCe=null
set nCe=null
set dCe=null
set RCe=null
set TCe=null
set GCe=null
set gCe=null
set hCe=null
set FCe=null
set kCe=null
set jCe=null
set xCe=null
set vCe=null
endfunction
function QFc takes nothing returns boolean
set og=CreateSound("Units\\Creeps\\HeroTinker\\TinkerMorph1.wav",false,false,false,127,127,"DefaultEAXON")
return true
endfunction
function QFt takes nothing returns boolean
local trigger gFt
local trigger hFt
local playerunitevent FFt
local trigger kFt
local playerunitevent jFt
local integer xFt
local trigger vFt
local code mFt
set PG=CreateTrigger()
set gFt=PG
call DisableTrigger(gFt)
set hFt=PG
set FFt=EVENT_PLAYER_UNIT_DEATH
set kFt=hFt
set jFt=FFt
set xFt=0
loop
call TriggerRegisterPlayerUnitEvent(kFt,Player(xFt),jFt,null)
set xFt=xFt+1
exitwhen xFt==bj_MAX_PLAYER_SLOTS
endloop
set vFt=PG
set mFt=cuw
call TriggerAddAction(vFt,mFt)
set gFt=null
set hFt=null
set FFt=null
set kFt=null
set jFt=null
set vFt=null
return true
endfunction
function QIy takes nothing returns boolean
local unit jIy=GetDyingUnit()
local unit xIy=jIy
local unit vIy
local boolean mIy
if GetUnitTypeId(xIy)==$68666F6F then
set mIy=true
else
set vIy=jIy
set mIy=GetUnitTypeId(vIy)==$686B6E69
endif
set jIy=null
set xIy=null
set vIy=null
return mIy
endfunction
function QNO takes nothing returns boolean
return true
endfunction
function QNS takes nothing returns nothing
local integer kNS=GetResearched()
local trigger jNS
local trigger xNS
local trigger vNS
local trigger mNS
if kNS==$52303847 then
set jNS=Vb
call EnableTrigger(jNS)
endif
if kNS==$52303844 then
set xNS=Md
call EnableTrigger(xNS)
endif
if kNS==$52303845 then
set vNS=Sf
call EnableTrigger(vNS)
endif
if kNS==$52303846 then
set mNS=XY
call EnableTrigger(mNS)
endif
set jNS=null
set xNS=null
set vNS=null
set mNS=null
endfunction
function Dqp takes integer Iqp,integer Pqp returns boolean
local integer Aqp=Kv[Vv[Iqp]]
loop
exitwhen not (Aqp!=Vv[Iqp])
if Hv[Aqp]==Pqp then
return true
endif
set Aqp=Kv[Aqp]
endloop
return false
endfunction
function Hcw takes unit rcw,string scw returns nothing
local integer tcw
local player icw
local integer Scw
local integer ccw
local integer ocw
local integer Ocw
local integer lcw
local integer bcw
local unit ycw
local unit pcw
local unit ecw
local unit qcw
local player acw
local player ncw
local unit dcw
local string fcw
local boolean Rcw
local integer Tcw
local integer Ycw
local string Gcw
local boolean gcw
local unit hcw
local unit Fcw
local unit kcw
local unit jcw
local unit xcw
local unit vcw
local unit mcw
local unit Qcw
local unit Wcw
local unit Ecw
local player Zcw
local real Ucw
local player Icw
local real Pcw
local player Acw
local real Dcw
set aW[qW]=scw
set qW=qW+1
set qcw=rcw
set tcw=GetUnitTypeId(qcw)
set icw=GetOwningPlayer(GetDyingUnit())
call GetHandleId(rcw)
set Scw=0
loop
exitwhen Scw>12
set acw=UY[Scw]
set ncw=icw
if IsPlayerAlly(acw,ncw) and UY[Scw]!=icw then
set ccw=GetPlayerTechCount(UY[Scw],$524D3138,true)
set ocw=0
loop
exitwhen ocw>12
if UY[ocw]==icw and fy[ocw]==1 then
set Ocw=GetRandomInt(1,100)
if ccw==4 then
set Ry=1
endif
set lcw=1
set bcw=5*(ccw+Ry)
loop
exitwhen lcw>bcw
if lcw==Ocw then
set dcw=rcw
set fcw="when calling isStartVoid in DesecratedSouls, line 44"
set aW[qW]=fcw
set qW=qW+1
set Tcw=ih
set hcw=dcw
set Ycw=GetUnitTypeId(hcw)
set Gcw="when calling has in TrueCHAOS, line 67"
set aW[qW]=Gcw
set qW=qW+1
if ok[Tcw]==0 then
if Tcw==0 then
call L8c("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 118")
else
call L8c("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 118")
endif
endif
set gcw=Dqp(Tcw,Ycw)
set qW=qW-1
set Rcw=gcw
set qW=qW-1
if Rcw and ccw>=1 then
set Fcw=rcw
set Zcw=GetOwningPlayer(Fcw)
set kcw=rcw
set Ucw=GetUnitX(kcw)
set jcw=rcw
set ycw=CreateUnit(Zcw,$6E303351,Ucw,GetUnitY(jcw),270.)
call dYr(ycw)
endif
if tcw==$6E636877 and ccw>=2 then
set xcw=rcw
set Icw=GetOwningPlayer(xcw)
set vcw=rcw
set Pcw=GetUnitX(vcw)
set mcw=rcw
set pcw=CreateUnit(Icw,$6E303352,Pcw,GetUnitY(mcw),270.)
call dYr(pcw)
endif
if tcw==$6F303347 and ccw>=4 then
set Qcw=rcw
set Acw=GetOwningPlayer(Qcw)
set Wcw=rcw
set Dcw=GetUnitX(Wcw)
set Ecw=rcw
set ecw=CreateUnit(Acw,$6E303353,Dcw,GetUnitY(Ecw),270.)
call dYr(ecw)
endif
endif
set lcw=lcw+1
endloop
endif
set ocw=ocw+1
endloop
endif
set Scw=Scw+1
endloop
set qW=qW-1
set icw=null
set ycw=null
set pcw=null
set ecw=null
set qcw=null
set acw=null
set ncw=null
set dcw=null
set hcw=null
set Fcw=null
set kcw=null
set jcw=null
set xcw=null
set vcw=null
set mcw=null
set Qcw=null
set Wcw=null
set Ecw=null
set Zcw=null
set Icw=null
set Acw=null
endfunction
function QNu takes nothing returns nothing
local string mNu
set qW=0
set mNu="via function reference DesecratedSouls, line 59"
set aW[qW]=mNu
set qW=qW+1
call Hcw(GetDyingUnit(),"when calling voidspawn in DesecratedSouls, line 60")
set qW=qW-1
endfunction
function QOc takes nothing returns boolean
call CreateTrigger()
return true
endfunction
function QRw takes nothing returns boolean
local trigger FRw
local rect kRw
local region jRw
local trigger xRw
local boolexpr vRw
local trigger mRw
set JO=CreateTrigger()
set FRw=JO
set kRw=bj_mapInitialPlayableArea
set jRw=CreateRegion()
call RegionAddRect(jRw,kRw)
call TriggerRegisterEnterRegion(FRw,jRw,null)
set xRw=JO
set vRw=Condition(jM)
call TriggerAddCondition(xRw,vRw)
set mRw=JO
call DisableTrigger(mRw)
set FRw=null
set kRw=null
set jRw=null
set xRw=null
set vRw=null
set mRw=null
return true
endfunction
function QSw takes nothing returns boolean
local trigger RSw
local rect TSw
local region YSw
local trigger GSw
local boolexpr gSw
local trigger hSw
local playerunitevent FSw
local code kSw
local playerunitevent jSw
local code xSw
local playerunitevent vSw
local code mSw
set bl=CreateTrigger()
set RSw=bl
set TSw=bj_mapInitialPlayableArea
set YSw=CreateRegion()
call RegionAddRect(YSw,TSw)
call TriggerRegisterEnterRegion(RSw,YSw,null)
set GSw=bl
set gSw=Condition(BM)
call TriggerAddCondition(GSw,gSw)
set hSw=bl
call DisableTrigger(hSw)
set FSw=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kSw=NM
call emO(FSw,null,kSw,null)
set jSw=EVENT_PLAYER_UNIT_DEATH
set xSw=MM
call emO(jSw,null,xSw,null)
set vSw=EVENT_PLAYER_UNIT_SPELL_CAST
set mSw=w3
call emO(vSw,null,mSw,null)
set RSw=null
set TSw=null
set YSw=null
set GSw=null
set gSw=null
set hSw=null
set FSw=null
set jSw=null
set vSw=null
return true
endfunction
function QTw takes nothing returns boolean
local trigger gTw
local trigger hTw
local playerunitevent FTw
local trigger kTw
local playerunitevent jTw
local integer xTw
local trigger vTw
local boolexpr mTw
set qh=CreateTrigger()
set gTw=qh
call DisableTrigger(gTw)
set hTw=qh
set FTw=EVENT_PLAYER_UNIT_DEATH
set kTw=hTw
set jTw=FTw
set xTw=0
loop
call TriggerRegisterPlayerUnitEvent(kTw,Player(xTw),jTw,null)
set xTw=xTw+1
exitwhen xTw==bj_MAX_PLAYER_SLOTS
endloop
set vTw=qh
set mTw=Condition(ysw)
call TriggerAddCondition(vTw,mTw)
set gTw=null
set hTw=null
set FTw=null
set kTw=null
set jTw=null
set vTw=null
set mTw=null
return true
endfunction
function QTy takes nothing returns nothing
local integer ypy=0
local integer ppy
local integer epy
local integer qpy
local integer apy
local integer npy
local integer dpy
local integer fpy
local integer Rpy
local integer Tpy
local integer Ypy
local integer Gpy
local integer gpy
local integer hpy
local integer Fpy
local integer kpy
local integer jpy
local integer xpy
local integer vpy
local integer mpy
local integer Qpy
local integer Wpy
local integer Epy
local integer Zpy
local integer Upy
local integer Ipy
local integer Ppy
local integer Apy
local integer Dpy
local integer Hpy
local integer Jpy
local integer Kpy
local integer Lpy
local integer Xpy
local multiboard Cpy
local integer Vpy
local integer Bpy
local multiboarditem Npy
local string Mpy
local string wey
local string uey
local integer rey
local multiboarditem sey
local multiboard tey
local integer iey
local integer Sey
local multiboarditem cey
local string oey
local string Oey
local string ley
local integer bey
local multiboarditem yey
local multiboard pey
local integer eey
local integer qey
local multiboarditem aey
local string ney
local string dey
local string fey
local integer Rey
local multiboarditem Tey
local multiboard Yey
local integer Gey
local integer gey
local multiboarditem hey
local string Fey
local string key
local string jey
local integer xey
local multiboarditem vey
local multiboard mey
local integer Qey
local integer Wey
local multiboarditem Eey
local string Zey
local string Uey
local string Iey
local integer Pey
local multiboarditem Aey
local multiboard Dey
local integer Hey
local integer Jey
local multiboarditem Key
local string Ley
local string Xey
local string Cey
local integer Vey
local multiboarditem Bey
local multiboard Ney
local integer Mey
local integer wqy
local multiboarditem uqy
local string rqy
local string sqy
local string tqy
local integer iqy
local multiboarditem Sqy
local multiboard cqy
local integer oqy
local integer Oqy
local multiboarditem lqy
local string bqy
local string yqy
local string pqy
local integer eqy
local multiboarditem qqy
local multiboard aqy
local integer nqy
local integer dqy
local multiboarditem fqy
local string Rqy
local string Tqy
local string Yqy
local integer Gqy
local multiboarditem gqy
local multiboard hqy
local integer Fqy
local integer kqy
local multiboarditem jqy
local string xqy
local string vqy
local string mqy
local integer Qqy
local multiboarditem Wqy
local integer Eqy
local integer Zqy
local integer Uqy
local integer Iqy
local multiboard Pqy
local integer Aqy
local integer Dqy
local multiboarditem Hqy
local string Jqy
local string Kqy
local string Lqy
local multiboarditem Xqy
local integer Cqy
local integer Vqy
local integer Bqy
local integer Nqy
local multiboard Mqy
local integer way
local integer uay
local multiboarditem ray
local string say
local string tay
local string iay
local multiboarditem Say
local integer cay
local integer oay
local integer Oay
local integer lay
local integer bay
local integer yay
local integer pay
local integer eay
local multiboard qay
local integer aay
local integer nay
local multiboarditem day
local string fay
local string Ray
local string Tay
local multiboarditem Yay
local multiboard Gay
local integer gay
local integer hay
local multiboarditem Fay
local string kay
local string jay
local string xay
local integer vay
local multiboarditem may
local multiboard Qay
local integer Way
local integer Eay
local multiboarditem Zay
local string Uay
local string Iay
local string Pay
local integer Aay
local multiboarditem Day
local multiboard Hay
local integer Jay
local integer Kay
local multiboarditem Lay
local string Xay
local string Cay
local string Vay
local integer Bay
local multiboarditem Nay
local multiboard May
local integer wny
local integer uny
local multiboarditem rny
local string sny
local string tny
local string iny
local integer Sny
local multiboarditem cny
local multiboard ony
local integer Ony
local integer lny
local multiboarditem bny
local string yny
local string pny
local string eny
local integer qny
local multiboarditem any
local multiboard nny
local integer dny
local integer fny
local multiboarditem Rny
local string Tny
local string Yny
local string Gny
local integer gny
local multiboarditem hny
local multiboard Fny
local integer kny
local integer jny
local multiboarditem xny
local string vny
local string mny
local string Qny
local integer Wny
local multiboarditem Eny
local multiboard Zny
local integer Uny
local integer Iny
local multiboarditem Pny
local string Any
local string Dny
local string Hny
local integer Jny
local multiboarditem Kny
local multiboard Lny
local integer Xny
local integer Cny
local multiboarditem Vny
local string Bny
local string Nny
local string Mny
local integer wdy
local multiboarditem udy
local multiboard rdy
local integer sdy
local integer tdy
local multiboarditem idy
local string Sdy
local string cdy
local string ody
local integer Ody
local multiboarditem ldy
local multiboard bdy
local integer ydy
local integer pdy
local multiboarditem edy
local string qdy
local string ady
local string ndy
local integer ddy
local multiboarditem fdy
local multiboard Rdy
local integer Tdy
local integer Ydy
local multiboarditem Gdy
local string gdy
local string hdy
local string Fdy
local integer kdy
local multiboarditem jdy
local multiboard xdy
local integer vdy
local integer mdy
local multiboarditem Qdy
local string Wdy
local string Edy
local string Zdy
local integer Udy
local multiboarditem Idy
local multiboard Pdy
local integer Ady
local integer Ddy
local multiboarditem Hdy
local string Jdy
local string Kdy
local string Ldy
local integer Xdy
local multiboarditem Cdy
local multiboard Vdy
local integer Bdy
local integer Ndy
local multiboarditem Mdy
local string wfy
local string ufy
local string rfy
local integer sfy
local multiboarditem tfy
local multiboard ify
local integer Sfy
local integer cfy
local multiboarditem ofy
local string Ofy
local string lfy
local string bfy
local integer yfy
local multiboarditem pfy
local multiboard efy
local integer qfy
local integer afy
local multiboarditem nfy
local string dfy
local string ffy
local string Rfy
local integer Tfy
local multiboarditem Yfy
local multiboard Gfy
local integer gfy
local integer hfy
local multiboarditem Ffy
local string kfy
local string jfy
local string xfy
local integer vfy
local multiboarditem mfy
local multiboard Qfy
local integer Wfy
local integer Efy
local multiboarditem Zfy
local string Ufy
local string Ify
local string Pfy
local integer Afy
local multiboarditem Dfy
local multiboard Hfy
local integer Jfy
local integer Kfy
local multiboarditem Lfy
local string Xfy
local string Cfy
local string Vfy
local integer Bfy
local multiboarditem Nfy
local integer Mfy
local integer wRy
local integer uRy
local integer rRy
local multiboard sRy
local integer tRy
local integer iRy
local multiboarditem SRy
local string cRy
local string oRy
local string ORy
local multiboarditem lRy
local multiboard bRy
local integer yRy
local integer pRy
local multiboarditem eRy
local string qRy
local string aRy
local string nRy
local integer dRy
local multiboarditem fRy
local multiboard RRy
local integer TRy
local integer YRy
local multiboarditem GRy
local string gRy
local string hRy
local string FRy
local integer kRy
local multiboarditem jRy
local multiboard xRy
local integer vRy
local integer mRy
local multiboarditem QRy
local string WRy
local string ERy
local string ZRy
local integer URy
local multiboarditem IRy
local multiboard PRy
local integer ARy
local integer DRy
local multiboarditem HRy
local string JRy
local string KRy
local string LRy
local integer XRy
local multiboarditem CRy
local multiboard VRy
local integer BRy
local integer NRy
local multiboarditem MRy
local string wTy
local string uTy
local string rTy
local integer sTy
local multiboarditem tTy
local multiboard iTy
local integer STy
local integer cTy
local multiboarditem oTy
local string OTy
local string lTy
local string bTy
local integer yTy
local multiboarditem pTy
local multiboard eTy
local integer qTy
local integer aTy
local multiboarditem nTy
local string dTy
local string fTy
local string RTy
local integer TTy
local multiboarditem YTy
local multiboard GTy
local integer gTy
local integer hTy
local multiboarditem FTy
local string kTy
local string jTy
local string xTy
local integer vTy
local multiboarditem mTy
loop
exitwhen ypy>3
if gr<hr[ypy] then
set Gr=ypy
set gr=hr[ypy]
endif
set Cpy=Yr
set Vpy=2
set Bpy=ypy+1
set ne=MultiboardGetItem(Cpy,Vpy,Bpy)
set Npy=ne
set rey=hr[ypy]
set Mpy=I2S(rey)
if Mpy==null then
set uey=""
else
set uey=Mpy
endif
set wey=uey
call MultiboardSetItemValue(Npy,wey)
set sey=ne
call MultiboardReleaseItem(sey)
set ypy=ypy+1
endloop
set tey=Yr
set iey=2
set Sey=Gr+1
set ne=MultiboardGetItem(tey,iey,Sey)
set cey=ne
set bey=hr[Gr]
set oey="|cffffcc00"+I2S(bey)+"|r"
if oey==null then
set ley=""
else
set ley=oey
endif
set Oey=ley
call MultiboardSetItemValue(cey,Oey)
set yey=ne
call MultiboardReleaseItem(yey)
set Gr=0
set gr=0
set ppy=0
loop
exitwhen ppy>3
if gr<Fr[ppy] then
set Gr=ppy
set gr=Fr[ppy]
endif
set pey=Yr
set eey=3
set qey=ppy+1
set ne=MultiboardGetItem(pey,eey,qey)
set aey=ne
set Rey=Fr[ppy]
set ney=I2S(Rey)
if ney==null then
set fey=""
else
set fey=ney
endif
set dey=fey
call MultiboardSetItemValue(aey,dey)
set Tey=ne
call MultiboardReleaseItem(Tey)
set ppy=ppy+1
endloop
set Yey=Yr
set Gey=3
set gey=Gr+1
set ne=MultiboardGetItem(Yey,Gey,gey)
set hey=ne
set xey=Fr[Gr]
set Fey="|cffffcc00"+I2S(xey)+"|r"
if Fey==null then
set jey=""
else
set jey=Fey
endif
set key=jey
call MultiboardSetItemValue(hey,key)
set vey=ne
call MultiboardReleaseItem(vey)
set Gr=0
set gr=0
set epy=0
loop
exitwhen epy>3
if gr<kr[epy] then
set Gr=epy
set gr=kr[epy]
endif
set mey=Yr
set Qey=4
set Wey=epy+1
set ne=MultiboardGetItem(mey,Qey,Wey)
set Eey=ne
set Pey=kr[epy]
set Zey=I2S(Pey)
if Zey==null then
set Iey=""
else
set Iey=Zey
endif
set Uey=Iey
call MultiboardSetItemValue(Eey,Uey)
set Aey=ne
call MultiboardReleaseItem(Aey)
set epy=epy+1
endloop
set Dey=Yr
set Hey=4
set Jey=Gr+1
set ne=MultiboardGetItem(Dey,Hey,Jey)
set Key=ne
set Vey=kr[Gr]
set Ley="|cffffcc00"+I2S(Vey)+"|r"
if Ley==null then
set Cey=""
else
set Cey=Ley
endif
set Xey=Cey
call MultiboardSetItemValue(Key,Xey)
set Bey=ne
call MultiboardReleaseItem(Bey)
set Gr=0
set gr=0
set qpy=0
loop
exitwhen qpy>3
if gr<jr[qpy] then
set Gr=qpy
set gr=jr[qpy]
endif
set Ney=Yr
set Mey=6
set wqy=qpy+1
set ne=MultiboardGetItem(Ney,Mey,wqy)
set uqy=ne
set iqy=jr[qpy]
set rqy=I2S(iqy)
if rqy==null then
set tqy=""
else
set tqy=rqy
endif
set sqy=tqy
call MultiboardSetItemValue(uqy,sqy)
set Sqy=ne
call MultiboardReleaseItem(Sqy)
set qpy=qpy+1
endloop
set cqy=Yr
set oqy=6
set Oqy=Gr+1
set ne=MultiboardGetItem(cqy,oqy,Oqy)
set lqy=ne
set eqy=jr[Gr]
set bqy="|cffffcc00"+I2S(eqy)+"|r"
if bqy==null then
set pqy=""
else
set pqy=bqy
endif
set yqy=pqy
call MultiboardSetItemValue(lqy,yqy)
set qqy=ne
call MultiboardReleaseItem(qqy)
set Gr=0
set gr=0
set apy=0
loop
exitwhen apy>3
if gr<xr[apy] then
set Gr=apy
set gr=xr[apy]
endif
set aqy=Yr
set nqy=7
set dqy=apy+1
set ne=MultiboardGetItem(aqy,nqy,dqy)
set fqy=ne
set Gqy=xr[apy]
set Rqy=I2S(Gqy)
if Rqy==null then
set Yqy=""
else
set Yqy=Rqy
endif
set Tqy=Yqy
call MultiboardSetItemValue(fqy,Tqy)
set gqy=ne
call MultiboardReleaseItem(gqy)
set apy=apy+1
endloop
set hqy=Yr
set Fqy=7
set kqy=Gr+1
set ne=MultiboardGetItem(hqy,Fqy,kqy)
set jqy=ne
set Qqy=xr[Gr]
set xqy="|cffffcc00"+I2S(Qqy)+"|r"
if xqy==null then
set mqy=""
else
set mqy=xqy
endif
set vqy=mqy
call MultiboardSetItemValue(jqy,vqy)
set Wqy=ne
call MultiboardReleaseItem(Wqy)
set Gr=0
set gr=0
set npy=0
loop
exitwhen npy>3
if gr<mr[npy] then
set Gr=npy
set gr=mr[npy]
endif
set Eqy=mr[npy]
set Dw[npy]=I2S(Eqy)
set npy=npy+1
endloop
set Zqy=mr[Gr]
set Dw[Gr]="|cffffcc00"+I2S(Zqy)+"|r"
set Gr=0
set gr=0
set dpy=0
loop
exitwhen dpy>3
if gr<Wr[dpy] then
set Gr=dpy
set gr=Wr[dpy]
endif
set Uqy=Wr[dpy]
set Dw[dpy+4]=I2S(Uqy)
set dpy=dpy+1
endloop
set Iqy=Wr[Gr]
set Dw[Gr+4]="|cffffcc00"+I2S(Iqy)+"|r"
set Gr=0
set gr=0
set fpy=0
loop
exitwhen fpy>3
set Pqy=Yr
set Aqy=8
set Dqy=fpy+1
set ne=MultiboardGetItem(Pqy,Aqy,Dqy)
set Hqy=ne
set Jqy=Dw[fpy]+"/"+Dw[fpy+4]
if Jqy==null then
set Lqy=""
else
set Lqy=Jqy
endif
set Kqy=Lqy
call MultiboardSetItemValue(Hqy,Kqy)
set Xqy=ne
call MultiboardReleaseItem(Xqy)
set fpy=fpy+1
endloop
set Rpy=0
loop
exitwhen Rpy>3
if gr<vr[Rpy] then
set Gr=Rpy
set gr=vr[Rpy]
endif
set Cqy=vr[Rpy]
set Dw[Rpy]=I2S(Cqy)
set Rpy=Rpy+1
endloop
set Vqy=vr[Gr]
set Dw[Gr]="|cffffcc00"+I2S(Vqy)+"|r"
set Gr=0
set gr=0
set Tpy=0
loop
exitwhen Tpy>3
if gr<Qr[Tpy] then
set Gr=Tpy
set gr=Qr[Tpy]
endif
set Bqy=Qr[Tpy]
set Dw[Tpy+4]=I2S(Bqy)
set Tpy=Tpy+1
endloop
set Nqy=Qr[Gr]
set Dw[Gr+4]="|cffffcc00"+I2S(Nqy)+"|r"
set Gr=0
set gr=0
set Ypy=0
loop
exitwhen Ypy>3
set Mqy=Yr
set way=9
set uay=Ypy+1
set ne=MultiboardGetItem(Mqy,way,uay)
set ray=ne
set say=Dw[Ypy]+"/"+Dw[Ypy+4]
if say==null then
set iay=""
else
set iay=say
endif
set tay=iay
call MultiboardSetItemValue(ray,tay)
set Say=ne
call MultiboardReleaseItem(Say)
set Ypy=Ypy+1
endloop
set Gpy=0
loop
exitwhen Gpy>3
if gr<Er[Gpy] then
set Gr=Gpy
set gr=Er[Gpy]
endif
set cay=Er[Gpy]
set Dw[Gpy]=I2S(cay)
set Gpy=Gpy+1
endloop
set oay=Er[Gr]
set Dw[Gr]="|cffffcc00"+I2S(oay)+"|r"
set Gr=0
set gr=0
set gpy=0
loop
exitwhen gpy>3
if gr<Zr[gpy] then
set Gr=gpy
set gr=Zr[gpy]
endif
set Oay=Zr[gpy]
set Dw[gpy+4]=I2S(Oay)
set gpy=gpy+1
endloop
set lay=Zr[Gr]
set Dw[Gr+4]="|cffffcc00"+I2S(lay)+"|r"
set Gr=0
set gr=0
set hpy=0
loop
exitwhen hpy>3
if gr<Ur[hpy] then
set Gr=hpy
set gr=Ur[hpy]
endif
set bay=Ur[hpy]
set Dw[hpy+8]=I2S(bay)
set hpy=hpy+1
endloop
set yay=Ur[Gr]
set Dw[Gr+8]="|cffffcc00"+I2S(yay)+"|r"
set Gr=0
set gr=0
set Fpy=0
loop
exitwhen Fpy>3
if gr<Ir[Fpy] then
set Gr=Fpy
set gr=Ir[Fpy]
endif
set pay=Ir[Fpy]
set Dw[Fpy+12]=I2S(pay)
set Fpy=Fpy+1
endloop
set eay=Ir[Gr]
set Dw[Gr+12]="|cffffcc00"+I2S(eay)+"|r"
set Gr=0
set gr=0
set kpy=0
loop
exitwhen kpy>3
set qay=Yr
set aay=10
set nay=kpy+1
set ne=MultiboardGetItem(qay,aay,nay)
set day=ne
set fay=Dw[kpy]+"/"+Dw[kpy+4]+"/"+Dw[kpy+8]+"/"+Dw[kpy+12]
if fay==null then
set Tay=""
else
set Tay=fay
endif
set Ray=Tay
call MultiboardSetItemValue(day,Ray)
set Yay=ne
call MultiboardReleaseItem(Yay)
set kpy=kpy+1
endloop
set jpy=0
loop
exitwhen jpy>3
if gr<Pr[jpy] then
set Gr=jpy
set gr=Pr[jpy]
endif
set Gay=Yr
set gay=11
set hay=jpy+1
set ne=MultiboardGetItem(Gay,gay,hay)
set Fay=ne
set vay=Pr[jpy]
set kay=I2S(vay)
if kay==null then
set xay=""
else
set xay=kay
endif
set jay=xay
call MultiboardSetItemValue(Fay,jay)
set may=ne
call MultiboardReleaseItem(may)
set jpy=jpy+1
endloop
set Qay=Yr
set Way=11
set Eay=Gr+1
set ne=MultiboardGetItem(Qay,Way,Eay)
set Zay=ne
set Aay=Pr[Gr]
set Uay="|cffffcc00"+I2S(Aay)+"|r"
if Uay==null then
set Pay=""
else
set Pay=Uay
endif
set Iay=Pay
call MultiboardSetItemValue(Zay,Iay)
set Day=ne
call MultiboardReleaseItem(Day)
set Gr=0
set gr=0
set xpy=0
loop
exitwhen xpy>3
if gr<Ar[xpy] then
set Gr=xpy
set gr=Ar[xpy]
endif
set Hay=Yr
set Jay=12
set Kay=xpy+1
set ne=MultiboardGetItem(Hay,Jay,Kay)
set Lay=ne
set Bay=Ar[xpy]
set Xay=I2S(Bay)
if Xay==null then
set Vay=""
else
set Vay=Xay
endif
set Cay=Vay
call MultiboardSetItemValue(Lay,Cay)
set Nay=ne
call MultiboardReleaseItem(Nay)
set xpy=xpy+1
endloop
set May=Yr
set wny=12
set uny=Gr+1
set ne=MultiboardGetItem(May,wny,uny)
set rny=ne
set Sny=Ar[Gr]
set sny="|cffffcc00"+I2S(Sny)+"|r"
if sny==null then
set iny=""
else
set iny=sny
endif
set tny=iny
call MultiboardSetItemValue(rny,tny)
set cny=ne
call MultiboardReleaseItem(cny)
set Gr=0
set gr=0
set vpy=0
loop
exitwhen vpy>3
if gr<Dr[vpy] then
set Gr=vpy
set gr=Dr[vpy]
endif
set ony=Yr
set Ony=14
set lny=vpy+1
set ne=MultiboardGetItem(ony,Ony,lny)
set bny=ne
set qny=Dr[vpy]
set yny=I2S(qny)
if yny==null then
set eny=""
else
set eny=yny
endif
set pny=eny
call MultiboardSetItemValue(bny,pny)
set any=ne
call MultiboardReleaseItem(any)
set vpy=vpy+1
endloop
set nny=Yr
set dny=14
set fny=Gr+1
set ne=MultiboardGetItem(nny,dny,fny)
set Rny=ne
set gny=Dr[Gr]
set Tny="|cffffcc00"+I2S(gny)+"|r"
if Tny==null then
set Gny=""
else
set Gny=Tny
endif
set Yny=Gny
call MultiboardSetItemValue(Rny,Yny)
set hny=ne
call MultiboardReleaseItem(hny)
set Gr=0
set gr=0
set mpy=0
loop
exitwhen mpy>3
if gr<Hr[mpy] then
set Gr=mpy
set gr=Hr[mpy]
endif
set Fny=Yr
set kny=15
set jny=mpy+1
set ne=MultiboardGetItem(Fny,kny,jny)
set xny=ne
set Wny=Hr[mpy]
set vny=I2S(Wny)
if vny==null then
set Qny=""
else
set Qny=vny
endif
set mny=Qny
call MultiboardSetItemValue(xny,mny)
set Eny=ne
call MultiboardReleaseItem(Eny)
set mpy=mpy+1
endloop
set Zny=Yr
set Uny=15
set Iny=Gr+1
set ne=MultiboardGetItem(Zny,Uny,Iny)
set Pny=ne
set Jny=Hr[Gr]
set Any="|cffffcc00"+I2S(Jny)+"|r"
if Any==null then
set Hny=""
else
set Hny=Any
endif
set Dny=Hny
call MultiboardSetItemValue(Pny,Dny)
set Kny=ne
call MultiboardReleaseItem(Kny)
set Gr=0
set gr=0
set Qpy=0
loop
exitwhen Qpy>3
if gr<Jr[Qpy] then
set Gr=Qpy
set gr=Jr[Qpy]
endif
set Lny=Yr
set Xny=16
set Cny=Qpy+1
set ne=MultiboardGetItem(Lny,Xny,Cny)
set Vny=ne
set wdy=Jr[Qpy]
set Bny=I2S(wdy)
if Bny==null then
set Mny=""
else
set Mny=Bny
endif
set Nny=Mny
call MultiboardSetItemValue(Vny,Nny)
set udy=ne
call MultiboardReleaseItem(udy)
set Qpy=Qpy+1
endloop
set rdy=Yr
set sdy=16
set tdy=Gr+1
set ne=MultiboardGetItem(rdy,sdy,tdy)
set idy=ne
set Ody=Jr[Gr]
set Sdy="|cffffcc00"+I2S(Ody)+"|r"
if Sdy==null then
set ody=""
else
set ody=Sdy
endif
set cdy=ody
call MultiboardSetItemValue(idy,cdy)
set ldy=ne
call MultiboardReleaseItem(ldy)
set Gr=0
set gr=0
set Wpy=0
loop
exitwhen Wpy>3
if gr<Kr[Wpy] then
set Gr=Wpy
set gr=Kr[Wpy]
endif
set bdy=Yr
set ydy=17
set pdy=Wpy+1
set ne=MultiboardGetItem(bdy,ydy,pdy)
set edy=ne
set ddy=Kr[Wpy]
set qdy=I2S(ddy)
if qdy==null then
set ndy=""
else
set ndy=qdy
endif
set ady=ndy
call MultiboardSetItemValue(edy,ady)
set fdy=ne
call MultiboardReleaseItem(fdy)
set Wpy=Wpy+1
endloop
set Rdy=Yr
set Tdy=17
set Ydy=Gr+1
set ne=MultiboardGetItem(Rdy,Tdy,Ydy)
set Gdy=ne
set kdy=Kr[Gr]
set gdy="|cffffcc00"+I2S(kdy)+"|r"
if gdy==null then
set Fdy=""
else
set Fdy=gdy
endif
set hdy=Fdy
call MultiboardSetItemValue(Gdy,hdy)
set jdy=ne
call MultiboardReleaseItem(jdy)
set Gr=0
set gr=0
set Epy=0
loop
exitwhen Epy>3
if gr<Lr[Epy] then
set Gr=Epy
set gr=Lr[Epy]
endif
set xdy=Yr
set vdy=18
set mdy=Epy+1
set ne=MultiboardGetItem(xdy,vdy,mdy)
set Qdy=ne
set Udy=Lr[Epy]
set Wdy=I2S(Udy)
if Wdy==null then
set Zdy=""
else
set Zdy=Wdy
endif
set Edy=Zdy
call MultiboardSetItemValue(Qdy,Edy)
set Idy=ne
call MultiboardReleaseItem(Idy)
set Epy=Epy+1
endloop
set Pdy=Yr
set Ady=18
set Ddy=Gr+1
set ne=MultiboardGetItem(Pdy,Ady,Ddy)
set Hdy=ne
set Xdy=Lr[Gr]
set Jdy="|cffffcc00"+I2S(Xdy)+"|r"
if Jdy==null then
set Ldy=""
else
set Ldy=Jdy
endif
set Kdy=Ldy
call MultiboardSetItemValue(Hdy,Kdy)
set Cdy=ne
call MultiboardReleaseItem(Cdy)
set Gr=0
set gr=0
set Zpy=0
loop
exitwhen Zpy>3
if gr<Xr[Zpy] then
set Gr=Zpy
set gr=Xr[Zpy]
endif
set Vdy=Yr
set Bdy=19
set Ndy=Zpy+1
set ne=MultiboardGetItem(Vdy,Bdy,Ndy)
set Mdy=ne
set sfy=Xr[Zpy]
set wfy=I2S(sfy)
if wfy==null then
set rfy=""
else
set rfy=wfy
endif
set ufy=rfy
call MultiboardSetItemValue(Mdy,ufy)
set tfy=ne
call MultiboardReleaseItem(tfy)
set Zpy=Zpy+1
endloop
set ify=Yr
set Sfy=19
set cfy=Gr+1
set ne=MultiboardGetItem(ify,Sfy,cfy)
set ofy=ne
set yfy=Xr[Gr]
set Ofy="|cffffcc00"+I2S(yfy)+"|r"
if Ofy==null then
set bfy=""
else
set bfy=Ofy
endif
set lfy=bfy
call MultiboardSetItemValue(ofy,lfy)
set pfy=ne
call MultiboardReleaseItem(pfy)
set Gr=0
set gr=0
set Upy=0
loop
exitwhen Upy>3
if gr<Cr[Upy] then
set Gr=Upy
set gr=Cr[Upy]
endif
set efy=Yr
set qfy=20
set afy=Upy+1
set ne=MultiboardGetItem(efy,qfy,afy)
set nfy=ne
set Tfy=Cr[Upy]
set dfy=I2S(Tfy)
if dfy==null then
set Rfy=""
else
set Rfy=dfy
endif
set ffy=Rfy
call MultiboardSetItemValue(nfy,ffy)
set Yfy=ne
call MultiboardReleaseItem(Yfy)
set Upy=Upy+1
endloop
set Gfy=Yr
set gfy=20
set hfy=Gr+1
set ne=MultiboardGetItem(Gfy,gfy,hfy)
set Ffy=ne
set vfy=Cr[Gr]
set kfy="|cffffcc00"+I2S(vfy)+"|r"
if kfy==null then
set xfy=""
else
set xfy=kfy
endif
set jfy=xfy
call MultiboardSetItemValue(Ffy,jfy)
set mfy=ne
call MultiboardReleaseItem(mfy)
set Gr=0
set gr=0
set Ipy=0
loop
exitwhen Ipy>3
if gr<Vr[Ipy] then
set Gr=Ipy
set gr=Vr[Ipy]
endif
set Qfy=Yr
set Wfy=21
set Efy=Ipy+1
set ne=MultiboardGetItem(Qfy,Wfy,Efy)
set Zfy=ne
set Afy=Vr[Ipy]
set Ufy=I2S(Afy)
if Ufy==null then
set Pfy=""
else
set Pfy=Ufy
endif
set Ify=Pfy
call MultiboardSetItemValue(Zfy,Ify)
set Dfy=ne
call MultiboardReleaseItem(Dfy)
set Ipy=Ipy+1
endloop
set Hfy=Yr
set Jfy=21
set Kfy=Gr+1
set ne=MultiboardGetItem(Hfy,Jfy,Kfy)
set Lfy=ne
set Bfy=Vr[Gr]
set Xfy="|cffffcc00"+I2S(Bfy)+"|r"
if Xfy==null then
set Vfy=""
else
set Vfy=Xfy
endif
set Cfy=Vfy
call MultiboardSetItemValue(Lfy,Cfy)
set Nfy=ne
call MultiboardReleaseItem(Nfy)
set Gr=0
set gr=0
set Ppy=0
loop
exitwhen Ppy>3
if gr<Br[Ppy] then
set Gr=Ppy
set gr=Br[Ppy]
endif
set Mfy=Br[Ppy]
set Dw[Ppy]=I2S(Mfy)
set Ppy=Ppy+1
endloop
set wRy=Br[Gr]
set Dw[Gr]="|cffffcc00"+I2S(wRy)+"|r"
set Gr=0
set gr=0
set Apy=0
loop
exitwhen Apy>3
if gr<Nr[Apy] then
set Gr=Apy
set gr=Nr[Apy]
endif
set uRy=Nr[Apy]
set Dw[Apy+4]=I2S(uRy)
set Apy=Apy+1
endloop
set rRy=Nr[Gr]
set Dw[Gr+4]="|cffffcc00"+I2S(rRy)+"|r"
set Gr=0
set gr=0
set Dpy=0
loop
exitwhen Dpy>3
set sRy=Yr
set tRy=22
set iRy=Dpy+1
set ne=MultiboardGetItem(sRy,tRy,iRy)
set SRy=ne
set cRy=Dw[Dpy]+"/"+Dw[Dpy+4]
if cRy==null then
set ORy=""
else
set ORy=cRy
endif
set oRy=ORy
call MultiboardSetItemValue(SRy,oRy)
set lRy=ne
call MultiboardReleaseItem(lRy)
set Dpy=Dpy+1
endloop
set Hpy=0
loop
exitwhen Hpy>3
if gr<Mr[Hpy] then
set Gr=Hpy
set gr=Mr[Hpy]
endif
set bRy=Yr
set yRy=23
set pRy=Hpy+1
set ne=MultiboardGetItem(bRy,yRy,pRy)
set eRy=ne
set dRy=Mr[Hpy]
set qRy=I2S(dRy)
if qRy==null then
set nRy=""
else
set nRy=qRy
endif
set aRy=nRy
call MultiboardSetItemValue(eRy,aRy)
set fRy=ne
call MultiboardReleaseItem(fRy)
set Hpy=Hpy+1
endloop
set RRy=Yr
set TRy=23
set YRy=Gr+1
set ne=MultiboardGetItem(RRy,TRy,YRy)
set GRy=ne
set kRy=Mr[Gr]
set gRy="|cffffcc00"+I2S(kRy)+"|r"
if gRy==null then
set FRy=""
else
set FRy=gRy
endif
set hRy=FRy
call MultiboardSetItemValue(GRy,hRy)
set jRy=ne
call MultiboardReleaseItem(jRy)
set Gr=0
set gr=0
set Jpy=0
loop
exitwhen Jpy>3
if gr<ws[Jpy] then
set Gr=Jpy
set gr=ws[Jpy]
endif
set xRy=Yr
set vRy=24
set mRy=Jpy+1
set ne=MultiboardGetItem(xRy,vRy,mRy)
set QRy=ne
set URy=ws[Jpy]
set WRy=I2S(URy)
if WRy==null then
set ZRy=""
else
set ZRy=WRy
endif
set ERy=ZRy
call MultiboardSetItemValue(QRy,ERy)
set IRy=ne
call MultiboardReleaseItem(IRy)
set Jpy=Jpy+1
endloop
set PRy=Yr
set ARy=24
set DRy=Gr+1
set ne=MultiboardGetItem(PRy,ARy,DRy)
set HRy=ne
set XRy=ws[Gr]
set JRy="|cffffcc00"+I2S(XRy)+"|r"
if JRy==null then
set LRy=""
else
set LRy=JRy
endif
set KRy=LRy
call MultiboardSetItemValue(HRy,KRy)
set CRy=ne
call MultiboardReleaseItem(CRy)
set Gr=0
set gr=0
set Kpy=0
loop
exitwhen Kpy>3
set us[Kpy]=hr[Kpy]-300-ws[Kpy]-Mr[Kpy]-Vr[Kpy]-Cr[Kpy]-lr
if gr<us[Kpy] then
set Gr=Kpy
set gr=us[Kpy]
endif
set VRy=Yr
set BRy=25
set NRy=Kpy+1
set ne=MultiboardGetItem(VRy,BRy,NRy)
set MRy=ne
set sTy=us[Kpy]
set wTy=I2S(sTy)
if wTy==null then
set rTy=""
else
set rTy=wTy
endif
set uTy=rTy
call MultiboardSetItemValue(MRy,uTy)
set tTy=ne
call MultiboardReleaseItem(tTy)
set Kpy=Kpy+1
endloop
set iTy=Yr
set STy=25
set cTy=Gr+1
set ne=MultiboardGetItem(iTy,STy,cTy)
set oTy=ne
set yTy=us[Gr]
set OTy="|cffffcc00"+I2S(yTy)+"|r"
if OTy==null then
set bTy=""
else
set bTy=OTy
endif
set lTy=bTy
call MultiboardSetItemValue(oTy,lTy)
set pTy=ne
call MultiboardReleaseItem(pTy)
set Gr=0
set gr=0
set Lpy=0
loop
exitwhen Lpy>3
if gr<rs[Lpy] then
set Gr=Lpy
set gr=rs[Lpy]
endif
set eTy=Yr
set qTy=26
set aTy=Lpy+1
set ne=MultiboardGetItem(eTy,qTy,aTy)
set nTy=ne
set TTy=rs[Lpy]
set dTy=I2S(TTy)
if dTy==null then
set RTy=""
else
set RTy=dTy
endif
set fTy=RTy
call MultiboardSetItemValue(nTy,fTy)
set YTy=ne
call MultiboardReleaseItem(YTy)
set Lpy=Lpy+1
endloop
set GTy=Yr
set gTy=26
set hTy=Gr+1
set ne=MultiboardGetItem(GTy,gTy,hTy)
set FTy=ne
set vTy=rs[Gr]
set kTy="|cffffcc00"+I2S(vTy)+"|r"
if kTy==null then
set xTy=""
else
set xTy=kTy
endif
set jTy=xTy
call MultiboardSetItemValue(FTy,jTy)
set mTy=ne
call MultiboardReleaseItem(mTy)
set Gr=0
set gr=0
set Xpy=0
loop
exitwhen Xpy>15
set Dw[Xpy]=null
set Xpy=Xpy+1
endloop
set Cpy=null
set Npy=null
set sey=null
set tey=null
set cey=null
set yey=null
set pey=null
set aey=null
set Tey=null
set Yey=null
set hey=null
set vey=null
set mey=null
set Eey=null
set Aey=null
set Dey=null
set Key=null
set Bey=null
set Ney=null
set uqy=null
set Sqy=null
set cqy=null
set lqy=null
set qqy=null
set aqy=null
set fqy=null
set gqy=null
set hqy=null
set jqy=null
set Wqy=null
set Pqy=null
set Hqy=null
set Xqy=null
set Mqy=null
set ray=null
set Say=null
set qay=null
set day=null
set Yay=null
set Gay=null
set Fay=null
set may=null
set Qay=null
set Zay=null
set Day=null
set Hay=null
set Lay=null
set Nay=null
set May=null
set rny=null
set cny=null
set ony=null
set bny=null
set any=null
set nny=null
set Rny=null
set hny=null
set Fny=null
set xny=null
set Eny=null
set Zny=null
set Pny=null
set Kny=null
set Lny=null
set Vny=null
set udy=null
set rdy=null
set idy=null
set ldy=null
set bdy=null
set edy=null
set fdy=null
set Rdy=null
set Gdy=null
set jdy=null
set xdy=null
set Qdy=null
set Idy=null
set Pdy=null
set Hdy=null
set Cdy=null
set Vdy=null
set Mdy=null
set tfy=null
set ify=null
set ofy=null
set pfy=null
set efy=null
set nfy=null
set Yfy=null
set Gfy=null
set Ffy=null
set mfy=null
set Qfy=null
set Zfy=null
set Dfy=null
set Hfy=null
set Lfy=null
set Nfy=null
set sRy=null
set SRy=null
set lRy=null
set bRy=null
set eRy=null
set fRy=null
set RRy=null
set GRy=null
set jRy=null
set xRy=null
set QRy=null
set IRy=null
set PRy=null
set HRy=null
set CRy=null
set VRy=null
set MRy=null
set tTy=null
set iTy=null
set oTy=null
set pTy=null
set eTy=null
set nTy=null
set YTy=null
set GTy=null
set FTy=null
set mTy=null
endfunction
function QUb takes nothing returns nothing
local unit dUb=GetEnteringUnit()
local unit YUb=dUb
local integer fUb=GetUnitTypeId(YUb)
local unit GUb=dUb
local player RUb=GetOwningPlayer(GUb)
local integer TUb
local unit gUb
local integer hUb
local unit FUb
local integer kUb
local unit jUb
local integer xUb
local unit vUb
local integer mUb
if fUb==$6E7A6F6D then
set TUb=GetPlayerTechCount(RUb,$52303132,true)
if TUb>0 then
if TUb==1 then
set gUb=dUb
set hUb=$41323957
call UnitAddAbility(gUb,hUb)
elseif TUb==2 then
set FUb=dUb
set kUb=$41323959
call UnitAddAbility(FUb,kUb)
elseif TUb==3 then
set jUb=dUb
set xUb=$4132395A
call UnitAddAbility(jUb,xUb)
else
set vUb=dUb
set mUb=$41333030
call UnitAddAbility(vUb,mUb)
endif
endif
endif
set dUb=null
set RUb=null
set YUb=null
set GUb=null
set gUb=null
set FUb=null
set jUb=null
set vUb=null
endfunction
function QUi takes nothing returns nothing
set qW=0
call Bfr("via function reference TournamentMode, line 1001")
endfunction
function Q_t takes nothing returns nothing
local unit Y_t=GetTriggerUnit()
local unit G_t=Y_t
local unit g_t
local unit h_t
local integer F_t
local unit k_t
local integer j_t
local unit x_t
local integer v_t
local boolean m_t
if GetUnitTypeId(G_t)==$6F303038 then
set m_t=true
else
set g_t=Y_t
set m_t=GetUnitTypeId(g_t)==$6F303039
endif
if m_t then
set h_t=MY
set F_t=$41353858
call IncUnitAbilityLevel(h_t,F_t)
set k_t=MY
set j_t=$414D3279
call IncUnitAbilityLevel(k_t,j_t)
set x_t=MY
set v_t=$41324936
call IncUnitAbilityLevel(x_t,v_t)
endif
set Y_t=null
set G_t=null
set g_t=null
set h_t=null
set k_t=null
set x_t=null
endfunction
function Qas takes nothing returns boolean
local playerunitevent jas
local code xas
local playerunitevent vas
local code mas
set Tg=CreateGroup()
set Yg=false
set jas=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set xas=Muw
call emO(jas,null,xas,null)
set vas=EVENT_PLAYER_UNIT_SPELL_CAST
set mas=wrw
call emO(vas,null,mas,null)
set jas=null
set vas=null
return true
endfunction
function Qau takes nothing returns boolean
return true
endfunction
function Pni takes string mni returns nothing
local integer Qni
local unit Wni
local effect Eni
local integer Zni
local string Uni
local integer Ini
set aW[qW]=mni
set qW=qW+1
set Qni=GetSpellAbilityId()
if Qni==$41305455 then
set Wni=GetSpellAbilityUnit()
set Eni=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl",Wni,"origin")
call SetUnitInvulnerable(Wni,true)
call PauseUnit(Wni,true)
call SetUnitAnimation(Wni,"stand, channel")
set sd=0
set Uni="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_LichKing in LichKing, line 371"
set aW[qW]=Uni
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Ini=GF
set gF[Ini]=676
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_LichKing.","when calling error in LichKing, line 371")
set Ini=0
endif
else
set YF=YF-1
set Ini=TF[YF]
set gF[Ini]=676
endif
set qW=qW-1
set Zni=Ini
set Pv[Zni]=Eni
set Av[Zni]=Wni
call GtO(1.,Zni,"when calling doPeriodically in LichKing, line 371")
endif
set qW=qW-1
set Wni=null
set Eni=null
endfunction
function QlS takes nothing returns nothing
set qW=0
call Pni("via function reference LichKing, line 362")
endfunction
function Qle takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1459")
endfunction
function Qlr takes nothing returns boolean
local playerunitevent vlr=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code mlr=Fsw
call emO(vlr,null,mlr,null)
set vlr=null
return true
endfunction
function Qlu takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function Qnc takes nothing returns nothing
local unit Ync=GetEnteringUnit()
local unit hnc=Ync
local integer Gnc=GetUnitTypeId(hnc)
local integer gnc
local unit Fnc
local unit knc
local integer jnc
local unit xnc
local integer vnc
local integer mnc
if Gnc==$68726966 or Gnc==$6E626565 or Gnc==$68677972 or Gnc==$6E777331 or Gnc==$65303043 then
set Fnc=Ync
set gnc=GetPlayerTechCount(GetOwningPlayer(Fnc),$52303035,true)
if gnc>0 then
set knc=Ync
set jnc=$41303348
call UnitAddAbility(knc,jnc)
set xnc=Ync
set vnc=$41303348
set mnc=gnc
call SetUnitAbilityLevel(xnc,vnc,mnc)
endif
endif
set Ync=null
set hnc=null
set Fnc=null
set knc=null
set xnc=null
endfunction
function QpS takes nothing returns boolean
return true
endfunction
function Qpe takes nothing returns boolean
local integer kpe=0
local playerunitevent jpe
local code xpe
local playerunitevent vpe
local code mpe
loop
exitwhen kpe>15
set kpe=kpe+1
endloop
set jpe=EVENT_PLAYER_UNIT_DEATH
set xpe=n6
call emO(jpe,null,xpe,null)
set vpe=EVENT_PLAYER_UNIT_DROP_ITEM
set mpe=d6
call emO(vpe,null,mpe,null)
set jpe=null
set vpe=null
return true
endfunction
function Qvi takes nothing returns nothing
local unit gvi
local unit hvi
local unit Fvi
local unit kvi
local unit jvi
local boolean xvi
local boolean vvi
local boolean mvi
if yO!=null then
set gvi=GetLevelingUnit()
set hvi=gvi
if GetUnitTypeId(hvi)==$4F303258 then
set xvi=true
else
set Fvi=gvi
set xvi=GetUnitTypeId(Fvi)==$4F303337
endif
if xvi then
set vvi=true
else
set kvi=gvi
set vvi=GetUnitTypeId(kvi)==$4F303338
endif
if vvi then
set mvi=true
else
set jvi=gvi
set mvi=GetUnitTypeId(jvi)==$4F303339
endif
if mvi then
if GetHeroLevel(gvi)>=12 then
set fO=fO+1
endif
endif
endif
set gvi=null
set hvi=null
set Fvi=null
set kvi=null
set jvi=null
endfunction
function QwO takes nothing returns boolean
return true
endfunction
function Qwl takes nothing returns boolean
local real vwl=0.
local real mwl=0.
set bh=vwl
set yh=mwl
call Location(0.,0.)
return true
endfunction
function R0e takes nothing returns boolean
set Qb=200
return true
endfunction
function R1e takes nothing returns boolean
return true
endfunction
function R5u takes nothing returns boolean
return true
endfunction
function R6i takes nothing returns nothing
local integer K5i=GetSpellAbilityId()
local unit L5i
local group X5i
local filterfunc C5i
local unit V5i
local group B5i
local unit N5i
local unit M5i
local unit w6i
local group u6i
local group r6i
local unit s6i
local unit t6i
local unit i6i
local unit S6i
local unit c6i
local real o6i
local unit O6i
local integer l6i
local unit b6i
local string y6i
local widget p6i
local group e6i
local boolexpr q6i
local group a6i
local real n6i
local player d6i
local real f6i
if K5i==$4131364D then
set L5i=GetSpellAbilityUnit()
set X5i=CreateGroup()
set C5i=Filter(V0w)
set a6i=X5i
set M5i=L5i
set n6i=GetUnitX(M5i)
set w6i=L5i
call GroupEnumUnitsInRange(a6i,n6i,GetUnitY(w6i),400.,C5i)
set B5i=X5i
loop
set u6i=B5i
exitwhen not (FirstOfGroup(u6i)!=null)
set r6i=B5i
set s6i=FirstOfGroup(r6i)
call GroupRemoveUnit(r6i,s6i)
set V5i=s6i
set t6i=V5i
set d6i=GetOwningPlayer(t6i)
set i6i=V5i
set f6i=GetUnitX(i6i)
set S6i=V5i
set N5i=CreateUnit(d6i,$75303030,f6i,GetUnitY(S6i),0.)
set c6i=N5i
set o6i=3.
call UnitApplyTimedLife(c6i,$42544C46,o6i)
set O6i=N5i
set l6i=$41313735
call UnitAddAbility(O6i,l6i)
set b6i=N5i
set y6i="antimagicshell"
set p6i=V5i
call IssueTargetOrder(b6i,y6i,p6i)
endloop
set e6i=X5i
call DestroyGroup(e6i)
set q6i=C5i
call DestroyBoolExpr(q6i)
endif
set L5i=null
set X5i=null
set C5i=null
set V5i=null
set B5i=null
set N5i=null
set M5i=null
set w6i=null
set u6i=null
set r6i=null
set s6i=null
set t6i=null
set i6i=null
set S6i=null
set c6i=null
set O6i=null
set b6i=null
set p6i=null
set e6i=null
set q6i=null
set a6i=null
set d6i=null
endfunction
function brl takes string Uul returns boolean
local integer Iul
local integer Pul
local integer Aul
local integer Dul
local integer Hul
local integer Jul
local integer Kul
local integer Lul
local integer Xul
local integer Cul
local integer Vul
local integer Bul
local integer Nul
local integer Mul
local integer wrl
local integer url
local integer rrl
local integer srl
local integer trl
local playerunitevent irl
local code Srl
local playerunitevent crl
local code orl
local playerunitevent Orl
local code lrl
set aW[qW]=Uul
set qW=qW+1
set Iul=SRr("when calling new_HashMap in PickUltimate, line 19")
call TKO(Iul,$41305656,$41304D4A,"when calling put in PickUltimate, line 20")
set Pul=Iul
call TKO(Pul,$41304F43,$41304F47,"when calling put in PickUltimate, line 21")
set Aul=Pul
call TKO(Aul,$41304F44,$41304D4D,"when calling put in PickUltimate, line 22")
set Dul=Aul
call TKO(Dul,$41305157,$41305156,"when calling put in PickUltimate, line 23")
set Hul=Dul
call TKO(Hul,$41305236,$41305235,"when calling put in PickUltimate, line 24")
set Jul=Hul
call TKO(Jul,$41305232,$4143736D,"when calling put in PickUltimate, line 25")
set Kul=Jul
call TKO(Kul,$41305051,$41305130,"when calling put in PickUltimate, line 26")
set Lul=Kul
call TKO(Lul,$41304F42,$41304F4C,"when calling put in PickUltimate, line 27")
set Xul=Lul
call TKO(Xul,$41305346,$41777268,"when calling put in PickUltimate, line 28")
set Cul=Xul
call TKO(Cul,$41323450,$41323452,"when calling put in PickUltimate, line 29")
set Vul=Cul
call TKO(Vul,$41323458,$41323459,"when calling put in PickUltimate, line 30")
set WY=Vul
set Bul=SRr("when calling new_HashMap in PickUltimate, line 33")
call TKO(Bul,$41305656,$41304D4A,"when calling put in PickUltimate, line 34")
set Nul=Bul
call TKO(Nul,$41304F43,$41304F47,"when calling put in PickUltimate, line 35")
set Mul=Nul
call TKO(Mul,$41304F44,$41304D4D,"when calling put in PickUltimate, line 36")
set wrl=Mul
call TKO(wrl,$41305157,$41305156,"when calling put in PickUltimate, line 37")
set url=wrl
call TKO(url,$41305236,$41305235,"when calling put in PickUltimate, line 38")
set rrl=url
call TKO(rrl,$41305232,$4143736D,"when calling put in PickUltimate, line 39")
set srl=rrl
call TKO(srl,$41323646,$41323647,"when calling put in PickUltimate, line 41")
set trl=srl
call TKO(trl,$41305346,$41777268,"when calling put in PickUltimate, line 42")
set EY=trl
set irl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Srl=uww_3363
call emO(irl,null,Srl,null)
set crl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set orl=rww_3160
call emO(crl,null,orl,null)
set Orl=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set lrl=sww_3228
call emO(Orl,null,lrl,null)
set qW=qW-1
set irl=null
set crl=null
set Orl=null
return true
endfunction
function R7b takes nothing returns boolean
set qW=0
return brl("via function reference PickUltimate, line 1")
endfunction
function R8w takes nothing returns nothing
local integer I7w=GetRandomInt(1,100)
local integer P7w
local integer A7w
local player D7w
local unit H7w
local player J7w
local integer K7w
local player L7w
local playerstate X7w
local integer C7w
local player V7w
local playerstate B7w
local unit N7w
local string M7w
local real w8w
local player u8w
local integer r8w
local unit s8w
local string t8w
local real i8w
local player S8w
local unit c8w
local unit o8w
local integer O8w
local unit l8w
local integer b8w
local unit y8w
local integer p8w
local unit e8w
local integer q8w
local timer a8w
local timer n8w
local player d8w
local playerstate f8w
if I7w<=30+10*re then
set P7w=450+300*re
call UuS(Dp,P7w)
set H7w=Dp
set D7w=GetOwningPlayer(H7w)
set A7w=GetPlayerId(D7w)
set N7w=Dp
set J7w=GetOwningPlayer(N7w)
set K7w=P7w
set L7w=J7w
set X7w=PLAYER_STATE_RESOURCE_GOLD
set C7w=K7w
set d8w=L7w
set f8w=X7w
set V7w=L7w
set B7w=X7w
call SetPlayerState(d8w,f8w,GetPlayerState(V7w,B7w)+C7w)
set hr[A7w]=hr[A7w]+P7w
set Fr[A7w]=Fr[A7w]+P7w
set Cr[A7w]=Cr[A7w]+P7w
set r8w=P7w
set M7w="The expedition was a success! Here is your reward\nYou received "+I2S(r8w)+" Gold"
set w8w=10.
set s8w=Dp
set u8w=GetOwningPlayer(s8w)
call DisplayTimedTextToPlayer(u8w,0.,0.,w8w,M7w)
else
set t8w="The expedition failed..."
set i8w=10.
set c8w=Dp
set S8w=GetOwningPlayer(c8w)
call DisplayTimedTextToPlayer(S8w,0.,0.,i8w,t8w)
endif
if re==1 then
set o8w=Dp
set O8w=$41323349
call UnitAddAbility(o8w,O8w)
endif
if re==2 then
set l8w=Dp
set b8w=$4132334A
call UnitAddAbility(l8w,b8w)
endif
if re==3 then
set y8w=Dp
set p8w=$4132334B
call UnitAddAbility(y8w,p8w)
endif
if re==4 then
set e8w=Dp
set q8w=$4132334C
call UnitAddAbility(e8w,q8w)
endif
set a8w=Hp
call PauseTimer(a8w)
set n8w=Hp
call DestroyTimer(n8w)
set Hp=null
set D7w=null
set H7w=null
set J7w=null
set L7w=null
set X7w=null
set V7w=null
set B7w=null
set N7w=null
set u8w=null
set s8w=null
set S8w=null
set c8w=null
set o8w=null
set l8w=null
set y8w=null
set e8w=null
set a8w=null
set n8w=null
set d8w=null
set f8w=null
endfunction
function RCu takes nothing returns boolean
return true
endfunction
function Eji takes string pji returns nothing
local unit eji
local integer qji
local unit aji
local unit nji
local unit dji
local unit fji
local unit Rji
local unit Tji
local unit Yji
local integer Gji
local string gji
local integer hji
local real Fji
local integer kji
local string jji
local boolean xji
local boolean vji
local boolean mji
local boolean Qji
local integer Wji
set aW[qW]=pji
set qW=qW+1
set eji=GetAttacker()
set aji=eji
if GetUnitTypeId(aji)==$6F67726B then
set xji=true
else
set nji=eji
set xji=GetUnitTypeId(nji)==$6E667474
endif
if xji then
set vji=true
else
set dji=eji
set vji=GetUnitTypeId(dji)==$6F68756E
endif
if vji then
set mji=true
else
set fji=eji
set mji=GetUnitTypeId(fji)==$6E667462
endif
if mji then
set Rji=eji
set Qji=GetPlayerTechCount(GetOwningPlayer(Rji),$5230304C,true)>0
else
set Qji=false
endif
if Qji then
set Wji=GetRandomInt(1,100)
set Tji=eji
if Wji<=10*GetPlayerTechCount(GetOwningPlayer(Tji),$5230304C,true) then
set Yji=eji
set Gji=$414D3033
call UnitAddAbility(Yji,Gji)
set gji="when calling alloc_CallbackSingle_doAfter_Berserk in Berserk, line 60"
set aW[qW]=gji
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set hji=fF
set RF[hji]=682
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Berserk.","when calling error in Berserk, line 60")
set hji=0
endif
else
set dF=dF-1
set hji=nF[dF]
set RF[hji]=682
endif
set qW=qW-1
set qji=hji
set uj[qji]=eji
set Fji=2.
set kji=qji
set jji="when calling doAfter in Berserk, line 60"
set aW[qW]=jji
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Fji,kji,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set eji=null
set aji=null
set nji=null
set dji=null
set fji=null
set Rji=null
set Tji=null
set Yji=null
endfunction
function RDw takes nothing returns nothing
set qW=0
call Eji("via function reference Berserk, line 67")
endfunction
function mFc takes string YFc returns nothing
local unit GFc
local integer gFc
local trigger hFc
local effect FFc
local integer kFc
local unit jFc
local string xFc
local integer vFc
set aW[qW]=YFc
set qW=qW+1
set GFc=GetSpellAbilityUnit()
set jFc=GFc
if GetUnitTypeId(jFc)==$456D3173 then
set gFc=GetSpellAbilityId()
if gFc==$41305851 then
set hFc=GetTriggeringTrigger()
call DisableTrigger(hFc)
set FFc=AddSpecialEffectTarget("Model157.mdx",GFc,"overhead")
call SetUnitInvulnerable(GFc,true)
call PauseUnit(GFc,true)
call SetUnitAnimation(GFc,"stand, channel")
set sf=0
set xFc="when calling alloc_CallbackPeriodic_doPeriodically_Medivh in Medivh, line 797"
set aW[qW]=xFc
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set vFc=GF
set gF[vFc]=663
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_Medivh.","when calling error in Medivh, line 797")
set vFc=0
endif
else
set YF=YF-1
set vFc=TF[YF]
set gF[vFc]=663
endif
set qW=qW-1
set kFc=vFc
set gm[kFc]=FFc
set hm[kFc]=GFc
set Fm[kFc]=hFc
call GtO(1.,kFc,"when calling doPeriodically in Medivh, line 797")
endif
endif
set qW=qW-1
set GFc=null
set hFc=null
set FFc=null
set jFc=null
endfunction
function RHt takes nothing returns nothing
set qW=0
call mFc("via function reference Medivh, line 815")
endfunction
function g4r takes string a4r returns nothing
local integer n4r
local unit d4r
local integer f4r
local unit R4r
local string T4r
local integer Y4r
local boolean G4r
set aW[qW]=a4r
set qW=qW+1
set n4r=GetSpellAbilityId()
set d4r=GetSpellAbilityUnit()
if n4r==$41313133 then
set R4r=d4r
set G4r=GetUnitTypeId(R4r)==$6E30314C
else
set G4r=false
endif
if G4r then
call SetUnitInvulnerable(d4r,true)
call PauseUnit(d4r,true)
call SetUnitAnimation(d4r,"stand 2")
set kh=0
set T4r="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_VulperaAirBonusUnit in VulperaAirBonusUnit, line 198"
set aW[qW]=T4r
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Y4r=GF
set gF[Y4r]=679
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_VulperaAirBonusUnit.","when calling error in VulperaAirBonusUnit, line 198")
set Y4r=0
endif
else
set YF=YF-1
set Y4r=TF[YF]
set gF[Y4r]=679
endif
set qW=qW-1
set f4r=Y4r
set BQ[f4r]=d4r
call GtO(1.,f4r,"when calling doPeriodically in VulperaAirBonusUnit, line 198")
endif
set qW=qW-1
set d4r=null
set R4r=null
endfunction
function RJp takes nothing returns nothing
set qW=0
call g4r("via function reference VulperaAirBonusUnit, line 190")
endfunction
function RMb takes nothing returns nothing
local integer XNb=GetSpellAbilityId()
local unit CNb
local group VNb
local unit BNb
local group NNb
local unit MNb
local unit wMb
local unit uMb
local group rMb
local group sMb
local unit tMb
local unit iMb
local unit SMb
local unit cMb
local unit oMb
local real OMb
local unit lMb
local integer bMb
local unit yMb
local string pMb
local widget eMb
local group qMb
local group aMb
local real nMb
local player dMb
local real fMb
if XNb==$41313654 then
set CNb=GetSpellAbilityUnit()
set VNb=CreateGroup()
set aMb=VNb
set wMb=CNb
set nMb=GetUnitX(wMb)
set uMb=CNb
call GroupEnumUnitsInRange(aMb,nMb,GetUnitY(uMb),500.,Filter(gM))
set NNb=VNb
loop
set rMb=NNb
exitwhen not (FirstOfGroup(rMb)!=null)
set sMb=NNb
set tMb=FirstOfGroup(sMb)
call GroupRemoveUnit(sMb,tMb)
set BNb=tMb
set iMb=BNb
set dMb=GetOwningPlayer(iMb)
set SMb=BNb
set fMb=GetUnitX(SMb)
set cMb=BNb
set MNb=CreateUnit(dMb,$75303030,fMb,GetUnitY(cMb),0.)
set oMb=MNb
set OMb=3.
call UnitApplyTimedLife(oMb,$42544C46,OMb)
set lMb=MNb
set bMb=$41323749
call UnitAddAbility(lMb,bMb)
set yMb=MNb
set pMb="antimagicshell"
set eMb=BNb
call IssueTargetOrder(yMb,pMb,eMb)
endloop
set qMb=VNb
call DestroyGroup(qMb)
endif
set CNb=null
set VNb=null
set BNb=null
set NNb=null
set MNb=null
set wMb=null
set uMb=null
set rMb=null
set sMb=null
set tMb=null
set iMb=null
set SMb=null
set cMb=null
set oMb=null
set lMb=null
set yMb=null
set eMb=null
set qMb=null
set aMb=null
set dMb=null
endfunction
function bUy takes unit iUy returns nothing
local unit OUy=iUy
local integer SUy=GetUnitTypeId(OUy)
local player cUy
local integer oUy
local unit lUy
if SUy==$78303230 then
set lUy=iUy
set cUy=GetOwningPlayer(lUy)
set oUy=GetPlayerId(cUy)
call RemoveUnitFromStock(O[oUy],H[oUy])
call RemoveUnitFromStock(b[oUy],H[oUy])
call RemoveUnitFromStock(l[oUy],H[oUy])
set H[oUy]=$6E79796D
call AddUnitToStock(O[oUy],H[oUy],1,3)
call AddUnitToStock(b[oUy],H[oUy],1,3)
call AddUnitToStock(l[oUy],H[oUy],1,3)
endif
set cUy=null
set OUy=null
set lUy=null
endfunction
function RMp takes nothing returns nothing
call bUy(GetTriggerUnit())
endfunction
function RMy takes nothing returns boolean
local playerunitevent dMy=EVENT_PLAYER_UNIT_SPELL_CAST
local code fMy=w1
call emO(dMy,null,fMy,null)
set dMy=null
return true
endfunction
function ROi takes nothing returns nothing
local unit qOi=GetTriggerUnit()
local unit aOi
local integer nOi
local unit dOi
local boolean fOi
if GetUnitTypeId(qOi)==$5530304D then
set aOi=GetTriggerUnit()
set nOi=$62726A64
set fOi=RTS(aOi,nOi)!=null==true
else
set fOi=false
endif
if fOi and kg==false then
set dOi=GetTriggerUnit()
set hg=GetOwningPlayer(dOi)
if kg==false then
call TimerStart(Fg,5.,false,Srw)
set kg=true
endif
endif
set qOi=null
set aOi=null
set dOi=null
endfunction
function ROt takes nothing returns boolean
local trigger yOt
local trigger pOt
local playerunitevent eOt
local integer qOt
local trigger aOt
local trigger nOt
local playerunitevent dOt
local integer fOt
set xO=CreateTrigger()
set vO=CreateTrigger()
set QO=null
set yOt=xO
call DisableTrigger(yOt)
set pOt=xO
set eOt=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set qOt=0
loop
call TriggerRegisterPlayerUnitEvent(pOt,Player(qOt),eOt,null)
set qOt=qOt+1
exitwhen qOt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(xO,nM)
set aOt=vO
call DisableTrigger(aOt)
set nOt=vO
set dOt=EVENT_PLAYER_UNIT_DEATH
set fOt=0
loop
call TriggerRegisterPlayerUnitEvent(nOt,Player(fOt),dOt,null)
set fOt=fOt+1
exitwhen fOt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(vO,dM)
set yOt=null
set pOt=null
set eOt=null
set aOt=null
set nOt=null
set dOt=null
return true
endfunction
function RPi takes nothing returns nothing
local unit DIi
local integer HIi
local real JIi
local real KIi
local integer LIi
local unit XIi
local unit CIi
local integer VIi
local unit BIi
local unit NIi
local unit MIi
local unit wPi
local unit uPi
local unit rPi
local integer sPi
local unit tPi
local real iPi
local player SPi
local integer cPi
local player oPi
local playerstate OPi
local integer lPi
local player bPi
local playerstate yPi
local unit pPi
local player ePi
local unit qPi
local player aPi
local real nPi
local player dPi
local playerstate fPi
if yO!=null and pO!=null then
set DIi=GetSpellAbilityUnit()
set HIi=GetSpellAbilityId()
if HIi==$41313349 then
set BIi=DIi
set JIi=GetUnitX(BIi)
set NIi=DIi
set KIi=GetUnitY(NIi)
set LIi=1
loop
exitwhen LIi>16
set MIi=DIi
set aPi=GetOwningPlayer(MIi)
set wPi=DIi
set nPi=GetUnitX(wPi)
set uPi=DIi
set XIi=CreateUnit(aPi,$75303030,nPi,GetUnitY(uPi),270.)
set rPi=XIi
set sPi=$4131334A
call UnitAddAbility(rPi,sPi)
call IssuePointOrder(XIi,"carrionswarm",JIi+100.*Cos(67.5+I2R(LIi)*22.5*bj_DEGTORAD),KIi+100.*Sin(67.5+I2R(LIi)*22.5*bj_DEGTORAD))
set tPi=XIi
set iPi=5.
call UnitApplyTimedLife(tPi,$42544C46,iPi)
set LIi=LIi+1
endloop
endif
if HIi==$41313348 then
set CIi=GetSpellTargetUnit()
set pPi=yO
set SPi=GetOwningPlayer(pPi)
set cPi=1000
set oPi=SPi
set OPi=PLAYER_STATE_RESOURCE_GOLD
set lPi=cPi
set dPi=oPi
set fPi=OPi
set bPi=oPi
set yPi=OPi
call SetPlayerState(dPi,fPi,GetPlayerState(bPi,yPi)+lPi)
call UuS(CIi,1000)
set qPi=yO
set ePi=GetOwningPlayer(qPi)
set VIi=GetPlayerId(ePi)
set hr[VIi]=hr[VIi]+1000
set Fr[VIi]=Fr[VIi]+1000
set Cr[VIi]=Cr[VIi]+1000
endif
endif
set DIi=null
set XIi=null
set CIi=null
set BIi=null
set NIi=null
set MIi=null
set wPi=null
set uPi=null
set rPi=null
set tPi=null
set SPi=null
set oPi=null
set OPi=null
set bPi=null
set yPi=null
set pPi=null
set ePi=null
set qPi=null
set aPi=null
set dPi=null
set fPi=null
endfunction
function RTt takes nothing returns boolean
local unit yTt=GetFilterUnit()
local unit pTt=yTt
local player eTt=vG
local unit qTt
local unittype aTt
local unit nTt
local boolean dTt
local boolean fTt
if IsUnitEnemy(pTt,eTt) then
set qTt=yTt
set aTt=UNIT_TYPE_STRUCTURE
set dTt=IsUnitType(qTt,aTt)==false
else
set dTt=false
endif
if dTt then
set nTt=yTt
set fTt=UnitAlive(nTt)
else
set fTt=false
endif
set yTt=null
set pTt=null
set eTt=null
set qTt=null
set aTt=null
set nTt=null
return fTt
endfunction
function RWb takes nothing returns nothing
local integer Bmb=GetSpellAbilityId()
local unit Nmb
local integer Mmb
local integer wQb
local integer uQb
local integer rQb
local unit sQb
local unit tQb
local real iQb
local player SQb
local integer cQb
local real oQb
local real OQb
local real lQb
local real bQb
local unit yQb
local unit pQb
local real eQb
local player qQb
local integer aQb
local real nQb
local real dQb
local real fQb
local real RQb
local unit TQb
local unit YQb
local real GQb
local player gQb
local integer hQb
local real FQb
local real kQb
local real jQb
local real xQb
local unit vQb
local unit mQb
local real QQb
local player WQb
local integer EQb
local real ZQb
local real UQb
local real IQb
local real PQb
local player AQb
local integer DQb
local real HQb
local real JQb
local player KQb
local integer LQb
local real XQb
local real CQb
local player VQb
local integer BQb
local real NQb
local real MQb
local player wWb
local integer uWb
local real rWb
local real sWb
local real tWb
local real iWb
local real SWb
local real cWb
local real oWb
local real OWb
local real lWb
local real bWb
local real yWb
local real pWb
local real eWb
local real qWb
local real aWb
local real nWb
local real dWb
local real fWb
if Bmb==$41304C33 then
set Nmb=GetSpellAbilityUnit()
set sQb=Nmb
if GetOwningPlayer(sQb)==Tu then
set Mmb=0
loop
exitwhen Mmb>5
set SQb=nu
set cQb=$6E30334F
set tWb=kd[Mmb]
set iWb=md[Mmb]
set oQb=tWb
set OQb=iWb
set SWb=270.
set lQb=SWb
set AQb=SQb
set DQb=cQb
set HQb=oQb
set JQb=OQb
set cWb=lQb
set bQb=cWb
set tQb=CreateUnit(AQb,DQb,HQb,JQb,bQb*57.295779513)
set iQb=75.
call UnitApplyTimedLife(tQb,$42544C46,iQb)
set Mmb=Mmb+1
endloop
endif
set yQb=Nmb
if GetOwningPlayer(yQb)==gu then
set wQb=0
loop
exitwhen wQb>5
set qQb=Ru
set aQb=$6E30334F
set oWb=jd[wQb]
set OWb=Qd[wQb]
set nQb=oWb
set dQb=OWb
set lWb=270.
set fQb=lWb
set KQb=qQb
set LQb=aQb
set XQb=nQb
set CQb=dQb
set bWb=fQb
set RQb=bWb
set pQb=CreateUnit(KQb,LQb,XQb,CQb,RQb*57.295779513)
set eQb=75.
call UnitApplyTimedLife(pQb,$42544C46,eQb)
set wQb=wQb+1
endloop
endif
set TQb=Nmb
if GetOwningPlayer(TQb)==Yu then
set uQb=0
loop
exitwhen uQb>5
set gQb=du
set hQb=$6E30334F
set yWb=xd[uQb]
set pWb=Wd[uQb]
set FQb=yWb
set kQb=pWb
set eWb=270.
set jQb=eWb
set VQb=gQb
set BQb=hQb
set NQb=FQb
set MQb=kQb
set qWb=jQb
set xQb=qWb
set YQb=CreateUnit(VQb,BQb,NQb,MQb,xQb*57.295779513)
set GQb=75.
call UnitApplyTimedLife(YQb,$42544C46,GQb)
set uQb=uQb+1
endloop
endif
set vQb=Nmb
if GetOwningPlayer(vQb)==Gu then
set rQb=0
loop
exitwhen rQb>5
set WQb=fu
set EQb=$6E30334F
set aWb=vd[rQb]
set nWb=Ed[rQb]
set ZQb=aWb
set UQb=nWb
set dWb=270.
set IQb=dWb
set wWb=WQb
set uWb=EQb
set rWb=ZQb
set sWb=UQb
set fWb=IQb
set PQb=fWb
set mQb=CreateUnit(wWb,uWb,rWb,sWb,PQb*57.295779513)
set QQb=75.
call UnitApplyTimedLife(mQb,$42544C46,QQb)
set rQb=rQb+1
endloop
endif
endif
set Nmb=null
set sQb=null
set tQb=null
set SQb=null
set yQb=null
set pQb=null
set qQb=null
set TQb=null
set YQb=null
set gQb=null
set vQb=null
set mQb=null
set WQb=null
set AQb=null
set KQb=null
set VQb=null
set wWb=null
endfunction
function RWw takes nothing returns boolean
local integer dWw
local integer fWw
set IY=GetLocalPlayer()
set dWw=0
set fWw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen dWw>fWw
set UY[dWw]=Player(dWw)
set dWw=dWw+1
endloop
return true
endfunction
function RXr takes nothing returns boolean
local unit XLr=GetFilterUnit()
local unit CLr=XLr
local unit VLr=GetSpellAbilityUnit()
local unit BLr
local player NLr
local unit MLr
local unit wXr
local unit uXr
local unittype rXr
local unit sXr
local unittype tXr
local unit iXr
local unit SXr
local unitstate cXr
local unit oXr
local unit OXr
local unitstate lXr
local unit bXr
local integer yXr
local boolean pXr
local boolean eXr
local boolean qXr
local boolean aXr
local real nXr
local boolean dXr
local boolean fXr
if CLr!=null and VLr!=null then
set BLr=CLr
set MLr=VLr
set NLr=GetOwningPlayer(MLr)
set pXr=BLr!=null and IsUnitAlly(BLr,NLr)
else
set pXr=false
endif
if pXr==true then
set wXr=XLr
set eXr=UnitAlive(wXr)==true
else
set eXr=false
endif
if eXr then
set uXr=XLr
set rXr=UNIT_TYPE_HERO
set qXr=IsUnitType(uXr,rXr)==false
else
set qXr=false
endif
if qXr then
set sXr=XLr
set tXr=UNIT_TYPE_STRUCTURE
set aXr=IsUnitType(sXr,tXr)==false
else
set aXr=false
endif
if aXr then
set iXr=XLr
set SXr=iXr
set cXr=UNIT_STATE_LIFE
set nXr=GetUnitState(SXr,cXr)
set oXr=XLr
set OXr=oXr
set lXr=UNIT_STATE_MAX_LIFE
set dXr=not (nXr<=GetUnitState(OXr,lXr)*.2)
else
set dXr=false
endif
if dXr then
set bXr=XLr
set yXr=$41496E76
set fXr=GetUnitAbilityLevel(bXr,yXr)==1
else
set fXr=false
endif
set XLr=null
set CLr=null
set VLr=null
set BLr=null
set NLr=null
set MLr=null
set wXr=null
set uXr=null
set rXr=null
set sXr=null
set tXr=null
set iXr=null
set SXr=null
set cXr=null
set oXr=null
set OXr=null
set lXr=null
set bXr=null
return fXr
endfunction
function Rau takes nothing returns nothing
local unit xqu=GetKillingUnit()
local unit vqu=GetDyingUnit()
local player mqu
local player Qqu
local unit Wqu
local unit Equ
local unit Zqu
local unittype Uqu
local unit Iqu
local unittype Pqu
local unit Aqu
local real Dqu
local unit Hqu
local unitstate Jqu
local real Kqu
local unit Lqu
local unitstate Xqu
local string Cqu
local real Vqu
local player Bqu
local unit Nqu
local unit Mqu
local unittype wau
local unit uau
local unittype rau
local unit sau
local real tau
local unit iau
local unitstate Sau
local real cau
local unit oau
local unitstate Oau
local string lau
local real bau
local player yau
local unit pau
local boolean eau
local unit qau
local unitstate aau
local boolean nau
local unit dau
local unitstate fau
if Ly!=null then
set Wqu=xqu
set mqu=GetOwningPlayer(Wqu)
set Equ=Ly
set Qqu=GetOwningPlayer(Equ)
if IsPlayerAlly(mqu,Qqu) then
set Zqu=vqu
set Uqu=UNIT_TYPE_HERO
if IsUnitType(Zqu,Uqu)==true then
set Iqu=vqu
set Pqu=UNIT_TYPE_ANCIENT
set eau=IsUnitType(Iqu,Pqu)==false
else
set eau=false
endif
if eau then
set Aqu=Ly
set Dqu=1.
set Hqu=Aqu
set Jqu=UNIT_STATE_MANA
set Kqu=Dqu
set qau=Hqu
set aau=Jqu
set Lqu=Hqu
set Xqu=Jqu
call SetUnitState(qau,aau,GetUnitState(Lqu,Xqu)+Kqu)
set Cqu="You have 1 Dragon Trophy for a hero"
set Vqu=10.
set Nqu=Ly
set Bqu=GetOwningPlayer(Nqu)
call DisplayTimedTextToPlayer(Bqu,0.,0.,Vqu,Cqu)
endif
set Mqu=vqu
set wau=UNIT_TYPE_ANCIENT
if IsUnitType(Mqu,wau)==true then
set uau=vqu
set rau=UNIT_TYPE_HERO
set nau=IsUnitType(uau,rau)==true
else
set nau=false
endif
if nau then
set sau=Ly
set tau=4.
set iau=sau
set Sau=UNIT_STATE_MANA
set cau=tau
set dau=iau
set fau=Sau
set oau=iau
set Oau=Sau
call SetUnitState(dau,fau,GetUnitState(oau,Oau)+cau)
set lau="You have 4 Dragon Trophy for a Special Unit"
set bau=10.
set pau=Ly
set yau=GetOwningPlayer(pau)
call DisplayTimedTextToPlayer(yau,0.,0.,bau,lau)
endif
endif
endif
set xqu=null
set vqu=null
set mqu=null
set Qqu=null
set Wqu=null
set Equ=null
set Zqu=null
set Uqu=null
set Iqu=null
set Pqu=null
set Aqu=null
set Hqu=null
set Jqu=null
set Lqu=null
set Xqu=null
set Bqu=null
set Nqu=null
set Mqu=null
set wau=null
set uau=null
set rau=null
set sau=null
set iau=null
set Sau=null
set oau=null
set Oau=null
set yau=null
set pau=null
set qau=null
set aau=null
set dau=null
set fau=null
endfunction
function CKc takes string EKc returns nothing
local unit ZKc
local integer UKc
local unit IKc
local unit PKc
local integer AKc
local string DKc
local integer HKc
local real JKc
local integer KKc
local string LKc
local boolean XKc
set aW[qW]=EKc
set qW=qW+1
set ZKc=GetAttacker()
set IKc=ZKc
if GetUnitTypeId(IKc)==$7830316E then
set PKc=ZKc
set AKc=$41305958
set XKc=GetUnitAbilityLevel(PKc,AKc)>0
else
set XKc=false
endif
if XKc then
set DKc="when calling alloc_CallbackSingle_doAfter_Jinto in Jinto, line 106"
set aW[qW]=DKc
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set HKc=fF
set RF[HKc]=723
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Jinto.","when calling error in Jinto, line 106")
set HKc=0
endif
else
set dF=dF-1
set HKc=nF[dF]
set RF[HKc]=723
endif
set qW=qW-1
set UKc=HKc
set Yv[UKc]=ZKc
set JKc=1.
set KKc=UKc
set LKc="when calling doAfter in Jinto, line 106"
set aW[qW]=LKc
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),JKc,KKc,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set ZKc=null
set IKc=null
set PKc=null
endfunction
function RbS takes nothing returns nothing
set qW=0
call CKc("via function reference Jinto, line 115")
endfunction
function Rbi takes nothing returns nothing
local integer FOi=GetSpellAbilityId()
local unit kOi
local integer jOi
local unit xOi
local unit vOi
local unit mOi
local unit QOi
local integer WOi
local unit EOi
local unit ZOi
local unit UOi
local unit IOi
local unit POi
local integer AOi
local unit DOi
local integer HOi
local unit JOi
local integer KOi
local integer LOi
local unit XOi
local integer COi
local unit VOi
local integer BOi
local integer NOi
local unit MOi
local integer wli
local unit uli
local integer rli
local integer sli
local unit tli
local integer ili
local unit Sli
local integer cli
local integer oli
local unit Oli
local real lli
local unit bli
local unit yli
local unit pli
local unit eli
local integer qli
local unit ali
local integer nli
local unit dli
local integer fli
local integer Rli
local unit Tli
local integer Yli
local unit Gli
local integer gli
local integer hli
local unit Fli
local integer kli
local unit jli
local integer xli
local integer vli
local unit mli
local integer Qli
local unit Wli
local integer Eli
local integer Zli
local unit Uli
local real Ili
local unit Pli
local unit Ali
local unit Dli
local unit Hli
local integer Jli
local unit Kli
local integer Lli
local unit Xli
local integer Cli
local integer Vli
local unit Bli
local integer Nli
local unit Mli
local integer wbi
local integer ubi
local unit rbi
local integer sbi
local unit tbi
local integer ibi
local integer Sbi
local unit cbi
local integer obi
local unit Obi
local integer lbi
local integer bbi
local unit ybi
local real pbi
local player ebi
local real qbi
local player abi
local real nbi
local player dbi
local real fbi
if FOi==$414D3139 then
set kOi=GetSpellAbilityUnit()
set QOi=kOi
set WOi=$414D3139
set jOi=GetUnitAbilityLevel(QOi,WOi)
set EOi=kOi
call SetPlayerTechResearched(GetOwningPlayer(EOi),$5230334C,jOi)
set ZOi=kOi
set ebi=GetOwningPlayer(ZOi)
set UOi=kOi
set qbi=GetUnitX(UOi)
set IOi=kOi
set xOi=CreateUnit(ebi,$7830306D,qbi,GetUnitY(IOi),0.)
set POi=xOi
set AOi=$41313142
call UnitAddAbility(POi,AOi)
set DOi=xOi
set HOi=$414F6372
call UnitAddAbility(DOi,HOi)
set JOi=xOi
set KOi=$414F6372
set LOi=jOi
call SetUnitAbilityLevel(JOi,KOi,LOi)
set XOi=xOi
set COi=$41303252
call UnitAddAbility(XOi,COi)
set VOi=xOi
set BOi=$41303252
set NOi=jOi
call SetUnitAbilityLevel(VOi,BOi,NOi)
set MOi=xOi
set wli=$41303938
call UnitAddAbility(MOi,wli)
set uli=xOi
set rli=$41303938
set sli=jOi
call SetUnitAbilityLevel(uli,rli,sli)
set tli=xOi
set ili=$414F6165
call UnitAddAbility(tli,ili)
set Sli=xOi
set cli=$414F6165
set oli=jOi
call SetUnitAbilityLevel(Sli,cli,oli)
set Oli=xOi
set lli=20.
call UnitApplyTimedLife(Oli,$42544C46,lli)
set bli=kOi
set abi=GetOwningPlayer(bli)
set yli=kOi
set nbi=GetUnitX(yli)
set pli=kOi
set vOi=CreateUnit(abi,$7830306E,nbi,GetUnitY(pli),0.)
set eli=vOi
set qli=$41313142
call UnitAddAbility(eli,qli)
set ali=vOi
set nli=$41304D4F
call UnitAddAbility(ali,nli)
set dli=vOi
set fli=$41304D4F
set Rli=jOi
call SetUnitAbilityLevel(dli,fli,Rli)
set Tli=vOi
set Yli=$41303252
call UnitAddAbility(Tli,Yli)
set Gli=vOi
set gli=$41303252
set hli=jOi
call SetUnitAbilityLevel(Gli,gli,hli)
set Fli=vOi
set kli=$41304D50
call UnitAddAbility(Fli,kli)
set jli=vOi
set xli=$41304D50
set vli=jOi
call SetUnitAbilityLevel(jli,xli,vli)
set mli=vOi
set Qli=$41303153
call UnitAddAbility(mli,Qli)
set Wli=vOi
set Eli=$41303153
set Zli=jOi
call SetUnitAbilityLevel(Wli,Eli,Zli)
set Uli=vOi
set Ili=20.
call UnitApplyTimedLife(Uli,$42544C46,Ili)
set Pli=kOi
set dbi=GetOwningPlayer(Pli)
set Ali=kOi
set fbi=GetUnitX(Ali)
set Dli=kOi
set mOi=CreateUnit(dbi,$7830306F,fbi,GetUnitY(Dli),0.)
set Hli=mOi
set Jli=$41313142
call UnitAddAbility(Hli,Jli)
set Kli=mOi
set Lli=$414F6372
call UnitAddAbility(Kli,Lli)
set Xli=mOi
set Cli=$414F6372
set Vli=jOi
call SetUnitAbilityLevel(Xli,Cli,Vli)
set Bli=mOi
set Nli=$41303344
call UnitAddAbility(Bli,Nli)
set Mli=mOi
set wbi=$41303344
set ubi=jOi
call SetUnitAbilityLevel(Mli,wbi,ubi)
set rbi=mOi
set sbi=$41303938
call UnitAddAbility(rbi,sbi)
set tbi=mOi
set ibi=$41303938
set Sbi=jOi
call SetUnitAbilityLevel(tbi,ibi,Sbi)
set cbi=mOi
set obi=$41303153
call UnitAddAbility(cbi,obi)
set Obi=mOi
set lbi=$41303153
set bbi=jOi
call SetUnitAbilityLevel(Obi,lbi,bbi)
set ybi=mOi
set pbi=20.
call UnitApplyTimedLife(ybi,$42544C46,pbi)
endif
set kOi=null
set xOi=null
set vOi=null
set mOi=null
set QOi=null
set EOi=null
set ZOi=null
set UOi=null
set IOi=null
set POi=null
set DOi=null
set JOi=null
set XOi=null
set VOi=null
set MOi=null
set uli=null
set tli=null
set Sli=null
set Oli=null
set bli=null
set yli=null
set pli=null
set eli=null
set ali=null
set dli=null
set Tli=null
set Gli=null
set Fli=null
set jli=null
set mli=null
set Wli=null
set Uli=null
set Pli=null
set Ali=null
set Dli=null
set Hli=null
set Kli=null
set Xli=null
set Bli=null
set Mli=null
set rbi=null
set tbi=null
set cbi=null
set Obi=null
set ybi=null
set ebi=null
set abi=null
set dbi=null
endfunction
function Rhu takes nothing returns boolean
local unit lhu=GetFilterUnit()
local unit bhu=lhu
local unittype yhu=UNIT_TYPE_STRUCTURE
local unit phu
local integer ehu
local unit qhu
local unit ahu
local boolean nhu
local player dhu
local boolean fhu
if IsUnitType(bhu,yhu)==true then
set phu=lhu
set ehu=$4176756C
set nhu=GetUnitAbilityLevel(phu,ehu)==0
else
set nhu=false
endif
if nhu then
set qhu=lhu
set dhu=GetOwningPlayer(qhu)
set ahu=yO
set fhu=dhu==GetOwningPlayer(ahu)
else
set fhu=false
endif
set lhu=null
set bhu=null
set yhu=null
set phu=null
set qhu=null
set ahu=null
set dhu=null
return fhu
endfunction
function Rni takes nothing returns boolean
local playerunitevent dni=EVENT_PLAYER_UNIT_SPELL_CAST
local code fni=T1
call emO(dni,null,fni,null)
set dni=null
return true
endfunction
function Rnt takes nothing returns nothing
local integer ent=GetResearched()
local unit qnt
local player ant
local integer nnt
local unit dnt
local player fnt
if ent==$524D3064 then
set qnt=GetTriggerUnit()
set dnt=qnt
set ant=GetOwningPlayer(dnt)
set nnt=GetPlayerTechCount(ant,$524D3064,true)
set fnt=ant
call SetPlayerTechResearched(Player(GetPlayerId(fnt)+4),$524D3065,nnt)
endif
set qnt=null
set ant=null
set dnt=null
set fnt=null
endfunction
function Rnu takes nothing returns nothing
local unit Snu=GetEnteringUnit()
local unit lnu=Snu
local integer cnu=GetUnitTypeId(lnu)
local player onu
local integer Onu
local unit bnu
local unit ynu
local integer pnu
local unit enu
local integer qnu
local unit anu
local integer nnu
local unit dnu
local integer fnu
if cnu==$68677279 or cnu==$68303145 then
set bnu=Snu
set onu=GetOwningPlayer(bnu)
set Onu=GetPlayerTechCount(onu,$52303031,true)
if Onu==1 then
set ynu=Snu
set pnu=$4130394E
call UnitAddAbility(ynu,pnu)
elseif Onu==2 then
set enu=Snu
set qnu=$41305141
call UnitAddAbility(enu,qnu)
elseif Onu==3 then
set anu=Snu
set nnu=$41305132
call UnitAddAbility(anu,nnu)
else
set dnu=Snu
set fnu=$41305142
call UnitAddAbility(dnu,fnu)
endif
endif
set Snu=null
set onu=null
set lnu=null
set bnu=null
set ynu=null
set enu=null
set anu=null
set dnu=null
endfunction
function Rql takes nothing returns nothing
local unit Rel=GetTriggerUnit()
local unit Yel=Rel
local player Tel=GetOwningPlayer(Yel)
local unit Gel
local string gel
local real hel
local real Fel
local unit kel
local unittype jel
local unit xel
local string vel
local real mel
local real Qel
local unit Wel
local unittype Eel
local unit Zel
local string Uel
local real Iel
local real Pel
local unit Ael
local unittype Del
local unit Hel
local string Jel
local real Kel
local real Lel
local unit Xel
local unittype Cel
local unit Vel
local string Bel
local real Nel
local real Mel
local unit wql
local unittype uql
local unit rql
local string sql
local real tql
local real iql
local unit Sql
local unittype cql
local real oql
local real Oql
local real lql
local real bql
local real yql
local real pql
local real eql
local real qql
local real aql
local real nql
local real dql
local real fql
if Tel==du then
set Gel=Rel
set gel="attack"
set oql=Qw[22]
set Oql=Ww[22]
set hel=oql
set Fel=Oql
call IssuePointOrder(Gel,gel,hel,Fel)
set kel=Rel
set jel=UNIT_TYPE_HERO
if IsUnitType(kel,jel) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,22)
endif
endif
if Tel==nu then
if Ew[3]==true then
set xel=Rel
set vel="attack"
set lql=Qw[46]
set bql=Ww[46]
set mel=lql
set Qel=bql
call IssuePointOrder(xel,vel,mel,Qel)
set Wel=Rel
set Eel=UNIT_TYPE_HERO
if IsUnitType(Wel,Eel) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,46)
endif
else
set Zel=Rel
set Uel="attack"
set yql=Qw[22]
set pql=Ww[22]
set Iel=yql
set Pel=pql
call IssuePointOrder(Zel,Uel,Iel,Pel)
set Ael=Rel
set Del=UNIT_TYPE_HERO
if IsUnitType(Ael,Del) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,22)
endif
endif
endif
if Tel==fu then
if Ew[0]==true then
set Hel=Rel
set Jel="attack"
set eql=Qw[22]
set qql=Ww[22]
set Kel=eql
set Lel=qql
call IssuePointOrder(Hel,Jel,Kel,Lel)
set Xel=Rel
set Cel=UNIT_TYPE_HERO
if IsUnitType(Xel,Cel) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,22)
endif
else
set Vel=Rel
set Bel="attack"
set aql=Qw[46]
set nql=Ww[46]
set Nel=aql
set Mel=nql
call IssuePointOrder(Vel,Bel,Nel,Mel)
set wql=Rel
set uql=UNIT_TYPE_HERO
if IsUnitType(wql,uql) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,46)
endif
endif
endif
if Tel==Ru then
set rql=Rel
set sql="attack"
set dql=Qw[46]
set fql=Ww[46]
set tql=dql
set iql=fql
call IssuePointOrder(rql,sql,tql,iql)
set Sql=Rel
set cql=UNIT_TYPE_HERO
if IsUnitType(Sql,cql) then
call SaveInteger(qu,GetHandleId(Rel),$6D6F7665,46)
endif
endif
set Rel=null
set Tel=null
set Yel=null
set Gel=null
set kel=null
set jel=null
set xel=null
set Wel=null
set Eel=null
set Zel=null
set Ael=null
set Del=null
set Hel=null
set Xel=null
set Cel=null
set Vel=null
set wql=null
set uql=null
set rql=null
set Sql=null
set cql=null
endfunction
function RyS takes nothing returns nothing
local integer VbS=GetSpellAbilityId()
local unit BbS
local integer NbS
local unit MbS
local unit wyS
local integer uyS
local unit ryS
local unit syS
local unit tyS
local unit iyS
local real SyS
local unit cyS
local integer oyS
local unit OyS
local integer lyS
local integer byS
local unit yyS
local string pyS
local real eyS
local real qyS
local player ayS
local real nyS
local real dyS
local real fyS
if VbS==$41303936 then
set BbS=GetSpellAbilityUnit()
set wyS=BbS
set uyS=$41303936
set NbS=GetUnitAbilityLevel(wyS,uyS)
set ryS=BbS
set ayS=GetOwningPlayer(ryS)
set syS=BbS
set nyS=GetUnitX(syS)
set tyS=BbS
set MbS=CreateUnit(ayS,$75303030,nyS,GetUnitY(tyS),0.)
set iyS=MbS
set SyS=14.
call UnitApplyTimedLife(iyS,$42544C46,SyS)
set cyS=MbS
set oyS=$41303834
call UnitAddAbility(cyS,oyS)
set OyS=MbS
set lyS=$41303834
set byS=NbS
call SetUnitAbilityLevel(OyS,lyS,byS)
set yyS=MbS
set pyS="monsoon"
set dyS=GetSpellTargetX()
set fyS=GetSpellTargetY()
set eyS=dyS
set qyS=fyS
call IssuePointOrder(yyS,pyS,eyS,qyS)
endif
set BbS=null
set MbS=null
set wyS=null
set ryS=null
set syS=null
set tyS=null
set iyS=null
set cyS=null
set OyS=null
set yyS=null
set ayS=null
endfunction
function S1p takes nothing returns nothing
local unit b3p=GetSpellAbilityUnit()
local unit a3p=b3p
local integer n3p=$49303249
local real y3p
local real p3p
local texttag e3p
local unit q3p
local unit d3p
local unit f3p
local unit R3p
local unit T3p
local unit Y3p
local texttag G3p
local integer g3p
local integer h3p
local integer F3p
local integer k3p
local effect j3p
local string x3p
local real v3p
local real m3p
local unit Q3p
local unit W3p
local unit E3p
local unit Z3p
local unit U3p
local integer I3p
local unit P3p
local integer A3p
local integer D3p
local unit H3p
local integer J3p
local real K3p
local real L3p
local unit X3p
local unit C3p
local unit V3p
local unit B3p
local real N3p
local real M3p
local real w1p
local real u1p
local real r1p
local real s1p
local real t1p
local real i1p
if RTS(a3p,n3p)!=null==true then
set d3p=b3p
set y3p=GetUnitX(d3p)
set f3p=b3p
set p3p=GetUnitY(f3p)
set R3p=b3p
set T3p=R3p
set M3p=GetUnitX(T3p)
set Y3p=R3p
set e3p=PBr(M3p,GetUnitY(Y3p),"Totem of Might")
set G3p=e3p
set g3p=255
set h3p=220
set F3p=0
set k3p=255
call SetTextTagColor(G3p,g3p,h3p,F3p,k3p)
set x3p="Abilities\\Spells\\Orc\\Reincarnation\\ReincarnationTarget.mdl"
set Q3p=b3p
set W3p=Q3p
set w1p=GetUnitX(W3p)
set E3p=Q3p
set r1p=w1p
set s1p=GetUnitY(E3p)
set v3p=r1p
set m3p=s1p
set j3p=AddSpecialEffect(x3p,v3p,m3p)
call DestroyEffect(j3p)
set Z3p=b3p
set q3p=CreateUnit(GetOwningPlayer(Z3p),$75303030,y3p,p3p,0.)
set U3p=q3p
set I3p=$41305334
call UnitAddAbility(U3p,I3p)
set P3p=q3p
set A3p=$41305334
set D3p=2
call SetUnitAbilityLevel(P3p,A3p,D3p)
set H3p=q3p
set J3p=852504
set X3p=b3p
set C3p=X3p
set u1p=GetUnitX(C3p)
set V3p=X3p
set t1p=u1p
set i1p=GetUnitY(V3p)
set K3p=t1p
set L3p=i1p
call IssuePointOrderById(H3p,J3p,K3p,L3p)
set B3p=q3p
set N3p=3.
call UnitApplyTimedLife(B3p,$42544C46,N3p)
endif
set b3p=null
set e3p=null
set q3p=null
set a3p=null
set d3p=null
set f3p=null
set R3p=null
set T3p=null
set Y3p=null
set G3p=null
set j3p=null
set Q3p=null
set W3p=null
set E3p=null
set Z3p=null
set U3p=null
set P3p=null
set H3p=null
set X3p=null
set C3p=null
set V3p=null
set B3p=null
endfunction
function Vdt takes string Pdt returns nothing
local unit Adt
local integer Ddt
local unit Hdt
local unit Jdt
local integer Kdt
local string Ldt
local integer Xdt
local boolean Cdt
set aW[qW]=Pdt
set qW=qW+1
set Adt=GetTriggerUnit()
set Hdt=Adt
if GetUnitTypeId(Hdt)==$484D3034 then
set Jdt=Adt
set Kdt=$4930324D
set Cdt=RTS(Jdt,Kdt)!=null
else
set Cdt=false
endif
if Cdt then
set Ldt="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Himeron in Himeron, line 492"
set aW[qW]=Ldt
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Xdt=GF
set gF[Xdt]=673
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Himeron.","when calling error in Himeron, line 492")
set Xdt=0
endif
else
set YF=YF-1
set Xdt=TF[YF]
set gF[Xdt]=673
endif
set qW=qW-1
set Ddt=Xdt
set Cx[Ddt]=Adt
call GtO(30.,Ddt,"when calling doPeriodically in Himeron, line 492")
endif
set qW=qW-1
set Adt=null
set Hdt=null
set Jdt=null
endfunction
function S4p takes nothing returns nothing
set qW=0
call Vdt("via function reference Himeron, line 489")
endfunction
function sEo takes string UWo returns nothing
local unit IWo
local integer PWo
local unit AWo
local unit DWo
local unit HWo
local unitstate JWo
local unit KWo
local unit LWo
local unitstate XWo
local unit CWo
local integer VWo
local unit BWo
local integer NWo
local string MWo
local integer wEo
local real uEo
local boolean rEo
set aW[qW]=UWo
set qW=qW+1
set IWo=GetTriggerUnit()
set AWo=IWo
if GetUnitTypeId(AWo)==$6F303356 then
set DWo=IWo
set HWo=DWo
set JWo=UNIT_STATE_LIFE
set uEo=GetUnitState(HWo,JWo)
set KWo=IWo
set LWo=KWo
set XWo=UNIT_STATE_MAX_LIFE
if uEo<=GetUnitState(LWo,XWo)*.4 then
set CWo=IWo
set VWo=$41323047
set rEo=GetUnitAbilityLevel(CWo,VWo)==0
else
set rEo=false
endif
if rEo then
set BWo=IWo
set NWo=$41323047
call UnitAddAbility(BWo,NWo)
set MWo="when calling alloc_CallbackPeriodic_doPeriodically_GnollT2SiegeBonus in GnollT2SiegeBonus, line 81"
set aW[qW]=MWo
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set wEo=GF
set gF[wEo]=661
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_GnollT2SiegeBonus.","when calling error in GnollT2SiegeBonus, line 81")
set wEo=0
endif
else
set YF=YF-1
set wEo=TF[YF]
set gF[wEo]=661
endif
set qW=qW-1
set PWo=wEo
set qx[PWo]=IWo
call GtO(1.,PWo,"when calling doPeriodically in GnollT2SiegeBonus, line 81")
endif
endif
set qW=qW-1
set IWo=null
set AWo=null
set DWo=null
set HWo=null
set JWo=null
set KWo=null
set LWo=null
set XWo=null
set CWo=null
set BWo=null
endfunction
function S5b takes nothing returns nothing
set qW=0
call sEo("via function reference GnollT2SiegeBonus, line 92")
endfunction
function S6u takes nothing returns nothing
local integer V5u=0
local player B5u
local integer N5u
local player M5u
local playerstate w6u
local integer u6u
local player r6u
local playerstate s6u
local player t6u
local playerstate i6u
loop
exitwhen V5u>3
set B5u=Player(V5u)
set N5u=cr
set M5u=B5u
set w6u=PLAYER_STATE_RESOURCE_GOLD
set u6u=N5u
set t6u=M5u
set i6u=w6u
set r6u=M5u
set s6u=w6u
call SetPlayerState(t6u,i6u,GetPlayerState(r6u,s6u)+u6u)
set Fr[V5u]=Fr[V5u]+cr
set hr[V5u]=hr[V5u]+cr
set V5u=V5u+1
endloop
set lr=lr+cr
set B5u=null
set M5u=null
set w6u=null
set r6u=null
set s6u=null
set t6u=null
set i6u=null
endfunction
function S8S takes nothing returns boolean
local trigger w8S
local trigger u8S
local real r8S
local boolean s8S
local trigger t8S
local code i8S
set ne=null
set ae=CreateTrigger()
set w8S=ae
call DisableTrigger(w8S)
set u8S=ae
set r8S=.5
set s8S=true
call TriggerRegisterTimerEvent(u8S,r8S,s8S)
set t8S=ae
set i8S=p2
call TriggerAddAction(t8S,i8S)
set w8S=null
set u8S=null
set t8S=null
return true
endfunction
function llS takes string JOS returns nothing
local unit KOS
local integer LOS
local unit XOS
local unit COS
local unit VOS
local integer BOS
local unit NOS
local integer MOS
local integer wlS
local unit ulS
local string rlS
local widget slS
local string tlS
local integer ilS
local real SlS
local integer clS
local string olS
local boolean OlS
set aW[qW]=JOS
set qW=qW+1
set KOS=GetKillingUnit()
set XOS=KOS
if GetUnitTypeId(XOS)==$65303044 then
set OlS=true
else
set COS=KOS
set OlS=GetUnitTypeId(COS)==$78303133
endif
if OlS then
set VOS=KOS
set BOS=$41323630
call UnitAddAbility(VOS,BOS)
set NOS=KOS
set MOS=$41323630
set wlS=2
call SetUnitAbilityLevel(NOS,MOS,wlS)
set ulS=KOS
set rlS="bloodlust"
set slS=KOS
call IssueTargetOrder(ulS,rlS,slS)
set tlS="when calling alloc_CallbackSingle_doAfter_NightElfSiegeBonus2 in NightElfSiegeBonus2, line 101"
set aW[qW]=tlS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ilS=fF
set RF[ilS]=745
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NightElfSiegeBonus2.","when calling error in NightElfSiegeBonus2, line 101")
set ilS=0
endif
else
set dF=dF-1
set ilS=nF[dF]
set RF[ilS]=745
endif
set qW=qW-1
set LOS=ilS
set Hm[LOS]=KOS
set SlS=2.
set clS=LOS
set olS="when calling doAfter in NightElfSiegeBonus2, line 101"
set aW[qW]=olS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),SlS,clS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set KOS=null
set XOS=null
set COS=null
set VOS=null
set NOS=null
set ulS=null
set slS=null
endfunction
function S9c takes nothing returns nothing
set qW=0
call llS("via function reference NightElfSiegeBonus2, line 107")
endfunction
function SCl takes nothing returns boolean
local unit rCl
local unit sCl
local player tCl
local boolean iCl
if IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==true then
set rCl=GetFilterUnit()
set tCl=GetOwningPlayer(rCl)
set sCl=GetTriggerUnit()
set iCl=tCl==GetOwningPlayer(sCl)
else
set iCl=false
endif
set rCl=null
set sCl=null
set tCl=null
return iCl
endfunction
function SDu takes nothing returns nothing
local unit OAu=GetDyingUnit()
local unit lAu=GetKillingUnit()
local unit pAu=OAu
local unittype eAu=UNIT_TYPE_HERO
local texttag bAu
local unit yAu
local unit qAu
local unit aAu
local unit nAu
local unit dAu
local unit fAu
local texttag RAu
local integer TAu
local integer YAu
local integer GAu
local integer gAu
local effect hAu
local string FAu
local real kAu
local real jAu
local unit xAu
local unit vAu
local unit mAu
local unit QAu
local unit WAu
local unit EAu
local unit ZAu
local integer UAu
local unit IAu
local integer PAu
local real AAu
local real DAu
local unit HAu
local unit JAu
local unit KAu
local unit LAu
local real XAu
local boolean CAu
local boolean VAu
local real BAu
local real NAu
local player MAu
local real wDu
local real uDu
local real rDu
local real sDu
local real tDu
local real iDu
if IsUnitType(pAu,eAu)==true then
set qAu=OAu
set CAu=IsUnitIllusion(qAu)==false
else
set CAu=false
endif
if CAu then
set aAu=lAu
set VAu=GetPlayerTechCount(GetOwningPlayer(aAu),$52303554,true)==1
else
set VAu=false
endif
if VAu then
set nAu=OAu
set dAu=nAu
set BAu=GetUnitX(dAu)
set fAu=nAu
set bAu=PBr(BAu,GetUnitY(fAu),"Totem of Dragons")
set RAu=bAu
set TAu=255
set YAu=220
set GAu=0
set gAu=255
call SetTextTagColor(RAu,TAu,YAu,GAu,gAu)
set FAu="Abilities\\Spells\\Orc\\Reincarnation\\ReincarnationTarget.mdl"
set xAu=OAu
set vAu=xAu
set NAu=GetUnitX(vAu)
set mAu=xAu
set rDu=NAu
set sDu=GetUnitY(mAu)
set kAu=rDu
set jAu=sDu
set hAu=AddSpecialEffect(FAu,kAu,jAu)
call DestroyEffect(hAu)
set QAu=lAu
set MAu=GetOwningPlayer(QAu)
set WAu=OAu
set wDu=GetUnitX(WAu)
set EAu=OAu
set yAu=CreateUnit(MAu,$75303030,wDu,GetUnitY(EAu),0.)
set ZAu=yAu
set UAu=$41414136
call UnitAddAbility(ZAu,UAu)
set IAu=yAu
set PAu=852504
set HAu=OAu
set JAu=HAu
set uDu=GetUnitX(JAu)
set KAu=HAu
set tDu=uDu
set iDu=GetUnitY(KAu)
set AAu=tDu
set DAu=iDu
call IssuePointOrderById(IAu,PAu,AAu,DAu)
set LAu=yAu
set XAu=3.
call UnitApplyTimedLife(LAu,$42544C46,XAu)
endif
set OAu=null
set lAu=null
set bAu=null
set yAu=null
set pAu=null
set eAu=null
set qAu=null
set aAu=null
set nAu=null
set dAu=null
set fAu=null
set RAu=null
set hAu=null
set xAu=null
set vAu=null
set mAu=null
set QAu=null
set WAu=null
set EAu=null
set ZAu=null
set IAu=null
set HAu=null
set JAu=null
set KAu=null
set LAu=null
set MAu=null
endfunction
function aWi takes integer MQi,integer wWi,integer uWi,integer rWi,integer sWi,integer tWi,integer iWi,string SWi returns nothing
local integer cWi
local integer oWi
local integer OWi
local integer lWi
local integer bWi
local integer yWi
local integer pWi
local string eWi
local integer qWi
set aW[qW]=SWi
set qW=qW+1
if ok[MQi]==0 then
if MQi==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set cWi=MQi
set oWi=wWi
set OWi=uWi
set lWi=rWi
set bWi=sWi
set yWi=tWi
set pWi=iWi
set eWi="when calling add in LinkedList, line 38"
set aW[qW]=eWi
set qW=qW+1
set qWi=jMe(oWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qWi=jMe(OWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qWi=jMe(lWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qWi=jMe(bWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qWi=jMe(yWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qWi=jMe(pWi,Jv[Vv[cWi]],Vv[cWi],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[cWi]]]=qWi
set Jv[Vv[cWi]]=qWi
set Bv[cWi]=Bv[cWi]+1
set qW=qW-1
set qW=qW-1
endfunction
function nWw takes string xmw returns nothing
local unit vmw
local integer mmw
local unit Qmw
local unittype Wmw
local unit Emw
local integer Zmw
local unit Umw
local integer Imw
local unit Pmw
local unit Amw
local unitstate Dmw
local unit Hmw
local unit Jmw
local unitstate Kmw
local unit Lmw
local unit Xmw
local unit Cmw
local unit Vmw
local unit Bmw
local unit Nmw
local unit Mmw
local unit wQw
local unit uQw
local unit rQw
local unit sQw
local unit tQw
local unit iQw
local unit SQw
local unit cQw
local unit oQw
local unit OQw
local unit lQw
local unit bQw
local unit yQw
local unit pQw
local unit eQw
local unit qQw
local unit aQw
local unit nQw
local unit dQw
local unit fQw
local unit RQw
local unit TQw
local unit YQw
local unit GQw
local integer gQw
local string hQw
local integer FQw
local string kQw
local integer jQw
local integer xQw
local unit vQw
local integer mQw
local unit QQw
local integer WQw
local boolean EQw
local boolean ZQw
local real UQw
local boolean IQw
local boolean PQw
local boolean AQw
local boolean DQw
local boolean HQw
local boolean JQw
local boolean KQw
local boolean LQw
local boolean XQw
local boolean CQw
local boolean VQw
local boolean BQw
local boolean NQw
local boolean MQw
local boolean wWw
local boolean uWw
local boolean rWw
local boolean sWw
local boolean tWw
local boolean iWw
local boolean SWw
local boolean cWw
local boolean oWw
local boolean OWw
local boolean lWw
local boolean bWw
local boolean yWw
local boolean pWw
local boolean eWw
local boolean qWw
local boolean aWw
set aW[qW]=xmw
set qW=qW+1
set vmw=GetTriggerUnit()
set Qmw=vmw
set Wmw=UNIT_TYPE_HERO
if IsUnitType(Qmw,Wmw)==true then
set Emw=vmw
set Zmw=$42303637
set EQw=GetUnitAbilityLevel(Emw,Zmw)==1
else
set EQw=false
endif
if EQw then
set Umw=vmw
set Imw=$41305934
set ZQw=GetUnitAbilityLevel(Umw,Imw)==0
else
set ZQw=false
endif
if ZQw then
set Pmw=vmw
set Amw=Pmw
set Dmw=UNIT_STATE_LIFE
set UQw=GetUnitState(Amw,Dmw)
set Hmw=vmw
set Jmw=Hmw
set Kmw=UNIT_STATE_MAX_LIFE
set IQw=UQw<=GetUnitState(Jmw,Kmw)*.1
else
set IQw=false
endif
if IQw then
set Lmw=vmw
set PQw=UnitAlive(Lmw)==true
else
set PQw=false
endif
if PQw then
set Xmw=vmw
set Cmw=Xmw
if GetUnitTypeId(Cmw)==$4830324B then
set AQw=true
else
set Vmw=Xmw
set AQw=GetUnitTypeId(Vmw)==$484D3032
endif
if AQw then
set DQw=true
else
set Bmw=Xmw
set DQw=GetUnitTypeId(Bmw)==$55776172
endif
if DQw then
set HQw=true
else
set Nmw=Xmw
set HQw=GetUnitTypeId(Nmw)==$4E6D616E
endif
if HQw then
set JQw=true
else
set Mmw=Xmw
set JQw=GetUnitTypeId(Mmw)==$484D3035
endif
if JQw then
set KQw=true
else
set wQw=Xmw
set KQw=GetUnitTypeId(wQw)==$486A6169
endif
if KQw then
set LQw=true
else
set uQw=Xmw
set LQw=GetUnitTypeId(uQw)==$45657669
endif
if LQw then
set XQw=true
else
set rQw=Xmw
set XQw=GetUnitTypeId(rQw)==$45646D6D
endif
if XQw then
set CQw=true
else
set sQw=Xmw
set CQw=GetUnitTypeId(sQw)==$456B6565
endif
if CQw then
set VQw=true
else
set tQw=Xmw
set VQw=GetUnitTypeId(tQw)==$45303039
endif
if VQw then
set BQw=true
else
set iQw=Xmw
set BQw=GetUnitTypeId(iQw)==$5530304C
endif
if BQw then
set NQw=true
else
set SQw=Xmw
set NQw=GetUnitTypeId(SQw)==$484D3033
endif
if NQw then
set MQw=true
else
set cQw=Xmw
set MQw=GetUnitTypeId(cQw)==$456D3173
endif
if MQw then
set wWw=true
else
set oQw=Xmw
set wWw=GetUnitTypeId(oQw)==$484D3036
endif
if wWw then
set uWw=true
else
set OQw=Xmw
set uWw=GetUnitTypeId(OQw)==$484D3037
endif
if uWw then
set rWw=true
else
set lQw=Xmw
set rWw=GetUnitTypeId(lQw)==$4F636268
endif
if rWw then
set sWw=true
else
set bQw=Xmw
set sWw=GetUnitTypeId(bQw)==$4F726B6E
endif
if sWw then
set tWw=true
else
set yQw=Xmw
set tWw=GetUnitTypeId(yQw)==$45303037
endif
if tWw then
set iWw=true
else
set pQw=Xmw
set iWw=GetUnitTypeId(pQw)==$45303038
endif
if iWw then
set SWw=true
else
set eQw=Xmw
set SWw=GetUnitTypeId(eQw)==$55616E62
endif
if SWw then
set cWw=true
else
set qQw=Xmw
set cWw=GetUnitTypeId(qQw)==$48617266
endif
if cWw then
set oWw=true
else
set aQw=Xmw
set oWw=GetUnitTypeId(aQw)==$55647468
endif
if oWw then
set OWw=true
else
set nQw=Xmw
set OWw=GetUnitTypeId(nQw)==$484D3038
endif
if OWw then
set lWw=true
else
set dQw=Xmw
set lWw=GetUnitTypeId(dQw)==$55303048
endif
if lWw then
set bWw=true
else
set fQw=Xmw
set bWw=GetUnitTypeId(fQw)==$55303046
endif
if bWw then
set yWw=true
else
set RQw=Xmw
set yWw=GetUnitTypeId(RQw)==$5530304A
endif
if yWw then
set pWw=true
else
set TQw=Xmw
set pWw=GetUnitTypeId(TQw)==$5530304D
endif
if pWw then
set eWw=true
else
set YQw=Xmw
set eWw=GetUnitTypeId(YQw)==$55303047
endif
if eWw then
set qWw=true
else
set GQw=Xmw
set qWw=GetUnitTypeId(GQw)==$4F303344
endif
set aWw=qWw==false
else
set aWw=false
endif
if aWw then
if jWu(vmw)<6 then
call aWi(Ne,$49303030,$49303037,$49303032,$49303033,$49303036,$49303035,"when calling add in GalagrondPurple, line 470")
set gQw=Ne
set hQw="when calling shuffle in GalagrondPurple, line 471"
set aW[qW]=hQw
set qW=qW+1
if ok[gQw]==0 then
if gQw==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(gQw,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set FQw=Ne
set kQw="when calling getFirst in GalagrondPurple, line 472"
set aW[qW]=kQw
set qW=qW+1
if ok[FQw]==0 then
if FQw==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set xQw=FQw
set jQw=Hv[Kv[Vv[xQw]]]
set qW=qW-1
set mmw=jQw
set vQw=vmw
set mQw=mmw
call UnitAddItemById(vQw,mQw)
endif
set QQw=vmw
set WQw=$41305934
call UnitAddAbility(QQw,WQw)
endif
set qW=qW-1
set vmw=null
set Qmw=null
set Wmw=null
set Emw=null
set Umw=null
set Pmw=null
set Amw=null
set Dmw=null
set Hmw=null
set Jmw=null
set Kmw=null
set Lmw=null
set Xmw=null
set Cmw=null
set Vmw=null
set Bmw=null
set Nmw=null
set Mmw=null
set wQw=null
set uQw=null
set rQw=null
set sQw=null
set tQw=null
set iQw=null
set SQw=null
set cQw=null
set oQw=null
set OQw=null
set lQw=null
set bQw=null
set yQw=null
set pQw=null
set eQw=null
set qQw=null
set aQw=null
set nQw=null
set dQw=null
set fQw=null
set RQw=null
set TQw=null
set YQw=null
set GQw=null
set vQw=null
set QQw=null
endfunction
function SGr takes nothing returns nothing
set qW=0
call nWw("via function reference GalagrondPurple, line 503")
endfunction
function SHy takes nothing returns boolean
return GetSpellAbilityId()==$446F7055
endfunction
function SIp takes nothing returns boolean
return true
endfunction
function dBu takes string wBu returns nothing
local integer uBu
local integer rBu
local location sBu
local real tBu
local real iBu
local integer SBu
local real cBu
local real oBu
local filterfunc OBu
local string lBu
local integer bBu
local real yBu
local real pBu
local real eBu
local real qBu
local real aBu
local real nBu
set aW[qW]=wBu
set qW=qW+1
set uBu=GetSpellAbilityId()
if uBu==$414D3279 then
set rBu=GetUnitAbilityLevel(MY,$414D3279)
set sBu=GetSpellTargetLoc()
set yBu=GetLocationX(sBu)
set pBu=GetLocationY(sBu)
set tBu=yBu
set iBu=pBu
set eBu=tBu
set qBu=iBu
set cBu=eBu
set oBu=qBu
set OBu=Filter(Rww_1292)
set lBu="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_RecyclingFactory in RecyclingFactory, line 297"
set aW[qW]=lBu
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set bBu=qF
set aF[bBu]=872
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_RecyclingFactory.","when calling error in RecyclingFactory, line 297")
set bBu=0
endif
else
set eF=eF-1
set bBu=pF[eF]
set aF[bBu]=872
endif
set qW=qW-1
set SBu=bBu
set Cm[SBu]=rBu
set aBu=tBu
set nBu=iBu
set Vm[SBu]=aBu
set Bm[SBu]=nBu
call WXp(4,0,null,null,cBu,oBu,400.,false,0,null,OBu,SBu,"when calling forNearestUnit in RecyclingFactory, line 297")
call RemoveLocation(sBu)
endif
set qW=qW-1
set sBu=null
set OBu=null
endfunction
function SKc takes nothing returns nothing
set qW=0
call dBu("via function reference RecyclingFactory, line 291")
endfunction
function SMu takes nothing returns nothing
local integer HNu=GetSpellAbilityId()
local unit JNu
local unit KNu
local unit LNu
local unit XNu
local unit CNu
local unit VNu
local unit BNu
local real NNu
local unit MNu
local integer wMu
local unit uMu
local string rMu
local widget sMu
local player tMu
local real iMu
if HNu==$4143736D then
set JNu=GetSpellAbilityUnit()
set KNu=GetSpellTargetUnit()
set XNu=JNu
set tMu=GetOwningPlayer(XNu)
set CNu=KNu
set iMu=GetUnitX(CNu)
set VNu=KNu
set LNu=CreateUnit(tMu,$75303030,iMu,GetUnitY(VNu),0.)
set BNu=LNu
set NNu=3.
call UnitApplyTimedLife(BNu,$42544C46,NNu)
set MNu=LNu
set wMu=$4132344B
call UnitAddAbility(MNu,wMu)
set uMu=LNu
set rMu="soulburn"
set sMu=KNu
call IssueTargetOrder(uMu,rMu,sMu)
endif
set JNu=null
set KNu=null
set LNu=null
set XNu=null
set CNu=null
set VNu=null
set BNu=null
set MNu=null
set uMu=null
set sMu=null
set tMu=null
endfunction
function SOl takes nothing returns nothing
local unit Mol=GetEnteringUnit()
local unit wOl=Mol
local unit uOl
local integer rOl
local unit sOl
local integer tOl
local integer iOl
if GetUnitTypeId(wOl)==$6F303254 then
set uOl=Mol
set rOl=$41305855
call UnitAddAbility(uOl,rOl)
set sOl=Mol
set tOl=$41305855
set iOl=Ae
call SetUnitAbilityLevel(sOl,tOl,iOl)
endif
set Mol=null
set wOl=null
set uOl=null
set sOl=null
endfunction
function SPp takes nothing returns nothing
local unit NIp=GetTriggerUnit()
local unit MIp=NIp
local unittype wPp=UNIT_TYPE_HERO
local unit uPp
local integer rPp
local unit sPp
local integer tPp
local boolean iPp
if IsUnitType(MIp,wPp)==true then
set uPp=NIp
set rPp=$41305934
set iPp=GetUnitAbilityLevel(uPp,rPp)==1
else
set iPp=false
endif
if iPp then
set sPp=NIp
set tPp=$41305934
call UnitRemoveAbility(sPp,tPp)
endif
set NIp=null
set MIp=null
set wPp=null
set uPp=null
set sPp=null
endfunction
function SQu takes nothing returns boolean
local trigger Imu
local playerunitevent Pmu
local trigger Amu
local playerunitevent Dmu
local integer Hmu
local trigger Jmu
local code Kmu
local playerunitevent Lmu
local code Xmu
local trigger Cmu
local real Vmu
local trigger Bmu
local playerunitevent Nmu
local code Mmu
local playerunitevent wQu
local code uQu
local playerunitevent rQu
local code sQu
local playerunitevent tQu
local code iQu
set iy=null
set Sy=1
set cy=CreateTimer()
set oy=CreateTrigger()
set by=CreateTrigger()
set Imu=by
set Pmu=EVENT_PLAYER_UNIT_ATTACKED
set Amu=Imu
set Dmu=Pmu
set Hmu=0
loop
call TriggerRegisterPlayerUnitEvent(Amu,Player(Hmu),Dmu,null)
set Hmu=Hmu+1
exitwhen Hmu==bj_MAX_PLAYER_SLOTS
endloop
set Jmu=by
set Kmu=O1
call TriggerAddAction(Jmu,Kmu)
set Lmu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Xmu=l1
call emO(Lmu,null,Xmu,null)
set Cmu=oy
set Vmu=30.
call TriggerRegisterTimerEvent(Cmu,Vmu,true)
call TriggerAddAction(oy,b1)
set Bmu=oy
call DisableTrigger(Bmu)
set Nmu=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Mmu=y1
call emO(Nmu,null,Mmu,null)
set wQu=EVENT_PLAYER_UNIT_DEATH
set uQu=p1
call emO(wQu,null,uQu,null)
set rQu=EVENT_PLAYER_UNIT_ATTACKED
set sQu=e1
call emO(rQu,null,sQu,null)
set tQu=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iQu=q1
call emO(tQu,null,iQu,null)
set Imu=null
set Pmu=null
set Amu=null
set Dmu=null
set Jmu=null
set Lmu=null
set Cmu=null
set Bmu=null
set Nmu=null
set wQu=null
set rQu=null
set tQu=null
return true
endfunction
function SRl takes nothing returns nothing
set qW=0
call s_c("via function reference PickRace, line 1597")
endfunction
function SSl takes nothing returns nothing
local unit Sil=GetTriggerUnit()
local unit oil=Sil
local player cil=GetOwningPlayer(oil)
local unit Oil
local string lil
local real bil
local real yil
local unit pil
local unittype eil
local unit qil
local string ail
local real nil
local real dil
local unit fil
local unittype Ril
local unit Til
local string Yil
local real Gil
local real gil
local unit hil
local unittype Fil
local unit kil
local string jil
local real xil
local real vil
local unit mil
local unittype Qil
local unit Wil
local string Eil
local real Zil
local real Uil
local unit Iil
local unittype Pil
local unit Ail
local string Dil
local real Hil
local real Jil
local unit Kil
local unittype Lil
local real Xil
local real Cil
local real Vil
local real Bil
local real Nil
local real Mil
local real wSl
local real uSl
local real rSl
local real sSl
local real tSl
local real iSl
if cil==du then
if Ew[2]==true then
set Oil=Sil
set lil="attack"
set Xil=Qw[43]
set Cil=Ww[43]
set bil=Xil
set yil=Cil
call IssuePointOrder(Oil,lil,bil,yil)
set pil=Sil
set eil=UNIT_TYPE_HERO
if IsUnitType(pil,eil) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,43)
endif
else
set qil=Sil
set ail="attack"
set Vil=Qw[19]
set Bil=Ww[19]
set nil=Vil
set dil=Bil
call IssuePointOrder(qil,ail,nil,dil)
set fil=Sil
set Ril=UNIT_TYPE_HERO
if IsUnitType(fil,Ril) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,19)
endif
endif
endif
if cil==nu then
set Til=Sil
set Yil="attack"
set Nil=Qw[19]
set Mil=Ww[19]
set Gil=Nil
set gil=Mil
call IssuePointOrder(Til,Yil,Gil,gil)
set hil=Sil
set Fil=UNIT_TYPE_HERO
if IsUnitType(hil,Fil) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,19)
endif
endif
if cil==fu then
set kil=Sil
set jil="attack"
set wSl=Qw[43]
set uSl=Ww[43]
set xil=wSl
set vil=uSl
call IssuePointOrder(kil,jil,xil,vil)
set mil=Sil
set Qil=UNIT_TYPE_HERO
if IsUnitType(mil,Qil) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,43)
endif
endif
if cil==Ru then
if Ew[1]==true then
set Wil=Sil
set Eil="attack"
set rSl=Qw[19]
set sSl=Ww[19]
set Zil=rSl
set Uil=sSl
call IssuePointOrder(Wil,Eil,Zil,Uil)
set Iil=Sil
set Pil=UNIT_TYPE_HERO
if IsUnitType(Iil,Pil) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,19)
endif
else
set Ail=Sil
set Dil="attack"
set tSl=Qw[43]
set iSl=Ww[43]
set Hil=tSl
set Jil=iSl
call IssuePointOrder(Ail,Dil,Hil,Jil)
set Kil=Sil
set Lil=UNIT_TYPE_HERO
if IsUnitType(Kil,Lil) then
call SaveInteger(qu,GetHandleId(Sil),$6D6F7665,43)
endif
endif
endif
set Sil=null
set cil=null
set oil=null
set Oil=null
set pil=null
set eil=null
set qil=null
set fil=null
set Ril=null
set Til=null
set hil=null
set Fil=null
set kil=null
set mil=null
set Qil=null
set Wil=null
set Iil=null
set Pil=null
set Ail=null
set Kil=null
set Lil=null
endfunction
function SVe takes nothing returns boolean
local playerunitevent tVe=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code iVe=oww_2956
call emO(tVe,null,iVe,null)
set tVe=null
return true
endfunction
function SXc takes nothing returns nothing
local unit PLc=GetTriggerUnit()
local unit DLc=PLc
local player ALc=GetOwningPlayer(DLc)
local unit HLc
local string JLc
local real KLc
local real LLc
local unit XLc
local unittype CLc
local unit VLc
local string BLc
local real NLc
local real MLc
local unit wXc
local unittype uXc
local real rXc
local real sXc
local real tXc
local real iXc
if ALc==nu then
set HLc=PLc
set JLc="attack"
set rXc=Qw[41]
set sXc=Ww[41]
set KLc=rXc
set LLc=sXc
call IssuePointOrder(HLc,JLc,KLc,LLc)
set XLc=PLc
set CLc=UNIT_TYPE_HERO
if IsUnitType(XLc,CLc) then
call SaveInteger(qu,GetHandleId(PLc),$6D6F7665,41)
endif
else
set VLc=PLc
set BLc="attack"
set tXc=Qw[17]
set iXc=Ww[17]
set NLc=tXc
set MLc=iXc
call IssuePointOrder(VLc,BLc,NLc,MLc)
set wXc=PLc
set uXc=UNIT_TYPE_HERO
if IsUnitType(wXc,uXc) then
call SaveInteger(qu,GetHandleId(PLc),$6D6F7665,17)
endif
endif
set PLc=null
set ALc=null
set DLc=null
set HLc=null
set XLc=null
set CLc=null
set VLc=null
set wXc=null
set uXc=null
endfunction
function S_t takes nothing returns nothing
local unit R7t=GetDyingUnit()
local unit b8t=R7t
local group T7t
local filterfunc Y7t
local unit G7t
local group g7t
local group h7t
local filterfunc F7t
local unit k7t
local group j7t
local group x7t
local filterfunc v7t
local unit m7t
local group Q7t
local unit W7t
local real E7t
local real Z7t
local unit U7t
local unit I7t
local real P7t
local real A7t
local unit D7t
local real H7t
local real J7t
local unit K7t
local unit L7t
local real X7t
local real C7t
local unit V7t
local real B7t
local real N7t
local unit M7t
local unit w8t
local real u8t
local real r8t
local unit s8t
local real t8t
local real i8t
local unit S8t
local unit c8t
local real o8t
local real O8t
local unit l8t
local unit y8t
local unit p8t
local unit e8t
local unit q8t
local unit a8t
local unit n8t
local unit d8t
local group f8t
local group R8t
local unit T8t
local unit Y8t
local integer G8t
local boolean g8t
local group h8t
local boolexpr F8t
local unit k8t
local unit j8t
local unit x8t
local group v8t
local group m8t
local unit Q8t
local unit W8t
local integer E8t
local boolean Z8t
local group U8t
local boolexpr I8t
local unit P8t
local unit A8t
local unit D8t
local group H8t
local group J8t
local unit K8t
local unit L8t
local integer X8t
local boolean C8t
local group V8t
local boolexpr B8t
local unit N8t
local unit M8t
local unit w9t
local unittype u9t
local unit r9t
local unittype s9t
local unit t9t
local unit i9t
local unit S9t
local unit c9t
local real o9t
local unit O9t
local unit l9t
local real b9t
local unit y9t
local unittype p9t
local unit e9t
local unittype q9t
local unit a9t
local unit n9t
local unit d9t
local unit f9t
local real R9t
local unit T9t
local unit Y9t
local unittype G9t
local unit g9t
local unittype h9t
local unit F9t
local unit k9t
local unit j9t
local unit x9t
local real v9t
local unit m9t
local unit Q9t
local real W9t
local unit E9t
local unittype Z9t
local unit U9t
local unittype I9t
local unit P9t
local unit A9t
local unit D9t
local unit H9t
local real J9t
local unit K9t
local unit L9t
local unittype X9t
local unit C9t
local unittype V9t
local unit B9t
local unit N9t
local unit M9t
local unit w0t
local real u0t
local unit r0t
local unit s0t
local real t0t
local unit i0t
local unittype S0t
local unit c0t
local unittype o0t
local unit O0t
local unit l0t
local unit b0t
local unit y0t
local real p0t
local unit e0t
local unit q0t
local unittype a0t
local unit n0t
local unittype d0t
local unit f0t
local unit R0t
local unit T0t
local unit Y0t
local real G0t
local unit g0t
local unit h0t
local real F0t
local unit k0t
local unittype j0t
local unit x0t
local unittype v0t
local unit m0t
local unit Q0t
local unit W0t
local unit E0t
local real Z0t
local boolean U0t
local boolean I0t
local group P0t
local real A0t
local group D0t
local real H0t
local group J0t
local real K0t
local boolean L0t
local boolean X0t
local boolean C0t
local boolean V0t
local boolean B0t
local boolean N0t
local boolean M0t
local boolean w_t
local boolean u_t
local boolean r_t
local boolean s_t
local boolean t_t
local boolean i_t
if GetUnitTypeId(b8t)==$6830324C then
set jw=false
endif
set y8t=R7t
if GetUnitTypeId(y8t)==$68303254 then
set xw=false
endif
set p8t=R7t
if GetUnitTypeId(p8t)==$6830324D then
set vw=false
endif
set e8t=R7t
if GetUnitTypeId(e8t)==$68303254 then
set U0t=true
else
set q8t=R7t
set U0t=GetUnitTypeId(q8t)==$6830324D
endif
if U0t then
set I0t=true
else
set a8t=R7t
set I0t=GetUnitTypeId(a8t)==$6830324C
endif
if I0t then
set T7t=CreateGroup()
set Y7t=Filter(arw)
set P0t=T7t
set n8t=R7t
set A0t=GetUnitX(n8t)
set d8t=R7t
call GroupEnumUnitsInRange(P0t,A0t,GetUnitY(d8t),900.,Y7t)
set g7t=T7t
loop
set f8t=g7t
exitwhen not (FirstOfGroup(f8t)!=null)
set R8t=g7t
set T8t=FirstOfGroup(R8t)
call GroupRemoveUnit(R8t,T8t)
set G7t=T8t
set Y8t=G7t
set G8t=1000
set g8t=true
call AddHeroXP(Y8t,G8t,g8t)
endloop
set h8t=T7t
call DestroyGroup(h8t)
set F8t=Y7t
call DestroyBoolExpr(F8t)
endif
set k8t=R7t
if GetUnitTypeId(k8t)==$6830324F then
set h7t=CreateGroup()
set F7t=Filter(arw)
set D0t=h7t
set j8t=R7t
set H0t=GetUnitX(j8t)
set x8t=R7t
call GroupEnumUnitsInRange(D0t,H0t,GetUnitY(x8t),900.,F7t)
set j7t=h7t
loop
set v8t=j7t
exitwhen not (FirstOfGroup(v8t)!=null)
set m8t=j7t
set Q8t=FirstOfGroup(m8t)
call GroupRemoveUnit(m8t,Q8t)
set k7t=Q8t
set W8t=k7t
set E8t=700
set Z8t=true
call AddHeroXP(W8t,E8t,Z8t)
endloop
set U8t=h7t
call DestroyGroup(U8t)
set I8t=F7t
call DestroyBoolExpr(I8t)
endif
set P8t=R7t
if GetUnitTypeId(P8t)==$78303332 then
set x7t=CreateGroup()
set v7t=Filter(arw)
set J0t=x7t
set A8t=R7t
set K0t=GetUnitX(A8t)
set D8t=R7t
call GroupEnumUnitsInRange(J0t,K0t,GetUnitY(D8t),900.,v7t)
set Q7t=x7t
loop
set H8t=Q7t
exitwhen not (FirstOfGroup(H8t)!=null)
set J8t=Q7t
set K8t=FirstOfGroup(J8t)
call GroupRemoveUnit(J8t,K8t)
set m7t=K8t
set L8t=m7t
set X8t=500
set C8t=true
call AddHeroXP(L8t,X8t,C8t)
endloop
set V8t=x7t
call DestroyGroup(V8t)
set B8t=v7t
call DestroyBoolExpr(B8t)
endif
set W7t=GetKillingUnit()
set N8t=W7t
if GetUnitTypeId(N8t)==$78303332 then
set L0t=true
else
set M8t=W7t
set L0t=GetUnitTypeId(M8t)==$6830324F
endif
if L0t then
set w9t=R7t
set u9t=UNIT_TYPE_STRUCTURE
set X0t=IsUnitType(w9t,u9t)==false
else
set X0t=false
endif
if X0t then
set r9t=R7t
set s9t=UNIT_TYPE_HERO
if IsUnitType(r9t,s9t)==true then
set t9t=R7t
set E7t=GetUnitX(t9t)
set i9t=R7t
set Z7t=GetUnitY(i9t)
set S9t=W7t
set U7t=CreateUnit(GetOwningPlayer(S9t),$6E30334E,E7t,Z7t,0.)
set c9t=U7t
set o9t=60.
call UnitApplyTimedLife(c9t,$42544C46,o9t)
set O9t=W7t
set I7t=CreateUnit(GetOwningPlayer(O9t),$6E30334E,E7t,Z7t,0.)
set l9t=I7t
set b9t=60.
call UnitApplyTimedLife(l9t,$42544C46,b9t)
endif
if GetRandomInt(1,100)<=10 then
set y9t=R7t
set p9t=UNIT_TYPE_HERO
set C0t=IsUnitType(y9t,p9t)==false
else
set C0t=false
endif
if C0t then
set e9t=R7t
set q9t=UNIT_TYPE_SUMMONED
set V0t=IsUnitType(e9t,q9t)==false
else
set V0t=false
endif
if V0t then
set a9t=R7t
set P7t=GetUnitX(a9t)
set n9t=R7t
set A7t=GetUnitY(n9t)
set d9t=W7t
set D7t=CreateUnit(GetOwningPlayer(d9t),$6E30334E,P7t,A7t,0.)
set f9t=D7t
set R9t=60.
call UnitApplyTimedLife(f9t,$42544C46,R9t)
endif
endif
set T9t=W7t
if GetUnitTypeId(T9t)==$6830324C then
set Y9t=R7t
set G9t=UNIT_TYPE_STRUCTURE
set B0t=IsUnitType(Y9t,G9t)==false
else
set B0t=false
endif
if B0t then
set g9t=R7t
set h9t=UNIT_TYPE_HERO
if IsUnitType(g9t,h9t)==true then
set F9t=R7t
set H7t=GetUnitX(F9t)
set k9t=R7t
set J7t=GetUnitY(k9t)
set j9t=W7t
set K7t=CreateUnit(GetOwningPlayer(j9t),$6E303348,H7t,J7t,0.)
set x9t=K7t
set v9t=60.
call UnitApplyTimedLife(x9t,$42544C46,v9t)
set m9t=W7t
set L7t=CreateUnit(GetOwningPlayer(m9t),$6E303350,H7t,J7t,0.)
set Q9t=L7t
set W9t=60.
call UnitApplyTimedLife(Q9t,$42544C46,W9t)
endif
if GetRandomInt(1,100)<=20 then
set E9t=R7t
set Z9t=UNIT_TYPE_HERO
set N0t=IsUnitType(E9t,Z9t)==false
else
set N0t=false
endif
if N0t then
set U9t=R7t
set I9t=UNIT_TYPE_SUMMONED
set M0t=IsUnitType(U9t,I9t)==false
else
set M0t=false
endif
if M0t then
set P9t=R7t
set X7t=GetUnitX(P9t)
set A9t=R7t
set C7t=GetUnitY(A9t)
set D9t=W7t
set V7t=CreateUnit(GetOwningPlayer(D9t),$6E303348,X7t,C7t,0.)
set H9t=V7t
set J9t=60.
call UnitApplyTimedLife(H9t,$42544C46,J9t)
endif
endif
set K9t=W7t
if GetUnitTypeId(K9t)==$68303254 then
set L9t=R7t
set X9t=UNIT_TYPE_STRUCTURE
set w_t=IsUnitType(L9t,X9t)==false
else
set w_t=false
endif
if w_t then
set C9t=R7t
set V9t=UNIT_TYPE_HERO
if IsUnitType(C9t,V9t)==true then
set B9t=R7t
set B7t=GetUnitX(B9t)
set N9t=R7t
set N7t=GetUnitY(N9t)
set M9t=W7t
set M7t=CreateUnit(GetOwningPlayer(M9t),$6E30334A,B7t,N7t,0.)
set w0t=M7t
set u0t=60.
call UnitApplyTimedLife(w0t,$42544C46,u0t)
set r0t=W7t
set w8t=CreateUnit(GetOwningPlayer(r0t),$6E30334A,B7t,N7t,0.)
set s0t=w8t
set t0t=60.
call UnitApplyTimedLife(s0t,$42544C46,t0t)
endif
if GetRandomInt(1,100)<=20 then
set i0t=R7t
set S0t=UNIT_TYPE_HERO
set u_t=IsUnitType(i0t,S0t)==false
else
set u_t=false
endif
if u_t then
set c0t=R7t
set o0t=UNIT_TYPE_SUMMONED
set r_t=IsUnitType(c0t,o0t)==false
else
set r_t=false
endif
if r_t then
set O0t=R7t
set u8t=GetUnitX(O0t)
set l0t=R7t
set r8t=GetUnitY(l0t)
set b0t=W7t
set s8t=CreateUnit(GetOwningPlayer(b0t),$6E30334A,u8t,r8t,0.)
set y0t=s8t
set p0t=60.
call UnitApplyTimedLife(y0t,$42544C46,p0t)
endif
endif
set e0t=W7t
if GetUnitTypeId(e0t)==$6830324D then
set q0t=R7t
set a0t=UNIT_TYPE_STRUCTURE
set s_t=IsUnitType(q0t,a0t)==false
else
set s_t=false
endif
if s_t then
set n0t=R7t
set d0t=UNIT_TYPE_HERO
if IsUnitType(n0t,d0t)==true then
set f0t=R7t
set t8t=GetUnitX(f0t)
set R0t=R7t
set i8t=GetUnitY(R0t)
set T0t=W7t
set S8t=CreateUnit(GetOwningPlayer(T0t),$6E30334B,t8t,i8t,0.)
set Y0t=S8t
set G0t=60.
call UnitApplyTimedLife(Y0t,$42544C46,G0t)
set g0t=W7t
set c8t=CreateUnit(GetOwningPlayer(g0t),$6E30334B,t8t,i8t,0.)
set h0t=c8t
set F0t=60.
call UnitApplyTimedLife(h0t,$42544C46,F0t)
endif
if GetRandomInt(1,100)<=20 then
set k0t=R7t
set j0t=UNIT_TYPE_HERO
set t_t=IsUnitType(k0t,j0t)==false
else
set t_t=false
endif
if t_t then
set x0t=R7t
set v0t=UNIT_TYPE_SUMMONED
set i_t=IsUnitType(x0t,v0t)==false
else
set i_t=false
endif
if i_t then
set m0t=R7t
set o8t=GetUnitX(m0t)
set Q0t=R7t
set O8t=GetUnitY(Q0t)
set W0t=W7t
set l8t=CreateUnit(GetOwningPlayer(W0t),$6E30334B,o8t,O8t,0.)
set E0t=l8t
set Z0t=60.
call UnitApplyTimedLife(E0t,$42544C46,Z0t)
endif
endif
set R7t=null
set T7t=null
set Y7t=null
set G7t=null
set g7t=null
set h7t=null
set F7t=null
set k7t=null
set j7t=null
set x7t=null
set v7t=null
set m7t=null
set Q7t=null
set W7t=null
set U7t=null
set I7t=null
set D7t=null
set K7t=null
set L7t=null
set V7t=null
set M7t=null
set w8t=null
set s8t=null
set S8t=null
set c8t=null
set l8t=null
set b8t=null
set y8t=null
set p8t=null
set e8t=null
set q8t=null
set a8t=null
set n8t=null
set d8t=null
set f8t=null
set R8t=null
set T8t=null
set Y8t=null
set h8t=null
set F8t=null
set k8t=null
set j8t=null
set x8t=null
set v8t=null
set m8t=null
set Q8t=null
set W8t=null
set U8t=null
set I8t=null
set P8t=null
set A8t=null
set D8t=null
set H8t=null
set J8t=null
set K8t=null
set L8t=null
set V8t=null
set B8t=null
set N8t=null
set M8t=null
set w9t=null
set u9t=null
set r9t=null
set s9t=null
set t9t=null
set i9t=null
set S9t=null
set c9t=null
set O9t=null
set l9t=null
set y9t=null
set p9t=null
set e9t=null
set q9t=null
set a9t=null
set n9t=null
set d9t=null
set f9t=null
set T9t=null
set Y9t=null
set G9t=null
set g9t=null
set h9t=null
set F9t=null
set k9t=null
set j9t=null
set x9t=null
set m9t=null
set Q9t=null
set E9t=null
set Z9t=null
set U9t=null
set I9t=null
set P9t=null
set A9t=null
set D9t=null
set H9t=null
set K9t=null
set L9t=null
set X9t=null
set C9t=null
set V9t=null
set B9t=null
set N9t=null
set M9t=null
set w0t=null
set r0t=null
set s0t=null
set i0t=null
set S0t=null
set c0t=null
set o0t=null
set O0t=null
set l0t=null
set b0t=null
set y0t=null
set e0t=null
set q0t=null
set a0t=null
set n0t=null
set d0t=null
set f0t=null
set R0t=null
set T0t=null
set Y0t=null
set g0t=null
set h0t=null
set k0t=null
set j0t=null
set x0t=null
set v0t=null
set m0t=null
set Q0t=null
set W0t=null
set E0t=null
set P0t=null
set D0t=null
set J0t=null
endfunction
function Sar takes nothing returns nothing
local player Vqr
local integer Bqr
local player Nqr
local camerafield Mqr
local real war
local real uar
local player rar
local camerafield sar
local real tar
local real iar
if SubString(GetEventPlayerChatString(),0,2)=="-z" then
set Vqr=GetTriggerPlayer()
set Bqr=S2I(SubString(GetEventPlayerChatString(),2,7))
set Nqr=Vqr
set Mqr=CAMERA_FIELD_TARGET_DISTANCE
set war=2000.+200.*Bqr
set uar=1.
set rar=Nqr
set sar=Mqr
set tar=war
set iar=uar
if GetLocalPlayer()==rar then
call SetCameraField(sar,tar,iar)
endif
endif
set Vqr=null
set Nqr=null
set Mqr=null
set rar=null
set sar=null
endfunction
function Seu takes nothing returns boolean
set nq=bF
set dq=yF
return true
endfunction
function iVw takes string sKw returns nothing
local unit tKw
local integer iKw
local integer SKw
local integer cKw
local player oKw
local unit OKw
local unit lKw
local unittype bKw
local unit yKw
local unit pKw
local unit eKw
local integer qKw
local unit aKw
local integer nKw
local unit dKw
local integer fKw
local unit RKw
local integer TKw
local unit YKw
local integer GKw
local unit gKw
local integer hKw
local string FKw
local integer kKw
local real jKw
local integer xKw
local string vKw
local sound mKw
local sound QKw
local sound WKw
local sound EKw
local sound ZKw
local sound UKw
local sound IKw
local sound PKw
local sound AKw
local sound DKw
local sound HKw
local sound JKw
local sound KKw
local sound LKw
local sound XKw
local sound CKw
local sound VKw
local sound BKw
local sound NKw
local sound MKw
local sound wLw
local sound uLw
local sound rLw
local sound sLw
local sound tLw
local sound iLw
local sound SLw
local sound cLw
local sound oLw
local sound OLw
local sound lLw
local sound bLw
local sound yLw
local sound pLw
local sound eLw
local sound qLw
local sound aLw
local sound nLw
local sound dLw
local sound fLw
local sound RLw
local sound TLw
local sound YLw
local sound GLw
local sound gLw
local sound hLw
local sound FLw
local sound kLw
local sound jLw
local sound xLw
local sound vLw
local sound mLw
local sound QLw
local sound WLw
local sound ELw
local sound ZLw
local sound ULw
local sound ILw
local sound PLw
local sound ALw
local sound DLw
local sound HLw
local sound JLw
local sound KLw
local sound LLw
local sound XLw
local sound CLw
local sound VLw
local sound BLw
local sound NLw
local sound MLw
local sound wXw
local sound uXw
local sound rXw
local sound sXw
local sound tXw
local sound iXw
local sound SXw
local sound cXw
local sound oXw
local sound OXw
local sound lXw
local sound bXw
local sound yXw
local sound pXw
local sound eXw
local sound qXw
local sound aXw
local sound nXw
local sound dXw
local sound fXw
local sound RXw
local sound TXw
local sound YXw
local sound GXw
local sound gXw
local sound hXw
local sound FXw
local sound kXw
local sound jXw
local sound xXw
local sound vXw
local sound mXw
local sound QXw
local sound WXw
local sound EXw
local sound ZXw
local sound UXw
local sound IXw
local sound PXw
local sound AXw
local sound DXw
local sound HXw
local sound JXw
local sound KXw
local sound LXw
local sound XXw
local sound CXw
local unit VXw
local integer BXw
local unit NXw
local integer MXw
local sound wCw
local sound uCw
local sound rCw
local sound sCw
local sound tCw
local sound iCw
local unit SCw
local integer cCw
local unit oCw
local integer OCw
local sound lCw
local sound bCw
local sound yCw
local sound pCw
local sound eCw
local sound qCw
local sound aCw
local sound nCw
local sound dCw
local sound fCw
local sound RCw
local sound TCw
local sound YCw
local sound GCw
local sound gCw
local sound hCw
local sound FCw
local sound kCw
local sound jCw
local sound xCw
local sound vCw
local sound mCw
local sound QCw
local sound WCw
local sound ECw
local sound ZCw
local sound UCw
local sound ICw
local sound PCw
local sound ACw
local sound DCw
local sound HCw
local sound JCw
local sound KCw
local sound LCw
local sound XCw
local sound CCw
local sound VCw
local sound BCw
local sound NCw
local sound MCw
local sound wVw
local sound uVw
local sound rVw
local sound sVw
local boolean tVw
set aW[qW]=sKw
set qW=qW+1
set tKw=GetTriggerUnit()
set OKw=tKw
set oKw=GetOwningPlayer(OKw)
set iKw=GetPlayerId(oKw)
set lKw=tKw
set bKw=UNIT_TYPE_HERO
if IsUnitType(lKw,bKw) then
set yKw=tKw
set tVw=IsUnitIllusion(yKw)==false
else
set tVw=false
endif
if tVw and iKw==4 or iKw==5 or iKw==6 or iKw==7 and S[iKw]==0 then
set pKw=tKw
set SKw=GetUnitTypeId(pKw)
set eKw=tKw
set qKw=$41323451
if GetUnitAbilityLevel(eKw,qKw)>0 then
set aKw=tKw
set nKw=$41323451
call UnitRemoveAbility(aKw,nKw)
set dKw=tKw
set fKw=$41323453
call UnitRemoveAbility(dKw,fKw)
set RKw=tKw
set TKw=$41323454
call UnitRemoveAbility(RKw,TKw)
set YKw=tKw
set GKw=$41323455
call UnitRemoveAbility(YKw,GKw)
set gKw=tKw
set hKw=$41323456
call UnitRemoveAbility(gKw,hKw)
set FKw="when calling alloc_CallbackSingle_doAfter_HeroesSound in HeroesSound, line 107"
set aW[qW]=FKw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set kKw=fF
set RF[kKw]=714
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_HeroesSound.","when calling error in HeroesSound, line 107")
set kKw=0
endif
else
set dF=dF-1
set kKw=nF[dF]
set RF[kKw]=714
endif
set qW=qW-1
set cKw=kKw
set Hx[cKw]=tKw
set jKw=5.
set xKw=cKw
set vKw="when calling doAfter in HeroesSound, line 107"
set aW[qW]=vKw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),jKw,xKw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if SKw==$484D3037 then
set mKw=Jn
call StartSound(mKw)
endif
if SKw==$484D3039 then
set QKw=Gq
call StartSound(QKw)
endif
if SKw==$484D3061 then
set WKw=gq
call StartSound(WKw)
endif
if SKw==$484D3062 then
if GetRandomInt(1,2)==1 then
set EKw=hq
call StartSound(EKw)
else
set ZKw=Fq
call StartSound(ZKw)
endif
endif
if SKw==$484D3063 then
set UKw=kq
call StartSound(UKw)
endif
if SKw==$484D3036 then
set IKw=Ea
call StartSound(IKw)
endif
if SKw==$484D3038 then
set PKw=cg
call StartSound(PKw)
endif
if SKw==$484D3034 then
set AKw=vq
call StartSound(AKw)
endif
if SKw==$48303247 then
set DKw=mq
call StartSound(DKw)
endif
if SKw==$48303248 then
set HKw=Qq
call StartSound(HKw)
endif
if SKw==$48303249 then
set JKw=Wq
call StartSound(JKw)
endif
if SKw==$4830324A then
set KKw=Dq
call StartSound(KKw)
endif
if SKw==$4830324B then
set LKw=Hq
call StartSound(LKw)
endif
if SKw==$484D306B then
set XKw=Eq
call StartSound(XKw)
endif
if SKw==$484D306A then
set CKw=Zq
call StartSound(CKw)
endif
if SKw==$484D3068 then
set VKw=Uq
call StartSound(VKw)
endif
if SKw==$484D3069 then
if GetRandomInt(1,2)==1 then
set BKw=Pq
call StartSound(BKw)
else
set NKw=Aq
call StartSound(NKw)
endif
endif
if SKw==$484D3033 then
set MKw=Iq
call StartSound(MKw)
endif
if SKw==$55303041 then
set wLw=Jq
call StartSound(wLw)
endif
if SKw==$55303042 then
set uLw=Kq
call StartSound(uLw)
endif
if SKw==$55303043 then
set rLw=Lq
call StartSound(rLw)
endif
if SKw==$55303045 then
set sLw=Xq
call StartSound(sLw)
endif
if SKw==$55303046 then
set tLw=Cq
call StartSound(tLw)
endif
if SKw==$55303047 then
set iLw=Vq
call StartSound(iLw)
endif
if SKw==$55303048 then
set SLw=Bq
call StartSound(SLw)
endif
if SKw==$55303049 then
set cLw=Nq
call StartSound(cLw)
endif
if SKw==$5530304A then
set oLw=Mq
call StartSound(oLw)
endif
if SKw==$5530304D then
set OLw=Bq
call StartSound(OLw)
endif
if SKw==$4F303258 then
set lLw=ta
call StartSound(lLw)
endif
if SKw==$4F303337 then
set bLw=ia
call StartSound(bLw)
endif
if SKw==$4F303338 then
set yLw=Sa
call StartSound(yLw)
endif
if SKw==$4F303339 then
set pLw=ca
call StartSound(pLw)
endif
if SKw==$4F303430 then
set eLw=oa
call StartSound(eLw)
endif
if SKw==$4F303344 then
set qLw=ba
call StartSound(qLw)
endif
if SKw==$4830314A then
set aLw=Oa
call StartSound(aLw)
endif
if SKw==$4E303149 then
set nLw=la
call StartSound(nLw)
endif
if SKw==$4F303259 then
set dLw=xS
call StartSound(dLw)
endif
if SKw==$4870616C then
if GetRandomInt(1,2)==1 then
set fLw=bt
call StartSound(fLw)
else
set RLw=yt
call StartSound(RLw)
endif
endif
if SKw==$4861706D then
if GetRandomInt(1,2)==1 then
set TLw=Fa
call StartSound(TLw)
else
set YLw=ka
call StartSound(YLw)
endif
endif
if SKw==$48616D67 then
if GetRandomInt(1,2)==1 then
set GLw=rt
call StartSound(GLw)
else
set gLw=st
call StartSound(gLw)
endif
endif
if SKw==$4867616D then
set hLw=pt
call StartSound(hLw)
endif
if SKw==$486A6169 then
if GetRandomInt(1,2)==1 then
set FLw=ot
call StartSound(FLw)
else
set kLw=Ot
call StartSound(kLw)
endif
endif
if SKw==$4E627374 then
if GetRandomInt(1,2)==1 then
set jLw=Pt
call StartSound(jLw)
else
set xLw=At
call StartSound(xLw)
endif
endif
if SKw==$4F677268 then
if GetRandomInt(1,2)==1 then
set vLw=Dt
call StartSound(vLw)
else
set mLw=Ht
call StartSound(mLw)
endif
endif
if SKw==$4F746872 then
if GetRandomInt(1,2)==1 then
set QLw=Kt
call StartSound(QLw)
else
set WLw=Lt
call StartSound(WLw)
endif
endif
if SKw==$4E736A73 then
if GetRandomInt(1,2)==1 then
set ELw=Ut
call StartSound(ELw)
else
set ZLw=It
call StartSound(ZLw)
endif
endif
if SKw==$5530304C then
set ULw=wa
call StartSound(ULw)
endif
if SKw==$486D6B67 then
if GetRandomInt(1,2)==1 then
set ILw=Rt
call StartSound(ILw)
else
set PLw=Tt
call StartSound(PLw)
endif
endif
if SKw==$486B616C then
if GetRandomInt(1,2)==1 then
set ALw=qt
call StartSound(ALw)
else
set DLw=at
call StartSound(DLw)
endif
endif
if SKw==$48616E74 then
if GetRandomInt(1,2)==1 then
set HLw=Gt
call StartSound(HLw)
else
set JLw=gt
call StartSound(JLw)
endif
endif
if SKw==$48686B6C then
if GetRandomInt(1,2)==1 then
set KLw=dt
call StartSound(KLw)
else
set LLw=ft
call StartSound(LLw)
endif
endif
if SKw==$45777264 then
if GetRandomInt(1,2)==1 then
set XLw=pS
call StartSound(XLw)
else
set CLw=yS
call StartSound(CLw)
endif
endif
if SKw==$456D6F6F then
if GetRandomInt(1,2)==1 then
set VLw=TS
call StartSound(VLw)
else
set BLw=YS
call StartSound(BLw)
endif
endif
if SKw==$45667572 then
if GetRandomInt(1,2)==1 then
set NLw=oS
call StartSound(NLw)
else
set MLw=OS
call StartSound(MLw)
endif
endif
if SKw==$4563656E then
set wXw=fS
call StartSound(wXw)
endif
if SKw==$456B6565 then
if GetRandomInt(1,2)==1 then
set uXw=cS
call StartSound(uXw)
else
set rXw=iS
call StartSound(rXw)
endif
endif
if SKw==$45303039 then
set sXw=sa
call StartSound(sXw)
endif
if SKw==$4F746368 then
if GetRandomInt(1,2)==1 then
set tXw=bi
call StartSound(tXw)
else
set iXw=yi
call StartSound(iXw)
endif
endif
if SKw==$4F73616D then
if GetRandomInt(1,2)==1 then
set SXw=ii
call StartSound(SXw)
else
set cXw=Si
call StartSound(cXw)
endif
endif
if SKw==$4F676C64 then
set oXw=oi
call StartSound(oXw)
endif
if SKw==$4F636232 then
set OXw=ei
call StartSound(OXw)
endif
if SKw==$4F636268 then
set lXw=pi
call StartSound(lXw)
endif
if SKw==$4F303443 then
set bXw=Oi
call StartSound(bXw)
endif
if SKw==$45696C6C then
if GetRandomInt(1,2)==1 then
set yXw=DS
call StartSound(yXw)
else
set pXw=HS
call StartSound(pXw)
endif
endif
if SKw==$45776172 then
if GetRandomInt(1,2)==1 then
set eXw=JS
call StartSound(eXw)
else
set qXw=KS
call StartSound(qXw)
endif
endif
if SKw==$48303238 then
if GetRandomInt(1,2)==1 then
set aXw=PS
call StartSound(aXw)
else
set nXw=AS
call StartSound(nXw)
endif
endif
if SKw==$45747972 then
set dXw=US
call StartSound(dXw)
endif
if SKw==$484D3032 then
set fXw=vg
call StartSound(fXw)
endif
if SKw==$4F626C61 then
if GetRandomInt(1,2)==1 then
set RXw=si
call StartSound(RXw)
else
set TXw=ti
call StartSound(TXw)
endif
endif
if SKw==$4F736864 then
if GetRandomInt(1,2)==1 then
set YXw=Bt
call StartSound(YXw)
else
set GXw=Nt
call StartSound(GXw)
endif
endif
if SKw==$4F647274 then
if GetRandomInt(1,2)==1 then
set gXw=wi
call StartSound(gXw)
else
set hXw=ui
call StartSound(hXw)
endif
endif
if SKw==$4F726578 then
set FXw=Xt
call StartSound(FXw)
endif
if SKw==$4F726B6E then
if GetRandomInt(1,2)==1 then
set kXw=Ct
call StartSound(kXw)
else
set jXw=Vt
call StartSound(jXw)
endif
endif
if SKw==$45303037 then
if GetRandomInt(1,2)==1 then
set xXw=ua
call StartSound(xXw)
else
set vXw=ra
call StartSound(vXw)
endif
endif
if SKw==$4E726F62 then
if GetRandomInt(1,2)==1 then
set mXw=ht
call StartSound(mXw)
else
set QXw=Ft
call StartSound(QXw)
endif
endif
if SKw==$4E616C63 then
if GetRandomInt(1,2)==1 then
set WXw=kt
call StartSound(WXw)
else
set EXw=jt
call StartSound(EXw)
endif
endif
if SKw==$4E74696E then
if GetRandomInt(1,2)==1 then
set ZXw=vt
call StartSound(ZXw)
else
set UXw=mt
call StartSound(UXw)
endif
endif
if SKw==$4864676F then
if GetRandomInt(1,2)==1 then
set IXw=Wt
call StartSound(IXw)
else
set PXw=Et
call StartSound(PXw)
endif
endif
if SKw==$484D3035 then
set AXw=og
call StartSound(AXw)
endif
if SKw==$484D3064 then
if GetRandomInt(1,2)==1 then
set DXw=ya
call StartSound(DXw)
else
set HXw=pa
call StartSound(HXw)
endif
endif
if SKw==$484D3067 then
if GetRandomInt(1,2)==1 then
set JXw=na
call StartSound(JXw)
else
set KXw=da
call StartSound(KXw)
endif
endif
if SKw==$484D3066 then
if GetRandomInt(1,2)==1 then
set LXw=ea
call StartSound(LXw)
else
set XXw=qa
call StartSound(XXw)
endif
endif
if SKw==$484D3065 then
set CXw=aa
call StartSound(CXw)
set VXw=tKw
set BXw=$4131354D
if GetUnitAbilityLevel(VXw,BXw)==1 then
set NXw=tKw
set MXw=$4131354D
call UnitRemoveAbility(NXw,MXw)
endif
endif
if SKw==$456D3173 then
set wCw=rf
call StartSound(wCw)
endif
if SKw==$4E706C68 then
set uCw=Yi
call StartSound(uCw)
endif
if SKw==$55647265 then
if GetRandomInt(1,2)==1 then
set rCw=hi
call StartSound(rCw)
else
set sCw=Fi
call StartSound(sCw)
endif
endif
if SKw==$4E666972 then
if GetRandomInt(1,2)==1 then
set tCw=Gi
call StartSound(tCw)
else
set iCw=gi
call StartSound(iCw)
endif
endif
if SKw==$5563726C then
set SCw=tKw
set cCw=$41313730
if GetUnitAbilityLevel(SCw,cCw)>0 then
set oCw=tKw
set OCw=$41313730
call UnitRemoveAbility(oCw,OCw)
endif
if GetRandomInt(1,2)==1 then
set lCw=fi
call StartSound(lCw)
else
set bCw=Ri
call StartSound(bCw)
endif
endif
if SKw==$55776172 then
if GetRandomInt(1,2)==1 then
set yCw=di
call StartSound(yCw)
else
set pCw=ai
call StartSound(pCw)
endif
endif
if SKw==$4F706768 then
if GetRandomInt(1,2)==1 then
set eCw=Xi
call StartSound(eCw)
else
set qCw=Ci
call StartSound(qCw)
endif
endif
if SKw==$4E626263 then
if GetRandomInt(1,2)==1 then
set aCw=Ni
call StartSound(aCw)
else
set nCw=Mi
call StartSound(nCw)
endif
endif
if SKw==$4F666172 then
if GetRandomInt(1,2)==1 then
set dCw=Ki
call StartSound(dCw)
else
set fCw=Li
call StartSound(fCw)
endif
endif
if SKw==$5562616C then
set RCw=Bi
call StartSound(RCw)
endif
if SKw==$4E6D616E then
if GetRandomInt(1,2)==1 then
set TCw=wS
call StartSound(TCw)
else
set YCw=uS
call StartSound(YCw)
endif
endif
if SKw==$4F303431 then
set GCw=fa
call StartSound(GCw)
endif
if SKw==$4F303432 then
set gCw=Ra
call StartSound(gCw)
endif
if SKw==$4F303433 then
set hCw=Ta
call StartSound(hCw)
endif
if SKw==$4F303434 then
set FCw=Ya
call StartSound(FCw)
endif
if SKw==$4F303435 then
set kCw=Ga
call StartSound(kCw)
endif
if SKw==$4F303436 then
if GetRandomInt(1,2)==1 then
set jCw=tt
call StartSound(jCw)
else
set xCw=St
call StartSound(xCw)
endif
endif
if SKw==$4F303438 then
set vCw=ga
call StartSound(vCw)
endif
if SKw==$4F303439 then
set mCw=ha
call StartSound(mCw)
set kO[SKw]=false
endif
if SKw==$4F303437 then
if GetRandomInt(1,2)==1 then
set QCw=ot
call StartSound(QCw)
else
set WCw=Ot
call StartSound(WCw)
endif
endif
if SKw==$55646561 then
if GetRandomInt(1,2)==1 then
set ECw=Qi
call StartSound(ECw)
else
set ZCw=Wi
call StartSound(ZCw)
endif
endif
if SKw==$4E62726E then
if GetRandomInt(1,2)==1 then
set UCw=Hi
call StartSound(UCw)
else
set ICw=Ji
call StartSound(ICw)
endif
endif
if SKw==$556C6963 then
set PCw=Ui
call StartSound(PCw)
endif
if SKw==$556B746C then
if GetRandomInt(1,2)==1 then
set ACw=Ei
call StartSound(ACw)
else
set DCw=Zi
call StartSound(DCw)
endif
endif
if SKw==$48617266 then
if GetRandomInt(1,2)==1 then
set HCw=Pi
call StartSound(HCw)
else
set JCw=Ai
call StartSound(JCw)
endif
endif
if SKw==$55616E62 then
if GetRandomInt(1,2)==1 then
set KCw=ki
call StartSound(KCw)
else
set LCw=ji
call StartSound(LCw)
endif
endif
if SKw==$55303130 then
set XCw=Ii
call StartSound(XCw)
endif
if SKw==$4564656D then
if GetRandomInt(1,2)==1 then
set CCw=ES
call StartSound(CCw)
else
set VCw=ZS
call StartSound(VCw)
endif
endif
if SKw==$4E6E6773 then
if GetRandomInt(1,2)==1 then
set BCw=mS
call StartSound(BCw)
else
set NCw=QS
call StartSound(NCw)
endif
endif
if SKw==$456D6672 then
if GetRandomInt(1,2)==1 then
set MCw=QS
call StartSound(MCw)
else
set wVw=gS
call StartSound(wVw)
endif
endif
if SKw==$456D6E73 then
set uVw=xS
call StartSound(uVw)
endif
if SKw==$45657669 then
if GetRandomInt(1,2)==1 then
set rVw=FS
call StartSound(rVw)
else
set sVw=kS
call StartSound(sVw)
endif
endif
endif
set qW=qW-1
set tKw=null
set oKw=null
set OKw=null
set lKw=null
set bKw=null
set yKw=null
set pKw=null
set eKw=null
set aKw=null
set dKw=null
set RKw=null
set YKw=null
set gKw=null
set mKw=null
set QKw=null
set WKw=null
set EKw=null
set ZKw=null
set UKw=null
set IKw=null
set PKw=null
set AKw=null
set DKw=null
set HKw=null
set JKw=null
set KKw=null
set LKw=null
set XKw=null
set CKw=null
set VKw=null
set BKw=null
set NKw=null
set MKw=null
set wLw=null
set uLw=null
set rLw=null
set sLw=null
set tLw=null
set iLw=null
set SLw=null
set cLw=null
set oLw=null
set OLw=null
set lLw=null
set bLw=null
set yLw=null
set pLw=null
set eLw=null
set qLw=null
set aLw=null
set nLw=null
set dLw=null
set fLw=null
set RLw=null
set TLw=null
set YLw=null
set GLw=null
set gLw=null
set hLw=null
set FLw=null
set kLw=null
set jLw=null
set xLw=null
set vLw=null
set mLw=null
set QLw=null
set WLw=null
set ELw=null
set ZLw=null
set ULw=null
set ILw=null
set PLw=null
set ALw=null
set DLw=null
set HLw=null
set JLw=null
set KLw=null
set LLw=null
set XLw=null
set CLw=null
set VLw=null
set BLw=null
set NLw=null
set MLw=null
set wXw=null
set uXw=null
set rXw=null
set sXw=null
set tXw=null
set iXw=null
set SXw=null
set cXw=null
set oXw=null
set OXw=null
set lXw=null
set bXw=null
set yXw=null
set pXw=null
set eXw=null
set qXw=null
set aXw=null
set nXw=null
set dXw=null
set fXw=null
set RXw=null
set TXw=null
set YXw=null
set GXw=null
set gXw=null
set hXw=null
set FXw=null
set kXw=null
set jXw=null
set xXw=null
set vXw=null
set mXw=null
set QXw=null
set WXw=null
set EXw=null
set ZXw=null
set UXw=null
set IXw=null
set PXw=null
set AXw=null
set DXw=null
set HXw=null
set JXw=null
set KXw=null
set LXw=null
set XXw=null
set CXw=null
set VXw=null
set NXw=null
set wCw=null
set uCw=null
set rCw=null
set sCw=null
set tCw=null
set iCw=null
set SCw=null
set oCw=null
set lCw=null
set bCw=null
set yCw=null
set pCw=null
set eCw=null
set qCw=null
set aCw=null
set nCw=null
set dCw=null
set fCw=null
set RCw=null
set TCw=null
set YCw=null
set GCw=null
set gCw=null
set hCw=null
set FCw=null
set kCw=null
set jCw=null
set xCw=null
set vCw=null
set mCw=null
set QCw=null
set WCw=null
set ECw=null
set ZCw=null
set UCw=null
set ICw=null
set PCw=null
set ACw=null
set DCw=null
set HCw=null
set JCw=null
set KCw=null
set LCw=null
set XCw=null
set CCw=null
set VCw=null
set BCw=null
set NCw=null
set MCw=null
set wVw=null
set uVw=null
set rVw=null
set sVw=null
endfunction
function Sit takes nothing returns nothing
set qW=0
call iVw("via function reference HeroesSound, line 530")
endfunction
function Sju takes nothing returns nothing
local unit Uku=GetSpellAbilityUnit()
local unit Dku=Uku
local integer Hku=$41313357
local integer Iku=GetUnitAbilityLevel(Dku,Hku)
local unit Pku=GetEnumUnit()
local unit Jku=Uku
local player tju=GetOwningPlayer(Jku)
local unit Kku=Pku
local real iju=GetUnitX(Kku)
local unit Lku=Pku
local unit Aku=CreateUnit(tju,$65303041,iju,GetUnitY(Lku),0.)
local unit Xku=Aku
local real Cku=5.
local unit Vku
local integer Bku
local unit Nku
local integer Mku
local integer wju
local unit uju
local string rju
local widget sju
call UnitApplyTimedLife(Xku,$42544C46,Cku)
set Vku=Aku
set Bku=$4131335A
call UnitAddAbility(Vku,Bku)
set Nku=Aku
set Mku=$4131335A
set wju=Iku
call SetUnitAbilityLevel(Nku,Mku,wju)
set uju=Aku
set rju="attack"
set sju=Pku
call IssueTargetOrder(uju,rju,sju)
set Uku=null
set Pku=null
set Aku=null
set Dku=null
set Jku=null
set Kku=null
set Lku=null
set Xku=null
set Vku=null
set Nku=null
set uju=null
set sju=null
set tju=null
endfunction
function Skt takes nothing returns boolean
local string skt
local playerunitevent tkt
local code ikt
set qW=0
set skt="via function reference RegisterEvents, line 1"
set aW[qW]=skt
set qW=qW+1
set sG=SRr("when calling new_HashMap in RegisterEvents, line 55")
set tkt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set ikt=ftw
call emO(tkt,null,ikt,null)
set qW=qW-1
set tkt=null
return true
endfunction
function Soi takes nothing returns boolean
return true
endfunction
function SuS takes nothing returns boolean
local trigger HwS
local trigger JwS
local playerunitevent KwS
local trigger LwS
local playerunitevent XwS
local integer CwS
local trigger VwS
local boolexpr BwS
local trigger NwS
local trigger MwS
local playerunitevent wuS
local trigger uuS
local playerunitevent ruS
local integer suS
local trigger tuS
local boolexpr iuS
set Tq=CreateTrigger()
set Yq=CreateTrigger()
set HwS=Tq
call DisableTrigger(HwS)
set JwS=Tq
set KwS=EVENT_PLAYER_HERO_REVIVE_FINISH
set LwS=JwS
set XwS=KwS
set CwS=0
loop
call TriggerRegisterPlayerUnitEvent(LwS,Player(CwS),XwS,null)
set CwS=CwS+1
exitwhen CwS==bj_MAX_PLAYER_SLOTS
endloop
set VwS=Tq
set BwS=Condition(s5)
call TriggerAddCondition(VwS,BwS)
set NwS=Yq
call DisableTrigger(NwS)
set MwS=Yq
set wuS=EVENT_PLAYER_UNIT_DEATH
set uuS=MwS
set ruS=wuS
set suS=0
loop
call TriggerRegisterPlayerUnitEvent(uuS,Player(suS),ruS,null)
set suS=suS+1
exitwhen suS==bj_MAX_PLAYER_SLOTS
endloop
set tuS=Yq
set iuS=Condition(t5)
call TriggerAddCondition(tuS,iuS)
set HwS=null
set JwS=null
set KwS=null
set LwS=null
set XwS=null
set VwS=null
set BwS=null
set NwS=null
set MwS=null
set wuS=null
set uuS=null
set ruS=null
set tuS=null
set iuS=null
return true
endfunction
function Sxy takes nothing returns nothing
local unit Sjy=GetTriggerUnit()
local unit ojy=Sjy
local player cjy=GetOwningPlayer(ojy)
local unit Ojy
local string ljy
local real bjy
local real yjy
local unit pjy
local unittype ejy
local unit qjy
local string ajy
local real njy
local real djy
local unit fjy
local unittype Rjy
local unit Tjy
local string Yjy
local real Gjy
local real gjy
local unit hjy
local unittype Fjy
local unit kjy
local string jjy
local real xjy
local real vjy
local unit mjy
local unittype Qjy
local unit Wjy
local string Ejy
local real Zjy
local real Ujy
local unit Ijy
local unittype Pjy
local unit Ajy
local string Djy
local real Hjy
local real Jjy
local unit Kjy
local unittype Ljy
local real Xjy
local real Cjy
local real Vjy
local real Bjy
local real Njy
local real Mjy
local real wxy
local real uxy
local real rxy
local real sxy
local real txy
local real ixy
if cjy==du then
if Ew[2]==true then
set Ojy=Sjy
set ljy="attack"
set Xjy=Qw[28]
set Cjy=Ww[28]
set bjy=Xjy
set yjy=Cjy
call IssuePointOrder(Ojy,ljy,bjy,yjy)
set pjy=Sjy
set ejy=UNIT_TYPE_HERO
if IsUnitType(pjy,ejy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,28)
endif
else
set qjy=Sjy
set ajy="attack"
set Vjy=Qw[49]
set Bjy=Ww[49]
set njy=Vjy
set djy=Bjy
call IssuePointOrder(qjy,ajy,njy,djy)
set fjy=Sjy
set Rjy=UNIT_TYPE_HERO
if IsUnitType(fjy,Rjy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,49)
endif
endif
endif
if cjy==nu then
set Tjy=Sjy
set Yjy="attack"
set Njy=Qw[49]
set Mjy=Ww[49]
set Gjy=Njy
set gjy=Mjy
call IssuePointOrder(Tjy,Yjy,Gjy,gjy)
set hjy=Sjy
set Fjy=UNIT_TYPE_HERO
if IsUnitType(hjy,Fjy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,49)
endif
endif
if cjy==fu then
set kjy=Sjy
set jjy="attack"
set wxy=Qw[28]
set uxy=Ww[28]
set xjy=wxy
set vjy=uxy
call IssuePointOrder(kjy,jjy,xjy,vjy)
set mjy=Sjy
set Qjy=UNIT_TYPE_HERO
if IsUnitType(mjy,Qjy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,28)
endif
endif
if cjy==Ru then
if Ew[1]==true then
set Wjy=Sjy
set Ejy="attack"
set rxy=Qw[49]
set sxy=Ww[49]
set Zjy=rxy
set Ujy=sxy
call IssuePointOrder(Wjy,Ejy,Zjy,Ujy)
set Ijy=Sjy
set Pjy=UNIT_TYPE_HERO
if IsUnitType(Ijy,Pjy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,49)
endif
else
set Ajy=Sjy
set Djy="attack"
set txy=Qw[28]
set ixy=Ww[28]
set Hjy=txy
set Jjy=ixy
call IssuePointOrder(Ajy,Djy,Hjy,Jjy)
set Kjy=Sjy
set Ljy=UNIT_TYPE_HERO
if IsUnitType(Kjy,Ljy) then
call SaveInteger(qu,GetHandleId(Sjy),$6D6F7665,28)
endif
endif
endif
set Sjy=null
set cjy=null
set ojy=null
set Ojy=null
set pjy=null
set ejy=null
set qjy=null
set fjy=null
set Rjy=null
set Tjy=null
set hjy=null
set Fjy=null
set kjy=null
set mjy=null
set Qjy=null
set Wjy=null
set Ijy=null
set Pjy=null
set Ajy=null
set Kjy=null
set Ljy=null
endfunction
function T7b takes nothing returns boolean
return true
endfunction
function T7s takes nothing returns boolean
local trigger n7s
local trigger d7s
local playerunitevent f7s
local integer R7s
set jG=CreateTrigger()
set n7s=jG
call DisableTrigger(n7s)
set d7s=jG
set f7s=EVENT_PLAYER_UNIT_ATTACKED
set R7s=0
loop
call TriggerRegisterPlayerUnitEvent(d7s,Player(R7s),f7s,null)
set R7s=R7s+1
exitwhen R7s==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jG,Condition(Vww))
call TriggerAddAction(jG,Bww)
set n7s=null
set d7s=null
set f7s=null
return true
endfunction
function TCc takes nothing returns nothing
local integer BXc=GetRandomInt(1,100)
local unit NXc
local unit MXc
local texttag wCc
local string uCc
local real rCc
local integer sCc
local string tCc
local real iCc
local player SCc
local unit cCc
local string oCc
local real OCc
local player lCc
local unit bCc
local string yCc
local real pCc
local player eCc
local unit qCc
local unit aCc
local integer nCc
local timer dCc
local timer fCc
local real RCc
if BXc<=30 then
if te<4 then
set se=se+1
if Xp==null then
set NXc=Dp
set RCc=GetUnitX(NXc)
set MXc=Dp
set Xp=jVl(RCc,GetUnitY(MXc),0.,"0",13.,22,255,220,255)
endif
set wCc=Xp
set sCc=se
set uCc=I2S(sCc)
set rCc=13.
call SetTextTagText(wCc,uCc,rCc*.0023)
set tCc="You have received 1 Artefact"
set iCc=10.
set cCc=Dp
set SCc=GetOwningPlayer(cCc)
call DisplayTimedTextToPlayer(SCc,0.,0.,iCc,tCc)
else
set oCc="You have found 4 Artefacts, you can't find any more"
set OCc=10.
set bCc=Dp
set lCc=GetOwningPlayer(bCc)
call DisplayTimedTextToPlayer(lCc,0.,0.,OCc,oCc)
endif
else
set yCc="The expedition failed..."
set pCc=10.
set qCc=Dp
set eCc=GetOwningPlayer(qCc)
call DisplayTimedTextToPlayer(eCc,0.,0.,pCc,yCc)
endif
set aCc=Dp
set nCc=$41323351
call UnitAddAbility(aCc,nCc)
set dCc=Lp
call PauseTimer(dCc)
set fCc=Lp
call DestroyTimer(fCc)
set Lp=null
set NXc=null
set MXc=null
set wCc=null
set SCc=null
set cCc=null
set lCc=null
set bCc=null
set eCc=null
set qCc=null
set aCc=null
set dCc=null
set fCc=null
endfunction
function cdS takes integer AnS,integer DnS,integer HnS,integer JnS,integer KnS,integer LnS,integer XnS,integer CnS,string VnS returns nothing
local integer BnS
local integer NnS
local integer MnS
local integer wdS
local integer udS
local integer rdS
local integer sdS
local integer tdS
local string idS
local integer SdS
set aW[qW]=VnS
set qW=qW+1
if ok[AnS]==0 then
if AnS==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set BnS=AnS
set NnS=DnS
set MnS=HnS
set wdS=JnS
set udS=KnS
set rdS=LnS
set sdS=XnS
set tdS=CnS
set idS="when calling add in LinkedList, line 38"
set aW[qW]=idS
set qW=qW+1
set SdS=jMe(NnS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(MnS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(wdS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(udS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(rdS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(sdS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set SdS=jMe(tdS,Jv[Vv[BnS]],Vv[BnS],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[BnS]]]=SdS
set Jv[Vv[BnS]]=SdS
set Bv[BnS]=Bv[BnS]+1
set qW=qW-1
set qW=qW-1
endfunction
function Dbu takes string Elu returns nothing
local group Zlu
local filterfunc Ulu
local unit Ilu
local group Plu
local integer Alu
local integer Dlu
local integer Hlu
local integer Jlu
local integer Klu
local integer Llu
local integer Xlu
local integer Clu
local integer Vlu
local group Blu
local group Nlu
local unit Mlu
local player wbu
local unit ubu
local unit rbu
local integer sbu
local string tbu
local integer ibu
local string Sbu
local integer cbu
local integer obu
local unit Obu
local integer lbu
local unit bbu
local integer ybu
local string pbu
local integer ebu
local string qbu
local integer abu
local integer nbu
local unit dbu
local integer fbu
local unit Rbu
local integer Tbu
local string Ybu
local integer Gbu
local string gbu
local integer hbu
local integer Fbu
local unit kbu
local integer jbu
local unit xbu
local integer vbu
local string mbu
local integer Qbu
local string Wbu
local integer Ebu
local integer Zbu
local unit Ubu
local integer Ibu
local group Pbu
local boolexpr Abu
set aW[qW]=Elu
set qW=qW+1
set Zlu=CreateGroup()
set Ulu=Filter(X4)
call GroupEnumUnitsInRect(Zlu,bj_mapInitialPlayableArea,Ulu)
set Plu=Zlu
loop
set Blu=Plu
exitwhen not (FirstOfGroup(Blu)!=null)
set Nlu=Plu
set Mlu=FirstOfGroup(Nlu)
call GroupRemoveUnit(Nlu,Mlu)
set Ilu=Mlu
set ubu=Ilu
set wbu=GetOwningPlayer(ubu)
set Alu=GetPlayerId(wbu)-4
set rbu=Ilu
if GetUnitTypeId(rbu)==$4F303435 and Np[Alu]==false then
set Np[Alu]=true
set Dlu=kHw("when calling new_LinkedList in Expeditions, line 1118")
call cdS(Dlu,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in Expeditions, line 1119")
set sbu=Dlu
set tbu="when calling shuffle in Expeditions, line 1120"
set aW[qW]=tbu
set qW=qW+1
if ok[sbu]==0 then
if sbu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sbu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set ibu=Dlu
set Sbu="when calling getFirst in Expeditions, line 1121"
set aW[qW]=Sbu
set qW=qW+1
if ok[ibu]==0 then
if ibu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set obu=ibu
set cbu=Hv[Kv[Vv[obu]]]
set qW=qW-1
set Hlu=cbu
set Obu=Ilu
set lbu=Hlu
call UnitAddItemById(Obu,lbu)
endif
set bbu=Ilu
if GetUnitTypeId(bbu)==$4F303436 and Mp[Alu]==false then
set Mp[Alu]=true
set Jlu=kHw("when calling new_LinkedList in Expeditions, line 1125")
call cdS(Jlu,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in Expeditions, line 1126")
set ybu=Jlu
set pbu="when calling shuffle in Expeditions, line 1127"
set aW[qW]=pbu
set qW=qW+1
if ok[ybu]==0 then
if ybu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(ybu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set ebu=Jlu
set qbu="when calling getFirst in Expeditions, line 1128"
set aW[qW]=qbu
set qW=qW+1
if ok[ebu]==0 then
if ebu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set nbu=ebu
set abu=Hv[Kv[Vv[nbu]]]
set qW=qW-1
set Klu=abu
set dbu=Ilu
set fbu=Klu
call UnitAddItemById(dbu,fbu)
endif
set Rbu=Ilu
if GetUnitTypeId(Rbu)==$4F303437 and we[Alu]==false then
set we[Alu]=true
set Llu=kHw("when calling new_LinkedList in Expeditions, line 1132")
call cdS(Llu,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in Expeditions, line 1133")
set Tbu=Llu
set Ybu="when calling shuffle in Expeditions, line 1134"
set aW[qW]=Ybu
set qW=qW+1
if ok[Tbu]==0 then
if Tbu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Tbu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Gbu=Llu
set gbu="when calling getFirst in Expeditions, line 1135"
set aW[qW]=gbu
set qW=qW+1
if ok[Gbu]==0 then
if Gbu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Fbu=Gbu
set hbu=Hv[Kv[Vv[Fbu]]]
set qW=qW-1
set Xlu=hbu
set kbu=Ilu
set jbu=Xlu
call UnitAddItemById(kbu,jbu)
endif
set xbu=Ilu
if GetUnitTypeId(xbu)==$4F303438 and ue[Alu]==false then
set ue[Alu]=true
set Clu=kHw("when calling new_LinkedList in Expeditions, line 1139")
call cdS(Clu,$494D3066,$494D3067,$494D3068,$494D3069,$494D306A,$494D306B,$494D3064,"when calling add in Expeditions, line 1140")
set vbu=Clu
set mbu="when calling shuffle in Expeditions, line 1141"
set aW[qW]=mbu
set qW=qW+1
if ok[vbu]==0 then
if vbu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(vbu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Qbu=Clu
set Wbu="when calling getFirst in Expeditions, line 1142"
set aW[qW]=Wbu
set qW=qW+1
if ok[Qbu]==0 then
if Qbu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Zbu=Qbu
set Ebu=Hv[Kv[Vv[Zbu]]]
set qW=qW-1
set Vlu=Ebu
set Ubu=Ilu
set Ibu=Vlu
call UnitAddItemById(Ubu,Ibu)
endif
endloop
set Pbu=Zlu
call DestroyGroup(Pbu)
set Abu=Ulu
call DestroyBoolExpr(Abu)
set qW=qW-1
set Zlu=null
set Ulu=null
set Ilu=null
set Plu=null
set Blu=null
set Nlu=null
set Mlu=null
set wbu=null
set ubu=null
set rbu=null
set Obu=null
set bbu=null
set dbu=null
set Rbu=null
set kbu=null
set xbu=null
set Ubu=null
set Pbu=null
set Abu=null
endfunction
function VpS takes nothing returns nothing
local group EpS=CreateGroup()
local filterfunc ZpS=Filter(C4)
local unit UpS
local group IpS
local group PpS
local group ApS
local unit DpS
local unit HpS
local integer JpS
local unit KpS
local integer LpS
local group XpS
local boolexpr CpS
call GroupEnumUnitsInRect(EpS,bj_mapInitialPlayableArea,ZpS)
set IpS=EpS
loop
set PpS=IpS
exitwhen not (FirstOfGroup(PpS)!=null)
set ApS=IpS
set DpS=FirstOfGroup(ApS)
call GroupRemoveUnit(ApS,DpS)
set UpS=DpS
set HpS=UpS
set JpS=$41323439
if GetUnitAbilityLevel(HpS,JpS)==0 then
set KpS=UpS
set LpS=$41323439
call UnitAddAbility(KpS,LpS)
endif
endloop
set XpS=EpS
call DestroyGroup(XpS)
set CpS=ZpS
call DestroyBoolExpr(CpS)
set EpS=null
set ZpS=null
set UpS=null
set IpS=null
set PpS=null
set ApS=null
set DpS=null
set HpS=null
set KpS=null
set XpS=null
set CpS=null
endfunction
function s4p takes unit A1p,integer D1p returns nothing
local unit X1p=A1p
local integer C1p=D1p
local integer H1p=GetUnitAbilityLevel(X1p,C1p)
local unit J1p=A1p
local unit V1p=J1p
local integer B1p=D1p
local unit K1p
local unit L1p
local unit N1p
local integer M1p
local unit w4p
local integer u4p
local integer r4p
call UnitRemoveAbility(V1p,B1p)
set K1p=J1p
set N1p=K1p
set M1p=D1p
call UnitAddAbility(N1p,M1p)
set L1p=K1p
set w4p=L1p
set u4p=D1p
set r4p=H1p
call SetUnitAbilityLevel(w4p,u4p,r4p)
set J1p=null
set K1p=null
set L1p=null
set X1p=null
set V1p=null
set N1p=null
set w4p=null
endfunction
function Cuy takes string E5y returns nothing
local integer Z5y
local integer U5y
local integer I5y
local integer P5y
local integer A5y
local integer D5y
local integer H5y
local integer J5y
local integer K5y
local integer L5y
local integer X5y
local integer C5y
local integer V5y
local integer B5y
local integer N5y
local integer M5y
local integer w6y
local integer u6y
local integer r6y
local integer s6y
local integer t6y
local integer i6y
local integer S6y
local integer c6y
local integer o6y
local integer O6y
local integer l6y
local integer b6y
local integer y6y
local integer p6y
local integer e6y
local integer q6y
local integer a6y
local integer n6y
local unit d6y
local integer f6y
local integer R6y
local unit T6y
local integer Y6y
local unit G6y
local integer g6y
local unit h6y
local integer F6y
local unit k6y
local integer j6y
local unit x6y
local integer v6y
local unit m6y
local integer Q6y
local unit W6y
local integer E6y
local unit Z6y
local integer U6y
local unit I6y
local unit P6y
local integer A6y
local unit D6y
local integer H6y
local unit J6y
local integer K6y
local integer L6y
local unit X6y
local integer C6y
local integer V6y
local integer B6y
local real N6y
local real M6y
local unit w7y
local filterfunc u7y
local integer r7y
local unit s7y
local integer t7y
local player i7y
local player S7y
local playerstate c7y
local unit o7y
local unit O7y
local integer l7y
local player b7y
local unit y7y
local player p7y
local integer e7y
local player q7y
local playerstate a7y
local integer n7y
local unit d7y
local string f7y
local real R7y
local player T7y
local unit Y7y
local player G7y
local player g7y
local playerstate h7y
local unit F7y
local unit k7y
local integer j7y
local player x7y
local unit v7y
local player m7y
local integer Q7y
local player W7y
local playerstate E7y
local integer Z7y
local unit U7y
local string I7y
local real P7y
local player A7y
local unit D7y
local player H7y
local player J7y
local playerstate K7y
local unit L7y
local unit X7y
local integer C7y
local player V7y
local unit B7y
local player N7y
local integer M7y
local player w8y
local playerstate u8y
local integer r8y
local unit s8y
local string t8y
local real i8y
local player S8y
local unit c8y
local player o8y
local player O8y
local playerstate l8y
local unit b8y
local unit y8y
local integer p8y
local player e8y
local unit q8y
local player a8y
local integer n8y
local player d8y
local playerstate f8y
local integer R8y
local unit T8y
local string Y8y
local real G8y
local player g8y
local unit h8y
local player F8y
local player k8y
local playerstate j8y
local unit x8y
local unit v8y
local integer m8y
local player Q8y
local unit W8y
local player E8y
local integer Z8y
local player U8y
local playerstate I8y
local integer P8y
local unit A8y
local string D8y
local real H8y
local player J8y
local unit K8y
local player L8y
local player X8y
local playerstate C8y
local unit V8y
local unit B8y
local integer N8y
local player M8y
local unit w9y
local player u9y
local integer r9y
local player s9y
local playerstate t9y
local integer i9y
local unit S9y
local string c9y
local real o9y
local player O9y
local unit l9y
local player b9y
local player y9y
local playerstate p9y
local unit e9y
local unit q9y
local integer a9y
local player n9y
local unit d9y
local player f9y
local integer R9y
local player T9y
local playerstate Y9y
local integer G9y
local unit g9y
local string h9y
local real F9y
local player k9y
local unit j9y
local player x9y
local player v9y
local playerstate m9y
local unit Q9y
local unit W9y
local integer E9y
local player Z9y
local unit U9y
local player I9y
local integer P9y
local player A9y
local playerstate D9y
local integer H9y
local unit J9y
local string K9y
local real L9y
local player X9y
local unit C9y
local player V9y
local player B9y
local playerstate N9y
local unit M9y
local unit w0y
local integer u0y
local player r0y
local unit s0y
local player t0y
local integer i0y
local player S0y
local playerstate c0y
local integer o0y
local unit O0y
local string l0y
local real b0y
local player y0y
local unit p0y
local player e0y
local player q0y
local playerstate a0y
local unit n0y
local unit d0y
local integer f0y
local player R0y
local unit T0y
local player Y0y
local integer G0y
local player g0y
local playerstate h0y
local integer F0y
local unit k0y
local string j0y
local real x0y
local player v0y
local unit m0y
local string Q0y
local real W0y
local player E0y
local unit Z0y
local integer U0y
local string I0y
local integer P0y
local string A0y
local integer D0y
local integer H0y
local player J0y
local unit K0y
local unit L0y
local integer X0y
local trigger C0y
local trigger V0y
local trigger B0y
local unit N0y
local integer M0y
local texttag w_y
local string u_y
local real r_y
local integer s_y
local string t_y
local real i_y
local player S_y
local unit c_y
local string o_y
local real O_y
local player l_y
local unit b_y
local unit y_y
local integer p_y
local player e_y
local unit q_y
local unit a_y
local unit n_y
local unit d_y
local unit f_y
local unit R_y
local unit T_y
local unit Y_y
local unit G_y
local unit g_y
local unit h_y
local unit F_y
local unit k_y
local unit j_y
local unit x_y
local unit v_y
local unit m_y
local unit Q_y
local unit W_y
local unit E_y
local unit Z_y
local unit U_y
local unit I_y
local unit P_y
local integer A_y
local unit D_y
local integer H_y
local unit J_y
local integer K_y
local unit L_y
local integer X_y
local integer C_y
local unit V_y
local string B_y
local real N_y
local real M_y
local unit wwy
local unit uwy
local unit rwy
local string swy
local integer twy
local real iwy
local integer Swy
local string cwy
local unit owy
local integer Owy
local unit lwy
local integer bwy
local unit ywy
local integer pwy
local unit ewy
local integer qwy
local integer awy
local string nwy
local integer dwy
local real fwy
local integer Rwy
local string Twy
local unit Ywy
local integer Gwy
local unit gwy
local integer hwy
local player Fwy
local unit kwy
local unit jwy
local integer xwy
local player vwy
local integer mwy
local real Qwy
local real Wwy
local real Ewy
local real Zwy
local real Uwy
local unit Iwy
local integer Pwy
local string Awy
local integer Dwy
local unit Hwy
local integer Jwy
local unit Kwy
local string Lwy
local real Xwy
local real Cwy
local unit Vwy
local unit Bwy
local unit Nwy
local string Mwy
local integer wuy
local real uuy
local integer ruy
local string suy
local unit tuy
local integer iuy
local player Suy
local real cuy
local player ouy
local real Ouy
local player luy
local real buy
local player yuy
local real puy
local player euy
local real quy
local player auy
local real nuy
local player duy
local real fuy
local player Ruy
local real Tuy
local player Yuy
local real Guy
local player guy
local real huy
local player Fuy
local real kuy
local real juy
local player xuy
local integer vuy
local real muy
local real Quy
local real Wuy
local real Euy
local real Zuy
local real Uuy
local real Iuy
local real Puy
local real Auy
local real Duy
local real Huy
local real Juy
local real Kuy
local real Luy
local real Xuy
set aW[qW]=E5y
set qW=qW+1
set Z5y=GetSpellAbilityId()
if Z5y==$41323349 then
set U5y=250
set o7y=Dp
set i7y=GetOwningPlayer(o7y)
set S7y=i7y
set c7y=PLAYER_STATE_RESOURCE_GOLD
set I5y=GetPlayerState(S7y,c7y)
if I5y>=U5y then
set O7y=Dp
set l7y=$41323349
call UnitRemoveAbility(O7y,l7y)
set y7y=Dp
set b7y=GetOwningPlayer(y7y)
set P5y=GetPlayerId(b7y)
set d7y=Dp
set p7y=GetOwningPlayer(d7y)
set e7y=I5y-U5y
set q7y=p7y
set a7y=PLAYER_STATE_RESOURCE_GOLD
set n7y=e7y
call SetPlayerState(q7y,a7y,n7y)
set hr[P5y]=hr[P5y]-U5y
set Fr[P5y]=Fr[P5y]-U5y
set Cr[P5y]=Cr[P5y]-U5y
set Hp=CreateTimer()
call TimerStart(Hp,120.,false,V4)
else
call s4p(Dp,$41323349)
set f7y="Not enough Gold!"
set R7y=10.
set Y7y=Dp
set T7y=GetOwningPlayer(Y7y)
call DisplayTimedTextToPlayer(T7y,0.,0.,R7y,f7y)
endif
endif
if Z5y==$4132334A then
set A5y=350
set F7y=Dp
set G7y=GetOwningPlayer(F7y)
set g7y=G7y
set h7y=PLAYER_STATE_RESOURCE_GOLD
set D5y=GetPlayerState(g7y,h7y)
if D5y>=A5y then
set k7y=Dp
set j7y=$4132334A
call UnitRemoveAbility(k7y,j7y)
set v7y=Dp
set x7y=GetOwningPlayer(v7y)
set H5y=GetPlayerId(x7y)
set U7y=Dp
set m7y=GetOwningPlayer(U7y)
set Q7y=D5y-A5y
set W7y=m7y
set E7y=PLAYER_STATE_RESOURCE_GOLD
set Z7y=Q7y
call SetPlayerState(W7y,E7y,Z7y)
set hr[H5y]=hr[H5y]-A5y
set Fr[H5y]=Fr[H5y]-A5y
set Cr[H5y]=Cr[H5y]-A5y
set Hp=CreateTimer()
call TimerStart(Hp,120.,false,V4)
else
call s4p(Dp,$4132334A)
set I7y="Not enough Gold!"
set P7y=10.
set D7y=Dp
set A7y=GetOwningPlayer(D7y)
call DisplayTimedTextToPlayer(A7y,0.,0.,P7y,I7y)
endif
endif
if Z5y==$4132334B then
set J5y=450
set L7y=Dp
set H7y=GetOwningPlayer(L7y)
set J7y=H7y
set K7y=PLAYER_STATE_RESOURCE_GOLD
set K5y=GetPlayerState(J7y,K7y)
if K5y>=J5y then
set X7y=Dp
set C7y=$4132334B
call UnitRemoveAbility(X7y,C7y)
set B7y=Dp
set V7y=GetOwningPlayer(B7y)
set L5y=GetPlayerId(V7y)
set s8y=Dp
set N7y=GetOwningPlayer(s8y)
set M7y=K5y-J5y
set w8y=N7y
set u8y=PLAYER_STATE_RESOURCE_GOLD
set r8y=M7y
call SetPlayerState(w8y,u8y,r8y)
set hr[L5y]=hr[L5y]-J5y
set Fr[L5y]=Fr[L5y]-J5y
set Cr[L5y]=Cr[L5y]-J5y
set Hp=CreateTimer()
call TimerStart(Hp,120.,false,V4)
else
call s4p(Dp,$4132334B)
set t8y="Not enough Gold!"
set i8y=10.
set c8y=Dp
set S8y=GetOwningPlayer(c8y)
call DisplayTimedTextToPlayer(S8y,0.,0.,i8y,t8y)
endif
endif
if Z5y==$4132334C then
set X5y=550
set b8y=Dp
set o8y=GetOwningPlayer(b8y)
set O8y=o8y
set l8y=PLAYER_STATE_RESOURCE_GOLD
set C5y=GetPlayerState(O8y,l8y)
if C5y>=X5y then
set y8y=Dp
set p8y=$4132334C
call UnitRemoveAbility(y8y,p8y)
set q8y=Dp
set e8y=GetOwningPlayer(q8y)
set V5y=GetPlayerId(e8y)
set T8y=Dp
set a8y=GetOwningPlayer(T8y)
set n8y=C5y-X5y
set d8y=a8y
set f8y=PLAYER_STATE_RESOURCE_GOLD
set R8y=n8y
call SetPlayerState(d8y,f8y,R8y)
set hr[V5y]=hr[V5y]-X5y
set Fr[V5y]=Fr[V5y]-X5y
set Cr[V5y]=Cr[V5y]-X5y
set Hp=CreateTimer()
call TimerStart(Hp,120.,false,V4)
else
call s4p(Dp,$4132334C)
set Y8y="Not enough Gold!"
set G8y=10.
set h8y=Dp
set g8y=GetOwningPlayer(h8y)
call DisplayTimedTextToPlayer(g8y,0.,0.,G8y,Y8y)
endif
endif
if Z5y==$4132334D then
set B5y=300
set x8y=Dp
set F8y=GetOwningPlayer(x8y)
set k8y=F8y
set j8y=PLAYER_STATE_RESOURCE_GOLD
set N5y=GetPlayerState(k8y,j8y)
if N5y>=B5y then
set v8y=Dp
set m8y=$4132334D
call UnitRemoveAbility(v8y,m8y)
set W8y=Dp
set Q8y=GetOwningPlayer(W8y)
set M5y=GetPlayerId(Q8y)
set A8y=Dp
set E8y=GetOwningPlayer(A8y)
set Z8y=N5y-B5y
set U8y=E8y
set I8y=PLAYER_STATE_RESOURCE_GOLD
set P8y=Z8y
call SetPlayerState(U8y,I8y,P8y)
set hr[M5y]=hr[M5y]-B5y
set Fr[M5y]=Fr[M5y]-B5y
set Cr[M5y]=Cr[M5y]-B5y
set Jp=CreateTimer()
call TimerStart(Jp,180.,false,B4)
else
call s4p(Dp,$4132334D)
set D8y="Not enough Gold!"
set H8y=10.
set K8y=Dp
set J8y=GetOwningPlayer(K8y)
call DisplayTimedTextToPlayer(J8y,0.,0.,H8y,D8y)
endif
endif
if Z5y==$4132334E then
set w6y=400
set V8y=Dp
set L8y=GetOwningPlayer(V8y)
set X8y=L8y
set C8y=PLAYER_STATE_RESOURCE_GOLD
set u6y=GetPlayerState(X8y,C8y)
if u6y>=w6y then
set B8y=Dp
set N8y=$4132334E
call UnitRemoveAbility(B8y,N8y)
set w9y=Dp
set M8y=GetOwningPlayer(w9y)
set r6y=GetPlayerId(M8y)
set S9y=Dp
set u9y=GetOwningPlayer(S9y)
set r9y=u6y-w6y
set s9y=u9y
set t9y=PLAYER_STATE_RESOURCE_GOLD
set i9y=r9y
call SetPlayerState(s9y,t9y,i9y)
set hr[r6y]=hr[r6y]-w6y
set Fr[r6y]=Fr[r6y]-w6y
set Cr[r6y]=Cr[r6y]-w6y
set Jp=CreateTimer()
call TimerStart(Jp,180.,false,B4)
else
call s4p(Dp,$4132334E)
set c9y="Not enough Gold!"
set o9y=10.
set l9y=Dp
set O9y=GetOwningPlayer(l9y)
call DisplayTimedTextToPlayer(O9y,0.,0.,o9y,c9y)
endif
endif
if Z5y==$4132334F then
set s6y=500
set e9y=Dp
set b9y=GetOwningPlayer(e9y)
set y9y=b9y
set p9y=PLAYER_STATE_RESOURCE_GOLD
set t6y=GetPlayerState(y9y,p9y)
if t6y>=s6y then
set q9y=Dp
set a9y=$4132334F
call UnitRemoveAbility(q9y,a9y)
set d9y=Dp
set n9y=GetOwningPlayer(d9y)
set i6y=GetPlayerId(n9y)
set g9y=Dp
set f9y=GetOwningPlayer(g9y)
set R9y=t6y-s6y
set T9y=f9y
set Y9y=PLAYER_STATE_RESOURCE_GOLD
set G9y=R9y
call SetPlayerState(T9y,Y9y,G9y)
set hr[i6y]=hr[i6y]-s6y
set Fr[i6y]=Fr[i6y]-s6y
set Cr[i6y]=Cr[i6y]-s6y
set Jp=CreateTimer()
call TimerStart(Jp,180.,false,B4)
else
call s4p(Dp,$4132334F)
set h9y="Not enough Gold!"
set F9y=10.
set j9y=Dp
set k9y=GetOwningPlayer(j9y)
call DisplayTimedTextToPlayer(k9y,0.,0.,F9y,h9y)
endif
endif
if Z5y==$41323352 then
set S6y=300
set Q9y=Dp
set x9y=GetOwningPlayer(Q9y)
set v9y=x9y
set m9y=PLAYER_STATE_RESOURCE_GOLD
set c6y=GetPlayerState(v9y,m9y)
if c6y>=S6y then
set W9y=Dp
set E9y=$41323352
call UnitRemoveAbility(W9y,E9y)
set U9y=Dp
set Z9y=GetOwningPlayer(U9y)
set o6y=GetPlayerId(Z9y)
set J9y=Dp
set I9y=GetOwningPlayer(J9y)
set P9y=c6y-S6y
set A9y=I9y
set D9y=PLAYER_STATE_RESOURCE_GOLD
set H9y=P9y
call SetPlayerState(A9y,D9y,H9y)
set hr[o6y]=hr[o6y]-S6y
set Fr[o6y]=Fr[o6y]-S6y
set Cr[o6y]=Cr[o6y]-S6y
set Kp=CreateTimer()
call TimerStart(Kp,180.,false,N4)
else
call s4p(Dp,$41323352)
set K9y="Not enough Gold!"
set L9y=10.
set C9y=Dp
set X9y=GetOwningPlayer(C9y)
call DisplayTimedTextToPlayer(X9y,0.,0.,L9y,K9y)
endif
endif
if Z5y==$41323350 then
set O6y=400
set M9y=Dp
set V9y=GetOwningPlayer(M9y)
set B9y=V9y
set N9y=PLAYER_STATE_RESOURCE_GOLD
set l6y=GetPlayerState(B9y,N9y)
if l6y>=O6y then
set w0y=Dp
set u0y=$41323350
call UnitRemoveAbility(w0y,u0y)
set s0y=Dp
set r0y=GetOwningPlayer(s0y)
set b6y=GetPlayerId(r0y)
set O0y=Dp
set t0y=GetOwningPlayer(O0y)
set i0y=l6y-O6y
set S0y=t0y
set c0y=PLAYER_STATE_RESOURCE_GOLD
set o0y=i0y
call SetPlayerState(S0y,c0y,o0y)
set hr[b6y]=hr[b6y]-O6y
set Fr[b6y]=Fr[b6y]-O6y
set Cr[b6y]=Cr[b6y]-O6y
set Kp=CreateTimer()
call TimerStart(Kp,180.,false,N4)
else
call s4p(Dp,$41323350)
set l0y="Not enough Gold!"
set b0y=10.
set p0y=Dp
set y0y=GetOwningPlayer(p0y)
call DisplayTimedTextToPlayer(y0y,0.,0.,b0y,l0y)
endif
endif
if Z5y==$41323351 then
set y6y=1000
set n0y=Dp
set e0y=GetOwningPlayer(n0y)
set q0y=e0y
set a0y=PLAYER_STATE_RESOURCE_GOLD
set p6y=GetPlayerState(q0y,a0y)
if p6y>=y6y then
set d0y=Dp
set f0y=$41323351
call UnitRemoveAbility(d0y,f0y)
set T0y=Dp
set R0y=GetOwningPlayer(T0y)
set e6y=GetPlayerId(R0y)
set k0y=Dp
set Y0y=GetOwningPlayer(k0y)
set G0y=p6y-y6y
set g0y=Y0y
set h0y=PLAYER_STATE_RESOURCE_GOLD
set F0y=G0y
call SetPlayerState(g0y,h0y,F0y)
set hr[e6y]=hr[e6y]-y6y
set Fr[e6y]=Fr[e6y]-y6y
set Cr[e6y]=Cr[e6y]-y6y
set Lp=CreateTimer()
call TimerStart(Lp,180.,false,M4)
elseif te==4 then
call s4p(Dp,$41323351)
set j0y="You have found 4 Artefacts, you can't find any more"
set x0y=10.
set m0y=Dp
set v0y=GetOwningPlayer(m0y)
call DisplayTimedTextToPlayer(v0y,0.,0.,x0y,j0y)
else
call s4p(Dp,$41323351)
set Q0y="Not enough Gold!"
set W0y=10.
set Z0y=Dp
set E0y=GetOwningPlayer(Z0y)
call DisplayTimedTextToPlayer(E0y,0.,0.,W0y,Q0y)
endif
endif
if Z5y==$41323430 then
if se>0 and te<5 then
set se=se-1
set te=te+1
set U0y=ce
set I0y="when calling shuffle in Expeditions, line 1338"
set aW[qW]=I0y
set qW=qW+1
if ok[U0y]==0 then
if U0y==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(U0y,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set P0y=ce
set A0y="when calling getFirst in Expeditions, line 1339"
set aW[qW]=A0y
set qW=qW+1
if ok[P0y]==0 then
if P0y==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set H0y=P0y
set D0y=Hv[Kv[Vv[H0y]]]
set qW=qW-1
set q6y=D0y
set K0y=Dp
set J0y=GetOwningPlayer(K0y)
set a6y=GetPlayerId(J0y)
set L0y=Dp
set X0y=q6y
call UnitAddAbility(L0y,X0y)
if q6y==$41323431 then
call MiO()
set C0y=Cp
call EnableTrigger(C0y)
endif
if q6y==$41323432 then
call Dbu("when calling addT3Item in Expeditions, line 1346")
set V0y=Bp
call EnableTrigger(V0y)
endif
if q6y==$41323433 then
call SetPlayerTechResearched(Player(a6y+4),$52303855,1)
endif
if q6y==$41323434 then
call SetPlayerTechResearched(Player(a6y+4),$52303854,1)
endif
if q6y==$41323435 then
call SetPlayerTechResearched(Player(a6y+4),$52303856,1)
call SetPlayerTechResearched(Player(a6y+4),$52303859,1)
endif
if q6y==$41323436 then
call VpS()
set B0y=Vp
call EnableTrigger(B0y)
endif
if q6y==$41323437 then
call SetPlayerTechResearched(Player(a6y+4),$52303857,1)
endif
if q6y==$41323438 then
call SetPlayerTechResearched(Player(a6y+4),$52303858,1)
endif
if Se!=0 then
set N0y=Dp
set M0y=Se
call UnitRemoveAbility(N0y,M0y)
endif
set Se=q6y
call eWp(ce,q6y,"when calling remove in Expeditions, line 1365")
set w_y=Xp
set s_y=se
set u_y=I2S(s_y)
set r_y=13.
call SetTextTagText(w_y,u_y,r_y*.0023)
set t_y="You have found Artefacts"
set i_y=10.
set c_y=Dp
set S_y=GetOwningPlayer(c_y)
call DisplayTimedTextToPlayer(S_y,0.,0.,i_y,t_y)
else
set o_y="You don't have an Artefact!"
set O_y=10.
set b_y=Dp
set l_y=GetOwningPlayer(b_y)
call DisplayTimedTextToPlayer(l_y,0.,0.,O_y,o_y)
endif
endif
if Z5y==$41323353 then
set y_y=Dp
set p_y=$41323353
set n6y=GetUnitAbilityLevel(y_y,p_y)
set d6y=GetSpellTargetUnit()
set q_y=Dp
set e_y=GetOwningPlayer(q_y)
set f6y=GetPlayerId(e_y)
if n6y==1 then
set R6y=0
loop
exitwhen R6y>3
set Suy=Player(f6y+4)
set a_y=d6y
set cuy=GetUnitX(a_y)
set n_y=d6y
set T6y=CreateUnit(Suy,$6F30354B,cuy,GetUnitY(n_y),0.)
call dYr(T6y)
set R6y=R6y+1
endloop
if GetRandomInt(1,2)==1 then
set Y6y=0
loop
exitwhen Y6y>1
set ouy=Player(f6y+4)
set d_y=d6y
set Ouy=GetUnitX(d_y)
set f_y=d6y
set G6y=CreateUnit(ouy,$6F303549,Ouy,GetUnitY(f_y),0.)
call dYr(G6y)
set Y6y=Y6y+1
endloop
else
set g6y=0
loop
exitwhen g6y>1
set luy=Player(f6y+4)
set R_y=d6y
set buy=GetUnitX(R_y)
set T_y=d6y
set h6y=CreateUnit(luy,$6F303552,buy,GetUnitY(T_y),0.)
call dYr(h6y)
set g6y=g6y+1
endloop
endif
endif
if n6y==2 then
set F6y=0
loop
exitwhen F6y>3
set yuy=Player(f6y+4)
set Y_y=d6y
set puy=GetUnitX(Y_y)
set G_y=d6y
set k6y=CreateUnit(yuy,$6F30354B,puy,GetUnitY(G_y),0.)
call dYr(k6y)
set F6y=F6y+1
endloop
if GetRandomInt(1,2)==1 then
set j6y=0
loop
exitwhen j6y>1
set euy=Player(f6y+4)
set g_y=d6y
set quy=GetUnitX(g_y)
set h_y=d6y
set x6y=CreateUnit(euy,$6F303549,quy,GetUnitY(h_y),0.)
call dYr(x6y)
set j6y=j6y+1
endloop
else
set v6y=0
loop
exitwhen v6y>1
set auy=Player(f6y+4)
set F_y=d6y
set nuy=GetUnitX(F_y)
set k_y=d6y
set m6y=CreateUnit(auy,$6F303552,nuy,GetUnitY(k_y),0.)
call dYr(m6y)
set v6y=v6y+1
endloop
endif
endif
if n6y==3 then
set Q6y=0
loop
exitwhen Q6y>3
set duy=Player(f6y+4)
set j_y=d6y
set fuy=GetUnitX(j_y)
set x_y=d6y
set W6y=CreateUnit(duy,$6F30354B,fuy,GetUnitY(x_y),0.)
call dYr(W6y)
set Q6y=Q6y+1
endloop
if GetRandomInt(1,2)==1 then
set E6y=0
loop
exitwhen E6y>1
set Ruy=Player(f6y+4)
set v_y=d6y
set Tuy=GetUnitX(v_y)
set m_y=d6y
set Z6y=CreateUnit(Ruy,$6F303549,Tuy,GetUnitY(m_y),0.)
call dYr(Z6y)
set E6y=E6y+1
endloop
else
set U6y=0
loop
exitwhen U6y>1
set Yuy=Player(f6y+4)
set Q_y=d6y
set Guy=GetUnitX(Q_y)
set W_y=d6y
set I6y=CreateUnit(Yuy,$6F303552,Guy,GetUnitY(W_y),0.)
call dYr(I6y)
set U6y=U6y+1
endloop
endif
set guy=Player(f6y+4)
set E_y=d6y
set huy=GetUnitX(E_y)
set Z_y=d6y
set P6y=CreateUnit(guy,$6F30354E,huy,GetUnitY(Z_y),0.)
call dYr(P6y)
set A6y=0
loop
exitwhen A6y>1
set Fuy=Player(f6y+4)
set U_y=d6y
set kuy=GetUnitX(U_y)
set I_y=d6y
set D6y=CreateUnit(Fuy,$6F303554,kuy,GetUnitY(I_y),0.)
call dYr(D6y)
set A6y=A6y+1
endloop
endif
set P_y=Dp
set A_y=$41323353
call UnitRemoveAbility(P_y,A_y)
endif
if Z5y==$41323354 then
set D_y=Dp
set H_y=$41323354
set H6y=GetUnitAbilityLevel(D_y,H_y)
set J6y=GetSpellTargetUnit()
set J_y=J6y
set K_y=$41323443
call UnitAddAbility(J_y,K_y)
set L_y=J6y
set X_y=$41323443
set C_y=H6y
call SetUnitAbilityLevel(L_y,X_y,C_y)
set V_y=J6y
set B_y="healingward"
set wwy=J6y
set uwy=wwy
set juy=GetUnitX(uwy)
set rwy=wwy
set Euy=juy
set Zuy=GetUnitY(rwy)
set N_y=Euy
set M_y=Zuy
call IssuePointOrder(V_y,B_y,N_y,M_y)
set swy="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions in Expeditions, line 1423"
set aW[qW]=swy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set twy=fF
set RF[twy]=810
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions.","when calling error in Expeditions, line 1423")
set twy=0
endif
else
set dF=dF-1
set twy=nF[dF]
set RF[twy]=810
endif
set qW=qW-1
set K6y=twy
set Vj[K6y]=J6y
set iwy=3.
set Swy=K6y
set cwy="when calling doAfter in Expeditions, line 1423"
set aW[qW]=cwy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),iwy,Swy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set owy=Dp
set Owy=$41323354
call UnitRemoveAbility(owy,Owy)
endif
if Z5y==$41323355 then
set lwy=Dp
set bwy=$41323355
set L6y=GetUnitAbilityLevel(lwy,bwy)
set X6y=GetSpellTargetUnit()
set ywy=X6y
set pwy=$41323444
call UnitAddAbility(ywy,pwy)
set ewy=X6y
set qwy=$41323444
set awy=L6y
call SetUnitAbilityLevel(ewy,qwy,awy)
set nwy="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions in Expeditions, line 1431"
set aW[qW]=nwy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set dwy=fF
set RF[dwy]=811
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions.","when calling error in Expeditions, line 1431")
set dwy=0
endif
else
set dF=dF-1
set dwy=nF[dF]
set RF[dwy]=811
endif
set qW=qW-1
set C6y=dwy
set Bj[C6y]=X6y
set fwy=3.
set Rwy=C6y
set Twy="when calling doAfter in Expeditions, line 1431"
set aW[qW]=Twy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),fwy,Rwy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set Ywy=Dp
set Gwy=$41323355
call UnitRemoveAbility(Ywy,Gwy)
endif
if Z5y==$41323444 then
set gwy=Dp
set hwy=$41323355
set V6y=GetUnitAbilityLevel(gwy,hwy)
set kwy=Dp
set Fwy=GetOwningPlayer(kwy)
set B6y=GetPlayerId(Fwy)
set jwy=Dp
set xwy=$41323355
call UnitRemoveAbility(jwy,xwy)
set Uuy=GetSpellTargetX()
set Iuy=GetSpellTargetY()
set N6y=Uuy
set M6y=Iuy
set vwy=Player(B6y+4)
set mwy=$75303037
set Puy=N6y
set Auy=M6y
set Qwy=Puy
set Wwy=Auy
set Uwy=0.
set Duy=Uwy*.017453293
set Ewy=Duy
set xuy=vwy
set vuy=mwy
set muy=Qwy
set Quy=Wwy
set Huy=Ewy
set Zwy=Huy
set w7y=CreateUnit(xuy,vuy,muy,Quy,Zwy*57.295779513)
set Iwy=w7y
set Pwy=$41304E4A
call UnitRemoveAbility(Iwy,Pwy)
set ie=20
set u7y=Filter(w2)
set Awy="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Expeditions in Expeditions, line 1443"
set aW[qW]=Awy
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Dwy=GF
set gF[Dwy]=671
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Expeditions.","when calling error in Expeditions, line 1443")
set Dwy=0
endif
else
set YF=YF-1
set Dwy=TF[YF]
set gF[Dwy]=671
endif
set qW=qW-1
set r7y=Dwy
set Nj[r7y]=w7y
set Mj[r7y]=u7y
set Juy=N6y
set Kuy=M6y
set wx[r7y]=Juy
set ux[r7y]=Kuy
set rx[r7y]=B6y
set sx[r7y]=V6y
call GtO(1.,r7y,"when calling doPeriodically in Expeditions, line 1443")
endif
if Z5y==$41323356 then
set s7y=GetSpellTargetUnit()
set Hwy=s7y
set Jwy=$41323445
call UnitAddAbility(Hwy,Jwy)
set Kwy=s7y
set Lwy="healingward"
set Vwy=s7y
set Bwy=Vwy
set Wuy=GetUnitX(Bwy)
set Nwy=Vwy
set Luy=Wuy
set Xuy=GetUnitY(Nwy)
set Xwy=Luy
set Cwy=Xuy
call IssuePointOrder(Kwy,Lwy,Xwy,Cwy)
set Mwy="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions in Expeditions, line 1463"
set aW[qW]=Mwy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set wuy=fF
set RF[wuy]=812
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Expeditions.","when calling error in Expeditions, line 1463")
set wuy=0
endif
else
set dF=dF-1
set wuy=nF[dF]
set RF[wuy]=812
endif
set qW=qW-1
set t7y=wuy
set Sx[t7y]=s7y
set uuy=3.
set ruy=t7y
set suy="when calling doAfter in Expeditions, line 1463"
set aW[qW]=suy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),uuy,ruy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set tuy=Dp
set iuy=$41323356
call UnitRemoveAbility(tuy,iuy)
endif
set qW=qW-1
set d6y=null
set T6y=null
set G6y=null
set h6y=null
set k6y=null
set x6y=null
set m6y=null
set W6y=null
set Z6y=null
set I6y=null
set P6y=null
set D6y=null
set J6y=null
set X6y=null
set w7y=null
set u7y=null
set s7y=null
set i7y=null
set S7y=null
set c7y=null
set o7y=null
set O7y=null
set b7y=null
set y7y=null
set p7y=null
set q7y=null
set a7y=null
set d7y=null
set T7y=null
set Y7y=null
set G7y=null
set g7y=null
set h7y=null
set F7y=null
set k7y=null
set x7y=null
set v7y=null
set m7y=null
set W7y=null
set E7y=null
set U7y=null
set A7y=null
set D7y=null
set H7y=null
set J7y=null
set K7y=null
set L7y=null
set X7y=null
set V7y=null
set B7y=null
set N7y=null
set w8y=null
set u8y=null
set s8y=null
set S8y=null
set c8y=null
set o8y=null
set O8y=null
set l8y=null
set b8y=null
set y8y=null
set e8y=null
set q8y=null
set a8y=null
set d8y=null
set f8y=null
set T8y=null
set g8y=null
set h8y=null
set F8y=null
set k8y=null
set j8y=null
set x8y=null
set v8y=null
set Q8y=null
set W8y=null
set E8y=null
set U8y=null
set I8y=null
set A8y=null
set J8y=null
set K8y=null
set L8y=null
set X8y=null
set C8y=null
set V8y=null
set B8y=null
set M8y=null
set w9y=null
set u9y=null
set s9y=null
set t9y=null
set S9y=null
set O9y=null
set l9y=null
set b9y=null
set y9y=null
set p9y=null
set e9y=null
set q9y=null
set n9y=null
set d9y=null
set f9y=null
set T9y=null
set Y9y=null
set g9y=null
set k9y=null
set j9y=null
set x9y=null
set v9y=null
set m9y=null
set Q9y=null
set W9y=null
set Z9y=null
set U9y=null
set I9y=null
set A9y=null
set D9y=null
set J9y=null
set X9y=null
set C9y=null
set V9y=null
set B9y=null
set N9y=null
set M9y=null
set w0y=null
set r0y=null
set s0y=null
set t0y=null
set S0y=null
set c0y=null
set O0y=null
set y0y=null
set p0y=null
set e0y=null
set q0y=null
set a0y=null
set n0y=null
set d0y=null
set R0y=null
set T0y=null
set Y0y=null
set g0y=null
set h0y=null
set k0y=null
set v0y=null
set m0y=null
set E0y=null
set Z0y=null
set J0y=null
set K0y=null
set L0y=null
set C0y=null
set V0y=null
set B0y=null
set N0y=null
set w_y=null
set S_y=null
set c_y=null
set l_y=null
set b_y=null
set y_y=null
set e_y=null
set q_y=null
set a_y=null
set n_y=null
set d_y=null
set f_y=null
set R_y=null
set T_y=null
set Y_y=null
set G_y=null
set g_y=null
set h_y=null
set F_y=null
set k_y=null
set j_y=null
set x_y=null
set v_y=null
set m_y=null
set Q_y=null
set W_y=null
set E_y=null
set Z_y=null
set U_y=null
set I_y=null
set P_y=null
set D_y=null
set J_y=null
set L_y=null
set V_y=null
set wwy=null
set uwy=null
set rwy=null
set owy=null
set lwy=null
set ywy=null
set ewy=null
set Ywy=null
set gwy=null
set Fwy=null
set kwy=null
set jwy=null
set vwy=null
set Iwy=null
set Hwy=null
set Kwy=null
set Vwy=null
set Bwy=null
set Nwy=null
set tuy=null
set Suy=null
set ouy=null
set luy=null
set yuy=null
set euy=null
set auy=null
set duy=null
set Ruy=null
set Yuy=null
set guy=null
set Fuy=null
set xuy=null
endfunction
function TDw takes nothing returns nothing
set qW=0
call Cuy("via function reference Expeditions, line 1174")
endfunction
function TEu takes nothing returns nothing
local unit lEu
local unit bEu
local player yEu
local real pEu
local real eEu
local unit qEu
local unit aEu
local timerdialog nEu
local player dEu
local trigger fEu
local timerdialog REu
if rh==false then
set rh=true
set lEu=k[2]
call ShowUnit(lEu,false)
set bEu=k[2]
call ShowUnit(bEu,true)
set yEu=Gu
set qEu=k[2]
set pEu=GetUnitX(qEu)
set aEu=k[2]
set eEu=GetUnitY(aEu)
if GetLocalPlayer()==yEu then
call SetCameraPosition(pEu,eEu)
endif
set nEu=tr
call DestroyTimerDialog(nEu)
call TimerStart(ir,30.,false,Urw)
set tr=CreateTimerDialog(ir)
set REu=tr
set dEu=Gu
call TimerDialogSetTitle(REu,GetPlayerName(dEu)+" pick race")
call TimerDialogDisplay(tr,true)
set vu=false
set fEu=Bg
call DisableTrigger(fEu)
endif
set lEu=null
set bEu=null
set yEu=null
set qEu=null
set aEu=null
set nEu=null
set dEu=null
set fEu=null
set REu=null
endfunction
function TFc takes nothing returns boolean
local trigger bFc
local trigger yFc
local playerunitevent pFc
local trigger eFc
local playerunitevent qFc
local integer aFc
local trigger nFc
local code dFc
local playerunitevent fFc
local code RFc
set lq=CreateTrigger()
set bFc=lq
call DisableTrigger(bFc)
set yFc=lq
set pFc=EVENT_PLAYER_UNIT_ATTACKED
set eFc=yFc
set qFc=pFc
set aFc=0
loop
call TriggerRegisterPlayerUnitEvent(eFc,Player(aFc),qFc,null)
set aFc=aFc+1
exitwhen aFc==bj_MAX_PLAYER_SLOTS
endloop
set nFc=lq
set dFc=X2
call TriggerAddAction(nFc,dFc)
set fFc=EVENT_PLAYER_UNIT_DEATH
set RFc=C2
call emO(fFc,null,RFc,null)
set bFc=null
set yFc=null
set pFc=null
set eFc=null
set qFc=null
set nFc=null
set fFc=null
return true
endfunction
function TFt takes nothing returns boolean
local playerunitevent fFt=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code RFt=hM
call emO(fFt,null,RFt,null)
set fFt=null
return true
endfunction
function TJp takes nothing returns boolean
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local rect cond_result_1
local region receiver_1
local region this
local rect rct
local region this_1
local rect rct_1
local rect this_2
local rect this_3
local rect this_4
local rect this_5
local rect this_6
local rect this_7
local rect this_8
local rect this_9
local real temp
local real temp_1
local real temp_2
local real temp_3
local real tuple_temp
local real tuple_temp_1
local real tuple_temp_2
local real tuple_temp_3
local real tuple_temp_4
local real tuple_temp_5
local real tuple_temp_6
local real tuple_temp_7
local real tuple_temp_8
local real tuple_temp_9
local real tuple_temp_10
local real tuple_temp_11
local real tuple_temp_12
local real tuple_temp_13
local real tuple_temp_14
local real tuple_temp_15
if false then
set cond_result=Rect(-1024.,-1024.,1024.,1024.)
else
set cond_result=bj_mapInitialPlayableArea
endif
set Ad=cond_result
set receiver=CreateRegion()
set this=receiver
set rct=Ad
call RegionAddRect(this,rct)
if false then
set cond_result_1=Rect(-1536.,-1536.,1536.,1536.)
else
set cond_result_1=GetWorldBounds()
endif
set Dd=cond_result_1
set receiver_1=CreateRegion()
set this_1=receiver_1
set rct_1=Dd
call RegionAddRect(this_1,rct_1)
set this_2=Ad
set temp=GetRectMinX(this_2)
set this_3=Ad
set tuple_temp=temp
set tuple_temp_1=GetRectMinY(this_3)
set Hd=tuple_temp
set Jd=tuple_temp_1
set this_4=Ad
set temp_1=GetRectMaxX(this_4)
set this_5=Ad
set tuple_temp_2=temp_1
set tuple_temp_3=GetRectMaxY(this_5)
set Kd=tuple_temp_2
set Ld=tuple_temp_3
set this_6=Dd
set temp_2=GetRectMinX(this_6)
set this_7=Dd
set tuple_temp_4=temp_2
set tuple_temp_5=GetRectMinY(this_7)
set Xd=tuple_temp_4
set Cd=tuple_temp_5
set this_8=Dd
set temp_3=GetRectMaxX(this_8)
set this_9=Dd
set tuple_temp_6=temp_3
set tuple_temp_7=GetRectMaxY(this_9)
set Vd=tuple_temp_6
set Bd=tuple_temp_7
set tuple_temp_8=Hd
set tuple_temp_9=Jd
set tuple_temp_10=Kd
set tuple_temp_11=Ld
set tuple_temp_12=Xd
set tuple_temp_13=Cd
set tuple_temp_14=Vd
set tuple_temp_15=Bd
endfunction
function TMb takes nothing returns boolean
call initMapBounds()
return true
endfunction
function TMp takes nothing returns boolean
return true
endfunction
function TOt takes nothing returns boolean
return GetSpellAbilityId()==$52455043
endfunction
function JYt takes string YTt returns nothing
local unit GTt
local unit gTt
local unit hTt
local texttag FTt
local integer kTt
local unit jTt
local unit xTt
local integer vTt
local unit mTt
local unittype QTt
local unit WTt
local unittype ETt
local unit ZTt
local unittype UTt
local unit ITt
local unit PTt
local unit ATt
local unitstate DTt
local unit HTt
local unit JTt
local unitstate KTt
local trigger LTt
local unit XTt
local unit CTt
local unit VTt
local unit BTt
local integer NTt
local unit MTt
local integer wYt
local widget uYt
local unit rYt
local real sYt
local texttag tYt
local real iYt
local real SYt
local real cYt
local unit oYt
local unit OYt
local texttag lYt
local integer bYt
local integer yYt
local integer pYt
local integer eYt
local texttag qYt
local real aYt
local texttag nYt
local real dYt
local texttag fYt
local boolean RYt
local texttag TYt
local boolean YYt
local texttag GYt
local string gYt
local real hYt
local texttag FYt
local real kYt
local real jYt
local string xYt
local integer vYt
local real mYt
local integer QYt
local string WYt
local boolean EYt
local boolean ZYt
local boolean UYt
local boolean IYt
local real PYt
local boolean AYt
local player DYt
local real HYt
set aW[qW]=YTt
set qW=qW+1
set GTt=GetAttacker()
set jTt=GTt
if GetUnitTypeId(jTt)==$55303049 then
set xTt=GTt
set vTt=$6272696A
set EYt=RTS(xTt,vTt)!=null==true
else
set EYt=false
endif
if EYt then
set gTt=GetTriggerUnit()
set mTt=gTt
set QTt=UNIT_TYPE_STRUCTURE
if IsUnitType(mTt,QTt)==false then
set WTt=gTt
set ETt=UNIT_TYPE_HERO
set ZYt=IsUnitType(WTt,ETt)==false
else
set ZYt=false
endif
if ZYt then
set ZTt=gTt
set UTt=UNIT_TYPE_ANCIENT
set UYt=IsUnitType(ZTt,UTt)==false
else
set UYt=false
endif
if UYt then
set ITt=gTt
set IYt=IsUnitIllusion(ITt)==false
else
set IYt=false
endif
if IYt then
set PTt=gTt
set ATt=PTt
set DTt=UNIT_STATE_LIFE
set PYt=GetUnitState(ATt,DTt)
set HTt=gTt
set JTt=HTt
set KTt=UNIT_STATE_MAX_LIFE
set AYt=PYt<=GetUnitState(JTt,KTt)*.6
else
set AYt=false
endif
if AYt then
if GetRandomInt(1,100)<=30 then
set LTt=xy
call DisableTrigger(LTt)
set XTt=GTt
set DYt=GetOwningPlayer(XTt)
set CTt=gTt
set HYt=GetUnitX(CTt)
set VTt=gTt
set hTt=CreateUnit(DYt,$75303030,HYt,GetUnitY(VTt),0.)
set BTt=hTt
set NTt=$41304643
call UnitAddAbility(BTt,NTt)
set MTt=hTt
set wYt=852581
set uYt=gTt
call IssueTargetOrderById(MTt,wYt,uYt)
set rYt=hTt
set sYt=3.
call UnitApplyTimedLife(rYt,$42544C46,sYt)
set FTt=CreateTextTag()
set tYt=FTt
set oYt=gTt
set iYt=GetUnitX(oYt)
set OYt=gTt
set SYt=GetUnitY(OYt)
set cYt=50.
call SetTextTagPos(tYt,iYt,SYt,cYt)
set lYt=FTt
set bYt=128
set yYt=0
set pYt=128
set eYt=255
call SetTextTagColor(lYt,bYt,yYt,pYt,eYt)
set qYt=FTt
set aYt=6.
call SetTextTagLifespan(qYt,aYt)
set nYt=FTt
set dYt=4.
call SetTextTagFadepoint(nYt,dYt)
set fYt=FTt
set RYt=true
call SetTextTagVisibility(fYt,RYt)
set TYt=FTt
set YYt=false
call SetTextTagPermanent(TYt,YYt)
set GYt=FTt
set gYt="YOU ARE MINE!"
set hYt=10.
call SetTextTagText(GYt,gYt,hYt*.0023)
set FYt=FTt
set kYt=0.
set jYt=.03
call SetTextTagVelocity(FYt,kYt,jYt)
set xYt="when calling alloc_CallbackSingle_doAfter_DraconMy in DraconMy, line 44"
set aW[qW]=xYt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set vYt=fF
set RF[vYt]=704
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DraconMy.","when calling error in DraconMy, line 44")
set vYt=0
endif
else
set dF=dF-1
set vYt=nF[dF]
set RF[vYt]=704
endif
set qW=qW-1
set kTt=vYt
set mYt=.3
set QYt=kTt
set WYt="when calling doAfter in DraconMy, line 44"
set aW[qW]=WYt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),mYt,QYt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
endif
set qW=qW-1
set GTt=null
set gTt=null
set hTt=null
set FTt=null
set jTt=null
set xTt=null
set mTt=null
set QTt=null
set WTt=null
set ETt=null
set ZTt=null
set UTt=null
set ITt=null
set PTt=null
set ATt=null
set DTt=null
set HTt=null
set JTt=null
set KTt=null
set LTt=null
set XTt=null
set CTt=null
set VTt=null
set BTt=null
set MTt=null
set uYt=null
set rYt=null
set tYt=null
set oYt=null
set OYt=null
set lYt=null
set qYt=null
set nYt=null
set fYt=null
set TYt=null
set GYt=null
set FYt=null
set DYt=null
endfunction
function TPi takes nothing returns nothing
set qW=0
call JYt("via function reference DraconMy, line 50")
endfunction
function TQu takes nothing returns boolean
call CreateTrigger()
return true
endfunction
function d5u takes string A2u returns nothing
local integer D2u
local integer H2u
local integer J2u
local integer K2u
local integer L2u
local string X2u
local integer C2u
local string V2u
local integer B2u
local integer N2u
local integer M2u
local string w5u
local integer u5u
local string r5u
local integer s5u
local integer t5u
local unit i5u
local integer S5u
local player c5u
local unit o5u
local unit O5u
local player l5u
local real b5u
local real y5u
local unit p5u
local unit e5u
local timerdialog q5u
local player a5u
local timerdialog n5u
set aW[qW]=A2u
set qW=qW+1
if mu==false then
set mu=true
set L2u=gY
set X2u="when calling shuffle in PickRace, line 1539"
set aW[qW]=X2u
set qW=qW+1
if ok[L2u]==0 then
if L2u==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(L2u,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set C2u=gY
set V2u="when calling getFirst in PickRace, line 1540"
set aW[qW]=V2u
set qW=qW+1
if ok[C2u]==0 then
if C2u==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set N2u=C2u
set B2u=Hv[Kv[Vv[N2u]]]
set qW=qW-1
set D2u=B2u
call Gqp(Gu,D2u,"when calling pickRaceRandom in PickRace, line 1541")
call eWp(gY,D2u,"when calling remove in PickRace, line 1542")
set M2u=vY
set w5u="when calling shuffle in PickRace, line 1543"
set aW[qW]=w5u
set qW=qW+1
if ok[M2u]==0 then
if M2u==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(M2u,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set u5u=vY
set r5u="when calling getFirst in PickRace, line 1544"
set aW[qW]=r5u
set qW=qW+1
if ok[u5u]==0 then
if u5u==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set t5u=u5u
set s5u=Hv[Kv[Vv[t5u]]]
set qW=qW-1
set H2u=s5u
set J2u=0
loop
exitwhen J2u>3
set i5u=k[J2u]
set S5u=H2u
call UnitRemoveAbility(i5u,S5u)
set J2u=J2u+1
endloop
call eWp(vY,H2u,"when calling remove in PickRace, line 1547")
set c5u=Gu
set K2u=GetPlayerId(c5u)
set o5u=F[K2u]
call ShowUnit(o5u,false)
set O5u=k[0]
call ShowUnit(O5u,true)
set l5u=Yu
set p5u=k[0]
set b5u=GetUnitX(p5u)
set e5u=k[0]
set y5u=GetUnitY(e5u)
if GetLocalPlayer()==l5u then
call SetCameraPosition(b5u,y5u)
endif
set q5u=tr
call DestroyTimerDialog(q5u)
call TimerStart(ir,30.,false,Cww_216)
set tr=CreateTimerDialog(ir)
set n5u=tr
set a5u=Yu
call TimerDialogSetTitle(n5u,GetPlayerName(a5u)+" pick race")
call TimerDialogDisplay(tr,true)
endif
set qW=qW-1
set i5u=null
set c5u=null
set o5u=null
set O5u=null
set l5u=null
set p5u=null
set e5u=null
set q5u=null
set a5u=null
set n5u=null
endfunction
function TTt takes nothing returns nothing
set qW=0
call d5u("via function reference TournamentMode, line 273")
endfunction
function TWo takes nothing returns boolean
local unit dWo=GetFilterUnit()
local unit fWo
local boolean RWo
if IsUnitEnemy(dWo,hG) and IsUnitType(dWo,UNIT_TYPE_STRUCTURE)==false then
set fWo=dWo
set RWo=UnitAlive(fWo)
else
set RWo=false
endif
set dWo=null
set fWo=null
return RWo
endfunction
function rky takes string dFy returns nothing
local unit fFy
local integer RFy
local integer TFy
local unit YFy
local integer GFy
local integer gFy
local unit hFy
local unit FFy
local unit kFy
local integer jFy
local unit xFy
local unittype vFy
local unit mFy
local unittype QFy
local unit WFy
local integer EFy
local unit ZFy
local integer UFy
local integer IFy
local unit PFy
local string AFy
local widget DFy
local string HFy
local integer JFy
local real KFy
local integer LFy
local string XFy
local string CFy
local integer VFy
local real BFy
local integer NFy
local string MFy
local boolean wky
local boolean uky
set aW[qW]=dFy
set qW=qW+1
set fFy=GetAttacker()
set hFy=fFy
set RFy=GetUnitTypeId(hFy)
set FFy=fFy
set TFy=GetPlayerTechCount(GetOwningPlayer(FFy),$5230354C,true)
if RFy==$68303146 then
set kFy=fFy
set jFy=$4130564C
set wky=GetUnitAbilityLevel(kFy,jFy)==1
else
set wky=false
endif
if wky then
set YFy=GetTriggerUnit()
set xFy=YFy
set vFy=UNIT_TYPE_RANGED_ATTACKER
if IsUnitType(xFy,vFy)==true then
set mFy=YFy
set QFy=UNIT_TYPE_HERO
set uky=IsUnitType(mFy,QFy)==false
else
set uky=false
endif
if uky then
endif
set WFy=fFy
set EFy=$4130564B
call UnitAddAbility(WFy,EFy)
set ZFy=fFy
set UFy=$4130564B
set IFy=TFy
call SetUnitAbilityLevel(ZFy,UFy,IFy)
set PFy=fFy
set AFy="shadowstrike"
set DFy=YFy
call IssueTargetOrder(PFy,AFy,DFy)
set HFy="when calling alloc_CallbackSingle_doAfter_LurkingStalkers in LurkingStalkers, line 263"
set aW[qW]=HFy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set JFy=fF
set RF[JFy]=727
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_LurkingStalkers.","when calling error in LurkingStalkers, line 263")
set JFy=0
endif
else
set dF=dF-1
set JFy=nF[dF]
set RF[JFy]=727
endif
set qW=qW-1
set GFy=JFy
set sm[GFy]=fFy
set KFy=2.
set LFy=GFy
set XFy="when calling doAfter in LurkingStalkers, line 263"
set aW[qW]=XFy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),KFy,LFy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set CFy="when calling alloc_CallbackSingle_doAfter_LurkingStalkers in LurkingStalkers, line 266"
set aW[qW]=CFy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set VFy=fF
set RF[VFy]=728
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_LurkingStalkers.","when calling error in LurkingStalkers, line 266")
set VFy=0
endif
else
set dF=dF-1
set VFy=nF[dF]
set RF[VFy]=728
endif
set qW=qW-1
set gFy=VFy
set tm[gFy]=fFy
set BFy=30.
set NFy=gFy
set MFy="when calling doAfter in LurkingStalkers, line 266"
set aW[qW]=MFy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),BFy,NFy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set fFy=null
set YFy=null
set hFy=null
set FFy=null
set kFy=null
set xFy=null
set vFy=null
set mFy=null
set QFy=null
set WFy=null
set ZFy=null
set PFy=null
set DFy=null
endfunction
function TWs takes nothing returns nothing
set qW=0
call rky("via function reference LurkingStalkers, line 273")
endfunction
function cBr takes string KVr returns nothing
local unit LVr
local integer XVr
local integer CVr
local unit VVr
local unit BVr
local integer NVr
local unit MVr
local integer wBr
local integer uBr
local string rBr
local integer sBr
local real tBr
local integer iBr
local string SBr
set aW[qW]=KVr
set qW=qW+1
if GetRandomInt(1,100)<=20 then
set LVr=GetAttacker()
set VVr=LVr
set XVr=GetPlayerTechCount(GetOwningPlayer(VVr),$5230374D,true)
set BVr=LVr
set NVr=$4131384F
call UnitAddAbility(BVr,NVr)
set MVr=LVr
set wBr=$4131384F
set uBr=XVr
call SetUnitAbilityLevel(MVr,wBr,uBr)
set rBr="when calling alloc_CallbackSingle_doAfter_ShieldShatter in ShieldShatter, line 98"
set aW[qW]=rBr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set sBr=fF
set RF[sBr]=750
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ShieldShatter.","when calling error in ShieldShatter, line 98")
set sBr=0
endif
else
set dF=dF-1
set sBr=nF[dF]
set RF[sBr]=750
endif
set qW=qW-1
set CVr=sBr
set sQ[CVr]=LVr
set tBr=2.
set iBr=CVr
set SBr="when calling doAfter in ShieldShatter, line 98"
set aW[qW]=SBr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),tBr,iBr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set LVr=null
set VVr=null
set BVr=null
set MVr=null
endfunction
function TXr takes nothing returns nothing
set qW=0
call cBr("via function reference ShieldShatter, line 105")
endfunction
function Ndl takes unit Pdl returns nothing
local unit Jdl=Pdl
local player Adl=GetOwningPlayer(Jdl)
local unit Kdl=Pdl
local integer Ddl=GetUnitTypeId(Kdl)
local integer Hdl
local unit Ldl
local real Xdl
local real Cdl
local real Vdl
local player Bdl
if Ddl==$65646162 then
set Ldl=GetTriggerUnit()
set Xdl=70.
set Cdl=70.
set Vdl=70.
call SetUnitScale(Ldl,Xdl*.01,Cdl*.01,Vdl*.01)
set Bdl=Adl
set Hdl=GetPlayerId(Bdl)
set K[Hdl]=$78303238
endif
set Adl=null
set Jdl=null
set Kdl=null
set Ldl=null
set Bdl=null
endfunction
function TXt takes nothing returns nothing
call Ndl(GetTriggerUnit())
endfunction
function TYe takes nothing returns boolean
return true
endfunction
function T_t takes nothing returns boolean
local playerunitevent f_t=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code R_t=h0w
call emO(f_t,null,R_t,null)
set f_t=null
return true
endfunction
function TbS takes nothing returns boolean
return true
endfunction
function Tgy takes nothing returns nothing
local unit ngy=GetTriggerUnit()
local unit fgy=ngy
local player dgy
local unit Rgy
if GetUnitTypeId(fgy)==$6E646830 then
set MY=ngy
set Rgy=MY
set dgy=GetOwningPlayer(Rgy)
if dgy==Tu then
set wG=nu
endif
if dgy==gu then
set wG=Ru
endif
if dgy==Yu then
set wG=du
endif
if dgy==Gu then
set wG=fu
endif
endif
set ngy=null
set dgy=null
set fgy=null
set Rgy=null
endfunction
function Xvs takes string Fvs returns nothing
local unit kvs
local integer jvs
local unit xvs
local unit vvs
local unit mvs
local unit Qvs
local unit Wvs
local unit Evs
local integer Zvs
local string Uvs
local integer Ivs
local real Pvs
local integer Avs
local string Dvs
local boolean Hvs
local boolean Jvs
local boolean Kvs
local integer Lvs
set aW[qW]=Fvs
set qW=qW+1
set kvs=GetAttacker()
set xvs=kvs
if GetUnitTypeId(xvs)==$6E303152 then
set Hvs=true
else
set vvs=kvs
set Hvs=GetUnitTypeId(vvs)==$6F303330
endif
if Hvs then
set Jvs=true
else
set mvs=kvs
set Jvs=GetUnitTypeId(mvs)==$6E30314A
endif
if Jvs then
set Qvs=kvs
set Kvs=GetPlayerTechCount(GetOwningPlayer(Qvs),$52303642,true)>0
else
set Kvs=false
endif
if Kvs then
set Lvs=GetRandomInt(1,100)
set Wvs=kvs
if Lvs<=8*GetPlayerTechCount(GetOwningPlayer(Wvs),$52303642,true) then
set Evs=kvs
set Zvs=$414D3033
call UnitAddAbility(Evs,Zvs)
set Uvs="when calling alloc_CallbackSingle_doAfter_FastPaws in FastPaws, line 93"
set aW[qW]=Uvs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Ivs=fF
set RF[Ivs]=709
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_FastPaws.","when calling error in FastPaws, line 93")
set Ivs=0
endif
else
set dF=dF-1
set Ivs=nF[dF]
set RF[Ivs]=709
endif
set qW=qW-1
set jvs=Ivs
set cx[jvs]=kvs
set Pvs=2.
set Avs=jvs
set Dvs="when calling doAfter in FastPaws, line 93"
set aW[qW]=Dvs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Pvs,Avs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set kvs=null
set xvs=null
set vvs=null
set mvs=null
set Qvs=null
set Wvs=null
set Evs=null
endfunction
function Thu takes nothing returns nothing
set qW=0
call Xvs("via function reference FastPaws, line 100")
endfunction
function TiO takes nothing returns boolean
local unit siO=GetFilterUnit()
local unit tiO=siO
local unit iiO
local unit SiO
local unit ciO
local integer oiO
local unit OiO
local integer liO
local unit biO
local integer yiO
local unit piO
local unittype eiO
local player qiO
local boolean aiO
local boolean niO
local boolean diO
local boolean fiO
local boolean RiO
if UnitAlive(tiO) then
set iiO=LoadUnitHandle(qu,$556E6974,$556E6974)
set qiO=GetOwningPlayer(iiO)
set SiO=siO
set aiO=IsPlayerAlly(qiO,GetOwningPlayer(SiO))==false
else
set aiO=false
endif
if aiO then
set ciO=siO
set oiO=$416C6F63
set niO=GetUnitAbilityLevel(ciO,oiO)==0
else
set niO=false
endif
if niO then
set OiO=siO
set liO=$4176756C
set diO=GetUnitAbilityLevel(OiO,liO)==0
else
set diO=false
endif
if diO then
set biO=siO
set yiO=$42637963
set fiO=GetUnitAbilityLevel(biO,yiO)==0
else
set fiO=false
endif
if fiO then
set piO=siO
set eiO=UNIT_TYPE_STRUCTURE
set RiO=IsUnitType(piO,eiO)==false
else
set RiO=false
endif
set siO=null
set tiO=null
set iiO=null
set SiO=null
set ciO=null
set OiO=null
set biO=null
set piO=null
set eiO=null
set qiO=null
return RiO
endfunction
function Tkt takes nothing returns boolean
local unit fkt=GetFilterUnit()
local boolean Rkt=GetUnitTypeId(fkt)==$484D3038
set fkt=null
return Rkt
endfunction
function Tmi takes nothing returns boolean
local unit emi=GetFilterUnit()
local player qmi=GetTriggerPlayer()
local unit ami
local unit nmi
local integer dmi
local boolean fmi
local boolean Rmi
if (emi!=null and IsUnitAlly(emi,qmi))==true then
set ami=GetFilterUnit()
set fmi=UnitAlive(ami)==true
else
set fmi=false
endif
if fmi then
set nmi=GetFilterUnit()
set dmi=$4176756C
set Rmi=GetUnitAbilityLevel(nmi,dmi)==0
else
set Rmi=false
endif
set emi=null
set qmi=null
set ami=null
set nmi=null
return Rmi
endfunction
function Tnc takes nothing returns nothing
local unit Snc=GetEnteringUnit()
local integer cnc
local real onc
local unit Onc
local real lnc
local unit bnc
local unitstate ync
local real pnc
local unit enc
local unitstate qnc
local unit anc
local unit nnc
local unitstate dnc
local unit fnc
local unitstate Rnc
if GetPlayerTechCount(Ud,$52303559,true)>0 then
set cnc=GetPlayerTechCount(Ud,$52303559,true)
set onc=.25*cnc
set Onc=Snc
set anc=Snc
set nnc=anc
set dnc=UNIT_STATE_MAX_LIFE
set lnc=GetUnitState(nnc,dnc)*onc
set bnc=Onc
set ync=UNIT_STATE_LIFE
set pnc=lnc
set fnc=bnc
set Rnc=ync
set enc=bnc
set qnc=ync
call SetUnitState(fnc,Rnc,GetUnitState(enc,qnc)+pnc)
call DestroyEffect(AddSpecialEffectTarget("Heal Orange.mdl",Snc,"origin"))
endif
set Snc=null
set Onc=null
set bnc=null
set ync=null
set enc=null
set qnc=null
set anc=null
set nnc=null
set dnc=null
set fnc=null
set Rnc=null
endfunction
function U0s takes nothing returns boolean
return true
endfunction
function U2w takes nothing returns nothing
local string j1w=GetEventPlayerChatString()
local string x1w=j1w
local integer v1w
local integer m1w
local integer Q1w
local integer W1w
local integer E1w
local integer Z1w
local integer U1w
local integer I1w
local integer P1w
local integer A1w
local integer D1w
local string H1w
local real J1w
local string K1w
local real L1w
local integer X1w
local player C1w
local string V1w
local real B1w
local string N1w
local real M1w
local string w4w
local real u4w
local integer r4w
local player s4w
local string t4w
local real i4w
local string S4w
local real c4w
local string o4w
local real O4w
local integer l4w
local player b4w
local string y4w
local real p4w
local string e4w
local real q4w
local string a4w
local real n4w
local integer d4w
local player f4w
local string R4w
local real T4w
local string Y4w
local real G4w
local string g4w
local real h4w
local integer F4w
local player k4w
local string j4w
local real x4w
local string v4w
local real m4w
local string Q4w
local real W4w
local integer E4w
local player Z4w
local string U4w
local real I4w
local string P4w
local real A4w
local string D4w
local real H4w
local integer J4w
local player K4w
local string L4w
local real X4w
local string C4w
local real V4w
local string B4w
local real N4w
local integer M4w
local player w2w
local string u2w
local real r2w
local string s2w
local real t2w
local string i2w
local real S2w
local integer c2w
local player o2w
local string O2w
local real l2w
local string b2w
local real y2w
local string p2w
local real e2w
local integer q2w
local player a2w
local string n2w
local real d2w
local string f2w
local real R2w
local string T2w
local real Y2w
local integer G2w
local player g2w
local string h2w
local string F2w
local string k2w
local string j2w
local string x2w
local string v2w
local string m2w
local string Q2w
local string W2w
local string E2w
local string Z2w
if x1w=="-tg" then
set H1w="Total gold"
set J1w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,J1w,H1w)
set v1w=0
loop
exitwhen v1w>3
set X1w=hr[v1w]
set h2w=I2S(X1w)+" "+Aw[v1w]
set C1w=Player(v1w)
set K1w=h2w+GetPlayerName(C1w)+"|r"
set L1w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,L1w,K1w)
set v1w=v1w+1
endloop
elseif x1w=="-gm" then
set V1w="Gold from mid"
set B1w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,B1w,V1w)
set m1w=0
loop
exitwhen m1w>3
set r4w=ws[m1w]
set F2w=I2S(r4w)+" "+Aw[m1w]
set s4w=Player(m1w)
set N1w=F2w+GetPlayerName(s4w)+"|r"
set M1w=5.
set w4w=N1w
set u4w=M1w
call DisplayTimedTextToPlayer(IY,0.,0.,u4w,w4w)
set m1w=m1w+1
endloop
elseif x1w=="-gn" then
set t4w="Gold from neutrals"
set i4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,i4w,t4w)
set Q1w=0
loop
exitwhen Q1w>3
set l4w=Vr[Q1w]
set k2w=I2S(l4w)+" "+Aw[Q1w]
set b4w=Player(Q1w)
set S4w=k2w+GetPlayerName(b4w)+"|r"
set c4w=5.
set o4w=S4w
set O4w=c4w
call DisplayTimedTextToPlayer(IY,0.,0.,O4w,o4w)
set Q1w=Q1w+1
endloop
elseif x1w=="-gf" then
set y4w="Gold from fortress"
set p4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,p4w,y4w)
set W1w=0
loop
exitwhen W1w>3
set d4w=Mr[W1w]
set j2w=I2S(d4w)+" "+Aw[W1w]
set f4w=Player(W1w)
set e4w=j2w+GetPlayerName(f4w)+"|r"
set q4w=5.
set a4w=e4w
set n4w=q4w
call DisplayTimedTextToPlayer(IY,0.,0.,n4w,a4w)
set W1w=W1w+1
endloop
elseif x1w=="-re" then
set R4w="Researches"
set T4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,T4w,R4w)
set E1w=0
loop
exitwhen E1w>3
set F4w=Pr[E1w]
set x2w=I2S(F4w)+" "+Aw[E1w]
set k4w=Player(E1w)
set Y4w=x2w+GetPlayerName(k4w)+"|r"
set G4w=5.
set g4w=Y4w
set h4w=G4w
call DisplayTimedTextToPlayer(IY,0.,0.,h4w,g4w)
set E1w=E1w+1
endloop
elseif x1w=="-hk" then
set j4w="Heroes killed"
set x4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,x4w,j4w)
set Z1w=0
loop
exitwhen Z1w>3
set E4w=mr[Z1w]
set v2w=I2S(E4w)+" "+Aw[Z1w]
set Z4w=Player(Z1w)
set v4w=v2w+GetPlayerName(Z4w)+"|r"
set m4w=5.
set Q4w=v4w
set W4w=m4w
call DisplayTimedTextToPlayer(IY,0.,0.,W4w,Q4w)
set Z1w=Z1w+1
endloop
elseif x1w=="-sk" then
set U4w="Special killed"
set I4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,I4w,U4w)
set U1w=0
loop
exitwhen U1w>3
set J4w=Wr[U1w]
set m2w=I2S(J4w)+" "+Aw[U1w]
set K4w=Player(U1w)
set P4w=m2w+GetPlayerName(K4w)+"|r"
set A4w=5.
set D4w=P4w
set H4w=A4w
call DisplayTimedTextToPlayer(IY,0.,0.,H4w,D4w)
set U1w=U1w+1
endloop
elseif x1w=="-ng" then
set L4w="Normal gold"
set X4w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,X4w,L4w)
set I1w=0
loop
exitwhen I1w>3
set M4w=Fr[I1w]
set Q2w=I2S(M4w)+" "+Aw[I1w]
set w2w=Player(I1w)
set C4w=Q2w+GetPlayerName(w2w)+"|r"
set V4w=5.
set B4w=C4w
set N4w=V4w
call DisplayTimedTextToPlayer(IY,0.,0.,N4w,B4w)
set I1w=I1w+1
endloop
elseif x1w=="-gpm" then
set u2w="Normal gold"
set r2w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,r2w,u2w)
set P1w=0
loop
exitwhen P1w>3
set c2w=kr[P1w]
set W2w=I2S(c2w)+" "+Aw[P1w]
set o2w=Player(P1w)
set s2w=W2w+GetPlayerName(o2w)+"|r"
set t2w=5.
set i2w=s2w
set S2w=t2w
call DisplayTimedTextToPlayer(IY,0.,0.,S2w,i2w)
set P1w=P1w+1
endloop
elseif x1w=="-gh" then
set O2w="Gold from hero"
set l2w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,l2w,O2w)
set A1w=0
loop
exitwhen A1w>3
set q2w=Br[A1w]
set E2w=I2S(q2w)+" "+Aw[A1w]
set a2w=Player(A1w)
set b2w=E2w+GetPlayerName(a2w)+"|r"
set y2w=5.
set p2w=b2w
set e2w=y2w
call DisplayTimedTextToPlayer(IY,0.,0.,e2w,p2w)
set A1w=A1w+1
endloop
elseif x1w=="-gs" then
set n2w="Gold from Salvage"
set d2w=5.
call DisplayTimedTextToPlayer(IY,0.,0.,d2w,n2w)
set D1w=0
loop
exitwhen D1w>3
set G2w=Cr[D1w]
set Z2w=I2S(G2w)+" "+Aw[D1w]
set g2w=Player(D1w)
set f2w=Z2w+GetPlayerName(g2w)+"|r"
set R2w=5.
set T2w=f2w
set Y2w=R2w
call DisplayTimedTextToPlayer(IY,0.,0.,Y2w,T2w)
set D1w=D1w+1
endloop
endif
set C1w=null
set s4w=null
set b4w=null
set f4w=null
set k4w=null
set Z4w=null
set K4w=null
set w2w=null
set o2w=null
set a2w=null
set g2w=null
endfunction
function U3S takes nothing returns nothing
local integer pMS=GetSpellAbilityId()
local unit eMS
local integer qMS
local integer aMS
local integer nMS
local integer dMS
local unit fMS
local unit RMS
local real TMS
local player YMS
local integer GMS
local real gMS
local real hMS
local real FMS
local real kMS
local unit jMS
local unit xMS
local real vMS
local player mMS
local integer QMS
local real WMS
local real EMS
local real ZMS
local real UMS
local unit IMS
local unit PMS
local real AMS
local player DMS
local integer HMS
local real JMS
local real KMS
local real LMS
local real XMS
local unit CMS
local unit VMS
local real BMS
local player NMS
local integer MMS
local real w3S
local real u3S
local real r3S
local real s3S
local player t3S
local integer i3S
local real S3S
local real c3S
local player o3S
local integer O3S
local real l3S
local real b3S
local player y3S
local integer p3S
local real e3S
local real q3S
local player a3S
local integer n3S
local real d3S
local real f3S
local real R3S
local real T3S
local real Y3S
local real G3S
local real g3S
local real h3S
local real F3S
local real k3S
local real j3S
local real x3S
local real v3S
local real m3S
local real Q3S
local real W3S
local real E3S
local real Z3S
if pMS==$41305636 then
set eMS=GetSpellAbilityUnit()
set fMS=eMS
if GetOwningPlayer(fMS)==Tu then
set qMS=0
loop
exitwhen qMS>5
set YMS=nu
set GMS=$6E303055
set R3S=ad[qMS]
set T3S=Rd[qMS]
set gMS=R3S
set hMS=T3S
set Y3S=270.
set FMS=Y3S
set t3S=YMS
set i3S=GMS
set S3S=gMS
set c3S=hMS
set G3S=FMS
set kMS=G3S
set RMS=CreateUnit(t3S,i3S,S3S,c3S,kMS*57.295779513)
set TMS=75.
call UnitApplyTimedLife(RMS,$42544C46,TMS)
set qMS=qMS+1
endloop
endif
set jMS=eMS
if GetOwningPlayer(jMS)==gu then
set aMS=0
loop
exitwhen aMS>5
set mMS=Ru
set QMS=$6E303055
set g3S=nd[aMS]
set h3S=Td[aMS]
set WMS=g3S
set EMS=h3S
set F3S=270.
set ZMS=F3S
set o3S=mMS
set O3S=QMS
set l3S=WMS
set b3S=EMS
set k3S=ZMS
set UMS=k3S
set xMS=CreateUnit(o3S,O3S,l3S,b3S,UMS*57.295779513)
set vMS=75.
call UnitApplyTimedLife(xMS,$42544C46,vMS)
set aMS=aMS+1
endloop
endif
set IMS=eMS
if GetOwningPlayer(IMS)==Yu then
set nMS=0
loop
exitwhen nMS>5
set DMS=du
set HMS=$6E303055
set j3S=dd[nMS]
set x3S=Yd[nMS]
set JMS=j3S
set KMS=x3S
set v3S=270.
set LMS=v3S
set y3S=DMS
set p3S=HMS
set e3S=JMS
set q3S=KMS
set m3S=LMS
set XMS=m3S
set PMS=CreateUnit(y3S,p3S,e3S,q3S,XMS*57.295779513)
set AMS=75.
call UnitApplyTimedLife(PMS,$42544C46,AMS)
set nMS=nMS+1
endloop
endif
set CMS=eMS
if GetOwningPlayer(CMS)==Gu then
set dMS=0
loop
exitwhen dMS>5
set NMS=fu
set MMS=$6E303055
set Q3S=fd[dMS]
set W3S=Gd[dMS]
set w3S=Q3S
set u3S=W3S
set E3S=270.
set r3S=E3S
set a3S=NMS
set n3S=MMS
set d3S=w3S
set f3S=u3S
set Z3S=r3S
set s3S=Z3S
set VMS=CreateUnit(a3S,n3S,d3S,f3S,s3S*57.295779513)
set BMS=75.
call UnitApplyTimedLife(VMS,$42544C46,BMS)
set dMS=dMS+1
endloop
endif
endif
set eMS=null
set fMS=null
set RMS=null
set YMS=null
set jMS=null
set xMS=null
set mMS=null
set IMS=null
set PMS=null
set DMS=null
set CMS=null
set VMS=null
set NMS=null
set t3S=null
set o3S=null
set y3S=null
set a3S=null
endfunction
function U6l takes nothing returns boolean
return true
endfunction
function U7s takes nothing returns nothing
local unit v7s=GetTriggerUnit()
local integer m7s=GetResearched()
local unit E7s=v7s
local player Q7s=GetOwningPlayer(E7s)
local player W7s
local trigger Z7s
if m7s==$52303542 then
set X[GetPlayerId(Q7s)]=$6E303141
endif
if m7s==$52303542 then
set W7s=GetTriggerPlayer()
if GetPlayerTechCount(W7s,$52303542,true)>0 then
set Z7s=bl
call EnableTrigger(Z7s)
endif
endif
set v7s=null
set Q7s=null
set W7s=null
set E7s=null
set Z7s=null
endfunction
function U7w takes nothing returns boolean
return true
endfunction
function U8w takes nothing returns boolean
return true
endfunction
function U9r takes nothing returns boolean
return true
endfunction
function UBt takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function UCt takes nothing returns nothing
local unit mCt=GetSpellAbilityUnit()
local unit QCt=mCt
local unit WCt
local integer ECt
local boolean ZCt
if GetUnitTypeId(QCt)==$4F303344 then
set WCt=mCt
set ECt=$49303135
set ZCt=RTS(WCt,ECt)!=null==true
else
set ZCt=false
endif
if ZCt then
if GetRandomInt(1,100)<=15 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl",mCt,"chest"))
call UnitResetCooldown(mCt)
endif
endif
set mCt=null
set QCt=null
set WCt=null
endfunction
function UCy takes nothing returns nothing
local integer IJy=GetPlayerTechCount(Ud,$52303644,true)
local player oLy=Ud
local real PJy
local real AJy
local integer DJy
local integer HJy
local integer JJy
local integer KJy
local real LJy
local real XJy
local integer CJy
local integer VJy
local integer BJy
local integer NJy
local real MJy
local real wKy
local integer uKy
local integer rKy
local integer sKy
local integer tKy
local real iKy
local real SKy
local integer cKy
local integer oKy
local integer OKy
local integer lKy
local real bKy
local real yKy
local integer pKy
local integer eKy
local integer qKy
local integer aKy
local real nKy
local real dKy
local integer fKy
local integer RKy
local integer TKy
local integer YKy
local real GKy
local real gKy
local integer hKy
local integer FKy
local integer kKy
local integer jKy
local real xKy
local real vKy
local integer mKy
local integer QKy
local integer WKy
local integer EKy
local real ZKy
local real UKy
local integer IKy
local real PKy
local real AKy
local integer DKy
local real HKy
local real JKy
local integer KKy
local real LKy
local real XKy
local integer CKy
local real VKy
local real BKy
local integer NKy
local real MKy
local real wLy
local integer uLy
local real rLy
local real sLy
local integer tLy
local real iLy
local real SLy
local integer cLy
local player OLy
local unit lLy
local integer bLy
local unit yLy
local integer pLy
local unit eLy
local integer qLy
local unit aLy
local integer nLy
local unit dLy
local integer fLy
local unit RLy
local integer TLy
local unit YLy
local integer GLy
local unit gLy
local integer hLy
local unit FLy
local integer kLy
local unit jLy
local integer xLy
local unit vLy
local integer mLy
local unit QLy
local integer WLy
local unit ELy
local integer ZLy
local unit ULy
local integer ILy
local unit PLy
local integer ALy
local unit DLy
local integer HLy
local unit JLy
local integer KLy
local unit LLy
local integer XLy
local unit CLy
local integer VLy
local unit BLy
local integer NLy
local unit MLy
local integer wXy
local unit uXy
local integer rXy
local unit sXy
local integer tXy
local unit iXy
local integer SXy
local unit cXy
local integer oXy
local unit OXy
local integer lXy
local unit bXy
local integer yXy
local unit pXy
local integer eXy
local unit qXy
local integer aXy
local unit nXy
local integer dXy
local unit fXy
local integer RXy
local unit TXy
local integer YXy
local unit GXy
local integer gXy
local unit hXy
local integer FXy
local unit kXy
local integer jXy
local unit xXy
local integer vXy
local unit mXy
local integer QXy
local unit WXy
local integer EXy
local unit ZXy
local integer UXy
local unit IXy
local integer PXy
local unit AXy
local integer DXy
local unit HXy
local integer JXy
local unit KXy
local integer LXy
local unit XXy
local integer CXy
local unit VXy
local integer BXy
local unit NXy
local integer MXy
local unit wCy
local integer uCy
local unit rCy
local integer sCy
local unit tCy
local integer iCy
local unit SCy
local integer cCy
local unit oCy
local integer OCy
local unit lCy
local integer bCy
local unit yCy
local integer pCy
local unit eCy
local integer qCy
local unit aCy
local integer nCy
local unit dCy
local integer fCy
local unit RCy
local integer TCy
local unit YCy
local integer GCy
local unit gCy
local integer hCy
local unit FCy
local integer kCy
local unit jCy
local integer xCy
local unit vCy
local integer mCy
local unit QCy
local integer WCy
local unit ECy
local integer ZCy
set VR=Player(GetPlayerId(oLy)+4)
set OLy=Ud
set BR=GetPlayerId(OLy)
if g[1]!=null and fq==false then
set PJy=GetRectCenterX(bs)
set AJy=GetRectCenterY(bs)
if IJy==1 then
set DJy=GetRandomInt(1,3)
if DJy==1 then
set NR=CreateUnit(VR,A[BR],PJy,AJy,0.)
elseif DJy==2 then
set NR=CreateUnit(VR,D[BR],PJy,AJy,0.)
else
set NR=CreateUnit(VR,H[BR],PJy,AJy,0.)
endif
elseif IJy==2 then
set HJy=GetRandomInt(1,4)
if HJy==1 then
set NR=CreateUnit(VR,A[BR],PJy,AJy,0.)
elseif HJy==2 then
set NR=CreateUnit(VR,D[BR],PJy,AJy,0.)
elseif HJy==3 then
set NR=CreateUnit(VR,H[BR],PJy,AJy,0.)
else
set NR=CreateUnit(VR,J[BR],PJy,AJy,0.)
endif
elseif IJy==3 then
set JJy=GetRandomInt(1,5)
if JJy==1 then
set NR=CreateUnit(VR,A[BR],PJy,AJy,0.)
elseif JJy==2 then
set NR=CreateUnit(VR,D[BR],PJy,AJy,0.)
elseif JJy==3 then
set NR=CreateUnit(VR,H[BR],PJy,AJy,0.)
elseif JJy==4 then
set NR=CreateUnit(VR,J[BR],PJy,AJy,0.)
else
set NR=CreateUnit(VR,K[BR],PJy,AJy,0.)
endif
else
set KJy=GetRandomInt(1,6)
if KJy==1 then
set NR=CreateUnit(VR,A[BR],PJy,AJy,0.)
elseif KJy==2 then
set NR=CreateUnit(VR,D[BR],PJy,AJy,0.)
elseif KJy==3 then
set NR=CreateUnit(VR,H[BR],PJy,AJy,0.)
elseif KJy==4 then
set NR=CreateUnit(VR,J[BR],PJy,AJy,0.)
elseif KJy==5 then
set NR=CreateUnit(VR,K[BR],PJy,AJy,0.)
else
set NR=CreateUnit(VR,L[BR],PJy,AJy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set lLy=NR
set bLy=$41313142
call UnitAddAbility(lLy,bLy)
call dYr(NR)
endif
if g[2]!=null and fq==false then
set LJy=GetRectCenterX(ys)
set XJy=GetRectCenterY(ys)
if IJy==1 then
set CJy=GetRandomInt(1,3)
if CJy==1 then
set NR=CreateUnit(VR,A[BR],LJy,XJy,0.)
elseif CJy==2 then
set NR=CreateUnit(VR,D[BR],LJy,XJy,0.)
else
set NR=CreateUnit(VR,H[BR],LJy,XJy,0.)
endif
elseif IJy==2 then
set VJy=GetRandomInt(1,4)
if VJy==1 then
set NR=CreateUnit(VR,A[BR],LJy,XJy,0.)
elseif VJy==2 then
set NR=CreateUnit(VR,D[BR],LJy,XJy,0.)
elseif VJy==3 then
set NR=CreateUnit(VR,H[BR],LJy,XJy,0.)
else
set NR=CreateUnit(VR,J[BR],LJy,XJy,0.)
endif
elseif IJy==3 then
set BJy=GetRandomInt(1,5)
if BJy==1 then
set NR=CreateUnit(VR,A[BR],LJy,XJy,0.)
elseif BJy==2 then
set NR=CreateUnit(VR,D[BR],LJy,XJy,0.)
elseif BJy==3 then
set NR=CreateUnit(VR,H[BR],LJy,XJy,0.)
elseif BJy==4 then
set NR=CreateUnit(VR,J[BR],LJy,XJy,0.)
else
set NR=CreateUnit(VR,K[BR],LJy,XJy,0.)
endif
else
set NJy=GetRandomInt(1,6)
if NJy==1 then
set NR=CreateUnit(VR,A[BR],LJy,XJy,0.)
elseif NJy==2 then
set NR=CreateUnit(VR,D[BR],LJy,XJy,0.)
elseif NJy==3 then
set NR=CreateUnit(VR,H[BR],LJy,XJy,0.)
elseif NJy==4 then
set NR=CreateUnit(VR,J[BR],LJy,XJy,0.)
elseif NJy==5 then
set NR=CreateUnit(VR,K[BR],LJy,XJy,0.)
else
set NR=CreateUnit(VR,L[BR],LJy,XJy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set yLy=NR
set pLy=$41313142
call UnitAddAbility(yLy,pLy)
call dYr(NR)
endif
if g[3]!=null and fq==false then
set MJy=GetRectCenterX(ps)
set wKy=GetRectCenterY(ps)
if IJy==1 then
set uKy=GetRandomInt(1,3)
if uKy==1 then
set NR=CreateUnit(VR,A[BR],MJy,wKy,0.)
elseif uKy==2 then
set NR=CreateUnit(VR,D[BR],MJy,wKy,0.)
else
set NR=CreateUnit(VR,H[BR],MJy,wKy,0.)
endif
elseif IJy==2 then
set rKy=GetRandomInt(1,4)
if rKy==1 then
set NR=CreateUnit(VR,A[BR],MJy,wKy,0.)
elseif rKy==2 then
set NR=CreateUnit(VR,D[BR],MJy,wKy,0.)
elseif rKy==3 then
set NR=CreateUnit(VR,H[BR],MJy,wKy,0.)
else
set NR=CreateUnit(VR,J[BR],MJy,wKy,0.)
endif
elseif IJy==3 then
set sKy=GetRandomInt(1,5)
if sKy==1 then
set NR=CreateUnit(VR,A[BR],MJy,wKy,0.)
elseif sKy==2 then
set NR=CreateUnit(VR,D[BR],MJy,wKy,0.)
elseif sKy==3 then
set NR=CreateUnit(VR,H[BR],MJy,wKy,0.)
elseif sKy==4 then
set NR=CreateUnit(VR,J[BR],MJy,wKy,0.)
else
set NR=CreateUnit(VR,K[BR],MJy,wKy,0.)
endif
else
set tKy=GetRandomInt(1,6)
if tKy==1 then
set NR=CreateUnit(VR,A[BR],MJy,wKy,0.)
elseif tKy==2 then
set NR=CreateUnit(VR,D[BR],MJy,wKy,0.)
elseif tKy==3 then
set NR=CreateUnit(VR,H[BR],MJy,wKy,0.)
elseif tKy==4 then
set NR=CreateUnit(VR,J[BR],MJy,wKy,0.)
elseif tKy==5 then
set NR=CreateUnit(VR,K[BR],MJy,wKy,0.)
else
set NR=CreateUnit(VR,L[BR],MJy,wKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set eLy=NR
set qLy=$41313142
call UnitAddAbility(eLy,qLy)
call dYr(NR)
endif
if g[4]!=null and fq==false then
set iKy=GetRectCenterX(es)
set SKy=GetRectCenterY(es)
if IJy==1 then
set cKy=GetRandomInt(1,3)
if cKy==1 then
set NR=CreateUnit(VR,A[BR],iKy,SKy,0.)
elseif cKy==2 then
set NR=CreateUnit(VR,D[BR],iKy,SKy,0.)
else
set NR=CreateUnit(VR,H[BR],iKy,SKy,0.)
endif
elseif IJy==2 then
set oKy=GetRandomInt(1,4)
if oKy==1 then
set NR=CreateUnit(VR,A[BR],iKy,SKy,0.)
elseif oKy==2 then
set NR=CreateUnit(VR,D[BR],iKy,SKy,0.)
elseif oKy==3 then
set NR=CreateUnit(VR,H[BR],iKy,SKy,0.)
else
set NR=CreateUnit(VR,J[BR],iKy,SKy,0.)
endif
elseif IJy==3 then
set OKy=GetRandomInt(1,5)
if OKy==1 then
set NR=CreateUnit(VR,A[BR],iKy,SKy,0.)
elseif OKy==2 then
set NR=CreateUnit(VR,D[BR],iKy,SKy,0.)
elseif OKy==3 then
set NR=CreateUnit(VR,H[BR],iKy,SKy,0.)
elseif OKy==4 then
set NR=CreateUnit(VR,J[BR],iKy,SKy,0.)
else
set NR=CreateUnit(VR,K[BR],iKy,SKy,0.)
endif
else
set lKy=GetRandomInt(1,6)
if lKy==1 then
set NR=CreateUnit(VR,A[BR],iKy,SKy,0.)
elseif lKy==2 then
set NR=CreateUnit(VR,D[BR],iKy,SKy,0.)
elseif lKy==3 then
set NR=CreateUnit(VR,H[BR],iKy,SKy,0.)
elseif lKy==4 then
set NR=CreateUnit(VR,J[BR],iKy,SKy,0.)
elseif lKy==5 then
set NR=CreateUnit(VR,K[BR],iKy,SKy,0.)
else
set NR=CreateUnit(VR,L[BR],iKy,SKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set aLy=NR
set nLy=$41313142
call UnitAddAbility(aLy,nLy)
call dYr(NR)
endif
if g[5]!=null and fq==false then
set bKy=GetRectCenterX(qs)
set yKy=GetRectCenterY(qs)
if IJy==1 then
set pKy=GetRandomInt(1,3)
if pKy==1 then
set NR=CreateUnit(VR,A[BR],bKy,yKy,0.)
elseif pKy==2 then
set NR=CreateUnit(VR,D[BR],bKy,yKy,0.)
else
set NR=CreateUnit(VR,H[BR],bKy,yKy,0.)
endif
elseif IJy==2 then
set eKy=GetRandomInt(1,4)
if eKy==1 then
set NR=CreateUnit(VR,A[BR],bKy,yKy,0.)
elseif eKy==2 then
set NR=CreateUnit(VR,D[BR],bKy,yKy,0.)
elseif eKy==3 then
set NR=CreateUnit(VR,H[BR],bKy,yKy,0.)
else
set NR=CreateUnit(VR,J[BR],bKy,yKy,0.)
endif
elseif IJy==3 then
set qKy=GetRandomInt(1,5)
if qKy==1 then
set NR=CreateUnit(VR,A[BR],bKy,yKy,0.)
elseif qKy==2 then
set NR=CreateUnit(VR,D[BR],bKy,yKy,0.)
elseif qKy==3 then
set NR=CreateUnit(VR,H[BR],bKy,yKy,0.)
elseif qKy==4 then
set NR=CreateUnit(VR,J[BR],bKy,yKy,0.)
else
set NR=CreateUnit(VR,K[BR],bKy,yKy,0.)
endif
else
set aKy=GetRandomInt(1,6)
if aKy==1 then
set NR=CreateUnit(VR,A[BR],bKy,yKy,0.)
elseif aKy==2 then
set NR=CreateUnit(VR,D[BR],bKy,yKy,0.)
elseif aKy==3 then
set NR=CreateUnit(VR,H[BR],bKy,yKy,0.)
elseif aKy==4 then
set NR=CreateUnit(VR,J[BR],bKy,yKy,0.)
elseif aKy==5 then
set NR=CreateUnit(VR,K[BR],bKy,yKy,0.)
else
set NR=CreateUnit(VR,L[BR],bKy,yKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set dLy=NR
set fLy=$41313142
call UnitAddAbility(dLy,fLy)
call dYr(NR)
endif
if g[6]!=null and fq==false then
set nKy=GetRectCenterX(as)
set dKy=GetRectCenterY(as)
if IJy==1 then
set fKy=GetRandomInt(1,3)
if fKy==1 then
set NR=CreateUnit(VR,A[BR],nKy,dKy,0.)
elseif fKy==2 then
set NR=CreateUnit(VR,D[BR],nKy,dKy,0.)
else
set NR=CreateUnit(VR,H[BR],nKy,dKy,0.)
endif
elseif IJy==2 then
set RKy=GetRandomInt(1,4)
if RKy==1 then
set NR=CreateUnit(VR,A[BR],nKy,dKy,0.)
elseif RKy==2 then
set NR=CreateUnit(VR,D[BR],nKy,dKy,0.)
elseif RKy==3 then
set NR=CreateUnit(VR,H[BR],nKy,dKy,0.)
else
set NR=CreateUnit(VR,J[BR],nKy,dKy,0.)
endif
elseif IJy==3 then
set TKy=GetRandomInt(1,5)
if TKy==1 then
set NR=CreateUnit(VR,A[BR],nKy,dKy,0.)
elseif TKy==2 then
set NR=CreateUnit(VR,D[BR],nKy,dKy,0.)
elseif TKy==3 then
set NR=CreateUnit(VR,H[BR],nKy,dKy,0.)
elseif TKy==4 then
set NR=CreateUnit(VR,J[BR],nKy,dKy,0.)
else
set NR=CreateUnit(VR,K[BR],nKy,dKy,0.)
endif
else
set YKy=GetRandomInt(1,6)
if YKy==1 then
set NR=CreateUnit(VR,A[BR],nKy,dKy,0.)
elseif YKy==2 then
set NR=CreateUnit(VR,D[BR],nKy,dKy,0.)
elseif YKy==3 then
set NR=CreateUnit(VR,H[BR],nKy,dKy,0.)
elseif YKy==4 then
set NR=CreateUnit(VR,J[BR],nKy,dKy,0.)
elseif YKy==5 then
set NR=CreateUnit(VR,K[BR],nKy,dKy,0.)
else
set NR=CreateUnit(VR,L[BR],nKy,dKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set RLy=NR
set TLy=$41313142
call UnitAddAbility(RLy,TLy)
call dYr(NR)
endif
if g[7]!=null and fq==false then
set GKy=GetRectCenterX(ns)
set gKy=GetRectCenterY(ns)
if IJy==1 then
set hKy=GetRandomInt(1,3)
if hKy==1 then
set NR=CreateUnit(VR,A[BR],GKy,gKy,0.)
elseif hKy==2 then
set NR=CreateUnit(VR,D[BR],GKy,gKy,0.)
else
set NR=CreateUnit(VR,H[BR],GKy,gKy,0.)
endif
elseif IJy==2 then
set FKy=GetRandomInt(1,4)
if FKy==1 then
set NR=CreateUnit(VR,A[BR],GKy,gKy,0.)
elseif FKy==2 then
set NR=CreateUnit(VR,D[BR],GKy,gKy,0.)
elseif FKy==3 then
set NR=CreateUnit(VR,H[BR],GKy,gKy,0.)
else
set NR=CreateUnit(VR,J[BR],GKy,gKy,0.)
endif
elseif IJy==3 then
set kKy=GetRandomInt(1,5)
if kKy==1 then
set NR=CreateUnit(VR,A[BR],GKy,gKy,0.)
elseif kKy==2 then
set NR=CreateUnit(VR,D[BR],GKy,gKy,0.)
elseif kKy==3 then
set NR=CreateUnit(VR,H[BR],GKy,gKy,0.)
elseif kKy==4 then
set NR=CreateUnit(VR,J[BR],GKy,gKy,0.)
else
set NR=CreateUnit(VR,K[BR],GKy,gKy,0.)
endif
else
set jKy=GetRandomInt(1,6)
if jKy==1 then
set NR=CreateUnit(VR,A[BR],GKy,gKy,0.)
elseif jKy==2 then
set NR=CreateUnit(VR,D[BR],GKy,gKy,0.)
elseif jKy==3 then
set NR=CreateUnit(VR,H[BR],GKy,gKy,0.)
elseif jKy==4 then
set NR=CreateUnit(VR,J[BR],GKy,gKy,0.)
elseif jKy==5 then
set NR=CreateUnit(VR,K[BR],GKy,gKy,0.)
else
set NR=CreateUnit(VR,L[BR],GKy,gKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set YLy=NR
set GLy=$41313142
call UnitAddAbility(YLy,GLy)
call dYr(NR)
endif
if g[8]!=null and fq==false then
set xKy=GetRectCenterX(ds)
set vKy=GetRectCenterY(ds)
if IJy==1 then
set mKy=GetRandomInt(1,3)
if mKy==1 then
set NR=CreateUnit(VR,A[BR],xKy,vKy,0.)
elseif mKy==2 then
set NR=CreateUnit(VR,D[BR],xKy,vKy,0.)
else
set NR=CreateUnit(VR,H[BR],xKy,vKy,0.)
endif
elseif IJy==2 then
set QKy=GetRandomInt(1,4)
if QKy==1 then
set NR=CreateUnit(VR,A[BR],xKy,vKy,0.)
elseif QKy==2 then
set NR=CreateUnit(VR,D[BR],xKy,vKy,0.)
elseif QKy==3 then
set NR=CreateUnit(VR,H[BR],xKy,vKy,0.)
else
set NR=CreateUnit(VR,J[BR],xKy,vKy,0.)
endif
elseif IJy==3 then
set WKy=GetRandomInt(1,5)
if WKy==1 then
set NR=CreateUnit(VR,A[BR],xKy,vKy,0.)
elseif WKy==2 then
set NR=CreateUnit(VR,D[BR],xKy,vKy,0.)
elseif WKy==3 then
set NR=CreateUnit(VR,H[BR],xKy,vKy,0.)
elseif WKy==4 then
set NR=CreateUnit(VR,J[BR],xKy,vKy,0.)
else
set NR=CreateUnit(VR,K[BR],xKy,vKy,0.)
endif
else
set EKy=GetRandomInt(1,6)
if EKy==1 then
set NR=CreateUnit(VR,A[BR],xKy,vKy,0.)
elseif EKy==2 then
set NR=CreateUnit(VR,D[BR],xKy,vKy,0.)
elseif EKy==3 then
set NR=CreateUnit(VR,H[BR],xKy,vKy,0.)
elseif EKy==4 then
set NR=CreateUnit(VR,J[BR],xKy,vKy,0.)
elseif EKy==5 then
set NR=CreateUnit(VR,K[BR],xKy,vKy,0.)
else
set NR=CreateUnit(VR,L[BR],xKy,vKy,0.)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",NR,"origin"))
set gLy=NR
set hLy=$41313142
call UnitAddAbility(gLy,hLy)
call dYr(NR)
endif
if h[1]!=null and fq==true then
set ZKy=GetRectCenterX(bs)
set UKy=GetRectCenterY(bs)
set IKy=GetRandomInt(1,3)
if IKy==1 then
set NR=CreateUnit(VR,$7530304F,ZKy,UKy,0.)
set FLy=NR
set kLy=$4130534F
call UnitAddAbility(FLy,kLy)
set jLy=NR
set xLy=$41304933
call UnitAddAbility(jLy,xLy)
elseif IKy==2 then
set NR=CreateUnit(VR,$75303050,ZKy,UKy,0.)
set vLy=NR
set mLy=$41313533
call UnitAddAbility(vLy,mLy)
set QLy=NR
set WLy=$41313534
call UnitAddAbility(QLy,WLy)
else
set NR=CreateUnit(VR,$75303051,ZKy,UKy,0.)
set ELy=NR
set ZLy=$41303950
call UnitAddAbility(ELy,ZLy)
set ULy=NR
set ILy=$41436374
call UnitAddAbility(ULy,ILy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set PLy=NR
set ALy=$41313142
call UnitAddAbility(PLy,ALy)
call dYr(NR)
endif
if h[2]!=null and fq==true then
set PKy=GetRectCenterX(ys)
set AKy=GetRectCenterY(ys)
set DKy=GetRandomInt(1,3)
if DKy==1 then
set NR=CreateUnit(VR,$7530304F,PKy,AKy,0.)
set DLy=NR
set HLy=$4130534F
call UnitAddAbility(DLy,HLy)
set JLy=NR
set KLy=$41304933
call UnitAddAbility(JLy,KLy)
elseif DKy==2 then
set NR=CreateUnit(VR,$75303050,PKy,AKy,0.)
set LLy=NR
set XLy=$41313533
call UnitAddAbility(LLy,XLy)
set CLy=NR
set VLy=$41313534
call UnitAddAbility(CLy,VLy)
else
set NR=CreateUnit(VR,$75303051,PKy,AKy,0.)
set BLy=NR
set NLy=$41303950
call UnitAddAbility(BLy,NLy)
set MLy=NR
set wXy=$41436374
call UnitAddAbility(MLy,wXy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set uXy=NR
set rXy=$41313142
call UnitAddAbility(uXy,rXy)
call dYr(NR)
endif
if h[3]!=null and fq==true then
set HKy=GetRectCenterX(ps)
set JKy=GetRectCenterY(ps)
set KKy=GetRandomInt(1,3)
if KKy==1 then
set NR=CreateUnit(VR,$7530304F,HKy,JKy,0.)
set sXy=NR
set tXy=$4130534F
call UnitAddAbility(sXy,tXy)
set iXy=NR
set SXy=$41304933
call UnitAddAbility(iXy,SXy)
elseif KKy==2 then
set NR=CreateUnit(VR,$75303050,HKy,JKy,0.)
set cXy=NR
set oXy=$41313533
call UnitAddAbility(cXy,oXy)
set OXy=NR
set lXy=$41313534
call UnitAddAbility(OXy,lXy)
else
set NR=CreateUnit(VR,$75303051,HKy,JKy,0.)
set bXy=NR
set yXy=$41303950
call UnitAddAbility(bXy,yXy)
set pXy=NR
set eXy=$41436374
call UnitAddAbility(pXy,eXy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set qXy=NR
set aXy=$41313142
call UnitAddAbility(qXy,aXy)
call dYr(NR)
endif
if h[4]!=null and fq==true then
set LKy=GetRectCenterX(es)
set XKy=GetRectCenterY(es)
set CKy=GetRandomInt(1,3)
if CKy==1 then
set NR=CreateUnit(VR,$7530304F,LKy,XKy,0.)
set nXy=NR
set dXy=$4130534F
call UnitAddAbility(nXy,dXy)
set fXy=NR
set RXy=$41304933
call UnitAddAbility(fXy,RXy)
elseif CKy==2 then
set NR=CreateUnit(VR,$75303050,LKy,XKy,0.)
set TXy=NR
set YXy=$41313533
call UnitAddAbility(TXy,YXy)
set GXy=NR
set gXy=$41313534
call UnitAddAbility(GXy,gXy)
else
set NR=CreateUnit(VR,$75303051,LKy,XKy,0.)
set hXy=NR
set FXy=$41303950
call UnitAddAbility(hXy,FXy)
set kXy=NR
set jXy=$41436374
call UnitAddAbility(kXy,jXy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set xXy=NR
set vXy=$41313142
call UnitAddAbility(xXy,vXy)
call dYr(NR)
endif
if h[5]!=null and fq==true then
set VKy=GetRectCenterX(qs)
set BKy=GetRectCenterY(qs)
set NKy=GetRandomInt(1,3)
if NKy==1 then
set NR=CreateUnit(VR,$7530304F,VKy,BKy,0.)
set mXy=NR
set QXy=$4130534F
call UnitAddAbility(mXy,QXy)
set WXy=NR
set EXy=$41304933
call UnitAddAbility(WXy,EXy)
elseif NKy==2 then
set NR=CreateUnit(VR,$75303050,VKy,BKy,0.)
set ZXy=NR
set UXy=$41313533
call UnitAddAbility(ZXy,UXy)
set IXy=NR
set PXy=$41313534
call UnitAddAbility(IXy,PXy)
else
set NR=CreateUnit(VR,$75303051,VKy,BKy,0.)
set AXy=NR
set DXy=$41303950
call UnitAddAbility(AXy,DXy)
set HXy=NR
set JXy=$41436374
call UnitAddAbility(HXy,JXy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set KXy=NR
set LXy=$41313142
call UnitAddAbility(KXy,LXy)
call dYr(NR)
endif
if h[6]!=null and fq==true then
set MKy=GetRectCenterX(as)
set wLy=GetRectCenterY(as)
set uLy=GetRandomInt(1,3)
if uLy==1 then
set NR=CreateUnit(VR,$7530304F,MKy,wLy,0.)
set XXy=NR
set CXy=$4130534F
call UnitAddAbility(XXy,CXy)
set VXy=NR
set BXy=$41304933
call UnitAddAbility(VXy,BXy)
elseif uLy==2 then
set NR=CreateUnit(VR,$75303050,MKy,wLy,0.)
set NXy=NR
set MXy=$41313533
call UnitAddAbility(NXy,MXy)
set wCy=NR
set uCy=$41313534
call UnitAddAbility(wCy,uCy)
else
set NR=CreateUnit(VR,$75303051,MKy,wLy,0.)
set rCy=NR
set sCy=$41303950
call UnitAddAbility(rCy,sCy)
set tCy=NR
set iCy=$41436374
call UnitAddAbility(tCy,iCy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set SCy=NR
set cCy=$41313142
call UnitAddAbility(SCy,cCy)
call dYr(NR)
endif
if h[7]!=null and fq==true then
set rLy=GetRectCenterX(ns)
set sLy=GetRectCenterY(ns)
set tLy=GetRandomInt(1,3)
if tLy==1 then
set NR=CreateUnit(VR,$7530304F,rLy,sLy,0.)
set oCy=NR
set OCy=$4130534F
call UnitAddAbility(oCy,OCy)
set lCy=NR
set bCy=$41304933
call UnitAddAbility(lCy,bCy)
elseif tLy==2 then
set NR=CreateUnit(VR,$75303050,rLy,sLy,0.)
set yCy=NR
set pCy=$41313533
call UnitAddAbility(yCy,pCy)
set eCy=NR
set qCy=$41313534
call UnitAddAbility(eCy,qCy)
else
set NR=CreateUnit(VR,$75303051,rLy,sLy,0.)
set aCy=NR
set nCy=$41303950
call UnitAddAbility(aCy,nCy)
set dCy=NR
set fCy=$41436374
call UnitAddAbility(dCy,fCy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set RCy=NR
set TCy=$41313142
call UnitAddAbility(RCy,TCy)
call dYr(NR)
endif
if h[8]!=null and fq==true then
set iLy=GetRectCenterX(ds)
set SLy=GetRectCenterY(ds)
set cLy=GetRandomInt(1,3)
if cLy==1 then
set NR=CreateUnit(VR,$7530304F,iLy,SLy,0.)
set YCy=NR
set GCy=$4130534F
call UnitAddAbility(YCy,GCy)
set gCy=NR
set hCy=$41304933
call UnitAddAbility(gCy,hCy)
elseif cLy==2 then
set NR=CreateUnit(VR,$75303050,iLy,SLy,0.)
set FCy=NR
set kCy=$41313533
call UnitAddAbility(FCy,kCy)
set jCy=NR
set xCy=$41313534
call UnitAddAbility(jCy,xCy)
else
set NR=CreateUnit(VR,$75303051,iLy,SLy,0.)
set vCy=NR
set mCy=$41303950
call UnitAddAbility(vCy,mCy)
set QCy=NR
set WCy=$41436374
call UnitAddAbility(QCy,WCy)
endif
call DestroyEffect(AddSpecialEffectTarget("Void Teleport Target.mdl",NR,"origin"))
set ECy=NR
set ZCy=$41313142
call UnitAddAbility(ECy,ZCy)
call dYr(NR)
endif
set oLy=null
set OLy=null
set lLy=null
set yLy=null
set eLy=null
set aLy=null
set dLy=null
set RLy=null
set YLy=null
set gLy=null
set FLy=null
set jLy=null
set vLy=null
set QLy=null
set ELy=null
set ULy=null
set PLy=null
set DLy=null
set JLy=null
set LLy=null
set CLy=null
set BLy=null
set MLy=null
set uXy=null
set sXy=null
set iXy=null
set cXy=null
set OXy=null
set bXy=null
set pXy=null
set qXy=null
set nXy=null
set fXy=null
set TXy=null
set GXy=null
set hXy=null
set kXy=null
set xXy=null
set mXy=null
set WXy=null
set ZXy=null
set IXy=null
set AXy=null
set HXy=null
set KXy=null
set XXy=null
set VXy=null
set NXy=null
set wCy=null
set rCy=null
set tCy=null
set SCy=null
set oCy=null
set lCy=null
set yCy=null
set eCy=null
set aCy=null
set dCy=null
set RCy=null
set YCy=null
set gCy=null
set FCy=null
set jCy=null
set vCy=null
set QCy=null
set ECy=null
endfunction
function UDp takes nothing returns nothing
local group EDp=wO
local group ZDp
set yq=0
call ForGroup(EDp,dN)
if yq>0 then
call ForGroup(wO,fN)
endif
set ZDp=uO
set yq=0
call ForGroup(ZDp,dN)
if yq>0 then
call ForGroup(uO,RN)
endif
set EDp=null
set ZDp=null
endfunction
function UHu takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1727")
endfunction
function UIy takes nothing returns boolean
return true
endfunction
function ILc takes integer eLc,string qLc returns trigger
local trigger aLc
local integer nLc
local integer dLc
local fogstate fLc
local string RLc
local integer TLc
local integer YLc
local fogstate GLc
local hashtable gLc
local integer hLc
local integer FLc
local fogstate kLc
local integer jLc
local integer xLc
local string vLc
local trigger mLc
local integer QLc
local integer WLc
local hashtable ELc
local integer ZLc
local integer ULc
set aW[qW]=qLc
set qW=qW+1
set nLc=Sh
set dLc=0
set fLc=ConvertFogState(eLc)
set RLc="when calling saveFogState in TypeCasting, line 95"
set aW[qW]=RLc
set qW=qW+1
if KF[nLc]==0 then
if nLc==0 then
call L8c("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 169")
else
call L8c("Called Table.saveFogState on invalid object.","when calling error in Table, line 169")
endif
endif
set TLc=nLc
set YLc=dLc
set GLc=fLc
set gLc=Sg
set hLc=TLc
set FLc=YLc
set kLc=GLc
call SaveFogStateHandle(gLc,hLc,FLc,kLc)
set qW=qW-1
set jLc=Sh
set xLc=0
set vLc="when calling loadTrigger in TypeCasting, line 96"
set aW[qW]=vLc
set qW=qW+1
if KF[jLc]==0 then
if jLc==0 then
call L8c("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 112")
else
call L8c("Called Table.loadTrigger on invalid object.","when calling error in Table, line 112")
endif
endif
set QLc=jLc
set WLc=xLc
set ELc=Sg
set ZLc=QLc
set ULc=WLc
set mLc=LoadTriggerHandle(ELc,ZLc,ULc)
set qW=qW-1
set aLc=mLc
set qW=qW-1
set Ztw=aLc
set aLc=null
set fLc=null
set GLc=null
set gLc=null
set kLc=null
set mLc=null
set ELc=null
return Ztw
endfunction
function ZFu takes string QFu returns boolean
local boolean WFu
local trigger EFu
set aW[qW]=QFu
set qW=qW+1
set EFu=ILc(gar(sG,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58")
set WFu=TriggerEvaluate(EFu)
set qW=qW-1
set EFu=null
return WFu
endfunction
function UJc takes nothing returns boolean
set qW=0
return ZFu("via function reference RegisterEvents, line 58")
endfunction
function UOt takes nothing returns boolean
local trigger jOt
local trigger xOt
local playerunitevent vOt
local integer mOt
local trigger QOt
local trigger WOt
local playerunitevent EOt
local integer ZOt
set ky=CreateTrigger()
set jy=CreateTrigger()
set jOt=ky
call DisableTrigger(jOt)
set xOt=ky
set vOt=EVENT_PLAYER_HERO_LEVEL
set mOt=0
loop
call TriggerRegisterPlayerUnitEvent(xOt,Player(mOt),vOt,null)
set mOt=mOt+1
exitwhen mOt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ky,P1)
set QOt=jy
call DisableTrigger(QOt)
set WOt=jy
set EOt=EVENT_PLAYER_UNIT_SPELL_CAST
set ZOt=0
loop
call TriggerRegisterPlayerUnitEvent(WOt,Player(ZOt),EOt,null)
set ZOt=ZOt+1
exitwhen ZOt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(jy,A1)
set jOt=null
set xOt=null
set vOt=null
set QOt=null
set WOt=null
set EOt=null
return true
endfunction
function hOi takes unit TOi returns integer
local unit GOi=TOi
local unittype gOi=UNIT_TYPE_HERO
local integer YOi
if IsUnitType(GOi,gOi) then
set YOi=GetHeroLevel(TOi)
else
set YOi=GetUnitLevel(TOi)
endif
set GOi=null
set gOi=null
return YOi
endfunction
function i9r takes unit D8r,real H8r,string J8r returns nothing
local integer K8r
local real L8r
local real X8r
local real C8r
local filterfunc V8r
local unit B8r
local unit N8r
local unit M8r
local string w9r
local integer u9r
local real r9r
local real s9r
local real t9r
set aW[qW]=J8r
set qW=qW+1
set ol=D8r
set B8r=D8r
set N8r=B8r
set r9r=GetUnitX(N8r)
set M8r=B8r
set s9r=r9r
set t9r=GetUnitY(M8r)
set L8r=s9r
set X8r=t9r
set C8r=H8r
set V8r=Filter(JM)
set w9r="when calling alloc_ForGroupCallback_forNearestUnit_AssassinsHelpers in AssassinsHelpers, line 18"
set aW[qW]=w9r
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set u9r=qF
set aF[u9r]=866
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_AssassinsHelpers.","when calling error in AssassinsHelpers, line 18")
set u9r=0
endif
else
set eF=eF-1
set u9r=pF[eF]
set aF[u9r]=866
endif
set qW=qW-1
set K8r=u9r
set Xk[K8r]=H8r
set Ck[K8r]=D8r
call WXp(4,0,null,null,L8r,X8r,C8r,false,0,null,V8r,K8r,"when calling forNearestUnit in AssassinsHelpers, line 18")
set qW=qW-1
set V8r=null
set B8r=null
set N8r=null
set M8r=null
endfunction
function Dgl takes unit Ygl,string Ggl returns nothing
local real ggl
local real hgl
local unit Fgl
local unittype kgl
local unit jgl
local string xgl
local boolean vgl
local integer mgl
local integer Qgl
local string Wgl
local boolean Egl
local unit Zgl
local unit Ugl
local unittype Igl
local unit Pgl
local unittype Agl
set aW[qW]=Ggl
set qW=qW+1
set Fgl=Ygl
set kgl=UNIT_TYPE_HERO
if IsUnitType(Fgl,kgl) and hOi(Ygl)>=4 and IsUnitInGroup(Ygl,uO)==false then
set jgl=Ygl
set xgl="when calling isAssassin in AsassinsBehavior, line 10"
set aW[qW]=xgl
set qW=qW+1
set mgl=cl
set Zgl=jgl
set Qgl=GetUnitTypeId(Zgl)
set Wgl="when calling has in AssassinsHelpers, line 14"
set aW[qW]=Wgl
set qW=qW+1
if ok[mgl]==0 then
if mgl==0 then
call L8c("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 118")
else
call L8c("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 118")
endif
endif
set Egl=Dqp(mgl,Qgl)
set qW=qW-1
set vgl=Egl
set qW=qW-1
if vgl then
set hgl=800.
else
set hgl=300.
endif
set ggl=hgl
set Ugl=GetTriggerUnit()
set Igl=UNIT_TYPE_ANCIENT
if IsUnitType(Ugl,Igl) then
if ggl==800. then
call i9r(Ygl,ggl,"when calling tryAttackNearestHeroInRange in AsassinsBehavior, line 13")
endif
endif
set Pgl=GetTriggerUnit()
set Agl=UNIT_TYPE_ANCIENT
if not IsUnitType(Pgl,Agl) then
call i9r(Ygl,ggl,"when calling tryAttackNearestHeroInRange in AsassinsBehavior, line 15")
endif
endif
set qW=qW-1
set Fgl=null
set kgl=null
set jgl=null
set Zgl=null
set Ugl=null
set Igl=null
set Pgl=null
set Agl=null
endfunction
function UWi takes nothing returns nothing
local string ZWi
set qW=0
set ZWi="via function reference AsassinsBehavior, line 23"
set aW[qW]=ZWi
set qW=qW+1
call Dgl(GetSpellAbilityUnit(),"when calling handleUnit in AsassinsBehavior, line 24")
set qW=qW-1
endfunction
function UWy takes nothing returns boolean
local unit WWy=GetFilterUnit()
local unit ZWy=WWy
local integer EWy=GetUnitTypeId(ZWy)
set WWy=null
set ZWy=null
return EWy==$6E303244 or EWy==$6E62656C or EWy==$686D7072 or EWy==$656E6563 or EWy==$68303237 or EWy==$68737074
endfunction
function UXr takes nothing returns nothing
local unit YXr=GetTriggerUnit()
local unit FXr=YXr
local integer GXr=GetUnitTypeId(FXr)
local unit kXr=YXr
local player gXr=GetOwningPlayer(kXr)
local integer hXr=GetPlayerId(gXr)
local trigger jXr
local trigger xXr
local trigger vXr
local trigger mXr
local sound QXr
local trigger WXr
local trigger EXr
local trigger ZXr
if GXr==$6E30324E then
set jXr=Vh
call EnableTrigger(jXr)
set xXr=Bh
call EnableTrigger(xXr)
set vXr=Nh
call EnableTrigger(vXr)
set mXr=pp
call EnableTrigger(mXr)
set QXr=Ch
if QXr!=null then
call StartSound(QXr)
endif
set t[hXr]=$484D3033
endif
if GXr==$6E303049 then
set WXr=RG
call EnableTrigger(WXr)
call SetPlayerTechResearched(gXr,$524D307B,1)
call SetPlayerTechResearched(Player(hXr+4),$524D307B,1)
set TG[hXr]=true
endif
if GXr==$6E30304A then
call RemoveUnitFromStock(O[hXr],A[hXr])
call RemoveUnitFromStock(b[hXr],A[hXr])
call RemoveUnitFromStock(l[hXr],A[hXr])
set A[hXr]=$6E303050
call AddUnitToStock(O[hXr],A[hXr],1,3)
call AddUnitToStock(b[hXr],A[hXr],1,3)
call AddUnitToStock(l[hXr],A[hXr],1,3)
endif
if GXr==$6E303045 then
call RemoveUnitFromStock(O[hXr],D[hXr])
call RemoveUnitFromStock(b[hXr],D[hXr])
call RemoveUnitFromStock(l[hXr],D[hXr])
set D[hXr]=$7830317B
call AddUnitToStock(O[hXr],D[hXr],1,3)
call AddUnitToStock(b[hXr],D[hXr],1,3)
call AddUnitToStock(l[hXr],D[hXr],1,3)
endif
if GXr==$68303143 then
set EXr=JG
call EnableTrigger(EXr)
call RemoveUnitFromStock(O[hXr],H[hXr])
call RemoveUnitFromStock(b[hXr],H[hXr])
call RemoveUnitFromStock(l[hXr],H[hXr])
set H[hXr]=$78303179
call AddUnitToStock(O[hXr],H[hXr],1,3)
call AddUnitToStock(b[hXr],H[hXr],1,3)
call AddUnitToStock(l[hXr],H[hXr],1,3)
endif
if GXr==$6E303047 then
set ZXr=An
call EnableTrigger(ZXr)
set J[hXr]=$7830316E
endif
if GXr==$6E303048 then
set K[hXr]=$6E303052
endif
if GXr==$68303245 then
set K[hXr]=$68303244
endif
if GXr==$6E30304B then
set L[hXr]=$7830317C
endif
if GXr==$68303246 then
set L[hXr]=$6E303238
endif
if GXr==$6E30324D then
call SetPlayerTechResearched(gXr,$524D307A,1)
call SetPlayerTechResearched(Player(hXr+4),$524D307A,1)
endif
set YXr=null
set gXr=null
set FXr=null
set kXr=null
set jXr=null
set xXr=null
set vXr=null
set mXr=null
set QXr=null
set WXr=null
set EXr=null
set ZXr=null
endfunction
function SZu takes integer EEu,integer ZEu,integer UEu,integer IEu,integer PEu,integer AEu,integer DEu,integer HEu,integer JEu,integer KEu,string LEu returns nothing
local integer XEu
local integer CEu
local integer VEu
local integer BEu
local integer NEu
local integer MEu
local integer wZu
local integer uZu
local integer rZu
local integer sZu
local string tZu
local integer iZu
set aW[qW]=LEu
set qW=qW+1
if ok[EEu]==0 then
if EEu==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set XEu=EEu
set CEu=ZEu
set VEu=UEu
set BEu=IEu
set NEu=PEu
set MEu=AEu
set wZu=DEu
set uZu=HEu
set rZu=JEu
set sZu=KEu
set tZu="when calling add in LinkedList, line 38"
set aW[qW]=tZu
set qW=qW+1
set iZu=jMe(CEu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(VEu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(BEu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(NEu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(MEu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(wZu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(uZu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(rZu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set iZu=jMe(sZu,Jv[Vv[XEu]],Vv[XEu],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[XEu]]]=iZu
set Jv[Vv[XEu]]=iZu
set Bv[XEu]=Bv[XEu]+1
set qW=qW-1
set qW=qW-1
endfunction
function nru takes string Uuu returns nothing
local unit Iuu
local integer Puu
local player Auu
local integer Duu
local unit Huu
local unit Juu
local player Kuu
local sound Luu
local sound Xuu
local trigger Cuu
local trigger Vuu
local trigger Buu
local trigger Nuu
local trigger Muu
local sound wru
local integer uru
local string rru
local integer sru
local string tru
local integer iru
local integer Sru
local unit cru
local integer oru
local integer Oru
local string lru
local integer bru
local integer yru
local trigger pru
local unit eru
local unit qru
local real aru
set aW[qW]=Uuu
set qW=qW+1
set Iuu=GetTriggerUnit()
set Huu=Iuu
set Puu=GetUnitTypeId(Huu)
set Juu=Iuu
set Auu=GetOwningPlayer(Juu)
set Kuu=Auu
set Duu=GetPlayerId(Kuu)
if Puu==$68303157 then
set Ap=Iuu
set Luu=Qh
if Luu!=null then
call StartSound(Luu)
endif
set s[Duu]=$4F303430
endif
if Puu==$6E303231 then
set Xuu=mh
if Xuu!=null then
call StartSound(Xuu)
endif
set r[Duu]=$4F303344
set Cuu=KO
call EnableTrigger(Cuu)
set Vuu=LO
call EnableTrigger(Vuu)
set Buu=FO
call EnableTrigger(Buu)
set Nuu=FG
call EnableTrigger(Nuu)
endif
if Puu==$68303152 then
call SetPlayerTechResearched(Auu,$52303656,1)
call RemoveUnitFromStock(O[Duu],A[Duu])
call RemoveUnitFromStock(b[Duu],A[Duu])
call RemoveUnitFromStock(l[Duu],A[Duu])
set A[Duu]=$68303153
call AddUnitToStock(O[Duu],A[Duu],1,3)
call AddUnitToStock(b[Duu],A[Duu],1,3)
call AddUnitToStock(l[Duu],A[Duu],1,3)
endif
if Puu==$6E30314B then
call SetPlayerTechResearched(Auu,$52303651,1)
call RemoveUnitFromStock(O[Duu],D[Duu])
call RemoveUnitFromStock(b[Duu],D[Duu])
call RemoveUnitFromStock(l[Duu],D[Duu])
set D[Duu]=$6E30314A
call AddUnitToStock(O[Duu],D[Duu],1,3)
call AddUnitToStock(b[Duu],D[Duu],1,3)
call AddUnitToStock(l[Duu],D[Duu],1,3)
endif
if Puu==$68303241 then
call SetPlayerTechResearched(Auu,$52303652,1)
set J[Duu]=$6E303239
endif
if Puu==$68303156 then
call SetPlayerTechResearched(Auu,$52303653,1)
set K[Duu]=$6E30314C
endif
if Puu==$68303154 then
call SetPlayerTechResearched(Auu,$52303650,1)
set L[Duu]=$6F303341
endif
if Puu==$68303155 then
set Muu=Wh
call EnableTrigger(Muu)
call SetPlayerTechResearched(Auu,$52303558,1)
call SetPlayerTechResearched(Player(Duu+4),$52303558,1)
call SetPlayerTechResearched(Auu,$52303655,1)
call SetPlayerTechResearched(Auu,$52303654,1)
endif
if Puu==$6E30314D then
call SetPlayerTechResearched(Auu,$52303648,1)
call SetPlayerTechResearched(Auu,$52303657,1)
call SetPlayerTechResearched(Player(Duu+4),$52303648,1)
endif
if Puu==$6E303151 then
set yO=Iuu
set wru=gO
if wru!=null then
call StartSound(wru)
endif
call aWi(OO,$41313039,$4131314D,$41313152,$41313337,$41313342,$4131344A,"when calling add in PickBonusVulpera, line 76")
call SZu(lO,$5230364F,$52303650,$52303651,$52303652,$52303653,$52303654,$52303655,$52303656,$52303657,"when calling add in PickBonusVulpera, line 77")
call cdS(bO,$494D3031,$494D3032,$494D3033,$494D3034,$494D3035,$494D3036,$494D3037,"when calling add in PickBonusVulpera, line 78")
set uru=OO
set rru="when calling shuffle in PickBonusVulpera, line 79"
set aW[qW]=rru
set qW=qW+1
if ok[uru]==0 then
if uru==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(uru,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set sru=OO
set tru="when calling getFirst in PickBonusVulpera, line 80"
set aW[qW]=tru
set qW=qW+1
if ok[sru]==0 then
if sru==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Sru=sru
set iru=Hv[Kv[Vv[Sru]]]
set qW=qW-1
set YO=iru
set cru=yO
set Oru=OO
set lru="when calling getFirst in PickBonusVulpera, line 81"
set aW[qW]=lru
set qW=qW+1
if ok[Oru]==0 then
if Oru==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set yru=Oru
set bru=Hv[Kv[Vv[yru]]]
set qW=qW-1
set oru=bru
call UnitAddAbility(cru,oru)
set pru=iO
call EnableTrigger(pru)
set pr=300
set eru=yO
set aru=GetUnitX(eru)
set qru=yO
set yr=jVl(aru,GetUnitY(qru),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(SO,300.,false,Eww_376)
endif
if Puu==$6E303150 then
set C[Duu]=$6E30314F
call SetPlayerTechResearched(Auu,$5230364F,1)
endif
set qW=qW-1
set Iuu=null
set Auu=null
set Huu=null
set Juu=null
set Kuu=null
set Luu=null
set Xuu=null
set Cuu=null
set Vuu=null
set Buu=null
set Nuu=null
set Muu=null
set wru=null
set cru=null
set pru=null
set eru=null
set qru=null
endfunction
function UYw takes nothing returns nothing
set qW=0
call nru("via function reference PickBonusVulpera, line 94")
endfunction
function U_l takes nothing returns boolean
local playerunitevent E_l=EVENT_PLAYER_UNIT_DEATH
local code Z_l=a5
call emO(E_l,null,Z_l,null)
set E_l=null
return true
endfunction
function Ugy takes nothing returns boolean
local trigger Zgy
call CreateTrigger()
set uT=CreateTrigger()
set sT=CreateTimer()
set Zgy=uT
call DisableTrigger(Zgy)
call TriggerRegisterTimerEvent(uT,1.,true)
call TriggerAddAction(uT,g0w)
set Zgy=null
return true
endfunction
function DEb takes string REb returns nothing
local unit TEb
local unit YEb
local integer GEb
local integer gEb
local unit hEb
local unit FEb
local integer kEb
local unit jEb
local unit xEb
local unit vEb
local integer mEb
local unit QEb
local integer WEb
local string EEb
local integer ZEb
local real UEb
local integer IEb
local string PEb
local boolean AEb
set aW[qW]=REb
set qW=qW+1
set TEb=GetTriggerUnit()
set hEb=TEb
if GetUnitTypeId(hEb)==$45657669 then
set FEb=TEb
set kEb=852180
call IssueImmediateOrderById(FEb,kEb)
endif
set YEb=GetAttacker()
set jEb=YEb
if GetUnitTypeId(jEb)==$45646D6D then
set AEb=true
else
set xEb=YEb
set AEb=GetUnitTypeId(xEb)==$45657669
endif
if AEb then
set vEb=YEb
set mEb=$41333053
set GEb=GetUnitAbilityLevel(vEb,mEb)
if GetRandomInt(1,100)<=15+5*GEb then
set QEb=YEb
set WEb=$414D3033
call UnitAddAbility(QEb,WEb)
set EEb="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Illidan in Illidan, line 338"
set aW[qW]=EEb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ZEb=fF
set RF[ZEb]=819
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Illidan.","when calling error in Illidan, line 338")
set ZEb=0
endif
else
set dF=dF-1
set ZEb=nF[dF]
set RF[ZEb]=819
endif
set qW=qW-1
set gEb=ZEb
set iv[gEb]=YEb
set UEb=1.5
set IEb=gEb
set PEb="when calling doAfter in Illidan, line 338"
set aW[qW]=PEb
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),UEb,IEb,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set TEb=null
set YEb=null
set hEb=null
set FEb=null
set jEb=null
set xEb=null
set vEb=null
set QEb=null
endfunction
function Uhc takes nothing returns nothing
set qW=0
call DEb("via function reference Illidan, line 329")
endfunction
function Umi takes nothing returns boolean
local trigger Qmi
local trigger Wmi
local playerunitevent Emi
local integer Zmi
set JG=CreateTrigger()
set Qmi=JG
call DisableTrigger(Qmi)
set Wmi=JG
set Emi=EVENT_PLAYER_UNIT_SPELL_CAST
set Zmi=0
loop
call TriggerRegisterPlayerUnitEvent(Wmi,Player(Zmi),Emi,null)
set Zmi=Zmi+1
exitwhen Zmi==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(JG,yuw)
set Qmi=null
set Wmi=null
set Emi=null
return true
endfunction
function Umu takes nothing returns nothing
local unit Fmu=GetDyingUnit()
local unit jmu=Fmu
local unit kmu
local unit xmu
local unit vmu
local unit mmu
local unit Qmu
local integer Wmu
local player Emu
local real Zmu
if GetUnitTypeId(jmu)==$6573656E then
set Wmu=GetRandomInt(1,100)
set xmu=Fmu
if Wmu<=10+20*GetPlayerTechCount(GetOwningPlayer(xmu),$5230344F,true) then
set vmu=Fmu
set Emu=GetOwningPlayer(vmu)
set mmu=Fmu
set Zmu=GetUnitX(mmu)
set Qmu=Fmu
set kmu=CreateUnit(Emu,$656E7368,Zmu,GetUnitY(Qmu),270.)
call dYr(kmu)
endif
endif
set Fmu=null
set kmu=null
set jmu=null
set xmu=null
set vmu=null
set mmu=null
set Qmu=null
set Emu=null
endfunction
function Zyw takes string Syw returns nothing
local unit cyw
local integer oyw
local unit Oyw
local unit lyw
local integer byw
local unit yyw
local unit pyw
local unitstate eyw
local unit qyw
local unit ayw
local unitstate nyw
local unit dyw
local integer fyw
local unit Ryw
local integer Tyw
local unit Yyw
local integer Gyw
local widget gyw
local string hyw
local string Fyw
local trigger kyw
local string jyw
local integer xyw
local unit vyw
local integer myw
local boolean Qyw
local real Wyw
local boolean Eyw
set aW[qW]=Syw
set qW=qW+1
set cyw=GetTriggerUnit()
set Oyw=cyw
if GetUnitTypeId(Oyw)==$5563726C then
set lyw=cyw
set byw=$41313657
set Qyw=GetUnitAbilityLevel(lyw,byw)>0
else
set Qyw=false
endif
if Qyw then
set yyw=cyw
set pyw=yyw
set eyw=UNIT_STATE_LIFE
set Wyw=GetUnitState(pyw,eyw)
set qyw=cyw
set ayw=qyw
set nyw=UNIT_STATE_MAX_LIFE
if Wyw<=GetUnitState(ayw,nyw)*.5 then
set dyw=cyw
set fyw=$41313730
if GetUnitAbilityLevel(dyw,fyw)==0 then
set Ryw=cyw
set Tyw=$41323456
set Eyw=GetUnitAbilityLevel(Ryw,Tyw)==0
else
set Eyw=false
endif
if Eyw then
set Yyw=cyw
set Gyw=$41313730
call UnitAddAbility(Yyw,Gyw)
set gyw=cyw
set hyw="Infernal_Bulwark.mdl"
set Fyw="origin"
set Hn=AddSpecialEffectTarget(hyw,gyw,Fyw)
set kyw=Dn
call EnableTrigger(kyw)
set jyw="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Kazzak in Kazzak, line 398"
set aW[qW]=jyw
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set xyw=GF
set gF[xyw]=675
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Kazzak.","when calling error in Kazzak, line 398")
set xyw=0
endif
else
set YF=YF-1
set xyw=TF[YF]
set gF[xyw]=675
endif
set qW=qW-1
set oyw=xyw
set Fv[oyw]=cyw
call GtO(1.,oyw,"when calling doPeriodically in Kazzak, line 398")
endif
else
set vyw=cyw
set myw=$41313730
call UnitRemoveAbility(vyw,myw)
endif
endif
set qW=qW-1
set cyw=null
set Oyw=null
set lyw=null
set yyw=null
set pyw=null
set eyw=null
set qyw=null
set ayw=null
set nyw=null
set dyw=null
set Ryw=null
set Yyw=null
set gyw=null
set kyw=null
set vyw=null
endfunction
function Uqe takes nothing returns nothing
set qW=0
call Zyw("via function reference Kazzak, line 390")
endfunction
function Orb takes string O9b returns nothing
local trigger l9b
local unit b9b
local player y9b
local player p9b
local integer e9b
local real q9b
local real a9b
local integer n9b
local integer d9b
local integer f9b
local integer R9b
local integer T9b
local integer Y9b
local integer G9b
local integer g9b
local integer h9b
local integer F9b
local integer k9b
local real j9b
local real x9b
local integer v9b
local integer m9b
local integer Q9b
local integer W9b
local integer E9b
local integer Z9b
local integer U9b
local integer I9b
local integer P9b
local integer A9b
local integer D9b
local integer H9b
local unit J9b
local player K9b
local player L9b
local trigger X9b
local unit C9b
local sound V9b
local unit B9b
local player N9b
local boolean M9b
local player w0b
local integer u0b
local player r0b
local playerstate s0b
local integer t0b
local player i0b
local playerstate S0b
local string c0b
local real o0b
local string O0b
local real l0b
local unit b0b
local player y0b
local boolean p0b
local unit e0b
local unit q0b
local unit a0b
local unit n0b
local integer d0b
local unit f0b
local integer R0b
local unit T0b
local integer Y0b
local integer G0b
local unit g0b
local unit h0b
local integer F0b
local unit k0b
local integer j0b
local unit x0b
local integer v0b
local integer m0b
local unit Q0b
local unit W0b
local integer E0b
local unit Z0b
local integer U0b
local unit I0b
local integer P0b
local integer A0b
local unit D0b
local unit H0b
local integer J0b
local unit K0b
local integer L0b
local unit X0b
local integer C0b
local integer V0b
local unit B0b
local unit N0b
local integer M0b
local unit w_b
local integer u_b
local unit r_b
local integer s_b
local unit t_b
local integer i_b
local integer S_b
local unit c_b
local integer o_b
local unit O_b
local integer l_b
local integer b_b
local unit y_b
local unit p_b
local integer e_b
local unit q_b
local unit a_b
local integer n_b
local unit d_b
local unit f_b
local integer R_b
local unit T_b
local integer Y_b
local unit G_b
local integer g_b
local integer h_b
local unit F_b
local unit k_b
local integer j_b
local unit x_b
local integer v_b
local unit m_b
local integer Q_b
local integer W_b
local unit E_b
local unit Z_b
local integer U_b
local unit I_b
local integer P_b
local unit A_b
local integer D_b
local integer H_b
local unit J_b
local unit K_b
local integer L_b
local unit X_b
local integer C_b
local unit V_b
local integer B_b
local integer N_b
local unit M_b
local unit wwb
local integer uwb
local unit rwb
local integer swb
local unit twb
local integer iwb
local integer Swb
local unit cwb
local unit owb
local unit Owb
local integer lwb
local unit bwb
local unit ywb
local integer pwb
local unit ewb
local integer qwb
local unit awb
local integer nwb
local integer dwb
local unit fwb
local unit Rwb
local integer Twb
local unit Ywb
local integer Gwb
local unit gwb
local integer hwb
local integer Fwb
local unit kwb
local unit jwb
local integer xwb
local unit vwb
local integer mwb
local unit Qwb
local integer Wwb
local integer Ewb
local unit Zwb
local unit Uwb
local integer Iwb
local unit Pwb
local integer Awb
local unit Dwb
local integer Hwb
local integer Jwb
local unit Kwb
local unit Lwb
local integer Xwb
local unit Cwb
local integer Vwb
local unit Bwb
local integer Nwb
local unit Mwb
local integer wub
local integer uub
local unit rub
local integer sub
local unit tub
local integer iub
local integer Sub
local unit cub
local unit oub
local integer Oub
local unit lub
local unit bub
local integer yub
local unit pub
local unit eub
local integer qub
local unit aub
local integer nub
local unit dub
local integer fub
local integer Rub
local unit Tub
local unit Yub
local integer Gub
local unit gub
local integer hub
local unit Fub
local integer kub
local integer jub
local unit xub
local unit vub
local integer mub
local unit Qub
local integer Wub
local unit Eub
local integer Zub
local integer Uub
local unit Iub
local unit Pub
local integer Aub
local unit Dub
local integer Hub
local unit Jub
local integer Kub
local integer Lub
local unit Xub
local unit Cub
local integer Vub
local unit Bub
local integer Nub
local unit Mub
local integer wrb
local integer urb
local string rrb
local integer srb
local real trb
local integer irb
local string Srb
local player crb
local playerstate orb
set aW[qW]=O9b
set qW=qW+1
set l9b=GetTriggeringTrigger()
set b9b=GetEnteringUnit()
set J9b=b9b
set y9b=GetOwningPlayer(J9b)
set K9b=y9b
set p9b=Player(GetPlayerId(K9b)-4)
set L9b=p9b
set e9b=GetPlayerId(L9b)
set X9b=l9b
call DisableTrigger(X9b)
set C9b=G[7]
if GetOwningPlayer(C9b)==Player(15) then
set V9b=bj_questUpdatedSound
call StartSound(V9b)
set B9b=G[7]
set N9b=p9b
set M9b=false
call SetUnitOwner(B9b,N9b,M9b)
call UuS(G[7],75)
set w0b=p9b
set u0b=75
set r0b=w0b
set s0b=PLAYER_STATE_RESOURCE_GOLD
set t0b=u0b
set crb=r0b
set orb=s0b
set i0b=r0b
set S0b=s0b
call SetPlayerState(crb,orb,GetPlayerState(i0b,S0b)+t0b)
set c0b=Aw[e9b]+GetPlayerName(p9b)+"|r"+" has captured neutral building!"
set o0b=10.
set O0b=c0b
set l0b=o0b
call DisplayTimedTextToPlayer(IY,0.,0.,l0b,O0b)
set hr[e9b]=hr[e9b]+75
set Fr[e9b]=Fr[e9b]+75
set Vr[e9b]=Vr[e9b]+75
else
set b0b=G[7]
set y0b=p9b
set p0b=false
call SetUnitOwner(b0b,y0b,p0b)
endif
if p9b==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set e0b=G[7]
set q9b=GetUnitX(e0b)
set q0b=G[7]
set a9b=GetUnitY(q0b)
set g[7]=CreateUnit(Ud,$6E303349,q9b,a9b,0.)
set a0b=G[7]
if GetUnitTypeId(a0b)==$6E676164 then
set n0b=G[7]
set d0b=$41303042
set n9b=GetUnitAbilityLevel(n0b,d0b)
set f0b=g[7]
set R0b=$41313053
call UnitAddAbility(f0b,R0b)
set T0b=g[7]
set Y0b=$41313053
set G0b=n9b
call SetUnitAbilityLevel(T0b,Y0b,G0b)
endif
set g0b=G[7]
if GetUnitTypeId(g0b)==$6E64727A then
set h0b=G[7]
set F0b=$41303852
set d9b=GetUnitAbilityLevel(h0b,F0b)
set k0b=g[7]
set j0b=$41313049
call UnitAddAbility(k0b,j0b)
set x0b=g[7]
set v0b=$41313049
set m0b=d9b
call SetUnitAbilityLevel(x0b,v0b,m0b)
endif
set Q0b=G[7]
if GetUnitTypeId(Q0b)==$6E647267 then
set W0b=G[7]
set E0b=$41303856
set f9b=GetUnitAbilityLevel(W0b,E0b)
set Z0b=g[7]
set U0b=$41313054
call UnitAddAbility(Z0b,U0b)
set I0b=g[7]
set P0b=$41313054
set A0b=f9b
call SetUnitAbilityLevel(I0b,P0b,A0b)
endif
set D0b=G[7]
if GetUnitTypeId(D0b)==$6E676D65 then
set H0b=G[7]
set J0b=$4130384F
set R9b=GetUnitAbilityLevel(H0b,J0b)
set K0b=g[7]
set L0b=$4131304A
call UnitAddAbility(K0b,L0b)
set X0b=g[7]
set C0b=$4131304A
set V0b=R9b
call SetUnitAbilityLevel(X0b,C0b,V0b)
endif
set B0b=G[7]
if GetUnitTypeId(B0b)==$6E647272 then
set N0b=G[7]
set M0b=$41303858
set T9b=GetUnitAbilityLevel(N0b,M0b)
set w_b=G[7]
set u_b=$41303859
set Y9b=GetUnitAbilityLevel(w_b,u_b)
set r_b=g[7]
set s_b=$4131304B
call UnitAddAbility(r_b,s_b)
set t_b=g[7]
set i_b=$4131304B
set S_b=T9b
call SetUnitAbilityLevel(t_b,i_b,S_b)
set c_b=g[7]
set o_b=$4131304C
call UnitAddAbility(c_b,o_b)
set O_b=g[7]
set l_b=$4131304C
set b_b=Y9b
call SetUnitAbilityLevel(O_b,l_b,b_b)
endif
set y_b=G[7]
if GetUnitTypeId(y_b)==$6E6D7232 then
set p_b=g[7]
set e_b=$41303853
call UnitAddAbility(p_b,e_b)
endif
set q_b=G[7]
if GetUnitTypeId(q_b)==$6E676F6C then
set a_b=g[7]
set n_b=$41303853
call UnitAddAbility(a_b,n_b)
endif
set d_b=G[7]
if GetUnitTypeId(d_b)==$6E64726F then
set f_b=G[7]
set R_b=$41303855
set G9b=GetUnitAbilityLevel(f_b,R_b)
set T_b=g[7]
set Y_b=$4131304E
call UnitAddAbility(T_b,Y_b)
set G_b=g[7]
set g_b=$4131304E
set h_b=G9b
call SetUnitAbilityLevel(G_b,g_b,h_b)
endif
set F_b=G[7]
if GetUnitTypeId(F_b)==$6E776774 then
set k_b=G[7]
set j_b=$41303850
set g9b=GetUnitAbilityLevel(k_b,j_b)
set x_b=g[7]
set v_b=$4131304F
call UnitAddAbility(x_b,v_b)
set m_b=g[7]
set Q_b=$4131304F
set W_b=g9b
call SetUnitAbilityLevel(m_b,Q_b,W_b)
endif
set E_b=G[7]
if GetUnitTypeId(E_b)==$6E647275 then
set Z_b=G[7]
set U_b=$4130384E
set h9b=GetUnitAbilityLevel(Z_b,U_b)
set I_b=g[7]
set P_b=$41313050
call UnitAddAbility(I_b,P_b)
set A_b=g[7]
set D_b=$41313050
set H_b=h9b
call SetUnitAbilityLevel(A_b,D_b,H_b)
endif
set J_b=G[7]
if GetUnitTypeId(J_b)==$6E666F68 then
set K_b=G[7]
set L_b=$4130384D
set F9b=GetUnitAbilityLevel(K_b,L_b)
set X_b=g[7]
set C_b=$41313051
call UnitAddAbility(X_b,C_b)
set V_b=g[7]
set B_b=$41313051
set N_b=F9b
call SetUnitAbilityLevel(V_b,B_b,N_b)
endif
set M_b=G[7]
if GetUnitTypeId(M_b)==$6E64726B then
set wwb=G[7]
set uwb=$41303851
set k9b=GetUnitAbilityLevel(wwb,uwb)
set rwb=g[7]
set swb=$41313052
call UnitAddAbility(rwb,swb)
set twb=g[7]
set iwb=$41313052
set Swb=k9b
call SetUnitAbilityLevel(twb,iwb,Swb)
endif
endif
if p9b!=Ud and g[7]!=null then
call RemoveUnit(g[7])
set g[7]=null
endif
if p9b==Ud and fq==true then
set cwb=G[7]
set j9b=GetUnitX(cwb)
set owb=G[7]
set x9b=GetUnitY(owb)
set h[7]=CreateUnit(Ud,$6E303349,j9b,x9b,0.)
set Owb=h[7]
set lwb=$4545564F
call UnitAddAbility(Owb,lwb)
set bwb=G[7]
if GetUnitTypeId(bwb)==$6E676164 then
set ywb=G[7]
set pwb=$41303042
set v9b=GetUnitAbilityLevel(ywb,pwb)
set ewb=h[7]
set qwb=$41313641
call UnitAddAbility(ewb,qwb)
set awb=h[7]
set nwb=$41313641
set dwb=v9b
call SetUnitAbilityLevel(awb,nwb,dwb)
endif
set fwb=G[7]
if GetUnitTypeId(fwb)==$6E64727A then
set Rwb=G[7]
set Twb=$41303852
set m9b=GetUnitAbilityLevel(Rwb,Twb)
set Ywb=h[7]
set Gwb=$41313630
call UnitAddAbility(Ywb,Gwb)
set gwb=h[7]
set hwb=$41313630
set Fwb=m9b
call SetUnitAbilityLevel(gwb,hwb,Fwb)
endif
set kwb=G[7]
if GetUnitTypeId(kwb)==$6E647267 then
set jwb=G[7]
set xwb=$41303856
set Q9b=GetUnitAbilityLevel(jwb,xwb)
set vwb=h[7]
set mwb=$41313642
call UnitAddAbility(vwb,mwb)
set Qwb=h[7]
set Wwb=$41313642
set Ewb=Q9b
call SetUnitAbilityLevel(Qwb,Wwb,Ewb)
endif
set Zwb=G[7]
if GetUnitTypeId(Zwb)==$6E676D65 then
set Uwb=G[7]
set Iwb=$4130384F
set W9b=GetUnitAbilityLevel(Uwb,Iwb)
set Pwb=h[7]
set Awb=$41313631
call UnitAddAbility(Pwb,Awb)
set Dwb=h[7]
set Hwb=$41313631
set Jwb=W9b
call SetUnitAbilityLevel(Dwb,Hwb,Jwb)
endif
set Kwb=G[7]
if GetUnitTypeId(Kwb)==$6E647272 then
set Lwb=G[7]
set Xwb=$41303858
set E9b=GetUnitAbilityLevel(Lwb,Xwb)
set Cwb=G[7]
set Vwb=$41303859
set Z9b=GetUnitAbilityLevel(Cwb,Vwb)
set Bwb=h[7]
set Nwb=$41313632
call UnitAddAbility(Bwb,Nwb)
set Mwb=h[7]
set wub=$41313633
set uub=E9b
call SetUnitAbilityLevel(Mwb,wub,uub)
set rub=h[7]
set sub=$41313632
call UnitAddAbility(rub,sub)
set tub=h[7]
set iub=$41313633
set Sub=Z9b
call SetUnitAbilityLevel(tub,iub,Sub)
endif
set cub=G[7]
if GetUnitTypeId(cub)==$6E6D7232 then
set oub=h[7]
set Oub=$41303853
call UnitAddAbility(oub,Oub)
endif
set lub=G[7]
if GetUnitTypeId(lub)==$6E676F6C then
set bub=h[7]
set yub=$41303853
call UnitAddAbility(bub,yub)
endif
set pub=G[7]
if GetUnitTypeId(pub)==$6E64726F then
set eub=G[7]
set qub=$41303855
set U9b=GetUnitAbilityLevel(eub,qub)
set aub=h[7]
set nub=$41313635
call UnitAddAbility(aub,nub)
set dub=h[7]
set fub=$41313635
set Rub=U9b
call SetUnitAbilityLevel(dub,fub,Rub)
endif
set Tub=G[7]
if GetUnitTypeId(Tub)==$6E776774 then
set Yub=G[7]
set Gub=$41303850
set I9b=GetUnitAbilityLevel(Yub,Gub)
set gub=h[7]
set hub=$41313636
call UnitAddAbility(gub,hub)
set Fub=h[7]
set kub=$41313636
set jub=I9b
call SetUnitAbilityLevel(Fub,kub,jub)
endif
set xub=G[7]
if GetUnitTypeId(xub)==$6E647275 then
set vub=G[7]
set mub=$4130384E
set P9b=GetUnitAbilityLevel(vub,mub)
set Qub=h[7]
set Wub=$41313637
call UnitAddAbility(Qub,Wub)
set Eub=h[7]
set Zub=$41313637
set Uub=P9b
call SetUnitAbilityLevel(Eub,Zub,Uub)
endif
set Iub=G[7]
if GetUnitTypeId(Iub)==$6E666F68 then
set Pub=G[7]
set Aub=$4130384D
set A9b=GetUnitAbilityLevel(Pub,Aub)
set Dub=h[7]
set Hub=$41313638
call UnitAddAbility(Dub,Hub)
set Jub=h[7]
set Kub=$41313638
set Lub=A9b
call SetUnitAbilityLevel(Jub,Kub,Lub)
endif
set Xub=G[7]
if GetUnitTypeId(Xub)==$6E64726B then
set Cub=G[7]
set Vub=$41303851
set D9b=GetUnitAbilityLevel(Cub,Vub)
set Bub=h[7]
set Nub=$41313639
call UnitAddAbility(Bub,Nub)
set Mub=h[7]
set wrb=$41313639
set urb=D9b
call SetUnitAbilityLevel(Mub,wrb,urb)
endif
endif
if p9b!=Ud and h[7]!=null then
call RemoveUnit(h[7])
set h[7]=null
endif
set rrb="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 1028"
set aW[qW]=rrb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set srb=fF
set RF[srb]=741
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 1028")
set srb=0
endif
else
set dF=dF-1
set srb=nF[dF]
set RF[srb]=741
endif
set qW=qW-1
set H9b=srb
set Um[H9b]=l9b
set trb=2.
set irb=H9b
set Srb="when calling doAfter in NeutralStructures, line 1028"
set aW[qW]=Srb
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),trb,irb,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set l9b=null
set b9b=null
set y9b=null
set p9b=null
set J9b=null
set K9b=null
set L9b=null
set X9b=null
set C9b=null
set V9b=null
set B9b=null
set N9b=null
set w0b=null
set r0b=null
set s0b=null
set i0b=null
set S0b=null
set b0b=null
set y0b=null
set e0b=null
set q0b=null
set a0b=null
set n0b=null
set f0b=null
set T0b=null
set g0b=null
set h0b=null
set k0b=null
set x0b=null
set Q0b=null
set W0b=null
set Z0b=null
set I0b=null
set D0b=null
set H0b=null
set K0b=null
set X0b=null
set B0b=null
set N0b=null
set w_b=null
set r_b=null
set t_b=null
set c_b=null
set O_b=null
set y_b=null
set p_b=null
set q_b=null
set a_b=null
set d_b=null
set f_b=null
set T_b=null
set G_b=null
set F_b=null
set k_b=null
set x_b=null
set m_b=null
set E_b=null
set Z_b=null
set I_b=null
set A_b=null
set J_b=null
set K_b=null
set X_b=null
set V_b=null
set M_b=null
set wwb=null
set rwb=null
set twb=null
set cwb=null
set owb=null
set Owb=null
set bwb=null
set ywb=null
set ewb=null
set awb=null
set fwb=null
set Rwb=null
set Ywb=null
set gwb=null
set kwb=null
set jwb=null
set vwb=null
set Qwb=null
set Zwb=null
set Uwb=null
set Pwb=null
set Dwb=null
set Kwb=null
set Lwb=null
set Cwb=null
set Bwb=null
set Mwb=null
set rub=null
set tub=null
set cub=null
set oub=null
set lub=null
set bub=null
set pub=null
set eub=null
set aub=null
set dub=null
set Tub=null
set Yub=null
set gub=null
set Fub=null
set xub=null
set vub=null
set Qub=null
set Eub=null
set Iub=null
set Pub=null
set Dub=null
set Jub=null
set Xub=null
set Cub=null
set Bub=null
set Mub=null
set crb=null
set orb=null
endfunction
function Urb takes nothing returns nothing
set qW=0
call Orb("via function reference NeutralStructures, line 1753")
endfunction
function iil takes string Erl returns nothing
local integer Zrl
local unit Url
local unit Irl
local integer Prl
local player Arl
local integer Drl
local player Hrl
local integer Jrl
local player Krl
local integer Lrl
local player Xrl
local integer Crl
local player Vrl
local integer Brl
local player Nrl
local playerstate Mrl
local integer wsl
local player usl
local playerstate rsl
local unit ssl
local player tsl
local unit isl
local unit Ssl
local player csl
local integer osl
local player Osl
local playerstate lsl
local integer bsl
local player ysl
local player psl
local playerstate esl
local player qsl
local unit asl
local player nsl
local integer dsl
local player fsl
local playerstate Rsl
local integer Tsl
local player Ysl
local player Gsl
local playerstate gsl
local player hsl
local unit Fsl
local player ksl
local integer jsl
local player xsl
local playerstate vsl
local integer msl
local player Qsl
local player Wsl
local playerstate Esl
local player Zsl
local unit Usl
local player Isl
local integer Psl
local player Asl
local playerstate Dsl
local integer Hsl
local player Jsl
local player Ksl
local playerstate Lsl
local player Xsl
local unit Csl
local unit Vsl
local unit Bsl
local unit Nsl
local unit Msl
local unit wtl
local unit utl
local unit rtl
local unit stl
local unit ttl
local unit itl
local unit Stl
local unit ctl
local unit otl
local unit Otl
local unit ltl
local unit btl
local unit ytl
local unit ptl
local unit etl
local unit qtl
local unit atl
local unit ntl
local unit dtl
local unit ftl
local unit Rtl
local unit Ttl
local unit Ytl
local unit Gtl
local unit gtl
local player htl
local playerstate Ftl
local boolean ktl
local boolean jtl
local boolean xtl
local boolean vtl
local boolean mtl
local boolean Qtl
local boolean Wtl
local boolean Etl
local boolean Ztl
local boolean Utl
local boolean Itl
local boolean Ptl
local boolean Atl
local boolean Dtl
local boolean Htl
local boolean Jtl
local boolean Ktl
local boolean Ltl
local boolean Xtl
local boolean Ctl
local boolean Vtl
local boolean Btl
local boolean Ntl
local boolean Mtl
local boolean wil
local boolean uil
local boolean ril
local boolean sil
local boolean til
set aW[qW]=Erl
set qW=qW+1
set Zrl=GetSpellAbilityId()
if Zrl==$41313331 then
set Url=GetSpellAbilityUnit()
set Irl=GetSpellTargetUnit()
set ssl=Url
set Vrl=GetOwningPlayer(ssl)
set Brl=200
set Nrl=Vrl
set Mrl=PLAYER_STATE_RESOURCE_GOLD
set wsl=Brl
set htl=Nrl
set Ftl=Mrl
set usl=Nrl
set rsl=Mrl
call SetPlayerState(htl,Ftl,GetPlayerState(usl,rsl)+wsl)
call UuS(Url,200)
set isl=Url
set tsl=GetOwningPlayer(isl)
set Prl=GetPlayerId(tsl)
set hr[Prl]=hr[Prl]+200
set Fr[Prl]=Fr[Prl]+200
set Cr[Prl]=Cr[Prl]+200
set Ssl=Irl
if GetOwningPlayer(Ssl)==nu then
set Arl=Tu
set csl=Arl
set ysl=Arl
set psl=ysl
set esl=PLAYER_STATE_RESOURCE_GOLD
set osl=GetPlayerState(psl,esl)-200
set Osl=csl
set lsl=PLAYER_STATE_RESOURCE_GOLD
set bsl=osl
call SetPlayerState(Osl,lsl,bsl)
set qsl=Arl
set Drl=GetPlayerId(qsl)
set hr[Drl]=hr[Drl]-200
set Fr[Drl]=Fr[Drl]-200
set Cr[Drl]=Cr[Drl]-200
endif
set asl=Irl
if GetOwningPlayer(asl)==Ru then
set Hrl=gu
set nsl=Hrl
set Ysl=Hrl
set Gsl=Ysl
set gsl=PLAYER_STATE_RESOURCE_GOLD
set dsl=GetPlayerState(Gsl,gsl)-200
set fsl=nsl
set Rsl=PLAYER_STATE_RESOURCE_GOLD
set Tsl=dsl
call SetPlayerState(fsl,Rsl,Tsl)
set hsl=Hrl
set Jrl=GetPlayerId(hsl)
set hr[Jrl]=hr[Jrl]-200
set Fr[Jrl]=Fr[Jrl]-200
set Cr[Jrl]=Cr[Jrl]-200
endif
set Fsl=Irl
if GetOwningPlayer(Fsl)==du then
set Krl=Yu
set ksl=Krl
set Qsl=Krl
set Wsl=Qsl
set Esl=PLAYER_STATE_RESOURCE_GOLD
set jsl=GetPlayerState(Wsl,Esl)-200
set xsl=ksl
set vsl=PLAYER_STATE_RESOURCE_GOLD
set msl=jsl
call SetPlayerState(xsl,vsl,msl)
set Zsl=Krl
set Lrl=GetPlayerId(Zsl)
set hr[Lrl]=hr[Lrl]-200
set Fr[Lrl]=Fr[Lrl]-200
set Cr[Lrl]=Cr[Lrl]-200
endif
set Usl=Irl
if GetOwningPlayer(Usl)==fu then
set Xrl=Gu
set Isl=Xrl
set Jsl=Xrl
set Ksl=Jsl
set Lsl=PLAYER_STATE_RESOURCE_GOLD
set Psl=GetPlayerState(Ksl,Lsl)-200
set Asl=Isl
set Dsl=PLAYER_STATE_RESOURCE_GOLD
set Hsl=Psl
call SetPlayerState(Asl,Dsl,Hsl)
set Xsl=Xrl
set Crl=GetPlayerId(Xsl)
set hr[Crl]=hr[Crl]-200
set Fr[Crl]=Fr[Crl]-200
set Cr[Crl]=Cr[Crl]-200
endif
if jWu(Irl)<6 then
set Csl=Irl
set Vsl=Csl
if GetUnitTypeId(Vsl)==$4830324B then
set ktl=true
else
set Bsl=Csl
set ktl=GetUnitTypeId(Bsl)==$484D3032
endif
if ktl then
set jtl=true
else
set Nsl=Csl
set jtl=GetUnitTypeId(Nsl)==$55776172
endif
if jtl then
set xtl=true
else
set Msl=Csl
set xtl=GetUnitTypeId(Msl)==$4E6D616E
endif
if xtl then
set vtl=true
else
set wtl=Csl
set vtl=GetUnitTypeId(wtl)==$484D3035
endif
if vtl then
set mtl=true
else
set utl=Csl
set mtl=GetUnitTypeId(utl)==$486A6169
endif
if mtl then
set Qtl=true
else
set rtl=Csl
set Qtl=GetUnitTypeId(rtl)==$45657669
endif
if Qtl then
set Wtl=true
else
set stl=Csl
set Wtl=GetUnitTypeId(stl)==$45646D6D
endif
if Wtl then
set Etl=true
else
set ttl=Csl
set Etl=GetUnitTypeId(ttl)==$456B6565
endif
if Etl then
set Ztl=true
else
set itl=Csl
set Ztl=GetUnitTypeId(itl)==$45303039
endif
if Ztl then
set Utl=true
else
set Stl=Csl
set Utl=GetUnitTypeId(Stl)==$5530304C
endif
if Utl then
set Itl=true
else
set ctl=Csl
set Itl=GetUnitTypeId(ctl)==$484D3033
endif
if Itl then
set Ptl=true
else
set otl=Csl
set Ptl=GetUnitTypeId(otl)==$456D3173
endif
if Ptl then
set Atl=true
else
set Otl=Csl
set Atl=GetUnitTypeId(Otl)==$484D3036
endif
if Atl then
set Dtl=true
else
set ltl=Csl
set Dtl=GetUnitTypeId(ltl)==$484D3037
endif
if Dtl then
set Htl=true
else
set btl=Csl
set Htl=GetUnitTypeId(btl)==$4F636268
endif
if Htl then
set Jtl=true
else
set ytl=Csl
set Jtl=GetUnitTypeId(ytl)==$4F726B6E
endif
if Jtl then
set Ktl=true
else
set ptl=Csl
set Ktl=GetUnitTypeId(ptl)==$45303037
endif
if Ktl then
set Ltl=true
else
set etl=Csl
set Ltl=GetUnitTypeId(etl)==$45303038
endif
if Ltl then
set Xtl=true
else
set qtl=Csl
set Xtl=GetUnitTypeId(qtl)==$55616E62
endif
if Xtl then
set Ctl=true
else
set atl=Csl
set Ctl=GetUnitTypeId(atl)==$48617266
endif
if Ctl then
set Vtl=true
else
set ntl=Csl
set Vtl=GetUnitTypeId(ntl)==$55647468
endif
if Vtl then
set Btl=true
else
set dtl=Csl
set Btl=GetUnitTypeId(dtl)==$484D3038
endif
if Btl then
set Ntl=true
else
set ftl=Csl
set Ntl=GetUnitTypeId(ftl)==$55303048
endif
if Ntl then
set Mtl=true
else
set Rtl=Csl
set Mtl=GetUnitTypeId(Rtl)==$55303046
endif
if Mtl then
set wil=true
else
set Ttl=Csl
set wil=GetUnitTypeId(Ttl)==$5530304A
endif
if wil then
set uil=true
else
set Ytl=Csl
set uil=GetUnitTypeId(Ytl)==$5530304D
endif
if uil then
set ril=true
else
set Gtl=Csl
set ril=GetUnitTypeId(Gtl)==$55303047
endif
if ril then
set sil=true
else
set gtl=Csl
set sil=GetUnitTypeId(gtl)==$4F303344
endif
set til=sil==false
else
set til=false
endif
if til then
call j5y(Irl,"when calling addRandomItem in VulperaDopBonus, line 128")
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl",Irl,"origin"))
endif
endif
set qW=qW-1
set Url=null
set Irl=null
set Arl=null
set Hrl=null
set Krl=null
set Xrl=null
set Vrl=null
set Nrl=null
set Mrl=null
set usl=null
set rsl=null
set ssl=null
set tsl=null
set isl=null
set Ssl=null
set csl=null
set Osl=null
set lsl=null
set ysl=null
set psl=null
set esl=null
set qsl=null
set asl=null
set nsl=null
set fsl=null
set Rsl=null
set Ysl=null
set Gsl=null
set gsl=null
set hsl=null
set Fsl=null
set ksl=null
set xsl=null
set vsl=null
set Qsl=null
set Wsl=null
set Esl=null
set Zsl=null
set Usl=null
set Isl=null
set Asl=null
set Dsl=null
set Jsl=null
set Ksl=null
set Lsl=null
set Xsl=null
set Csl=null
set Vsl=null
set Bsl=null
set Nsl=null
set Msl=null
set wtl=null
set utl=null
set rtl=null
set stl=null
set ttl=null
set itl=null
set Stl=null
set ctl=null
set otl=null
set Otl=null
set ltl=null
set btl=null
set ytl=null
set ptl=null
set etl=null
set qtl=null
set atl=null
set ntl=null
set dtl=null
set ftl=null
set Rtl=null
set Ttl=null
set Ytl=null
set Gtl=null
set gtl=null
set htl=null
set Ftl=null
endfunction
function UvO takes nothing returns nothing
set qW=0
call iil("via function reference VulperaDopBonus, line 88")
endfunction
function UvS takes nothing returns boolean
local unit dvS=GetFilterUnit()
local unit fvS=dvS
local unit RvS
local unit TvS
local unit YvS
local unit GvS
local unit gvS
local unit hvS
local unit FvS
local unit kvS
local boolean jvS
local boolean xvS
local boolean vvS
local boolean mvS
local boolean QvS
local boolean WvS
local boolean EvS
local boolean ZvS
if GetUnitTypeId(fvS)==$456B6767 then
set jvS=true
else
set RvS=dvS
set jvS=GetUnitTypeId(RvS)==$48303144
endif
if jvS then
set xvS=true
else
set TvS=dvS
set xvS=GetUnitTypeId(TvS)==$45303038
endif
if xvS then
set vvS=true
else
set YvS=dvS
set vvS=GetUnitTypeId(YvS)==$45646D6D
endif
if vvS then
set mvS=true
else
set GvS=dvS
set mvS=GetUnitTypeId(GvS)==$45777264
endif
if mvS then
set QvS=true
else
set gvS=dvS
set QvS=GetUnitTypeId(gvS)==$486D6B67
endif
if QvS then
set WvS=true
else
set hvS=dvS
set WvS=GetUnitTypeId(hvS)==$45303037
endif
if WvS then
set EvS=true
else
set FvS=dvS
set EvS=GetUnitTypeId(FvS)==$45657669
endif
if EvS then
set kvS=dvS
set ZvS=UnitAlive(kvS)
else
set ZvS=false
endif
set dvS=null
set fvS=null
set RvS=null
set TvS=null
set YvS=null
set GvS=null
set gvS=null
set hvS=null
set FvS=null
set kvS=null
return ZvS
endfunction
function Uvt takes nothing returns boolean
local trigger Qvt
local trigger Wvt
local playerunitevent Evt
local integer Zvt
set ma=CreateTrigger()
set Qa=null
set Qvt=ma
call DisableTrigger(Qvt)
set Wvt=ma
set Evt=EVENT_PLAYER_UNIT_ATTACKED
set Zvt=0
loop
call TriggerRegisterPlayerUnitEvent(Wvt,Player(Zvt),Evt,null)
set Zvt=Zvt+1
exitwhen Zvt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ma,Condition(p5))
call TriggerAddAction(ma,e5)
set Qvt=null
set Wvt=null
set Evt=null
return true
endfunction
function Uxt takes nothing returns boolean
local unit nxt=GetEnteringUnit()
local unit fxt=nxt
local player dxt=GetOwningPlayer(fxt)
local player Rxt=dxt
local unit Yxt=G[5]
local player Txt=GetOwningPlayer(Yxt)
local unit Gxt
local unit gxt
local unittype hxt
local unit Fxt
local unit kxt
local unit jxt
local unit xxt
local boolean vxt
local boolean mxt
local boolean Qxt
local boolean Wxt
local boolean Ext
local boolean Zxt
if IsPlayerEnemy(Rxt,Txt) then
set vxt=true
else
set Gxt=G[5]
set vxt=GetOwningPlayer(Gxt)==Player(15)
endif
if vxt then
set gxt=nxt
set hxt=UNIT_TYPE_HERO
set mxt=IsUnitType(gxt,hxt)==true or GetUnitLevel(nxt)>=7
else
set mxt=false
endif
if mxt then
set Fxt=nxt
set Qxt=GetUnitTypeId(Fxt)!=$6830324C
else
set Qxt=false
endif
if Qxt then
set kxt=nxt
set Wxt=GetUnitTypeId(kxt)!=$6830324D
else
set Wxt=false
endif
if Wxt then
set jxt=nxt
set Ext=GetUnitTypeId(jxt)!=$68303254
else
set Ext=false
endif
if Ext then
set xxt=nxt
set Zxt=GetUnitTypeId(xxt)!=$6830324F
else
set Zxt=false
endif
set nxt=null
set dxt=null
set fxt=null
set Rxt=null
set Txt=null
set Yxt=null
set Gxt=null
set gxt=null
set hxt=null
set Fxt=null
set kxt=null
set jxt=null
set xxt=null
return Zxt
endfunction
function V0l takes nothing returns boolean
local timer H0l
local real J0l
local code K0l
local timer L0l
local real X0l
local code C0l
set sq=CreateTimer()
set H0l=sq
set J0l=100000.
set K0l=null
call TimerStart(H0l,J0l,false,K0l)
set L0l=CreateTimer()
set X0l=.03
set C0l=U2
call TimerStart(L0l,X0l,true,C0l)
set H0l=null
set L0l=null
return true
endfunction
function saS takes unit DqS,integer HqS returns nothing
local unit KqS=DqS
local unit JqS
local unit LqS
local unit XqS
local integer CqS
local unit VqS
local integer BqS
local integer NqS
local unit MqS
local integer waS
local unit uaS
local real raS
if GetUnitTypeId(KqS)==$456D3173 then
if HqS==$41305852 then
set LqS=DqS
set JqS=CreateUnit(GetOwningPlayer(LqS),$75303030,GetSpellTargetX(),GetSpellTargetY(),bj_UNIT_FACING)
set XqS=JqS
set CqS=$41305853
call UnitAddAbility(XqS,CqS)
set VqS=JqS
set BqS=$41305853
set MqS=DqS
set waS=$41305852
set NqS=GetUnitAbilityLevel(MqS,waS)
call SetUnitAbilityLevel(VqS,BqS,NqS)
call IssuePointOrderById(JqS,852089,GetSpellTargetX(),GetSpellTargetY())
set uaS=JqS
set raS=13.
call UnitApplyTimedLife(uaS,$42544C46,raS)
endif
endif
set JqS=null
set KqS=null
set LqS=null
set XqS=null
set VqS=null
set MqS=null
set uaS=null
endfunction
function V2e takes nothing returns nothing
call saS(GetTriggerUnit(),GetSpellAbilityId())
endfunction
function V7b takes nothing returns boolean
return true
endfunction
function VAw takes nothing returns boolean
local trigger AAw
local trigger DAw
local playerunitevent HAw
local trigger JAw
local playerunitevent KAw
local integer LAw
local trigger XAw
local code CAw
set dY=CreateTrigger()
set AAw=dY
call DisableTrigger(AAw)
set DAw=dY
set HAw=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set JAw=DAw
set KAw=HAw
set LAw=0
loop
call TriggerRegisterPlayerUnitEvent(JAw,Player(LAw),KAw,null)
set LAw=LAw+1
exitwhen LAw==bj_MAX_PLAYER_SLOTS
endloop
set XAw=dY
set CAw=Www_1647
call TriggerAddAction(XAw,CAw)
set AAw=null
set DAw=null
set HAw=null
set JAw=null
set KAw=null
set XAw=null
return true
endfunction
function VCO takes nothing returns boolean
local playerunitevent XCO=EVENT_PLAYER_UNIT_DEATH
local code CCO=T3
call emO(XCO,null,CCO,null)
set XCO=null
return true
endfunction
function VCu takes nothing returns nothing
local unit PCu=GetTriggerUnit()
local unit ACu=PCu
local string DCu="attack"
local real XCu=Qw[20]
local real CCu=Ww[20]
local real HCu=XCu
local real JCu=CCu
local unit KCu
local unittype LCu
call IssuePointOrder(ACu,DCu,HCu,JCu)
set KCu=PCu
set LCu=UNIT_TYPE_HERO
if IsUnitType(KCu,LCu) then
call SaveInteger(qu,GetHandleId(PCu),$6D6F7665,20)
endif
set PCu=null
set ACu=null
set KCu=null
set LCu=null
endfunction
function VFt takes nothing returns boolean
set mh=CreateSound("ArksayPick.mp3",false,false,false,10,10,"DefaultEAXON")
return true
endfunction
function Wit takes string cit returns nothing
local unit oit
local unit Oit
local integer lit
local unit bit
local real yit
local real pit
local filterfunc eit
local unit qit
local unittype ait
local unit nit
local unit dit
local unit fit
local string Rit
local integer Tit
local unit Yit
local unittype Git
local unit git
local unittype hit
local group Fit
local unit kit
local group jit
local unit xit
local real vit
local real mit
local real Qit
set aW[qW]=cit
set qW=qW+1
set oit=GetTriggerUnit()
set qit=oit
set ait=UNIT_TYPE_STRUCTURE
if IsUnitType(qit,ait)==true then
if IsUnitInGroup(oit,sO)==true then
set Oit=GetAttacker()
set nit=Oit
set dit=nit
set vit=GetUnitX(dit)
set fit=nit
set mit=vit
set Qit=GetUnitY(fit)
set yit=mit
set pit=Qit
set eit=Filter(hN)
set Rit="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_AgroBaza in AgroBaza, line 214"
set aW[qW]=Rit
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set Tit=qF
set aF[Tit]=871
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_AgroBaza.","when calling error in AgroBaza, line 214")
set Tit=0
endif
else
set eF=eF-1
set Tit=pF[eF]
set aF[Tit]=871
endif
set qW=qW-1
set lit=Tit
set Yk[lit]=Oit
call WXp(4,0,null,null,yit,pit,750.,false,0,null,eit,lit,"when calling forNearestUnit in AgroBaza, line 214")
endif
endif
set Yit=oit
set Git=UNIT_TYPE_HERO
if IsUnitType(Yit,Git)==true then
set bit=GetAttacker()
set git=bit
set hit=UNIT_TYPE_HERO
if IsUnitType(git,hit)==true then
if IsUnitInGroup(oit,wO)==false then
set Fit=wO
set kit=oit
call GroupAddUnit(Fit,kit)
endif
if IsUnitInGroup(bit,wO)==false then
set jit=wO
set xit=bit
call GroupAddUnit(jit,xit)
endif
endif
endif
set qW=qW-1
set oit=null
set Oit=null
set bit=null
set eit=null
set qit=null
set ait=null
set nit=null
set dit=null
set fit=null
set Yit=null
set Git=null
set git=null
set hit=null
set Fit=null
set kit=null
set jit=null
set xit=null
endfunction
function VGc takes nothing returns nothing
set qW=0
call Wit("via function reference AgroBaza, line 209")
endfunction
function VHu takes nothing returns nothing
local integer PHu=GetSpellAbilityId()
local unit AHu
local filterfunc DHu
local unit HHu
local unit JHu
local group KHu
local boolexpr LHu
local group XHu
local real CHu
if PHu==$41313357 then
set AHu=GetSpellAbilityUnit()
set DHu=Filter(K9)
set XHu=ER
set HHu=AHu
set CHu=GetUnitX(HHu)
set JHu=AHu
call GroupEnumUnitsInRange(XHu,CHu,GetUnitY(JHu),700.,DHu)
call ForGroup(ER,L9)
set KHu=ER
call GroupClear(KHu)
set LHu=DHu
call DestroyBoolExpr(LHu)
endif
set AHu=null
set DHu=null
set HHu=null
set JHu=null
set KHu=null
set LHu=null
set XHu=null
endfunction
function VIp takes nothing returns nothing
local unit DIp=GetEnteringUnit()
local unit JIp=DIp
local integer HIp=GetUnitTypeId(JIp)
local unit KIp
local integer LIp
local unit XIp
local integer CIp
if HIp==$6E656E66 or HIp==$6E616E6F then
set KIp=DIp
set LIp=$41305845
call UnitAddAbility(KIp,LIp)
endif
if HIp==$6E627267 then
set XIp=DIp
set CIp=$41305846
call UnitAddAbility(XIp,CIp)
endif
set DIp=null
set JIp=null
set KIp=null
set XIp=null
endfunction
function VIu takes nothing returns nothing
local unit PIu=GetTriggerUnit()
local unit AIu=PIu
local string DIu="attack"
local real XIu=Qw[15]
local real CIu=Ww[15]
local real HIu=XIu
local real JIu=CIu
local unit KIu
local unittype LIu
call IssuePointOrder(AIu,DIu,HIu,JIu)
set KIu=PIu
set LIu=UNIT_TYPE_HERO
if IsUnitType(KIu,LIu) then
call SaveInteger(qu,GetHandleId(PIu),$6D6F7665,15)
endif
set PIu=null
set AIu=null
set KIu=null
set LIu=null
endfunction
function VNc takes nothing returns nothing
local unit xNc=GetEnteringUnit()
local unit QNc=xNc
local integer vNc=GetUnitTypeId(QNc)
local integer WNc=$5230354C
local unit ZNc=xNc
local player ENc=GetOwningPlayer(ZNc)
local integer mNc=GetPlayerTechCount(ENc,WNc,true)
local unit UNc
local integer INc
local unit PNc
local integer ANc
local unit DNc
local integer HNc
local unit JNc
local integer KNc
local unit LNc
local integer XNc
local integer CNc
if vNc==$68303146 then
if mNc==2 then
set UNc=xNc
set INc=$41313645
call UnitAddAbility(UNc,INc)
endif
if mNc==3 then
set PNc=xNc
set ANc=$41313646
call UnitAddAbility(PNc,ANc)
endif
if mNc==4 then
set DNc=xNc
set HNc=$41313647
call UnitAddAbility(DNc,HNc)
endif
if mNc>=3 then
set JNc=xNc
set KNc=$41414147
call UnitAddAbility(JNc,KNc)
set LNc=xNc
set XNc=$41414147
set CNc=mNc-2
call SetUnitAbilityLevel(LNc,XNc,CNc)
endif
endif
set xNc=null
set QNc=null
set ENc=null
set ZNc=null
set UNc=null
set PNc=null
set DNc=null
set JNc=null
set LNc=null
endfunction
function VNe takes nothing returns nothing
local unit yNe=GetTriggerUnit()
local unit eNe=yNe
local player pNe=GetOwningPlayer(eNe)
local unit qNe
local string aNe
local real nNe
local real dNe
local unit fNe
local unittype RNe
local unit TNe
local string YNe
local real GNe
local real gNe
local unit hNe
local unittype FNe
local unit kNe
local string jNe
local real xNe
local real vNe
local unit mNe
local unittype QNe
local unit WNe
local string ENe
local real ZNe
local real UNe
local unit INe
local unittype PNe
local real ANe
local real DNe
local real HNe
local real JNe
local real KNe
local real LNe
local real XNe
local real CNe
if pNe==nu then
if (Ew[2]==false and Ew[3]==false) or (Ew[0]==true and Ew[3]==true) then
set qNe=yNe
set aNe="attack"
set ANe=Qw[13]
set DNe=Ww[13]
set nNe=ANe
set dNe=DNe
call IssuePointOrder(qNe,aNe,nNe,dNe)
set fNe=yNe
set RNe=UNIT_TYPE_HERO
if IsUnitType(fNe,RNe) then
call SaveInteger(qu,GetHandleId(yNe),$6D6F7665,13)
endif
elseif (Ew[2]==true and Ew[0]==false) or (Ew[2]==true and Ew[0]==true) then
set TNe=yNe
set YNe="attack"
set HNe=Qw[15]
set JNe=Ww[15]
set GNe=HNe
set gNe=JNe
call IssuePointOrder(TNe,YNe,GNe,gNe)
set hNe=yNe
set FNe=UNIT_TYPE_HERO
if IsUnitType(hNe,FNe) then
call SaveInteger(qu,GetHandleId(yNe),$6D6F7665,15)
endif
endif
endif
if pNe==fu then
set kNe=yNe
set jNe="attack"
set KNe=Qw[15]
set LNe=Ww[15]
set xNe=KNe
set vNe=LNe
call IssuePointOrder(kNe,jNe,xNe,vNe)
set mNe=yNe
set QNe=UNIT_TYPE_HERO
if IsUnitType(mNe,QNe) then
call SaveInteger(qu,GetHandleId(yNe),$6D6F7665,15)
endif
endif
if pNe==Ru then
set WNe=yNe
set ENe="attack"
set XNe=Qw[13]
set CNe=Ww[13]
set ZNe=XNe
set UNe=CNe
call IssuePointOrder(WNe,ENe,ZNe,UNe)
set INe=yNe
set PNe=UNIT_TYPE_HERO
if IsUnitType(INe,PNe) then
call SaveInteger(qu,GetHandleId(yNe),$6D6F7665,13)
endif
endif
set yNe=null
set pNe=null
set eNe=null
set qNe=null
set fNe=null
set RNe=null
set TNe=null
set hNe=null
set FNe=null
set kNe=null
set mNe=null
set QNe=null
set WNe=null
set INe=null
set PNe=null
endfunction
function VOc takes nothing returns boolean
local playerunitevent KOc=EVENT_PLAYER_UNIT_PICKUP_ITEM
local code LOc=N3
local playerunitevent XOc
local code COc
call emO(KOc,null,LOc,null)
set XOc=EVENT_PLAYER_UNIT_PICKUP_ITEM
set COc=M3
call emO(XOc,null,COc,null)
set KOc=null
set XOc=null
return true
endfunction
function VQo takes nothing returns nothing
local integer hQo=GetSpellAbilityId()
local unit FQo
local unit kQo
local unit jQo
local unit xQo
local unit vQo
local unit mQo
local unit QQo
local real WQo
local unit EQo
local integer ZQo
local unit UQo
local unit IQo
local unit PQo
local unit AQo
local real DQo
local unit HQo
local integer JQo
local player KQo
local real LQo
local player XQo
local real CQo
if hQo==$414D3765 then
set FQo=GetSpellAbilityUnit()
set xQo=FQo
set KQo=GetOwningPlayer(xQo)
set vQo=FQo
set LQo=GetUnitX(vQo)
set mQo=FQo
set kQo=CreateUnit(KQo,$7830316A,LQo,GetUnitY(mQo),270.)
set QQo=kQo
set EQo=FQo
set ZQo=$414D3765
set WQo=15.+3.*GetUnitAbilityLevel(EQo,ZQo)
call UnitApplyTimedLife(QQo,$42544C46,WQo)
call dYr(kQo)
set UQo=FQo
set XQo=GetOwningPlayer(UQo)
set IQo=FQo
set CQo=GetUnitX(IQo)
set PQo=FQo
set jQo=CreateUnit(XQo,$7830316B,CQo,GetUnitY(PQo),270.)
set AQo=jQo
set HQo=FQo
set JQo=$414D3765
set DQo=15.+3.*GetUnitAbilityLevel(HQo,JQo)
call UnitApplyTimedLife(AQo,$42544C46,DQo)
call dYr(jQo)
endif
set FQo=null
set kQo=null
set jQo=null
set xQo=null
set vQo=null
set mQo=null
set QQo=null
set EQo=null
set UQo=null
set IQo=null
set PQo=null
set AQo=null
set HQo=null
set KQo=null
set XQo=null
endfunction
function VRt takes nothing returns nothing
set qW=0
call iVw("via function reference HeroesSound, line 526")
endfunction
function VRw takes nothing returns nothing
local unit WRw=GetEnteringUnit()
local unit IRw=WRw
local integer ERw=GetUnitTypeId(IRw)
local unit PRw=WRw
local player ZRw=GetOwningPlayer(PRw)
local integer URw
local unit ARw
local integer DRw
local unit HRw
local integer JRw
local unit KRw
local integer LRw
local unit XRw
local integer CRw
if ERw==$6E666762 or ERw==$6E64716E or ERw==$6E647174 or ERw==$6E666775 or ERw==$6E303357 and GetPlayerTechCount(ZRw,$52303057,true)>0 then
set URw=GetPlayerTechCount(ZRw,$52303057,true)
if URw==1 then
set ARw=WRw
set DRw=$41303744
call UnitAddAbility(ARw,DRw)
elseif URw==2 then
set HRw=WRw
set JRw=$41303147
call UnitAddAbility(HRw,JRw)
elseif URw==3 then
set KRw=WRw
set LRw=$41303743
call UnitAddAbility(KRw,LRw)
else
set XRw=WRw
set CRw=$41304B33
call UnitAddAbility(XRw,CRw)
endif
endif
set WRw=null
set ZRw=null
set IRw=null
set PRw=null
set ARw=null
set HRw=null
set KRw=null
set XRw=null
endfunction
function VUo takes nothing returns nothing
local integer HZo=GetRandomInt(1,100)
local unit JZo
local integer KZo
local unit LZo
local integer XZo
local unit CZo
local integer VZo
local integer BZo
local unit NZo
local integer MZo
local unit wUo
local integer uUo
local unit rUo
local integer sUo
local unit tUo
local integer iUo
local unit SUo
local integer cUo
local unit oUo
local integer OUo
local unit lUo
local integer bUo
local integer yUo
local unit pUo
local integer eUo
local unit qUo
local integer aUo
local unit nUo
local integer dUo
local integer fUo
local unit RUo
local integer TUo
local unit YUo
local integer GUo
local unit gUo
local integer hUo
local integer FUo
local unit kUo
local integer jUo
local unit xUo
local integer vUo
local string mUo
local real QUo
local player WUo
local unit EUo
local string ZUo
local real UUo
local player IUo
local unit PUo
local unit AUo
local integer DUo
local unit HUo
local integer JUo
local unit KUo
local integer LUo
local timer XUo
local timer CUo
if HZo<=30+10*re-1 then
if re<2 then
set JZo=Dp
set KZo=$41323353
if GetUnitAbilityLevel(JZo,KZo)==0 then
set LZo=Dp
set XZo=$41323353
call UnitAddAbility(LZo,XZo)
set CZo=Dp
set VZo=$41323353
set BZo=re
call SetUnitAbilityLevel(CZo,VZo,BZo)
endif
set NZo=Dp
set MZo=$41323354
if GetUnitAbilityLevel(NZo,MZo)==0 then
set wUo=Dp
set uUo=$41323354
call UnitAddAbility(wUo,uUo)
endif
set rUo=Dp
set sUo=$41323355
if GetUnitAbilityLevel(rUo,sUo)==0 then
set tUo=Dp
set iUo=$41323355
call UnitAddAbility(tUo,iUo)
endif
endif
if re>=2 then
set SUo=Dp
set cUo=$41323353
if GetUnitAbilityLevel(SUo,cUo)==0 then
set oUo=Dp
set OUo=$41323353
call UnitAddAbility(oUo,OUo)
set lUo=Dp
set bUo=$41323353
set yUo=re
call SetUnitAbilityLevel(lUo,bUo,yUo)
endif
set pUo=Dp
set eUo=$41323354
if GetUnitAbilityLevel(pUo,eUo)==0 then
set qUo=Dp
set aUo=$41323354
call UnitAddAbility(qUo,aUo)
set nUo=Dp
set dUo=$41323354
set fUo=re-1
call SetUnitAbilityLevel(nUo,dUo,fUo)
endif
set RUo=Dp
set TUo=$41323355
if GetUnitAbilityLevel(RUo,TUo)==0 then
set YUo=Dp
set GUo=$41323355
call UnitAddAbility(YUo,GUo)
set gUo=Dp
set hUo=$41323355
set FUo=2
call SetUnitAbilityLevel(gUo,hUo,FUo)
endif
set kUo=Dp
set jUo=$41323356
if GetUnitAbilityLevel(kUo,jUo)==0 then
set xUo=Dp
set vUo=$41323356
call UnitAddAbility(xUo,vUo)
endif
endif
set mUo="The expedition was a success! Here is your reward\nYou have refreshed cooldowns in Harbor"
set QUo=10.
set EUo=Dp
set WUo=GetOwningPlayer(EUo)
call DisplayTimedTextToPlayer(WUo,0.,0.,QUo,mUo)
else
set ZUo="The expedition failed..."
set UUo=10.
set PUo=Dp
set IUo=GetOwningPlayer(PUo)
call DisplayTimedTextToPlayer(IUo,0.,0.,UUo,ZUo)
endif
if re<2 then
set AUo=Dp
set DUo=$4132334D
call UnitAddAbility(AUo,DUo)
endif
if re>=2 and re<4 then
set HUo=Dp
set JUo=$4132334E
call UnitAddAbility(HUo,JUo)
endif
if re==4 then
set KUo=Dp
set LUo=$4132334F
call UnitAddAbility(KUo,LUo)
endif
set XUo=Jp
call PauseTimer(XUo)
set CUo=Jp
call DestroyTimer(CUo)
set Jp=null
set JZo=null
set LZo=null
set CZo=null
set NZo=null
set wUo=null
set rUo=null
set tUo=null
set SUo=null
set oUo=null
set lUo=null
set pUo=null
set qUo=null
set nUo=null
set RUo=null
set YUo=null
set gUo=null
set kUo=null
set xUo=null
set WUo=null
set EUo=null
set IUo=null
set PUo=null
set AUo=null
set HUo=null
set KUo=null
set XUo=null
set CUo=null
endfunction
function VUp takes nothing returns boolean
local playerunitevent XUp=EVENT_PLAYER_UNIT_SPELL_CAST
local code CUp=r8
call emO(XUp,null,CUp,null)
set XUp=null
return true
endfunction
function VXc takes nothing returns boolean
return true
endfunction
function VYp takes nothing returns boolean
local unit DYp=GetFilterUnit()
local unit HYp
local player JYp
local unit KYp
local integer LYp
local boolean XYp
local boolean CYp
if UnitAlive(DYp)==true then
set HYp=GetFilterUnit()
set JYp=Od
set XYp=IsUnitEnemy(HYp,JYp)==true
else
set XYp=false
endif
if XYp then
set KYp=GetFilterUnit()
set LYp=$4176756C
set CYp=GetUnitAbilityLevel(KYp,LYp)==0
else
set CYp=false
endif
set DYp=null
set HYp=null
set JYp=null
set KYp=null
return CYp
endfunction
function V_l takes nothing returns nothing
local unit I_l
local unit P_l
local player A_l
local real D_l
local real H_l
local unit J_l
local unit K_l
local timerdialog L_l
local player X_l
local timerdialog C_l
if uh==false then
set uh=true
set I_l=k[0]
call ShowUnit(I_l,false)
set P_l=k[2]
call ShowUnit(P_l,true)
set A_l=Gu
set J_l=k[2]
set D_l=GetUnitX(J_l)
set K_l=k[2]
set H_l=GetUnitY(K_l)
if GetLocalPlayer()==A_l then
call SetCameraPosition(D_l,H_l)
endif
set L_l=tr
call DestroyTimerDialog(L_l)
call TimerStart(ir,30.,false,Erw)
set tr=CreateTimerDialog(ir)
set C_l=tr
set X_l=Gu
call TimerDialogSetTitle(C_l,GetPlayerName(X_l)+" ban race")
call TimerDialogDisplay(tr,true)
endif
set I_l=null
set P_l=null
set A_l=null
set J_l=null
set K_l=null
set L_l=null
set X_l=null
set C_l=null
endfunction
function K3e takes string p3e returns nothing
local integer e3e
local integer q3e
local integer a3e
local integer n3e
local integer d3e
local string f3e
local integer R3e
local string T3e
local integer Y3e
local integer G3e
local integer g3e
local string h3e
local integer F3e
local string k3e
local integer j3e
local integer x3e
local unit v3e
local integer m3e
local player Q3e
local unit W3e
local unit E3e
local player Z3e
local real U3e
local real I3e
local unit P3e
local unit A3e
local timerdialog D3e
local player H3e
local timerdialog J3e
set aW[qW]=p3e
set qW=qW+1
if Qu==false then
set Qu=true
set d3e=gY
set f3e="when calling shuffle in PickRace, line 1561"
set aW[qW]=f3e
set qW=qW+1
if ok[d3e]==0 then
if d3e==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(d3e,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set R3e=gY
set T3e="when calling getFirst in PickRace, line 1562"
set aW[qW]=T3e
set qW=qW+1
if ok[R3e]==0 then
if R3e==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set G3e=R3e
set Y3e=Hv[Kv[Vv[G3e]]]
set qW=qW-1
set e3e=Y3e
call Gqp(Yu,e3e,"when calling pickRaceRandom in PickRace, line 1563")
call eWp(gY,e3e,"when calling remove in PickRace, line 1564")
set g3e=vY
set h3e="when calling shuffle in PickRace, line 1565"
set aW[qW]=h3e
set qW=qW+1
if ok[g3e]==0 then
if g3e==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(g3e,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set F3e=vY
set k3e="when calling getFirst in PickRace, line 1566"
set aW[qW]=k3e
set qW=qW+1
if ok[F3e]==0 then
if F3e==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set x3e=F3e
set j3e=Hv[Kv[Vv[x3e]]]
set qW=qW-1
set q3e=j3e
set a3e=0
loop
exitwhen a3e>3
set v3e=k[a3e]
set m3e=q3e
call UnitRemoveAbility(v3e,m3e)
set a3e=a3e+1
endloop
call eWp(vY,q3e,"when calling remove in PickRace, line 1569")
set Q3e=Yu
set n3e=GetPlayerId(Q3e)
set W3e=F[n3e]
call ShowUnit(W3e,false)
set E3e=k[3]
call ShowUnit(E3e,true)
set Z3e=gu
set P3e=k[3]
set U3e=GetUnitX(P3e)
set A3e=k[3]
set I3e=GetUnitY(A3e)
if GetLocalPlayer()==Z3e then
call SetCameraPosition(U3e,I3e)
endif
set D3e=tr
call DestroyTimerDialog(D3e)
call TimerStart(ir,30.,false,Kww_787)
set tr=CreateTimerDialog(ir)
set J3e=tr
set H3e=gu
call TimerDialogSetTitle(J3e,GetPlayerName(H3e)+" pick race")
call TimerDialogDisplay(tr,true)
endif
set qW=qW-1
set v3e=null
set Q3e=null
set W3e=null
set E3e=null
set Z3e=null
set P3e=null
set A3e=null
set D3e=null
set H3e=null
set J3e=null
endfunction
function Vao takes nothing returns nothing
set qW=0
call K3e("via function reference PickRace, line 1489")
endfunction
function Var takes nothing returns boolean
local unit har=GetFilterUnit()
local unit Far=har
local unit kar
local unittype jar
local unit xar
local unittype mar
local unit Qar
local unittype War
local unit Ear
local integer Zar
local unit Uar
local unit Iar
local unit Par
local player Aar
local unit Dar
local boolean Har
local boolean Jar
local boolean Kar
local boolean Lar
local boolean Xar
local boolean Car
if UnitAlive(Far) then
set kar=har
set jar=UNIT_TYPE_STRUCTURE
set Har=IsUnitType(kar,jar)==false
else
set Har=false
endif
if Har then
set xar=har
set mar=UNIT_TYPE_HERO
set Jar=IsUnitType(xar,mar)==false
else
set Jar=false
endif
if Jar then
set Qar=har
set War=UNIT_TYPE_ANCIENT
set Kar=IsUnitType(Qar,War)==false
else
set Kar=false
endif
if Kar then
set Ear=har
set Zar=$42303848
set Lar=GetUnitAbilityLevel(Ear,Zar)>0==false
else
set Lar=false
endif
if Lar then
set Uar=har
set Iar=GetSpellAbilityUnit()
if Uar!=null and Iar!=null then
set Par=Uar
set Dar=Iar
set Aar=GetOwningPlayer(Dar)
set Xar=Par!=null and IsUnitAlly(Par,Aar)
else
set Xar=false
endif
set Car=Xar
else
set Car=false
endif
set har=null
set Far=null
set kar=null
set jar=null
set xar=null
set mar=null
set Qar=null
set War=null
set Ear=null
set Uar=null
set Iar=null
set Par=null
set Aar=null
set Dar=null
return Car
endfunction
function VeS takes nothing returns boolean
return true
endfunction
function Vgp takes nothing returns nothing
local unit Ugp=GetEnteringUnit()
local unit Agp=Ugp
local integer Igp=GetUnitTypeId(Agp)
local unit Dgp=Ugp
local integer Pgp=GetPlayerTechCount(GetOwningPlayer(Dgp),$52303545,true)
local unit Hgp
local integer Jgp
local unit Kgp
local integer Lgp
local unit Xgp
local integer Cgp
if Igp==$6E303135 then
if Pgp==0 then
set Hgp=Ugp
set Jgp=$41305739
call UnitAddAbility(Hgp,Jgp)
endif
if Pgp==1 then
set Kgp=Ugp
set Lgp=$41305741
call UnitAddAbility(Kgp,Lgp)
endif
if Pgp==2 then
set Xgp=Ugp
set Cgp=$41305742
call UnitAddAbility(Xgp,Cgp)
endif
endif
set Ugp=null
set Agp=null
set Dgp=null
set Hgp=null
set Kgp=null
set Xgp=null
endfunction
function Vkc takes nothing returns nothing
local integer Gkc=GetSpellAbilityId()
local unit gkc
local integer hkc
local unit Fkc
local unit kkc
local integer jkc
local unit xkc
local unit vkc
local unit mkc
local unit Qkc
local real Wkc
local unit Ekc
local integer Zkc
local unit Ukc
local integer Ikc
local integer Pkc
local unit Akc
local string Dkc
local real Hkc
local real Jkc
local player Kkc
local real Lkc
local real Xkc
local real Ckc
if Gkc==$41303941 then
set gkc=GetSpellAbilityUnit()
set kkc=gkc
set jkc=$41303941
set hkc=GetUnitAbilityLevel(kkc,jkc)
set xkc=gkc
set Kkc=GetOwningPlayer(xkc)
set vkc=gkc
set Lkc=GetUnitX(vkc)
set mkc=gkc
set Fkc=CreateUnit(Kkc,$75303030,Lkc,GetUnitY(mkc),0.)
set Qkc=Fkc
set Wkc=22.
call UnitApplyTimedLife(Qkc,$42544C46,Wkc)
set Ekc=Fkc
set Zkc=$414E6D6F
call UnitAddAbility(Ekc,Zkc)
set Ukc=Fkc
set Ikc=$414E6D6F
set Pkc=hkc
call SetUnitAbilityLevel(Ukc,Ikc,Pkc)
set Akc=Fkc
set Dkc="monsoon"
set Xkc=GetSpellTargetX()
set Ckc=GetSpellTargetY()
set Hkc=Xkc
set Jkc=Ckc
call IssuePointOrder(Akc,Dkc,Hkc,Jkc)
endif
set gkc=null
set Fkc=null
set kkc=null
set xkc=null
set vkc=null
set mkc=null
set Qkc=null
set Ekc=null
set Ukc=null
set Akc=null
set Kkc=null
endfunction
function Vmb takes nothing returns nothing
local integer Rmb=GetSpellAbilityId()
local unit Tmb
local unit Ymb
local integer Gmb
local unit gmb
local player hmb
local unit Fmb
local string kmb
local real jmb
local player xmb
local unit vmb
local unit mmb
local unit Qmb
local unit Wmb
local unit Emb
local unit Zmb
local unit Umb
local real Imb
local unit Pmb
local integer Amb
local unit Dmb
local string Hmb
local widget Jmb
local string Kmb
local string Lmb
local player Xmb
local real Cmb
if Rmb==$4132344C then
set Tmb=GetSpellAbilityUnit()
set Ymb=GetSpellTargetUnit()
set Fmb=Ymb
set hmb=GetOwningPlayer(Fmb)
set Gmb=GetPlayerId(hmb)-4
set vmb=Tmb
set xmb=GetOwningPlayer(vmb)
set Lmb=Aw[GetPlayerId(xmb)]
set mmb=Tmb
set Kmb=GetPlayerName(GetOwningPlayer(mmb))+"|r"+" used |cffff00ffMana Absorb|r on "+Aw[Gmb]
set Qmb=Ymb
set kmb=Lmb+Kmb+GetHeroProperName(Qmb)+"|r"
set jmb=10.
call DisplayTimedTextToPlayer(IY,0.,0.,jmb,kmb)
set Wmb=Tmb
set Xmb=GetOwningPlayer(Wmb)
set Emb=Ymb
set Cmb=GetUnitX(Emb)
set Zmb=Ymb
set gmb=CreateUnit(Xmb,$75303030,Cmb,GetUnitY(Zmb),0.)
set Umb=gmb
set Imb=3.
call UnitApplyTimedLife(Umb,$42544C46,Imb)
set Pmb=gmb
set Amb=$4132344D
call UnitAddAbility(Pmb,Amb)
set Dmb=gmb
set Hmb="manaburn"
set Jmb=Ymb
call IssueTargetOrder(Dmb,Hmb,Jmb)
endif
set Tmb=null
set Ymb=null
set gmb=null
set hmb=null
set Fmb=null
set xmb=null
set vmb=null
set mmb=null
set Qmb=null
set Wmb=null
set Emb=null
set Zmb=null
set Umb=null
set Pmb=null
set Dmb=null
set Jmb=null
set Xmb=null
endfunction
function kRe takes string SRe returns nothing
local integer cRe
local unit oRe
local integer ORe
local integer lRe
local real bRe
local unit yRe
local integer pRe
local unit eRe
local integer qRe
local unit aRe
local integer nRe
local unit dRe
local integer fRe
local integer RRe
local integer TRe
local string YRe
local integer GRe
local real gRe
local integer hRe
local string FRe
set aW[qW]=SRe
set qW=qW+1
set cRe=GetSpellAbilityId()
if cRe==$41304D50 then
set oRe=GetSpellAbilityUnit()
set ORe=GetUnitAbilityLevel(oRe,cRe)
set yRe=oRe
set pRe=$41303136
call UnitRemoveAbility(yRe,pRe)
set eRe=oRe
set qRe=$414D6335
call UnitAddAbility(eRe,qRe)
set aRe=oRe
set nRe=$506F5372
call UnitAddAbility(aRe,nRe)
set dRe=oRe
set fRe=$506F5372
set RRe=2
call SetUnitAbilityLevel(dRe,fRe,RRe)
set TRe=ORe
set bRe=3.+TRe*1.
set YRe="when calling alloc_CallbackSingle_doAfter_DefiledReaction in DefiledReaction, line 17"
set aW[qW]=YRe
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set GRe=fF
set RF[GRe]=701
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DefiledReaction.","when calling error in DefiledReaction, line 17")
set GRe=0
endif
else
set dF=dF-1
set GRe=nF[dF]
set RF[GRe]=701
endif
set qW=qW-1
set lRe=GRe
set Gj[lRe]=oRe
set gRe=bRe
set hRe=lRe
set FRe="when calling doAfter in DefiledReaction, line 17"
set aW[qW]=FRe
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),gRe,hRe,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set oRe=null
set yRe=null
set eRe=null
set aRe=null
set dRe=null
endfunction
function Vmy takes nothing returns nothing
set qW=0
call kRe("via function reference DefiledReaction, line 25")
endfunction
function Vno takes nothing returns boolean
local unit Zno=GetFilterUnit()
local unit Uno=Zno
local unit Ino
local unittype Pno
local unit Ano
local unit Dno
local unit Hno
local player Jno
local unit Kno
local boolean Lno
local boolean Xno
local boolean Cno
if UnitAlive(Uno)==true then
set Ino=Zno
set Pno=UNIT_TYPE_STRUCTURE
set Lno=IsUnitType(Ino,Pno)==false
else
set Lno=false
endif
if Lno then
set Ano=Zno
set Dno=GetSpellAbilityUnit()
if Ano!=null and Dno!=null then
set Hno=Ano
set Kno=Dno
set Jno=GetOwningPlayer(Kno)
set Xno=IsUnitEnemy(Hno,Jno)
else
set Xno=false
endif
set Cno=Xno
else
set Cno=false
endif
set Zno=null
set Uno=null
set Ino=null
set Pno=null
set Ano=null
set Dno=null
set Hno=null
set Jno=null
set Kno=null
return Cno
endfunction
function VoS takes nothing returns boolean
return true
endfunction
function VrO takes nothing returns boolean
local unit ArO=GetFilterUnit()
local unit LrO=ArO
local unit DrO=GetKillingUnit()
local unit HrO
local unittype JrO
local unit KrO
local boolean XrO
local boolean CrO
if IsUnitEnemy(LrO,GetOwningPlayer(DrO))==true then
set HrO=ArO
set JrO=UNIT_TYPE_STRUCTURE
set XrO=IsUnitType(HrO,JrO)==false
else
set XrO=false
endif
if XrO then
set KrO=ArO
set CrO=UnitAlive(KrO)==true
else
set CrO=false
endif
set ArO=null
set DrO=null
set HrO=null
set JrO=null
set KrO=null
set LrO=null
return CrO
endfunction
function Vtw takes nothing returns boolean
return IsUnitType(GetDyingUnit(),UNIT_TYPE_STRUCTURE)==true and GetDyingUnit()!=g[1] or GetDyingUnit()!=g[2] or GetDyingUnit()!=g[3] or GetDyingUnit()!=g[4] or GetDyingUnit()!=g[5] or GetDyingUnit()!=g[6] or GetDyingUnit()!=g[7] or GetDyingUnit()!=g[8] or GetDyingUnit()!=h[1] or GetDyingUnit()!=h[2] or GetDyingUnit()!=h[3] or GetDyingUnit()!=h[4] or GetDyingUnit()!=h[5] or GetDyingUnit()!=h[6] or GetDyingUnit()!=h[7] or GetDyingUnit()!=h[8]
endfunction
function Vuy takes nothing returns boolean
return true
endfunction
function OFt takes string Kht returns nothing
local integer Lht
local integer Xht
local integer Cht
local player Vht
local unit Bht
local unit Nht
local integer Mht
local unit wFt
local integer uFt
local unit rFt
local integer sFt
local string tFt
local integer iFt
local real SFt
local integer cFt
local string oFt
set aW[qW]=Kht
set qW=qW+1
set Lht=GetSpellAbilityId()
if Lht==$41313451 then
set Bht=Ze
set Vht=GetOwningPlayer(Bht)
set Xht=GetPlayerId(Vht)
if j[Xht]!=$41305634 then
set Nht=o[Xht]
set Mht=j[Xht]
call UnitRemoveAbility(Nht,Mht)
set j[Xht]=$41305634
set wFt=o[Xht]
set uFt=j[Xht]
call UnitAddAbility(wFt,uFt)
endif
set rFt=o[Xht]
set sFt=mY[Xht]
call UnitRemoveAbility(rFt,sFt)
set mY[Xht]=$41304F41
set tFt="when calling alloc_CallbackSingle_doAfter_DraaconidBonusSpell in DraaconidBonusSpell, line 56"
set aW[qW]=tFt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set iFt=fF
set RF[iFt]=703
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DraaconidBonusSpell.","when calling error in DraaconidBonusSpell, line 56")
set iFt=0
endif
else
set dF=dF-1
set iFt=nF[dF]
set RF[iFt]=703
endif
set qW=qW-1
set Cht=iFt
set Fj[Cht]=Xht
set SFt=60.
set cFt=Cht
set oFt="when calling doAfter in DraaconidBonusSpell, line 56"
set aW[qW]=oFt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),SFt,cFt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Vht=null
set Bht=null
set Nht=null
set wFt=null
set rFt=null
endfunction
function Vwr takes nothing returns nothing
set qW=0
call OFt("via function reference DraaconidBonusSpell, line 66")
endfunction
function W2s takes nothing returns nothing
local unit G2s=GetDyingUnit()
local unit g2s=G2s
local unit h2s
local unit F2s
local unit k2s
local unit j2s
local unit x2s
local unit v2s
local unit m2s
local unit Q2s
if GetUnitTypeId(g2s)==$4F303344 then
set fq=false
set h2s=h[1]
call RemoveUnit(h2s)
set h[1]=null
set F2s=h[2]
call RemoveUnit(F2s)
set h[2]=null
set k2s=h[3]
call RemoveUnit(k2s)
set h[3]=null
set j2s=h[4]
call RemoveUnit(j2s)
set h[4]=null
set x2s=h[5]
call RemoveUnit(x2s)
set h[5]=null
set v2s=h[6]
call RemoveUnit(v2s)
set h[6]=null
set m2s=h[7]
call RemoveUnit(m2s)
set h[7]=null
set Q2s=h[8]
call RemoveUnit(Q2s)
set h[8]=null
endif
set G2s=null
set g2s=null
set h2s=null
set F2s=null
set k2s=null
set j2s=null
set x2s=null
set v2s=null
set m2s=null
set Q2s=null
endfunction
function W5S takes nothing returns boolean
return true
endfunction
function W5p takes nothing returns nothing
local unit l5p=GetEnteringUnit()
local unit q5p=l5p
local integer b5p=GetUnitTypeId(q5p)
local unit a5p=l5p
local player y5p=GetOwningPlayer(a5p)
local integer p5p
local integer e5p
local unit n5p
local integer d5p
local unit f5p
local integer R5p
local unit T5p
local integer Y5p
local unit G5p
local integer g5p
local unit h5p
local integer F5p
local unit k5p
local integer j5p
local unit x5p
local integer v5p
local unit m5p
local integer Q5p
if b5p==$6E66656C or b5p==$6E70666C or b5p==$6E303251 and GetPlayerTechCount(y5p,$52303130,true)>0 then
set p5p=GetPlayerTechCount(y5p,$52303130,true)
if p5p==1 then
set n5p=l5p
set d5p=$41303558
call UnitAddAbility(n5p,d5p)
elseif p5p==2 then
set f5p=l5p
set R5p=$4130355A
call UnitAddAbility(f5p,R5p)
elseif p5p==3 then
set T5p=l5p
set Y5p=$4130314B
call UnitAddAbility(T5p,Y5p)
else
set G5p=l5p
set g5p=$41304B34
call UnitAddAbility(G5p,g5p)
endif
endif
if b5p==$6E303358 and GetPlayerTechCount(y5p,$52303130,true)>0 then
set e5p=GetPlayerTechCount(y5p,$52303130,true)
if e5p==1 then
set h5p=l5p
set F5p=$41323756
call UnitAddAbility(h5p,F5p)
elseif e5p==2 then
set k5p=l5p
set j5p=$4130314B
call UnitAddAbility(k5p,j5p)
elseif e5p==3 then
set x5p=l5p
set v5p=$41323731
call UnitAddAbility(x5p,v5p)
else
set m5p=l5p
set Q5p=$41323732
call UnitAddAbility(m5p,Q5p)
endif
endif
set l5p=null
set y5p=null
set q5p=null
set a5p=null
set n5p=null
set f5p=null
set T5p=null
set G5p=null
set h5p=null
set k5p=null
set x5p=null
set m5p=null
endfunction
function W6w takes nothing returns nothing
local integer v6w=GetResearched()
local player m6w
local trigger Q6w
if v6w==$52303156 then
set m6w=GetTriggerPlayer()
if GetPlayerTechCount(m6w,$52303156,true)==1 then
set Q6w=NG
call EnableTrigger(Q6w)
endif
endif
set m6w=null
set Q6w=null
endfunction
function W8S takes nothing returns nothing
local unit f8S=GetTriggerUnit()
local unit G8S=f8S
local integer R8S=GetUnitTypeId(G8S)
local unit g8S=f8S
local player T8S=GetOwningPlayer(g8S)
local player h8S=T8S
local integer Y8S=GetPlayerId(h8S)
local sound F8S
local trigger k8S
local trigger j8S
local trigger x8S
local trigger v8S
local trigger m8S
local trigger Q8S
if R8S==$6F303556 then
set F8S=lY
call StartSound(F8S)
set k8S=Wa
call EnableTrigger(k8S)
set r[Y8S]=$4F303439
endif
if R8S==$6F30354C then
set j8S=Xh
call EnableTrigger(j8S)
call SetPlayerTechResearched(Player(Y8S+4),$52303848,1)
endif
if R8S==$6F30354A then
set x8S=ud
call EnableTrigger(x8S)
call RemoveUnitFromStock(O[Y8S],A[Y8S])
call RemoveUnitFromStock(b[Y8S],A[Y8S])
call RemoveUnitFromStock(l[Y8S],A[Y8S])
set A[Y8S]=$6F30354B
call AddUnitToStock(O[Y8S],A[Y8S],1,3)
call AddUnitToStock(b[Y8S],A[Y8S],1,3)
call AddUnitToStock(l[Y8S],A[Y8S],1,3)
endif
if R8S==$6F303548 then
call RemoveUnitFromStock(O[Y8S],D[Y8S])
call RemoveUnitFromStock(b[Y8S],D[Y8S])
call RemoveUnitFromStock(l[Y8S],D[Y8S])
set D[Y8S]=$6F303549
call AddUnitToStock(O[Y8S],D[Y8S],1,3)
call AddUnitToStock(b[Y8S],D[Y8S],1,3)
call AddUnitToStock(l[Y8S],D[Y8S],1,3)
endif
if R8S==$6F303551 then
call RemoveUnitFromStock(O[Y8S],D[Y8S])
call RemoveUnitFromStock(b[Y8S],D[Y8S])
call RemoveUnitFromStock(l[Y8S],D[Y8S])
set D[Y8S]=$6F303552
call AddUnitToStock(O[Y8S],D[Y8S],1,3)
call AddUnitToStock(b[Y8S],D[Y8S],1,3)
call AddUnitToStock(l[Y8S],D[Y8S],1,3)
endif
if R8S==$6F303553 then
call RemoveUnitFromStock(O[Y8S],H[Y8S])
call RemoveUnitFromStock(b[Y8S],H[Y8S])
call RemoveUnitFromStock(l[Y8S],H[Y8S])
set H[Y8S]=$6F303554
call AddUnitToStock(O[Y8S],H[Y8S],1,3)
call AddUnitToStock(b[Y8S],H[Y8S],1,3)
call AddUnitToStock(l[Y8S],H[Y8S],1,3)
endif
if R8S==$6F303546 then
set J[Y8S]=$6F303547
endif
if R8S==$6F30354D then
set K[Y8S]=$6F30354E
set v8S=ah
call EnableTrigger(v8S)
endif
if R8S==$6F30354F then
set L[Y8S]=$6F303550
endif
if R8S==$6F303555 then
call SetPlayerTechResearched(T8S,$52303849,1)
call SetPlayerTechResearched(Player(Y8S+4),$52303849,1)
endif
if R8S==$6F303559 then
set m8S=ud
call EnableTrigger(m8S)
set Q8S=ah
call EnableTrigger(Q8S)
set Dp=f8S
endif
set f8S=null
set T8S=null
set G8S=null
set g8S=null
set h8S=null
set F8S=null
set k8S=null
set j8S=null
set x8S=null
set v8S=null
set m8S=null
set Q8S=null
endfunction
function SZy takes string pEy returns boolean
local trigger eEy
local playerunitevent qEy
local integer aEy
local trigger nEy
local boolexpr dEy
local trigger fEy
local trigger REy
local rect TEy
local region YEy
local trigger GEy
local boolexpr gEy
local trigger hEy
local trigger FEy
local rect kEy
local region jEy
local trigger xEy
local boolexpr vEy
local trigger mEy
local trigger QEy
local playerunitevent WEy
local integer EEy
local trigger ZEy
local boolexpr UEy
local trigger IEy
local trigger PEy
local playerunitevent AEy
local integer DEy
local trigger HEy
local boolexpr JEy
local trigger KEy
local trigger LEy
local playerunitevent XEy
local integer CEy
local trigger VEy
local boolexpr BEy
local trigger NEy
local trigger MEy
local playerunitevent wZy
local integer uZy
local trigger rZy
local boolexpr sZy
local trigger tZy
local trigger iZy
set aW[qW]=pEy
set qW=qW+1
set Ly=null
set Xy=CreateTrigger()
set My=CreateTrigger()
set wp=CreateTrigger()
set up=CreateTrigger()
set rp=CreateTrigger()
call CreateTrigger()
set sp=CreateTrigger()
set tp=CreateTrigger()
set ip=CreateTrigger()
set Sp=CreateTrigger()
set lp=kHw("when calling new_LinkedList in DragonForge, line 716")
call TriggerAddAction(My,S4)
set eEy=up
set qEy=EVENT_PLAYER_UNIT_DEATH
set aEy=0
loop
call TriggerRegisterPlayerUnitEvent(eEy,Player(aEy),qEy,null)
set aEy=aEy+1
exitwhen aEy==bj_MAX_PLAYER_SLOTS
endloop
set nEy=up
set dEy=Condition(c4)
call TriggerAddCondition(nEy,dEy)
set fEy=up
call DisableTrigger(fEy)
set REy=wp
set TEy=bj_mapInitialPlayableArea
set YEy=CreateRegion()
call RegionAddRect(YEy,TEy)
call TriggerRegisterEnterRegion(REy,YEy,null)
set GEy=wp
set gEy=Condition(o4)
call TriggerAddCondition(GEy,gEy)
set hEy=wp
call DisableTrigger(hEy)
set FEy=rp
set kEy=bj_mapInitialPlayableArea
set jEy=CreateRegion()
call RegionAddRect(jEy,kEy)
call TriggerRegisterEnterRegion(FEy,jEy,null)
set xEy=rp
set vEy=Condition(O4)
call TriggerAddCondition(xEy,vEy)
set mEy=rp
call DisableTrigger(mEy)
set QEy=sp
set WEy=EVENT_PLAYER_HERO_REVIVE_FINISH
set EEy=0
loop
call TriggerRegisterPlayerUnitEvent(QEy,Player(EEy),WEy,null)
set EEy=EEy+1
exitwhen EEy==bj_MAX_PLAYER_SLOTS
endloop
set ZEy=sp
set UEy=Condition(l4)
call TriggerAddCondition(ZEy,UEy)
set IEy=sp
call DisableTrigger(IEy)
set PEy=tp
set AEy=EVENT_PLAYER_UNIT_SPELL_CAST
set DEy=0
loop
call TriggerRegisterPlayerUnitEvent(PEy,Player(DEy),AEy,null)
set DEy=DEy+1
exitwhen DEy==bj_MAX_PLAYER_SLOTS
endloop
set HEy=tp
set JEy=Condition(b4)
call TriggerAddCondition(HEy,JEy)
set KEy=tp
call DisableTrigger(KEy)
set LEy=ip
set XEy=EVENT_PLAYER_UNIT_DEATH
set CEy=0
loop
call TriggerRegisterPlayerUnitEvent(LEy,Player(CEy),XEy,null)
set CEy=CEy+1
exitwhen CEy==bj_MAX_PLAYER_SLOTS
endloop
set VEy=ip
set BEy=Condition(y4)
call TriggerAddCondition(VEy,BEy)
set NEy=ip
call DisableTrigger(NEy)
set MEy=Sp
set wZy=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set uZy=0
loop
call TriggerRegisterPlayerUnitEvent(MEy,Player(uZy),wZy,null)
set uZy=uZy+1
exitwhen uZy==bj_MAX_PLAYER_SLOTS
endloop
set rZy=Sp
set sZy=Condition(p4)
call TriggerAddCondition(rZy,sZy)
set tZy=Sp
call DisableTrigger(tZy)
set iZy=Xy
call DisableTrigger(iZy)
call TriggerRegisterTimerEvent(Xy,1.,true)
call TriggerAddAction(Xy,e4)
set qW=qW-1
set eEy=null
set qEy=null
set nEy=null
set dEy=null
set fEy=null
set REy=null
set TEy=null
set YEy=null
set GEy=null
set gEy=null
set hEy=null
set FEy=null
set kEy=null
set jEy=null
set xEy=null
set vEy=null
set mEy=null
set QEy=null
set WEy=null
set ZEy=null
set UEy=null
set IEy=null
set PEy=null
set AEy=null
set HEy=null
set JEy=null
set KEy=null
set LEy=null
set XEy=null
set VEy=null
set BEy=null
set NEy=null
set MEy=null
set wZy=null
set rZy=null
set sZy=null
set tZy=null
set iZy=null
return true
endfunction
function W8s takes nothing returns boolean
set qW=0
return SZy("via function reference DragonForge, line 1")
endfunction
function W9s takes nothing returns nothing
local unit r9s=GetKillingUnit()
local unit O9s=r9s
local integer s9s=GetPlayerTechCount(GetOwningPlayer(O9s),$5230314F,true)
local unit t9s
local group i9s
local filterfunc S9s
local unit c9s
local group o9s
local unit l9s
local unittype b9s
local unit y9s
local unit p9s
local group e9s
local group q9s
local unit a9s
local unit n9s
local real d9s
local unit f9s
local unitstate R9s
local real T9s
local unit Y9s
local unitstate G9s
local widget g9s
local string h9s
local string F9s
local group k9s
local boolexpr j9s
local group x9s
local real v9s
local unit m9s
local unitstate Q9s
if s9s>0 then
set t9s=GetDyingUnit()
set l9s=t9s
set b9s=UNIT_TYPE_STRUCTURE
if IsUnitType(l9s,b9s)==false then
set i9s=CreateGroup()
set S9s=Filter(F4)
set x9s=i9s
set y9s=r9s
set v9s=GetUnitX(y9s)
set p9s=r9s
call GroupEnumUnitsInRange(x9s,v9s,GetUnitY(p9s),450.,S9s)
set o9s=i9s
loop
set e9s=o9s
exitwhen not (FirstOfGroup(e9s)!=null)
set q9s=o9s
set a9s=FirstOfGroup(q9s)
call GroupRemoveUnit(q9s,a9s)
set c9s=a9s
set n9s=c9s
set d9s=5.*s9s
set f9s=n9s
set R9s=UNIT_STATE_MANA
set T9s=d9s
set m9s=f9s
set Q9s=R9s
set Y9s=f9s
set G9s=R9s
call SetUnitState(m9s,Q9s,GetUnitState(Y9s,G9s)+T9s)
set g9s=c9s
set h9s="Abilities\\Spells\\Other\\ANrl\\ANrlTarget.mdl"
set F9s="origin"
call DestroyEffect(AddSpecialEffectTarget(h9s,g9s,F9s))
endloop
set k9s=i9s
call DestroyGroup(k9s)
set j9s=S9s
call DestroyBoolExpr(j9s)
endif
endif
set r9s=null
set t9s=null
set i9s=null
set S9s=null
set c9s=null
set o9s=null
set O9s=null
set l9s=null
set b9s=null
set y9s=null
set p9s=null
set e9s=null
set q9s=null
set a9s=null
set n9s=null
set f9s=null
set R9s=null
set Y9s=null
set G9s=null
set g9s=null
set k9s=null
set j9s=null
set x9s=null
set m9s=null
set Q9s=null
endfunction
function WCe takes nothing returns boolean
return true
endfunction
function WDp takes nothing returns boolean
return true
endfunction
function WFc takes nothing returns nothing
set qW=0
call Dbu("via function reference Expeditions, line 1166")
endfunction
function WFt takes nothing returns boolean
return true
endfunction
function GBS takes nothing returns boolean
local unit RBS=GetTriggerUnit()
local integer TBS=bj_forLoopAIndex
local boolean YBS=GetItemTypeId(UnitItemInSlot(RBS,TBS-1))==Os[5]
set RBS=null
return YBS
endfunction
function WHu takes nothing returns nothing
local integer THu
local player YHu
local playerstate GHu
local player gHu
local playerstate hHu
local integer FHu
local player kHu
local playerstate jHu
local integer xHu
local player vHu
local playerstate mHu
local integer QHu
set ls[4]=0
set Os[5]=GetItemTypeId(GetManipulatedItem())
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if GBS() then
set ls[4]=ls[4]+1
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
if ls[4]>1 then
call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(),Os[5]))
set THu=400
set YHu=GetOwningPlayer(GetTriggerUnit())
set GHu=PLAYER_STATE_RESOURCE_GOLD
if THu>0 then
if GHu==PLAYER_STATE_RESOURCE_GOLD then
set gHu=YHu
set hHu=PLAYER_STATE_GOLD_GATHERED
set FHu=THu
call SetPlayerState(gHu,hHu,GetPlayerState(gHu,hHu)+FHu)
elseif GHu==PLAYER_STATE_RESOURCE_LUMBER then
set kHu=YHu
set jHu=PLAYER_STATE_LUMBER_GATHERED
set xHu=THu
call SetPlayerState(kHu,jHu,GetPlayerState(kHu,jHu)+xHu)
endif
endif
set vHu=YHu
set mHu=GHu
set QHu=THu
call SetPlayerState(vHu,mHu,GetPlayerState(vHu,mHu)+QHu)
call DisplayTimedTextToPlayer(Player(GetPlayerId(GetOwningPlayer(GetTriggerUnit()))-4),0.,0.,10.,"You got 400 gold for Lv4 item!")
else
set ls[4]=0
set Os[5]=GetItemTypeId(null)
endif
set YHu=null
set GHu=null
set gHu=null
set hHu=null
set kHu=null
set jHu=null
set vHu=null
set mHu=null
endfunction
function WIw takes nothing returns nothing
local integer uIw=GetResearched()
local unit rIw=GetTriggerUnit()
local unit tIw=rIw
local player sIw=GetOwningPlayer(tIw)
local unit iIw
local real SIw
local unit cIw
local unitstate oIw
local real OIw
local unit lIw
local unitstate bIw
local player yIw
local player pIw
local unit eIw
local real qIw
local unit aIw
local unitstate nIw
local real dIw
local unit fIw
local unitstate RIw
local player TIw
local player YIw
local unit GIw
local integer gIw
local player hIw
local unit FIw
local integer kIw
local player jIw
local unit xIw
local unitstate vIw
local unit mIw
local unitstate QIw
if uIw==$52303236 then
set iIw=rIw
set SIw=200.
set cIw=iIw
set oIw=UNIT_STATE_MANA
set OIw=SIw
set xIw=cIw
set vIw=oIw
set lIw=cIw
set bIw=oIw
call SetUnitState(xIw,vIw,GetUnitState(lIw,bIw)+OIw)
set yIw=sIw
set pIw=sIw
set rs[GetPlayerId(yIw)]=rs[GetPlayerId(pIw)]-1
endif
if uIw==$52303632 then
set eIw=rIw
set qIw=100.
set aIw=eIw
set nIw=UNIT_STATE_MANA
set dIw=qIw
set mIw=aIw
set QIw=nIw
set fIw=aIw
set RIw=nIw
call SetUnitState(mIw,QIw,GetUnitState(fIw,RIw)+dIw)
set TIw=sIw
set YIw=sIw
set rs[GetPlayerId(TIw)]=rs[GetPlayerId(YIw)]-1
endif
if uIw==$52303237 then
call FogModifierStart(CreateFogModifierRect(sIw,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
if ju==true then
set GIw=rIw
set gIw=$41323645
call UnitAddAbility(GIw,gIw)
set hIw=sIw
set QY[GetPlayerId(hIw)]=$41323645
else
set FIw=rIw
set kIw=$41304F41
call UnitAddAbility(FIw,kIw)
set jIw=sIw
set mY[GetPlayerId(jIw)]=$41304F41
endif
endif
set rIw=null
set sIw=null
set tIw=null
set iIw=null
set cIw=null
set oIw=null
set lIw=null
set bIw=null
set yIw=null
set pIw=null
set eIw=null
set aIw=null
set nIw=null
set fIw=null
set RIw=null
set TIw=null
set YIw=null
set GIw=null
set hIw=null
set FIw=null
set jIw=null
set xIw=null
set vIw=null
set mIw=null
set QIw=null
endfunction
function WIy takes nothing returns boolean
return true
endfunction
function WKc takes nothing returns nothing
local unit oKc=GetEnteringUnit()
local unit bKc=oKc
local integer OKc=GetUnitTypeId(bKc)
local integer lKc
local unit yKc
local unit pKc
local integer eKc
local unit qKc
local integer aKc
local unit nKc
local integer dKc
local unit fKc
local integer RKc
local unit TKc
local integer YKc
local unit GKc
local integer gKc
local unit hKc
local integer FKc
local unit kKc
local integer jKc
local unit xKc
local integer vKc
local unit mKc
local integer QKc
if OKc==$686D7474 or OKc==$68626F74 or OKc==$68677972 or OKc==$6E777331 then
set yKc=oKc
set lKc=GetPlayerTechCount(GetOwningPlayer(yKc),$52686673,true)
if lKc==1 then
set pKc=oKc
set eKc=$41303559
call UnitAddAbility(pKc,eKc)
elseif lKc==2 then
set qKc=oKc
set aKc=$41303559
call UnitAddAbility(qKc,aKc)
set nKc=oKc
set dKc=$41303737
call UnitAddAbility(nKc,dKc)
elseif lKc==3 then
set fKc=oKc
set RKc=$41303559
call UnitAddAbility(fKc,RKc)
set TKc=oKc
set YKc=$41303737
call UnitAddAbility(TKc,YKc)
set GKc=oKc
set gKc=$4130345A
call UnitAddAbility(GKc,gKc)
else
set hKc=oKc
set FKc=$41303559
call UnitAddAbility(hKc,FKc)
set kKc=oKc
set jKc=$41303737
call UnitAddAbility(kKc,jKc)
set xKc=oKc
set vKc=$4130345A
call UnitAddAbility(xKc,vKc)
set mKc=oKc
set QKc=$41303052
call UnitAddAbility(mKc,QKc)
endif
endif
set oKc=null
set bKc=null
set yKc=null
set pKc=null
set qKc=null
set nKc=null
set fKc=null
set TKc=null
set GKc=null
set hKc=null
set kKc=null
set xKc=null
set mKc=null
endfunction
function WMe takes nothing returns boolean
local trigger xMe
local trigger vMe
local playerunitevent mMe
local integer QMe
set cn=CreateTrigger()
set xMe=cn
call DisableTrigger(xMe)
set vMe=cn
set mMe=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QMe=0
loop
call TriggerRegisterPlayerUnitEvent(vMe,Player(QMe),mMe,null)
set QMe=QMe+1
exitwhen QMe==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(cn,A5)
set xMe=null
set vMe=null
set mMe=null
return true
endfunction
function WNu takes nothing returns boolean
set cq=CreateTrigger()
call CreateTrigger()
return true
endfunction
function WPl takes nothing returns nothing
local unit nPl=GetAttacker()
local unit gPl=nPl
local group dPl
local real fPl
local real RPl
local filterfunc TPl
local unit YPl
local group GPl
local unit hPl
local unit FPl
local unit kPl
local group jPl
local group xPl
local unit vPl
local group mPl
local boolexpr QPl
if GetUnitTypeId(gPl)==$78303264 then
if GetRandomInt(1,100)<=20 then
set hPl=nPl
set vG=GetOwningPlayer(hPl)
set dPl=CreateGroup()
set FPl=nPl
set fPl=GetUnitX(FPl)
set kPl=nPl
set RPl=GetUnitY(kPl)
call SetUnitAnimation(nPl,"Attack 2")
set TPl=Filter(wuw)
call GroupEnumUnitsInRange(dPl,fPl,RPl,175.,TPl)
set GPl=dPl
loop
set jPl=GPl
exitwhen not (FirstOfGroup(jPl)!=null)
set xPl=GPl
set vPl=FirstOfGroup(xPl)
call GroupRemoveUnit(xPl,vPl)
set YPl=vPl
call UnitDamageTarget(nPl,YPl,20.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
call DestroyEffect(AddSpecialEffect("Ephemeral Slash Purple.mdl",fPl,RPl))
set mPl=dPl
call DestroyGroup(mPl)
set QPl=TPl
call DestroyBoolExpr(QPl)
set vG=null
endif
endif
set nPl=null
set dPl=null
set TPl=null
set YPl=null
set GPl=null
set gPl=null
set hPl=null
set FPl=null
set kPl=null
set jPl=null
set xPl=null
set vPl=null
set mPl=null
set QPl=null
endfunction
function WQO takes nothing returns nothing
local unit LmO=GetSpellAbilityUnit()
local unit MmO=LmO
local integer wQO=$42303535
local group XmO
local filterfunc CmO
local unit VmO
local group BmO
local unit NmO
local unit uQO
local unittype rQO
local unit sQO
local unittype tQO
local unit iQO
local unit SQO
local group cQO
local group oQO
local unit OQO
local unit lQO
local unit bQO
local unit yQO
local unit pQO
local real eQO
local unit qQO
local integer aQO
local unit nQO
local integer dQO
local integer fQO
local unit RQO
local integer TQO
local unit YQO
local string GQO
local widget gQO
local group hQO
local boolexpr FQO
local boolean kQO
local boolean jQO
local group xQO
local real vQO
local player mQO
local real QQO
if GetUnitAbilityLevel(MmO,wQO)>0==true then
set uQO=LmO
set rQO=UNIT_TYPE_MECHANICAL
set kQO=IsUnitType(uQO,rQO)==false
else
set kQO=false
endif
if kQO then
set sQO=LmO
set tQO=UNIT_TYPE_STRUCTURE
set jQO=IsUnitType(sQO,tQO)==false
else
set jQO=false
endif
if jQO then
set XmO=CreateGroup()
set CmO=Filter(S7)
set xQO=XmO
set iQO=LmO
set vQO=GetUnitX(iQO)
set SQO=LmO
call GroupEnumUnitsInRange(xQO,vQO,GetUnitY(SQO),1000.,CmO)
set BmO=XmO
loop
set cQO=BmO
exitwhen not (FirstOfGroup(cQO)!=null)
set oQO=BmO
set OQO=FirstOfGroup(oQO)
call GroupRemoveUnit(oQO,OQO)
set VmO=OQO
set lQO=VmO
set mQO=GetOwningPlayer(lQO)
set bQO=VmO
set QQO=GetUnitX(bQO)
set yQO=VmO
set NmO=CreateUnit(mQO,$75303030,QQO,GetUnitY(yQO),0.)
set pQO=NmO
set eQO=3.
call UnitApplyTimedLife(pQO,$42544C46,eQO)
set qQO=NmO
set aQO=$4130544F
call UnitAddAbility(qQO,aQO)
set nQO=NmO
set dQO=$4130544F
set RQO=VmO
set TQO=$4130544E
set fQO=GetUnitAbilityLevel(RQO,TQO)
call SetUnitAbilityLevel(nQO,dQO,fQO)
set YQO=NmO
set GQO="healingwave"
set gQO=VmO
call IssueTargetOrder(YQO,GQO,gQO)
endloop
set hQO=XmO
call DestroyGroup(hQO)
set FQO=CmO
call DestroyBoolExpr(FQO)
endif
set LmO=null
set XmO=null
set CmO=null
set VmO=null
set BmO=null
set NmO=null
set MmO=null
set uQO=null
set rQO=null
set sQO=null
set tQO=null
set iQO=null
set SQO=null
set cQO=null
set oQO=null
set OQO=null
set lQO=null
set bQO=null
set yQO=null
set pQO=null
set qQO=null
set nQO=null
set RQO=null
set YQO=null
set gQO=null
set hQO=null
set FQO=null
set xQO=null
set mQO=null
endfunction
function WQt takes nothing returns boolean
local trigger kQt
local trigger jQt
local playerunitevent xQt
local trigger vQt
local playerunitevent mQt
local integer QQt
set DO=CreateTrigger()
set kQt=DO
call DisableTrigger(kQt)
set jQt=DO
set xQt=EVENT_PLAYER_UNIT_ATTACKED
set vQt=jQt
set mQt=xQt
set QQt=0
loop
call TriggerRegisterPlayerUnitEvent(vQt,Player(QQt),mQt,null)
set QQt=QQt+1
exitwhen QQt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(DO,FM)
set kQt=null
set jQt=null
set xQt=null
set vQt=null
set mQt=null
return true
endfunction
function WSw takes nothing returns boolean
return true
endfunction
function WTw takes nothing returns boolean
return true
endfunction
function WVr takes nothing returns boolean
local integer QVr=GetSpellAbilityId()
return QVr==$41313930 or QVr==$41313931 or QVr==$41313932 or QVr==$41313933 or QVr==$41313934 or QVr==$41313935 or QVr==$41313936 or QVr==$41313937 or QVr==$41313938 or QVr==$41313939 or QVr==$41313941 or QVr==$41313942 or QVr==$41313943 or QVr==$41313944 or QVr==$41313945 or QVr==$41313946 or QVr==$41313947 or QVr==$41313948 or QVr==$41313949 or QVr==$4131394A
endfunction
function WWi takes nothing returns nothing
local integer jWi=GetResearched()
local player xWi
local integer vWi
local player mWi
local trigger QWi
if jWi==$524D316D then
set xWi=GetTriggerPlayer()
set vWi=$524D316D
set mWi=xWi
if GetPlayerTechCount(mWi,vWi,true)==1 then
set QWi=Gy
call EnableTrigger(QWi)
endif
endif
set xWi=null
set mWi=null
set QWi=null
endfunction
function WYy takes nothing returns nothing
local unit WTy=GetTriggerUnit()
local unit ZTy=WTy
local player ETy=GetOwningPlayer(ZTy)
local unit UTy
local string ITy
local real PTy
local real ATy
local unit DTy
local unittype HTy
local unit JTy
local string KTy
local real LTy
local real XTy
local unit CTy
local unittype VTy
local unit BTy
local string NTy
local real MTy
local real wYy
local unit uYy
local unittype rYy
local unit sYy
local string tYy
local real iYy
local real SYy
local unit cYy
local unittype oYy
local unit OYy
local string lYy
local real bYy
local real yYy
local unit pYy
local unittype eYy
local unit qYy
local string aYy
local real nYy
local real dYy
local unit fYy
local unittype RYy
local real TYy
local real YYy
local real GYy
local real gYy
local real hYy
local real FYy
local real kYy
local real jYy
local real xYy
local real vYy
local real mYy
local real QYy
if ETy==du then
if Ew[3]==true then
set UTy=WTy
set ITy="attack"
set TYy=Qw[48]
set YYy=Ww[48]
set PTy=TYy
set ATy=YYy
call IssuePointOrder(UTy,ITy,PTy,ATy)
set DTy=WTy
set HTy=UNIT_TYPE_HERO
if IsUnitType(DTy,HTy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,48)
endif
else
set JTy=WTy
set KTy="attack"
set GYy=Qw[56]
set gYy=Ww[56]
set LTy=GYy
set XTy=gYy
call IssuePointOrder(JTy,KTy,LTy,XTy)
set CTy=WTy
set VTy=UNIT_TYPE_HERO
if IsUnitType(CTy,VTy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,56)
endif
endif
endif
if ETy==nu then
set BTy=WTy
set NTy="attack"
set hYy=Qw[56]
set FYy=Ww[56]
set MTy=hYy
set wYy=FYy
call IssuePointOrder(BTy,NTy,MTy,wYy)
set uYy=WTy
set rYy=UNIT_TYPE_HERO
if IsUnitType(uYy,rYy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,56)
endif
endif
if ETy==fu then
if Ew[1]==true then
set sYy=WTy
set tYy="attack"
set kYy=Qw[56]
set jYy=Ww[56]
set iYy=kYy
set SYy=jYy
call IssuePointOrder(sYy,tYy,iYy,SYy)
set cYy=WTy
set oYy=UNIT_TYPE_HERO
if IsUnitType(cYy,oYy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,56)
endif
else
set OYy=WTy
set lYy="attack"
set xYy=Qw[48]
set vYy=Ww[48]
set bYy=xYy
set yYy=vYy
call IssuePointOrder(OYy,lYy,bYy,yYy)
set pYy=WTy
set eYy=UNIT_TYPE_HERO
if IsUnitType(pYy,eYy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,48)
endif
endif
endif
if ETy==Ru then
set qYy=WTy
set aYy="attack"
set mYy=Qw[48]
set QYy=Ww[48]
set nYy=mYy
set dYy=QYy
call IssuePointOrder(qYy,aYy,nYy,dYy)
set fYy=WTy
set RYy=UNIT_TYPE_HERO
if IsUnitType(fYy,RYy) then
call SaveInteger(qu,GetHandleId(WTy),$6D6F7665,48)
endif
endif
set WTy=null
set ETy=null
set ZTy=null
set UTy=null
set DTy=null
set HTy=null
set JTy=null
set CTy=null
set VTy=null
set BTy=null
set uYy=null
set rYy=null
set sYy=null
set cYy=null
set oYy=null
set OYy=null
set pYy=null
set eYy=null
set qYy=null
set fYy=null
set RYy=null
endfunction
function W_l takes nothing returns boolean
local trigger j_l=CreateTrigger()
local trigger x_l=j_l
local boolexpr v_l=Condition(kN)
local trigger m_l
local dialog Q_l
call TriggerAddCondition(x_l,v_l)
set m_l=j_l
set Q_l=sr
call TriggerRegisterDialogEvent(m_l,Q_l)
set j_l=null
set x_l=null
set v_l=null
set m_l=null
set Q_l=null
return true
endfunction
function Wao takes nothing returns boolean
local trigger hao
local trigger Fao
local playerunitevent kao
local trigger jao
local playerunitevent xao
local integer vao
local trigger mao
local code Qao
set XY=CreateTrigger()
set hao=XY
call DisableTrigger(hao)
set Fao=XY
set kao=EVENT_PLAYER_UNIT_ATTACKED
set jao=Fao
set xao=kao
set vao=0
loop
call TriggerRegisterPlayerUnitEvent(jao,Player(vao),xao,null)
set vao=vao+1
exitwhen vao==bj_MAX_PLAYER_SLOTS
endloop
set mao=XY
set Qao=lww_2753
call TriggerAddAction(mao,Qao)
set hao=null
set Fao=null
set kao=null
set jao=null
set xao=null
set mao=null
return true
endfunction
function Wau takes nothing returns boolean
return true
endfunction
function Wdl takes nothing returns nothing
local unit adl=GetEnteringUnit()
local unit ddl=adl
local integer ndl=GetUnitTypeId(ddl)
local unit fdl
local integer Rdl
local unit Tdl
local integer Ydl
local unit Gdl
local integer gdl
local unit hdl
local integer Fdl
local unit kdl
local integer jdl
local unit xdl
local integer vdl
local unit mdl
local integer Qdl
if ndl==$68666F6F or ndl==$6E676E61 or ndl==$6E656D69 or ndl==$686B6E69 then
set fdl=adl
set Rdl=$41304A31
call UnitAddAbility(fdl,Rdl)
endif
if ndl==$68666F6F then
set Tdl=adl
set Ydl=$41304242
call UnitAddAbility(Tdl,Ydl)
set Gdl=adl
set gdl=$4130494C
call UnitAddAbility(Gdl,gdl)
endif
if ndl==$6E676E61 then
set hdl=adl
set Fdl=$41304242
call UnitAddAbility(hdl,Fdl)
endif
if ndl==$6E656D69 then
set kdl=adl
set jdl=$41304243
call UnitAddAbility(kdl,jdl)
endif
if ndl==$686B6E69 then
set xdl=adl
set vdl=$41304241
call UnitAddAbility(xdl,vdl)
set mdl=adl
set Qdl=$4130494F
call UnitAddAbility(mdl,Qdl)
endif
set adl=null
set ddl=null
set fdl=null
set Tdl=null
set Gdl=null
set hdl=null
set kdl=null
set xdl=null
set mdl=null
endfunction
function Wee takes nothing returns boolean
local trigger hee
local trigger Fee
local playerunitevent kee
local trigger jee
local playerunitevent xee
local integer vee
local trigger mee
local code Qee
set Sf=CreateTrigger()
set hee=Sf
call DisableTrigger(hee)
set Fee=Sf
set kee=EVENT_PLAYER_UNIT_ATTACKED
set jee=Fee
set xee=kee
set vee=0
loop
call TriggerRegisterPlayerUnitEvent(jee,Player(vee),xee,null)
set vee=vee+1
exitwhen vee==bj_MAX_PLAYER_SLOTS
endloop
set mee=Sf
set Qee=b8
call TriggerAddAction(mee,Qee)
set hee=null
set Fee=null
set kee=null
set jee=null
set xee=null
set mee=null
return true
endfunction
function Wgp takes nothing returns nothing
local unit OGp=GetTriggerUnit()
local unit bGp=OGp
local player lGp=GetOwningPlayer(bGp)
local unit yGp
local string pGp
local real eGp
local real qGp
local unit aGp
local unittype nGp
local unit dGp
local string fGp
local real RGp
local real TGp
local unit YGp
local unittype GGp
local unit gGp
local string hGp
local real FGp
local real kGp
local unit jGp
local unittype xGp
local unit vGp
local string mGp
local real QGp
local real WGp
local unit EGp
local unittype ZGp
local unit UGp
local string IGp
local real PGp
local real AGp
local unit DGp
local unittype HGp
local unit JGp
local string KGp
local real LGp
local real XGp
local unit CGp
local unittype VGp
local unit BGp
local string NGp
local real MGp
local real wgp
local unit ugp
local unittype rgp
local unit sgp
local string tgp
local real igp
local real Sgp
local unit cgp
local unittype ogp
local unit Ogp
local string lgp
local real bgp
local real ygp
local unit pgp
local unittype egp
local real qgp
local real agp
local real ngp
local real dgp
local real fgp
local real Rgp
local real Tgp
local real Ygp
local real Ggp
local real ggp
local real hgp
local real Fgp
local real kgp
local real jgp
local real xgp
local real vgp
local real mgp
local real Qgp
if lGp==Ru then
if Ew[2]==false then
set yGp=OGp
set pGp="attack"
set qgp=Qw[32]
set agp=Ww[32]
set eGp=qgp
set qGp=agp
call IssuePointOrder(yGp,pGp,eGp,qGp)
set aGp=OGp
set nGp=UNIT_TYPE_HERO
if IsUnitType(aGp,nGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,32)
endif
else
set dGp=OGp
set fGp="attack"
set ngp=Qw[61]
set dgp=Ww[61]
set RGp=ngp
set TGp=dgp
call IssuePointOrder(dGp,fGp,RGp,TGp)
set YGp=OGp
set GGp=UNIT_TYPE_HERO
if IsUnitType(YGp,GGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,61)
endif
endif
endif
if lGp==fu then
set gGp=OGp
set hGp="attack"
set fgp=Qw[61]
set Rgp=Ww[61]
set FGp=fgp
set kGp=Rgp
call IssuePointOrder(gGp,hGp,FGp,kGp)
set jGp=OGp
set xGp=UNIT_TYPE_HERO
if IsUnitType(jGp,xGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,61)
endif
endif
if lGp==nu then
if Ew[0]==false then
set vGp=OGp
set mGp="attack"
set Tgp=Qw[38]
set Ygp=Ww[38]
set QGp=Tgp
set WGp=Ygp
call IssuePointOrder(vGp,mGp,QGp,WGp)
set EGp=OGp
set ZGp=UNIT_TYPE_HERO
if IsUnitType(EGp,ZGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,38)
endif
elseif Ew[3]==false then
set UGp=OGp
set IGp="attack"
set Ggp=Qw[47]
set ggp=Ww[47]
set PGp=Ggp
set AGp=ggp
call IssuePointOrder(UGp,IGp,PGp,AGp)
set DGp=OGp
set HGp=UNIT_TYPE_HERO
if IsUnitType(DGp,HGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,47)
endif
elseif Ew[2]==false then
set JGp=OGp
set KGp="attack"
set hgp=Qw[32]
set Fgp=Ww[32]
set LGp=hgp
set XGp=Fgp
call IssuePointOrder(JGp,KGp,LGp,XGp)
set CGp=OGp
set VGp=UNIT_TYPE_HERO
if IsUnitType(CGp,VGp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,32)
endif
endif
endif
if lGp==du then
if Ew[1]==false then
set BGp=OGp
set NGp="attack"
set kgp=Qw[41]
set jgp=Ww[41]
set MGp=kgp
set wgp=jgp
call IssuePointOrder(BGp,NGp,MGp,wgp)
set ugp=OGp
set rgp=UNIT_TYPE_HERO
if IsUnitType(ugp,rgp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,41)
endif
elseif Ew[2]==false then
set sgp=OGp
set tgp="attack"
set xgp=Qw[32]
set vgp=Ww[32]
set igp=xgp
set Sgp=vgp
call IssuePointOrder(sgp,tgp,igp,Sgp)
set cgp=OGp
set ogp=UNIT_TYPE_HERO
if IsUnitType(cgp,ogp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,38)
endif
elseif Ew[3]==false then
set Ogp=OGp
set lgp="attack"
set mgp=Qw[47]
set Qgp=Ww[47]
set bgp=mgp
set ygp=Qgp
call IssuePointOrder(Ogp,lgp,bgp,ygp)
set pgp=OGp
set egp=UNIT_TYPE_HERO
if IsUnitType(pgp,egp) then
call SaveInteger(qu,GetHandleId(OGp),$6D6F7665,47)
endif
endif
endif
set OGp=null
set lGp=null
set bGp=null
set yGp=null
set aGp=null
set nGp=null
set dGp=null
set YGp=null
set GGp=null
set gGp=null
set jGp=null
set xGp=null
set vGp=null
set EGp=null
set ZGp=null
set UGp=null
set DGp=null
set HGp=null
set JGp=null
set CGp=null
set VGp=null
set BGp=null
set ugp=null
set rgp=null
set sgp=null
set cgp=null
set ogp=null
set Ogp=null
set pgp=null
set egp=null
endfunction
function Wkl takes nothing returns boolean
return true
endfunction
function WlS takes nothing returns boolean
return true
endfunction
function Wle takes nothing returns boolean
return true
endfunction
function Wlu takes nothing returns boolean
return true
endfunction
function M6l takes string I6l returns nothing
local unit P6l
local integer A6l
local unit D6l
local unit H6l
local unit J6l
local integer K6l
local string L6l
local integer X6l
local real C6l
local integer V6l
local string B6l
local integer N6l
set aW[qW]=I6l
set qW=qW+1
set P6l=GetEventDamageSource()
set D6l=P6l
if GetUnitTypeId(D6l)==$6E736B6D then
set N6l=GetRandomInt(1,100)
set H6l=P6l
if N6l<=10+10*GetPlayerTechCount(GetOwningPlayer(H6l),$5268666C,true) then
set J6l=P6l
set K6l=$41313559
call UnitAddAbility(J6l,K6l)
set L6l="when calling alloc_CallbackSingle_doAfter_Marksman in Marksman, line 102"
set aW[qW]=L6l
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set X6l=fF
set RF[X6l]=729
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Marksman.","when calling error in Marksman, line 102")
set X6l=0
endif
else
set dF=dF-1
set X6l=nF[dF]
set RF[X6l]=729
endif
set qW=qW-1
set A6l=X6l
set Ym[A6l]=P6l
set C6l=2.
set V6l=A6l
set B6l="when calling doAfter in Marksman, line 102"
set aW[qW]=B6l
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),C6l,V6l,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set P6l=null
set D6l=null
set H6l=null
set J6l=null
endfunction
function WpS takes nothing returns nothing
set qW=0
call M6l("via function reference Marksman, line 107")
endfunction
function P6S takes nothing returns boolean
local unit Z6S=GetTriggerUnit()
local integer U6S=bj_forLoopAIndex
local boolean I6S=GetItemTypeId(UnitItemInSlot(Z6S,U6S-1))==Os[3]
set Z6S=null
return I6S
endfunction
function Wql takes nothing returns nothing
local integer Tql
local player Yql
local playerstate Gql
local player gql
local playerstate hql
local integer Fql
local player kql
local playerstate jql
local integer xql
local player vql
local playerstate mql
local integer Qql
set ls[2]=0
set Os[3]=GetItemTypeId(GetManipulatedItem())
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if P6S() then
set ls[2]=ls[2]+1
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
if ls[2]>1 then
call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(),Os[3]))
set Tql=200
set Yql=GetOwningPlayer(GetTriggerUnit())
set Gql=PLAYER_STATE_RESOURCE_GOLD
if Tql>0 then
if Gql==PLAYER_STATE_RESOURCE_GOLD then
set gql=Yql
set hql=PLAYER_STATE_GOLD_GATHERED
set Fql=Tql
call SetPlayerState(gql,hql,GetPlayerState(gql,hql)+Fql)
elseif Gql==PLAYER_STATE_RESOURCE_LUMBER then
set kql=Yql
set jql=PLAYER_STATE_LUMBER_GATHERED
set xql=Tql
call SetPlayerState(kql,jql,GetPlayerState(kql,jql)+xql)
endif
endif
set vql=Yql
set mql=Gql
set Qql=Tql
call SetPlayerState(vql,mql,GetPlayerState(vql,mql)+Qql)
call DisplayTimedTextToPlayer(Player(GetPlayerId(GetOwningPlayer(GetTriggerUnit()))-4),0.,0.,10.,"You got 200 gold for Lv2 item!")
else
set ls[2]=0
set Os[3]=GetItemTypeId(null)
endif
set Yql=null
set Gql=null
set gql=null
set hql=null
set kql=null
set jql=null
set vql=null
set mql=null
endfunction
function Wrl takes nothing returns boolean
local playerunitevent mrl=EVENT_PLAYER_UNIT_SPELL_CAST
local code Qrl=s1
call emO(mrl,null,Qrl,null)
set mrl=null
return true
endfunction
function Wrt takes nothing returns nothing
local unit yrt=GetKillingUnit()
local unit drt=yrt
local unit prt
local group ert
local filterfunc qrt
local unit art
local group nrt
local unit frt
local unittype Rrt
local unit Trt
local unit Yrt
local group Grt
local group grt
local unit hrt
local unit Frt
local unit krt
local group jrt
local boolexpr xrt
local group vrt
local real mrt
local real Qrt
if GetUnitTypeId(drt)==$55303046 and GetHeroLevel(yrt)>=4 then
set prt=GetDyingUnit()
set frt=prt
set Rrt=UNIT_TYPE_STRUCTURE
if IsUnitType(frt,Rrt)==false and GetRandomInt(1,100)<=30 then
set ert=CreateGroup()
set qrt=Filter(J1)
set vrt=ert
set Trt=prt
set mrt=GetUnitX(Trt)
set Yrt=prt
call GroupEnumUnitsInRange(vrt,mrt,GetUnitY(Yrt),150.,qrt)
set nrt=ert
loop
set Grt=nrt
exitwhen not (FirstOfGroup(Grt)!=null)
set grt=nrt
set hrt=FirstOfGroup(grt)
call GroupRemoveUnit(grt,hrt)
set art=hrt
call UnitDamageTarget(yrt,art,40.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set Frt=prt
set Qrt=GetUnitX(Frt)
set krt=prt
call DestroyEffect(AddSpecialEffect("Flamestrike Blood I.mdl",Qrt,GetUnitY(krt)))
set jrt=ert
call DestroyGroup(jrt)
set xrt=qrt
call DestroyBoolExpr(xrt)
endif
endif
set yrt=null
set prt=null
set ert=null
set qrt=null
set art=null
set nrt=null
set drt=null
set frt=null
set Rrt=null
set Trt=null
set Yrt=null
set Grt=null
set grt=null
set hrt=null
set Frt=null
set krt=null
set jrt=null
set xrt=null
set vrt=null
endfunction
function Wtb takes nothing returns nothing
local unit Wsb=GetTriggerUnit()
local unit Zsb=Wsb
local player Esb=GetOwningPlayer(Zsb)
local unit Usb
local string Isb
local real Psb
local real Asb
local unit Dsb
local unittype Hsb
local unit Jsb
local string Ksb
local real Lsb
local real Xsb
local unit Csb
local unittype Vsb
local unit Bsb
local string Nsb
local real Msb
local real wtb
local unit utb
local unittype rtb
local unit stb
local string ttb
local real itb
local real Stb
local unit ctb
local unittype otb
local unit Otb
local string ltb
local real btb
local real ytb
local unit ptb
local unittype etb
local unit qtb
local string atb
local real ntb
local real dtb
local unit ftb
local unittype Rtb
local real Ttb
local real Ytb
local real Gtb
local real gtb
local real htb
local real Ftb
local real ktb
local real jtb
local real xtb
local real vtb
local real mtb
local real Qtb
if Esb==du then
if Ew[3]==true then
set Usb=Wsb
set Isb="attack"
set Ttb=Qw[18]
set Ytb=Ww[18]
set Psb=Ttb
set Asb=Ytb
call IssuePointOrder(Usb,Isb,Psb,Asb)
set Dsb=Wsb
set Hsb=UNIT_TYPE_HERO
if IsUnitType(Dsb,Hsb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,18)
endif
else
set Jsb=Wsb
set Ksb="attack"
set Gtb=Qw[42]
set gtb=Ww[42]
set Lsb=Gtb
set Xsb=gtb
call IssuePointOrder(Jsb,Ksb,Lsb,Xsb)
set Csb=Wsb
set Vsb=UNIT_TYPE_HERO
if IsUnitType(Csb,Vsb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,42)
endif
endif
endif
if Esb==nu then
set Bsb=Wsb
set Nsb="attack"
set htb=Qw[42]
set Ftb=Ww[42]
set Msb=htb
set wtb=Ftb
call IssuePointOrder(Bsb,Nsb,Msb,wtb)
set utb=Wsb
set rtb=UNIT_TYPE_HERO
if IsUnitType(utb,rtb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,42)
endif
endif
if Esb==fu then
if Ew[1]==true then
set stb=Wsb
set ttb="attack"
set ktb=Qw[42]
set jtb=Ww[42]
set itb=ktb
set Stb=jtb
call IssuePointOrder(stb,ttb,itb,Stb)
set ctb=Wsb
set otb=UNIT_TYPE_HERO
if IsUnitType(ctb,otb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,42)
endif
else
set Otb=Wsb
set ltb="attack"
set xtb=Qw[18]
set vtb=Ww[18]
set btb=xtb
set ytb=vtb
call IssuePointOrder(Otb,ltb,btb,ytb)
set ptb=Wsb
set etb=UNIT_TYPE_HERO
if IsUnitType(ptb,etb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,18)
endif
endif
endif
if Esb==Ru then
set qtb=Wsb
set atb="attack"
set mtb=Qw[18]
set Qtb=Ww[18]
set ntb=mtb
set dtb=Qtb
call IssuePointOrder(qtb,atb,ntb,dtb)
set ftb=Wsb
set Rtb=UNIT_TYPE_HERO
if IsUnitType(ftb,Rtb) then
call SaveInteger(qu,GetHandleId(Wsb),$6D6F7665,18)
endif
endif
set Wsb=null
set Esb=null
set Zsb=null
set Usb=null
set Dsb=null
set Hsb=null
set Jsb=null
set Csb=null
set Vsb=null
set Bsb=null
set utb=null
set rtb=null
set stb=null
set ctb=null
set otb=null
set Otb=null
set ptb=null
set etb=null
set qtb=null
set ftb=null
set Rtb=null
endfunction
function Wuu takes nothing returns boolean
local trigger kuu
local rect juu
local region xuu
local trigger vuu
local boolexpr muu
local trigger Quu
set eG=CreateTrigger()
set kuu=eG
set juu=bj_mapInitialPlayableArea
set xuu=CreateRegion()
call RegionAddRect(xuu,juu)
call TriggerRegisterEnterRegion(kuu,xuu,null)
set vuu=eG
set muu=Condition(xww)
call TriggerAddCondition(vuu,muu)
set Quu=eG
call DisableTrigger(Quu)
set kuu=null
set juu=null
set xuu=null
set vuu=null
set muu=null
set Quu=null
return true
endfunction
function WwS takes nothing returns boolean
local unit ewS=GetEnteringUnit()
local unit awS=ewS
local player qwS=GetOwningPlayer(awS)
local player nwS=qwS
local unit fwS=G[3]
local player dwS=GetOwningPlayer(fwS)
local unit RwS
local unit TwS
local unittype YwS
local unit GwS
local unit gwS
local unit hwS
local unit FwS
local boolean kwS
local boolean jwS
local boolean xwS
local boolean vwS
local boolean mwS
local boolean QwS
if IsPlayerEnemy(nwS,dwS) then
set kwS=true
else
set RwS=G[3]
set kwS=GetOwningPlayer(RwS)==Player(15)
endif
if kwS then
set TwS=ewS
set YwS=UNIT_TYPE_HERO
set jwS=IsUnitType(TwS,YwS)==true or GetUnitLevel(ewS)>=7
else
set jwS=false
endif
if jwS then
set GwS=ewS
set xwS=GetUnitTypeId(GwS)!=$6830324C
else
set xwS=false
endif
if xwS then
set gwS=ewS
set vwS=GetUnitTypeId(gwS)!=$6830324D
else
set vwS=false
endif
if vwS then
set hwS=ewS
set mwS=GetUnitTypeId(hwS)!=$68303254
else
set mwS=false
endif
if mwS then
set FwS=ewS
set QwS=GetUnitTypeId(FwS)!=$6830324F
else
set QwS=false
endif
set ewS=null
set qwS=null
set awS=null
set nwS=null
set dwS=null
set fwS=null
set RwS=null
set TwS=null
set YwS=null
set GwS=null
set gwS=null
set hwS=null
set FwS=null
return QwS
endfunction
function X3S takes nothing returns boolean
local trigger I3S
local trigger P3S
local playerunitevent A3S
local trigger D3S
local playerunitevent H3S
local integer J3S
local trigger K3S
local code L3S
set yn=CreateTrigger()
set I3S=yn
call DisableTrigger(I3S)
set P3S=yn
set A3S=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set D3S=P3S
set H3S=A3S
set J3S=0
loop
call TriggerRegisterPlayerUnitEvent(D3S,Player(J3S),H3S,null)
set J3S=J3S+1
exitwhen J3S==bj_MAX_PLAYER_SLOTS
endloop
set K3S=yn
set L3S=V5
call TriggerAddAction(K3S,L3S)
set I3S=null
set P3S=null
set A3S=null
set D3S=null
set H3S=null
set K3S=null
return true
endfunction
function X4u takes nothing returns boolean
local playerunitevent g4u=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code h4u=s7
local unit G4u
local player F4u
local integer k4u
local real j4u
local real x4u
local real v4u
local real m4u
local unit Q4u
local integer W4u
local unit E4u
local integer Z4u
local unit U4u
local player I4u
local integer P4u
local real A4u
local real D4u
local real H4u
local real J4u
local real K4u
local real L4u
call emO(g4u,null,h4u,null)
set F4u=Player(0)
set k4u=$75303031
set H4u=0.
set J4u=0.
set j4u=H4u
set x4u=J4u
set K4u=180.
set v4u=K4u
set I4u=F4u
set P4u=k4u
set A4u=j4u
set D4u=x4u
set L4u=v4u
set m4u=L4u
set G4u=CreateUnit(I4u,P4u,A4u,D4u,m4u*57.295779513)
set Q4u=G4u
set W4u=$414D637B
call UnitAddAbility(Q4u,W4u)
set E4u=G4u
set Z4u=$414D637B
call UnitRemoveAbility(E4u,Z4u)
set U4u=G4u
call RemoveUnit(U4u)
set G4u=null
set g4u=null
set F4u=null
set Q4u=null
set E4u=null
set U4u=null
set I4u=null
return true
endfunction
function Voi takes string foi returns nothing
local integer Roi
local unit Toi
local integer Yoi
local trigger Goi
local real goi
local real hoi
local group Foi
local integer koi
local filterfunc joi
local unit xoi
local group voi
local integer moi
local unit Qoi
local integer Woi
local trigger Eoi
local unit Zoi
local unit Uoi
local group Ioi
local group Poi
local unit Aoi
local group Doi
local boolexpr Hoi
local string Joi
local integer Koi
local real Loi
local integer Xoi
local string Coi
set aW[qW]=foi
set qW=qW+1
set Roi=GetRandomInt(1,100)
set Toi=GetTriggerUnit()
set Qoi=Toi
set Woi=$41304B41
set Yoi=GetUnitAbilityLevel(Qoi,Woi)
if Roi<=6+2*Yoi then
set Goi=GetTriggeringTrigger()
set Eoi=Goi
call DisableTrigger(Eoi)
call SetUnitAnimation(Toi,"Attack Slam")
set Zoi=Toi
set goi=GetUnitX(Zoi)
set Uoi=Toi
set hoi=GetUnitY(Uoi)
set Foi=CreateGroup()
set koi=100+20*Yoi
set joi=Filter(w5)
call GroupEnumUnitsInRange(Foi,goi,hoi,350.,joi)
set voi=Foi
loop
set Ioi=voi
exitwhen not (FirstOfGroup(Ioi)!=null)
set Poi=voi
set Aoi=FirstOfGroup(Poi)
call GroupRemoveUnit(Poi,Aoi)
set xoi=Aoi
call UnitDamageTarget(Toi,xoi,I2R(koi),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_ENHANCED,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GlaiveMissile\\GlaiveMissileTarget.mdl",xoi,"origin"))
endloop
set Doi=Foi
call DestroyGroup(Doi)
set Hoi=joi
call DestroyBoolExpr(Hoi)
set Joi="when calling alloc_CallbackSingle_doAfter_Gurlash in Gurlash, line 321"
set aW[qW]=Joi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Koi=fF
set RF[Koi]=713
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Gurlash.","when calling error in Gurlash, line 321")
set Koi=0
endif
else
set dF=dF-1
set Koi=nF[dF]
set RF[Koi]=713
endif
set qW=qW-1
set moi=Koi
set vx[moi]=Goi
set Loi=3.
set Xoi=moi
set Coi="when calling doAfter in Gurlash, line 321"
set aW[qW]=Coi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Loi,Xoi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Toi=null
set Goi=null
set Foi=null
set joi=null
set xoi=null
set voi=null
set Qoi=null
set Eoi=null
set Zoi=null
set Uoi=null
set Ioi=null
set Poi=null
set Aoi=null
set Doi=null
set Hoi=null
endfunction
function X5u takes nothing returns nothing
set qW=0
call Voi("via function reference Gurlash, line 328")
endfunction
function X9l takes nothing returns nothing
local texttag H9l
local string J9l
local real K9l
local integer L9l
if tT>0 then
set tT=tT-1
set H9l=rT
set L9l=tT
set J9l=I2S(L9l)
set K9l=13.
call SetTextTagText(H9l,J9l,K9l*.0023)
endif
set H9l=null
endfunction
function X9r takes nothing returns boolean
local unit J9r=GetFilterUnit()
local unit K9r
local boolean L9r
if GetUnitTypeId(J9r)==$45696C6C then
set K9r=GetFilterUnit()
set L9r=UnitAlive(K9r)
else
set L9r=false
endif
set J9r=null
set K9r=null
return L9r
endfunction
function Gvi takes string bvi returns nothing
local unit yvi
local integer pvi
local trigger evi
local effect qvi
local integer avi
local unit nvi
local string dvi
local widget fvi
local string Rvi
local string Tvi
local integer Yvi
set aW[qW]=bvi
set qW=qW+1
set yvi=GetSpellAbilityUnit()
set nvi=yvi
if GetUnitTypeId(nvi)==$4830324B then
set pvi=GetSpellAbilityId()
if pvi==$41305851 then
set evi=GetTriggeringTrigger()
call DisableTrigger(evi)
set dvi="overhead"
set fvi=yvi
set Rvi="Model157.mdx"
set bj_lastCreatedEffect=AddSpecialEffectTarget(Rvi,fvi,dvi)
set qvi=bj_lastCreatedEffect
call SetUnitInvulnerable(yvi,true)
call PauseUnit(yvi,true)
call SetUnitAnimation(yvi,"stand, channel")
set Za=0
set Tvi="when calling alloc_CallbackPeriodic_doPeriodically_Ikar in Ikar, line 446"
set aW[qW]=Tvi
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Yvi=GF
set gF[Yvi]=662
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_Ikar.","when calling error in Ikar, line 446")
set Yvi=0
endif
else
set YF=YF-1
set Yvi=TF[YF]
set gF[Yvi]=662
endif
set qW=qW-1
set avi=Yvi
set Nx[avi]=qvi
set Mx[avi]=yvi
set wv[avi]=evi
call GtO(1.,avi,"when calling doPeriodically in Ikar, line 446")
endif
endif
set qW=qW-1
set yvi=null
set evi=null
set qvi=null
set nvi=null
set fvi=null
endfunction
function XFc takes nothing returns nothing
set qW=0
call Gvi("via function reference Ikar, line 543")
endfunction
function XHt takes nothing returns nothing
local unit THt=GetAttacker()
local unit GHt=THt
local unit YHt
local unit gHt
local integer hHt
local unit FHt
local unittype kHt
local effect jHt
local widget xHt
local string vHt
local string mHt
local unit QHt
local integer WHt
local unit EHt
local integer ZHt
local integer UHt
local unit IHt
local integer PHt
local unit AHt
local integer DHt
local unit HHt
local integer JHt
local unit KHt
local integer LHt
if GetUnitTypeId(GHt)==$6F30354B then
set gHt=THt
set hHt=$41323245
if GetUnitAbilityLevel(gHt,hHt)==1 then
set YHt=GetTriggerUnit()
set FHt=YHt
set kHt=UNIT_TYPE_STRUCTURE
if IsUnitType(FHt,kHt)==false then
set xHt=YHt
set vHt="Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
set mHt="origin"
set jHt=AddSpecialEffectTarget(vHt,xHt,mHt)
call DestroyEffect(jHt)
endif
set QHt=THt
set WHt=$41323245
call UnitRemoveAbility(QHt,WHt)
set EHt=THt
set ZHt=$41323244
set UHt=1
call SetUnitAbilityLevel(EHt,ZHt,UHt)
endif
set IHt=THt
set PHt=$41323245
if GetUnitAbilityLevel(IHt,PHt)==0 then
set AHt=THt
set DHt=$41323244
call IncUnitAbilityLevel(AHt,DHt)
set HHt=THt
set JHt=$41323244
if GetUnitAbilityLevel(HHt,JHt)==8 then
set KHt=THt
set LHt=$41323245
call UnitAddAbility(KHt,LHt)
endif
endif
endif
set THt=null
set YHt=null
set GHt=null
set gHt=null
set FHt=null
set kHt=null
set jHt=null
set xHt=null
set QHt=null
set EHt=null
set IHt=null
set AHt=null
set HHt=null
set KHt=null
endfunction
function XOe takes nothing returns boolean
local trigger POe=CreateTrigger()
local integer AOe=0
local trigger DOe
local player HOe
local playerevent JOe
local trigger KOe
local code LOe
loop
exitwhen AOe>3
set DOe=POe
set HOe=Player(AOe)
set JOe=EVENT_PLAYER_LEAVE
call TriggerRegisterPlayerEvent(DOe,HOe,JOe)
set AOe=AOe+1
endloop
set KOe=POe
set LOe=t7
call TriggerAddAction(KOe,LOe)
set POe=null
set DOe=null
set HOe=null
set JOe=null
set KOe=null
return true
endfunction
function XOt takes nothing returns boolean
set Ea=CreateSound("Units\\Other\\DrekThar\\DrekTharYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(Ea,5374)
call SetSoundChannel(Ea,0)
call SetSoundPitch(Ea,1.)
return true
endfunction
function XOw takes nothing returns boolean
return true
endfunction
function XUl takes nothing returns boolean
local playerunitevent KUl=EVENT_PLAYER_UNIT_SPELL_CAST
local code LUl=K7
call emO(KUl,null,LUl,null)
set KUl=null
return true
endfunction
function pLi takes unit sLi returns nothing
local unit SLi=sLi
local player tLi=GetOwningPlayer(SLi)
local unit cLi=sLi
local integer iLi=GetUnitTypeId(cLi)
local sound oLi
local unit OLi
local real lLi
local real bLi
local real yLi
if iLi==$6E30324B then
set oLi=xg
if oLi!=null then
call StartSound(oLi)
endif
set OLi=GetTriggerUnit()
set lLi=70.
set bLi=70.
set yLi=70.
call SetUnitScale(OLi,lLi*.01,bLi*.01,yLi*.01)
if tLi==Tu then
set s[1]=$484D3032
endif
if tLi==gu then
set s[2]=$484D3032
endif
if tLi==Yu then
set s[3]=$484D3032
endif
if tLi==Gu then
set s[4]=$484D3032
endif
endif
set tLi=null
set SLi=null
set cLi=null
set oLi=null
set OLi=null
endfunction
function XVp takes nothing returns nothing
call pLi(GetTriggerUnit())
endfunction
function XXc takes nothing returns nothing
local unit aXc=GetTriggerUnit()
local unit RXc=aXc
local integer nXc=GetUnitTypeId(RXc)
local unit TXc=aXc
local player dXc=GetOwningPlayer(TXc)
local integer fXc=GetPlayerId(dXc)
local unit YXc
local real GXc
local real gXc
local real hXc
local sound FXc
local unit kXc
local real jXc
local real xXc
local real vXc
local sound mXc
local unit QXc
local real WXc
local real EXc
local real ZXc
local trigger UXc
local trigger IXc
local trigger PXc
local trigger AXc
local trigger DXc
local unit HXc
local real JXc
local real KXc
local real LXc
if nXc==$6E667431 then
set i[fXc]=$4F636268
set YXc=aXc
set GXc=110.
set gXc=110.
set hXc=110.
call SetUnitScale(YXc,GXc*.01,gXc*.01,hXc*.01)
set FXc=Ps
call StartSound(FXc)
endif
if nXc==$6F303442 then
set t[fXc]=$4F303443
set kXc=aXc
set jXc=110.
set xXc=110.
set vXc=110.
call SetUnitScale(kXc,jXc*.01,xXc*.01,vXc*.01)
set mXc=qY
call StartSound(mXc)
endif
if nXc==$6E636263 then
set QXc=aXc
set WXc=90.
set EXc=90.
set ZXc=90.
call SetUnitScale(QXc,WXc*.01,EXc*.01,ZXc*.01)
call SetPlayerTechResearched(dXc,$52303051,1)
call SetPlayerTechResearched(Player(fXc+4),$52303051,1)
set UXc=kl
call EnableTrigger(UXc)
set IXc=jl
call EnableTrigger(IXc)
endif
if nXc==$6E636264 then
set PXc=ll
call EnableTrigger(PXc)
call RemoveUnitFromStock(O[fXc],A[fXc])
call RemoveUnitFromStock(b[fXc],A[fXc])
call RemoveUnitFromStock(l[fXc],A[fXc])
set A[fXc]=$6E30304C
call AddUnitToStock(O[fXc],A[fXc],1,3)
call AddUnitToStock(b[fXc],A[fXc],1,3)
call AddUnitToStock(l[fXc],A[fXc],1,3)
endif
if nXc==$6E6D7230 then
set AXc=ah
call EnableTrigger(AXc)
call RemoveUnitFromStock(O[fXc],D[fXc])
call RemoveUnitFromStock(b[fXc],D[fXc])
call RemoveUnitFromStock(l[fXc],D[fXc])
set D[fXc]=$6E6B6F67
call AddUnitToStock(O[fXc],D[fXc],1,3)
call AddUnitToStock(b[fXc],D[fXc],1,3)
call AddUnitToStock(l[fXc],D[fXc],1,3)
endif
if nXc==$6F74746F then
call RemoveUnitFromStock(O[fXc],H[fXc])
call RemoveUnitFromStock(b[fXc],H[fXc])
call RemoveUnitFromStock(l[fXc],H[fXc])
set H[fXc]=$6F73706D
call AddUnitToStock(O[fXc],H[fXc],1,3)
call AddUnitToStock(b[fXc],H[fXc],1,3)
call AddUnitToStock(l[fXc],H[fXc],1,3)
endif
if nXc==$6E6D7239 then
set J[fXc]=$6E676772
endif
if nXc==$6F737472 then
set K[fXc]=$6F737779
set DXc=FT
call EnableTrigger(DXc)
endif
if nXc==$6F677265 then
set L[fXc]=$6F6F7363
endif
if nXc==$6F303245 then
set L[fXc]=$6F303441
endif
if nXc==$6F666F72 then
set HXc=aXc
set JXc=70.
set KXc=70.
set LXc=70.
call SetUnitScale(HXc,JXc*.01,KXc*.01,LXc*.01)
call SetPlayerTechResearched(dXc,$5230324B,1)
call SetPlayerTechResearched(Player(fXc+4),$5230324B,1)
endif
set aXc=null
set dXc=null
set RXc=null
set TXc=null
set YXc=null
set FXc=null
set kXc=null
set mXc=null
set QXc=null
set UXc=null
set IXc=null
set PXc=null
set AXc=null
set DXc=null
set HXc=null
endfunction
function Xyc takes string Ayc returns nothing
local integer Dyc
local unit Hyc
local integer Jyc
local string Kyc
local integer Lyc
set aW[qW]=Ayc
set qW=qW+1
set Dyc=GetSpellAbilityId()
set Hyc=GetSpellAbilityUnit()
if Dyc==$41323232 then
set gl=20
set Kyc="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_BlackPearl in BlackPearl, line 516"
set aW[qW]=Kyc
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set Lyc=GF
set gF[Lyc]=669
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_BlackPearl.","when calling error in BlackPearl, line 516")
set Lyc=0
endif
else
set YF=YF-1
set Lyc=TF[YF]
set gF[Lyc]=669
endif
set qW=qW-1
set Jyc=Lyc
set sj[Jyc]=Hyc
call GtO(1.,Jyc,"when calling doPeriodically in BlackPearl, line 516")
endif
set qW=qW-1
set Hyc=null
endfunction
function X_r takes nothing returns nothing
set qW=0
call Xyc("via function reference BlackPearl, line 511")
endfunction
function Xal takes nothing returns nothing
local integer Eql=GetSpellAbilityId()
local unit Zql=GetSpellAbilityUnit()
local unit Hql=Zql
local player Uql=GetOwningPlayer(Hql)
local integer Iql
local integer Pql
local destructable Aql
local unit Dql
local unit Jql
local integer Kql
local unit Lql
local integer Xql
local unit Cql
local integer Vql
local unit Bql
local integer Nql
local unit Mql
local integer wal
local unit ual
local integer ral
local unit sal
local integer tal
local unit ial
local integer Sal
local integer cal
local unit oal
local integer Oal
local unit lal
local integer bal
local player yal
local unit pal
local unit eal
local integer qal
local integer aal
local unit nal
local integer dal
local unit fal
local integer Ral
local unit Tal
local integer Yal
local unit Gal
local integer gal
local destructable hal
local destructable Fal
local unit kal
local real jal
local unit xal
local integer mal
local unit Qal
local integer Wal
local unit Eal
local integer Zal
local unit Ual
local integer Ial
local unit Pal
local integer Aal
local integer Dal
local unit Hal
local integer Jal
local player Kal
local real Lal
set Og=Og+1
if Eql==$41313358 then
set Jql=lg
set Kql=$41313358
call UnitRemoveAbility(Jql,Kql)
set Lql=lg
set Xql=$41323556
call UnitAddAbility(Lql,Xql)
set Cql=lg
set Vql=$41313359
call UnitAddAbility(Cql,Vql)
call SetPlayerTechResearched(Uql,$52303649,2)
set Bql=lg
set Nql=$41313431
call UnitRemoveAbility(Bql,Nql)
set Mql=lg
set wal=$41313441
call UnitAddAbility(Mql,wal)
endif
if Eql==$41323556 then
set ual=lg
set ral=$41323556
call UnitRemoveAbility(ual,ral)
set sal=lg
set tal=$41323558
call UnitAddAbility(sal,tal)
set ial=lg
set Sal=$41313359
set cal=2
call SetUnitAbilityLevel(ial,Sal,cal)
call SetPlayerTechResearched(Uql,$52303649,3)
set oal=lg
set Oal=$41313441
call UnitRemoveAbility(oal,Oal)
set lal=lg
set bal=$41313435
call UnitAddAbility(lal,bal)
endif
if Eql==$41323558 then
set pal=Zql
set yal=GetOwningPlayer(pal)
set Iql=GetPlayerId(yal)
set eal=lg
set qal=$41313359
set aal=3
call SetUnitAbilityLevel(eal,qal,aal)
call SetPlayerTechResearched(Uql,$52303649,4)
set nal=lg
set dal=$41313435
call UnitRemoveAbility(nal,dal)
set fal=lg
set Ral=$41323558
call UnitRemoveAbility(fal,Ral)
set Tal=lg
set Yal=$41313442
call UnitAddAbility(Tal,Yal)
set X[Iql]=$6E6A6762
endif
if Eql==$41313359 then
set Gal=GetSpellAbilityUnit()
set gal=$41313359
set Pql=GetUnitAbilityLevel(Gal,gal)
set Aql=GetSpellTargetDestructable()
set Kal=bg
set hal=Aql
set Lal=GetDestructableX(hal)
set Fal=Aql
set Dql=CreateUnit(Kal,$7530304E,Lal,GetDestructableY(Fal),0.)
set kal=Dql
set jal=30.
call UnitApplyTimedLife(kal,$42544C46,jal)
if Pql==1 then
set xal=Dql
set mal=$41313436
call UnitAddAbility(xal,mal)
endif
if Pql==2 then
set Qal=Dql
set Wal=$41313430
call UnitAddAbility(Qal,Wal)
set Eal=Dql
set Zal=$41313437
call UnitAddAbility(Eal,Zal)
endif
if Pql==3 then
set Ual=Dql
set Ial=$41313430
call UnitAddAbility(Ual,Ial)
set Pal=Dql
set Aal=$41313430
set Dal=2
call SetUnitAbilityLevel(Pal,Aal,Dal)
set Hal=Dql
set Jal=$41313438
call UnitAddAbility(Hal,Jal)
endif
endif
set Zql=null
set Uql=null
set Aql=null
set Dql=null
set Hql=null
set Jql=null
set Lql=null
set Cql=null
set Bql=null
set Mql=null
set ual=null
set sal=null
set ial=null
set oal=null
set lal=null
set yal=null
set pal=null
set eal=null
set nal=null
set fal=null
set Tal=null
set Gal=null
set hal=null
set Fal=null
set kal=null
set xal=null
set Qal=null
set Eal=null
set Ual=null
set Pal=null
set Hal=null
set Kal=null
endfunction
function Ctw takes unit Htw,unit Jtw returns nothing
local integer Ktw=0
local integer Ltw=0
local item Xtw
call UnitAddAbility(Htw,$564F4931)
call UnitAddAbility(Htw,$564F4932)
call UnitAddAbility(Htw,$564F4933)
loop
exitwhen Ltw>5
set Xtw=UnitItemInSlot(Jtw,Ltw)
set Ktw=0
if Xtw==null then
call UnitAddAbility(Htw,cs[Ltw+1])
else
loop
set Ktw=Ktw+1
exitwhen ss[Ktw]==0
if GetItemTypeId(Xtw)==ss[Ktw] then
call UnitAddAbility(Htw,ts[Ktw])
endif
endloop
endif
set Ltw=Ltw+1
endloop
set Xtw=null
set Xtw=null
endfunction
function Pwu takes unit Uwu returns nothing
local integer Iwu=0
call UnitRemoveAbility(Uwu,$564F4931)
call UnitRemoveAbility(Uwu,$564F4932)
call UnitRemoveAbility(Uwu,$564F4933)
loop
set Iwu=Iwu+1
exitwhen Iwu>6
if GetUnitAbilityLevel(Uwu,cs[Iwu])>0 then
call UnitRemoveAbility(Uwu,cs[Iwu])
endif
endloop
set Iwu=0
loop
set Iwu=Iwu+1
exitwhen Ss[Iwu]==0
if GetUnitAbilityLevel(Uwu,Ss[Iwu])>0 then
call UnitRemoveAbility(Uwu,Ss[Iwu])
endif
endloop
set Iwu=0
loop
set Iwu=Iwu+1
exitwhen ts[Iwu]==0
if GetUnitAbilityLevel(Uwu,ts[Iwu])>0 then
call UnitRemoveAbility(Uwu,ts[Iwu])
endif
endloop
endfunction
function w2t takes unit C4t,unit V4t,integer B4t returns nothing
local integer N4t=0
local item M4t
call GetOwningPlayer(C4t)
loop
exitwhen N4t>5
set M4t=UnitItemInSlot(V4t,N4t)
if GetItemTypeId(M4t)==ss[B4t] then
call UnitRemoveAbility(C4t,ts[B4t])
call RemoveItem(M4t)
endif
set N4t=N4t+1
endloop
set M4t=null
set M4t=null
endfunction
function Xbu takes nothing returns nothing
local integer Hbu=0
local unit Jbu=GetSpellAbilityUnit()
local integer Kbu=GetPlayerId(GetOwningPlayer(Jbu))
local integer Lbu=GetSpellAbilityId()
set Hbu=0
loop
set Hbu=Hbu+1
exitwhen Ss[Hbu]==0
if Ss[Hbu]==Lbu then
call Pwu(Jbu)
call UnitAddAbility(Jbu,Lbu)
call UnitAddAbility(Jbu,$52455043)
if GetUnitTypeId(q[Kbu])==is[Hbu] and q[Kbu]!=null then
call SetUnitAbilityLevel(Jbu,Lbu,GetHeroLevel(q[Kbu]))
call Ctw(Jbu,q[Kbu])
call SaveUnitHandle(qu,Kbu,$4845524F,q[Kbu])
elseif GetUnitTypeId(a[Kbu])==is[Hbu] and a[Kbu]!=null then
call SetUnitAbilityLevel(Jbu,Lbu,GetHeroLevel(a[Kbu]))
call Ctw(Jbu,a[Kbu])
call SaveUnitHandle(qu,Kbu,$4845524F,a[Kbu])
elseif GetUnitTypeId(n[Kbu])==is[Hbu] and n[Kbu]!=null then
call SetUnitAbilityLevel(Jbu,Lbu,GetHeroLevel(n[Kbu]))
call Ctw(Jbu,n[Kbu])
call SaveUnitHandle(qu,Kbu,$4845524F,n[Kbu])
elseif GetUnitTypeId(d[Kbu])==is[Hbu] and d[Kbu]!=null then
call SetUnitAbilityLevel(Jbu,Lbu,GetHeroLevel(d[Kbu]))
call Ctw(Jbu,d[Kbu])
call SaveUnitHandle(qu,Kbu,$4845524F,d[Kbu])
endif
endif
endloop
set Hbu=0
loop
set Hbu=Hbu+1
exitwhen ts[Hbu]==0
if ts[Hbu]==Lbu then
call w2t(Jbu,LoadUnitHandle(qu,Kbu,$4845524F),Hbu)
call Ctw(Jbu,LoadUnitHandle(qu,Kbu,$4845524F))
endif
endloop
set Jbu=null
set Jbu=null
endfunction
function Xfe takes nothing returns nothing
local unit efe=GetKillingUnit()
local unit afe=efe
local unit qfe
local unit nfe
local unittype dfe
local unit ffe
local unittype Rfe
local unit Tfe
local real Yfe
local unit Gfe
local unitstate gfe
local real hfe
local unit Ffe
local unitstate kfe
local unit jfe
local unittype xfe
local unit vfe
local unittype mfe
local unit Qfe
local real Wfe
local unit Efe
local unitstate Zfe
local real Ufe
local unit Ife
local unitstate Pfe
local boolean Afe
local unit Dfe
local unitstate Hfe
local boolean Jfe
local unit Kfe
local unitstate Lfe
if GetUnitTypeId(afe)==$55303046 and GetHeroLevel(efe)>=14 then
set qfe=GetDyingUnit()
set nfe=qfe
set dfe=UNIT_TYPE_HERO
if IsUnitType(nfe,dfe)==true then
set ffe=qfe
set Rfe=UNIT_TYPE_STRUCTURE
set Afe=IsUnitType(ffe,Rfe)==false
else
set Afe=false
endif
if Afe then
set Tfe=efe
set Yfe=2000.
set Gfe=Tfe
set gfe=UNIT_STATE_LIFE
set hfe=Yfe
set Dfe=Gfe
set Hfe=gfe
set Ffe=Gfe
set kfe=gfe
call SetUnitState(Dfe,Hfe,GetUnitState(Ffe,kfe)+hfe)
call DestroyEffect(AddSpecialEffectTarget("Call of Dread Green.mdl",efe,"chest"))
endif
set jfe=qfe
set xfe=UNIT_TYPE_HERO
if IsUnitType(jfe,xfe)==false then
set vfe=qfe
set mfe=UNIT_TYPE_STRUCTURE
set Jfe=IsUnitType(vfe,mfe)==false
else
set Jfe=false
endif
if Jfe then
set Qfe=efe
set Wfe=20.
set Efe=Qfe
set Zfe=UNIT_STATE_LIFE
set Ufe=Wfe
set Kfe=Efe
set Lfe=Zfe
set Ife=Efe
set Pfe=Zfe
call SetUnitState(Kfe,Lfe,GetUnitState(Ife,Pfe)+Ufe)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",efe,"chest"))
endif
endif
set efe=null
set qfe=null
set afe=null
set nfe=null
set dfe=null
set ffe=null
set Rfe=null
set Tfe=null
set Gfe=null
set gfe=null
set Ffe=null
set kfe=null
set jfe=null
set xfe=null
set vfe=null
set mfe=null
set Qfe=null
set Efe=null
set Zfe=null
set Ife=null
set Pfe=null
set Dfe=null
set Hfe=null
set Kfe=null
set Lfe=null
endfunction
function Xfl takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function Xhw takes nothing returns boolean
local unit Ghw=GetFilterUnit()
local unit ghw=Ghw
local unit hhw
local unittype Fhw
local unit khw
local unittype jhw
local unit xhw
local unittype vhw
local unit mhw
local integer Qhw
local unit Whw
local unit Ehw
local unit Zhw
local unit Uhw
local boolean Ihw
local boolean Phw
local boolean Ahw
local boolean Dhw
local boolean Hhw
local boolean Jhw
local boolean Khw
local boolean Lhw
if UnitAlive(ghw) then
set hhw=Ghw
set Fhw=UNIT_TYPE_STRUCTURE
set Ihw=IsUnitType(hhw,Fhw)==false
else
set Ihw=false
endif
if Ihw then
set khw=Ghw
set jhw=UNIT_TYPE_HERO
set Phw=IsUnitType(khw,jhw)==false
else
set Phw=false
endif
if Phw then
set xhw=Ghw
set vhw=UNIT_TYPE_ANCIENT
set Ahw=IsUnitType(xhw,vhw)==false
else
set Ahw=false
endif
if Ahw then
set mhw=Ghw
set Qhw=$42303848
set Dhw=GetUnitAbilityLevel(mhw,Qhw)>0==false
else
set Dhw=false
endif
if Dhw then
set Whw=Ghw
set Hhw=GetUnitTypeId(Whw)!=$75303053
else
set Hhw=false
endif
if Hhw then
set Ehw=Ghw
set Jhw=GetUnitTypeId(Ehw)!=$75303054
else
set Jhw=false
endif
if Jhw then
set Zhw=Ghw
set Khw=GetUnitTypeId(Zhw)!=$75303055
else
set Khw=false
endif
if Khw then
set Uhw=Ghw
set Lhw=GetUnitTypeId(Uhw)!=$75303056
else
set Lhw=false
endif
set Ghw=null
set ghw=null
set hhw=null
set Fhw=null
set khw=null
set jhw=null
set xhw=null
set vhw=null
set mhw=null
set Whw=null
set Ehw=null
set Zhw=null
set Uhw=null
return Lhw
endfunction
function Xne takes nothing returns nothing
set qW=0
call bMp("via function reference AltarGold, line 1601")
endfunction
function XoS takes nothing returns boolean
return true
endfunction
function Xot takes nothing returns nothing
call IssueImmediateOrder(GetTriggerUnit(),"absorb")
endfunction
function Xpi takes nothing returns nothing
local integer Gpi
local unit gpi
local integer hpi
local string Fpi
local real kpi
local string jpi
local real xpi
local string vpi
local real mpi
local string Qpi
local real Wpi
local string Epi
local real Zpi
local unit Upi
local integer Ipi
local integer Ppi
local unit Api
local integer Dpi
local unit Hpi
local integer Jpi
local timer Kpi
local timer Lpi
if MO<5 then
set MO=MO+1
set Gpi=0
loop
exitwhen Gpi>3
if GetPlayerTechCount(Player(Gpi),$52313030,true)<4 then
call SetPlayerTechResearched(Player(Gpi),$52313030,GetPlayerTechCount(Player(Gpi),$52313030,true)+1)
endif
set Gpi=Gpi+1
endloop
if MO==1 then
set gpi=au
set hpi=$41323544
call UnitAddAbility(gpi,hpi)
set Fpi="|cffff0000Attention!|r"
set kpi=15.
call DisplayTimedTextToPlayer(IY,0.,0.,kpi,Fpi)
set jpi="|cffffcc00Armageddon is on!|r"
set xpi=15.
call DisplayTimedTextToPlayer(IY,0.,0.,xpi,jpi)
set vpi="|cffffcc00You have taken too long to figure out the winner among yourselves.|r"
set mpi=15.
call DisplayTimedTextToPlayer(IY,0.,0.,mpi,vpi)
set Qpi="|cffffcc00Every 10 minutes something is going to happen from now on, so beware...|r"
set Wpi=15.
call DisplayTimedTextToPlayer(IY,0.,0.,Wpi,Qpi)
set Epi="|cffffcc00BEGIN!!!|r"
set Zpi=15.
call DisplayTimedTextToPlayer(IY,0.,0.,Zpi,Epi)
else
set Upi=au
set Ipi=$41323544
set Ppi=MO
call SetUnitAbilityLevel(Upi,Ipi,Ppi)
endif
if MO==3 then
set Api=au
set Dpi=$41323542
call UnitAddAbility(Api,Dpi)
endif
if MO==4 then
set Hpi=au
set Jpi=$41323543
call UnitAddAbility(Hpi,Jpi)
endif
set NO=CreateTimer()
call TimerStart(NO,300.,false,QM)
else
set Kpi=NO
call PauseTimer(Kpi)
set Lpi=NO
call DestroyTimer(Lpi)
set NO=null
endif
set gpi=null
set Upi=null
set Api=null
set Hpi=null
set Kpi=null
set Lpi=null
endfunction
function XrS takes nothing returns boolean
return true
endfunction
function XvO takes nothing returns boolean
local playerunitevent KvO=EVENT_PLAYER_UNIT_SPELL_CAST
local code LvO=yww_3635
call emO(KvO,null,LvO,null)
set KvO=null
return true
endfunction
function Xvi takes nothing returns boolean
return true
endfunction
function Y2s takes nothing returns boolean
local integer W4s
local string E4s
local integer Z4s
local string U4s
local integer I4s
local string P4s
local integer A4s
local string D4s
local integer H4s
local string J4s
local integer K4s
local string L4s
local integer X4s
local string C4s
local integer V4s
local string B4s
local integer N4s
local string M4s
local integer w2s
local string u2s
local integer r2s
local string s2s
local integer t2s
local string i2s
local integer S2s
local string c2s
local integer o2s
local string O2s
local integer l2s
local string b2s
local integer y2s
local string p2s
local integer e2s
local string q2s
local integer a2s
local string n2s
local integer d2s
local string f2s
local integer R2s
local string T2s
set de=null
set W4s=$6F303033
set E4s="ReplaceableTextures\\CommandButtons\\BTNPickHuman.blp"
set Re[0]=W4s
set Te[0]=E4s
set Z4s=$6F303036
set U4s="ReplaceableTextures\\CommandButtons\\BTNPickDwarf.blp"
set Re[1]=Z4s
set Te[1]=U4s
set I4s=$6F303038
set P4s="ReplaceableTextures\\CommandButtons\\BTNPickMerc2.blp"
set Re[2]=I4s
set Te[2]=P4s
set A4s=$6F303043
set D4s="ReplaceableTextures\\CommandButtons\\BTNPickOrc.blp"
set Re[3]=A4s
set Te[3]=D4s
set H4s=$6F303046
set J4s="ReplaceableTextures\\CommandButtons\\BTNPickTroll.blp"
set Re[4]=H4s
set Te[4]=J4s
set K4s=$6F303049
set L4s="ReplaceableTextures\\CommandButtons\\BTNPickTauren.blp"
set Re[5]=K4s
set Te[5]=L4s
set X4s=$6F30304F
set C4s="ReplaceableTextures\\CommandButtons\\BTNPickDemon4.blp"
set Re[6]=X4s
set Te[6]=C4s
set V4s=$6F30304C
set B4s="ReplaceableTextures\\CommandButtons\\BTNPickUndead.blp"
set Re[7]=V4s
set Te[7]=B4s
set N4s=$6F303047
set M4s="ReplaceableTextures\\CommandButtons\\BTNPickFO.blp"
set Re[8]=N4s
set Te[8]=M4s
set w2s=$65303032
set u2s="ReplaceableTextures\\CommandButtons\\BTNPickNE.blp"
set Re[9]=w2s
set Te[9]=u2s
set r2s=$6F303055
set s2s="ReplaceableTextures\\CommandButtons\\BTNPickNaga.blp"
set Re[10]=r2s
set Te[10]=s2s
set t2s=$6F303058
set i2s="ReplaceableTextures\\CommandButtons\\BTNPickBE.blp"
set Re[11]=t2s
set Te[11]=i2s
set S2s=$6E303156
set c2s="ReplaceableTextures\\CommandButtons\\BTNAstroSatyr.blp"
set Re[12]=S2s
set Te[12]=c2s
set o2s=$78303066
set O2s="ReplaceableTextures\\CommandButtons\\BTNPickRogue.blp"
set Re[13]=o2s
set Te[13]=O2s
set l2s=$78303033
set b2s="ReplaceableTextures\\CommandButtons\\BTNArakkoaVoid.blp"
set Re[14]=l2s
set Te[14]=b2s
set y2s=$78303074
set p2s="ReplaceableTextures\\CommandButtons\\BTNPandaren.blp"
set Re[15]=y2s
set Te[15]=p2s
set e2s=$6F303247
set q2s="ReplaceableTextures\\CommandButtons\\BTNDraconid.blp"
set Re[16]=e2s
set Te[16]=q2s
set a2s=$6830314B
set n2s="ReplaceableTextures\\CommandButtons\\BTNVupleraPick.blp"
set Re[17]=a2s
set Te[17]=n2s
set d2s=$6E30325A
set f2s="ReplaceableTextures\\CommandButtons\\BTNgnoll.blp"
set Re[18]=d2s
set Te[18]=f2s
set R2s=$6F303543
set T2s="ReplaceableTextures\\CommandButtons\\BTNKultirasPick.blp"
set Re[19]=R2s
set Te[19]=T2s
return true
endfunction
function Y4u takes nothing returns boolean
local unit o4u=GetFilterUnit()
local unit O4u=ol
local unit l4u=o4u
local unittype b4u=UNIT_TYPE_HERO
local unit y4u
local player p4u
local unit e4u
local unit q4u
local unittype a4u
local unit n4u
local unittype d4u
local boolean f4u
local boolean R4u
local boolean T4u
if IsUnitType(l4u,b4u) then
set y4u=o4u
set e4u=O4u
set p4u=GetOwningPlayer(e4u)
set f4u=IsUnitEnemy(y4u,p4u)
else
set f4u=false
endif
if f4u then
set q4u=o4u
set a4u=UNIT_TYPE_DEAD
set R4u=not IsUnitType(q4u,a4u)
else
set R4u=false
endif
if R4u then
set n4u=o4u
set d4u=UNIT_TYPE_ANCIENT
set T4u=IsUnitType(n4u,d4u)==false
else
set T4u=false
endif
set o4u=null
set O4u=null
set l4u=null
set b4u=null
set y4u=null
set p4u=null
set e4u=null
set q4u=null
set a4u=null
set n4u=null
set d4u=null
return T4u
endfunction
function Y5S takes nothing returns nothing
local unit y5S=GetDyingUnit()
local unit e5S=y5S
local unit p5S
local unit q5S
local unit a5S
local unit n5S
local unit d5S
local integer f5S
local player R5S
local real T5S
if GetUnitTypeId(e5S)==$7830316F then
set f5S=GetRandomInt(1,100)
set q5S=y5S
if f5S<=20+20*GetPlayerTechCount(GetOwningPlayer(q5S),$52656474,true) then
set a5S=y5S
set R5S=GetOwningPlayer(a5S)
set n5S=y5S
set T5S=GetUnitX(n5S)
set d5S=y5S
set p5S=CreateUnit(R5S,$6576656E,T5S,GetUnitY(d5S),270.)
call dYr(p5S)
endif
endif
set y5S=null
set p5S=null
set e5S=null
set q5S=null
set a5S=null
set n5S=null
set d5S=null
set R5S=null
endfunction
function Y6b takes nothing returns nothing
local integer p5b=GetSpellAbilityId()
local unit e5b
local unit q5b
local integer a5b
local integer n5b
local unit d5b
local unit f5b
local unit R5b
local unit T5b
local integer Y5b
local unit G5b
local integer g5b
local unit h5b
local integer F5b
local integer k5b
local unit j5b
local unit x5b
local unit v5b
local unit m5b
local real Q5b
local unit W5b
local integer E5b
local unit Z5b
local integer U5b
local integer I5b
local unit P5b
local string A5b
local widget D5b
local unit H5b
local unit J5b
local unit K5b
local unit L5b
local real X5b
local unit C5b
local integer V5b
local unit B5b
local integer N5b
local integer M5b
local unit w6b
local string u6b
local widget r6b
local unit s6b
local unit t6b
local unit i6b
local unit S6b
local real c6b
local unit o6b
local integer O6b
local unit l6b
local integer b6b
local integer y6b
local unit p6b
local string e6b
local widget q6b
local player a6b
local real n6b
local player d6b
local real f6b
local player R6b
local real T6b
if p5b==$414D3979 then
set e5b=GetSpellAbilityUnit()
set q5b=GetSpellTargetUnit()
set T5b=e5b
set Y5b=$414D3979
set a5b=GetUnitAbilityLevel(T5b,Y5b)
set n5b=GetRandomInt(1,4)
if n5b==1 then
set G5b=q5b
set g5b=$41305731
call UnitAddAbility(G5b,g5b)
set h5b=q5b
set F5b=$41305731
set k5b=a5b
call SetUnitAbilityLevel(h5b,F5b,k5b)
elseif n5b==2 then
set j5b=e5b
set a6b=GetOwningPlayer(j5b)
set x5b=e5b
set n6b=GetUnitX(x5b)
set v5b=e5b
set d5b=CreateUnit(a6b,$75303030,n6b,GetUnitY(v5b),0.)
set m5b=d5b
set Q5b=3.
call UnitApplyTimedLife(m5b,$42544C46,Q5b)
set W5b=d5b
set E5b=$414D397A
call UnitAddAbility(W5b,E5b)
set Z5b=d5b
set U5b=$414D397A
set I5b=a5b
call SetUnitAbilityLevel(Z5b,U5b,I5b)
set P5b=d5b
set A5b="innerfire"
set D5b=q5b
call IssueTargetOrder(P5b,A5b,D5b)
elseif n5b==3 then
set H5b=e5b
set d6b=GetOwningPlayer(H5b)
set J5b=e5b
set f6b=GetUnitX(J5b)
set K5b=e5b
set f5b=CreateUnit(d6b,$75303030,f6b,GetUnitY(K5b),0.)
set L5b=f5b
set X5b=3.
call UnitApplyTimedLife(L5b,$42544C46,X5b)
set C5b=f5b
set V5b=$414D397D
call UnitAddAbility(C5b,V5b)
set B5b=f5b
set N5b=$414D397D
set M5b=a5b
call SetUnitAbilityLevel(B5b,N5b,M5b)
set w6b=f5b
set u6b="innerfire"
set r6b=q5b
call IssueTargetOrder(w6b,u6b,r6b)
else
set s6b=e5b
set R6b=GetOwningPlayer(s6b)
set t6b=e5b
set T6b=GetUnitX(t6b)
set i6b=e5b
set R5b=CreateUnit(R6b,$75303030,T6b,GetUnitY(i6b),0.)
set S6b=R5b
set c6b=3.
call UnitApplyTimedLife(S6b,$42544C46,c6b)
set o6b=R5b
set O6b=$414D397C
call UnitAddAbility(o6b,O6b)
set l6b=R5b
set b6b=$414D397C
set y6b=a5b
call SetUnitAbilityLevel(l6b,b6b,y6b)
set p6b=R5b
set e6b="innerfire"
set q6b=q5b
call IssueTargetOrder(p6b,e6b,q6b)
endif
endif
set e5b=null
set q5b=null
set d5b=null
set f5b=null
set R5b=null
set T5b=null
set G5b=null
set h5b=null
set j5b=null
set x5b=null
set v5b=null
set m5b=null
set W5b=null
set Z5b=null
set P5b=null
set D5b=null
set H5b=null
set J5b=null
set K5b=null
set L5b=null
set C5b=null
set B5b=null
set w6b=null
set r6b=null
set s6b=null
set t6b=null
set i6b=null
set S6b=null
set o6b=null
set l6b=null
set p6b=null
set q6b=null
set a6b=null
set d6b=null
set R6b=null
endfunction
function Y6c takes nothing returns nothing
local unit p6c=GetTriggerUnit()
local unit e6c=p6c
local string q6c="attack"
local real R6c=Qw[21]
local real T6c=Ww[21]
local real a6c=R6c
local real n6c=T6c
local unit d6c
local unittype f6c
call IssuePointOrder(e6c,q6c,a6c,n6c)
set d6c=p6c
set f6c=UNIT_TYPE_HERO
if IsUnitType(d6c,f6c) then
call SaveInteger(qu,GetHandleId(p6c),$6D6F7665,21)
endif
set p6c=null
set e6c=null
set d6c=null
set f6c=null
endfunction
function Y6r takes nothing returns boolean
local playerunitevent R6r=EVENT_PLAYER_UNIT_DEATH
local code T6r=w8
call emO(R6r,null,T6r,null)
set R6r=null
return true
endfunction
function Y9u takes nothing returns nothing
local unit n9u=GetDyingUnit()
local unit d9u=n9u
local integer f9u=$4130494C
local unit R9u
local integer T9u
call UnitRemoveAbility(d9u,f9u)
set R9u=n9u
set T9u=$4130494F
call UnitRemoveAbility(R9u,T9u)
set n9u=null
set d9u=null
set R9u=null
endfunction
function YAl takes nothing returns boolean
local playerunitevent RAl
local code TAl
set Sd=null
set RAl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set TAl=b7
call emO(RAl,null,TAl,null)
set RAl=null
return true
endfunction
function YBt takes nothing returns nothing
local unit iBt
local player SBt
local integer cBt
local player oBt
local playerstate OBt
local integer lBt
local player bBt
local playerstate yBt
local player pBt
local player eBt
local player qBt
local player aBt
local player nBt
local player dBt
local boolean fBt
local player RBt
local playerstate TBt
if Wp==true then
set iBt=Pp
set fBt=UnitAlive(iBt)==true
else
set fBt=false
endif
if fBt then
set SBt=Ud
set cBt=200
set oBt=SBt
set OBt=PLAYER_STATE_RESOURCE_GOLD
set lBt=cBt
set RBt=oBt
set TBt=OBt
set bBt=oBt
set yBt=OBt
call SetPlayerState(RBt,TBt,GetPlayerState(bBt,yBt)+lBt)
call UuS(Pp,200)
set pBt=Ud
set eBt=Ud
set hr[GetPlayerId(pBt)]=hr[GetPlayerId(eBt)]+200
set qBt=Ud
set aBt=Ud
set Fr[GetPlayerId(qBt)]=Fr[GetPlayerId(aBt)]+200
set nBt=Ud
set dBt=Ud
set Cr[GetPlayerId(nBt)]=Cr[GetPlayerId(dBt)]+200
endif
set iBt=null
set SBt=null
set oBt=null
set OBt=null
set bBt=null
set yBt=null
set pBt=null
set eBt=null
set qBt=null
set aBt=null
set nBt=null
set dBt=null
set RBt=null
set TBt=null
endfunction
function YCs takes nothing returns nothing
local unit iCs
local real SCs
local unit cCs
local unitstate oCs
local real OCs
local unit lCs
local unitstate bCs
local texttag yCs
local unit pCs
local unit eCs
local string qCs
local real aCs
local player nCs
local unit dCs
local unit fCs
local unitstate RCs
local real TCs
if KT!=null then
set iCs=KT
set SCs=1.
set cCs=iCs
set oCs=UNIT_STATE_MANA
set OCs=SCs
set fCs=cCs
set RCs=oCs
set lCs=cCs
set bCs=oCs
call SetUnitState(fCs,RCs,GetUnitState(lCs,bCs)+OCs)
set yCs=kT
call DestroyTextTag(yCs)
set ET=300-60*UT
set pCs=KT
set TCs=GetUnitX(pCs)
set eCs=KT
set kT=jVl(TCs,GetUnitY(eCs),0.,I2S(ET),13.,255,230,0,255)
call TimerStart(xT,I2R(300-60*UT),false,cww)
set qCs="You have received 1 mana"
set aCs=10.
set dCs=KT
set nCs=GetOwningPlayer(dCs)
call DisplayTimedTextToPlayer(nCs,0.,0.,aCs,qCs)
endif
set iCs=null
set cCs=null
set oCs=null
set lCs=null
set bCs=null
set yCs=null
set pCs=null
set eCs=null
set nCs=null
set dCs=null
set fCs=null
set RCs=null
endfunction
function YDl takes nothing returns boolean
local trigger qDl
local playerunitevent aDl
local trigger nDl
local playerunitevent dDl
local integer fDl
local trigger RDl
local code TDl
set Kh=CreateTrigger()
set qDl=Kh
set aDl=EVENT_PLAYER_UNIT_ATTACKED
set nDl=qDl
set dDl=aDl
set fDl=0
loop
call TriggerRegisterPlayerUnitEvent(nDl,Player(fDl),dDl,null)
set fDl=fDl+1
exitwhen fDl==bj_MAX_PLAYER_SLOTS
endloop
set RDl=Kh
set TDl=Psw
call TriggerAddAction(RDl,TDl)
set qDl=null
set aDl=null
set nDl=null
set dDl=null
set RDl=null
return true
endfunction
function YFt takes nothing returns boolean
return true
endfunction
function YGl takes nothing returns boolean
local unit nGl=GetFilterUnit()
local unit dGl=nGl
local unit fGl
local integer RGl
local boolean TGl
if GetOwningPlayer(dGl)==Ud then
set fGl=nGl
set RGl=$41303853
set TGl=GetUnitAbilityLevel(fGl,RGl)>0
else
set TGl=false
endif
set nGl=null
set dGl=null
set fGl=null
return TGl
endfunction
function YGr takes nothing returns boolean
local string cGr
local integer oGr
local integer OGr
local integer lGr
local integer bGr
local integer yGr
local integer pGr
local integer eGr
local integer qGr
local integer aGr
local integer nGr
local integer dGr
local integer fGr
local string RGr
local integer TGr
set qW=0
set cGr="via function reference AssassinsHelpers, line 1"
set aW[qW]=cGr
set qW=qW+1
set oGr=$4861706D
set OGr=$4F677268
set lGr=$4E626263
set bGr=$55616E62
set yGr=$484D3036
set pGr=$484D3032
set eGr=$484D3067
set qGr=$4F73616D
set aGr=$55303042
set nGr=$55303043
set dGr=$4F303430
set fGr=$4F303436
set RGr="when calling asList in AssassinsHelpers, line 9"
set aW[qW]=RGr
set qW=qW+1
set TGr=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(TGr,oGr,"when calling add in LinkedList, line 412")
call x7s(TGr,OGr,"when calling add in LinkedList, line 412")
call x7s(TGr,lGr,"when calling add in LinkedList, line 412")
call x7s(TGr,bGr,"when calling add in LinkedList, line 412")
call x7s(TGr,yGr,"when calling add in LinkedList, line 412")
call x7s(TGr,pGr,"when calling add in LinkedList, line 412")
call x7s(TGr,eGr,"when calling add in LinkedList, line 412")
call x7s(TGr,qGr,"when calling add in LinkedList, line 412")
call x7s(TGr,aGr,"when calling add in LinkedList, line 412")
call x7s(TGr,nGr,"when calling add in LinkedList, line 412")
call x7s(TGr,dGr,"when calling add in LinkedList, line 412")
call x7s(TGr,fGr,"when calling add in LinkedList, line 412")
set qW=qW-1
set cl=TGr
set qW=qW-1
return true
endfunction
function YIl takes nothing returns boolean
local trigger aIl
local trigger nIl
local playerunitevent dIl
local integer fIl
local playerunitevent RIl
local code TIl
set ee=CreateTrigger()
set aIl=ee
call DisableTrigger(aIl)
set nIl=ee
set dIl=EVENT_PLAYER_UNIT_DEATH
set fIl=0
loop
call TriggerRegisterPlayerUnitEvent(nIl,Player(fIl),dIl,null)
set fIl=fIl+1
exitwhen fIl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ee,l2)
set RIl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TIl=b2
call emO(RIl,null,TIl,null)
set aIl=null
set nIl=null
set dIl=null
set RIl=null
return true
endfunction
function YLO takes nothing returns nothing
set rr=true
endfunction
function YMb takes nothing returns boolean
return true
endfunction
function YOc takes nothing returns boolean
local unit tOc=GetFilterUnit()
local unit iOc=tOc
local unit SOc
local player cOc
local unit oOc
local integer OOc
local unit lOc
local unit bOc
local unit yOc
local unittype pOc
local unit eOc
local integer qOc
local boolean aOc
local boolean nOc
local boolean dOc
local boolean fOc
local boolean ROc
local boolean TOc
if UnitAlive(iOc)==true then
set SOc=tOc
set cOc=hg
set aOc=(SOc!=null and IsUnitAlly(SOc,cOc))==false
else
set aOc=false
endif
if aOc then
set oOc=tOc
set OOc=$41303043
set nOc=GetUnitAbilityLevel(oOc,OOc)==0
else
set nOc=false
endif
if nOc then
set lOc=tOc
set dOc=GetUnitTypeId(lOc)!=$78303130
else
set dOc=false
endif
if dOc then
set bOc=tOc
set fOc=GetUnitTypeId(bOc)!=$78303131
else
set fOc=false
endif
if fOc then
set yOc=tOc
set pOc=UNIT_TYPE_STRUCTURE
set ROc=IsUnitType(yOc,pOc)==true
else
set ROc=false
endif
if ROc then
set eOc=tOc
set qOc=$4176756C
set TOc=GetUnitAbilityLevel(eOc,qOc)==0
else
set TOc=false
endif
set tOc=null
set iOc=null
set SOc=null
set cOc=null
set oOc=null
set lOc=null
set bOc=null
set yOc=null
set pOc=null
set eOc=null
return TOc
endfunction
function Iew takes string jpw returns nothing
local unit xpw
local player vpw
local unit mpw
local integer Qpw
local unit Wpw
local player Epw
local unit Zpw
local integer Upw
local player Ipw
local integer Ppw
local player Apw
local player Dpw
local integer Hpw
local unit Jpw
local string Kpw
local real Lpw
local string Xpw
local real Cpw
local sound Vpw
local string Bpw
local integer Npw
local real Mpw
local integer wew
local string uew
local unit rew
local string sew
local real tew
local string iew
local real Sew
local sound cew
local string oew
local integer Oew
local real lew
local integer bew
local string yew
local unit pew
local string eew
local real qew
local string aew
local real dew
local sound few
local string Rew
local integer Tew
local real Yew
local integer Gew
local string gew
local unit hew
local unit Few
local string kew
local real jew
local string xew
local real vew
local sound mew
local string Qew
local integer Wew
local real Eew
local integer Zew
local string Uew
set aW[qW]=jpw
set qW=qW+1
if GetSpellAbilityId()==$41304F4C then
set xpw=GetTriggerUnit()
set Jpw=xpw
set vpw=GetOwningPlayer(Jpw)
set mpw=GetSpellTargetUnit()
set Kpw=fEb(vpw)+" has fired Ultimate weapon!"
set Lpw=10.
set Xpw=Kpw
set Cpw=Lpw
call DisplayTimedTextToPlayer(IY,0.,0.,Cpw,Xpw)
set Vpw=bj_questWarningSound
call StartSound(Vpw)
set Bpw="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate in LaunchUltimate, line 107"
set aW[qW]=Bpw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Npw=fF
set RF[Npw]=823
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate.","when calling error in LaunchUltimate, line 107")
set Npw=0
endif
else
set dF=dF-1
set Npw=nF[dF]
set RF[Npw]=823
endif
set qW=qW-1
set Qpw=Npw
set mv[Qpw]=vpw
set Qv[Qpw]=mpw
set Mpw=3.
set wew=Qpw
set uew="when calling doAfter in LaunchUltimate, line 107"
set aW[qW]=uew
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Mpw,wew,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if GetSpellAbilityId()==$41323647 then
set Wpw=GetTriggerUnit()
set rew=Wpw
set Epw=GetOwningPlayer(rew)
set Zpw=GetSpellTargetUnit()
set sew=fEb(Epw)+" has fired Ultimate weapon!"
set tew=10.
set iew=sew
set Sew=tew
call DisplayTimedTextToPlayer(IY,0.,0.,Sew,iew)
set cew=bj_questWarningSound
call StartSound(cew)
set oew="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate in LaunchUltimate, line 116"
set aW[qW]=oew
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Oew=fF
set RF[Oew]=824
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate.","when calling error in LaunchUltimate, line 116")
set Oew=0
endif
else
set dF=dF-1
set Oew=nF[dF]
set RF[Oew]=824
endif
set qW=qW-1
set Upw=Oew
set Wv[Upw]=Epw
set Ev[Upw]=Zpw
set lew=3.
set bew=Upw
set yew="when calling doAfter in LaunchUltimate, line 116"
set aW[qW]=yew
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),lew,bew,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if GetSpellAbilityId()==$41304D4D then
set pew=GetTriggerUnit()
set Ipw=GetOwningPlayer(pew)
set eew=fEb(Ipw)+" has fired Ultimate weapon!"
set qew=10.
set aew=eew
set dew=qew
call DisplayTimedTextToPlayer(IY,0.,0.,dew,aew)
set few=bj_questWarningSound
call StartSound(few)
set Rew="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate in LaunchUltimate, line 132"
set aW[qW]=Rew
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Tew=fF
set RF[Tew]=825
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate.","when calling error in LaunchUltimate, line 132")
set Tew=0
endif
else
set dF=dF-1
set Tew=nF[dF]
set RF[Tew]=825
endif
set qW=qW-1
set Ppw=Tew
set Zv[Ppw]=Ipw
set Yew=3.
set Gew=Ppw
set gew="when calling doAfter in LaunchUltimate, line 132"
set aW[qW]=gew
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Yew,Gew,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if GetSpellAbilityId()==$41304F47 then
set hew=GetTriggerUnit()
set Apw=GetOwningPlayer(hew)
set Few=GetSpellTargetUnit()
set Dpw=GetOwningPlayer(Few)
set kew=fEb(Apw)+" has fired Ultimate weapon!"
set jew=10.
set xew=kew
set vew=jew
call DisplayTimedTextToPlayer(IY,0.,0.,vew,xew)
set mew=bj_questWarningSound
call StartSound(mew)
set Qew="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate in LaunchUltimate, line 143"
set aW[qW]=Qew
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Wew=fF
set RF[Wew]=826
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_LaunchUltimate.","when calling error in LaunchUltimate, line 143")
set Wew=0
endif
else
set dF=dF-1
set Wew=nF[dF]
set RF[Wew]=826
endif
set qW=qW-1
set Hpw=Wew
set Uv[Hpw]=Dpw
set Iv[Hpw]=Apw
set Eew=3.
set Zew=Hpw
set Uew="when calling doAfter in LaunchUltimate, line 143"
set aW[qW]=Uew
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Eew,Zew,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set xpw=null
set vpw=null
set mpw=null
set Wpw=null
set Epw=null
set Zpw=null
set Ipw=null
set Apw=null
set Dpw=null
set Jpw=null
set Vpw=null
set rew=null
set cew=null
set pew=null
set few=null
set hew=null
set Few=null
set mew=null
endfunction
function YPi takes nothing returns nothing
set qW=0
call Iew("via function reference LaunchUltimate, line 100")
endfunction
function YPs takes nothing returns boolean
local playerunitevent yPs
local code pPs
local playerunitevent ePs
local code qPs
local trigger aPs
local rect nPs
local region dPs
local trigger fPs
local boolexpr RPs
local trigger TPs
set dG=CreateTrigger()
call CreateTrigger()
set yPs=EVENT_PLAYER_UNIT_SPELL_FINISH
set pPs=mww
call emO(yPs,null,pPs,null)
set ePs=EVENT_PLAYER_UNIT_ISSUED_ORDER
set qPs=Qww
call emO(ePs,null,qPs,null)
set aPs=dG
set nPs=bj_mapInitialPlayableArea
set dPs=CreateRegion()
call RegionAddRect(dPs,nPs)
call TriggerRegisterEnterRegion(aPs,dPs,null)
set fPs=dG
set RPs=Condition(Www)
call TriggerAddCondition(fPs,RPs)
set TPs=dG
call DisableTrigger(TPs)
set yPs=null
set ePs=null
set aPs=null
set nPs=null
set dPs=null
set fPs=null
set RPs=null
set TPs=null
return true
endfunction
function YRl takes nothing returns boolean
local trigger dRl
local trigger fRl
local playerunitevent RRl
local integer TRl
set pp=CreateTrigger()
set dRl=pp
call DisableTrigger(dRl)
set fRl=pp
set RRl=EVENT_PLAYER_HERO_LEVEL
set TRl=0
loop
call TriggerRegisterPlayerUnitEvent(fRl,Player(TRl),RRl,null)
set TRl=TRl+1
exitwhen TRl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(pp,n4)
set dRl=null
set fRl=null
set RRl=null
return true
endfunction
function YUw takes nothing returns boolean
return true
endfunction
function YVc takes nothing returns boolean
local trigger dVc
local trigger fVc
local playerunitevent RVc
local integer TVc
set pl=CreateTrigger()
set dVc=pl
call DisableTrigger(dVc)
set fVc=pl
set RVc=EVENT_PLAYER_UNIT_DEATH
set TVc=0
loop
call TriggerRegisterPlayerUnitEvent(fVc,Player(TVc),RVc,null)
set TVc=TVc+1
exitwhen TVc==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(pl,r3)
set dVc=null
set fVc=null
set RVc=null
return true
endfunction
function YXt takes nothing returns boolean
return true
endfunction
function Yhw takes nothing returns boolean
local playerunitevent Rhw=EVENT_PLAYER_HERO_LEVEL
local code Thw=ON
call emO(Rhw,null,Thw,null)
set Rhw=null
return true
endfunction
function Yib takes nothing returns nothing
local unit aib=GetTriggerUnit()
local unit dib=aib
local integer nib
local unit fib
local integer Rib
local unit Tib
if GetUnitTypeId(dib)==$4F303432 then
set fib=aib
set Rib=$41323032
set nib=GetUnitAbilityLevel(fib,Rib)
set Tib=aib
call SetPlayerTechResearched(GetOwningPlayer(Tib),$52303751,nib)
endif
set aib=null
set dib=null
set fib=null
set Tib=null
endfunction
function Yiw takes nothing returns boolean
local trigger eiw
local playerunitevent qiw
local trigger aiw
local playerunitevent niw
local integer diw
local trigger fiw
local code Riw
local trigger Tiw
set Yn=CreateTrigger()
set eiw=Yn
set qiw=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aiw=eiw
set niw=qiw
set diw=0
loop
call TriggerRegisterPlayerUnitEvent(aiw,Player(diw),niw,null)
set diw=diw+1
exitwhen diw==bj_MAX_PLAYER_SLOTS
endloop
set fiw=Yn
set Riw=c6
call TriggerAddAction(fiw,Riw)
set Tiw=Yn
call DisableTrigger(Tiw)
set eiw=null
set qiw=null
set aiw=null
set niw=null
set fiw=null
set Tiw=null
return true
endfunction
function Ykc takes nothing returns nothing
local unit tkc=GetKillingUnit()
local unit ckc=GetDyingUnit()
local player ikc
local integer Skc
local unit okc
local player Okc
local player lkc
local integer bkc
local player ykc
local playerstate pkc
local integer ekc
local player qkc
local playerstate akc
local string nkc
local real dkc
local player fkc
local player Rkc
local playerstate Tkc
if GetUnitTypeId(ckc)==$484D3031 then
set okc=tkc
set ikc=GetOwningPlayer(okc)
set Okc=ikc
set Skc=GetPlayerId(Okc)-4
set lkc=Player(Skc)
set bkc=5000
set ykc=lkc
set pkc=PLAYER_STATE_RESOURCE_GOLD
set ekc=bkc
set Rkc=ykc
set Tkc=pkc
set qkc=ykc
set akc=pkc
call SetPlayerState(Rkc,Tkc,GetPlayerState(qkc,akc)+ekc)
set nkc="|cffFFFF00Your give 5000 gold!|r"
set dkc=10.
set fkc=Player(Skc)
call DisplayTimedTextToPlayer(fkc,0.,0.,dkc,nkc)
call UuS(tkc,5000)
set hr[Skc]=hr[Skc]+5000
set Fr[Skc]=Fr[Skc]+5000
set Cr[Skc]=Cr[Skc]+5000
endif
set tkc=null
set ikc=null
set ckc=null
set okc=null
set Okc=null
set lkc=null
set ykc=null
set pkc=null
set qkc=null
set akc=null
set fkc=null
set Rkc=null
set Tkc=null
endfunction
function Yky takes nothing returns nothing
local unit pky=GetLevelingUnit()
local unit eky=pky
local unit qky
local integer aky
local unit nky
local integer dky
local unit fky
local integer Rky
local boolean Tky
if GetUnitTypeId(eky)==$55303048 then
set qky=pky
set aky=$62726973
set Tky=RTS(qky,aky)!=null==true
else
set Tky=false
endif
if Tky then
set nky=Ze
set dky=$41313451
if GetUnitAbilityLevel(nky,dky)==0 then
set fky=Ze
set Rky=$41313451
call UnitAddAbility(fky,Rky)
endif
endif
set pky=null
set eky=null
set qky=null
set nky=null
set fky=null
endfunction
function YmO takes nothing returns nothing
local unit qmO=GetTriggerUnit()
local integer amO=GetHeroLevel(qmO)
local unit nmO=qmO
local unit dmO
local unit fmO
local boolean RmO
local boolean TmO
if GetUnitTypeId(nmO)==$4867616D then
set RmO=true
else
set dmO=qmO
set RmO=GetUnitTypeId(dmO)==$4830314A
endif
if RmO then
set TmO=true
else
set fmO=qmO
set TmO=GetUnitTypeId(fmO)==$55303042
endif
if TmO then
if amO>=4 and amO<12 then
call SetPlayerTechResearched(GetOwningPlayer(qmO),$52303254,1)
endif
if amO>=12 and amO<20 then
call SetPlayerTechResearched(GetOwningPlayer(qmO),$52303254,2)
endif
if amO>=28 then
call SetPlayerTechResearched(GetOwningPlayer(qmO),$52303254,3)
endif
endif
set qmO=null
set nmO=null
set dmO=null
set fmO=null
endfunction
function YoS takes nothing returns nothing
local unit CcS
local unit VcS
local unit BcS
local unit NcS
local real McS
local unit woS
local unitstate uoS
local real roS
local unit soS
local unitstate toS
local unit ioS
local unit SoS
local unit coS
local unit ooS
local unit OoS
local unit loS
local unit boS
local unit yoS
local unit poS
local unit eoS
local unitstate qoS
local boolean aoS
local boolean noS
local boolean doS
local boolean foS
local player RoS
local real ToS
if lg!=null then
set CcS=GetDyingUnit()
set BcS=CcS
if GetUnitTypeId(BcS)==$65777370 then
set NcS=lg
set McS=1.
set woS=NcS
set uoS=UNIT_STATE_MANA
set roS=McS
set eoS=woS
set qoS=uoS
set soS=woS
set toS=uoS
call SetUnitState(eoS,qoS,GetUnitState(soS,toS)+roS)
endif
set ioS=CcS
if GetPlayerTechCount(GetOwningPlayer(ioS),$5267666F,true)==0 then
set SoS=CcS
if GetUnitTypeId(SoS)==$65646F63 then
set aoS=true
else
set coS=CcS
set aoS=GetUnitTypeId(coS)==$65617263
endif
if aoS then
set noS=true
else
set ooS=CcS
set noS=GetUnitTypeId(ooS)==$65646F74
endif
if noS then
set doS=true
else
set OoS=CcS
set doS=GetUnitTypeId(OoS)==$6573656E
endif
if doS then
set foS=true
else
set loS=CcS
set foS=GetUnitTypeId(loS)==$6E6D7065
endif
if foS then
if GetRandomInt(1,100)<=8 then
set boS=CcS
set RoS=GetOwningPlayer(boS)
set yoS=CcS
set ToS=GetUnitX(yoS)
set poS=CcS
set VcS=CreateUnit(RoS,$65777370,ToS,GetUnitY(poS),0.)
call dYr(VcS)
endif
endif
endif
endif
set CcS=null
set VcS=null
set BcS=null
set NcS=null
set woS=null
set uoS=null
set soS=null
set toS=null
set ioS=null
set SoS=null
set coS=null
set ooS=null
set OoS=null
set loS=null
set boS=null
set yoS=null
set poS=null
set eoS=null
set qoS=null
set RoS=null
endfunction
function Ypi takes nothing returns nothing
local unit qpi=GetLevelingUnit()
local unit api=qpi
local unit npi
local integer dpi
local unit fpi
local trigger Rpi
local boolean Tpi
if GetUnitTypeId(api)==$55303048 then
set npi=qpi
set dpi=$62726970
set Tpi=RTS(npi,dpi)!=null==true
else
set Tpi=false
endif
if Tpi then
set fpi=qpi
call SetPlayerTechResearched(GetOwningPlayer(fpi),$5230365A,1)
set Rpi=Ky
call EnableTrigger(Rpi)
endif
set qpi=null
set api=null
set npi=null
set fpi=null
set Rpi=null
endfunction
function Yrl takes nothing returns boolean
local playerunitevent drl=EVENT_PLAYER_UNIT_SPELL_CAST
local code frl=g7
local playerunitevent Rrl
local code Trl
call emO(drl,null,frl,null)
set Rrl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Trl=h7
call emO(Rrl,null,Trl,null)
set drl=null
set Rrl=null
return true
endfunction
function Yxy takes nothing returns nothing
local unit fxy=GetDyingUnit()
local timer Rxy
local timer Txy
if fxy==XO then
set CO=false
set Rxy=VO
call PauseTimer(Rxy)
set Txy=VO
call DestroyTimer(Txy)
set VO=null
set XO=null
endif
set fxy=null
set Rxy=null
set Txy=null
endfunction
function Z7b takes nothing returns nothing
local unit Y7b=GetEnteringUnit()
local unit g7b=Y7b
local integer G7b=GetUnitTypeId(g7b)
local integer h7b
local unit F7b
local unit k7b
local integer j7b
local unit x7b
local integer v7b
local unit m7b
local integer Q7b
local unit W7b
local integer E7b
if G7b==$484D3067 or G7b==$484D3066 or G7b==$484D3064 or G7b==$484D3065 then
set h7b=$41706976
set F7b=Y7b
if GetUnitAbilityLevel(F7b,h7b)==0 then
set k7b=Y7b
set j7b=$41706976
call UnitAddAbility(k7b,j7b)
endif
endif
if G7b==$6E656E66 or G7b==$6E616E6F or G7b==$6E627267 or G7b==$6E6D6564 then
set x7b=Y7b
set v7b=$41706976
call UnitAddAbility(x7b,v7b)
set m7b=Y7b
set Q7b=$4130424F
call UnitAddAbility(m7b,Q7b)
endif
if G7b==$6E656E66 or G7b==$6E616E6F or G7b==$6E627267 or G7b==$6E6D6564 or G7b==$7830317D or G7b==$7830317E or G7b==$6E303141 then
set W7b=Y7b
set E7b=$41706976
call UnitAddAbility(W7b,E7b)
endif
set Y7b=null
set g7b=null
set F7b=null
set k7b=null
set x7b=null
set m7b=null
set W7b=null
endfunction
function Z7w takes nothing returns nothing
local unit v7w
local unit m7w
local unit Q7w
local integer W7w
local boolean E7w
if yO!=null then
set v7w=GetDyingUnit()
if v7w==pO then
set E7w=true
else
set m7w=v7w
set E7w=GetUnitTypeId(m7w)==$55303044
endif
if E7w then
set Q7w=yO
set W7w=$41313347
call UnitRemoveAbility(Q7w,W7w)
set pO=null
endif
endif
set v7w=null
set m7w=null
set Q7w=null
endfunction
function Z8w takes nothing returns boolean
local unit Q8w=GetTriggerUnit()
local integer W8w=0
local integer E8w=0
loop
if UnitItemInSlot(Q8w,W8w)!=null then
set E8w=E8w+1
endif
set W8w=W8w+1
exitwhen W8w>=bj_MAX_INVENTORY
endloop
set Q8w=null
return E8w>1 and GetItemLevel(GetManipulatedItem())==2
endfunction
function Z9l takes nothing returns nothing
local integer v9l=GetResearched()
local player m9l
local integer Q9l
local player W9l
local trigger E9l
if v9l==$524D3165 then
set m9l=GetTriggerPlayer()
set Q9l=$524D3165
set W9l=m9l
if GetPlayerTechCount(W9l,Q9l,true)==1 then
set E9l=GT
call EnableTrigger(E9l)
endif
endif
set m9l=null
set W9l=null
set E9l=null
endfunction
function Z9r takes nothing returns boolean
return true
endfunction
function ZBc takes nothing returns nothing
local group fBc=CreateGroup()
local filterfunc RBc=Filter(v9)
local unit TBc
local group YBc
local integer GBc
local group gBc
local group hBc
local unit FBc
local unit kBc
local string jBc
local real xBc
local real vBc
local group mBc
local boolexpr QBc
local real WBc
local real EBc
call GroupEnumUnitsInRect(fBc,bj_mapInitialPlayableArea,RBc)
set YBc=fBc
loop
set gBc=YBc
exitwhen not (FirstOfGroup(gBc)!=null)
set hBc=YBc
set FBc=FirstOfGroup(hBc)
call GroupRemoveUnit(hBc,FBc)
set TBc=FBc
set GBc=LoadInteger(qu,GetHandleId(TBc),$6D6F7665)
set kBc=TBc
set jBc="attack"
set WBc=Qw[GBc]
set EBc=Ww[GBc]
set xBc=WBc
set vBc=EBc
call IssuePointOrder(kBc,jBc,xBc,vBc)
endloop
set mBc=fBc
call GroupClear(mBc)
set QBc=RBc
call DestroyBoolExpr(QBc)
set fBc=null
set RBc=null
set TBc=null
set YBc=null
set gBc=null
set hBc=null
set FBc=null
set kBc=null
set mBc=null
set QBc=null
endfunction
function ZBt takes nothing returns boolean
local playerunitevent WBt=EVENT_PLAYER_UNIT_SPELL_CAST
local code EBt=D7
call emO(WBt,null,EBt,null)
set WBt=null
return true
endfunction
function ZBy takes nothing returns boolean
call CreateSound("VulperaMelee.mp3",false,false,false,10,10,"DefaultEAXON")
call CreateSound("VulperaRange.mp3",false,false,false,10,10,"DefaultEAXON")
call CreateSound("VulperaMage.mp3",false,false,false,10,10,"DefaultEAXON")
call CreateSound("VulperaSiege.mp3",false,false,false,10,10,"DefaultEAXON")
return true
endfunction
function ZCO takes nothing returns nothing
local integer FLO
local player kLO
local unit jLO
local player xLO
local real vLO
local real mLO
local real QLO
local unit WLO
local unit ELO
local unit ZLO
local unit ULO
local integer ILO
local unit PLO
local integer ALO
local unit DLO
local integer HLO
local unit JLO
local integer KLO
local unit LLO
local integer XLO
local unit CLO
local integer VLO
local unit BLO
local unit NLO
local integer MLO
local string wXO
local real uXO
local player rXO
local unit sXO
local unit tXO
local integer iXO
local unit SXO
local integer cXO
local unit oXO
local integer OXO
local unit lXO
local integer bXO
local unit yXO
local integer pXO
local unit eXO
local integer qXO
local string aXO
local real nXO
local player dXO
local unit fXO
local unit RXO
local integer TXO
local unit YXO
local integer GXO
local unit gXO
local integer hXO
local unit FXO
local integer kXO
local unit jXO
local integer xXO
local unit vXO
local integer mXO
local string QXO
local real WXO
local player EXO
local unit ZXO
local unit UXO
local integer IXO
local unit PXO
local integer AXO
local unit DXO
local player HXO
local unit JXO
local unit KXO
local integer LXO
local unit XXO
local integer CXO
local unit VXO
local player BXO
local unit NXO
local unit MXO
local integer wCO
local unit uCO
local integer rCO
local unit sCO
local player tCO
local unit iCO
local string SCO
local real cCO
local player oCO
local unit OCO
local unit lCO
local integer bCO
local unit yCO
local integer pCO
local unit eCO
local integer qCO
local unit aCO
local integer nCO
local unit dCO
local integer fCO
local unit RCO
local integer TCO
local string YCO
local real GCO
local player gCO
local unit hCO
local timer FCO
local timer kCO
local real jCO
local real xCO
local real vCO
local real mCO
local real QCO
local real WCO
local real ECO
if sl!=5 then
set sl=sl+1
set jLO=wl
set kLO=GetOwningPlayer(jLO)
set FLO=GetPlayerId(kLO)
call SetPlayerTechResearched(Player(FLO),$52303943,sl)
call SetPlayerTechResearched(Player(FLO+4),$52303943,sl)
set WLO=wl
set xLO=GetOwningPlayer(WLO)
set ELO=wl
set vLO=GetUnitX(ELO)
set ZLO=wl
set mLO=GetUnitY(ZLO)
set QLO=10.
if GetLocalPlayer()==xLO then
call PingMinimap(vLO,mLO,QLO)
endif
endif
if sl==1 then
set ULO=wl
set ILO=$41323846
if GetUnitAbilityLevel(ULO,ILO)==1 then
set PLO=wl
set ALO=$41323849
call UnitAddAbility(PLO,ALO)
endif
set DLO=wl
set HLO=$41323847
if GetUnitAbilityLevel(DLO,HLO)==1 then
set JLO=wl
set KLO=$4132384D
call UnitAddAbility(JLO,KLO)
endif
set LLO=wl
set XLO=$41323848
if GetUnitAbilityLevel(LLO,XLO)==1 then
set CLO=wl
set VLO=$41323852
call UnitAddAbility(CLO,VLO)
endif
set il=300
set BLO=wl
set jCO=GetUnitX(BLO)
set NLO=wl
set QCO=jCO
set WCO=GetUnitY(NLO)
set ECO=0.
set xCO=QCO
set vCO=WCO
set mCO=ECO
set MLO=il
set tl=jVl(xCO,vCO,mCO,I2S(MLO),13.,0,191,255,255)
call TimerStart(rl,300.,false,PM)
set wXO="You up Tier 1"
set uXO=10.
set sXO=wl
set rXO=GetOwningPlayer(sXO)
call DisplayTimedTextToPlayer(rXO,0.,0.,uXO,wXO)
endif
if sl==2 then
set tXO=wl
set iXO=$41323846
if GetUnitAbilityLevel(tXO,iXO)==1 then
set SXO=wl
set cXO=$4132384A
call UnitAddAbility(SXO,cXO)
endif
set oXO=wl
set OXO=$41323847
if GetUnitAbilityLevel(oXO,OXO)==1 then
set lXO=wl
set bXO=$4132384E
call UnitAddAbility(lXO,bXO)
endif
set yXO=wl
set pXO=$41323848
if GetUnitAbilityLevel(yXO,pXO)==1 then
set eXO=wl
set qXO=$41323851
call UnitAddAbility(eXO,qXO)
endif
set aXO="You up Tier 2"
set nXO=10.
set fXO=wl
set dXO=GetOwningPlayer(fXO)
call DisplayTimedTextToPlayer(dXO,0.,0.,nXO,aXO)
set il=600
call TimerStart(rl,600.,false,PM)
endif
if sl==3 then
set RXO=wl
set TXO=$41323846
if GetUnitAbilityLevel(RXO,TXO)==1 then
set YXO=wl
set GXO=$4132384B
call UnitAddAbility(YXO,GXO)
endif
set gXO=wl
set hXO=$41323847
if GetUnitAbilityLevel(gXO,hXO)==1 then
set FXO=wl
set kXO=$4132384F
call UnitAddAbility(FXO,kXO)
endif
set jXO=wl
set xXO=$41323848
if GetUnitAbilityLevel(jXO,xXO)==1 then
set vXO=wl
set mXO=$41323853
call UnitAddAbility(vXO,mXO)
endif
set QXO="You up Tier 3"
set WXO=10.
set ZXO=wl
set EXO=GetOwningPlayer(ZXO)
call DisplayTimedTextToPlayer(EXO,0.,0.,WXO,QXO)
set il=900
call TimerStart(rl,900.,false,PM)
endif
if sl==4 then
set UXO=wl
set IXO=$41323846
if GetUnitAbilityLevel(UXO,IXO)==1 then
set PXO=wl
set AXO=$4132384C
call UnitAddAbility(PXO,AXO)
set DXO=wl
call SetPlayerTechResearched(GetOwningPlayer(DXO),$52303944,1)
set JXO=wl
set HXO=GetOwningPlayer(JXO)
call SetPlayerTechResearched(Player(GetPlayerId(HXO)+4),$52303944,1)
endif
set KXO=wl
set LXO=$41323847
if GetUnitAbilityLevel(KXO,LXO)==1 then
set XXO=wl
set CXO=$41323850
call UnitAddAbility(XXO,CXO)
set VXO=wl
call SetPlayerTechResearched(GetOwningPlayer(VXO),$52303945,1)
set NXO=wl
set BXO=GetOwningPlayer(NXO)
call SetPlayerTechResearched(Player(GetPlayerId(BXO)+4),$52303945,1)
endif
set MXO=wl
set wCO=$41323848
if GetUnitAbilityLevel(MXO,wCO)==1 then
set uCO=wl
set rCO=$41323854
call UnitAddAbility(uCO,rCO)
set sCO=wl
call SetPlayerTechResearched(GetOwningPlayer(sCO),$52303946,1)
set iCO=wl
set tCO=GetOwningPlayer(iCO)
call SetPlayerTechResearched(Player(GetPlayerId(tCO)+4),$52303946,1)
endif
set SCO="You up Tier 4"
set cCO=10.
set OCO=wl
set oCO=GetOwningPlayer(OCO)
call DisplayTimedTextToPlayer(oCO,0.,0.,cCO,SCO)
set il=1200
call TimerStart(rl,1200.,false,PM)
endif
if sl==5 then
set lCO=wl
set bCO=$41323846
if GetUnitAbilityLevel(lCO,bCO)==1 then
set yCO=wl
set pCO=$41323855
call UnitAddAbility(yCO,pCO)
endif
set eCO=wl
set qCO=$41323847
if GetUnitAbilityLevel(eCO,qCO)==1 then
set aCO=wl
set nCO=$41323934
call UnitAddAbility(aCO,nCO)
endif
set dCO=wl
set fCO=$41323848
if GetUnitAbilityLevel(dCO,fCO)==1 then
set RCO=wl
set TCO=$41323935
call UnitAddAbility(RCO,TCO)
endif
set YCO="You get Bonelord!"
set GCO=10.
set hCO=wl
set gCO=GetOwningPlayer(hCO)
call DisplayTimedTextToPlayer(gCO,0.,0.,GCO,YCO)
set FCO=rl
call PauseTimer(FCO)
set kCO=rl
call DestroyTimer(kCO)
set rl=null
endif
set kLO=null
set jLO=null
set xLO=null
set WLO=null
set ELO=null
set ZLO=null
set ULO=null
set PLO=null
set DLO=null
set JLO=null
set LLO=null
set CLO=null
set BLO=null
set NLO=null
set rXO=null
set sXO=null
set tXO=null
set SXO=null
set oXO=null
set lXO=null
set yXO=null
set eXO=null
set dXO=null
set fXO=null
set RXO=null
set YXO=null
set gXO=null
set FXO=null
set jXO=null
set vXO=null
set EXO=null
set ZXO=null
set UXO=null
set PXO=null
set DXO=null
set HXO=null
set JXO=null
set KXO=null
set XXO=null
set VXO=null
set BXO=null
set NXO=null
set MXO=null
set uCO=null
set sCO=null
set tCO=null
set iCO=null
set oCO=null
set OCO=null
set lCO=null
set yCO=null
set eCO=null
set aCO=null
set dCO=null
set RCO=null
set gCO=null
set hCO=null
set FCO=null
set kCO=null
endfunction
function ZCl takes nothing returns nothing
local unit gCl=GetTriggerUnit()
local unit hCl
local integer FCl
local unit kCl
local unit jCl
local integer xCl
local unit vCl
local integer mCl
local unit QCl
local integer WCl
local integer ECl
if GetUnitTypeId(gCl)==$6F303247 then
set ab=60
set eb=2
set hCl=pb
set FCl=$41305937
call UnitAddAbility(hCl,FCl)
endif
set kCl=GetTriggerUnit()
if GetUnitTypeId(kCl)==$6F303248 then
set ab=120
set jCl=pb
set xCl=$41305A4B
call UnitAddAbility(jCl,xCl)
set vCl=pb
set mCl=$41305A4A
call UnitAddAbility(vCl,mCl)
set QCl=pb
set WCl=$41305937
set ECl=2
call SetUnitAbilityLevel(QCl,WCl,ECl)
set eb=3
endif
set gCl=null
set hCl=null
set kCl=null
set jCl=null
set vCl=null
set QCl=null
endfunction
function ZDy takes nothing returns boolean
local unit FDy=GetFilterUnit()
local unit kDy=FDy
local player jDy=Py
local unit xDy
local unittype vDy
local unit mDy
local integer QDy
local boolean WDy
local boolean EDy
if kDy!=null and IsUnitAlly(kDy,jDy) then
set xDy=FDy
set vDy=UNIT_TYPE_STRUCTURE
set WDy=IsUnitType(xDy,vDy)==true
else
set WDy=false
endif
if WDy then
set mDy=FDy
set QDy=$4176756C
set EDy=GetUnitAbilityLevel(mDy,QDy)==0
else
set EDy=false
endif
set FDy=null
set kDy=null
set jDy=null
set xDy=null
set vDy=null
set mDy=null
return EDy
endfunction
function ZHu takes nothing returns boolean
return true
endfunction
function qib takes string Ztb returns boolean
local integer Utb
local player Itb
local integer Ptb
local real Atb
local real Dtb
local real Htb
local real Jtb
local integer Ktb
local integer Ltb
local string Xtb
local integer Ctb
local integer Vtb
local integer Btb
local string Ntb
local integer Mtb
local string wib
local integer uib
local integer rib
local string sib
local real tib
local integer iib
local string Sib
local player cib
local integer oib
local real Oib
local real lib
local real bib
local real yib
local real pib
local real eib
set aW[qW]=Ztb
set qW=qW+1
set CY=CreateGroup()
set Itb=yl
set Ptb=$7864756D
set bib=0.
set yib=0.
set Atb=bib
set Dtb=yib
set pib=0.
set Htb=pib
set cib=Itb
set oib=Ptb
set Oib=Atb
set lib=Dtb
set eib=Htb
set Jtb=eib
set VY=CreateUnit(cib,oib,Oib,lib,Jtb*57.295779513)
if VY==null then
set Ktb=$7864756D
set Ltb=Ktb
set Xtb=""
set Ctb=Ltb
set Vtb=0
loop
exitwhen Vtb>3
set Btb=ModuloInteger(Ctb,256)
set Ctb=Ctb/256
set Ntb=".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
set Mtb=Btb
set Xtb=SubString(Ntb,Mtb,Mtb+1)+Xtb
set Vtb=Vtb+1
endloop
call L8c("DUMMY_UNITID ("+Xtb+") not added correctly to the map.","when calling error in Preloader, line 53")
endif
if true then
set wib="when calling alloc_CallbackSingle_nullTimer_Preloader in Preloader, line 55"
set aW[qW]=wib
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set uib=fF
set RF[uib]=849
else
call L8c("Out of memory: Could not create CallbackSingle_nullTimer_Preloader.","when calling error in Preloader, line 55")
set uib=0
endif
else
set dF=dF-1
set uib=nF[dF]
set RF[uib]=849
endif
set qW=qW-1
set Utb=uib
set rib=Utb
set sib="when calling nullTimer in Preloader, line 55"
set aW[qW]=sib
set qW=qW+1
set tib=0.
set iib=rib
set Sib="when calling doAfter in ClosureTimers, line 33"
set aW[qW]=Sib
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),tib,iib,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endif
set qW=qW-1
set Itb=null
set cib=null
return true
endfunction
function ZJc takes nothing returns boolean
set qW=0
return qib("via function reference Preloader, line 1")
endfunction
function ZKl takes nothing returns boolean
local trigger fKl=CreateTrigger()
local integer RKl=0
local trigger TKl
local integer YKl
local trigger GKl
local player gKl
local string hKl
local boolean FKl
local trigger kKl
local boolexpr jKl
local trigger xKl
local player vKl
local string mKl
local boolean QKl
local trigger WKl
local boolexpr EKl
loop
exitwhen RKl>3
set GKl=fKl
set gKl=Player(RKl)
set hKl="-clearItem"
set FKl=true
call TriggerRegisterPlayerChatEvent(GKl,gKl,hKl,FKl)
set RKl=RKl+1
endloop
set kKl=fKl
set jKl=Condition(A3)
call TriggerAddCondition(kKl,jKl)
set TKl=CreateTrigger()
set YKl=0
loop
exitwhen YKl>3
set xKl=TKl
set vKl=Player(YKl)
set mKl="-heroID"
set QKl=true
call TriggerRegisterPlayerChatEvent(xKl,vKl,mKl,QKl)
set YKl=YKl+1
endloop
set WKl=TKl
set EKl=Condition(D3)
call TriggerAddCondition(WKl,EKl)
set fKl=null
set TKl=null
set GKl=null
set gKl=null
set kKl=null
set jKl=null
set xKl=null
set vKl=null
set WKl=null
set EKl=null
return true
endfunction
function ZLr takes nothing returns boolean
set PY=ConvertPlayerColor(24)
set AY=ConvertPlayerColor(25)
set DY=ConvertPlayerColor(26)
set HY=ConvertPlayerColor(27)
set JY[0]=PLAYER_COLOR_RED
set JY[1]=PLAYER_COLOR_BLUE
set JY[2]=PLAYER_COLOR_CYAN
set JY[3]=PLAYER_COLOR_PURPLE
set JY[4]=PLAYER_COLOR_YELLOW
set JY[5]=PLAYER_COLOR_ORANGE
set JY[6]=PLAYER_COLOR_GREEN
set JY[7]=PLAYER_COLOR_PINK
set JY[8]=PLAYER_COLOR_LIGHT_GRAY
set JY[9]=PLAYER_COLOR_LIGHT_BLUE
set JY[10]=PLAYER_COLOR_AQUA
set JY[11]=PLAYER_COLOR_BROWN
set JY[12]=PY
set JY[13]=AY
set JY[14]=DY
set JY[15]=HY
return true
endfunction
function ZMi takes nothing returns boolean
return true
endfunction
function w5o takes string r4o returns nothing
local integer s4o
local unit t4o
local unit i4o
local integer S4o
local integer c4o
local group o4o
local filterfunc O4o
local unit l4o
local unit b4o
local integer y4o
local group p4o
local filterfunc e4o
local unit q4o
local unit a4o
local integer n4o
local unit d4o
local unit f4o
local integer R4o
local unit T4o
local integer Y4o
local string G4o
local integer g4o
local real h4o
local integer F4o
local string k4o
local unit j4o
local unit x4o
local unit v4o
local unit m4o
local unit Q4o
local unit W4o
local real E4o
local unit Z4o
local integer U4o
local unit I4o
local integer P4o
local integer A4o
local unit D4o
local string H4o
local widget J4o
local group K4o
local boolexpr L4o
local string X4o
local integer C4o
local real V4o
local integer B4o
local string N4o
local unit M4o
local unit w2o
local unit u2o
local unit r2o
local unit s2o
local unit t2o
local real i2o
local unit S2o
local integer c2o
local unit o2o
local integer O2o
local integer l2o
local unit b2o
local string y2o
local widget p2o
local string e2o
local integer q2o
local real a2o
local integer n2o
local string d2o
local group f2o
local unit R2o
local unit T2o
local unit Y2o
local unit G2o
local unit g2o
local real h2o
local unit F2o
local integer k2o
local unit j2o
local integer x2o
local integer v2o
local unit m2o
local string Q2o
local widget W2o
local string E2o
local integer Z2o
local real U2o
local integer I2o
local string P2o
local group A2o
local boolexpr D2o
local group H2o
local real J2o
local player K2o
local real L2o
local group X2o
local real C2o
local player V2o
local real B2o
local player N2o
local real M2o
set aW[qW]=r4o
set qW=qW+1
set s4o=GetSpellAbilityId()
if s4o==$41323144 then
set t4o=GetSpellAbilityUnit()
set i4o=GetSpellTargetUnit()
set T4o=t4o
set Y4o=$41323144
set S4o=GetUnitAbilityLevel(T4o,Y4o)
set G4o="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras in T2MageKultiras, line 109"
set aW[qW]=G4o
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set g4o=fF
set RF[g4o]=833
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras.","when calling error in T2MageKultiras, line 109")
set g4o=0
endif
else
set dF=dF-1
set g4o=nF[dF]
set RF[g4o]=833
endif
set qW=qW-1
set c4o=g4o
set pQ[c4o]=i4o
set eQ[c4o]=t4o
set qQ[c4o]=S4o
set h4o=5.
set F4o=c4o
set k4o="when calling doAfter in T2MageKultiras, line 109"
set aW[qW]=k4o
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),h4o,F4o,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
if S4o==2 then
set o4o=CreateGroup()
set O4o=Filter(Iuw)
set H2o=o4o
set j4o=i4o
set J2o=GetUnitX(j4o)
set x4o=i4o
call GroupEnumUnitsInRange(H2o,J2o,GetUnitY(x4o),250.,O4o)
set l4o=Dgy(o4o)
set v4o=t4o
set K2o=GetOwningPlayer(v4o)
set m4o=l4o
set L2o=GetUnitX(m4o)
set Q4o=l4o
set b4o=CreateUnit(K2o,$75303030,L2o,GetUnitY(Q4o),0.)
set W4o=b4o
set E4o=3.
call UnitApplyTimedLife(W4o,$42544C46,E4o)
set Z4o=b4o
set U4o=$41323447
call UnitAddAbility(Z4o,U4o)
set I4o=b4o
set P4o=$41323447
set A4o=S4o
call SetUnitAbilityLevel(I4o,P4o,A4o)
set D4o=b4o
set H4o="cripple"
set J4o=l4o
call IssueTargetOrder(D4o,H4o,J4o)
set K4o=o4o
call DestroyGroup(K4o)
set L4o=O4o
call DestroyBoolExpr(L4o)
set X4o="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras in T2MageKultiras, line 125"
set aW[qW]=X4o
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set C4o=fF
set RF[C4o]=834
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras.","when calling error in T2MageKultiras, line 125")
set C4o=0
endif
else
set dF=dF-1
set C4o=nF[dF]
set RF[C4o]=834
endif
set qW=qW-1
set y4o=C4o
set aQ[y4o]=l4o
set nQ[y4o]=b4o
set dQ[y4o]=S4o
set V4o=5.
set B4o=y4o
set N4o="when calling doAfter in T2MageKultiras, line 125"
set aW[qW]=N4o
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),V4o,B4o,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if S4o==3 then
set p4o=CreateGroup()
set e4o=Filter(Iuw)
set X2o=p4o
set M4o=i4o
set C2o=GetUnitX(M4o)
set w2o=i4o
call GroupEnumUnitsInRange(X2o,C2o,GetUnitY(w2o),250.,e4o)
set q4o=Dgy(p4o)
set u2o=t4o
set V2o=GetOwningPlayer(u2o)
set r2o=q4o
set B2o=GetUnitX(r2o)
set s2o=q4o
set a4o=CreateUnit(V2o,$75303030,B2o,GetUnitY(s2o),0.)
set t2o=a4o
set i2o=3.
call UnitApplyTimedLife(t2o,$42544C46,i2o)
set S2o=a4o
set c2o=$41323447
call UnitAddAbility(S2o,c2o)
set o2o=a4o
set O2o=$41323447
set l2o=S4o
call SetUnitAbilityLevel(o2o,O2o,l2o)
set b2o=a4o
set y2o="cripple"
set p2o=q4o
call IssueTargetOrder(b2o,y2o,p2o)
set e2o="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras in T2MageKultiras, line 139"
set aW[qW]=e2o
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set q2o=fF
set RF[q2o]=835
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras.","when calling error in T2MageKultiras, line 139")
set q2o=0
endif
else
set dF=dF-1
set q2o=nF[dF]
set RF[q2o]=835
endif
set qW=qW-1
set n4o=q2o
set fQ[n4o]=q4o
set RQ[n4o]=a4o
set TQ[n4o]=S4o
set a2o=5.
set n2o=n4o
set d2o="when calling doAfter in T2MageKultiras, line 139"
set aW[qW]=d2o
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),a2o,n2o,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set f2o=p4o
set R2o=q4o
call GroupRemoveUnit(f2o,R2o)
set d4o=Dgy(p4o)
set T2o=t4o
set N2o=GetOwningPlayer(T2o)
set Y2o=d4o
set M2o=GetUnitX(Y2o)
set G2o=d4o
set f4o=CreateUnit(N2o,$75303030,M2o,GetUnitY(G2o),0.)
set g2o=f4o
set h2o=3.
call UnitApplyTimedLife(g2o,$42544C46,h2o)
set F2o=f4o
set k2o=$41323447
call UnitAddAbility(F2o,k2o)
set j2o=f4o
set x2o=$41323447
set v2o=S4o
call SetUnitAbilityLevel(j2o,x2o,v2o)
set m2o=f4o
set Q2o="cripple"
set W2o=d4o
call IssueTargetOrder(m2o,Q2o,W2o)
set E2o="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras in T2MageKultiras, line 150"
set aW[qW]=E2o
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Z2o=fF
set RF[Z2o]=836
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_T2MageKultiras.","when calling error in T2MageKultiras, line 150")
set Z2o=0
endif
else
set dF=dF-1
set Z2o=nF[dF]
set RF[Z2o]=836
endif
set qW=qW-1
set R4o=Z2o
set YQ[R4o]=d4o
set GQ[R4o]=f4o
set gQ[R4o]=S4o
set U2o=5.
set I2o=R4o
set P2o="when calling doAfter in T2MageKultiras, line 150"
set aW[qW]=P2o
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),U2o,I2o,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set A2o=p4o
call DestroyGroup(A2o)
set D2o=e4o
call DestroyBoolExpr(D2o)
endif
endif
set qW=qW-1
set t4o=null
set i4o=null
set o4o=null
set O4o=null
set l4o=null
set b4o=null
set p4o=null
set e4o=null
set q4o=null
set a4o=null
set d4o=null
set f4o=null
set T4o=null
set j4o=null
set x4o=null
set v4o=null
set m4o=null
set Q4o=null
set W4o=null
set Z4o=null
set I4o=null
set D4o=null
set J4o=null
set K4o=null
set L4o=null
set M4o=null
set w2o=null
set u2o=null
set r2o=null
set s2o=null
set t2o=null
set S2o=null
set o2o=null
set b2o=null
set p2o=null
set f2o=null
set R2o=null
set T2o=null
set Y2o=null
set G2o=null
set g2o=null
set F2o=null
set j2o=null
set m2o=null
set W2o=null
set A2o=null
set D2o=null
set H2o=null
set K2o=null
set X2o=null
set V2o=null
set N2o=null
endfunction
function ZMr takes nothing returns nothing
set qW=0
call w5o("via function reference T2MageKultiras, line 103")
endfunction
function ZTr takes nothing returns boolean
local playerunitevent mTr
local code QTr
local playerunitevent WTr
local code ETr
call CreateTrigger()
set mTr=EVENT_PLAYER_UNIT_SPELL_CAST
set QTr=Esw
call emO(mTr,null,QTr,null)
set WTr=EVENT_PLAYER_UNIT_SPELL_EFFECT
set ETr=Zsw
call emO(WTr,null,ETr,null)
set mTr=null
set WTr=null
return true
endfunction
function HiS takes string RiS returns nothing
local integer TiS
local integer YiS
local integer GiS
local player giS
local string hiS
local real FiS
local string kiS
local real jiS
local unit xiS
local unit viS
local unit miS
local unit QiS
local string WiS
local integer EiS
local real ZiS
local integer UiS
local string IiS
local string PiS
local real AiS
local player DiS
set aW[qW]=RiS
set qW=qW+1
if ur==true then
set Xb=GetTriggerPlayer()
set giS=Xb
set TiS=GetPlayerId(giS)
set Fw[TiS]=true
set YiS=GetRandomInt(1,5)
if YiS==1 then
set Cb=" is a fucking pussy!"
elseif YiS==2 then
set Cb=" is surrender monkey!"
elseif YiS==3 then
set Cb=" is running to his mommy!"
elseif YiS==4 then
set Cb=" is dickless coward!"
else
set Cb=" is little sissy bitch!"
endif
set hiS=Aw[TiS]+GetPlayerName(Xb)+"|r"+Cb
set FiS=10.
set kiS=hiS
set jiS=FiS
call DisplayTimedTextToPlayer(IY,0.,0.,jiS,kiS)
set xiS=o[TiS]
call KillUnit(xiS)
set viS=O[TiS]
call KillUnit(viS)
set miS=b[TiS]
call KillUnit(miS)
set QiS=l[TiS]
call KillUnit(QiS)
set WiS="when calling alloc_CallbackSingle_doAfter_ComandEnd in ComandEnd, line 35"
set aW[qW]=WiS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EiS=fF
set RF[EiS]=697
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_ComandEnd.","when calling error in ComandEnd, line 35")
set EiS=0
endif
else
set dF=dF-1
set EiS=nF[dF]
set RF[EiS]=697
endif
set qW=qW-1
set GiS=EiS
set ZiS=1.
set UiS=GiS
set IiS="when calling doAfter in ComandEnd, line 35"
set aW[qW]=IiS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ZiS,UiS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set Xb=GetTriggerPlayer()
set PiS="After 30 minutes"
set AiS=10.
set DiS=Xb
call DisplayTimedTextToPlayer(DiS,0.,0.,AiS,PiS)
set Xb=null
endif
set qW=qW-1
set giS=null
set xiS=null
set viS=null
set miS=null
set QiS=null
set DiS=null
endfunction
function ZVr takes nothing returns nothing
set qW=0
call HiS("via function reference ComandEnd, line 55")
endfunction
function ZYr takes nothing returns boolean
local trigger jYr
local playerunitevent xYr
local trigger vYr
local playerunitevent mYr
local integer QYr
local trigger WYr
local code EYr
set DG=CreateTrigger()
set jYr=DG
set xYr=EVENT_PLAYER_UNIT_ATTACKED
set vYr=jYr
set mYr=xYr
set QYr=0
loop
call TriggerRegisterPlayerUnitEvent(vYr,Player(QYr),mYr,null)
set QYr=QYr+1
exitwhen QYr==bj_MAX_PLAYER_SLOTS
endloop
set WYr=DG
set EYr=luw
call TriggerAddAction(WYr,EYr)
set jYr=null
set xYr=null
set vYr=null
set mYr=null
set WYr=null
return true
endfunction
function ZYw takes nothing returns nothing
local unit ZTw=GetTriggerUnit()
local unit ITw=ZTw
local player UTw=GetOwningPlayer(ITw)
local unit PTw
local string ATw
local real DTw
local real HTw
local unit JTw
local unittype KTw
local unit LTw
local string XTw
local real CTw
local real VTw
local unit BTw
local unittype NTw
local unit MTw
local string wYw
local real uYw
local real rYw
local unit sYw
local unittype tYw
local unit iYw
local string SYw
local real cYw
local real oYw
local unit OYw
local unittype lYw
local unit bYw
local string yYw
local real pYw
local real eYw
local unit qYw
local unittype aYw
local unit nYw
local string dYw
local real fYw
local real RYw
local unit TYw
local unittype YYw
local real GYw
local real gYw
local real hYw
local real FYw
local real kYw
local real jYw
local real xYw
local real vYw
local real mYw
local real QYw
local real WYw
local real EYw
if UTw==du then
set PTw=ZTw
set ATw="attack"
set GYw=Qw[33]
set gYw=Ww[33]
set DTw=GYw
set HTw=gYw
call IssuePointOrder(PTw,ATw,DTw,HTw)
set JTw=ZTw
set KTw=UNIT_TYPE_HERO
if IsUnitType(JTw,KTw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,33)
endif
endif
if UTw==nu then
if Ew[2]==true then
set LTw=ZTw
set XTw="attack"
set hYw=Qw[51]
set FYw=Ww[51]
set CTw=hYw
set VTw=FYw
call IssuePointOrder(LTw,XTw,CTw,VTw)
set BTw=ZTw
set NTw=UNIT_TYPE_HERO
if IsUnitType(BTw,NTw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,51)
endif
else
set MTw=ZTw
set wYw="attack"
set kYw=Qw[33]
set jYw=Ww[33]
set uYw=kYw
set rYw=jYw
call IssuePointOrder(MTw,wYw,uYw,rYw)
set sYw=ZTw
set tYw=UNIT_TYPE_HERO
if IsUnitType(sYw,tYw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,33)
endif
endif
endif
if UTw==fu then
set iYw=ZTw
set SYw="attack"
set xYw=Qw[51]
set vYw=Ww[51]
set cYw=xYw
set oYw=vYw
call IssuePointOrder(iYw,SYw,cYw,oYw)
set OYw=ZTw
set lYw=UNIT_TYPE_HERO
if IsUnitType(OYw,lYw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,51)
endif
endif
if UTw==Ru then
if Ew[0]==true then
set bYw=ZTw
set yYw="attack"
set mYw=Qw[33]
set QYw=Ww[33]
set pYw=mYw
set eYw=QYw
call IssuePointOrder(bYw,yYw,pYw,eYw)
set qYw=ZTw
set aYw=UNIT_TYPE_HERO
if IsUnitType(qYw,aYw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,33)
endif
else
set nYw=ZTw
set dYw="attack"
set WYw=Qw[51]
set EYw=Ww[51]
set fYw=WYw
set RYw=EYw
call IssuePointOrder(nYw,dYw,fYw,RYw)
set TYw=ZTw
set YYw=UNIT_TYPE_HERO
if IsUnitType(TYw,YYw) then
call SaveInteger(qu,GetHandleId(ZTw),$6D6F7665,51)
endif
endif
endif
set ZTw=null
set UTw=null
set ITw=null
set PTw=null
set JTw=null
set KTw=null
set LTw=null
set BTw=null
set NTw=null
set MTw=null
set sYw=null
set tYw=null
set iYw=null
set OYw=null
set lYw=null
set bYw=null
set qYw=null
set aYw=null
set nYw=null
set TYw=null
set YYw=null
endfunction
function ZZl takes nothing returns boolean
local trigger FZl
local trigger kZl
local playerunitevent jZl
local integer xZl
local trigger vZl
local trigger mZl
local playerunitevent QZl
local integer WZl
local trigger EZl
set vl=CreateSound("ArakkoaTotem.mp3",false,false,false,10,10,"DefaultEAXON")
set ml=CreateSound("Heal.mp3",false,false,false,10,10,"DefaultEAXON")
set Ql=CreateSound("Mana_Regen.mp3",false,false,false,10,10,"DefaultEAXON")
set Wl=CreateSound("Armag.mp3",false,false,false,10,10,"DefaultEAXON")
set El=CreateSound("Items.mp3",false,false,false,10,10,"DefaultEAXON")
set Zl=CreateSound("Golems.mp3",false,false,false,10,10,"DefaultEAXON")
set Ul=CreateSound("-_HearthStone_mp3cut.net.mp3",false,false,false,10,10,"DefaultEAXON")
set Il=CreateSound("KillAll.mp3",false,false,false,10,10,"DefaultEAXON")
set Pl=CreateTrigger()
set Al=CreateTrigger()
set Dl=CreateTrigger()
set Kl=CreateTimer()
set Ll=CreateTrigger()
set Xl=null
call SetSoundDuration(vl,5374)
call SetSoundChannel(vl,0)
call SetSoundVolume(vl,250)
call SetSoundPitch(vl,1.)
call SetSoundDuration(ml,5374)
call SetSoundChannel(ml,0)
call SetSoundVolume(ml,250)
call SetSoundPitch(ml,1.)
call SetSoundDuration(Ql,5374)
call SetSoundChannel(Ql,0)
call SetSoundVolume(Ql,250)
call SetSoundPitch(Ql,1.)
call SetSoundDuration(Wl,5374)
call SetSoundChannel(Wl,0)
call SetSoundVolume(Wl,250)
call SetSoundPitch(Wl,1.)
call SetSoundDuration(El,5374)
call SetSoundChannel(El,0)
call SetSoundVolume(El,250)
call SetSoundPitch(El,1.)
call SetSoundDuration(Zl,5374)
call SetSoundChannel(Zl,0)
call SetSoundVolume(Zl,250)
call SetSoundPitch(Zl,1.)
call SetSoundDuration(Ul,5374)
call SetSoundChannel(Ul,0)
call SetSoundVolume(Ul,250)
call SetSoundPitch(Ul,1.)
call SetSoundDuration(Il,5374)
call SetSoundChannel(Il,0)
call SetSoundVolume(Il,250)
call SetSoundPitch(Il,1.)
set FZl=Pl
call DisableTrigger(FZl)
set kZl=Pl
set jZl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set xZl=0
loop
call TriggerRegisterPlayerUnitEvent(kZl,Player(xZl),jZl,null)
set xZl=xZl+1
exitwhen xZl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Pl,Y3)
set vZl=Dl
call DisableTrigger(vZl)
set mZl=Dl
set QZl=EVENT_PLAYER_UNIT_DEATH
set WZl=0
loop
call TriggerRegisterPlayerUnitEvent(mZl,Player(WZl),QZl,null)
set WZl=WZl+1
exitwhen WZl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Dl,G3)
set EZl=Ll
call DisableTrigger(EZl)
call TriggerRegisterTimerEvent(Ll,1.,true)
call TriggerAddAction(Ll,g3)
set FZl=null
set kZl=null
set jZl=null
set vZl=null
set mZl=null
set QZl=null
set EZl=null
return true
endfunction
function ZZp takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1364")
endfunction
function ZZt takes nothing returns nothing
local unit VWt=GetKillingUnit()
local unit BWt=GetDyingUnit()
local unit tEt=VWt
local integer NWt=GetPlayerTechCount(GetOwningPlayer(tEt),$52303643,true)
local integer MWt
local player wEt
local player uEt
local player rEt
local player sEt
local unit iEt
local unit SEt
local unit cEt
local unit oEt
local player OEt
local unit lEt
local player bEt
local integer yEt
local player pEt
local playerstate eEt
local integer qEt
local player aEt
local playerstate nEt
local unit dEt
local player fEt
local unit REt
local unit TEt
local player YEt
local integer GEt
local player gEt
local playerstate hEt
local integer FEt
local player kEt
local player jEt
local playerstate xEt
local player vEt
local player mEt
local player QEt
local player WEt
local player EEt
local player ZEt
local unit UEt
local player IEt
local integer PEt
local player AEt
local playerstate DEt
local integer HEt
local player JEt
local player KEt
local playerstate LEt
local player XEt
local player CEt
local player VEt
local player BEt
local player NEt
local player MEt
local unit wZt
local player uZt
local integer rZt
local player sZt
local playerstate tZt
local integer iZt
local player SZt
local player cZt
local playerstate oZt
local player OZt
local player lZt
local player bZt
local player yZt
local player pZt
local player eZt
local unit qZt
local player aZt
local integer nZt
local player dZt
local playerstate fZt
local integer RZt
local player TZt
local player YZt
local playerstate GZt
local player gZt
local player hZt
local player FZt
local player kZt
local player jZt
local player xZt
local boolean vZt
local boolean mZt
local boolean QZt
local player WZt
local playerstate EZt
if NWt>0 then
set ke=3*NWt
set iEt=VWt
if GetUnitTypeId(iEt)==$6F303359 then
set vZt=true
else
set SEt=VWt
set vZt=GetUnitTypeId(SEt)==$6F303331
endif
if vZt then
set mZt=true
else
set cEt=VWt
set mZt=GetUnitTypeId(cEt)==$68303153
endif
if mZt then
set QZt=true
else
set oEt=VWt
set QZt=GetUnitTypeId(oEt)==$6E303239
endif
if QZt then
call UuS(VWt,ke)
set lEt=VWt
set OEt=GetOwningPlayer(lEt)
set MWt=GetPlayerId(OEt)-4
set hr[MWt]=hr[MWt]+ke
set Fr[MWt]=Fr[MWt]+ke
set Cr[MWt]=Cr[MWt]+ke
set bEt=Player(MWt)
set yEt=ke
set pEt=bEt
set eEt=PLAYER_STATE_RESOURCE_GOLD
set qEt=yEt
set WZt=pEt
set EZt=eEt
set aEt=pEt
set nEt=eEt
call SetPlayerState(WZt,EZt,GetPlayerState(aEt,nEt)+qEt)
set Ye=Ye+ke
set dEt=BWt
set REt=VWt
set fEt=GetOwningPlayer(REt)
if IsUnitEnemy(dEt,fEt)==true then
set TEt=BWt
if GetOwningPlayer(TEt)==nu then
set wEt=Tu
set Ge=Ge+ke
set YEt=wEt
set kEt=wEt
set jEt=kEt
set xEt=PLAYER_STATE_RESOURCE_GOLD
set GEt=GetPlayerState(jEt,xEt)-ke
set gEt=YEt
set hEt=PLAYER_STATE_RESOURCE_GOLD
set FEt=GEt
call SetPlayerState(gEt,hEt,FEt)
set vEt=wEt
set mEt=wEt
set hr[GetPlayerId(vEt)]=hr[GetPlayerId(mEt)]-ke
set QEt=wEt
set WEt=wEt
set Fr[GetPlayerId(QEt)]=Fr[GetPlayerId(WEt)]-ke
set EEt=wEt
set ZEt=wEt
set Cr[GetPlayerId(EEt)]=Cr[GetPlayerId(ZEt)]-ke
endif
set UEt=BWt
if GetOwningPlayer(UEt)==Ru then
set uEt=gu
set ge=ge+ke
set IEt=uEt
set JEt=uEt
set KEt=JEt
set LEt=PLAYER_STATE_RESOURCE_GOLD
set PEt=GetPlayerState(KEt,LEt)-ke
set AEt=IEt
set DEt=PLAYER_STATE_RESOURCE_GOLD
set HEt=PEt
call SetPlayerState(AEt,DEt,HEt)
set XEt=uEt
set CEt=uEt
set hr[GetPlayerId(XEt)]=hr[GetPlayerId(CEt)]-ke
set VEt=uEt
set BEt=uEt
set Fr[GetPlayerId(VEt)]=Fr[GetPlayerId(BEt)]-ke
set NEt=uEt
set MEt=uEt
set Cr[GetPlayerId(NEt)]=Cr[GetPlayerId(MEt)]-ke
endif
set wZt=BWt
if GetOwningPlayer(wZt)==du then
set rEt=Yu
set he=he+ke
set uZt=rEt
set SZt=rEt
set cZt=SZt
set oZt=PLAYER_STATE_RESOURCE_GOLD
set rZt=GetPlayerState(cZt,oZt)-ke
set sZt=uZt
set tZt=PLAYER_STATE_RESOURCE_GOLD
set iZt=rZt
call SetPlayerState(sZt,tZt,iZt)
set OZt=rEt
set lZt=rEt
set hr[GetPlayerId(OZt)]=hr[GetPlayerId(lZt)]-ke
set bZt=rEt
set yZt=rEt
set Fr[GetPlayerId(bZt)]=Fr[GetPlayerId(yZt)]-ke
set pZt=rEt
set eZt=rEt
set Cr[GetPlayerId(pZt)]=Cr[GetPlayerId(eZt)]-ke
endif
set qZt=BWt
if GetOwningPlayer(qZt)==fu then
set sEt=Gu
set Fe=Fe+ke
set aZt=sEt
set TZt=sEt
set YZt=TZt
set GZt=PLAYER_STATE_RESOURCE_GOLD
set nZt=GetPlayerState(YZt,GZt)-ke
set dZt=aZt
set fZt=PLAYER_STATE_RESOURCE_GOLD
set RZt=nZt
call SetPlayerState(dZt,fZt,RZt)
set gZt=sEt
set hZt=sEt
set hr[GetPlayerId(gZt)]=hr[GetPlayerId(hZt)]-ke
set FZt=sEt
set kZt=sEt
set Fr[GetPlayerId(FZt)]=Fr[GetPlayerId(kZt)]-ke
set jZt=sEt
set xZt=sEt
set Cr[GetPlayerId(jZt)]=Cr[GetPlayerId(xZt)]-ke
endif
endif
endif
endif
set VWt=null
set BWt=null
set wEt=null
set uEt=null
set rEt=null
set sEt=null
set tEt=null
set iEt=null
set SEt=null
set cEt=null
set oEt=null
set OEt=null
set lEt=null
set bEt=null
set pEt=null
set eEt=null
set aEt=null
set nEt=null
set dEt=null
set fEt=null
set REt=null
set TEt=null
set YEt=null
set gEt=null
set hEt=null
set kEt=null
set jEt=null
set xEt=null
set vEt=null
set mEt=null
set QEt=null
set WEt=null
set EEt=null
set ZEt=null
set UEt=null
set IEt=null
set AEt=null
set DEt=null
set JEt=null
set KEt=null
set LEt=null
set XEt=null
set CEt=null
set VEt=null
set BEt=null
set NEt=null
set MEt=null
set wZt=null
set uZt=null
set sZt=null
set tZt=null
set SZt=null
set cZt=null
set oZt=null
set OZt=null
set lZt=null
set bZt=null
set yZt=null
set pZt=null
set eZt=null
set qZt=null
set aZt=null
set dZt=null
set fZt=null
set TZt=null
set YZt=null
set GZt=null
set gZt=null
set hZt=null
set FZt=null
set kZt=null
set jZt=null
set xZt=null
set WZt=null
set EZt=null
endfunction
function CXr takes string IXr returns nothing
local unit PXr
local integer AXr
local unit DXr
local string HXr
local integer JXr
local real KXr
local integer LXr
local string XXr
set aW[qW]=IXr
set qW=qW+1
set PXr=GetRevivingUnit()
set DXr=PXr
if GetUnitTypeId(DXr)==$45303037 then
set HXr="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_ZulJin in ZulJin, line 776"
set aW[qW]=HXr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set JXr=fF
set RF[JXr]=848
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_ZulJin.","when calling error in ZulJin, line 776")
set JXr=0
endif
else
set dF=dF-1
set JXr=nF[dF]
set RF[JXr]=848
endif
set qW=qW-1
set AXr=JXr
set eW[AXr]=PXr
set KXr=1.5
set LXr=AXr
set XXr="when calling doAfter in ZulJin, line 776"
set aW[qW]=XXr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),KXr,LXr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set PXr=null
set DXr=null
endfunction
function Zas takes nothing returns nothing
set qW=0
call CXr("via function reference ZulJin, line 773")
endfunction
function ZbS takes nothing returns boolean
return true
endfunction
function Zgi takes nothing returns nothing
local unit fGi=GetTriggerUnit()
local unit gGi=fGi
local integer RGi=GetUnitTypeId(gGi)
local unit hGi=fGi
local player TGi=GetOwningPlayer(hGi)
local integer YGi=GetPlayerId(TGi)
local integer GGi
local trigger FGi
local trigger kGi
local trigger jGi
local sound xGi
local unit vGi
local unit mGi
local trigger QGi
local trigger WGi
local trigger EGi
local trigger ZGi
local trigger UGi
local trigger IGi
local trigger PGi
local trigger AGi
local trigger DGi
local unit HGi
local unit JGi
local unit KGi
local integer LGi
local sound XGi
local trigger CGi
local trigger VGi
local trigger BGi
local unit NGi
local integer MGi
local sound wgi
local trigger ugi
local trigger rgi
local unit sgi
local integer tgi
local sound igi
local trigger Sgi
local unit cgi
local integer ogi
local sound Ogi
local trigger lgi
local trigger bgi
local trigger ygi
local trigger pgi
local unit egi
local integer qgi
local unit agi
local integer ngi
local sound dgi
local trigger fgi
local trigger Rgi
local trigger Tgi
local trigger Ygi
local trigger Ggi
local unit ggi
local integer hgi
local sound Fgi
local trigger kgi
local trigger jgi
local trigger xgi
local trigger vgi
local trigger mgi
local trigger Qgi
local real Wgi
local real Egi
if RGi==$6E303243 then
set FGi=yp
call EnableTrigger(FGi)
call SetPlayerTechResearched(TGi,$5230324D,1)
call SetPlayerTechResearched(Player(YGi+4),$5230324D,1)
endif
if RGi==$6E303059 then
call SetPlayerTechResearched(TGi,$52303558,1)
call RemoveUnitFromStock(O[YGi],A[YGi])
call RemoveUnitFromStock(b[YGi],A[YGi])
call RemoveUnitFromStock(l[YGi],A[YGi])
set A[YGi]=$65303036
call AddUnitToStock(O[YGi],A[YGi],1,3)
call AddUnitToStock(b[YGi],A[YGi],1,3)
call AddUnitToStock(l[YGi],A[YGi],1,3)
endif
if RGi==$6E30305A then
call SetPlayerTechResearched(TGi,$52303633,1)
call SetPlayerTechResearched(TGi,$5230355A,1)
call RemoveUnitFromStock(O[YGi],D[YGi])
call RemoveUnitFromStock(b[YGi],D[YGi])
call RemoveUnitFromStock(l[YGi],D[YGi])
set D[YGi]=$6E303058
call AddUnitToStock(O[YGi],D[YGi],1,3)
call AddUnitToStock(b[YGi],D[YGi],1,3)
call AddUnitToStock(l[YGi],D[YGi],1,3)
endif
if RGi==$6E303134 then
call SetPlayerTechResearched(TGi,$52303630,1)
set kGi=Dy
call EnableTrigger(kGi)
call RemoveUnitFromStock(O[YGi],H[YGi])
call RemoveUnitFromStock(b[YGi],H[YGi])
call RemoveUnitFromStock(l[YGi],H[YGi])
set H[YGi]=$6E303135
call AddUnitToStock(O[YGi],H[YGi],1,3)
call AddUnitToStock(b[YGi],H[YGi],1,3)
call AddUnitToStock(l[YGi],H[YGi],1,3)
endif
if RGi==$6E303131 then
call SetPlayerTechResearched(TGi,$52303631,1)
set J[YGi]=$6E303130
endif
if RGi==$6E303133 then
call SetPlayerTechResearched(TGi,$52303634,1)
set K[YGi]=$6E303132
endif
if RGi==$6E303242 then
call SetPlayerTechResearched(TGi,$52303632,1)
set jGi=my
call EnableTrigger(jGi)
set L[YGi]=$6F303257
endif
if RGi==$6E303246 then
set xGi=gb
if xGi!=null then
call StartSound(xGi)
endif
call FogModifierStart(CreateFogModifierRect(TGi,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
set pb=CreateUnit(Player(YGi+4),$6E303142,65.7,112.8,150.74)
set pr=180
set vGi=pb
set Wgi=GetUnitX(vGi)
set mGi=pb
set yr=jVl(Wgi,GetUnitY(mGi),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(Sr,180.,false,Rww)
set QGi=qb
call EnableTrigger(QGi)
set WGi=nb
call EnableTrigger(WGi)
set EGi=db
call EnableTrigger(EGi)
set ZGi=Tb
call EnableTrigger(ZGi)
set UGi=Yb
call EnableTrigger(UGi)
set IGi=Gb
call EnableTrigger(IGi)
endif
if RGi==$6E303248 then
set PGi=Xy
call EnableTrigger(PGi)
set AGi=tp
call EnableTrigger(AGi)
set DGi=ip
call EnableTrigger(DGi)
set Ly=fGi
set pr=60
set HGi=Ly
set Egi=GetUnitX(HGi)
set JGi=Ly
set yr=jVl(Egi,GetUnitY(JGi),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(Sr,60.,false,Tww_1428)
endif
if RGi==$6E303136 then
set GGi=GetRandomInt(1,100)
if GGi==1 then
set i[YGi]=$5530304D
set KGi=fGi
set LGi=$41305A30
call UnitAddAbility(KGi,LGi)
set XGi=Ee
if XGi!=null then
call StartSound(XGi)
endif
set CGi=Me
call EnableTrigger(CGi)
set VGi=Ln
call EnableTrigger(VGi)
set BGi=gg
call EnableTrigger(BGi)
elseif GGi>=2 and GGi<21 then
set i[YGi]=$55303046
set NGi=fGi
set MGi=$41305746
call UnitAddAbility(NGi,MGi)
set wgi=xe
if wgi!=null then
call StartSound(wgi)
endif
set ugi=vy
call EnableTrigger(ugi)
set rgi=Ay
call EnableTrigger(rgi)
elseif GGi>=21 and GGi<41 then
set i[YGi]=$55303047
set sgi=fGi
set tgi=$41305758
call UnitAddAbility(sgi,tgi)
set igi=ve
if igi!=null then
call StartSound(igi)
endif
set Sgi=uq
call EnableTrigger(Sgi)
elseif GGi>=41 and GGi<61 then
set i[YGi]=$55303048
set cgi=fGi
set ogi=$41305759
call UnitAddAbility(cgi,ogi)
set Ogi=me
if Ogi!=null then
call StartSound(Ogi)
endif
set lgi=Ue
call EnableTrigger(lgi)
set bgi=Jy
call EnableTrigger(bgi)
set ygi=ky
call EnableTrigger(ygi)
set pgi=jy
call EnableTrigger(pgi)
elseif GGi>=61 and GGi<81 then
set i[YGi]=$55303049
set egi=fGi
set qgi=$41305A51
call UnitAddAbility(egi,qgi)
set agi=fGi
set ngi=$41305936
call UnitAddAbility(agi,ngi)
set dgi=Qe
if dgi!=null then
call StartSound(dgi)
endif
set fgi=Xe
call EnableTrigger(fgi)
set Rgi=Le
call EnableTrigger(Rgi)
set Tgi=Ce
call EnableTrigger(Tgi)
set Ygi=xy
call EnableTrigger(Ygi)
set Ggi=Ve
call EnableTrigger(Ggi)
else
set i[YGi]=$5530304A
set ggi=fGi
set hgi=$41305A42
call UnitAddAbility(ggi,hgi)
set Fgi=We
if Fgi!=null then
call StartSound(Fgi)
endif
set kgi=De
call EnableTrigger(kgi)
set jgi=Ke
call EnableTrigger(jgi)
set xgi=He
call EnableTrigger(xgi)
set vgi=Je
call EnableTrigger(vgi)
set mgi=Hy
call EnableTrigger(mgi)
set Qgi=Uy
call EnableTrigger(Qgi)
endif
endif
set fGi=null
set TGi=null
set gGi=null
set hGi=null
set FGi=null
set kGi=null
set jGi=null
set xGi=null
set vGi=null
set mGi=null
set QGi=null
set WGi=null
set EGi=null
set ZGi=null
set UGi=null
set IGi=null
set PGi=null
set AGi=null
set DGi=null
set HGi=null
set JGi=null
set KGi=null
set XGi=null
set CGi=null
set VGi=null
set BGi=null
set NGi=null
set wgi=null
set ugi=null
set rgi=null
set sgi=null
set igi=null
set Sgi=null
set cgi=null
set Ogi=null
set lgi=null
set bgi=null
set ygi=null
set pgi=null
set egi=null
set agi=null
set dgi=null
set fgi=null
set Rgi=null
set Tgi=null
set Ygi=null
set Ggi=null
set ggi=null
set Fgi=null
set kgi=null
set jgi=null
set xgi=null
set vgi=null
set mgi=null
set Qgi=null
endfunction
function wpS takes string TyS returns nothing
local unit YyS
local integer GyS
local integer gyS
local integer hyS
local integer FyS
local unit kyS
local string jyS
local integer xyS
local real vyS
local integer myS
local string QyS
local unit WyS
local string EyS
local integer ZyS
local real UyS
local integer IyS
local string PyS
local unit AyS
local string DyS
local integer HyS
local real JyS
local integer KyS
local string LyS
local unit XyS
local string CyS
local integer VyS
local real ByS
local integer NyS
local string MyS
set aW[qW]=TyS
set qW=qW+1
set YyS=GetRevivingUnit()
set kyS=YyS
if GetUnitTypeId(kyS)==$4E627374 then
set jyS="when calling alloc_CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH in WAAAAAAAAAAAAAAGH, line 478"
set aW[qW]=jyS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set xyS=fF
set RF[xyS]=764
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH.","when calling error in WAAAAAAAAAAAAAAGH, line 478")
set xyS=0
endif
else
set dF=dF-1
set xyS=nF[dF]
set RF[xyS]=764
endif
set qW=qW-1
set GyS=xyS
set NQ[GyS]=YyS
set vyS=1.
set myS=GyS
set QyS="when calling doAfter in WAAAAAAAAAAAAAAGH, line 478"
set aW[qW]=QyS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),vyS,myS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set WyS=YyS
if GetUnitTypeId(WyS)==$4F677268 then
set EyS="when calling alloc_CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH in WAAAAAAAAAAAAAAGH, line 484"
set aW[qW]=EyS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ZyS=fF
set RF[ZyS]=765
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH.","when calling error in WAAAAAAAAAAAAAAGH, line 484")
set ZyS=0
endif
else
set dF=dF-1
set ZyS=nF[dF]
set RF[ZyS]=765
endif
set qW=qW-1
set gyS=ZyS
set MQ[gyS]=YyS
set UyS=1.
set IyS=gyS
set PyS="when calling doAfter in WAAAAAAAAAAAAAAGH, line 484"
set aW[qW]=PyS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),UyS,IyS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set AyS=YyS
if GetUnitTypeId(AyS)==$4F746872 then
set DyS="when calling alloc_CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH in WAAAAAAAAAAAAAAGH, line 488"
set aW[qW]=DyS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set HyS=fF
set RF[HyS]=766
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH.","when calling error in WAAAAAAAAAAAAAAGH, line 488")
set HyS=0
endif
else
set dF=dF-1
set HyS=nF[dF]
set RF[HyS]=766
endif
set qW=qW-1
set hyS=HyS
set wW[hyS]=YyS
set JyS=1.
set KyS=hyS
set LyS="when calling doAfter in WAAAAAAAAAAAAAAGH, line 488"
set aW[qW]=LyS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),JyS,KyS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set XyS=YyS
if GetUnitTypeId(XyS)==$4E736A73 then
set CyS="when calling alloc_CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH in WAAAAAAAAAAAAAAGH, line 492"
set aW[qW]=CyS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set VyS=fF
set RF[VyS]=767
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_WAAAAAAAAAAAAAAGH.","when calling error in WAAAAAAAAAAAAAAGH, line 492")
set VyS=0
endif
else
set dF=dF-1
set VyS=nF[dF]
set RF[VyS]=767
endif
set qW=qW-1
set FyS=VyS
set uW[FyS]=YyS
set ByS=1.
set NyS=FyS
set MyS="when calling doAfter in WAAAAAAAAAAAAAAGH, line 492"
set aW[qW]=MyS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ByS,NyS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set YyS=null
set kyS=null
set WyS=null
set AyS=null
set XyS=null
endfunction
function Zgp takes nothing returns nothing
set qW=0
call wpS("via function reference WAAAAAAAAAAAAAAGH, line 573")
endfunction
function Zhc takes nothing returns boolean
local trigger khc
local trigger jhc
local playerunitevent xhc
local trigger vhc
local playerunitevent mhc
local integer Qhc
local trigger Whc
local code Ehc
set Of=CreateTrigger()
set khc=Of
call DisableTrigger(khc)
set jhc=Of
set xhc=EVENT_PLAYER_UNIT_SPELL_CAST
set vhc=jhc
set mhc=xhc
set Qhc=0
loop
call TriggerRegisterPlayerUnitEvent(vhc,Player(Qhc),mhc,null)
set Qhc=Qhc+1
exitwhen Qhc==bj_MAX_PLAYER_SLOTS
endloop
set Whc=Of
set Ehc=q8
call TriggerAddAction(Whc,Ehc)
set khc=null
set jhc=null
set xhc=null
set vhc=null
set mhc=null
set Whc=null
return true
endfunction
function Zht takes nothing returns boolean
local trigger xht
local trigger vht
local rect mht
local region Qht
local trigger Wht
local boolexpr Eht
set sy=CreateTrigger()
set xht=sy
call DisableTrigger(xht)
set vht=sy
set mht=bj_mapInitialPlayableArea
set Qht=CreateRegion()
call RegionAddRect(Qht,mht)
call TriggerRegisterEnterRegion(vht,Qht,null)
set Wht=sy
set Eht=Condition(S1)
call TriggerAddCondition(Wht,Eht)
set xht=null
set vht=null
set mht=null
set Qht=null
set Wht=null
set Eht=null
return true
endfunction
function Mjs takes unit Mas returns nothing
local unit rns=Mas
local integer wns=GetUnitTypeId(rns)
local integer uns=GetHeroLevel(Mas)
local unit sns
local integer tns
local unit ins
local integer Sns
local unit cns
local integer ons
local unit Ons
local integer lns
local unit bns
local integer yns
local unit pns
local integer ens
local unit qns
local integer ans
local unit nns
local integer dns
local unit fns
local integer Rns
local unit Tns
local integer Yns
local unit Gns
local integer gns
local unit hns
local integer Fns
local unit kns
local integer jns
local unit xns
local integer vns
local unit mns
local integer Qns
local unit Wns
local integer Ens
local unit Zns
local integer Uns
local unit Ins
local integer Pns
local unit Ans
local integer Dns
local unit Hns
local integer Jns
local unit Kns
local integer Lns
local unit Xns
local integer Cns
local unit Vns
local integer Bns
local unit Nns
local integer Mns
local unit wds
local integer uds
local unit rds
local integer sds
local unit tds
local integer ids
local unit Sds
local integer cds
local unit ods
local integer Ods
local unit lds
local integer bds
local unit yds
local integer pds
local unit eds
local integer qds
local unit ads
local integer nds
local unit dds
local integer fds
local unit Rds
local integer Tds
local unit Yds
local integer Gds
local unit gds
local integer hds
local unit Fds
local integer kds
local unit jds
local integer xds
local unit vds
local integer mds
local unit Qds
local integer Wds
local unit Eds
local integer Zds
local unit Uds
local integer Ids
local unit Pds
local integer Ads
local unit Dds
local integer Hds
local unit Jds
local integer Kds
local unit Lds
local integer Xds
local unit Cds
local integer Vds
local unit Bds
local integer Nds
local unit Mds
local integer wfs
local unit ufs
local integer rfs
local unit sfs
local integer tfs
local unit ifs
local integer Sfs
local unit cfs
local integer ofs
local unit Ofs
local integer lfs
local unit bfs
local integer yfs
local unit pfs
local integer efs
local unit qfs
local integer afs
local unit nfs
local integer dfs
local unit ffs
local integer Rfs
local unit Tfs
local integer Yfs
local unit Gfs
local integer gfs
local unit hfs
local integer Ffs
local unit kfs
local integer jfs
local unit xfs
local integer vfs
local unit mfs
local integer Qfs
local unit Wfs
local integer Efs
local unit Zfs
local integer Ufs
local unit Ifs
local integer Pfs
local unit Afs
local integer Dfs
local unit Hfs
local integer Jfs
local unit Kfs
local integer Lfs
local unit Xfs
local integer Cfs
local unit Vfs
local integer Bfs
local unit Nfs
local integer Mfs
local unit wRs
local integer uRs
local unit rRs
local integer sRs
local unit tRs
local integer iRs
local unit SRs
local integer cRs
local unit oRs
local integer ORs
local unit lRs
local integer bRs
local unit yRs
local integer pRs
local unit eRs
local integer qRs
local unit aRs
local integer nRs
local unit dRs
local integer fRs
local unit RRs
local integer TRs
local unit YRs
local integer GRs
local unit gRs
local integer hRs
local unit FRs
local integer kRs
local unit jRs
local integer xRs
local unit vRs
local integer mRs
local unit QRs
local integer WRs
local unit ERs
local integer ZRs
local unit URs
local integer IRs
local unit PRs
local integer ARs
local unit DRs
local integer HRs
local unit JRs
local integer KRs
local unit LRs
local integer XRs
local unit CRs
local integer VRs
local unit BRs
local integer NRs
local unit MRs
local integer wTs
local unit uTs
local integer rTs
local unit sTs
local integer tTs
local unit iTs
local integer STs
local unit cTs
local integer oTs
local unit OTs
local integer lTs
local unit bTs
local integer yTs
local unit pTs
local integer eTs
local unit qTs
local integer aTs
local unit nTs
local integer dTs
local unit fTs
local integer RTs
local unit TTs
local integer YTs
local unit GTs
local integer gTs
local unit hTs
local integer FTs
local unit kTs
local integer jTs
local unit xTs
local integer vTs
local unit mTs
local integer QTs
local unit WTs
local integer ETs
local unit ZTs
local integer UTs
local unit ITs
local integer PTs
local unit ATs
local integer DTs
local unit HTs
local integer JTs
local unit KTs
local integer LTs
local unit XTs
local integer CTs
local unit VTs
local integer BTs
local unit NTs
local integer MTs
local unit wYs
local integer uYs
local unit rYs
local integer sYs
local unit tYs
local integer iYs
local unit SYs
local integer cYs
local unit oYs
local integer OYs
local unit lYs
local integer bYs
local unit yYs
local integer pYs
local unit eYs
local integer qYs
local unit aYs
local integer nYs
local unit dYs
local integer fYs
local unit RYs
local integer TYs
local unit YYs
local integer GYs
local unit gYs
local integer hYs
local unit FYs
local integer kYs
local unit jYs
local integer xYs
local unit vYs
local integer mYs
local unit QYs
local integer WYs
local unit EYs
local integer ZYs
local unit UYs
local integer IYs
local unit PYs
local integer AYs
local unit DYs
local integer HYs
local unit JYs
local integer KYs
local unit LYs
local integer XYs
local unit CYs
local integer VYs
local unit BYs
local integer NYs
local unit MYs
local integer wGs
local unit uGs
local integer rGs
local unit sGs
local integer tGs
local unit iGs
local integer SGs
local unit cGs
local integer oGs
local unit OGs
local integer lGs
local unit bGs
local integer yGs
local unit pGs
local integer eGs
local unit qGs
local integer aGs
local unit nGs
local integer dGs
local unit fGs
local integer RGs
local unit TGs
local integer YGs
local unit GGs
local integer gGs
local unit hGs
local integer FGs
local unit kGs
local integer jGs
local unit xGs
local integer vGs
local unit mGs
local integer QGs
local unit WGs
local integer EGs
local unit ZGs
local integer UGs
local unit IGs
local integer PGs
local unit AGs
local integer DGs
local unit HGs
local integer JGs
local unit KGs
local integer LGs
local unit XGs
local integer CGs
local unit VGs
local integer BGs
local unit NGs
local integer MGs
local unit wgs
local integer ugs
local unit rgs
local integer sgs
local unit tgs
local integer igs
local unit Sgs
local integer cgs
local unit ogs
local integer Ogs
local unit lgs
local integer bgs
local unit ygs
local integer pgs
local unit egs
local integer qgs
local unit ags
local integer ngs
local unit dgs
local integer fgs
local unit Rgs
local integer Tgs
local unit Ygs
local integer Ggs
local unit ggs
local integer hgs
local unit Fgs
local integer kgs
local unit jgs
local integer xgs
local unit vgs
local integer mgs
local unit Qgs
local integer Wgs
local unit Egs
local integer Zgs
local unit Ugs
local integer Igs
local unit Pgs
local integer Ags
local unit Dgs
local integer Hgs
local unit Jgs
local integer Kgs
local unit Lgs
local integer Xgs
local unit Cgs
local integer Vgs
local unit Bgs
local integer Ngs
local unit Mgs
local integer whs
local unit uhs
local integer rhs
local unit shs
local integer ths
local unit ihs
local integer Shs
local unit chs
local integer ohs
local unit Ohs
local integer lhs
local unit bhs
local integer yhs
local unit phs
local integer ehs
local unit qhs
local integer ahs
local unit nhs
local integer dhs
local unit fhs
local integer Rhs
local unit Ths
local integer Yhs
local unit Ghs
local integer ghs
local unit hhs
local integer Fhs
local unit khs
local integer jhs
local unit xhs
local integer vhs
local unit mhs
local integer Qhs
local unit Whs
local integer Ehs
local unit Zhs
local integer Uhs
local unit Ihs
local integer Phs
local unit Ahs
local integer Dhs
local unit Hhs
local integer Jhs
local unit Khs
local integer Lhs
local unit Xhs
local integer Chs
local unit Vhs
local integer Bhs
local unit Nhs
local integer Mhs
local unit wFs
local integer uFs
local unit rFs
local integer sFs
local unit tFs
local integer iFs
local unit SFs
local integer cFs
local unit oFs
local integer OFs
local unit lFs
local integer bFs
local unit yFs
local integer pFs
local unit eFs
local integer qFs
local unit aFs
local integer nFs
local unit dFs
local integer fFs
local unit RFs
local integer TFs
local unit YFs
local integer GFs
local unit gFs
local integer hFs
local unit FFs
local integer kFs
local unit jFs
local integer xFs
local unit vFs
local integer mFs
local unit QFs
local integer WFs
local boolean EFs
local boolean ZFs
local boolean UFs
local boolean IFs
local boolean PFs
local boolean AFs
local boolean DFs
local boolean HFs
local boolean JFs
local boolean KFs
local boolean LFs
local boolean XFs
local boolean CFs
local boolean VFs
local boolean BFs
local boolean NFs
local boolean MFs
local boolean wks
local boolean uks
local boolean rks
local boolean sks
local boolean tks
local boolean iks
local boolean Sks
local boolean cks
local boolean oks
local boolean Oks
local boolean lks
local boolean bks
local boolean yks
local boolean pks
local boolean eks
local boolean qks
local boolean aks
local boolean nks
local boolean dks
local boolean fks
local boolean Rks
local boolean Tks
local boolean Yks
local boolean Gks
local boolean gks
local boolean hks
local boolean Fks
local boolean kks
local boolean jks
local boolean xks
local boolean vks
local boolean mks
local boolean Qks
local boolean Wks
local boolean Eks
local boolean Zks
local boolean Uks
local boolean Iks
local boolean Pks
local boolean Aks
local boolean Dks
local boolean Hks
local boolean Jks
local boolean Kks
local boolean Lks
local boolean Xks
local boolean Cks
local boolean Vks
local boolean Bks
local boolean Nks
local boolean Mks
local boolean wjs
local boolean ujs
local boolean rjs
local boolean sjs
local boolean tjs
local boolean ijs
local boolean Sjs
local boolean cjs
local boolean ojs
local boolean Ojs
local boolean ljs
local boolean bjs
local boolean yjs
local boolean pjs
local boolean ejs
local boolean qjs
local boolean ajs
local boolean njs
local boolean djs
local boolean fjs
local boolean Rjs
local boolean Tjs
local boolean Yjs
local boolean Gjs
local boolean gjs
local boolean hjs
local boolean Fjs
local boolean kjs
local boolean jjs
local boolean xjs
local boolean vjs
local boolean mjs
local boolean Qjs
local boolean Wjs
local boolean Ejs
local boolean Zjs
local boolean Ujs
local boolean Ijs
local boolean Pjs
local boolean Ajs
local boolean Djs
local boolean Hjs
local boolean Jjs
local boolean Kjs
local boolean Ljs
local boolean Xjs
local boolean Cjs
local boolean Vjs
local boolean Bjs
local boolean Njs
if wns==$484D3036 then
if uns>=4 then
set sns=Mas
set tns=$494D307B
set EFs=RTS(sns,tns)!=null==false
else
set EFs=false
endif
if EFs then
set ins=Mas
set Sns=$494D307B
call UnitAddItemById(ins,Sns)
endif
if uns>=8 then
set cns=Mas
set ons=$494D307D
set ZFs=RTS(cns,ons)!=null==false
else
set ZFs=false
endif
if ZFs then
set Ons=Mas
set lns=$494D307D
call UnitAddItemById(Ons,lns)
endif
if uns>=14 then
set bns=Mas
set yns=$494D307C
set UFs=RTS(bns,yns)!=null==false
else
set UFs=false
endif
if UFs then
set pns=Mas
set ens=$494D307C
call UnitAddItemById(pns,ens)
endif
if uns>=20 then
set qns=Mas
set ans=$494D3036
set IFs=RTS(qns,ans)!=null==false
else
set IFs=false
endif
if IFs then
set nns=Mas
set dns=$494D3036
call UnitAddItemById(nns,dns)
endif
endif
if wns==$484D3037 then
if uns>=4 then
set fns=Mas
set Rns=$494D306F
set PFs=RTS(fns,Rns)!=null==false
else
set PFs=false
endif
if PFs then
set Tns=Mas
set Yns=$494D306F
call UnitAddItemById(Tns,Yns)
endif
if uns>=8 then
set Gns=Mas
set gns=$494D3069
set AFs=RTS(Gns,gns)!=null==false
else
set AFs=false
endif
if AFs then
set hns=Mas
set Fns=$494D3069
call UnitAddItemById(hns,Fns)
endif
if uns>=14 then
set kns=Mas
set jns=$494D3037
set DFs=RTS(kns,jns)!=null==false
else
set DFs=false
endif
if DFs then
set xns=Mas
set vns=$494D3037
call UnitAddItemById(xns,vns)
endif
if uns>=20 then
set mns=Mas
set Qns=$494D3073
set HFs=RTS(mns,Qns)!=null==false
else
set HFs=false
endif
if HFs then
set Wns=Mas
set Ens=$494D3073
call UnitAddItemById(Wns,Ens)
endif
endif
if wns==$484D3035 then
if uns>=4 then
set Zns=Mas
set Uns=$494D307E
set JFs=RTS(Zns,Uns)!=null==false
else
set JFs=false
endif
if JFs then
set Ins=Mas
set Pns=$494D307E
call UnitAddItemById(Ins,Pns)
endif
if uns>=8 then
set Ans=Mas
set Dns=$494D3121
set KFs=RTS(Ans,Dns)!=null==false
else
set KFs=false
endif
if KFs then
set Hns=Mas
set Jns=$494D3121
call UnitAddItemById(Hns,Jns)
endif
if uns>=14 then
set Kns=Mas
set Lns=$494D3130
set LFs=RTS(Kns,Lns)!=null==false
else
set LFs=false
endif
if LFs then
set Xns=Mas
set Cns=$494D3130
call UnitAddItemById(Xns,Cns)
endif
if uns>=20 then
set Vns=Mas
set Bns=$494D3131
set XFs=RTS(Vns,Bns)!=null==false
else
set XFs=false
endif
if XFs then
set Nns=Mas
set Mns=$494D3131
call UnitAddItemById(Nns,Mns)
endif
endif
if wns==$484D3032 then
if uns>=4 then
set wds=Mas
set uds=$494D3132
set CFs=RTS(wds,uds)!=null==false
else
set CFs=false
endif
if CFs then
set rds=Mas
set sds=$494D3132
call UnitAddItemById(rds,sds)
endif
if uns>=8 then
set tds=Mas
set ids=$494D3133
set VFs=RTS(tds,ids)!=null==false
else
set VFs=false
endif
if VFs then
set Sds=Mas
set cds=$494D3133
call UnitAddItemById(Sds,cds)
endif
if uns>=14 then
set ods=Mas
set Ods=$494D3134
set BFs=RTS(ods,Ods)!=null==false
else
set BFs=false
endif
if BFs then
set lds=Mas
set bds=$494D3134
call UnitAddItemById(lds,bds)
endif
if uns>=20 then
set yds=Mas
set pds=$494D3135
set NFs=RTS(yds,pds)!=null==false
else
set NFs=false
endif
if NFs then
set eds=Mas
set qds=$494D3135
call UnitAddItemById(eds,qds)
endif
endif
if wns==$456D3173 then
if uns>=4 then
set ads=Mas
set nds=$494D306F
set MFs=RTS(ads,nds)!=null==false
else
set MFs=false
endif
if MFs then
set dds=Mas
set fds=$494D306F
call UnitAddItemById(dds,fds)
endif
if uns>=8 then
set Rds=Mas
set Tds=$494D3070
set wks=RTS(Rds,Tds)!=null==false
else
set wks=false
endif
if wks then
set Yds=Mas
set Gds=$494D3070
call UnitAddItemById(Yds,Gds)
endif
if uns>=14 then
set gds=Mas
set hds=$494D3071
set uks=RTS(gds,hds)!=null==false
else
set uks=false
endif
if uks then
set Fds=Mas
set kds=$494D3071
call UnitAddItemById(Fds,kds)
endif
if uns>=20 then
set jds=Mas
set xds=$494D3037
set rks=RTS(jds,xds)!=null==false
else
set rks=false
endif
if rks then
set vds=Mas
set mds=$494D3037
call UnitAddItemById(vds,mds)
endif
endif
if wns==$484D3038 then
if uns>=4 then
set Qds=Mas
set Wds=$494D3138
set sks=RTS(Qds,Wds)!=null==false
else
set sks=false
endif
if sks then
set Eds=Mas
set Zds=$494D3138
call UnitAddItemById(Eds,Zds)
set Uds=fg
set Ids=$414D6269
call UnitAddAbility(Uds,Ids)
set Pds=fg
set Ads=$41313434
call UnitAddAbility(Pds,Ads)
set Dds=fg
set Hds=$414D626B
call UnitAddAbility(Dds,Hds)
endif
if uns>=8 then
set Jds=Mas
set Kds=$736B756C
set tks=RTS(Jds,Kds)!=null==false
else
set tks=false
endif
if tks then
set Lds=Mas
set Xds=$736B756C
call UnitAddItemById(Lds,Xds)
set Cds=fg
set Vds=$41305657
call UnitAddAbility(Cds,Vds)
set Bds=fg
set Nds=$414D626A
call UnitAddAbility(Bds,Nds)
set Mds=fg
set wfs=$414D626C
call UnitAddAbility(Mds,wfs)
endif
if uns>=14 then
set ufs=Mas
set rfs=$494D3139
set iks=RTS(ufs,rfs)!=null==false
else
set iks=false
endif
if iks then
set sfs=Mas
set tfs=$494D3139
call UnitAddItemById(sfs,tfs)
set ifs=fg
set Sfs=$414D626D
call UnitAddAbility(ifs,Sfs)
set cfs=fg
set ofs=$414D626E
call UnitAddAbility(cfs,ofs)
set Ofs=fg
set lfs=$414D626F
call UnitAddAbility(Ofs,lfs)
endif
if uns>=20 then
set bfs=Mas
set yfs=$494D3161
set Sks=RTS(bfs,yfs)!=null==false
else
set Sks=false
endif
if Sks then
set pfs=Mas
set efs=$494D3161
call UnitAddItemById(pfs,efs)
set Yg=true
endif
endif
if wns==$4830324B then
if uns>=4 then
set qfs=Mas
set afs=$494D306F
set cks=RTS(qfs,afs)!=null==false
else
set cks=false
endif
if cks then
set nfs=Mas
set dfs=$494D306F
call UnitAddItemById(nfs,dfs)
endif
if uns>=8 then
set ffs=Mas
set Rfs=$494D306E
set oks=RTS(ffs,Rfs)!=null==false
else
set oks=false
endif
if oks then
set Tfs=Mas
set Yfs=$494D306E
call UnitAddItemById(Tfs,Yfs)
endif
if uns>=14 then
set Gfs=Mas
set gfs=$494D3037
set Oks=RTS(Gfs,gfs)!=null==false
else
set Oks=false
endif
if Oks then
set hfs=Mas
set Ffs=$494D3037
call UnitAddItemById(hfs,Ffs)
endif
if uns>=20 then
set kfs=Mas
set jfs=$494D3162
set lks=RTS(kfs,jfs)!=null==false
else
set lks=false
endif
if lks then
set xfs=Mas
set vfs=$494D3162
call UnitAddItemById(xfs,vfs)
endif
endif
if wns==$484D3033 then
if uns>=4 then
set mfs=Mas
set Qfs=$494D3163
set bks=RTS(mfs,Qfs)!=null==false
else
set bks=false
endif
if bks then
set Wfs=Mas
set Efs=$494D3163
call UnitAddItemById(Wfs,Efs)
endif
if uns>=8 then
set Zfs=Mas
set Ufs=$494D3164
set yks=RTS(Zfs,Ufs)!=null==false
else
set yks=false
endif
if yks then
set Ifs=Mas
set Pfs=$494D3164
call UnitAddItemById(Ifs,Pfs)
endif
if uns>=14 then
set Afs=Mas
set Dfs=$494D307A
set pks=RTS(Afs,Dfs)!=null==false
else
set pks=false
endif
if pks then
set Hfs=Mas
set Jfs=$494D307A
call UnitAddItemById(Hfs,Jfs)
endif
if uns>=20 then
set Kfs=Mas
set Lfs=$494D3165
set eks=RTS(Kfs,Lfs)!=null==false
else
set eks=false
endif
if eks then
set Xfs=Mas
set Cfs=$494D3165
call UnitAddItemById(Xfs,Cfs)
endif
endif
if wns==$55303046 then
if uns>=4 then
set Vfs=Mas
set Bfs=$6272696B
set qks=RTS(Vfs,Bfs)!=null==false
else
set qks=false
endif
if qks then
set Nfs=Mas
set Mfs=$6272696B
call UnitAddItemById(Nfs,Mfs)
endif
if uns>=8 then
set wRs=Mas
set uRs=$62726D41
set aks=RTS(wRs,uRs)!=null==false
else
set aks=false
endif
if aks then
set rRs=Mas
set sRs=$62726D41
call UnitAddItemById(rRs,sRs)
endif
if uns>=14 then
set tRs=Mas
set iRs=$62726962
set nks=RTS(tRs,iRs)!=null==false
else
set nks=false
endif
if nks then
set SRs=Mas
set cRs=$62726962
call UnitAddItemById(SRs,cRs)
endif
if uns>=20 then
set oRs=Mas
set ORs=$6272696C
set dks=RTS(oRs,ORs)!=null==false
else
set dks=false
endif
if dks then
set lRs=Mas
set bRs=$6272696C
call UnitAddItemById(lRs,bRs)
endif
endif
if wns==$55303047 then
if uns>=4 then
set yRs=Mas
set pRs=$62726964
set fks=RTS(yRs,pRs)!=null==false
else
set fks=false
endif
if fks then
set eRs=Mas
set qRs=$62726964
call UnitAddItemById(eRs,qRs)
endif
if uns>=8 then
set aRs=Mas
set nRs=$62726967
set Rks=RTS(aRs,nRs)!=null==false
else
set Rks=false
endif
if Rks then
set dRs=Mas
set fRs=$62726967
call UnitAddItemById(dRs,fRs)
endif
if uns>=14 then
set RRs=Mas
set TRs=$6272696E
set Tks=RTS(RRs,TRs)!=null==false
else
set Tks=false
endif
if Tks then
set YRs=Mas
set GRs=$6272696E
call UnitAddItemById(YRs,GRs)
endif
if uns>=20 then
set gRs=Mas
set hRs=$6272696F
set Yks=RTS(gRs,hRs)!=null==false
else
set Yks=false
endif
if Yks then
set FRs=Mas
set kRs=$6272696F
call UnitAddItemById(FRs,kRs)
endif
endif
if wns==$55303048 then
if uns>=4 then
set jRs=Mas
set xRs=$62726965
set Gks=RTS(jRs,xRs)!=null==false
else
set Gks=false
endif
if Gks then
set vRs=Mas
set mRs=$62726965
call UnitAddItemById(vRs,mRs)
endif
if uns>=8 then
set QRs=Mas
set WRs=$62726966
set gks=RTS(QRs,WRs)!=null==false
else
set gks=false
endif
if gks then
set ERs=Mas
set ZRs=$62726966
call UnitAddItemById(ERs,ZRs)
endif
if uns>=14 then
set URs=Mas
set IRs=$62726970
set hks=RTS(URs,IRs)!=null==false
else
set hks=false
endif
if hks then
set PRs=Mas
set ARs=$62726970
call UnitAddItemById(PRs,ARs)
endif
if uns>=20 then
set DRs=Mas
set HRs=$62726973
set Fks=RTS(DRs,HRs)!=null==false
else
set Fks=false
endif
if Fks then
set JRs=Mas
set KRs=$62726973
call UnitAddItemById(JRs,KRs)
endif
endif
if wns==$55303049 then
if uns>=4 then
set LRs=Mas
set XRs=$494D3038
set kks=RTS(LRs,XRs)!=null==false
else
set kks=false
endif
if kks then
set CRs=Mas
set VRs=$494D3038
call UnitAddItemById(CRs,VRs)
endif
if uns>=8 then
set BRs=Mas
set NRs=$6272696A
set jks=RTS(BRs,NRs)!=null==false
else
set jks=false
endif
if jks then
set MRs=Mas
set wTs=$6272696A
call UnitAddItemById(MRs,wTs)
endif
if uns>=14 then
set uTs=Mas
set rTs=$46454C53
set xks=RTS(uTs,rTs)!=null==false
else
set xks=false
endif
if xks then
set sTs=Mas
set tTs=$46454C53
call UnitAddItemById(sTs,tTs)
endif
if uns>=20 then
set iTs=Mas
set STs=$62726975
set vks=RTS(iTs,STs)!=null==false
else
set vks=false
endif
if vks then
set cTs=Mas
set oTs=$62726975
call UnitAddItemById(cTs,oTs)
endif
endif
if wns==$5530304A then
if uns>=4 then
set OTs=Mas
set lTs=$62726961
set mks=RTS(OTs,lTs)!=null==false
else
set mks=false
endif
if mks then
set bTs=Mas
set yTs=$62726961
call UnitAddItemById(bTs,yTs)
endif
if uns>=8 then
set pTs=Mas
set eTs=$6272636A
set Qks=RTS(pTs,eTs)!=null==false
else
set Qks=false
endif
if Qks then
set qTs=Mas
set aTs=$6272636A
call UnitAddItemById(qTs,aTs)
endif
if uns>=14 then
set nTs=Mas
set dTs=$62726972
set Wks=RTS(nTs,dTs)!=null==false
else
set Wks=false
endif
if Wks then
set fTs=Mas
set RTs=$62726972
call UnitAddItemById(fTs,RTs)
endif
if uns>=20 then
set TTs=Mas
set YTs=$62726971
set Eks=RTS(TTs,YTs)!=null==false
else
set Eks=false
endif
if Eks then
set GTs=Mas
set gTs=$62726971
call UnitAddItemById(GTs,gTs)
endif
endif
if wns==$5530304C then
if uns>=4 then
set hTs=Mas
set FTs=$6272697A
set Zks=RTS(hTs,FTs)!=null==false
else
set Zks=false
endif
if Zks then
set kTs=Mas
set jTs=$6272697A
call UnitAddItemById(kTs,jTs)
endif
if uns>=8 then
set xTs=Mas
set vTs=$62726161
set Uks=RTS(xTs,vTs)!=null==false
else
set Uks=false
endif
if Uks then
set mTs=Mas
set QTs=$62726161
call UnitAddItemById(mTs,QTs)
endif
if uns>=14 then
set WTs=Mas
set ETs=$62726162
set Iks=RTS(WTs,ETs)!=null==false
else
set Iks=false
endif
if Iks then
set ZTs=Mas
set UTs=$62726162
call UnitAddItemById(ZTs,UTs)
endif
if uns>=20 then
set ITs=Mas
set PTs=$62726164
set Pks=RTS(ITs,PTs)!=null==false
else
set Pks=false
endif
if Pks then
set ATs=Mas
set DTs=$62726164
call UnitAddItemById(ATs,DTs)
endif
endif
if wns==$5530304D then
if uns>=4 then
set HTs=Mas
set JTs=$62726A61
set Aks=RTS(HTs,JTs)!=null==false
else
set Aks=false
endif
if Aks then
set KTs=Mas
set LTs=$62726A61
call UnitAddItemById(KTs,LTs)
endif
if uns>=8 then
set XTs=Mas
set CTs=$62726A62
set Dks=RTS(XTs,CTs)!=null==false
else
set Dks=false
endif
if Dks then
set VTs=Mas
set BTs=$62726A62
call UnitAddItemById(VTs,BTs)
endif
if uns>=14 then
set NTs=Mas
set MTs=$62726A63
set Hks=RTS(NTs,MTs)!=null==false
else
set Hks=false
endif
if Hks then
set wYs=Mas
set uYs=$62726A63
call UnitAddItemById(wYs,uYs)
endif
if uns>=20 then
set rYs=Mas
set sYs=$62726A64
set Jks=RTS(rYs,sYs)!=null==false
else
set Jks=false
endif
if Jks then
set tYs=Mas
set iYs=$62726A64
call UnitAddItemById(tYs,iYs)
endif
endif
if wns==$45303037 or wns==$45303038 then
if uns>=4 then
set SYs=Mas
set cYs=$62727361
set Kks=RTS(SYs,cYs)!=null==false
else
set Kks=false
endif
if Kks then
set oYs=Mas
set OYs=$62727361
call UnitAddItemById(oYs,OYs)
endif
if uns>=8 then
set lYs=Mas
set bYs=$62727364
set Lks=RTS(lYs,bYs)!=null==false
else
set Lks=false
endif
if Lks then
set yYs=Mas
set pYs=$62727364
call UnitAddItemById(yYs,pYs)
endif
if uns>=14 then
set eYs=Mas
set qYs=$62727362
set Xks=RTS(eYs,qYs)!=null==false
else
set Xks=false
endif
if Xks then
set aYs=Mas
set nYs=$62727362
call UnitAddItemById(aYs,nYs)
endif
if uns>=20 then
set dYs=Mas
set fYs=$62727363
set Cks=RTS(dYs,fYs)!=null==false
else
set Cks=false
endif
if Cks then
set RYs=Mas
set TYs=$62727363
call UnitAddItemById(RYs,TYs)
endif
endif
if wns==$45303039 then
if uns>=4 then
set YYs=Mas
set GYs=$62727365
set Vks=RTS(YYs,GYs)!=null==false
else
set Vks=false
endif
if Vks then
set gYs=Mas
set hYs=$62727365
call UnitAddItemById(gYs,hYs)
endif
if uns>=8 then
set FYs=Mas
set kYs=$62727366
set Bks=RTS(FYs,kYs)!=null==false
else
set Bks=false
endif
if Bks then
set jYs=Mas
set xYs=$62727366
call UnitAddItemById(jYs,xYs)
endif
if uns>=14 then
set vYs=Mas
set mYs=$62727367
set Nks=RTS(vYs,mYs)!=null==false
else
set Nks=false
endif
if Nks then
set QYs=Mas
set WYs=$62727367
call UnitAddItemById(QYs,WYs)
endif
if uns>=20 then
set EYs=Mas
set ZYs=$62727368
set Mks=RTS(EYs,ZYs)!=null==false
else
set Mks=false
endif
if Mks then
set UYs=Mas
set IYs=$62727368
call UnitAddItemById(UYs,IYs)
endif
endif
if wns==$486A6169 then
if uns>=4 then
set PYs=Mas
set AYs=$70656E72
set wjs=RTS(PYs,AYs)!=null==false
else
set wjs=false
endif
if wjs then
set DYs=Mas
set HYs=$70656E72
call UnitAddItemById(DYs,HYs)
endif
if uns>=8 then
set JYs=Mas
set KYs=$72616731
set ujs=RTS(JYs,KYs)!=null==false
else
set ujs=false
endif
if ujs then
set LYs=Mas
set XYs=$72616731
call UnitAddItemById(LYs,XYs)
endif
if uns>=14 then
set CYs=Mas
set VYs=$6576746C
set rjs=RTS(CYs,VYs)!=null==false
else
set rjs=false
endif
if rjs then
set BYs=Mas
set NYs=$6576746C
call UnitAddItemById(BYs,NYs)
endif
if uns>=20 then
set MYs=Mas
set wGs=$494D3035
set sjs=RTS(MYs,wGs)!=null==false
else
set sjs=false
endif
if sjs then
set uGs=Mas
set rGs=$494D3035
call UnitAddItemById(uGs,rGs)
endif
endif
if wns==$4F303344 then
if uns>=4 then
set sGs=Mas
set tGs=$49303135
set tjs=RTS(sGs,tGs)!=null==false
else
set tjs=false
endif
if tjs then
set iGs=Mas
set SGs=$49303135
call UnitAddItemById(iGs,SGs)
endif
if uns>=8 then
set cGs=Mas
set oGs=$49303136
set ijs=RTS(cGs,oGs)!=null==false
else
set ijs=false
endif
if ijs then
set OGs=Mas
set lGs=$49303136
call UnitAddItemById(OGs,lGs)
endif
if uns>=14 then
set bGs=Mas
set yGs=$49303137
set Sjs=RTS(bGs,yGs)!=null==false
else
set Sjs=false
endif
if Sjs then
set pGs=Mas
set eGs=$49303137
call UnitAddItemById(pGs,eGs)
endif
if uns>=20 then
set qGs=Mas
set aGs=$49303138
set cjs=RTS(qGs,aGs)!=null==false
else
set cjs=false
endif
if cjs then
set nGs=Mas
set dGs=$49303138
call UnitAddItemById(nGs,dGs)
endif
endif
if wns==$456B6565 then
if uns>=4 then
set fGs=Mas
set RGs=$64657363
set ojs=RTS(fGs,RGs)!=null==false
else
set ojs=false
endif
if ojs then
set TGs=Mas
set YGs=$64657363
call UnitAddItemById(TGs,YGs)
endif
if uns>=8 then
set GGs=Mas
set gGs=$72737431
set Ojs=RTS(GGs,gGs)!=null==false
else
set Ojs=false
endif
if Ojs then
set hGs=Mas
set FGs=$72737431
call UnitAddItemById(hGs,FGs)
endif
if uns>=14 then
set kGs=Mas
set jGs=$6B70696E
set ljs=RTS(kGs,jGs)!=null==false
else
set ljs=false
endif
if ljs then
set xGs=Mas
set vGs=$6B70696E
call UnitAddItemById(xGs,vGs)
endif
if uns>=20 then
set mGs=Mas
set QGs=$494D3137
set bjs=RTS(mGs,QGs)!=null==false
else
set bjs=false
endif
if bjs then
set WGs=Mas
set EGs=$494D3137
call UnitAddItemById(WGs,EGs)
endif
endif
if wns==$4F636268 then
if uns>=4 then
set ZGs=Mas
set UGs=$72756D70
set yjs=RTS(ZGs,UGs)!=null==false
else
set yjs=false
endif
if yjs then
set IGs=Mas
set PGs=$72756D70
call UnitAddItemById(IGs,PGs)
endif
if uns>=8 then
set AGs=Mas
set DGs=$72737431
set pjs=RTS(AGs,DGs)!=null==false
else
set pjs=false
endif
if pjs then
set HGs=Mas
set JGs=$72737431
call UnitAddItemById(HGs,JGs)
endif
if uns>=14 then
set KGs=Mas
set LGs=$656E6773
set ejs=RTS(KGs,LGs)!=null==false
else
set ejs=false
endif
if ejs then
set XGs=Mas
set CGs=$656E6773
call UnitAddItemById(XGs,CGs)
endif
if uns>=20 then
set VGs=Mas
set BGs=$7368686E
set qjs=RTS(VGs,BGs)!=null==false
else
set qjs=false
endif
if qjs then
set NGs=Mas
set MGs=$7368686E
call UnitAddItemById(NGs,MGs)
endif
endif
if wns==$4F726B6E then
if uns>=4 then
set wgs=Mas
set ugs=$73707368
set ajs=RTS(wgs,ugs)!=null==false
else
set ajs=false
endif
if ajs then
set rgs=Mas
set sgs=$73707368
call UnitAddItemById(rgs,sgs)
endif
if uns>=8 then
set tgs=Mas
set igs=$62737064
set njs=RTS(tgs,igs)!=null==false
else
set njs=false
endif
if njs then
set Sgs=Mas
set cgs=$62737064
call UnitAddItemById(Sgs,cgs)
endif
if uns>=14 then
set ogs=Mas
set Ogs=$61786173
set djs=RTS(ogs,Ogs)!=null==false
else
set djs=false
endif
if djs then
set lgs=Mas
set bgs=$61786173
call UnitAddItemById(lgs,bgs)
endif
if uns>=20 then
set ygs=Mas
set pgs=$494D3031
set fjs=RTS(ygs,pgs)!=null==false
else
set fjs=false
endif
if fjs then
set egs=Mas
set qgs=$494D3031
call UnitAddItemById(egs,qgs)
endif
endif
if wns==$55776172 then
if uns>=4 then
set ags=Mas
set ngs=$62726163
set Rjs=RTS(ags,ngs)!=null==false
else
set Rjs=false
endif
if Rjs then
set dgs=Mas
set fgs=$62726163
call UnitAddItemById(dgs,fgs)
endif
if uns>=8 then
set Rgs=Mas
set Tgs=$6F646566
set Tjs=RTS(Rgs,Tgs)!=null==false
else
set Tjs=false
endif
if Tjs then
set Ygs=Mas
set Ggs=$6F646566
call UnitAddItemById(Ygs,Ggs)
endif
if uns>=14 then
set ggs=Mas
set hgs=$5469426C
set Yjs=RTS(ggs,hgs)!=null==false
else
set Yjs=false
endif
if Yjs then
set Fgs=Mas
set kgs=$5469426C
call UnitAddItemById(Fgs,kgs)
endif
if uns>=20 then
set jgs=Mas
set xgs=$536F6653
set Gjs=RTS(jgs,xgs)!=null==false
else
set Gjs=false
endif
if Gjs then
set vgs=Mas
set mgs=$536F6653
call UnitAddItemById(vgs,mgs)
endif
endif
if wns==$4E6D616E then
if uns>=4 then
set Qgs=Mas
set Wgs=$62726163
set gjs=RTS(Qgs,Wgs)!=null==false
else
set gjs=false
endif
if gjs then
set Egs=Mas
set Zgs=$62726163
call UnitAddItemById(Egs,Zgs)
endif
if uns>=8 then
set Ugs=Mas
set Igs=$6F646566
set hjs=RTS(Ugs,Igs)!=null==false
else
set hjs=false
endif
if hjs then
set Pgs=Mas
set Ags=$6F646566
call UnitAddItemById(Pgs,Ags)
endif
if uns>=14 then
set Dgs=Mas
set Hgs=$4D414E42
set Fjs=RTS(Dgs,Hgs)!=null==false
else
set Fjs=false
endif
if Fjs then
set Jgs=Mas
set Kgs=$4D414E42
call UnitAddItemById(Jgs,Kgs)
endif
if uns>=20 then
set Lgs=Mas
set Xgs=$46454C53
set kjs=RTS(Lgs,Xgs)!=null==false
else
set kjs=false
endif
if kjs then
set Cgs=Mas
set Vgs=$46454C53
call UnitAddItemById(Cgs,Vgs)
endif
endif
if wns==$4F303439 then
if uns>=4 then
set Bgs=Mas
set Ngs=$49303330
set jjs=RTS(Bgs,Ngs)!=null==false
else
set jjs=false
endif
if jjs then
set Mgs=Mas
set whs=$49303330
call UnitAddItemById(Mgs,whs)
endif
if uns>=8 then
set uhs=Mas
set rhs=$49303331
set xjs=RTS(uhs,rhs)!=null==false
else
set xjs=false
endif
if xjs then
set shs=Mas
set ths=$49303331
call UnitAddItemById(shs,ths)
endif
if uns>=14 then
set ihs=Mas
set Shs=$49303332
set vjs=RTS(ihs,Shs)!=null==false
else
set vjs=false
endif
if vjs then
set chs=Mas
set ohs=$49303332
call UnitAddItemById(chs,ohs)
endif
if uns>=20 then
set Ohs=Mas
set lhs=$49303333
set mjs=RTS(Ohs,lhs)!=null==false
else
set mjs=false
endif
if mjs then
set bhs=Mas
set yhs=$49303333
call UnitAddItemById(bhs,yhs)
endif
endif
if wns==$4F303443 then
if uns>=4 then
set phs=Mas
set ehs=$49303247
set Qjs=RTS(phs,ehs)!=null==false
else
set Qjs=false
endif
if Qjs then
set qhs=Mas
set ahs=$49303247
call UnitAddItemById(qhs,ahs)
endif
if uns>=8 then
set nhs=Mas
set dhs=$49303248
set Wjs=RTS(nhs,dhs)!=null==false
else
set Wjs=false
endif
if Wjs then
set fhs=Mas
set Rhs=$49303248
call UnitAddItemById(fhs,Rhs)
endif
if uns>=14 then
set Ths=Mas
set Yhs=$494D3037
set Ejs=RTS(Ths,Yhs)!=null==false
else
set Ejs=false
endif
if Ejs then
set Ghs=Mas
set ghs=$494D3037
call UnitAddItemById(Ghs,ghs)
endif
if uns>=20 then
set hhs=Mas
set Fhs=$49303249
set Zjs=RTS(hhs,Fhs)!=null==false
else
set Zjs=false
endif
if Zjs then
set khs=Mas
set jhs=$49303249
call UnitAddItemById(khs,jhs)
endif
endif
if wns==$55647468 then
if uns>=4 then
set xhs=Mas
set vhs=$5665476C
set Ujs=RTS(xhs,vhs)!=null==false
else
set Ujs=false
endif
if Ujs then
set mhs=Mas
set Qhs=$5665476C
call UnitAddItemById(mhs,Qhs)
endif
if uns>=8 then
set Whs=Mas
set Ehs=$64727068
set Ijs=RTS(Whs,Ehs)!=null==false
else
set Ijs=false
endif
if Ijs then
set Zhs=Mas
set Uhs=$64727068
call UnitAddItemById(Zhs,Uhs)
endif
if uns>=14 then
set Ihs=Mas
set Phs=$6573617A
set Pjs=RTS(Ihs,Phs)!=null==false
else
set Pjs=false
endif
if Pjs then
set Ahs=Mas
set Dhs=$6573617A
call UnitAddItemById(Ahs,Dhs)
endif
if uns>=20 then
set Hhs=Mas
set Jhs=$6876616C
set Ajs=RTS(Hhs,Jhs)!=null==false
else
set Ajs=false
endif
if Ajs then
set Khs=Mas
set Lhs=$6876616C
call UnitAddItemById(Khs,Lhs)
endif
endif
if wns==$55616E62 then
if uns>=8 then
set Xhs=Mas
set Chs=$49303038
set Djs=RTS(Xhs,Chs)!=null==false
else
set Djs=false
endif
if Djs then
set Vhs=Mas
set Bhs=$49303038
call UnitAddItemById(Vhs,Bhs)
endif
endif
if wns==$48617266 then
if uns>=8 then
set Nhs=Mas
set Mhs=$49303039
set Hjs=RTS(Nhs,Mhs)!=null==false
else
set Hjs=false
endif
if Hjs then
set wFs=Mas
set uFs=$49303039
call UnitAddItemById(wFs,uFs)
endif
endif
if wns==$55303130 then
if uns>=8 then
set rFs=Mas
set sFs=$49303042
set Jjs=RTS(rFs,sFs)!=null==false
else
set Jjs=false
endif
if Jjs then
set tFs=Mas
set iFs=$49303042
call UnitAddItemById(tFs,iFs)
endif
endif
if wns==$45657669 or wns==$45646D6D then
if uns>=4 then
set SFs=Mas
set cFs=$494D3136
set Kjs=RTS(SFs,cFs)!=null==false
else
set Kjs=false
endif
if Kjs then
set oFs=Mas
set OFs=$494D3136
call UnitAddItemById(oFs,OFs)
endif
if uns>=8 then
set lFs=Mas
set bFs=$4930324B
set Ljs=RTS(lFs,bFs)!=null==false
else
set Ljs=false
endif
if Ljs then
set yFs=Mas
set pFs=$4930324B
call UnitAddItemById(yFs,pFs)
endif
if uns>=14 then
set eFs=Mas
set qFs=$49303043
set Xjs=RTS(eFs,qFs)!=null==false
else
set Xjs=false
endif
if Xjs then
set aFs=Mas
set nFs=$49303043
call UnitAddItemById(aFs,nFs)
endif
if uns>=20 then
set dFs=Mas
set fFs=$746D6D6D
set Cjs=RTS(dFs,fFs)!=null==false
else
set Cjs=false
endif
if Cjs then
set RFs=Mas
set TFs=$746D6D6D
call UnitAddItemById(RFs,TFs)
endif
endif
if wns==$484D3034 then
if uns>=4 then
set YFs=Mas
set GFs=$494D306F
set Vjs=RTS(YFs,GFs)!=null==false
else
set Vjs=false
endif
if Vjs then
set gFs=Mas
set hFs=$494D306F
call UnitAddItemById(gFs,hFs)
endif
if uns>=14 then
set FFs=Mas
set kFs=$4930324E
set Bjs=RTS(FFs,kFs)!=null==false
else
set Bjs=false
endif
if Bjs then
set jFs=Mas
set xFs=$4930324E
call UnitAddItemById(jFs,xFs)
endif
if uns>=20 then
set vFs=Mas
set mFs=$4930324F
set Njs=RTS(vFs,mFs)!=null==false
else
set Njs=false
endif
if Njs then
set QFs=Mas
set WFs=$4930324F
call UnitAddItemById(QFs,WFs)
endif
endif
set rns=null
set sns=null
set ins=null
set cns=null
set Ons=null
set bns=null
set pns=null
set qns=null
set nns=null
set fns=null
set Tns=null
set Gns=null
set hns=null
set kns=null
set xns=null
set mns=null
set Wns=null
set Zns=null
set Ins=null
set Ans=null
set Hns=null
set Kns=null
set Xns=null
set Vns=null
set Nns=null
set wds=null
set rds=null
set tds=null
set Sds=null
set ods=null
set lds=null
set yds=null
set eds=null
set ads=null
set dds=null
set Rds=null
set Yds=null
set gds=null
set Fds=null
set jds=null
set vds=null
set Qds=null
set Eds=null
set Uds=null
set Pds=null
set Dds=null
set Jds=null
set Lds=null
set Cds=null
set Bds=null
set Mds=null
set ufs=null
set sfs=null
set ifs=null
set cfs=null
set Ofs=null
set bfs=null
set pfs=null
set qfs=null
set nfs=null
set ffs=null
set Tfs=null
set Gfs=null
set hfs=null
set kfs=null
set xfs=null
set mfs=null
set Wfs=null
set Zfs=null
set Ifs=null
set Afs=null
set Hfs=null
set Kfs=null
set Xfs=null
set Vfs=null
set Nfs=null
set wRs=null
set rRs=null
set tRs=null
set SRs=null
set oRs=null
set lRs=null
set yRs=null
set eRs=null
set aRs=null
set dRs=null
set RRs=null
set YRs=null
set gRs=null
set FRs=null
set jRs=null
set vRs=null
set QRs=null
set ERs=null
set URs=null
set PRs=null
set DRs=null
set JRs=null
set LRs=null
set CRs=null
set BRs=null
set MRs=null
set uTs=null
set sTs=null
set iTs=null
set cTs=null
set OTs=null
set bTs=null
set pTs=null
set qTs=null
set nTs=null
set fTs=null
set TTs=null
set GTs=null
set hTs=null
set kTs=null
set xTs=null
set mTs=null
set WTs=null
set ZTs=null
set ITs=null
set ATs=null
set HTs=null
set KTs=null
set XTs=null
set VTs=null
set NTs=null
set wYs=null
set rYs=null
set tYs=null
set SYs=null
set oYs=null
set lYs=null
set yYs=null
set eYs=null
set aYs=null
set dYs=null
set RYs=null
set YYs=null
set gYs=null
set FYs=null
set jYs=null
set vYs=null
set QYs=null
set EYs=null
set UYs=null
set PYs=null
set DYs=null
set JYs=null
set LYs=null
set CYs=null
set BYs=null
set MYs=null
set uGs=null
set sGs=null
set iGs=null
set cGs=null
set OGs=null
set bGs=null
set pGs=null
set qGs=null
set nGs=null
set fGs=null
set TGs=null
set GGs=null
set hGs=null
set kGs=null
set xGs=null
set mGs=null
set WGs=null
set ZGs=null
set IGs=null
set AGs=null
set HGs=null
set KGs=null
set XGs=null
set VGs=null
set NGs=null
set wgs=null
set rgs=null
set tgs=null
set Sgs=null
set ogs=null
set lgs=null
set ygs=null
set egs=null
set ags=null
set dgs=null
set Rgs=null
set Ygs=null
set ggs=null
set Fgs=null
set jgs=null
set vgs=null
set Qgs=null
set Egs=null
set Ugs=null
set Pgs=null
set Dgs=null
set Jgs=null
set Lgs=null
set Cgs=null
set Bgs=null
set Mgs=null
set uhs=null
set shs=null
set ihs=null
set chs=null
set Ohs=null
set bhs=null
set phs=null
set qhs=null
set nhs=null
set fhs=null
set Ths=null
set Ghs=null
set hhs=null
set khs=null
set xhs=null
set mhs=null
set Whs=null
set Zhs=null
set Ihs=null
set Ahs=null
set Hhs=null
set Khs=null
set Xhs=null
set Vhs=null
set Nhs=null
set wFs=null
set rFs=null
set tFs=null
set SFs=null
set oFs=null
set lFs=null
set yFs=null
set eFs=null
set aFs=null
set dFs=null
set RFs=null
set YFs=null
set gFs=null
set FFs=null
set jFs=null
set vFs=null
set QFs=null
endfunction
function Zji takes nothing returns nothing
call Mjs(GetTriggerUnit())
endfunction
function Zku takes nothing returns boolean
return true
endfunction
function Znl takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function Znu takes nothing returns boolean
local trigger Tnu
local trigger Ynu
local trigger Gnu
local rect gnu
local region hnu
local trigger Fnu
local boolexpr knu
local trigger jnu
local playerunitevent xnu
local trigger vnu
local playerunitevent mnu
local integer Qnu
local trigger Wnu
local boolexpr Enu
set Gq=CreateSound("Units\\Creeps\\Satyr\\SatyreReady1.wav",false,false,false,10,10,"DefaultEAXON")
set gq=CreateSound("Units\\Undead\\Necromancer\\NecromancerYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
set hq=CreateSound("Units\\NightElf\\Maiev\\MaievYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
set Fq=CreateSound("Units\\NightElf\\Maiev\\MaievYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
set kq=CreateSound("Units\\Creeps\\SludgeMonster\\SludgeBeastDeath1.wav",false,false,false,10,10,"DefaultEAXON")
set jq=CreateSound("Units\\Undead\\CryptFiend\\CryptFiendYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
set xq=CreateSound("SwarmQueen.mp3",false,false,false,127,127,"DefaultEAXON")
call CreateSound("Units\\Undead\\Varimathras\\VarimathrasYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call CreateSound("Units\\Undead\\Varimathras\\VarimathrasYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
set vq=CreateSound("Units\\Creeps\\Hydra\\HydraDeath1.wav",false,false,false,10,10,"DefaultEAXON")
set mq=CreateSound("Terokk.mp3",false,false,false,10,10,"DefaultEAXON")
set Qq=CreateSound("Virix.mp3",false,false,false,10,10,"DefaultEAXON")
set Wq=CreateSound("Reshad.mp3",false,false,false,10,10,"DefaultEAXON")
call CreateSound("Nozdomu.mp3",false,false,false,10,10,"DefaultEAXON")
set Eq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterYesAttack4.wav",false,false,false,10,10,"DefaultEAXON")
set Zq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
set Uq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
set Iq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterReady1.wav",false,false,false,10,10,"DefaultEAXON")
set Pq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
set Aq=CreateSound("Units\\Creeps\\PandarenBrewmaster\\PandarenBrewmasterYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
set Dq=CreateSound("Units\\Demon\\Infernal\\InfernalBirth1.wav",false,false,false,10,10,"DefaultEAXON")
set Hq=CreateSound("Summon.mp3",false,false,false,10,10,"DefaultEAXON")
set Jq=CreateSound("Karsh.mp3",false,false,false,10,10,"DefaultEAXON")
set Kq=CreateSound("Sinestra.mp3",false,false,false,10,10,"DefaultEAXON")
set Lq=CreateSound("Maxnar.mp3",false,false,false,10,10,"DefaultEAXON")
set Xq=CreateSound("NefarianSU.mp3",false,false,false,10,10,"DefaultEAXON")
set Cq=CreateSound("BlackSummon.mp3",false,false,false,10,10,"DefaultEAXON")
set Vq=CreateSound("RedSummon.mp3",false,false,false,10,10,"DefaultEAXON")
set Bq=CreateSound("BlueSummon.mp3",false,false,false,10,10,"DefaultEAXON")
set Nq=CreateSound("VioletSummon.mp3",false,false,false,10,10,"DefaultEAXON")
set Mq=CreateSound("GreenSummon.mp3",false,false,false,10,10,"DefaultEAXON")
set wa=CreateSound("Units\\Orc\\Hellscream\\GromYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call CreateSound("RanbowIsBaraka.mp3",false,false,false,10,10,"DefaultEAXON")
set ua=CreateSound("ZulVipusk2.wav",false,false,false,10,10,"DefaultEAXON")
set ra=CreateSound("ZulVipusk3.wav",false,false,false,10,10,"DefaultEAXON")
set sa=CreateSound("MalornSummon.wav",false,false,false,10,10,"DefaultEAXON")
set ta=CreateSound("Jenoth.mp3",false,false,false,10,10,"DefaultEAXON")
set ia=CreateSound("Nisha.mp3",false,false,false,10,10,"DefaultEAXON")
set Sa=CreateSound("Kira.mp3",false,false,false,10,10,"DefaultEAXON")
set ca=CreateSound("Kimbul.mp3",false,false,false,10,10,"DefaultEAXON")
set oa=CreateSound("EudoraSumon.mp3",false,false,false,10,10,"DefaultEAXON")
set Oa=CreateSound("ToxicWater.mp3",false,false,false,10,10,"DefaultEAXON")
set la=CreateSound("FUCKYOU.mp3",false,false,false,10,10,"DefaultEAXON")
set ba=CreateSound("ArksaySold.mp3",false,false,false,10,10,"DefaultEAXON")
set ya=CreateSound("Units\\Creeps\\LordGarithos\\GarithosWhat3.wav",false,false,false,10,10,"DefaultEAXON")
set pa=CreateSound("Units\\Creeps\\LordGarithos\\GarithosReady1.wav",false,false,false,10,10,"DefaultEAXON")
set ea=CreateSound("Units\\NightElf\\Shandris\\ShandrisPissed1.wav",false,false,false,10,10,"DefaultEAXON")
set qa=CreateSound("Units\\NightElf\\Shandris\\ShandrisPissed2.wav",false,false,false,10,10,"DefaultEAXON")
set aa=CreateSound("Units\\Creeps\\Bandit\\BanditPissed1.wav",false,false,false,10,10,"DefaultEAXON")
set na=CreateSound("Units\\Creeps\\Bandit\\BanditPissed2.wav",false,false,false,10,10,"DefaultEAXON")
set da=CreateSound("Units\\Creeps\\Bandit\\BanditWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
set fa=CreateSound("Garfang.wav",false,false,false,10,10,"DefaultEAXON")
set Ra=CreateSound("Hogger.mp3",false,false,false,10,10,"DefaultEAXON")
set Ta=CreateSound("Sagepaw.wav",false,false,false,10,10,"DefaultEAXON")
set Ya=CreateSound("Units\\Orc\\Spiritwolf\\SpiritWolfWhat1.wav",false,false,false,10,10,"DefaultEAXON")
set Ga=CreateSound("Stormsong.mp3",false,false,false,10,10,"DefaultEAXON")
set ga=CreateSound("Units\\Creeps\\HumanTransportShip\\BoatWhat2.wav",false,false,false,10,10,"DefaultEAXON")
set ha=CreateSound("AnduinVipusk.wav",false,false,false,10,10,"DefaultEAXON")
set Fa=CreateSound("WarionWrynn1.wav",false,false,false,10,10,"DefaultEAXON")
set ka=CreateSound("WarionWrynn2.wav",false,false,false,10,10,"DefaultEAXON")
set Tnu=CreateTrigger()
set Gnu=Tnu
set gnu=bj_mapInitialPlayableArea
set hnu=CreateRegion()
call RegionAddRect(hnu,gnu)
call TriggerRegisterEnterRegion(Gnu,hnu,null)
set Fnu=Tnu
set knu=Condition(S5)
call TriggerAddCondition(Fnu,knu)
set Ynu=CreateTrigger()
set jnu=Ynu
set xnu=EVENT_PLAYER_HERO_REVIVE_FINISH
set vnu=jnu
set mnu=xnu
set Qnu=0
loop
call TriggerRegisterPlayerUnitEvent(vnu,Player(Qnu),mnu,null)
set Qnu=Qnu+1
exitwhen Qnu==bj_MAX_PLAYER_SLOTS
endloop
set Wnu=Ynu
set Enu=Condition(c5)
call TriggerAddCondition(Wnu,Enu)
call SetSoundDuration(Gq,5374)
call SetSoundChannel(Gq,0)
call SetSoundPitch(Gq,1.)
call SetSoundDuration(gq,5374)
call SetSoundChannel(gq,0)
call SetSoundPitch(gq,1.)
call SetSoundDuration(hq,5374)
call SetSoundChannel(hq,0)
call SetSoundPitch(hq,1.)
call SetSoundDuration(Fq,5374)
call SetSoundChannel(Fq,0)
call SetSoundPitch(Fq,1.)
call SetSoundDuration(kq,5374)
call SetSoundChannel(kq,0)
call SetSoundPitch(kq,1.)
call SetSoundDuration(jq,5374)
call SetSoundChannel(jq,0)
call SetSoundPitch(jq,1.)
call SetSoundDuration(xq,5374)
call SetSoundChannel(xq,0)
call SetSoundPitch(xq,1.)
call SetSoundVolume(xq,200)
call SetSoundDuration(cg,5374)
call SetSoundChannel(cg,0)
call SetSoundPitch(cg,1.)
call SetSoundDuration(vq,5374)
call SetSoundChannel(vq,0)
call SetSoundPitch(vq,1.)
set Tnu=null
set Ynu=null
set Gnu=null
set gnu=null
set hnu=null
set Fnu=null
set knu=null
set jnu=null
set xnu=null
set vnu=null
set mnu=null
set Wnu=null
set Enu=null
return true
endfunction
function Zqe takes nothing returns nothing
local texttag vqe
local string mqe
local real Qqe
local real Wqe
local real Eqe
if pr>0 then
set pr=pr-1
set vqe=yr
set mqe=I2S(pr)
set Qqe=13.
set Eqe=Qqe
set Wqe=Eqe*.023/10.
call SetTextTagText(vqe,mqe,Wqe)
endif
set vqe=null
endfunction
function uVt takes string PCt returns boolean
local trigger ACt
local playerunitevent DCt
local code HCt
local playerunitevent JCt
local code KCt
local playerunitevent LCt
local code XCt
local playerunitevent CCt
local code VCt
local playerunitevent BCt
local code NCt
local playerunitevent MCt
local code wVt
set aW[qW]=PCt
set qW=qW+1
set iO=CreateTrigger()
set SO=CreateTimer()
set cO=CreateTimer()
set oO=CreateTimer()
set OO=kHw("when calling new_LinkedList in AltarGold, line 26")
set lO=kHw("when calling new_LinkedList in AltarGold, line 27")
set bO=kHw("when calling new_LinkedList in AltarGold, line 28")
set yO=null
set pO=null
set eO=null
set gO=CreateSound("GoldAltar.mp3",false,false,false,10,10,"DefaultEAXON")
set ACt=iO
call DisableTrigger(ACt)
call TriggerRegisterTimerEvent(iO,1.,true)
call TriggerAddAction(iO,xN)
set DCt=EVENT_PLAYER_UNIT_SPELL_CAST
set HCt=vN
call emO(DCt,null,HCt,null)
set JCt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set KCt=mN
call emO(JCt,null,KCt,null)
set LCt=EVENT_PLAYER_HERO_LEVEL
set XCt=QN
call emO(LCt,null,XCt,null)
set CCt=EVENT_PLAYER_UNIT_DEATH
set VCt=WN
call emO(CCt,null,VCt,null)
set BCt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NCt=EN
call emO(BCt,null,NCt,null)
set MCt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set wVt=ZN
call emO(MCt,null,wVt,null)
set qW=qW-1
set ACt=null
set DCt=null
set JCt=null
set LCt=null
set CCt=null
set BCt=null
set MCt=null
return true
endfunction
function Zrb takes nothing returns boolean
set qW=0
return uVt("via function reference AltarGold, line 1")
endfunction
function Zuu takes nothing returns boolean
return true
endfunction
function ZvO takes nothing returns nothing
local unit FvO=GetTriggerUnit()
local unit kvO=FvO
local string jvO="attack"
local real WvO=Qw[24]
local real EvO=Ww[24]
local real xvO=WvO
local real vvO=EvO
local unit mvO
local unittype QvO
call IssuePointOrder(kvO,jvO,xvO,vvO)
set mvO=FvO
set QvO=UNIT_TYPE_HERO
if IsUnitType(mvO,QvO) then
call SaveInteger(qu,GetHandleId(FvO),$6D6F7665,24)
endif
set FvO=null
set kvO=null
set mvO=null
set QvO=null
endfunction
function Zwu takes nothing returns nothing
set pq=pq-1
if pq==0 then
set eq=GetEnumUnit()
endif
endfunction
function Zyc takes nothing returns boolean
return true
endfunction
function a1b takes nothing returns boolean
local playerunitevent l1b
local code b1b
local playerunitevent y1b
local code p1b
local playerunitevent e1b
local code q1b
set ad[0]=-530
set ad[1]=-530
set ad[2]=-190
set ad[3]=380
set ad[4]=530
set ad[5]=530
set nd[0]=4800
set nd[1]=5300
set nd[2]=4225
set nd[3]=4225
set nd[4]=5300
set nd[5]=4800
set dd[0]=-530
set dd[1]=-530
set dd[2]=-190
set dd[3]=380
set dd[4]=530
set dd[5]=530
set fd[0]=-4800
set fd[1]=-5300
set fd[2]=-4225
set fd[3]=-4225
set fd[4]=-5300
set fd[5]=-4800
set Rd[0]=5300
set Rd[1]=4800
set Rd[2]=4225
set Rd[3]=4225
set Rd[4]=4800
set Rd[5]=5300
set Td[0]=-530
set Td[1]=-530
set Td[2]=-190
set Td[3]=380
set Td[4]=530
set Td[5]=530
set Yd[0]=-5300
set Yd[1]=-4800
set Yd[2]=-4225
set Yd[3]=-4225
set Yd[4]=-4800
set Yd[5]=-5300
set Gd[0]=-530
set Gd[1]=-530
set Gd[2]=-190
set Gd[3]=380
set Gd[4]=530
set Gd[5]=530
set gd=null
set l1b=EVENT_PLAYER_UNIT_SPELL_CAST
set b1b=x7
call emO(l1b,null,b1b,null)
set y1b=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set p1b=v7
call emO(y1b,null,p1b,null)
set e1b=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set q1b=m7
call emO(e1b,null,q1b,null)
set l1b=null
set y1b=null
set e1b=null
return true
endfunction
function a3b takes nothing returns boolean
return true
endfunction
function a5i takes nothing returns boolean
local trigger o5i
local trigger O5i
local playerunitevent l5i
local trigger b5i
local playerunitevent y5i
local integer p5i
local trigger e5i
local code q5i
set wd=CreateTrigger()
set o5i=wd
call DisableTrigger(o5i)
set O5i=wd
set l5i=EVENT_PLAYER_UNIT_ATTACKED
set b5i=O5i
set y5i=l5i
set p5i=0
loop
call TriggerRegisterPlayerUnitEvent(b5i,Player(p5i),y5i,null)
set p5i=p5i+1
exitwhen p5i==bj_MAX_PLAYER_SLOTS
endloop
set e5i=wd
set q5i=N6
call TriggerAddAction(e5i,q5i)
set o5i=null
set O5i=null
set l5i=null
set b5i=null
set y5i=null
set e5i=null
return true
endfunction
function a6u takes nothing returns boolean
local playerunitevent o6u
local code O6u
local trigger l6u
local trigger b6u
local rect y6u
local region p6u
local trigger e6u
local boolexpr q6u
set dy=CreateTrigger()
set o6u=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set O6u=G1
call emO(o6u,null,O6u,null)
set l6u=dy
call DisableTrigger(l6u)
set b6u=dy
set y6u=bj_mapInitialPlayableArea
set p6u=CreateRegion()
call RegionAddRect(p6u,y6u)
call TriggerRegisterEnterRegion(b6u,p6u,null)
set e6u=dy
set q6u=Condition(g1)
call TriggerAddCondition(e6u,q6u)
set o6u=null
set l6u=null
set b6u=null
set y6u=null
set p6u=null
set e6u=null
set q6u=null
return true
endfunction
function a7s takes nothing returns boolean
return true
endfunction
function a8S takes nothing returns boolean
return true
endfunction
function a8b takes nothing returns boolean
local trigger y8b
local trigger p8b
local playerunitevent e8b
local integer q8b
set my=CreateTrigger()
set y8b=my
call DisableTrigger(y8b)
set p8b=my
set e8b=EVENT_PLAYER_UNIT_DEATH
set q8b=0
loop
call TriggerRegisterPlayerUnitEvent(p8b,Player(q8b),e8b,null)
set q8b=q8b+1
exitwhen q8b==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(my,K1)
set y8b=null
set p8b=null
set e8b=null
return true
endfunction
function a9u takes nothing returns nothing
local unit e9u=GetRevivingUnit()
local unit q9u=e9u
if GetUnitTypeId(q9u)==$5530304A then
set Zy=true
endif
set e9u=null
set q9u=null
endfunction
function hMi takes string nMi returns integer
local integer dMi
local string fMi
local integer RMi
local integer TMi
local integer YMi
local real GMi
local real gMi
set aW[qW]=nMi
set qW=qW+1
set fMi="when calling alloc_DummyCaster in DummyCaster, line 34"
set aW[qW]=fMi
set qW=qW+1
if FF==0 then
if kF<32768 then
set kF=kF+1
set RMi=kF
set jF[RMi]=854
else
call L8c("Out of memory: Could not create DummyCaster.","when calling error in DummyCaster, line 28")
set RMi=0
endif
else
set FF=FF-1
set RMi=hF[FF]
set jF[RMi]=854
endif
set qW=qW-1
set dMi=RMi
set TMi=dMi
set YMi=TMi
set Wj[YMi]=5.
set Ej[YMi]=0
set GMi=bh
set gMi=yh
set Zj[YMi]=GMi
set Uj[YMi]=gMi
set Ij[YMi]=yl
set qW=qW-1
return dMi
endfunction
function n9r takes integer S9r,unit c9r,integer o9r,string O9r returns nothing
local integer l9r
local real b9r
local string y9r
local integer p9r
local real e9r
local integer q9r
local string a9r
set aW[qW]=O9r
set qW=qW+1
set Ej[S9r]=Ej[S9r]+1
set b9r=Wj[S9r]
set y9r="when calling alloc_CallbackSingle_doAfter_DummyCaster_DummyCaster in DummyCaster, line 89"
set aW[qW]=y9r
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set p9r=fF
set RF[p9r]=708
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DummyCaster_DummyCaster.","when calling error in DummyCaster, line 89")
set p9r=0
endif
else
set dF=dF-1
set p9r=nF[dF]
set RF[p9r]=708
endif
set qW=qW-1
set l9r=p9r
set Pj[l9r]=c9r
set Aj[l9r]=o9r
set Dj[l9r]=S9r
set e9r=b9r
set q9r=l9r
set a9r="when calling doAfter in DummyCaster, line 89"
set aW[qW]=a9r
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),e9r,q9r,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function t7l takes integer w7l,integer u7l,string r7l returns unit
local unit s7l
if u7l<0 or u7l>=6 then
call L8c("Index out of Bounds",r7l)
elseif u7l<=2 then
if u7l<=1 then
if u7l<=0 then
set s7l=gW[w7l]
else
set s7l=hW[w7l]
endif
else
set s7l=FW[w7l]
endif
elseif u7l<=4 then
if u7l<=3 then
set s7l=kW[w7l]
else
set s7l=jW[w7l]
endif
else
set s7l=xW[w7l]
endif
set Utw=s7l
set s7l=null
return Utw
endfunction
function y3e takes integer l3e,string b3e returns unit
set aW[qW]=b3e
set qW=qW+1
if Kj[l3e]>0 then
set Kj[l3e]=Kj[l3e]-1
set Hj[l3e]=ModuloInteger(Hj[l3e]+1,6)
set qW=qW-1
return t7l(l3e,Hj[l3e],"when reading array ArrayQueue_units in  in DummyRecycler, line 78")
else
call L8c("Queue empty","when calling error in DummyRecycler, line 80")
set qW=qW-1
return null
endif
endfunction
function NXu takes real fXu,real RXu,real TXu,string YXu returns unit
local integer GXu
local unit gXu
local unit hXu
local unit FXu
local unit kXu
local real jXu
local integer xXu
local real vXu
local real mXu
local real QXu
local integer WXu
local string EXu
local unit ZXu
local unit UXu
local real IXu
local real PXu
local unit AXu
local unit DXu
local unit HXu
local real JXu
local unit KXu
local real LXu
local unit XXu
local real CXu
local real VXu
local real BXu
set aW[qW]=YXu
set qW=qW+1
set CXu=TXu
set QXu=CXu
set jXu=ModuloReal(QXu*57.295779513,360.)/ep
if jXu>0. then
set vXu=jXu+.5
set xXu=R2I(vXu)
else
set mXu=jXu-.5
set xXu=R2I(mXu)
endif
set GXu=ModuloInteger(xXu,8)
if Kj[qp[GXu]]>0 then
set WXu=qp[GXu]
set EXu="when calling dequeue in DummyRecycler, line 39"
set aW[qW]=EXu
set qW=qW+1
if QF[WXu]==0 then
if WXu==0 then
call L8c("Nullpointer exception when calling ArrayQueue.dequeue","when calling error in DummyRecycler, line 74")
else
call L8c("Called ArrayQueue.dequeue on invalid object.","when calling error in DummyRecycler, line 74")
endif
endif
set ZXu=y3e(WXu,"when calling dequeue in DummyRecycler, line 74")
set qW=qW-1
set gXu=ZXu
set UXu=gXu
set VXu=fXu
set BXu=RXu
set IXu=VXu
set PXu=BXu
set AXu=UXu
set HXu=AXu
set JXu=IXu
call SetUnitX(HXu,JXu)
set DXu=AXu
set KXu=DXu
set LXu=PXu
call SetUnitY(KXu,LXu)
set hXu=gXu
set XXu=hXu
call PauseUnit(XXu,false)
set FXu=hXu
set qW=qW-1
set gtw=FXu
set gXu=null
set hXu=null
set FXu=null
set kXu=null
set ZXu=null
set UXu=null
set AXu=null
set DXu=null
set HXu=null
set KXu=null
set XXu=null
return gtw
else
set kXu=Z3i(fXu,RXu,yl,TXu)
set qW=qW-1
set htw=kXu
set gXu=null
set hXu=null
set FXu=null
set kXu=null
set ZXu=null
set UXu=null
set AXu=null
set DXu=null
set HXu=null
set KXu=null
set XXu=null
return htw
endif
endfunction
function oFu takes integer Yhu,integer Ghu,integer ghu,string hhu returns unit
local unit Fhu
local unit khu
local unit jhu
local real xhu
local real vhu
local real mhu
local real Qhu
local unit Whu
local real Ehu
local real Zhu
local unit Uhu
local unit Ihu
local unit Phu
local real Ahu
local unit Dhu
local real Hhu
local unit Jhu
local integer Khu
local unit Lhu
local real Xhu
local unit Chu
local unitstate Vhu
local real Bhu
local unit Nhu
local integer Mhu
local integer wFu
local unit uFu
local player rFu
local boolean sFu
local real tFu
local real iFu
local real SFu
local real cFu
set aW[qW]=hhu
set qW=qW+1
set Fhu=NXu(Zj[Yhu],Uj[Yhu],0.,"when calling get in DummyCaster, line 78")
set tFu=Zj[Yhu]
set iFu=Uj[Yhu]
set xhu=tFu
set vhu=iFu
set mhu=xhu
set Qhu=vhu
if mhu>Xd and mhu<Vd and Qhu>Cd and Qhu<Bd then
set Whu=Fhu
set SFu=Zj[Yhu]
set cFu=Uj[Yhu]
set Ehu=SFu
set Zhu=cFu
set Uhu=Whu
set Phu=Uhu
set Ahu=Ehu
call SetUnitX(Phu,Ahu)
set Ihu=Uhu
set Dhu=Ihu
set Hhu=Zhu
call SetUnitY(Dhu,Hhu)
endif
set khu=Fhu
set Jhu=khu
set Khu=Ghu
call UnitAddAbility(Jhu,Khu)
set jhu=khu
set Lhu=jhu
set Xhu=1000000.
set Chu=Lhu
set Vhu=UNIT_STATE_MANA
set Bhu=Xhu
call SetUnitState(Chu,Vhu,Bhu)
if ghu>1 then
set Nhu=Fhu
set Mhu=Ghu
set wFu=ghu
call SetUnitAbilityLevel(Nhu,Mhu,wFu)
endif
set uFu=Fhu
set rFu=Ij[Yhu]
set sFu=false
call SetUnitOwner(uFu,rFu,sFu)
set qW=qW-1
set Gtw=Fhu
set Fhu=null
set khu=null
set jhu=null
set Whu=null
set Uhu=null
set Ihu=null
set Phu=null
set Dhu=null
set Jhu=null
set Lhu=null
set Chu=null
set Vhu=null
set Nhu=null
set uFu=null
set rFu=null
return Gtw
endfunction
function kec takes integer Oec,integer lec,integer bec,integer yec,string pec returns unit
local unit eec
local boolean qec
local integer aec
local integer nec
local integer dec
local string fec
local unit Rec
local unit Tec
local integer Yec
local integer Gec
local unit gec
local integer hec
local string Fec
set aW[qW]=pec
set qW=qW+1
set aec=Oec
set nec=lec
set dec=bec
set fec="when calling prepare in DummyCaster, line 50"
set aW[qW]=fec
set qW=qW+1
if jF[aec]==0 then
if aec==0 then
call L8c("Nullpointer exception when calling DummyCaster.prepare","when calling error in DummyCaster, line 77")
else
call L8c("Called DummyCaster.prepare on invalid object.","when calling error in DummyCaster, line 77")
endif
endif
set Rec=oFu(aec,nec,dec,"when calling prepare in DummyCaster, line 77")
set qW=qW-1
set eec=Rec
set Tec=eec
set Yec=yec
set qec=IssueImmediateOrderById(Tec,Yec)
set Gec=Oec
set gec=eec
set hec=lec
set Fec="when calling finish in DummyCaster, line 52"
set aW[qW]=Fec
set qW=qW+1
if jF[Gec]==0 then
if Gec==0 then
call L8c("Nullpointer exception when calling DummyCaster.finish","when calling error in DummyCaster, line 87")
else
call L8c("Called DummyCaster.finish on invalid object.","when calling error in DummyCaster, line 87")
endif
endif
call n9r(Gec,gec,hec,"when calling finish in DummyCaster, line 87")
set qW=qW-1
if not qec then
set eec=null
endif
set qW=qW-1
set Qtw=eec
set eec=null
set Rec=null
set Tec=null
set gec=null
return Qtw
endfunction
function JCr takes string MXr returns nothing
local integer wCr
local location uCr
local real rCr
local real sCr
local integer tCr
local integer iCr
local integer SCr
local integer cCr
local unit oCr
local integer OCr
local location lCr
local string bCr
local integer yCr
local player pCr
local string eCr
local integer qCr
local player aCr
local integer nCr
local real dCr
local string fCr
local integer RCr
local real TCr
local integer YCr
local real GCr
local real gCr
local string hCr
local integer FCr
local real kCr
local real jCr
local integer xCr
local integer vCr
local integer mCr
local integer QCr
local string WCr
local real ECr
local real ZCr
local real UCr
local real ICr
local real PCr
local real ACr
local real DCr
local real HCr
set aW[qW]=MXr
set qW=qW+1
if GetSpellAbilityId()==$41304453 then
set oCr=GetSpellAbilityUnit()
set OCr=$41304453
set wCr=GetUnitAbilityLevel(oCr,OCr)
set uCr=GetSpellTargetLoc()
set ECr=GetLocationX(uCr)
set ZCr=GetLocationY(uCr)
set rCr=ECr
set sCr=ZCr
set lCr=uCr
set bCr="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set bj_lastCreatedEffect=AddSpecialEffectLoc(bCr,lCr)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(uCr)
set tCr=hMi("when calling new_DummyCaster in Tinker, line 257")
set yCr=tCr
set pCr=GetTriggerPlayer()
set eCr="when calling owner in Tinker, line 258"
set aW[qW]=eCr
set qW=qW+1
if jF[yCr]==0 then
if yCr==0 then
call L8c("Nullpointer exception when calling DummyCaster.owner","when calling error in DummyCaster, line 40")
else
call L8c("Called DummyCaster.owner on invalid object.","when calling error in DummyCaster, line 40")
endif
endif
set qCr=yCr
set aCr=pCr
set Ij[qCr]=aCr
set qW=qW-1
set iCr=tCr
set nCr=iCr
set dCr=1.
set fCr="when calling delay in Tinker, line 259"
set aW[qW]=fCr
set qW=qW+1
if jF[nCr]==0 then
if nCr==0 then
call L8c("Nullpointer exception when calling DummyCaster.delay","when calling error in DummyCaster, line 45")
else
call L8c("Called DummyCaster.delay on invalid object.","when calling error in DummyCaster, line 45")
endif
endif
set RCr=nCr
set TCr=dCr
set Wj[RCr]=TCr
set qW=qW-1
set SCr=iCr
set YCr=SCr
set UCr=rCr
set ICr=sCr
set GCr=UCr
set gCr=ICr
set hCr="when calling origin in Tinker, line 260"
set aW[qW]=hCr
set qW=qW+1
if jF[YCr]==0 then
if YCr==0 then
call L8c("Nullpointer exception when calling DummyCaster.origin","when calling error in DummyCaster, line 36")
else
call L8c("Called DummyCaster.origin on invalid object.","when calling error in DummyCaster, line 36")
endif
endif
set FCr=YCr
set PCr=GCr
set ACr=gCr
set kCr=PCr
set jCr=ACr
set DCr=kCr
set HCr=jCr
set Zj[FCr]=DCr
set Uj[FCr]=HCr
set qW=qW-1
set cCr=SCr
set xCr=cCr
set vCr=$4130585A
set mCr=wCr
set QCr=852127
set WCr="when calling castImmediate in Tinker, line 261"
set aW[qW]=WCr
set qW=qW+1
if jF[xCr]==0 then
if xCr==0 then
call L8c("Nullpointer exception when calling DummyCaster.castImmediate","when calling error in DummyCaster, line 49")
else
call L8c("Called DummyCaster.castImmediate on invalid object.","when calling error in DummyCaster, line 49")
endif
endif
call kec(xCr,vCr,mCr,QCr,"when calling castImmediate in DummyCaster, line 49")
set qW=qW-1
endif
set qW=qW-1
set uCr=null
set oCr=null
set lCr=null
set pCr=null
set aCr=null
endfunction
function aDy takes nothing returns nothing
set qW=0
call JCr("via function reference Tinker, line 249")
endfunction
function aGl takes nothing returns boolean
local playerunitevent eGl
local code qGl
set kd[0]=-530
set kd[1]=-530
set kd[2]=-190
set kd[3]=380
set kd[4]=530
set kd[5]=530
set jd[0]=4800
set jd[1]=5300
set jd[2]=4225
set jd[3]=4225
set jd[4]=5300
set jd[5]=4800
set xd[0]=-530
set xd[1]=-530
set xd[2]=-190
set xd[3]=380
set xd[4]=530
set xd[5]=530
set vd[0]=-4800
set vd[1]=-5300
set vd[2]=-4225
set vd[3]=-4225
set vd[4]=-5300
set vd[5]=-4800
set md[0]=5300
set md[1]=4800
set md[2]=4225
set md[3]=4225
set md[4]=4800
set md[5]=5300
set Qd[0]=-530
set Qd[1]=-530
set Qd[2]=-190
set Qd[3]=380
set Qd[4]=530
set Qd[5]=530
set Wd[0]=-5300
set Wd[1]=-4800
set Wd[2]=-4225
set Wd[3]=-4225
set Wd[4]=-4800
set Wd[5]=-5300
set Ed[0]=-530
set Ed[1]=-530
set Ed[2]=-190
set Ed[3]=380
set Ed[4]=530
set Ed[5]=530
set eGl=EVENT_PLAYER_UNIT_SPELL_CAST
set qGl=J7
call emO(eGl,null,qGl,null)
set eGl=null
return true
endfunction
function aGy takes nothing returns boolean
local trigger yGy
local trigger pGy
local playerunitevent eGy
local integer qGy
call CreateTrigger()
set Ue=CreateTrigger()
set yGy=Ue
call DisableTrigger(yGy)
set pGy=Ue
set eGy=EVENT_PLAYER_UNIT_SPELL_EFFECT
set qGy=0
loop
call TriggerRegisterPlayerUnitEvent(pGy,Player(qGy),eGy,null)
set qGy=qGy+1
exitwhen qGy==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ue,T2)
set yGy=null
set pGy=null
set eGy=null
return true
endfunction
function aKO takes nothing returns boolean
return true
endfunction
function aMe takes nothing returns boolean
local trigger oMe
local trigger OMe
local playerunitevent lMe
local trigger bMe
local playerunitevent yMe
local integer pMe
local trigger eMe
local code qMe
set Fl=CreateTrigger()
set oMe=Fl
call DisableTrigger(oMe)
set OMe=Fl
set lMe=EVENT_PLAYER_UNIT_DEATH
set bMe=OMe
set yMe=lMe
set pMe=0
loop
call TriggerRegisterPlayerUnitEvent(bMe,Player(pMe),yMe,null)
set pMe=pMe+1
exitwhen pMe==bj_MAX_PLAYER_SLOTS
endloop
set eMe=Fl
set qMe=e3
call TriggerAddAction(eMe,qMe)
set oMe=null
set OMe=null
set lMe=null
set bMe=null
set yMe=null
set eMe=null
return true
endfunction
function aMi takes nothing returns nothing
local integer iMi
local unit SMi
local player cMi
local integer oMi
local player OMi
local playerstate lMi
local integer bMi
local player yMi
local playerstate pMi
local player eMi
local playerstate qMi
if ur==false then
set iMi=0
loop
exitwhen iMi>3
set cMi=Player(iMi)
set oMi=300
set OMi=cMi
set lMi=PLAYER_STATE_RESOURCE_GOLD
set bMi=oMi
set eMi=OMi
set qMi=lMi
set yMi=OMi
set pMi=lMi
call SetPlayerState(eMi,qMi,GetPlayerState(yMi,pMi)+bMi)
set Fr[iMi]=Fr[iMi]+300
set hr[iMi]=hr[iMi]+300
if o[iMi]!=null then
set SMi=o[iMi]
call UuS(SMi,300)
endif
set iMi=iMi+1
endloop
endif
set SMi=null
set cMi=null
set OMi=null
set lMi=null
set yMi=null
set pMi=null
set eMi=null
set qMi=null
endfunction
function aMy takes nothing returns nothing
local unit iMy=GetAttacker()
local unit SMy=GetTriggerUnit()
local unit oMy=iMy
local unit cMy
local unit OMy
local unittype lMy
local unit bMy
local unittype yMy
local unit pMy
local boolean eMy
local boolean qMy
if GetUnitTypeId(oMy)==$4F303430 then
set OMy=SMy
set lMy=UNIT_TYPE_STRUCTURE
set eMy=IsUnitType(OMy,lMy)==false
else
set eMy=false
endif
if eMy then
set bMy=SMy
set yMy=UNIT_TYPE_ANCIENT
set qMy=IsUnitType(bMy,yMy)==false
else
set qMy=false
endif
if qMy and Ep==true then
if GetRandomInt(1,100)<=5 then
set cMy=GetTriggerUnit()
call DestroyEffect(AddSpecialEffectTarget("Coup de Grace.mdl",cMy,"chest"))
set pMy=cMy
call KillUnit(pMy)
endif
endif
set iMy=null
set SMy=null
set cMy=null
set oMy=null
set OMy=null
set lMy=null
set bMy=null
set yMy=null
set pMy=null
endfunction
function aPl takes nothing returns boolean
return true
endfunction
function aPy takes nothing returns boolean
local unit bPy=GetTriggerUnit()
local unit pPy=bPy
local integer yPy=GetUnitTypeId(pPy)
local unit ePy=bPy
local boolean qPy=GetOwningPlayer(ePy)==du and yPy!=$75303031 and yPy!=$75303030 and yPy!=$75303032 and yPy!=$75303033 and yPy!=$75303034 and yPy!=$75303035 and yPy!=$75303036 and yPy!=$75303037 and yPy!=$75303131
set bPy=null
set pPy=null
set ePy=null
return qPy
endfunction
function aQp takes nothing returns boolean
local trigger oQp
local trigger OQp
local playerunitevent lQp
local trigger bQp
local playerunitevent yQp
local integer pQp
local trigger eQp
local code qQp
set gT=CreateTrigger()
set oQp=gT
call DisableTrigger(oQp)
set OQp=gT
set lQp=EVENT_PLAYER_UNIT_SPELL_CAST
set bQp=OQp
set yQp=lQp
set pQp=0
loop
call TriggerRegisterPlayerUnitEvent(bQp,Player(pQp),yQp,null)
set pQp=pQp+1
exitwhen pQp==bj_MAX_PLAYER_SLOTS
endloop
set eQp=gT
set qQp=C0w
call TriggerAddAction(eQp,qQp)
set oQp=null
set OQp=null
set lQp=null
set bQp=null
set yQp=null
set eQp=null
return true
endfunction
function aUO takes nothing returns nothing
call RemoveUnit(GetDyingUnit())
endfunction
function aVc takes nothing returns nothing
local integer sVc
local unit tVc
local trigger iVc
local unit SVc
local unit cVc
local unit oVc
local unit OVc
local unit lVc
local integer bVc
local unit yVc
local integer pVc
local unit eVc
local unit qVc
if mR!=null then
set sVc=GetSpellAbilityId()
if GetSpellAbilityUnit()==mR then
if sVc==$41333041 then
if fR!=30 and gR!=15 then
set fR=fR+3
set gR=gR+1
set tVc=mR
call DisplayTextToPlayer(GetOwningPlayer(tVc),0.,0.,"You have increased the chance of Azshara's Blessing by "+I2S(fR)+"/30%")
if fR==30 then
set iVc=vR
call EnableTrigger(iVc)
set SVc=mR
call DisplayTextToPlayer(GetOwningPlayer(SVc),0.,0.,"You increased maximum Azshara's Blessing")
endif
else
set cVc=mR
call DisplayTextToPlayer(GetOwningPlayer(cVc),0.,0.,"Max chance")
endif
endif
if sVc==$41333042 then
if RR!=20 and gR!=15 then
set RR=RR+2
set gR=gR+1
set oVc=mR
call DisplayTextToPlayer(GetOwningPlayer(oVc),0.,0.,"You have increased the chance of N'zoth's Curse by "+I2S(RR)+"/20%")
if RR==10 then
set OVc=mR
call DisplayTextToPlayer(GetOwningPlayer(OVc),0.,0.,"N'zoth is pleased! Voids now possess new abilities")
endif
if RR==20 then
set lVc=mR
set bVc=$41333043
call UnitAddAbility(lVc,bVc)
set yVc=mR
set pVc=$41333044
call UnitAddAbility(yVc,pVc)
set eVc=mR
call DisplayTextToPlayer(GetOwningPlayer(eVc),0.,0.,"You increased maximum N'zoth's Curse|nN'zoth is amazed by your devotion! Voids now have improved abilities")
endif
else
set qVc=mR
call DisplayTextToPlayer(GetOwningPlayer(qVc),0.,0.,"Max chance")
endif
endif
endif
endif
set tVc=null
set iVc=null
set SVc=null
set cVc=null
set oVc=null
set OVc=null
set lVc=null
set yVc=null
set eVc=null
set qVc=null
endfunction
function aWl takes nothing returns boolean
local trigger bWl
local playerunitevent yWl
local code pWl
local playerunitevent eWl
local code qWl
set Rh=null
set Yh=CreateTimer()
set Gh=CreateTextTag()
set gh=CreateTrigger()
set hh=CreateTextTag()
set bWl=gh
call DisableTrigger(bWl)
call TriggerRegisterTimerEvent(gh,1.,true)
call TriggerAddAction(gh,nsw)
set yWl=EVENT_PLAYER_UNIT_SPELL_EFFECT
set pWl=dsw
call emO(yWl,null,pWl,null)
set eWl=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set qWl=fsw
call emO(eWl,null,qWl,null)
set bWl=null
set yWl=null
set eWl=null
return true
endfunction
function aWp takes nothing returns boolean
return true
endfunction
function aZb takes nothing returns boolean
local unit uZb=GetFilterUnit()
local unit rZb=uZb
local unit tZb=GetSpellAbilityUnit()
local player sZb=GetOwningPlayer(tZb)
local unit iZb
local unittype SZb
local unit cZb
local unit oZb
local unittype OZb
local unit lZb
local unittype bZb
local boolean yZb
local boolean pZb
local boolean eZb
local boolean qZb
if IsUnitEnemy(rZb,sZb)==true then
set iZb=uZb
set SZb=UNIT_TYPE_HERO
set yZb=IsUnitType(iZb,SZb)==false
else
set yZb=false
endif
if yZb then
set cZb=uZb
set pZb=UnitAlive(cZb)==true
else
set pZb=false
endif
if pZb then
set oZb=uZb
set OZb=UNIT_TYPE_STRUCTURE
set eZb=IsUnitType(oZb,OZb)==false
else
set eZb=false
endif
if eZb then
set lZb=uZb
set bZb=UNIT_TYPE_ANCIENT
set qZb=IsUnitType(lZb,bZb)==false
else
set qZb=false
endif
set uZb=null
set rZb=null
set sZb=null
set tZb=null
set iZb=null
set SZb=null
set cZb=null
set oZb=null
set OZb=null
set lZb=null
set bZb=null
return qZb
endfunction
function a_t takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function adS takes nothing returns nothing
local integer odS=GetResearched()
local player OdS
local unit ldS
local player bdS
local trigger ydS
local trigger pdS
local trigger edS
local trigger qdS
if odS==$5230314D then
set ldS=GetResearchingUnit()
set OdS=GetOwningPlayer(ldS)
set bdS=OdS
set X[GetPlayerId(bdS)]=$68737074
endif
if odS==$5230314E then
set ydS=HO
call EnableTrigger(ydS)
endif
if odS==$52303150 then
set pdS=Xa
call EnableTrigger(pdS)
endif
if odS==$52303449 then
set edS=Fl
call EnableTrigger(edS)
endif
if odS==$5230314F then
set qdS=Tp
call EnableTrigger(qdS)
endif
set OdS=null
set ldS=null
set bdS=null
set ydS=null
set pdS=null
set edS=null
set qdS=null
endfunction
function agu takes nothing returns boolean
local trigger ogu
local trigger Ogu
local playerunitevent lgu
local trigger bgu
local playerunitevent ygu
local integer pgu
local trigger egu
local code qgu
set ye=CreateTrigger()
set ogu=ye
call DisableTrigger(ogu)
set Ogu=ye
set lgu=EVENT_PLAYER_UNIT_SPELL_CAST
set bgu=Ogu
set ygu=lgu
set pgu=0
loop
call TriggerRegisterPlayerUnitEvent(bgu,Player(pgu),ygu,null)
set pgu=pgu+1
exitwhen pgu==bj_MAX_PLAYER_SLOTS
endloop
set egu=ye
set qgu=S2
call TriggerAddAction(egu,qgu)
set ogu=null
set Ogu=null
set lgu=null
set bgu=null
set ygu=null
set egu=null
return true
endfunction
function agy takes nothing returns boolean
local trigger ogy
local trigger Ogy
local playerunitevent lgy
local trigger bgy
local playerunitevent ygy
local integer pgy
local trigger egy
local boolexpr qgy
set el=CreateTrigger()
set ogy=el
call DisableTrigger(ogy)
set Ogy=el
set lgy=EVENT_PLAYER_UNIT_DEATH
set bgy=Ogy
set ygy=lgy
set pgy=0
loop
call TriggerRegisterPlayerUnitEvent(bgy,Player(pgy),ygy,null)
set pgy=pgy+1
exitwhen pgy==bj_MAX_PLAYER_SLOTS
endloop
set egy=el
set qgy=Condition(s3)
call TriggerAddCondition(egy,qgy)
set ogy=null
set Ogy=null
set lgy=null
set bgy=null
set ygy=null
set egy=null
set qgy=null
return true
endfunction
function ahp takes nothing returns boolean
local playerunitevent ehp=EVENT_PLAYER_UNIT_DEATH
local code qhp=Oww_1064
call emO(ehp,null,qhp,null)
set ehp=null
return true
endfunction
function ajS takes nothing returns nothing
local group yhS
local filterfunc phS
local unit ehS
local group qhS
local integer ahS
local group nhS
local group dhS
local unit fhS
local group RhS
local boolexpr ThS
local unit YhS
local integer GhS
local unit ghS
local integer hhS
local unit FhS
local integer khS
local unit jhS
local integer xhS
local unit vhS
local integer mhS
local unit QhS
local integer WhS
local integer EhS
local unit ZhS
local integer UhS
local unit IhS
local integer PhS
local unit AhS
local integer DhS
local unit HhS
local integer JhS
local unit KhS
local integer LhS
local unit XhS
local integer ChS
local unit VhS
local integer BhS
local integer NhS
local unit MhS
local integer wFS
local unit uFS
local integer rFS
local unit sFS
local integer tFS
local unit iFS
local integer SFS
local unit cFS
local integer oFS
local unit OFS
local integer lFS
local unit bFS
local integer yFS
local integer pFS
local unit eFS
local integer qFS
local unit aFS
local integer nFS
local unit dFS
local integer fFS
local unit RFS
local integer TFS
local unit YFS
local integer GFS
local unit gFS
local integer hFS
local unit FFS
local integer kFS
local unit jFS
local integer xFS
local unit vFS
local integer mFS
local unit QFS
local integer WFS
local unit EFS
local integer ZFS
local unit UFS
local integer IFS
local unit PFS
local integer AFS
local unit DFS
local integer HFS
local unit JFS
local integer KFS
local unit LFS
local integer XFS
local unit CFS
local integer VFS
local unit BFS
local integer NFS
local unit MFS
local integer wkS
local unit ukS
local integer rkS
local unit skS
local integer tkS
local unit ikS
local integer SkS
local unit ckS
local integer okS
local unit OkS
local integer lkS
local unit bkS
local integer ykS
local unit pkS
local integer ekS
local unit qkS
local integer akS
local unit nkS
local integer dkS
local integer fkS
local unit RkS
local integer TkS
local unit YkS
local integer GkS
local unit gkS
local integer hkS
local unit FkS
local integer kkS
local unit jkS
local integer xkS
local unit vkS
local integer mkS
local unit QkS
local integer WkS
local unit EkS
local integer ZkS
local unit UkS
local integer IkS
local unit PkS
local integer AkS
local unit DkS
local integer HkS
local unit JkS
local integer KkS
local trigger LkS
local unit XkS
local integer CkS
local unit VkS
local integer BkS
local unit NkS
local integer MkS
local unit wjS
local integer ujS
local unit rjS
local integer sjS
local unit tjS
local integer ijS
local unit SjS
local integer cjS
local unit ojS
local integer OjS
local unit ljS
local integer bjS
local unit yjS
local integer pjS
local trigger ejS
local unit qjS
if GetSpellAbilityUnit()==Ap then
if Qp==true then
set yhS=CreateGroup()
set phS=Filter(P4)
call GroupEnumUnitsInRect(yhS,bj_mapInitialPlayableArea,phS)
set qhS=yhS
loop
set nhS=qhS
exitwhen not (FirstOfGroup(nhS)!=null)
set dhS=qhS
set fhS=FirstOfGroup(dhS)
call GroupRemoveUnit(dhS,fhS)
set ehS=fhS
set Pp=ehS
endloop
set RhS=yhS
call DestroyGroup(RhS)
set ThS=phS
call DestroyBoolExpr(ThS)
set ahS=GetSpellAbilityId()
if ahS==$41313233 then
set YhS=Ap
set GhS=$41313233
call UnitRemoveAbility(YhS,GhS)
set ghS=Ap
set hhS=$41313234
call UnitRemoveAbility(ghS,hhS)
set FhS=Ap
set khS=$41313235
call UnitRemoveAbility(FhS,khS)
set jhS=Ap
set xhS=$41313246
call UnitAddAbility(jhS,xhS)
set gp=true
set vhS=Pp
set mhS=$41305336
call UnitAddAbility(vhS,mhS)
set QhS=Pp
set WhS=$41305336
set EhS=1
call SetUnitAbilityLevel(QhS,WhS,EhS)
set ZhS=Pp
set UhS=$49303230
call UnitAddItemById(ZhS,UhS)
endif
if ahS==$41313234 then
set IhS=Ap
set PhS=$41313233
call UnitRemoveAbility(IhS,PhS)
set AhS=Ap
set DhS=$41313234
call UnitRemoveAbility(AhS,DhS)
set HhS=Ap
set JhS=$41313235
call UnitRemoveAbility(HhS,JhS)
set KhS=Ap
set LhS=$41313247
call UnitAddAbility(KhS,LhS)
set gp=true
set XhS=Pp
set ChS=$41313230
call UnitAddAbility(XhS,ChS)
set VhS=Pp
set BhS=$41313230
set NhS=1
call SetUnitAbilityLevel(VhS,BhS,NhS)
set MhS=Pp
set wFS=$49303231
call UnitAddItemById(MhS,wFS)
endif
if ahS==$41313235 then
set uFS=Ap
set rFS=$41313233
call UnitRemoveAbility(uFS,rFS)
set sFS=Ap
set tFS=$41313234
call UnitRemoveAbility(sFS,tFS)
set iFS=Ap
set SFS=$41313235
call UnitRemoveAbility(iFS,SFS)
set cFS=Ap
set oFS=$41313248
call UnitAddAbility(cFS,oFS)
set gp=true
set OFS=Pp
set lFS=$41313231
call UnitAddAbility(OFS,lFS)
set bFS=Pp
set yFS=$41313231
set pFS=1
call SetUnitAbilityLevel(bFS,yFS,pFS)
set eFS=Pp
set qFS=$49303232
call UnitAddItemById(eFS,qFS)
endif
if ahS==$41313236 then
set aFS=Ap
set nFS=$41313236
call UnitRemoveAbility(aFS,nFS)
set dFS=Ap
set fFS=$41313237
call UnitRemoveAbility(dFS,fFS)
set RFS=Ap
set TFS=$41313238
call UnitRemoveAbility(RFS,TFS)
set YFS=Ap
set GFS=$41313249
call UnitAddAbility(YFS,GFS)
set gFS=Pp
set hFS=$49303233
call UnitAddItemById(gFS,hFS)
set hp=true
set jp=true
endif
if ahS==$41313237 then
set FFS=Ap
set kFS=$41313236
call UnitRemoveAbility(FFS,kFS)
set jFS=Ap
set xFS=$41313237
call UnitRemoveAbility(jFS,xFS)
set vFS=Ap
set mFS=$41313238
call UnitRemoveAbility(vFS,mFS)
set QFS=Ap
set WFS=$4131324A
call UnitAddAbility(QFS,WFS)
set EFS=Pp
set ZFS=$49303234
call UnitAddItemById(EFS,ZFS)
set hp=true
set xp=true
endif
if ahS==$41313238 then
set UFS=Ap
set IFS=$41313236
call UnitRemoveAbility(UFS,IFS)
set PFS=Ap
set AFS=$41313237
call UnitRemoveAbility(PFS,AFS)
set DFS=Ap
set HFS=$41313238
call UnitRemoveAbility(DFS,HFS)
set JFS=Ap
set KFS=$4131324B
call UnitAddAbility(JFS,KFS)
set LFS=Pp
set XFS=$49303235
call UnitAddItemById(LFS,XFS)
set hp=true
set vp=true
endif
if ahS==$41313239 then
set CFS=Ap
set VFS=$41313239
call UnitRemoveAbility(CFS,VFS)
set BFS=Ap
set NFS=$41313241
call UnitRemoveAbility(BFS,NFS)
set MFS=Ap
set wkS=$41313242
call UnitRemoveAbility(MFS,wkS)
set ukS=Ap
set rkS=$4131324C
call UnitAddAbility(ukS,rkS)
set skS=Pp
set tkS=$49303236
call UnitAddItemById(skS,tkS)
set Fp=true
endif
if ahS==$41313241 then
set ikS=Ap
set SkS=$41313239
call UnitRemoveAbility(ikS,SkS)
set ckS=Ap
set okS=$41313241
call UnitRemoveAbility(ckS,okS)
set OkS=Ap
set lkS=$41313242
call UnitRemoveAbility(OkS,lkS)
set bkS=Ap
set ykS=$4131324D
call UnitAddAbility(bkS,ykS)
set pkS=Pp
set ekS=$414F6372
call UnitRemoveAbility(pkS,ekS)
set qkS=Pp
set akS=$41313254
call UnitAddAbility(qkS,akS)
set nkS=Pp
set dkS=$41313254
set fkS=4
call SetUnitAbilityLevel(nkS,dkS,fkS)
set RkS=Pp
set TkS=$49303237
call UnitAddItemById(RkS,TkS)
set mp=true
set Fp=true
endif
if ahS==$41313242 then
set YkS=Ap
set GkS=$41313239
call UnitRemoveAbility(YkS,GkS)
set gkS=Ap
set hkS=$41313241
call UnitRemoveAbility(gkS,hkS)
set FkS=Ap
set kkS=$41313242
call UnitRemoveAbility(FkS,kkS)
set jkS=Ap
set xkS=$4131324E
call UnitAddAbility(jkS,xkS)
set vkS=Pp
set mkS=$41313253
call UnitAddAbility(vkS,mkS)
set QkS=Pp
set WkS=$49303238
call UnitAddItemById(QkS,WkS)
set Fp=true
endif
if ahS==$41313243 then
set EkS=Ap
set ZkS=$41313243
call UnitRemoveAbility(EkS,ZkS)
set UkS=Ap
set IkS=$41313244
call UnitRemoveAbility(UkS,IkS)
set PkS=Ap
set AkS=$41313245
call UnitRemoveAbility(PkS,AkS)
set DkS=Ap
set HkS=$4131324F
call UnitAddAbility(DkS,HkS)
set JkS=Pp
set KkS=$49303239
call UnitAddItemById(JkS,KkS)
set kp=true
set Wp=true
set LkS=Zp
call EnableTrigger(LkS)
endif
if ahS==$41313244 then
set XkS=Ap
set CkS=$41313243
call UnitRemoveAbility(XkS,CkS)
set VkS=Ap
set BkS=$41313244
call UnitRemoveAbility(VkS,BkS)
set NkS=Ap
set MkS=$41313245
call UnitRemoveAbility(NkS,MkS)
set wjS=Ap
set ujS=$41313250
call UnitAddAbility(wjS,ujS)
set rjS=Pp
set sjS=$49303241
call UnitAddItemById(rjS,sjS)
set kp=true
set Ep=true
endif
if ahS==$41313245 then
set tjS=Ap
set ijS=$41313243
call UnitRemoveAbility(tjS,ijS)
set SjS=Ap
set cjS=$41313244
call UnitRemoveAbility(SjS,cjS)
set ojS=Ap
set OjS=$41313245
call UnitRemoveAbility(ojS,OjS)
set ljS=Ap
set bjS=$41313251
call UnitAddAbility(ljS,bjS)
set yjS=Pp
set pjS=$49303242
call UnitAddItemById(yjS,pjS)
set kp=true
set ejS=Up
call EnableTrigger(ejS)
endif
else
set qjS=Ap
call DisplayTextToPlayer(GetOwningPlayer(qjS),0.,0.,"Eudora must be present on the map in order to pick new items")
endif
endif
set yhS=null
set phS=null
set ehS=null
set qhS=null
set nhS=null
set dhS=null
set fhS=null
set RhS=null
set ThS=null
set YhS=null
set ghS=null
set FhS=null
set jhS=null
set vhS=null
set QhS=null
set ZhS=null
set IhS=null
set AhS=null
set HhS=null
set KhS=null
set XhS=null
set VhS=null
set MhS=null
set uFS=null
set sFS=null
set iFS=null
set cFS=null
set OFS=null
set bFS=null
set eFS=null
set aFS=null
set dFS=null
set RFS=null
set YFS=null
set gFS=null
set FFS=null
set jFS=null
set vFS=null
set QFS=null
set EFS=null
set UFS=null
set PFS=null
set DFS=null
set JFS=null
set LFS=null
set CFS=null
set BFS=null
set MFS=null
set ukS=null
set skS=null
set ikS=null
set ckS=null
set OkS=null
set bkS=null
set pkS=null
set qkS=null
set nkS=null
set RkS=null
set YkS=null
set gkS=null
set FkS=null
set jkS=null
set vkS=null
set QkS=null
set EkS=null
set UkS=null
set PkS=null
set DkS=null
set JkS=null
set LkS=null
set XkS=null
set VkS=null
set NkS=null
set wjS=null
set rjS=null
set tjS=null
set SjS=null
set ojS=null
set ljS=null
set yjS=null
set ejS=null
set qjS=null
endfunction
function all takes nothing returns nothing
local unit lll=GetTriggerUnit()
local unit yll=lll
local integer bll
local unit pll
local integer ell
local unit qll
if GetUnitTypeId(yll)==$484D306A then
set pll=lll
set ell=$414D3765
set bll=GetUnitAbilityLevel(pll,ell)
set qll=lll
call SetPlayerTechResearched(GetOwningPlayer(qll),$524D3139,bll)
endif
set lll=null
set yll=null
set pll=null
set qll=null
endfunction
function alt takes nothing returns boolean
local unit tlt=GetFilterUnit()
local unit ilt=tlt
local unit Slt
local unittype clt
local unit olt
local unit Olt
local unit llt
local player blt
local unit ylt
local boolean plt
local boolean elt
local boolean qlt
if UnitAlive(ilt) then
set Slt=tlt
set clt=UNIT_TYPE_STRUCTURE
set plt=IsUnitType(Slt,clt)==false
else
set plt=false
endif
if plt then
set olt=tlt
set Olt=GetTriggerUnit()
if olt!=null and Olt!=null then
set llt=olt
set ylt=Olt
set blt=GetOwningPlayer(ylt)
set elt=IsUnitEnemy(llt,blt)
else
set elt=false
endif
set qlt=elt==true
else
set qlt=false
endif
set tlt=null
set ilt=null
set Slt=null
set clt=null
set olt=null
set Olt=null
set llt=null
set blt=null
set ylt=null
return qlt
endfunction
function aqt takes nothing returns boolean
local trigger oqt
local trigger Oqt
local playerunitevent lqt
local trigger bqt
local playerunitevent yqt
local integer pqt
local trigger eqt
local code qqt
set FO=CreateTrigger()
set oqt=FO
call DisableTrigger(oqt)
set Oqt=FO
set lqt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set bqt=Oqt
set yqt=lqt
set pqt=0
loop
call TriggerRegisterPlayerUnitEvent(bqt,Player(pqt),yqt,null)
set pqt=pqt+1
exitwhen pqt==bj_MAX_PLAYER_SLOTS
endloop
set eqt=FO
set qqt=yM
call TriggerAddAction(eqt,qqt)
set oqt=null
set Oqt=null
set lqt=null
set bqt=null
set yqt=null
set eqt=null
return true
endfunction
function arl takes nothing returns boolean
local unit yrl=GetFilterUnit()
local unit prl=yrl
local unittype erl=UNIT_TYPE_HERO
local boolean qrl=IsUnitType(prl,erl)
set yrl=null
set prl=null
set erl=null
return qrl
endfunction
function avS takes nothing returns nothing
local unit HxS=GetDyingUnit()
local unit JxS
local unittype KxS
local unit LxS
local player XxS
local unit CxS
local texttag VxS
local string BxS
local real NxS
local unit MxS
local real wvS
local unit uvS
local unitstate rvS
local real svS
local unit tvS
local unitstate ivS
local string SvS
local real cvS
local player ovS
local unit OvS
local texttag lvS
local string bvS
local real yvS
local boolean pvS
local unit evS
local unitstate qvS
if KT!=null then
set JxS=HxS
set KxS=UNIT_TYPE_MECHANICAL
if IsUnitType(JxS,KxS)==true then
set LxS=HxS
set CxS=KT
set XxS=GetOwningPlayer(CxS)
set pvS=(LxS!=null and IsUnitAlly(LxS,XxS))==true
else
set pvS=false
endif
if pvS then
set ZT=ZT+1
set VxS=jT
set BxS=I2S(ZT)
set NxS=13.
call SetTextTagText(VxS,BxS,NxS*.0023)
endif
if ZT>=75 then
set MxS=KT
set wvS=1.
set uvS=MxS
set rvS=UNIT_STATE_MANA
set svS=wvS
set evS=uvS
set qvS=rvS
set tvS=uvS
set ivS=rvS
call SetUnitState(evS,qvS,GetUnitState(tvS,ivS)+svS)
set SvS="You received 1 mana from dead mechanisms"
set cvS=10.
set OvS=KT
set ovS=GetOwningPlayer(OvS)
call DisplayTimedTextToPlayer(ovS,0.,0.,cvS,SvS)
set lvS=jT
set bvS="0"
set yvS=13.
call SetTextTagText(lvS,bvS,yvS*.0023)
set ZT=0
endif
endif
set HxS=null
set JxS=null
set KxS=null
set LxS=null
set XxS=null
set CxS=null
set VxS=null
set MxS=null
set uvS=null
set rvS=null
set tvS=null
set ivS=null
set ovS=null
set OvS=null
set lvS=null
set evS=null
set qvS=null
endfunction
function awl takes nothing returns nothing
local unit B_l=GetDyingUnit()
local unit rwl=B_l
local group N_l
local filterfunc M_l
local unit wwl
local group uwl
local unit swl
local unit twl
local unit iwl
local group Swl
local group cwl
local unit owl
local unit Owl
local unit lwl
local group bwl
local boolexpr ywl
local group pwl
local real ewl
local real qwl
if GetUnitTypeId(rwl)==$6E7A6F6D then
set swl=B_l
set oh=GetOwningPlayer(swl)
set N_l=CreateGroup()
set M_l=Filter(Crw)
set pwl=N_l
set twl=B_l
set ewl=GetUnitX(twl)
set iwl=B_l
call GroupEnumUnitsInRange(pwl,ewl,GetUnitY(iwl),200.,M_l)
set uwl=N_l
loop
set Swl=uwl
exitwhen not (FirstOfGroup(Swl)!=null)
set cwl=uwl
set owl=FirstOfGroup(cwl)
call GroupRemoveUnit(cwl,owl)
set wwl=owl
call UnitDamageTarget(B_l,wwl,15.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set Owl=B_l
set qwl=GetUnitX(Owl)
set lwl=B_l
call DestroyEffect(AddSpecialEffect("plaguebomb_updated.mdx",qwl,GetUnitY(lwl)))
set bwl=N_l
call DestroyGroup(bwl)
set ywl=M_l
call DestroyBoolExpr(ywl)
set oh=null
endif
set B_l=null
set N_l=null
set M_l=null
set wwl=null
set uwl=null
set rwl=null
set swl=null
set twl=null
set iwl=null
set Swl=null
set cwl=null
set owl=null
set Owl=null
set lwl=null
set bwl=null
set ywl=null
set pwl=null
endfunction
function axl takes nothing returns boolean
return true
endfunction
function axt takes nothing returns boolean
local playerunitevent ext=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code qxt=crw
call emO(ext,null,qxt,null)
set ext=null
return true
endfunction
function b4c takes nothing returns boolean
return true
endfunction
function b4e takes nothing returns nothing
local unit M1e=GetEnteringUnit()
local unit r4e=M1e
local integer w4e=GetUnitTypeId(r4e)
local unit s4e=M1e
local integer u4e=GetPlayerTechCount(GetOwningPlayer(s4e),$5230344B,true)
local unit t4e
local integer i4e
local unit S4e
local integer c4e
local unit o4e
local integer O4e
local integer l4e
if w4e==$6E667472 then
if u4e==3 then
set t4e=M1e
set i4e=$41305535
call UnitAddAbility(t4e,i4e)
endif
if u4e==4 then
set S4e=M1e
set c4e=$41305536
call UnitAddAbility(S4e,c4e)
endif
endif
if w4e==$6E676C6D then
set o4e=M1e
set O4e=$416D6E78
set l4e=u4e
call SetUnitAbilityLevel(o4e,O4e,l4e)
endif
set M1e=null
set r4e=null
set s4e=null
set t4e=null
set S4e=null
set o4e=null
endfunction
function b6S takes nothing returns boolean
local unit S6S=GetKillingUnit()
local unit c6S=S6S
local unit o6S
local integer O6S
local boolean l6S
if UnitAlive(c6S) then
set o6S=S6S
set O6S=$42303851
set l6S=GetUnitAbilityLevel(o6S,O6S)>0
else
set l6S=false
endif
set S6S=null
set c6S=null
set o6S=null
return l6S
endfunction
function b7s takes nothing returns boolean
local trigger r7s
local playerunitevent s7s
local trigger t7s
local playerunitevent i7s
local integer S7s
local trigger c7s
local trigger o7s
local playerunitevent O7s
local integer l7s
set eg=CreateTrigger()
set qg=CreateTrigger()
set ag=null
set r7s=eg
set s7s=EVENT_PLAYER_UNIT_ATTACKED
set t7s=r7s
set i7s=s7s
set S7s=0
loop
call TriggerRegisterPlayerUnitEvent(t7s,Player(S7s),i7s,null)
set S7s=S7s+1
exitwhen S7s==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(eg,Luw)
set c7s=qg
call DisableTrigger(c7s)
set o7s=qg
set O7s=EVENT_PLAYER_UNIT_SPELL_EFFECT
set l7s=0
loop
call TriggerRegisterPlayerUnitEvent(o7s,Player(l7s),O7s,null)
set l7s=l7s+1
exitwhen l7s==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(qg,Xuw)
set r7s=null
set s7s=null
set t7s=null
set i7s=null
set c7s=null
set o7s=null
set O7s=null
return true
endfunction
function b8b takes nothing returns boolean
local trigger s8b
local trigger t8b
local playerunitevent i8b
local trigger S8b
local playerunitevent c8b
local integer o8b
local trigger O8b
local code l8b
set sY=CreateTrigger()
set s8b=sY
call DisableTrigger(s8b)
set t8b=sY
set i8b=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set S8b=t8b
set c8b=i8b
set o8b=0
loop
call TriggerRegisterPlayerUnitEvent(S8b,Player(o8b),c8b,null)
set o8b=o8b+1
exitwhen o8b==bj_MAX_PLAYER_SLOTS
endloop
set O8b=sY
set l8b=nww
call TriggerAddAction(O8b,l8b)
set s8b=null
set t8b=null
set i8b=null
set S8b=null
set c8b=null
set O8b=null
return true
endfunction
function b9e takes nothing returns nothing
local unit k8e=GetTriggerUnit()
local unit j8e=k8e
local unittype x8e=UNIT_TYPE_HERO
local unit v8e
local unit m8e
local integer Q8e
local unit W8e
local integer E8e
local unit Z8e
local unit U8e
local unitstate I8e
local unit P8e
local unit A8e
local unitstate D8e
local unit H8e
local unit J8e
local unit K8e
local unit L8e
local integer X8e
local unit C8e
local real V8e
local unit B8e
local unitstate N8e
local real M8e
local unit w9e
local unitstate u9e
local boolean r9e
local boolean s9e
local boolean t9e
local real i9e
local boolean S9e
local boolean c9e
local boolean o9e
local unit O9e
local unitstate l9e
if IsUnitType(j8e,x8e)==true then
set v8e=k8e
set r9e=GetUnitTypeId(v8e)!=$5530304A
else
set r9e=false
endif
if r9e then
set m8e=k8e
set Q8e=$424F6163
set s9e=GetUnitAbilityLevel(m8e,Q8e)==1
else
set s9e=false
endif
if s9e then
set W8e=k8e
set E8e=$41305857
set t9e=GetUnitAbilityLevel(W8e,E8e)==0
else
set t9e=false
endif
if t9e then
set Z8e=k8e
set U8e=Z8e
set I8e=UNIT_STATE_LIFE
set i9e=GetUnitState(U8e,I8e)
set P8e=k8e
set A8e=P8e
set D8e=UNIT_STATE_MAX_LIFE
set S9e=i9e<=GetUnitState(A8e,D8e)*.15
else
set S9e=false
endif
if S9e then
set H8e=k8e
if GetUnitTypeId(H8e)==$55303041 then
set c9e=true
else
set J8e=k8e
set c9e=GetUnitTypeId(J8e)==$55303042
endif
if c9e then
set o9e=true
else
set K8e=k8e
set o9e=GetUnitTypeId(K8e)==$55303043
endif
if o9e then
set L8e=k8e
set X8e=$41305857
call UnitAddAbility(L8e,X8e)
set C8e=k8e
set V8e=30000.
set B8e=C8e
set N8e=UNIT_STATE_LIFE
set M8e=V8e
set O9e=B8e
set l9e=N8e
set w9e=B8e
set u9e=N8e
call SetUnitState(O9e,l9e,GetUnitState(w9e,u9e)+M8e)
call DestroyEffect(AddSpecialEffectTarget("Heal Orange.mdl",k8e,"origin"))
endif
endif
set k8e=null
set j8e=null
set x8e=null
set v8e=null
set m8e=null
set W8e=null
set Z8e=null
set U8e=null
set I8e=null
set P8e=null
set A8e=null
set D8e=null
set H8e=null
set J8e=null
set K8e=null
set L8e=null
set C8e=null
set B8e=null
set N8e=null
set w9e=null
set u9e=null
set O9e=null
set l9e=null
endfunction
function bBO takes nothing returns boolean
local unit BVO=GetKillingUnit()
local unit NVO=GetDyingUnit()
local unit MVO=BVO
local unit wBO
local integer uBO
local unit rBO
local unittype sBO
local unit tBO
local unittype iBO
local unit SBO
local boolean cBO
local boolean oBO
local boolean OBO
local boolean lBO
if UnitAlive(MVO) then
set wBO=BVO
set uBO=$4230334E
set cBO=GetUnitAbilityLevel(wBO,uBO)>0
else
set cBO=false
endif
if cBO then
set rBO=NVO
set sBO=UNIT_TYPE_MECHANICAL
set oBO=IsUnitType(rBO,sBO)==false
else
set oBO=false
endif
if oBO then
set tBO=NVO
set iBO=UNIT_TYPE_STRUCTURE
set OBO=IsUnitType(tBO,iBO)==false
else
set OBO=false
endif
if OBO then
set SBO=BVO
set lBO=GetUnitTypeId(SBO)==$556B746C
else
set lBO=false
endif
set BVO=null
set NVO=null
set MVO=null
set wBO=null
set rBO=null
set sBO=null
set tBO=null
set iBO=null
set SBO=null
return lBO
endfunction
function bBy takes nothing returns boolean
local trigger oBy
local playerunitevent OBy
local integer lBy
set aq=CreateTrigger()
set oBy=aq
set OBy=EVENT_PLAYER_UNIT_ATTACKED
set lBy=0
loop
call TriggerRegisterPlayerUnitEvent(oBy,Player(lBy),OBy,null)
set lBy=lBy+1
exitwhen lBy==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(aq,Condition(N2))
call TriggerAddAction(aq,M2)
set oBy=null
set OBy=null
return true
endfunction
function bEy takes nothing returns boolean
local unit iEy=GetFilterUnit()
local unit OEy=iEy
local unit SEy=GetKillingUnit()
local unit cEy
local unittype oEy
local boolean lEy
if IsUnitEnemy(OEy,GetOwningPlayer(SEy)) then
set cEy=iEy
set oEy=UNIT_TYPE_STRUCTURE
set lEy=IsUnitType(cEy,oEy)==false
else
set lEy=false
endif
set iEy=null
set SEy=null
set cEy=null
set oEy=null
set OEy=null
return lEy
endfunction
function bFu takes nothing returns boolean
local playerunitevent OFu=EVENT_PLAYER_UNIT_RESEARCH_FINISH
local code lFu=Puw
call emO(OFu,null,lFu,null)
set OFu=null
return true
endfunction
function bGy takes nothing returns nothing
local integer AYy=GetSpellAbilityId()
local unit DYy
local integer HYy
local real JYy
local real KYy
local integer LYy
local unit XYy
local unit CYy
local integer VYy
local unit BYy
local unit NYy
local unit MYy
local unit wGy
local unit uGy
local unit rGy
local integer sGy
local unit tGy
local integer iGy
local integer SGy
local unit cGy
local real oGy
local player OGy
local real lGy
if AYy==$4130574A then
set DYy=GetSpellAbilityUnit()
set CYy=DYy
set VYy=$4130574A
set HYy=GetUnitAbilityLevel(CYy,VYy)
set BYy=DYy
set JYy=GetUnitX(BYy)
set NYy=DYy
set KYy=GetUnitY(NYy)
set LYy=1
loop
exitwhen LYy>8
set MYy=DYy
set OGy=GetOwningPlayer(MYy)
set wGy=DYy
set lGy=GetUnitX(wGy)
set uGy=DYy
set XYy=CreateUnit(OGy,$75303030,lGy,GetUnitY(uGy),270.)
set rGy=XYy
set sGy=$4130574B
call UnitAddAbility(rGy,sGy)
set tGy=XYy
set iGy=$4130574B
set SGy=HYy
call SetUnitAbilityLevel(tGy,iGy,SGy)
call IssuePointOrder(XYy,"impale",JYy+100.*Cos(45.+I2R(LYy)*45.*bj_DEGTORAD),KYy+100.*Sin(45.+I2R(LYy)*45.*bj_DEGTORAD))
set cGy=XYy
set oGy=3.
call UnitApplyTimedLife(cGy,$42544C46,oGy)
set LYy=LYy+1
endloop
endif
set DYy=null
set XYy=null
set CYy=null
set BYy=null
set NYy=null
set MYy=null
set wGy=null
set uGy=null
set rGy=null
set tGy=null
set cGy=null
set OGy=null
endfunction
function bJt takes nothing returns nothing
local integer CHt=GetSpellAbilityId()
local unit VHt
local unit BHt
local unit NHt
local unit MHt
local unit wJt
local unit uJt
local unit rJt
local real sJt
local unit tJt
local integer iJt
local unit SJt
local string cJt
local widget oJt
local player OJt
local real lJt
if CHt==$41304D4A then
set VHt=GetSpellAbilityUnit()
set BHt=GetSpellTargetUnit()
set MHt=VHt
set OJt=GetOwningPlayer(MHt)
set wJt=BHt
set lJt=GetUnitX(wJt)
set uJt=BHt
set NHt=CreateUnit(OJt,$75303030,lJt,GetUnitY(uJt),0.)
set rJt=NHt
set sJt=3.
call UnitApplyTimedLife(rJt,$42544C46,sJt)
set tJt=NHt
set iJt=$4132344E
call UnitAddAbility(tJt,iJt)
set SJt=NHt
set cJt="innerfire"
set oJt=BHt
call IssueTargetOrder(SJt,cJt,oJt)
endif
set VHt=null
set BHt=null
set NHt=null
set MHt=null
set wJt=null
set uJt=null
set rJt=null
set tJt=null
set SJt=null
set oJt=null
set OJt=null
endfunction
function bJu takes nothing returns boolean
return true
endfunction
function bOe takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function bOt takes nothing returns boolean
local unit Cot=GetFilterUnit()
local unit Vot=Cot
local unittype Bot=UNIT_TYPE_HERO
local unit Mot
local unittype wOt
local unit uOt
local player rOt
local player sOt
local unit tOt
local unit iOt
local unit SOt
local boolean cOt
local boolean oOt
local boolean OOt
local boolean lOt
if IsUnitType(Vot,Bot) then
set Mot=Cot
set wOt=UNIT_TYPE_ANCIENT
set cOt=IsUnitType(Mot,wOt)==false
else
set cOt=false
endif
if cOt then
set uOt=Cot
set oOt=UnitAlive(uOt)
else
set oOt=false
endif
if oOt then
set tOt=Cot
set rOt=GetOwningPlayer(tOt)
set iOt=iy
set sOt=GetOwningPlayer(iOt)
set OOt=IsPlayerAlly(rOt,sOt)
else
set OOt=false
endif
if OOt then
set SOt=Cot
set lOt=GetUnitStatePercent(SOt,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>50.
else
set lOt=false
endif
set Cot=null
set Vot=null
set Bot=null
set Mot=null
set wOt=null
set uOt=null
set rOt=null
set sOt=null
set tOt=null
set iOt=null
set SOt=null
return lOt
endfunction
function bOw takes nothing returns nothing
local unit tOw=GetEnteringUnit()
local unit SOw=tOw
local integer iOw=GetUnitTypeId(SOw)
local unit cOw
local integer oOw
local unit OOw
local integer lOw
if iOw==$6E666762 or iOw==$6E66656C then
set cOw=tOw
set oOw=$41304831
call UnitAddAbility(cOw,oOw)
endif
if iOw==$6E657264 then
set OOw=tOw
set lOw=$41305446
call UnitAddAbility(OOw,lOw)
endif
set tOw=null
set SOw=null
set cOw=null
set OOw=null
endfunction
function bPs takes nothing returns boolean
return true
endfunction
function bTt takes nothing returns boolean
local unit wTt=GetFilterUnit()
local unit uTt=GetTriggerUnit()
local unit rTt
local player sTt
local unit tTt
local unit iTt
local unit STt
local unittype cTt
local boolean oTt
local boolean OTt
local boolean lTt
if wTt!=null and uTt!=null then
set rTt=wTt
set tTt=uTt
set sTt=GetOwningPlayer(tTt)
set oTt=IsUnitEnemy(rTt,sTt)
else
set oTt=false
endif
if oTt==true then
set iTt=GetFilterUnit()
set OTt=UnitAlive(iTt)==true
else
set OTt=false
endif
if OTt then
set STt=GetFilterUnit()
set cTt=UNIT_TYPE_STRUCTURE
set lTt=IsUnitType(STt,cTt)==false
else
set lTt=false
endif
set wTt=null
set uTt=null
set rTt=null
set sTt=null
set tTt=null
set iTt=null
set STt=null
set cTt=null
return lTt
endfunction
function bWo takes nothing returns boolean
local playerunitevent OWo=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code lWo=i7
call emO(OWo,null,lWo,null)
set OWo=null
return true
endfunction
function bXu takes nothing returns nothing
local integer JLu=GetSpellAbilityId()
local unit KLu
local integer LLu
local unit XLu
local unit CLu
local unit VLu
local unit BLu
local unit NLu
local unit MLu
local real wXu
local unit uXu
local integer rXu
local unit sXu
local integer tXu
local integer iXu
local unit SXu
local string cXu
local widget oXu
local player OXu
local real lXu
if JLu==$4131384D then
set KLu=GetSpellAbilityUnit()
set CLu=KLu
set LLu=GetPlayerTechCount(GetOwningPlayer(CLu),$5230374C,true)
set VLu=KLu
set OXu=GetOwningPlayer(VLu)
set BLu=KLu
set lXu=GetUnitX(BLu)
set NLu=KLu
set XLu=CreateUnit(OXu,$75303030,lXu,GetUnitY(NLu),0.)
set MLu=XLu
set wXu=3.
call UnitApplyTimedLife(MLu,$42544C46,wXu)
set uXu=XLu
set rXu=$4131384E
call UnitAddAbility(uXu,rXu)
set sXu=XLu
set tXu=$4131384E
set iXu=LLu
call SetUnitAbilityLevel(sXu,tXu,iXu)
set SXu=XLu
set cXu="innerfire"
set oXu=KLu
call IssueTargetOrder(SXu,cXu,oXu)
endif
set KLu=null
set XLu=null
set CLu=null
set VLu=null
set BLu=null
set NLu=null
set MLu=null
set uXu=null
set sXu=null
set SXu=null
set oXu=null
set OXu=null
endfunction
function bZp takes nothing returns boolean
local trigger uZp
local trigger rZp
local playerunitevent sZp
local integer tZp
local playerunitevent iZp
local code SZp
local playerunitevent cZp
local code oZp
local playerunitevent OZp
local code lZp
set Dn=CreateTrigger()
set Hn=null
set uZp=Dn
call DisableTrigger(uZp)
set rZp=Dn
set sZp=EVENT_PLAYER_UNIT_ATTACKED
set tZp=0
loop
call TriggerRegisterPlayerUnitEvent(rZp,Player(tZp),sZp,null)
set tZp=tZp+1
exitwhen tZp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dn,Condition(W6))
call TriggerAddAction(Dn,E6)
set iZp=EVENT_PLAYER_UNIT_ATTACKED
set SZp=Z6
call emO(iZp,null,SZp,null)
set cZp=EVENT_PLAYER_UNIT_DEATH
set oZp=U6
call emO(cZp,null,oZp,null)
set OZp=EVENT_PLAYER_HERO_REVIVE_FINISH
set lZp=I6
call emO(OZp,null,lZp,null)
set uZp=null
set rZp=null
set sZp=null
set iZp=null
set cZp=null
set OZp=null
return true
endfunction
function bat takes nothing returns boolean
return true
endfunction
function bde takes nothing returns boolean
local trigger sde
local trigger tde
local playerunitevent ide
local integer Sde
local trigger cde
local trigger ode
local playerunitevent Ode
local integer lde
set In=CreateTrigger()
set Pn=CreateTrigger()
set sde=Pn
call DisableTrigger(sde)
set tde=Pn
set ide=EVENT_PLAYER_UNIT_ATTACKED
set Sde=0
loop
call TriggerRegisterPlayerUnitEvent(tde,Player(Sde),ide,null)
set Sde=Sde+1
exitwhen Sde==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Pn,k6)
set cde=In
call DisableTrigger(cde)
set ode=In
set Ode=EVENT_PLAYER_UNIT_SPELL_FINISH
set lde=0
loop
call TriggerRegisterPlayerUnitEvent(ode,Player(lde),Ode,null)
set lde=lde+1
exitwhen lde==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(In,j6)
set sde=null
set tde=null
set ide=null
set cde=null
set ode=null
set Ode=null
return true
endfunction
function Vle takes timer Ele,string Zle returns integer
local integer Ule
local integer Ile
local integer Ple
local string Ale
local integer Dle
local integer Hle
local integer Jle
local hashtable Kle
local integer Lle
local integer Xle
local timer Cle
set aW[qW]=Zle
set qW=qW+1
set Ile=Lg
set Cle=Ele
set Ple=GetHandleId(Cle)
set Ale="when calling loadInt in TimerUtils, line 22"
set aW[qW]=Ale
set qW=qW+1
if KF[Ile]==0 then
if Ile==0 then
call L8c("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 40")
else
call L8c("Called Table.loadInt on invalid object.","when calling error in Table, line 40")
endif
endif
set Hle=Ile
set Jle=Ple
set Kle=Sg
set Lle=Hle
set Xle=Jle
set Dle=LoadInteger(Kle,Lle,Xle)
set qW=qW-1
set Ule=Dle
set qW=qW-1
set Kle=null
set Cle=null
return Ule
endfunction
function gWb takes timer TWb,string YWb returns nothing
local timer GWb
set aW[qW]=YWb
set qW=qW+1
if TWb==null then
call L8c("Trying to release a null timer","when calling error in TimerUtils, line 38")
set qW=qW-1
set GWb=null
return
endif
if Vle(TWb,"when calling getData in TimerUtils, line 40")==$28829022 then
call L8c("ReleaseTimer: Double free!","when calling error in TimerUtils, line 41")
set qW=qW-1
set GWb=null
return
endif
call MBp(TWb,$28829022,"when calling setData in TimerUtils, line 43")
set GWb=TWb
call PauseTimer(GWb)
set Jg[Kg]=TWb
set Kg=Kg+1
set qW=qW-1
set GWb=null
endfunction
function TZu takes integer qZu,string aZu returns nothing
local integer nZu
local string dZu
local integer fZu
local string RZu
set aW[qW]=aZu
set qW=qW+1
set nZu=qZu
set dZu="when calling CallbackPeriodic_onDestroy in ClosureTimers, line 141"
set aW[qW]=dZu
set qW=qW+1
call gWb(aj[nZu],"when calling release in ClosureTimers, line 142")
set qW=qW-1
set fZu=qZu
set RZu="when calling dealloc_CallbackPeriodic in ClosureTimers, line 141"
set aW[qW]=RZu
set qW=qW+1
if gF[fZu]==0 then
call L8c("Double free: object of type CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
set TF[YF]=fZu
set YF=YF+1
set gF[fZu]=0
endif
set qW=qW-1
set qW=qW-1
endfunction
function BMu takes integer jMu,integer xMu,string vMu returns nothing
local unit mMu
local integer QMu
local string WMu
local unit EMu
local unit ZMu
local unit UMu
local unit IMu
local real PMu
local unit AMu
local integer DMu
local unit HMu
local integer JMu
local integer KMu
local unit LMu
local string XMu
local player CMu
local real VMu
set aW[qW]=vMu
set qW=qW+1
if Ol==10 then
set QMu=xMu
set WMu="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in AttackBot, line 268"
set aW[qW]=WMu
set qW=qW+1
if gF[QMu]==0 then
if QMu==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(QMu,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
else
set EMu=Nk[jMu]
set CMu=GetOwningPlayer(EMu)
set ZMu=Nk[jMu]
set VMu=GetUnitX(ZMu)
set UMu=Nk[jMu]
set mMu=CreateUnit(CMu,$75303030,VMu,GetUnitY(UMu),0.)
set IMu=mMu
set PMu=3.
call UnitApplyTimedLife(IMu,$42544C46,PMu)
set AMu=mMu
set DMu=$41304C5A
call UnitAddAbility(AMu,DMu)
set HMu=mMu
set JMu=$41304C5A
set KMu=Mk[jMu]
call SetUnitAbilityLevel(HMu,JMu,KMu)
set LMu=mMu
set XMu="fanofknives"
call IssueImmediateOrder(LMu,XMu)
set Ol=Ol+1
endif
set qW=qW-1
set mMu=null
set EMu=null
set ZMu=null
set UMu=null
set IMu=null
set AMu=null
set HMu=null
set LMu=null
set CMu=null
endfunction
function CQp takes integer nQp,integer dQp,string fQp returns nothing
local group RQp
local filterfunc TQp
local unit YQp
local integer GQp
local string gQp
local unit hQp
local unit FQp
local unit kQp
local unit jQp
local unit xQp
local unit vQp
local real mQp
local unit QQp
local integer WQp
local unit EQp
local integer ZQp
local integer UQp
local unit IQp
local string PQp
local widget AQp
local group DQp
local boolexpr HQp
local group JQp
local real KQp
local player LQp
local real XQp
set aW[qW]=fQp
set qW=qW+1
if Ie==30 then
set GQp=dQp
set gQp="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in GalagrondBlue, line 453"
set aW[qW]=gQp
set qW=qW+1
if gF[GQp]==0 then
if GQp==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(GQp,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
else
set RQp=CreateGroup()
set TQp=Filter(ptw)
set JQp=RQp
set hQp=bx[nQp]
set KQp=GetUnitX(hQp)
set FQp=bx[nQp]
call GroupEnumUnitsInRange(JQp,KQp,GetUnitY(FQp),450.,TQp)
set kQp=bx[nQp]
set LQp=GetOwningPlayer(kQp)
set jQp=bx[nQp]
set XQp=GetUnitX(jQp)
set xQp=bx[nQp]
set YQp=CreateUnit(LQp,$75303030,XQp,GetUnitY(xQp),0.)
set vQp=YQp
set mQp=3.
call UnitApplyTimedLife(vQp,$42544C46,mQp)
set QQp=YQp
set WQp=$41313450
call UnitAddAbility(QQp,WQp)
set EQp=YQp
set ZQp=$41313450
set UQp=yx[nQp]
call SetUnitAbilityLevel(EQp,ZQp,UQp)
set IQp=YQp
set PQp="thunderbolt"
set AQp=GroupPickRandomUnit(RQp)
call IssueTargetOrder(IQp,PQp,AQp)
set DQp=RQp
call DestroyGroup(DQp)
set HQp=TQp
call DestroyBoolExpr(HQp)
set Ie=Ie+1
endif
set qW=qW-1
set RQp=null
set TQp=null
set YQp=null
set hQp=null
set FQp=null
set kQp=null
set jQp=null
set xQp=null
set vQp=null
set QQp=null
set EQp=null
set IQp=null
set AQp=null
set DQp=null
set HQp=null
set JQp=null
set LQp=null
endfunction
function DFi takes integer FFi,integer kFi,string jFi returns nothing
local integer xFi
local string vFi
local unit mFi
local real QFi
local unit WFi
local unitstate EFi
local real ZFi
local unit UFi
local unitstate IFi
local unit PFi
local unitstate AFi
set aW[qW]=jFi
set qW=qW+1
if gl==0 then
set xFi=kFi
set vFi="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in BlackPearl, line 518"
set aW[qW]=vFi
set qW=qW+1
if gF[xFi]==0 then
if xFi==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(xFi,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set gl=0
else
set mFi=sj[FFi]
set QFi=25.
set WFi=mFi
set EFi=UNIT_STATE_MANA
set ZFi=QFi
set PFi=WFi
set AFi=EFi
set UFi=WFi
set IFi=EFi
call SetUnitState(PFi,AFi,GetUnitState(UFi,IFi)+ZFi)
set gl=gl-1
endif
set qW=qW-1
set mFi=null
set WFi=null
set EFi=null
set UFi=null
set IFi=null
set PFi=null
set AFi=null
endfunction
function Iru takes integer dru,integer fru,string Rru returns nothing
local integer Tru
local string Yru
local effect Gru
local effect gru
local unit hru
local real Fru
local unit kru
local unitstate jru
local real xru
local unit vru
local unitstate mru
local integer Qru
local unit Wru
local integer Eru
local unit Zru
local unitstate Uru
set aW[qW]=Rru
set qW=qW+1
if sd==4 then
set Tru=fru
set Yru="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in LichKing, line 373"
set aW[qW]=Yru
set qW=qW+1
if gF[Tru]==0 then
if Tru==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Tru,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Gru=Pv[dru]
call DestroyEffect(Gru)
call PauseUnit(Av[dru],false)
call SetUnitInvulnerable(Av[dru],false)
else
set gru=AddSpecialEffectTarget("Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl",Av[dru],"chest")
call DestroyEffect(gru)
set hru=Av[dru]
set Wru=Av[dru]
set Eru=$41305455
set Qru=200*GetUnitAbilityLevel(Wru,Eru)
set Fru=1400.+Qru*1.
set kru=hru
set jru=UNIT_STATE_LIFE
set xru=Fru
set Zru=kru
set Uru=jru
set vru=kru
set mru=jru
call SetUnitState(Zru,Uru,GetUnitState(vru,mru)+xru)
set sd=sd+1
endif
set qW=qW-1
set Gru=null
set gru=null
set hru=null
set kru=null
set jru=null
set vru=null
set mru=null
set Wru=null
set Zru=null
set Uru=null
endfunction
function Jac takes integer eac,integer qac,string aac returns nothing
local unit nac
local unit dac
local unitstate fac
local unit Rac
local unit Tac
local unitstate Yac
local unit Gac
local integer gac
local string hac
local unit Fac
local integer kac
local unit jac
local real xac
local unit vac
local unitstate mac
local real Qac
local unit Wac
local unitstate Eac
local unit Zac
local unit Uac
local unitstate Iac
local real Pac
local boolean Aac
local unit Dac
local unitstate Hac
set aW[qW]=aac
set qW=qW+1
set nac=qx[eac]
set dac=nac
set fac=UNIT_STATE_LIFE
set Pac=GetUnitState(dac,fac)
set Rac=qx[eac]
set Tac=Rac
set Yac=UNIT_STATE_MAX_LIFE
if Pac>GetUnitState(Tac,Yac)*.4 then
set Gac=qx[eac]
set Aac=UnitAlive(Gac)
else
set Aac=false
endif
if Aac then
set gac=qac
set hac="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in GnollT2SiegeBonus, line 83"
set aW[qW]=hac
set qW=qW+1
if gF[gac]==0 then
if gac==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(gac,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Fac=qx[eac]
set kac=$41323047
call UnitRemoveAbility(Fac,kac)
else
set jac=qx[eac]
set Zac=qx[eac]
set Uac=Zac
set Iac=UNIT_STATE_MAX_LIFE
set xac=GetUnitState(Uac,Iac)*.02
set vac=jac
set mac=UNIT_STATE_LIFE
set Qac=xac
set Dac=vac
set Hac=mac
set Wac=vac
set Eac=mac
call SetUnitState(Dac,Hac,GetUnitState(Wac,Eac)+Qac)
endif
set qW=qW-1
set nac=null
set dac=null
set fac=null
set Rac=null
set Tac=null
set Yac=null
set Gac=null
set Fac=null
set jac=null
set vac=null
set mac=null
set Wac=null
set Eac=null
set Zac=null
set Uac=null
set Iac=null
set Dac=null
set Hac=null
endfunction
function OtO takes integer xsO,integer vsO,string msO returns nothing
local integer QsO
local integer WsO
local integer EsO
local string ZsO
local integer UsO
local string IsO
local integer PsO
local integer AsO
local integer DsO
local string HsO
local texttag JsO
local integer KsO
local integer LsO
local integer XsO
local integer CsO
local string VsO
local real BsO
local integer NsO
local string MsO
local player wtO
local integer utO
local boolean rtO
local integer stO
local string ttO
local integer itO
local integer StO
local integer ctO
local integer otO
set aW[qW]=msO
set qW=qW+1
if sh!=0 then
set sh=sh-1
set EsO=hY
set ZsO="when calling shuffle in TournamentMode, line 189"
set aW[qW]=ZsO
set qW=qW+1
if ok[EsO]==0 then
if EsO==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(EsO,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set UsO=hY
set IsO="when calling getFirst in TournamentMode, line 190"
set aW[qW]=IsO
set qW=qW+1
if ok[UsO]==0 then
if UsO==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set AsO=UsO
set PsO=Hv[Kv[Vv[AsO]]]
set qW=qW-1
set QsO=PsO
set DsO=QsO
set HsO="when calling numRace in TournamentMode, line 191"
set aW[qW]=HsO
set qW=qW+1
if DsO==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if DsO==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if DsO==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if DsO==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if DsO==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if DsO==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if DsO==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if DsO==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if DsO==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if DsO==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if DsO==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if DsO==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if DsO==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if DsO==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if DsO==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if DsO==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if DsO==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if DsO==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if DsO==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if DsO==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,QsO,"when calling remove in TournamentMode, line 192")
set jY[sh]=L5u(-150.,440.-100.*sh,128.,Wyc(QsO),10.)
set JsO=jY[sh]
set itO=255
set StO=106
set ctO=6
set otO=255
set KsO=itO
set LsO=StO
set XsO=ctO
set CsO=otO
call SetTextTagColor(JsO,KsO,LsO,XsO,CsO)
set VsO=Wyc(QsO)
set BsO=10.
call DisplayTimedTextToPlayer(IY,0.,0.,BsO,VsO)
set NsO=hY
set MsO="when calling shuffle in TournamentMode, line 196"
set aW[qW]=MsO
set qW=qW+1
if ok[NsO]==0 then
if NsO==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(NsO,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set WsO=0
loop
exitwhen WsO>3
set wtO=Player(WsO)
set utO=QsO
set rtO=false
call SetPlayerAbilityAvailable(wtO,utO,rtO)
set WsO=WsO+1
endloop
else
set stO=vsO
set ttO="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in TournamentMode, line 200"
set aW[qW]=ttO
set qW=qW+1
if gF[stO]==0 then
if stO==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(stO,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
endif
set qW=qW-1
set JsO=null
set wtO=null
endfunction
function P2u takes integer G2u,integer g2u,string h2u returns nothing
local integer F2u
local real k2u
local real j2u
local filterfunc x2u
local integer v2u
local string m2u
local unit Q2u
local boolexpr W2u
local string E2u
local integer Z2u
local real U2u
local real I2u
set aW[qW]=h2u
set qW=qW+1
if ie==0 then
set v2u=g2u
set m2u="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Expeditions, line 1445"
set aW[qW]=m2u
set qW=qW+1
if gF[v2u]==0 then
if v2u==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(v2u,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Q2u=Nj[G2u]
call RemoveUnit(Q2u)
set W2u=Mj[G2u]
call DestroyBoolExpr(W2u)
set ie=0
else
set U2u=wx[G2u]
set I2u=ux[G2u]
set k2u=U2u
set j2u=I2u
set x2u=Mj[G2u]
set E2u="when calling alloc_ForGroupCallback_forNearestUnit_doPeriodically_registerPlayerUnitEvent_Expeditions in Expeditions, line 1450"
set aW[qW]=E2u
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set Z2u=qF
set aF[Z2u]=868
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_doPeriodically_registerPlayerUnitEvent_Expeditions.","when calling error in Expeditions, line 1450")
set Z2u=0
endif
else
set eF=eF-1
set Z2u=pF[eF]
set aF[Z2u]=868
endif
set qW=qW-1
set F2u=Z2u
set tx[F2u]=rx[G2u]
set ix[F2u]=sx[G2u]
call WXp(4,0,null,null,k2u,j2u,600.,false,0,null,x2u,F2u,"when calling forNearestUnit in Expeditions, line 1450")
set ie=ie-1
endif
set qW=qW-1
set x2u=null
set Q2u=null
set W2u=null
endfunction
function QWy takes integer qWy,integer aWy,string nWy returns nothing
local effect dWy
local integer fWy
local string RWy
local effect TWy
local string YWy
local widget GWy
local string gWy
local effect hWy
local unitstate FWy
local unit kWy
local integer jWy
local unit xWy
local real vWy
local unit mWy
set aW[qW]=nWy
set qW=qW+1
if Za==4 then
set fWy=aWy
set RWy="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Ikar, line 448"
set aW[qW]=RWy
set qW=qW+1
if gF[fWy]==0 then
if fWy==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(fWy,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set TWy=Nx[qWy]
call DestroyEffect(TWy)
call PauseUnit(Mx[qWy],false)
call SetUnitInvulnerable(Mx[qWy],false)
call EnableTrigger(wv[qWy])
else
set YWy="chest"
set GWy=Mx[qWy]
set gWy="Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl"
set bj_lastCreatedEffect=AddSpecialEffectTarget(gWy,GWy,YWy)
set dWy=bj_lastCreatedEffect
set hWy=dWy
call DestroyEffect(hWy)
set mWy=Mx[qWy]
set FWy=UNIT_STATE_LIFE
set kWy=Mx[qWy]
set vWy=GetUnitState(kWy,FWy)
set jWy=$41305851
set xWy=Mx[qWy]
call SetWidgetLife(mWy,vWy+1400.+200.*I2R(GetUnitAbilityLevel(xWy,jWy)))
set Za=Za+1
endif
set qW=qW-1
set dWy=null
set TWy=null
set GWy=null
set hWy=null
set FWy=null
set kWy=null
set xWy=null
set mWy=null
endfunction
function YNr takes integer JBr,integer KBr,string LBr returns nothing
local integer XBr
local integer CBr
local integer VBr
local string BBr
local integer NBr
local string MBr
local integer wNr
local integer uNr
local integer rNr
local string sNr
local texttag tNr
local integer iNr
local integer SNr
local integer cNr
local integer oNr
local string ONr
local real lNr
local integer bNr
local string yNr
local player pNr
local integer eNr
local boolean qNr
local integer aNr
local string nNr
local integer dNr
local integer fNr
local integer RNr
local integer TNr
set aW[qW]=LBr
set qW=qW+1
if sh!=0 then
set sh=sh-1
set VBr=hY
set BBr="when calling shuffle in TournamentMode, line 77"
set aW[qW]=BBr
set qW=qW+1
if ok[VBr]==0 then
if VBr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(VBr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set NBr=hY
set MBr="when calling getFirst in TournamentMode, line 78"
set aW[qW]=MBr
set qW=qW+1
if ok[NBr]==0 then
if NBr==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set uNr=NBr
set wNr=Hv[Kv[Vv[uNr]]]
set qW=qW-1
set XBr=wNr
set rNr=XBr
set sNr="when calling numRace in TournamentMode, line 79"
set aW[qW]=sNr
set qW=qW+1
if rNr==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if rNr==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if rNr==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if rNr==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if rNr==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if rNr==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if rNr==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if rNr==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if rNr==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if rNr==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if rNr==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if rNr==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if rNr==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if rNr==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if rNr==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if rNr==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if rNr==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if rNr==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if rNr==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if rNr==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,XBr,"when calling remove in TournamentMode, line 80")
set jY[sh]=L5u(-150.,440.-100.*sh,128.,Wyc(XBr),10.)
set tNr=jY[sh]
set dNr=255
set fNr=106
set RNr=6
set TNr=255
set iNr=dNr
set SNr=fNr
set cNr=RNr
set oNr=TNr
call SetTextTagColor(tNr,iNr,SNr,cNr,oNr)
set ONr=Wyc(XBr)
set lNr=10.
call DisplayTimedTextToPlayer(IY,0.,0.,lNr,ONr)
set bNr=hY
set yNr="when calling shuffle in TournamentMode, line 84"
set aW[qW]=yNr
set qW=qW+1
if ok[bNr]==0 then
if bNr==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(bNr,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set CBr=0
loop
exitwhen CBr>3
set pNr=Player(CBr)
set eNr=XBr
set qNr=false
call SetPlayerAbilityAvailable(pNr,eNr,qNr)
set CBr=CBr+1
endloop
else
set aNr=KBr
set nNr="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in TournamentMode, line 88"
set aW[qW]=nNr
set qW=qW+1
if gF[aNr]==0 then
if aNr==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(aNr,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
endif
set qW=qW-1
set tNr=null
set pNr=null
endfunction
function aSl takes integer cSl,integer oSl,string OSl returns nothing
local unit lSl
local integer bSl
local string ySl
local real pSl
local integer eSl
local unit qSl
set aW[qW]=OSl
set qW=qW+1
if cG==SG then
set bSl=oSl
set ySl="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in ReignOfChaos, line 282"
set aW[qW]=ySl
set qW=qW+1
if gF[bSl]==0 then
if bSl==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(bSl,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set cG=0
call RemoveLocation(Mm[cSl])
else
set cG=cG+1
set lSl=CreateUnit(iG,$75303030,GetLocationX(Mm[cSl]),GetLocationY(Mm[cSl]),180.)
call UnitAddAbility(lSl,$41304832)
call IssuePointOrderByIdLoc(lSl,852224,Mm[cSl])
set pSl=3.
set eSl=$42544C46
set qSl=bj_lastCreatedUnit
call UnitApplyTimedLife(qSl,eSl,pSl)
endif
set qW=qW-1
set lSl=null
set qSl=null
endfunction
function evp takes integer Cxp,integer Vxp,string Bxp returns nothing
local integer Nxp
local string Mxp
local effect wvp
local effect uvp
local unit rvp
local real svp
local unit tvp
local unitstate ivp
local real Svp
local unit cvp
local unitstate ovp
local integer Ovp
local unit lvp
local integer bvp
local unit yvp
local unitstate pvp
set aW[qW]=Bxp
set qW=qW+1
if Gp==4 then
set Nxp=Vxp
set Mxp="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Eudora, line 1273"
set aW[qW]=Mxp
set qW=qW+1
if gF[Nxp]==0 then
if Nxp==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Nxp,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set wvp=Xj[Cxp]
call DestroyEffect(wvp)
call PauseUnit(Cj[Cxp],false)
call SetUnitInvulnerable(Cj[Cxp],false)
else
set uvp=AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Cj[Cxp],"chest")
call DestroyEffect(uvp)
set rvp=Cj[Cxp]
set lvp=Cj[Cxp]
set bvp=$41305336
set Ovp=200*GetUnitAbilityLevel(lvp,bvp)
set svp=1400.+Ovp*1.
set tvp=rvp
set ivp=UNIT_STATE_LIFE
set Svp=svp
set yvp=tvp
set pvp=ivp
set cvp=tvp
set ovp=ivp
call SetUnitState(yvp,pvp,GetUnitState(cvp,ovp)+Svp)
set Gp=Gp+1
endif
set qW=qW-1
set wvp=null
set uvp=null
set rvp=null
set tvp=null
set ivp=null
set cvp=null
set ovp=null
set lvp=null
set yvp=null
set pvp=null
endfunction
function j4e takes integer y4e,integer p4e,string e4e returns nothing
local real q4e
local real a4e
local real n4e
local integer d4e
local unit f4e
local unit R4e
local unit T4e
local unit Y4e
local unit G4e
local unit g4e
local real h4e
local integer F4e
local string k4e
set aW[qW]=e4e
set qW=qW+1
set R4e=Cx[y4e]
if UnitAlive(R4e) then
set T4e=Cx[y4e]
set q4e=GetUnitX(T4e)
set Y4e=Cx[y4e]
set a4e=GetUnitY(Y4e)
set n4e=GetUnitFacing(Cx[y4e])
set d4e=0
loop
exitwhen d4e>3
set G4e=Cx[y4e]
set f4e=CreateUnit(GetOwningPlayer(G4e),$6E303438,q4e,a4e,n4e)
set g4e=f4e
set h4e=40.
call UnitApplyTimedLife(g4e,$42544C46,h4e)
set d4e=d4e+1
endloop
else
set F4e=p4e
set k4e="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Himeron, line 501"
set aW[qW]=k4e
set qW=qW+1
if gF[F4e]==0 then
if F4e==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(F4e,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
endif
set qW=qW-1
set f4e=null
set R4e=null
set T4e=null
set Y4e=null
set G4e=null
set g4e=null
endfunction
function nMr takes integer uMr,integer rMr,string sMr returns nothing
local real tMr
local real iMr
local real SMr
local integer cMr
local unit oMr
local unit OMr
local unit lMr
local unit bMr
local unit yMr
local unit pMr
local real eMr
local integer qMr
local string aMr
set aW[qW]=sMr
set qW=qW+1
set OMr=Xx[uMr]
if UnitAlive(OMr) then
set lMr=Xx[uMr]
set tMr=GetUnitX(lMr)
set bMr=Xx[uMr]
set iMr=GetUnitY(bMr)
set SMr=GetUnitFacing(Xx[uMr])
set cMr=0
loop
exitwhen cMr>3
set yMr=Xx[uMr]
set oMr=CreateUnit(GetOwningPlayer(yMr),$6E303438,tMr,iMr,SMr)
set pMr=oMr
set eMr=40.
call UnitApplyTimedLife(pMr,$42544C46,eMr)
set cMr=cMr+1
endloop
else
set qMr=rMr
set aMr="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Himeron, line 487"
set aW[qW]=aMr
set qW=qW+1
if gF[qMr]==0 then
if qMr==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(qMr,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
endif
set qW=qW-1
set oMr=null
set OMr=null
set lMr=null
set bMr=null
set yMr=null
set pMr=null
endfunction
function oWt takes integer DQt,integer HQt,string JQt returns nothing
local effect KQt
local integer LQt
local string XQt
local string CQt
local widget VQt
local string BQt
local effect NQt
local unit MQt
local real wWt
local unit uWt
local unitstate rWt
local real sWt
local unit tWt
local unitstate iWt
local unit SWt
local unitstate cWt
set aW[qW]=JQt
set qW=qW+1
if kh==5 then
set LQt=HQt
set XQt="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in VulperaAirBonusUnit, line 200"
set aW[qW]=XQt
set qW=qW+1
if gF[LQt]==0 then
if LQt==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(LQt,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
call PauseUnit(BQ[DQt],false)
call SetUnitInvulnerable(BQ[DQt],false)
else
set CQt="chest"
set VQt=BQ[DQt]
set BQt="Abilities\\Spells\\Items\\AIlm\\AIimTarget.mdl"
set bj_lastCreatedEffect=AddSpecialEffectTarget(BQt,VQt,CQt)
set KQt=bj_lastCreatedEffect
set NQt=KQt
call DestroyEffect(NQt)
set MQt=BQ[DQt]
set wWt=450.
set uWt=MQt
set rWt=UNIT_STATE_LIFE
set sWt=wWt
set SWt=uWt
set cWt=rWt
set tWt=uWt
set iWt=rWt
call SetUnitState(SWt,cWt,GetUnitState(tWt,iWt)+sWt)
set kh=kh+1
endif
set qW=qW-1
set KQt=null
set VQt=null
set NQt=null
set MQt=null
set uWt=null
set rWt=null
set tWt=null
set iWt=null
set SWt=null
set cWt=null
endfunction
function qDy takes integer sDy,integer tDy,string iDy returns nothing
local integer SDy
local string cDy
local unit oDy
local unit ODy
local string lDy
local real bDy
local real yDy
local real pDy
local real eDy
set aW[qW]=iDy
set qW=qW+1
if Ha==0 then
set SDy=tDy
set cDy="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Illidan, line 311"
set aW[qW]=cDy
set qW=qW+1
if gF[SDy]==0 then
if SDy==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(SDy,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set oDy=Ja
call RemoveUnit(oDy)
set Ja=null
set Ha=0
else
set ODy=Ja
set lDy="silence"
set pDy=sv[sDy]
set eDy=tv[sDy]
set bDy=pDy
set yDy=eDy
call IssuePointOrder(ODy,lDy,bDy,yDy)
set Ha=Ha-1
endif
set qW=qW-1
set oDy=null
set ODy=null
endfunction
function rnw takes integer oaw,integer Oaw,string law returns nothing
local integer baw
local real yaw
local texttag paw
local texttag eaw
local texttag qaw
local unit aaw
local integer naw
local unit daw
local integer faw
local unit Raw
local real Taw
local unit Yaw
local unitstate Gaw
local real gaw
local unit haw
local unitstate Faw
local unit kaw
local unit jaw
local unit xaw
local integer vaw
local real maw
local texttag Qaw
local integer Waw
local integer Eaw
local integer Zaw
local integer Uaw
local texttag Iaw
local real Paw
local real Aaw
local texttag Daw
local real Haw
local integer Jaw
local string Kaw
local trigger Law
local effect Xaw
local unit Caw
local unitstate Vaw
local real Baw
local real Naw
local real Maw
local real wnw
local real unw
set aW[qW]=law
set qW=qW+1
set aaw=Fv[oaw]
set naw=$41313730
if GetUnitAbilityLevel(aaw,naw)>0==true then
set daw=Fv[oaw]
set faw=$41313657
set baw=GetUnitAbilityLevel(daw,faw)
set yaw=6.+4.*baw
set Raw=Fv[oaw]
set Taw=yaw
set Yaw=Raw
set Gaw=UNIT_STATE_LIFE
set gaw=Taw
set Caw=Yaw
set Vaw=Gaw
set haw=Yaw
set Faw=Gaw
call SetUnitState(Caw,Vaw,GetUnitState(haw,Faw)+gaw)
set kaw=Fv[oaw]
set jaw=kaw
set Baw=GetUnitX(jaw)
set xaw=kaw
set wnw=Baw
set unw=GetUnitY(xaw)
set Naw=wnw
set Maw=unw
set maw=yaw
set vaw=R2I(maw)
set paw=PBr(Naw,Maw,"+ "+I2S(vaw))
set Qaw=paw
set Waw=0
set Eaw=255
set Zaw=0
set Uaw=255
call SetTextTagColor(Qaw,Waw,Eaw,Zaw,Uaw)
set eaw=paw
set Iaw=eaw
set Paw=0.
set Aaw=.04
call SetTextTagVelocity(Iaw,Paw,Aaw)
set qaw=eaw
set Daw=qaw
set Haw=3.
call SetTextTagLifespan(Daw,Haw)
else
set Jaw=Oaw
set Kaw="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Kazzak, line 408"
set aW[qW]=Kaw
set qW=qW+1
if gF[Jaw]==0 then
if Jaw==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Jaw,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Law=Dn
call DisableTrigger(Law)
set Xaw=Hn
call DestroyEffect(Xaw)
set Hn=null
endif
set qW=qW-1
set paw=null
set eaw=null
set qaw=null
set aaw=null
set daw=null
set Raw=null
set Yaw=null
set Gaw=null
set haw=null
set Faw=null
set kaw=null
set jaw=null
set xaw=null
set Qaw=null
set Iaw=null
set Daw=null
set Law=null
set Xaw=null
set Caw=null
set Vaw=null
endfunction
function tjy takes integer Hky,integer Jky,string Kky returns nothing
local effect Lky
local integer Xky
local string Cky
local effect Vky
local string Bky
local widget Nky
local string Mky
local effect wjy
local unitstate ujy
local unit rjy
local unit sjy
set aW[qW]=Kky
set qW=qW+1
if Gg==4 then
set Xky=Jky
set Cky="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in TheEpiphanyOfDeath, line 1013"
set aW[qW]=Cky
set qW=qW+1
if gF[Xky]==0 then
if Xky==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Xky,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Vky=ZQ[Hky]
call DestroyEffect(Vky)
call PauseUnit(Rg,false)
call SetUnitInvulnerable(Rg,false)
else
set Bky="chest"
set Nky=Rg
set Mky="Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl"
set bj_lastCreatedEffect=AddSpecialEffectTarget(Mky,Nky,Bky)
set Lky=bj_lastCreatedEffect
set wjy=Lky
call DestroyEffect(wjy)
set sjy=Rg
set ujy=UNIT_STATE_LIFE
set rjy=Rg
call SetWidgetLife(sjy,GetUnitState(rjy,ujy)+1400.+200.*I2R(7))
set Gg=Gg+1
endif
set qW=qW-1
set Lky=null
set Vky=null
set Nky=null
set wjy=null
set ujy=null
set rjy=null
set sjy=null
endfunction
function uee takes integer Wpe,integer Epe,string Zpe returns nothing
local integer Upe
local string Ipe
local effect Ppe
local effect Ape
local unit Dpe
local real Hpe
local unit Jpe
local unitstate Kpe
local real Lpe
local unit Xpe
local unitstate Cpe
local integer Vpe
local unit Bpe
local integer Npe
local unit Mpe
local unitstate wee
set aW[qW]=Zpe
set qW=qW+1
if sf==4 then
set Upe=Epe
set Ipe="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Medivh, line 799"
set aW[qW]=Ipe
set qW=qW+1
if gF[Upe]==0 then
if Upe==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Upe,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Ppe=gm[Wpe]
call DestroyEffect(Ppe)
call PauseUnit(hm[Wpe],false)
call SetUnitInvulnerable(hm[Wpe],false)
call EnableTrigger(Fm[Wpe])
else
set Ape=AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIim\\AIimTarget.mdl",hm[Wpe],"chest")
call DestroyEffect(Ape)
set Dpe=hm[Wpe]
set Bpe=hm[Wpe]
set Npe=$41305851
set Vpe=200*GetUnitAbilityLevel(Bpe,Npe)
set Hpe=1400.+Vpe*1.
set Jpe=Dpe
set Kpe=UNIT_STATE_LIFE
set Lpe=Hpe
set Mpe=Jpe
set wee=Kpe
set Xpe=Jpe
set Cpe=Kpe
call SetUnitState(Mpe,wee,GetUnitState(Xpe,Cpe)+Lpe)
set sf=sf+1
endif
set qW=qW-1
set Ppe=null
set Ape=null
set Dpe=null
set Jpe=null
set Kpe=null
set Xpe=null
set Cpe=null
set Bpe=null
set Mpe=null
set wee=null
endfunction
function vye takes integer dye,integer fye,string Rye returns nothing
local integer Tye
local string Yye
local unit Gye
local unit gye
local string hye
local real Fye
local real kye
local real jye
local real xye
set aW[qW]=Rye
set qW=qW+1
if id==0 then
set Tye=fye
set Yye="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in Lorhtemar, line 368"
set aW[qW]=Yye
set qW=qW+1
if gF[Tye]==0 then
if Tye==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(Tye,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
set Gye=Sd
call RemoveUnit(Gye)
set Sd=null
set id=0
else
set gye=Sd
set hye="silence"
set jye=Nv[dye]
set xye=Mv[dye]
set Fye=jye
set kye=xye
call IssuePointOrder(gye,hye,Fye,kye)
set id=id-1
endif
set qW=qW-1
set Gye=null
set gye=null
endfunction
function w7u takes integer R6u,integer T6u,string Y6u returns nothing
local integer G6u
local integer g6u
local integer h6u
local string F6u
local integer k6u
local string j6u
local integer x6u
local integer v6u
local integer m6u
local string Q6u
local texttag W6u
local integer E6u
local integer Z6u
local integer U6u
local integer I6u
local string P6u
local real A6u
local integer D6u
local string H6u
local player J6u
local integer K6u
local boolean L6u
local integer X6u
local string C6u
local integer V6u
local integer B6u
local integer N6u
local integer M6u
set aW[qW]=Y6u
set qW=qW+1
if sh!=0 then
set sh=sh-1
set h6u=hY
set F6u="when calling shuffle in TournamentMode, line 133"
set aW[qW]=F6u
set qW=qW+1
if ok[h6u]==0 then
if h6u==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(h6u,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set k6u=hY
set j6u="when calling getFirst in TournamentMode, line 134"
set aW[qW]=j6u
set qW=qW+1
if ok[k6u]==0 then
if k6u==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set v6u=k6u
set x6u=Hv[Kv[Vv[v6u]]]
set qW=qW-1
set G6u=x6u
set m6u=G6u
set Q6u="when calling numRace in TournamentMode, line 135"
set aW[qW]=Q6u
set qW=qW+1
if m6u==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if m6u==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if m6u==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if m6u==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if m6u==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if m6u==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if m6u==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if m6u==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if m6u==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if m6u==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if m6u==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if m6u==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if m6u==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if m6u==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if m6u==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if m6u==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if m6u==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if m6u==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if m6u==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if m6u==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call eWp(hY,G6u,"when calling remove in TournamentMode, line 136")
set jY[sh]=L5u(-150.,440.-100.*sh,128.,Wyc(G6u),10.)
set W6u=jY[sh]
set V6u=255
set B6u=106
set N6u=6
set M6u=255
set E6u=V6u
set Z6u=B6u
set U6u=N6u
set I6u=M6u
call SetTextTagColor(W6u,E6u,Z6u,U6u,I6u)
set P6u=Wyc(G6u)
set A6u=10.
call DisplayTimedTextToPlayer(IY,0.,0.,A6u,P6u)
set D6u=hY
set H6u="when calling shuffle in TournamentMode, line 140"
set aW[qW]=H6u
set qW=qW+1
if ok[D6u]==0 then
if D6u==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(D6u,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set g6u=0
loop
exitwhen g6u>3
set J6u=Player(g6u)
set K6u=G6u
set L6u=false
call SetPlayerAbilityAvailable(J6u,K6u,L6u)
set g6u=g6u+1
endloop
else
set X6u=T6u
set C6u="when calling dispatch_CallbackPeriodic_destroyCallbackPeriodic in TournamentMode, line 144"
set aW[qW]=C6u
set qW=qW+1
if gF[X6u]==0 then
if X6u==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.CallbackPeriodic","when calling error in ClosureTimers, line 127")
else
call L8c("Called CallbackPeriodic.CallbackPeriodic on invalid object.","when calling error in ClosureTimers, line 127")
endif
endif
call TZu(X6u,"when calling destroyCallbackPeriodic in ClosureTimers, line 127")
set qW=qW-1
endif
set qW=qW-1
set W6u=null
set J6u=null
endfunction
function PtS takes integer ZtS,integer UtS,string ItS returns nothing
set aW[qW]=ItS
set qW=qW+1
if gF[ZtS]==0 then
if ZtS==0 then
call L8c("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 130")
else
call L8c("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 130")
endif
endif
if gF[ZtS]<=669 then
if gF[ZtS]<=664 then
if gF[ZtS]<=662 then
if gF[ZtS]<=661 then
if gF[ZtS]<=660 then
call CQp(ZtS,UtS,"when calling call_doPeriodically_GalagrondBlue in ClosureTimers, line 130")
else
call Jac(ZtS,UtS,"when calling call_doPeriodically_GnollT2SiegeBonus in ClosureTimers, line 130")
endif
else
call QWy(ZtS,UtS,"when calling call_doPeriodically_Ikar in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=663 then
call uee(ZtS,UtS,"when calling call_doPeriodically_Medivh in ClosureTimers, line 130")
else
call YNr(ZtS,UtS,"when calling call_doPeriodically_TournamentMode in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=667 then
if gF[ZtS]<=666 then
if gF[ZtS]<=665 then
call w7u(ZtS,UtS,"when calling call_doPeriodically_TournamentMode in ClosureTimers, line 130")
else
call OtO(ZtS,UtS,"when calling call_doPeriodically_TournamentMode in ClosureTimers, line 130")
endif
else
call aSl(ZtS,UtS,"when calling call_doPeriodically_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=668 then
call BMu(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_AttackBot in ClosureTimers, line 130")
else
call DFi(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_BlackPearl in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=674 then
if gF[ZtS]<=672 then
if gF[ZtS]<=671 then
if gF[ZtS]<=670 then
call evp(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Eudora in ClosureTimers, line 130")
else
call P2u(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Expeditions in ClosureTimers, line 130")
endif
else
call nMr(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Himeron in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=673 then
call j4e(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Himeron in ClosureTimers, line 130")
else
call qDy(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Illidan in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=677 then
if gF[ZtS]<=676 then
if gF[ZtS]<=675 then
call rnw(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Kazzak in ClosureTimers, line 130")
else
call Iru(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_LichKing in ClosureTimers, line 130")
endif
else
call vye(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_Lorhtemar in ClosureTimers, line 130")
endif
elseif gF[ZtS]<=678 then
call tjy(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_TheEpiphanyOfDeath in ClosureTimers, line 130")
else
call oWt(ZtS,UtS,"when calling call_doPeriodically_registerPlayerUnitEvent_VulperaAirBonusUnit in ClosureTimers, line 130")
endif
set qW=qW-1
endfunction
function bdl takes nothing returns nothing
local string Odl
local integer ldl
set qW=0
set Odl="via function reference ClosureTimers, line 135"
set aW[qW]=Odl
set qW=qW+1
set ldl=Vle(GetExpiredTimer(),"when calling getData in ClosureTimers, line 138")
call PtS(ldl,ldl,"when calling call in ClosureTimers, line 139")
set qW=qW-1
endfunction
function bhS takes nothing returns nothing
local unit rhS=GetTriggerUnit()
local unit shS=rhS
local unit thS
local unit ihS
local unittype ShS
local player chS
local unit ohS
local unit OhS
local integer lhS
if GetUnitTypeId(shS)==$6830314B then
set vh=6
endif
set thS=rhS
if GetUnitTypeId(thS)==$6830314C then
set vh=9
endif
set ihS=rhS
set ShS=UNIT_TYPE_STRUCTURE
if IsUnitType(ihS,ShS) then
set ohS=rhS
set chS=GetOwningPlayer(ohS)
if xh[GetPlayerId(chS)] then
set OhS=rhS
set lhS=$41304442
call UnitAddAbility(OhS,lhS)
endif
endif
set rhS=null
set shS=null
set thS=null
set ihS=null
set ShS=null
set chS=null
set ohS=null
set OhS=null
endfunction
function bjb takes nothing returns boolean
local unit tjb=GetFilterUnit()
local unit ijb
local player Sjb
local unit cjb
local integer ojb
local boolean Ojb
local boolean ljb
if UnitAlive(tjb)==true then
set ijb=GetFilterUnit()
set Sjb=Od
set Ojb=(ijb!=null and IsUnitAlly(ijb,Sjb))==true
else
set Ojb=false
endif
if Ojb then
set cjb=GetFilterUnit()
set ojb=$4176756C
set ljb=GetUnitAbilityLevel(cjb,ojb)==0
else
set ljb=false
endif
set tjb=null
set ijb=null
set Sjb=null
set cjb=null
return ljb
endfunction
function BWp takes string mWp returns nothing
local integer QWp
local unit WWp
local real EWp
local real ZWp
local integer UWp
local unit IWp
local unit PWp
local unit AWp
local integer DWp
local unit HWp
local unit JWp
local real KWp
local unit LWp
local integer XWp
local string CWp
local integer VWp
set aW[qW]=mWp
set qW=qW+1
set QWp=GetSpellAbilityId()
if QWp==$41304E50 then
set WWp=GetSpellAbilityUnit()
set IWp=WWp
set EWp=GetUnitX(IWp)
set PWp=WWp
set ZWp=GetUnitY(PWp)
set AWp=WWp
set DWp=$41304E50
set id=9+1*GetUnitAbilityLevel(AWp,DWp)
set HWp=WWp
set Sd=CreateUnit(GetOwningPlayer(HWp),$75303036,EWp,ZWp,0.)
set JWp=Sd
set KWp=40.
call UnitApplyTimedLife(JWp,$42544C46,KWp)
set LWp=Sd
set XWp=$41304E49
call UnitAddAbility(LWp,XWp)
set CWp="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Lorhtemar in Lorhtemar, line 366"
set aW[qW]=CWp
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set VWp=GF
set gF[VWp]=677
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Lorhtemar.","when calling error in Lorhtemar, line 366")
set VWp=0
endif
else
set YF=YF-1
set VWp=TF[YF]
set gF[VWp]=677
endif
set qW=qW-1
set UWp=VWp
set Nv[UWp]=EWp
set Mv[UWp]=ZWp
call GtO(2.,UWp,"when calling doPeriodically in Lorhtemar, line 366")
endif
set qW=qW-1
set WWp=null
set IWp=null
set PWp=null
set AWp=null
set HWp=null
set JWp=null
set LWp=null
endfunction
function bkp takes nothing returns nothing
set qW=0
call BWp("via function reference Lorhtemar, line 356")
endfunction
function bkw takes nothing returns boolean
local trigger bFw
local trigger yFw
local real pFw
local boolean eFw
local trigger qFw
local code aFw
local trigger nFw
local trigger dFw
local real fFw
local boolean RFw
local trigger TFw
local code YFw
local trigger GFw
local trigger gFw
local real hFw
local boolean FFw
local trigger kFw
local code jFw
local trigger xFw
local real vFw
local boolean mFw
local trigger QFw
local code WFw
local trigger EFw
local trigger ZFw
local real UFw
local boolean IFw
local trigger PFw
local code AFw
local trigger DFw
local trigger HFw
local real JFw
local boolean KFw
local trigger LFw
local code XFw
local trigger CFw
local real VFw
local boolean BFw
local trigger NFw
local code MFw
local trigger wkw
local real ukw
local boolean rkw
local trigger skw
local code tkw
local trigger ikw
local trigger Skw
local real ckw
local boolean okw
local trigger Okw
local code lkw
set Ca=CreateTrigger()
set bFw=Ca
call DisableTrigger(bFw)
set yFw=Ca
set pFw=10.
set eFw=true
call TriggerRegisterTimerEvent(yFw,pFw,eFw)
set qFw=Ca
set aFw=j5
call TriggerAddAction(qFw,aFw)
set Va=CreateTrigger()
set nFw=Va
call DisableTrigger(nFw)
set dFw=Va
set fFw=900.
set RFw=true
call TriggerRegisterTimerEvent(dFw,fFw,RFw)
set TFw=Va
set YFw=x5
call TriggerAddAction(TFw,YFw)
set Ba=CreateTrigger()
set GFw=Ba
call DisableTrigger(GFw)
set gFw=Ba
set hFw=30.
set FFw=true
call TriggerRegisterTimerEvent(gFw,hFw,FFw)
set kFw=Ba
set jFw=v5
call TriggerAddAction(kFw,jFw)
set Na=CreateTrigger()
set xFw=Na
set vFw=1.
set mFw=true
call TriggerRegisterTimerEvent(xFw,vFw,mFw)
set QFw=Na
set WFw=m5
call TriggerAddAction(QFw,WFw)
set Ma=CreateTrigger()
set EFw=Ma
call DisableTrigger(EFw)
set ZFw=Ma
set UFw=70.
set IFw=true
call TriggerRegisterTimerEvent(ZFw,UFw,IFw)
set PFw=Ma
set AFw=Q5
call TriggerAddAction(PFw,AFw)
set wn=CreateTrigger()
set DFw=wn
call DisableTrigger(DFw)
set HFw=wn
set JFw=60.
set KFw=true
call TriggerRegisterTimerEvent(HFw,JFw,KFw)
set LFw=wn
set XFw=W5
call TriggerAddAction(LFw,XFw)
set un=CreateTrigger()
set CFw=un
set VFw=1800.
set BFw=false
call TriggerRegisterTimerEvent(CFw,VFw,BFw)
set NFw=un
set MFw=E5
call TriggerAddAction(NFw,MFw)
set rn=CreateTrigger()
set wkw=rn
set ukw=3600.
set rkw=false
call TriggerRegisterTimerEvent(wkw,ukw,rkw)
set skw=rn
set tkw=Z5
call TriggerAddAction(skw,tkw)
set sn=CreateTrigger()
set ikw=sn
call DisableTrigger(ikw)
set Skw=sn
set ckw=60.
set okw=true
call TriggerRegisterTimerEvent(Skw,ckw,okw)
set Okw=sn
set lkw=U5
call TriggerAddAction(Okw,lkw)
set bFw=null
set yFw=null
set qFw=null
set nFw=null
set dFw=null
set TFw=null
set GFw=null
set gFw=null
set kFw=null
set xFw=null
set QFw=null
set EFw=null
set ZFw=null
set PFw=null
set DFw=null
set HFw=null
set LFw=null
set CFw=null
set NFw=null
set wkw=null
set skw=null
set ikw=null
set Skw=null
set Okw=null
return true
endfunction
function bmu takes nothing returns boolean
return true
endfunction
function bni takes nothing returns boolean
local unit Xai=GetFilterUnit()
local unit Cai=Xai
local unit Vai
local unittype Bai
local unit Nai
local unittype Mai
local unit wni
local unittype uni
local unit rni
local unittype sni
local unit tni
local integer ini
local boolean Sni
local boolean cni
local boolean oni
local boolean Oni
local boolean lni
if UnitAlive(Cai) then
set Vai=Xai
set Bai=UNIT_TYPE_HERO
set Sni=IsUnitType(Vai,Bai)==false
else
set Sni=false
endif
if Sni then
set Nai=Xai
set Mai=UNIT_TYPE_ANCIENT
set cni=IsUnitType(Nai,Mai)==false
else
set cni=false
endif
if cni then
set wni=Xai
set uni=UNIT_TYPE_STRUCTURE
set oni=IsUnitType(wni,uni)==false
else
set oni=false
endif
if oni then
set rni=Xai
set sni=UNIT_TYPE_MECHANICAL
set Oni=IsUnitType(rni,sni)==false
else
set Oni=false
endif
if Oni then
set tni=Xai
set ini=$42636C66
set lni=GetUnitAbilityLevel(tni,ini)>0==false
else
set lni=false
endif
set Xai=null
set Cai=null
set Vai=null
set Bai=null
set Nai=null
set Mai=null
set wni=null
set uni=null
set rni=null
set sni=null
set tni=null
return lni
endfunction
function bol takes nothing returns boolean
local real Ool
local real lol
set MG=.024/.0023
set Ool=16.
set lol=0.
set wg=Ool
set ug=lol
return true
endfunction
function CRl takes string xRl returns nothing
local group vRl
local filterfunc mRl
local unit QRl
local group WRl
local integer ERl
local timerdialog ZRl
local group URl
local group IRl
local unit PRl
local group ARl
local boolexpr DRl
local string HRl
local integer JRl
local real KRl
local integer LRl
local string XRl
set aW[qW]=xRl
set qW=qW+1
set ZRl=tr
call DestroyTimerDialog(ZRl)
set vRl=CreateGroup()
set mRl=Filter(T0w)
call GroupEnumUnitsInRect(vRl,bj_mapInitialPlayableArea,mRl)
set WRl=vRl
loop
set URl=WRl
exitwhen not (FirstOfGroup(URl)!=null)
set IRl=WRl
set PRl=FirstOfGroup(IRl)
call GroupRemoveUnit(IRl,PRl)
set QRl=PRl
call got(QRl,"when calling reRoll in NewRandom, line 138")
endloop
set ARl=vRl
call DestroyGroup(ARl)
set DRl=mRl
call DestroyBoolExpr(DRl)
set HRl="when calling alloc_CallbackSingle_doAfter_NewRandom in NewRandom, line 141"
set aW[qW]=HRl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set JRl=fF
set RF[JRl]=744
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NewRandom.","when calling error in NewRandom, line 141")
set JRl=0
endif
else
set dF=dF-1
set JRl=nF[dF]
set RF[JRl]=744
endif
set qW=qW-1
set ERl=JRl
set KRl=2.
set LRl=ERl
set XRl="when calling doAfter in NewRandom, line 141"
set aW[qW]=XRl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),KRl,LRl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set vRl=null
set mRl=null
set QRl=null
set WRl=null
set ZRl=null
set URl=null
set IRl=null
set PRl=null
set ARl=null
set DRl=null
endfunction
function bpy takes nothing returns nothing
set qW=0
call CRl("via function reference NewRandom, line 39")
endfunction
function bqe takes nothing returns boolean
return IsUnitType(GetOrderedUnit(),UNIT_TYPE_STRUCTURE)==true and IsUnitType(GetOrderTargetUnit(),UNIT_TYPE_HERO)==true and IsPlayerAlly(GetOwningPlayer(GetOrderTargetUnit()),GetOwningPlayer(GetOrderedUnit()))==false
endfunction
function bry takes nothing returns nothing
local unit Buy=GetTriggerUnit()
local unit Nuy=Buy
local unit Muy
local unit wry
local integer ury
local unit rry
local unit sry
local unitstate try
local unit iry
local integer Sry
local widget cry
local boolean ory
local boolean Ory
local boolean lry
if GetUnitTypeId(Nuy)==$4F303430 then
set ory=true
else
set Muy=Buy
set ory=GetUnitTypeId(Muy)==$4F746368
endif
if ory then
set wry=Buy
set ury=$41305336
set Ory=GetUnitAbilityLevel(wry,ury)>0
else
set Ory=false
endif
if Ory then
set rry=Buy
set sry=rry
set try=UNIT_STATE_LIFE
set lry=GetUnitState(sry,try)<=2000.
else
set lry=false
endif
if lry then
set iry=Buy
set Sry=852066
set cry=Buy
call IssueTargetOrderById(iry,Sry,cry)
endif
set Buy=null
set Nuy=null
set Muy=null
set wry=null
set rry=null
set sry=null
set try=null
set iry=null
set cry=null
endfunction
function bvt takes nothing returns boolean
return true
endfunction
function byl takes nothing returns nothing
local unit ibl=GetKillingUnit()
local unit Sbl=GetDyingUnit()
local unit bbl=ibl
local integer ybl=$41305655
local integer cbl
local integer obl
local integer Obl
local integer lbl
local unit pbl
local unittype ebl
local unit qbl
local effect abl
local widget nbl
local string dbl
local string fbl
local unit Rbl
local integer Tbl
local player Ybl
local unit Gbl
local player gbl
local integer hbl
local player Fbl
local playerstate kbl
local integer jbl
local player xbl
local playerstate vbl
local unit mbl
local integer Qbl
local unit Wbl
local unittype Ebl
local unit Zbl
local unit Ubl
local integer Ibl
local effect Pbl
local widget Abl
local string Dbl
local string Hbl
local unit Jbl
local integer Kbl
local player Lbl
local unit Xbl
local player Cbl
local integer Vbl
local player Bbl
local playerstate Nbl
local integer Mbl
local player wyl
local playerstate uyl
local boolean ryl
local boolean syl
local player tyl
local playerstate iyl
local boolean Syl
local boolean cyl
local integer oyl
local player Oyl
local playerstate lyl
if GetUnitAbilityLevel(bbl,ybl)>0 then
set pbl=Sbl
set ebl=UNIT_TYPE_HERO
set ryl=IsUnitType(pbl,ebl)
else
set ryl=false
endif
if ryl then
set qbl=Sbl
set syl=not IsUnitIllusion(qbl)
else
set syl=false
endif
if syl then
set nbl=ibl
set dbl="UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
set fbl="overhead"
set abl=AddSpecialEffectTarget(dbl,nbl,fbl)
call DestroyEffect(abl)
set Rbl=ibl
set Tbl=$41305655
set cbl=25+25*GetUnitAbilityLevel(Rbl,Tbl)
call UuS(ibl,cbl)
set Gbl=ibl
set Ybl=GetOwningPlayer(Gbl)
set obl=GetPlayerId(Ybl)-4
set gbl=Player(obl)
set hbl=cbl
set Fbl=gbl
set kbl=PLAYER_STATE_RESOURCE_GOLD
set jbl=hbl
set tyl=Fbl
set iyl=kbl
set xbl=Fbl
set vbl=kbl
call SetPlayerState(tyl,iyl,GetPlayerState(xbl,vbl)+jbl)
set hr[obl]=hr[obl]+cbl
set Fr[obl]=Fr[obl]+cbl
set Cr[obl]=Cr[obl]+cbl
set Br[obl]=Br[obl]+cbl
endif
set mbl=ibl
set Qbl=$41305655
if GetUnitAbilityLevel(mbl,Qbl)>0 then
set Wbl=Sbl
set Ebl=UNIT_TYPE_HERO
set Syl=not IsUnitType(Wbl,Ebl)
else
set Syl=false
endif
if Syl then
set Zbl=Sbl
set cyl=not IsUnitIllusion(Zbl)
else
set cyl=false
endif
if cyl then
set oyl=GetRandomInt(1,100)
set Ubl=ibl
set Ibl=$41305655
if oyl<=35+5*GetUnitAbilityLevel(Ubl,Ibl) then
set Abl=ibl
set Dbl="UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
set Hbl="overhead"
set Pbl=AddSpecialEffectTarget(Dbl,Abl,Hbl)
call DestroyEffect(Pbl)
set Jbl=ibl
set Kbl=$41305655
set Obl=1+2*GetUnitAbilityLevel(Jbl,Kbl)
call UuS(ibl,Obl)
set Xbl=ibl
set Lbl=GetOwningPlayer(Xbl)
set lbl=GetPlayerId(Lbl)-4
set Cbl=Player(lbl)
set Vbl=Obl
set Bbl=Cbl
set Nbl=PLAYER_STATE_RESOURCE_GOLD
set Mbl=Vbl
set Oyl=Bbl
set lyl=Nbl
set wyl=Bbl
set uyl=Nbl
call SetPlayerState(Oyl,lyl,GetPlayerState(wyl,uyl)+Mbl)
set hr[lbl]=hr[lbl]+Obl
set Fr[lbl]=Fr[lbl]+Obl
set Cr[lbl]=Cr[lbl]+Obl
endif
endif
set ibl=null
set Sbl=null
set bbl=null
set pbl=null
set ebl=null
set qbl=null
set abl=null
set nbl=null
set Rbl=null
set Ybl=null
set Gbl=null
set gbl=null
set Fbl=null
set kbl=null
set xbl=null
set vbl=null
set mbl=null
set Wbl=null
set Ebl=null
set Zbl=null
set Ubl=null
set Pbl=null
set Abl=null
set Jbl=null
set Lbl=null
set Xbl=null
set Cbl=null
set Bbl=null
set Nbl=null
set wyl=null
set uyl=null
set tyl=null
set iyl=null
set Oyl=null
set lyl=null
endfunction
function c1b takes nothing returns nothing
local unit K3b=GetTriggerUnit()
local unit X3b=K3b
local integer L3b
local unit C3b
local integer V3b
local trigger B3b
local unit N3b
local unit M3b
local unit w1b
local unit u1b
local unit r1b
local unit s1b
local real t1b
local real i1b
local real S1b
if GetUnitTypeId(X3b)==$6F747262 then
set Rh=K3b
set Jw[2]=$53303033
set Jw[3]=$53303032
set Jw[4]=$41305254
set Jw[5]=$41305253
set Jw[6]=$41305259
set Jw[7]=$41305256
set Jw[8]=$41305255
set Jw[9]=$41305257
set Jw[10]=$53303036
set Jw[11]=$41305258
set Jw[12]=$4130525A
set Jw[13]=$53303038
set Jw[14]=$53303037
set Jw[15]=$41305433
set Jw[16]=$41305434
set Hw[2]="Next: |cff00ff00Increase|r |cffeeff00Attack Speed|r for |cff5900ffunits|r"
set Hw[3]="Next: |cffff0000Reduce|r |cffeeff00Attack Speed|r for |cff5900ffunits|r"
set Hw[4]="Next: |cff00ff00Increase|r |cffeeff00Damage|r for |cff5900ffunits|r"
set Hw[5]="Next: |cffff0000Reduce|r |cffeeff00Damage|r for |cff5900ffunits|r"
set Hw[6]="Next: |cffffbb00BUUUUUURN!!!|r"
set Hw[7]="Next: |cff00ff00Increase|r |cffeeff00Armour|r for |cff5900ffall|r"
set Hw[8]="Next: |cffff0000Reduce|r |cffeeff00Armour|r for |cff5900ffall|r"
set Hw[9]="Next: |cff00ff00Increase|r |cffeeff00Regeneration|r for |cff5900ffall|r"
set Hw[10]="Next: |cffff0000Reduce|r |cffeeff00Movement Speed|r for |cff5900ffunits|r"
set Hw[11]="Next: |cffff0000Burn mana|r for |cff5900ffbuildings|r"
set Hw[12]="Next: |cffff0000Burn mana|r for |cff5900ffunits|r"
set Hw[13]="Next: |cff00ff00Increase|r |cffeeff00Attack Speed|r for |cff5900ffbuildings|r"
set Hw[14]="Next: |cffff0000Reduce|r |cffeeff00Attack Speed|r for |cff5900ffbuildings|r"
set Hw[15]="Next: |cff00ff00Increase|r |cffeeff00Damage|r for |cff5900ffbuildings|r"
set Hw[16]="Next: |cffff0000Reduce|r |cffeeff00Damage|r for |cff5900ffbuildings|r"
set Th=Jw[GetRandomInt(2,16)]
set C3b=K3b
set V3b=Th
call UnitAddAbility(C3b,V3b)
set L3b=GetRandomInt(2,16)
set Jw[1]=Jw[L3b]
set Hw[1]=Hw[L3b]
set B3b=gh
call EnableTrigger(B3b)
set Fh=60
set N3b=Rh
set t1b=GetUnitX(N3b)
set M3b=Rh
set hh=jVl(t1b,GetUnitY(M3b),0.,I2S(Fh),13.,255,230,0,255)
set w1b=K3b
set i1b=GetUnitX(w1b)-512.
set u1b=K3b
set Gh=jVl(i1b,GetUnitY(u1b)+128.,0.,Hw[1],8.,100,0,100,255)
call TimerStart(Yh,60.,false,Rsw)
set r1b=K3b
set S1b=GetUnitX(r1b)
set s1b=K3b
call PingMinimapEx(S1b,GetUnitY(s1b),10.,100,0,0,false)
endif
set K3b=null
set X3b=null
set C3b=null
set B3b=null
set N3b=null
set M3b=null
set w1b=null
set u1b=null
set r1b=null
set s1b=null
endfunction
function c2t takes nothing returns boolean
local unit u2t=GetAttacker()
local unit r2t=GetTriggerUnit()
local unit s2t
local unit t2t
local boolean i2t
local boolean S2t
if IsUnitType(u2t,UNIT_TYPE_STRUCTURE)==false and IsUnitType(r2t,UNIT_TYPE_STRUCTURE)==false and GetUnitAbilityLevel(u2t,$416C6F63)==0 and GetUnitAbilityLevel(r2t,$416C6F63)==0 then
set s2t=u2t
set i2t=UnitAlive(s2t)
else
set i2t=false
endif
if i2t then
set t2t=r2t
set S2t=UnitAlive(t2t)
else
set S2t=false
endif
set u2t=null
set r2t=null
set s2t=null
set t2t=null
return S2t
endfunction
function T1o takes integer q1o,string a1o returns nothing
local integer n1o
local string d1o
local integer f1o
local string R1o
set aW[qW]=a1o
set qW=qW+1
set n1o=q1o
set d1o="when calling CallbackSingle_onDestroy in ClosureTimers, line 123"
set aW[qW]=d1o
set qW=qW+1
call gWb(nj[n1o],"when calling release in ClosureTimers, line 124")
set qW=qW-1
set f1o=q1o
set R1o="when calling dealloc_CallbackSingle in ClosureTimers, line 123"
set aW[qW]=R1o
set qW=qW+1
if RF[f1o]==0 then
call L8c("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 107")
else
set nF[dF]=f1o
set dF=dF+1
set RF[f1o]=0
endif
set qW=qW-1
set qW=qW-1
endfunction
function B7S takes integer L7S returns nothing
local unit X7S=wl
local integer C7S=$41323935
local unit V7S
call UnitAddAbility(X7S,C7S)
set V7S=wl
call DisplayTextToPlayer(GetOwningPlayer(V7S),0.,0.,"You can summon Bonelord again")
set X7S=null
set V7S=null
endfunction
function BGu takes integer AGu returns nothing
local unit DGu
local group HGu
local group JGu
local group KGu
local unit LGu
local unit XGu
local group CGu
local boolexpr VGu
call GroupEnumUnitsInRect(wm[AGu],bj_mapInitialPlayableArea,um[AGu])
set HGu=wm[AGu]
loop
set JGu=HGu
exitwhen not (FirstOfGroup(JGu)!=null)
set KGu=HGu
set LGu=FirstOfGroup(KGu)
call GroupRemoveUnit(KGu,LGu)
set DGu=LGu
set XGu=DGu
call KillUnit(XGu)
endloop
set CGu=wm[AGu]
call GroupClear(CGu)
set VGu=um[AGu]
call DestroyBoolExpr(VGu)
set Zw[rm[AGu]]=false
set DGu=null
set HGu=null
set JGu=null
set KGu=null
set LGu=null
set XGu=null
set CGu=null
set VGu=null
endfunction
function BKu takes integer hKu,string FKu returns nothing
local unit kKu
local integer jKu
local unit xKu
local integer vKu
local unit mKu
local unit QKu
local unit WKu
local unit EKu
local real ZKu
local unit UKu
local integer IKu
local unit PKu
local string AKu
local widget DKu
local string HKu
local integer JKu
local real KKu
local integer LKu
local string XKu
local player CKu
local real VKu
set aW[qW]=FKu
set qW=qW+1
set xKu=kj[hKu]
set vKu=$41305A35
call UnitRemoveAbility(xKu,vKu)
set mKu=kj[hKu]
set CKu=GetOwningPlayer(mKu)
set QKu=kj[hKu]
set VKu=GetUnitX(QKu)
set WKu=kj[hKu]
set kKu=CreateUnit(CKu,$75303030,VKu,GetUnitY(WKu),0.)
set EKu=kKu
set ZKu=5.
call UnitApplyTimedLife(EKu,$42544C46,ZKu)
set UKu=kKu
set IKu=$41313333
call UnitAddAbility(UKu,IKu)
set PKu=kKu
set AKu="creepthunderbolt"
set DKu=kj[hKu]
call IssueTargetOrder(PKu,AKu,DKu)
set HKu="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_DraconidRangeBonus in DraconidRangeBonus, line 129"
set aW[qW]=HKu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set JKu=fF
set RF[JKu]=783
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_DraconidRangeBonus.","when calling error in DraconidRangeBonus, line 129")
set JKu=0
endif
else
set dF=dF-1
set JKu=nF[dF]
set RF[JKu]=783
endif
set qW=qW-1
set jKu=JKu
set jj[jKu]=kj[hKu]
set KKu=25.
set LKu=jKu
set XKu="when calling doAfter in DraconidRangeBonus, line 129"
set aW[qW]=XKu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),KKu,LKu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set kKu=null
set xKu=null
set mKu=null
set QKu=null
set WKu=null
set EKu=null
set UKu=null
set PKu=null
set DKu=null
set CKu=null
endfunction
function BQi takes integer mQi returns nothing
local unit QQi=YQ[mQi]
local unit WQi
local integer EQi
local unit ZQi
local widget UQi
local real IQi
local boolean PQi
local boolean AQi
local attacktype DQi
local damagetype HQi
local weapontype JQi
local effect KQi
local widget LQi
local string XQi
local string CQi
local boolean VQi
if UnitAlive(QQi) then
set WQi=YQ[mQi]
set EQi=$42303831
set VQi=GetUnitAbilityLevel(WQi,EQi)>0
else
set VQi=false
endif
if VQi then
set ZQi=GQ[mQi]
set UQi=YQ[mQi]
set IQi=125.+25.*gQ[mQi]
set PQi=true
set AQi=false
set DQi=ATTACK_TYPE_NORMAL
set HQi=DAMAGE_TYPE_MAGIC
set JQi=WEAPON_TYPE_WHOKNOWS
call UnitDamageTarget(ZQi,UQi,IQi,PQi,AQi,DQi,HQi,JQi)
set LQi=YQ[mQi]
set XQi="Pillar of Flame Blue.mdl"
set CQi="origin"
set KQi=AddSpecialEffectTarget(XQi,LQi,CQi)
call DestroyEffect(KQi)
endif
set QQi=null
set WQi=null
set ZQi=null
set UQi=null
set DQi=null
set HQi=null
set JQi=null
set KQi=null
set LQi=null
endfunction
function WWb takes integer kWb,string jWb returns nothing
local integer xWb
local string vWb
local integer mWb
local string QWb
set aW[qW]=jWb
set qW=qW+1
if jF[kWb]==0 then
if kWb==0 then
call L8c("Nullpointer exception when calling DummyCaster.DummyCaster","when calling error in DummyCaster, line 28")
else
call L8c("Called DummyCaster.DummyCaster on invalid object.","when calling error in DummyCaster, line 28")
endif
endif
set xWb=kWb
set vWb="when calling destroyDummyCaster in DummyCaster, line 28"
set aW[qW]=vWb
set qW=qW+1
set mWb=xWb
set QWb="when calling dealloc_DummyCaster in DummyCaster, line 27"
set aW[qW]=QWb
set qW=qW+1
if jF[mWb]==0 then
call L8c("Double free: object of type DummyCaster","when calling error in DummyCaster, line 28")
else
set hF[FF]=mWb
set FF=FF+1
set jF[mWb]=0
endif
set qW=qW-1
set qW=qW-1
set qW=qW-1
endfunction
function jvu takes unit vxu,string mxu returns nothing
local integer Qxu
local integer Wxu
local integer Exu
local unit Zxu
local unit Uxu
local unit Ixu
local unit Pxu
local unit Axu
local unit Dxu
local unit Hxu
local real Jxu
local real Kxu
local unit Lxu
local unit Xxu
local unit Cxu
local real Vxu
local unit Bxu
local real Nxu
local real Mxu
local real wvu
local real uvu
local real rvu
local unit svu
local unit tvu
local real ivu
local real Svu
local real cvu
local unit ovu
local real Ovu
local unit lvu
local integer bvu
local integer yvu
local integer pvu
local integer evu
local unit qvu
local real avu
local real nvu
local real dvu
local real fvu
local real Rvu
local real Tvu
local real Yvu
local real Gvu
local integer gvu
local integer hvu
local integer Fvu
local integer kvu
set aW[qW]=mxu
set qW=qW+1
set Qxu=0
set Wxu=1
set Exu=8-1
loop
exitwhen Wxu>Exu
if Kj[qp[Qxu]]>Kj[qp[Wxu]] then
set Qxu=Wxu
endif
set Wxu=Wxu+1
endloop
if Kj[qp[Qxu]]>=6 then
set Dxu=vxu
call RemoveUnit(Dxu)
else
call X2l(qp[Qxu],vxu,"when calling enqueue in DummyRecycler, line 51")
set Zxu=vxu
set Hxu=Zxu
set avu=Vd
set nvu=Bd
set Mxu=avu
set wvu=nvu
set dvu=16.
set fvu=16.
set uvu=dvu
set rvu=fvu
set Rvu=Mxu-uvu
set Tvu=wvu-rvu
set Jxu=Rvu
set Kxu=Tvu
set Lxu=Hxu
set Cxu=Lxu
set Vxu=Jxu
call SetUnitX(Cxu,Vxu)
set Xxu=Lxu
set Bxu=Xxu
set Nxu=Kxu
call SetUnitY(Bxu,Nxu)
set Uxu=Zxu
set svu=Uxu
call PauseUnit(svu,true)
set Ixu=Uxu
set tvu=Ixu
set cvu=Qxu*ep
set Yvu=cvu*.017453293
set ivu=Yvu
set qvu=tvu
set Gvu=ivu
set Svu=Gvu
call SetUnitFacing(qvu,Svu*57.295779513)
set Pxu=Ixu
set ovu=Pxu
set Ovu=1.
call SetUnitScale(ovu,Ovu,Ovu,Ovu)
set Axu=Pxu
set lvu=Axu
set gvu=Wb
set hvu=Eb
set Fvu=Zb
set kvu=Ub
set bvu=gvu
set yvu=hvu
set pvu=Fvu
set evu=kvu
call SetUnitVertexColor(lvu,bvu,yvu,pvu,evu)
endif
set qW=qW-1
set Zxu=null
set Uxu=null
set Ixu=null
set Pxu=null
set Axu=null
set Dxu=null
set Hxu=null
set Lxu=null
set Xxu=null
set Cxu=null
set Bxu=null
set svu=null
set tvu=null
set ovu=null
set lvu=null
set qvu=null
endfunction
function CRt takes integer HRt,string JRt returns nothing
local unit KRt
local unit LRt
local integer XRt
set aW[qW]=JRt
set qW=qW+1
set KRt=Pj[HRt]
set LRt=KRt
set XRt=Aj[HRt]
call UnitRemoveAbility(LRt,XRt)
call jvu(Pj[HRt],"when calling recycle in DummyCaster, line 91")
set Ej[Dj[HRt]]=Ej[Dj[HRt]]-1
if Ej[Dj[HRt]]==0 then
call WWb(Dj[HRt],"when calling dispatch_DummyCaster_destroyDummyCaster in DummyCaster, line 94")
endif
set qW=qW-1
set KRt=null
set LRt=null
endfunction
function DMw takes integer OVw returns nothing
local unit lVw=rF
local integer bVw=$41303945
local unit yVw
local integer pVw
local unit eVw
local integer qVw
local unit aVw
local integer nVw
local unit dVw
local integer fVw
local unit RVw
local integer TVw
local unit YVw
local integer GVw
local integer gVw
local unit hVw
local integer FVw
local integer kVw
local unit jVw
local integer xVw
local integer vVw
local unit mVw
local integer QVw
local integer WVw
local unit EVw
local integer ZVw
local integer UVw
local unit IVw
local integer PVw
local integer AVw
local unit DVw
local integer HVw
local integer JVw
local unit KVw
local integer LVw
local integer XVw
local unit CVw
local integer VVw
local integer BVw
local unit NVw
local integer MVw
local integer wBw
local unit uBw
local integer rBw
local integer sBw
local unit tBw
local integer iBw
local integer SBw
local unit cBw
local integer oBw
local integer OBw
local unit lBw
local integer bBw
local integer yBw
local unit pBw
local integer eBw
local integer qBw
local unit aBw
local integer nBw
local integer dBw
local unit fBw
local integer RBw
local integer TBw
local unit YBw
local integer GBw
local integer gBw
local unit hBw
local integer FBw
local integer kBw
local unit jBw
local integer xBw
local integer vBw
local unit mBw
local integer QBw
local integer WBw
local unit EBw
local integer ZBw
local integer UBw
local unit IBw
local integer PBw
local integer ABw
local unit DBw
local integer HBw
local integer JBw
local unit KBw
local integer LBw
local integer XBw
local unit CBw
local integer VBw
local integer BBw
local unit NBw
local integer MBw
local integer wNw
local unit uNw
local integer rNw
local integer sNw
local unit tNw
local integer iNw
local integer SNw
local unit cNw
local integer oNw
local integer ONw
local unit lNw
local integer bNw
local integer yNw
local unit pNw
local integer eNw
local integer qNw
local unit aNw
local integer nNw
local integer dNw
local unit fNw
local integer RNw
local integer TNw
local unit YNw
local integer GNw
local integer gNw
local unit hNw
local integer FNw
local integer kNw
local unit jNw
local integer xNw
local integer vNw
local unit mNw
local integer QNw
local integer WNw
local unit ENw
local integer ZNw
local integer UNw
local unit INw
local integer PNw
local integer ANw
local unit DNw
local integer HNw
local integer JNw
local unit KNw
local integer LNw
local integer XNw
local unit CNw
local integer VNw
local integer BNw
local unit NNw
local integer MNw
local integer wMw
local unit uMw
local integer rMw
local integer sMw
local unit tMw
local integer iMw
local integer SMw
local unit cMw
local integer oMw
local integer OMw
local unit lMw
local integer bMw
local integer yMw
local unit pMw
local integer eMw
local integer qMw
local unit aMw
local integer nMw
local integer dMw
local unit fMw
local integer RMw
local integer TMw
local unit YMw
local integer GMw
local integer gMw
local unit hMw
local integer FMw
local integer kMw
local unit jMw
local integer xMw
local integer vMw
local unit mMw
local integer QMw
local integer WMw
local unit EMw
local integer ZMw
local integer UMw
local unit IMw
local integer PMw
local integer AMw
call UnitRemoveAbility(lVw,bVw)
set yVw=rF
set pVw=$41304D39
call UnitRemoveAbility(yVw,pVw)
set eVw=rF
set qVw=$41456576
call UnitRemoveAbility(eVw,qVw)
set aVw=rF
set nVw=$41305949
call UnitAddAbility(aVw,nVw)
set dVw=rF
set fVw=$41304D32
call UnitAddAbility(dVw,fVw)
set RVw=rF
set TVw=$414D3261
call UnitAddAbility(RVw,TVw)
if uF==4 then
set YVw=rF
set GVw=$41305949
set gVw=1
call SetUnitAbilityLevel(YVw,GVw,gVw)
set hVw=rF
set FVw=$41304D32
set kVw=1
call SetUnitAbilityLevel(hVw,FVw,kVw)
set jVw=rF
set xVw=$414D3261
set vVw=1
call SetUnitAbilityLevel(jVw,xVw,vVw)
endif
if uF==5 then
set mVw=rF
set QVw=$41305949
set WVw=2
call SetUnitAbilityLevel(mVw,QVw,WVw)
set EVw=rF
set ZVw=$41304D32
set UVw=1
call SetUnitAbilityLevel(EVw,ZVw,UVw)
set IVw=rF
set PVw=$414D3261
set AVw=1
call SetUnitAbilityLevel(IVw,PVw,AVw)
endif
if uF==6 then
set DVw=rF
set HVw=$41305949
set JVw=2
call SetUnitAbilityLevel(DVw,HVw,JVw)
set KVw=rF
set LVw=$41304D32
set XVw=2
call SetUnitAbilityLevel(KVw,LVw,XVw)
set CVw=rF
set VVw=$414D3261
set BVw=1
call SetUnitAbilityLevel(CVw,VVw,BVw)
endif
if uF>=7 and uF<9 then
set NVw=rF
set MVw=$41305949
set wBw=2
call SetUnitAbilityLevel(NVw,MVw,wBw)
set uBw=rF
set rBw=$41304D32
set sBw=2
call SetUnitAbilityLevel(uBw,rBw,sBw)
set tBw=rF
set iBw=$414D3261
set SBw=2
call SetUnitAbilityLevel(tBw,iBw,SBw)
endif
if uF==9 then
set cBw=rF
set oBw=$41305949
set OBw=3
call SetUnitAbilityLevel(cBw,oBw,OBw)
set lBw=rF
set bBw=$41304D32
set yBw=2
call SetUnitAbilityLevel(lBw,bBw,yBw)
set pBw=rF
set eBw=$414D3261
set qBw=2
call SetUnitAbilityLevel(pBw,eBw,qBw)
endif
if uF==10 then
set aBw=rF
set nBw=$41305949
set dBw=3
call SetUnitAbilityLevel(aBw,nBw,dBw)
set fBw=rF
set RBw=$41304D32
set TBw=3
call SetUnitAbilityLevel(fBw,RBw,TBw)
set YBw=rF
set GBw=$414D3261
set gBw=2
call SetUnitAbilityLevel(YBw,GBw,gBw)
endif
if uF>=11 and uF<13 then
set hBw=rF
set FBw=$41305949
set kBw=3
call SetUnitAbilityLevel(hBw,FBw,kBw)
set jBw=rF
set xBw=$41304D32
set vBw=3
call SetUnitAbilityLevel(jBw,xBw,vBw)
set mBw=rF
set QBw=$414D3261
set WBw=3
call SetUnitAbilityLevel(mBw,QBw,WBw)
endif
if uF==13 then
set EBw=rF
set ZBw=$41305949
set UBw=4
call SetUnitAbilityLevel(EBw,ZBw,UBw)
set IBw=rF
set PBw=$41304D32
set ABw=3
call SetUnitAbilityLevel(IBw,PBw,ABw)
set DBw=rF
set HBw=$414D3261
set JBw=3
call SetUnitAbilityLevel(DBw,HBw,JBw)
endif
if uF==14 then
set KBw=rF
set LBw=$41305949
set XBw=4
call SetUnitAbilityLevel(KBw,LBw,XBw)
set CBw=rF
set VBw=$41304D32
set BBw=4
call SetUnitAbilityLevel(CBw,VBw,BBw)
set NBw=rF
set MBw=$414D3261
set wNw=3
call SetUnitAbilityLevel(NBw,MBw,wNw)
endif
if uF>=15 and uF<17 then
set uNw=rF
set rNw=$41305949
set sNw=4
call SetUnitAbilityLevel(uNw,rNw,sNw)
set tNw=rF
set iNw=$41304D32
set SNw=4
call SetUnitAbilityLevel(tNw,iNw,SNw)
set cNw=rF
set oNw=$414D3261
set ONw=4
call SetUnitAbilityLevel(cNw,oNw,ONw)
endif
if uF==17 then
set lNw=rF
set bNw=$41305949
set yNw=5
call SetUnitAbilityLevel(lNw,bNw,yNw)
set pNw=rF
set eNw=$41304D32
set qNw=4
call SetUnitAbilityLevel(pNw,eNw,qNw)
set aNw=rF
set nNw=$414D3261
set dNw=4
call SetUnitAbilityLevel(aNw,nNw,dNw)
endif
if uF==18 then
set fNw=rF
set RNw=$41305949
set TNw=5
call SetUnitAbilityLevel(fNw,RNw,TNw)
set YNw=rF
set GNw=$41304D32
set gNw=5
call SetUnitAbilityLevel(YNw,GNw,gNw)
set hNw=rF
set FNw=$414D3261
set kNw=4
call SetUnitAbilityLevel(hNw,FNw,kNw)
endif
if uF>=19 and uF<21 then
set jNw=rF
set xNw=$41305949
set vNw=5
call SetUnitAbilityLevel(jNw,xNw,vNw)
set mNw=rF
set QNw=$41304D32
set WNw=5
call SetUnitAbilityLevel(mNw,QNw,WNw)
set ENw=rF
set ZNw=$414D3261
set UNw=5
call SetUnitAbilityLevel(ENw,ZNw,UNw)
endif
if uF==21 then
set INw=rF
set PNw=$41305949
set ANw=6
call SetUnitAbilityLevel(INw,PNw,ANw)
set DNw=rF
set HNw=$41304D32
set JNw=5
call SetUnitAbilityLevel(DNw,HNw,JNw)
set KNw=rF
set LNw=$414D3261
set XNw=5
call SetUnitAbilityLevel(KNw,LNw,XNw)
endif
if uF==22 then
set CNw=rF
set VNw=$41305949
set BNw=6
call SetUnitAbilityLevel(CNw,VNw,BNw)
set NNw=rF
set MNw=$41304D32
set wMw=6
call SetUnitAbilityLevel(NNw,MNw,wMw)
set uMw=rF
set rMw=$414D3261
set sMw=5
call SetUnitAbilityLevel(uMw,rMw,sMw)
endif
if uF>=23 and uF<26 then
set tMw=rF
set iMw=$41305949
set SMw=6
call SetUnitAbilityLevel(tMw,iMw,SMw)
set cMw=rF
set oMw=$41304D32
set OMw=6
call SetUnitAbilityLevel(cMw,oMw,OMw)
set lMw=rF
set bMw=$414D3261
set yMw=6
call SetUnitAbilityLevel(lMw,bMw,yMw)
endif
if uF==25 then
set pMw=rF
set eMw=$41305949
set qMw=7
call SetUnitAbilityLevel(pMw,eMw,qMw)
set aMw=rF
set nMw=$41304D32
set dMw=6
call SetUnitAbilityLevel(aMw,nMw,dMw)
set fMw=rF
set RMw=$414D3261
set TMw=6
call SetUnitAbilityLevel(fMw,RMw,TMw)
endif
if uF==26 then
set YMw=rF
set GMw=$41305949
set gMw=7
call SetUnitAbilityLevel(YMw,GMw,gMw)
set hMw=rF
set FMw=$41304D32
set kMw=7
call SetUnitAbilityLevel(hMw,FMw,kMw)
set jMw=rF
set xMw=$414D3261
set vMw=6
call SetUnitAbilityLevel(jMw,xMw,vMw)
endif
if uF>=27 then
set mMw=rF
set QMw=$41305949
set WMw=7
call SetUnitAbilityLevel(mMw,QMw,WMw)
set EMw=rF
set ZMw=$41304D32
set UMw=7
call SetUnitAbilityLevel(EMw,ZMw,UMw)
set IMw=rF
set PMw=$414D3261
set AMw=7
call SetUnitAbilityLevel(IMw,PMw,AMw)
endif
set lVw=null
set yVw=null
set eVw=null
set aVw=null
set dVw=null
set RVw=null
set YVw=null
set hVw=null
set jVw=null
set mVw=null
set EVw=null
set IVw=null
set DVw=null
set KVw=null
set CVw=null
set NVw=null
set uBw=null
set tBw=null
set cBw=null
set lBw=null
set pBw=null
set aBw=null
set fBw=null
set YBw=null
set hBw=null
set jBw=null
set mBw=null
set EBw=null
set IBw=null
set DBw=null
set KBw=null
set CBw=null
set NBw=null
set uNw=null
set tNw=null
set cNw=null
set lNw=null
set pNw=null
set aNw=null
set fNw=null
set YNw=null
set hNw=null
set jNw=null
set mNw=null
set ENw=null
set INw=null
set DNw=null
set KNw=null
set CNw=null
set NNw=null
set uMw=null
set tMw=null
set cMw=null
set lMw=null
set pMw=null
set aMw=null
set fMw=null
set YMw=null
set hMw=null
set jMw=null
set mMw=null
set EMw=null
set IMw=null
endfunction
function JUl takes integer vUl,string mUl returns nothing
local integer QUl
local integer WUl
local unit EUl
local integer ZUl
local unit UUl
local string IUl
local integer PUl
local real AUl
local integer DUl
local string HUl
set aW[qW]=mUl
set qW=qW+1
set EUl=Yv[vUl]
set ZUl=$41305958
call UnitRemoveAbility(EUl,ZUl)
set UUl=Yv[vUl]
set QUl=GetPlayerTechCount(GetOwningPlayer(UUl),$52303331,true)
set IUl="when calling alloc_CallbackSingle_doAfter_doAfter_Jinto in Jinto, line 109"
set aW[qW]=IUl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set PUl=fF
set RF[PUl]=770
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Jinto.","when calling error in Jinto, line 109")
set PUl=0
endif
else
set dF=dF-1
set PUl=nF[dF]
set RF[PUl]=770
endif
set qW=qW-1
set WUl=PUl
set Gv[WUl]=Yv[vUl]
set gv[WUl]=QUl
set AUl=20.
set DUl=WUl
set HUl="when calling doAfter in Jinto, line 109"
set aW[qW]=HUl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),AUl,DUl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set EUl=null
set UUl=null
endfunction
function K7s takes integer A7s returns nothing
local unit D7s=yO
local integer H7s=$41313346
local unit J7s
call UnitAddAbility(D7s,H7s)
set J7s=yO
call DisplayTextToPlayer(GetOwningPlayer(J7s),0.,0.,"You can summon Golem Gargantuan again")
set D7s=null
set J7s=null
endfunction
function KXl takes integer pXl returns nothing
local group eXl=CreateGroup()
local unit fXl=UQ[pXl]
local player RXl=IQ[pXl]
local player YXl=RXl
local integer TXl=GetPlayerId(YXl)
local rect qXl
local filterfunc aXl
local unit nXl
local group dXl
local group GXl
local group gXl
local unit hXl
local unit FXl
local integer kXl
local integer jXl
local unit xXl
local integer vXl
local unit mXl
local string QXl
local real WXl
local real EXl
local unit ZXl
local player UXl
local integer IXl
local player PXl
local group AXl
local boolexpr DXl
local real HXl
local real JXl
if RXl==Tu then
if b[TXl]==fXl then
set Pg[TXl]=To
endif
if l[TXl]==fXl then
set Pg[TXl]=Ro
endif
if O[TXl]==fXl then
set Pg[TXl]=Yo
endif
endif
if RXl==Yu then
if b[TXl]==fXl then
set Pg[TXl]=yo
endif
if l[TXl]==fXl then
set Pg[TXl]=po
endif
if O[TXl]==fXl then
set Pg[TXl]=bo
endif
endif
if RXl==Gu then
if b[TXl]==fXl then
set Pg[TXl]=qo
endif
if l[TXl]==fXl then
set Pg[TXl]=eo
endif
if O[TXl]==fXl then
set Pg[TXl]=ao
endif
endif
if RXl==gu then
if b[TXl]==fXl then
set Pg[TXl]=do
endif
if l[TXl]==fXl then
set Pg[TXl]=fo
endif
if O[TXl]==fXl then
set Pg[TXl]=no
endif
endif
set qXl=Pg[TXl]
set Hg[PQ[pXl]]=Player(PQ[pXl])
set aXl=Filter(dtw)
call GroupEnumUnitsInRect(eXl,qXl,aXl)
set dXl=eXl
loop
set GXl=dXl
exitwhen not (FirstOfGroup(GXl)!=null)
set gXl=dXl
set hXl=FirstOfGroup(gXl)
call GroupRemoveUnit(gXl,hXl)
set nXl=hXl
set FXl=nXl
set kXl=PQ[pXl]
set ZXl=UQ[pXl]
set UXl=IQ[pXl]
set PXl=UXl
set IXl=GetPlayerId(PXl)
if UXl==Tu then
if b[IXl]==ZXl then
set Dg[IXl]=17
set Ag[IXl]=5
endif
if l[IXl]==ZXl then
set Dg[IXl]=16
set Ag[IXl]=1
endif
if O[IXl]==ZXl then
set Dg[IXl]=18
set Ag[IXl]=3
endif
endif
if UXl==Yu then
if b[IXl]==ZXl then
set Dg[IXl]=14
set Ag[IXl]=5
endif
if l[IXl]==ZXl then
set Dg[IXl]=15
set Ag[IXl]=3
endif
if O[IXl]==ZXl then
set Dg[IXl]=13
set Ag[IXl]=4
endif
endif
if UXl==Gu then
if b[IXl]==ZXl then
set Dg[IXl]=20
set Ag[IXl]=5
endif
if l[IXl]==ZXl then
set Dg[IXl]=21
set Ag[IXl]=4
endif
if O[IXl]==ZXl then
set Dg[IXl]=19
set Ag[IXl]=1
endif
endif
if UXl==gu then
if b[IXl]==ZXl then
set Dg[IXl]=23
set Ag[IXl]=5
endif
if l[IXl]==ZXl then
set Dg[IXl]=24
set Ag[IXl]=2
endif
if O[IXl]==ZXl then
set Dg[IXl]=22
set Ag[IXl]=6
endif
endif
set jXl=Dg[IXl]
set xXl=FXl
set vXl=Ag[kXl]
call SetUnitUserData(xXl,vXl)
set mXl=FXl
set QXl="attack"
set HXl=Qw[jXl]
set JXl=Ww[jXl]
set WXl=HXl
set EXl=JXl
call IssuePointOrder(mXl,QXl,WXl,EXl)
endloop
set AXl=eXl
call DestroyGroup(AXl)
set DXl=aXl
call DestroyBoolExpr(DXl)
set Hg[PQ[pXl]]=null
set Pg[PQ[pXl]]=null
set Dg[PQ[pXl]]=0
set Ag[PQ[pXl]]=0
set eXl=null
set qXl=null
set aXl=null
set nXl=null
set dXl=null
set fXl=null
set RXl=null
set YXl=null
set GXl=null
set gXl=null
set hXl=null
set FXl=null
set xXl=null
set mXl=null
set ZXl=null
set UXl=null
set PXl=null
set AXl=null
set DXl=null
endfunction
function MgS takes integer ugS,string rgS returns nothing
local unit sgS
local integer tgS
local unit igS
local real SgS
local real cgS
local unit ogS
local unit OgS
local unit lgS
local string bgS
local real ygS
local real pgS
local unit egS
local unit qgS
local unit agS
local unit ngS
local string dgS
local widget fgS
local unit RgS
local unit TgS
local unit YgS
local unit GgS
local real ggS
local unit hgS
local integer FgS
local unit kgS
local integer jgS
local integer xgS
local unit vgS
local string mgS
local widget QgS
local string WgS
local integer EgS
local real ZgS
local integer UgS
local string IgS
local timer PgS
local real AgS
local integer DgS
local string HgS
local real JgS
local real KgS
local player LgS
local real XgS
local real CgS
local real VgS
local real BgS
local real NgS
set aW[qW]=rgS
set qW=qW+1
set igS=sW[ugS]
set ogS=tW[ugS]
set OgS=ogS
set JgS=GetUnitX(OgS)
set lgS=ogS
set CgS=JgS
set VgS=GetUnitY(lgS)
set SgS=CgS
set cgS=VgS
call SetUnitPosition(igS,SgS,cgS)
set bgS="Blink Gold Target.mdx"
set egS=tW[ugS]
set qgS=egS
set KgS=GetUnitX(qgS)
set agS=egS
set BgS=KgS
set NgS=GetUnitY(agS)
set ygS=BgS
set pgS=NgS
call AddSpecialEffect(bgS,ygS,pgS)
set ngS=sW[ugS]
set dgS="attack"
set fgS=tW[ugS]
call IssueTargetOrder(ngS,dgS,fgS)
set RgS=sW[ugS]
set LgS=GetOwningPlayer(RgS)
set TgS=tW[ugS]
set XgS=GetUnitX(TgS)
set YgS=tW[ugS]
set sgS=CreateUnit(LgS,$75303030,XgS,GetUnitY(YgS),0.)
set GgS=sgS
set ggS=3.
call UnitApplyTimedLife(GgS,$42544C46,ggS)
set hgS=sgS
set FgS=$41323546
call UnitAddAbility(hgS,FgS)
set kgS=sgS
set jgS=$41323546
set xgS=iW[ugS]
call SetUnitAbilityLevel(kgS,jgS,xgS)
set vgS=sgS
set mgS="faeriefire"
set QgS=tW[ugS]
call IssueTargetOrder(vgS,mgS,QgS)
set WgS="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_WarianWrynn in WarianWrynn, line 431"
set aW[qW]=WgS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EgS=fF
set RF[EgS]=787
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_WarianWrynn.","when calling error in WarianWrynn, line 431")
set EgS=0
endif
else
set dF=dF-1
set EgS=nF[dF]
set RF[EgS]=787
endif
set qW=qW-1
set tgS=EgS
set oW[tgS]=sW[ugS]
set OW[tgS]=iW[ugS]
set lW[tgS]=SW[ugS]
set bW[tgS]=cW[ugS]
set ZgS=1.5
set UgS=tgS
set IgS="when calling doAfter in WarianWrynn, line 431"
set aW[qW]=IgS
set qW=qW+1
set PgS=F6c("when calling getTimer in ClosureTimers, line 27")
set AgS=ZgS
set DgS=UgS
set HgS="when calling doAfter in ClosureTimers, line 27"
set aW[qW]=HgS
set qW=qW+1
call P2s(DgS,PgS,AgS,"when calling start in ClosureTimers, line 16")
set qW=qW-1
set qW=qW-1
set qW=qW-1
set sgS=null
set igS=null
set ogS=null
set OgS=null
set lgS=null
set egS=null
set qgS=null
set agS=null
set ngS=null
set fgS=null
set RgS=null
set TgS=null
set YgS=null
set GgS=null
set hgS=null
set kgS=null
set vgS=null
set QgS=null
set PgS=null
set LgS=null
endfunction
function NJS takes integer bAS,string yAS returns nothing
local integer pAS
local unit eAS
local integer qAS
local unit aAS
local integer nAS
local unit dAS
local integer fAS
local unit RAS
local integer TAS
local unit YAS
local integer GAS
local unit gAS
local integer hAS
local unit FAS
local integer kAS
local integer jAS
local unit xAS
local integer vAS
local integer mAS
local unit QAS
local integer WAS
local integer EAS
local unit ZAS
local integer UAS
local integer IAS
local unit PAS
local integer AAS
local integer DAS
local unit HAS
local integer JAS
local integer KAS
local unit LAS
local integer XAS
local integer CAS
local unit VAS
local integer BAS
local integer NAS
local unit MAS
local integer wDS
local integer uDS
local unit rDS
local integer sDS
local integer tDS
local unit iDS
local integer SDS
local integer cDS
local unit oDS
local integer ODS
local integer lDS
local unit bDS
local integer yDS
local integer pDS
local unit eDS
local integer qDS
local integer aDS
local unit nDS
local integer dDS
local integer fDS
local unit RDS
local integer TDS
local integer YDS
local unit GDS
local integer gDS
local integer hDS
local unit FDS
local integer kDS
local integer jDS
local unit xDS
local integer vDS
local integer mDS
local unit QDS
local integer WDS
local integer EDS
local unit ZDS
local integer UDS
local integer IDS
local unit PDS
local integer ADS
local integer DDS
local unit HDS
local integer JDS
local integer KDS
local unit LDS
local integer XDS
local integer CDS
local unit VDS
local integer BDS
local integer NDS
local unit MDS
local integer wHS
local integer uHS
local unit rHS
local integer sHS
local integer tHS
local unit iHS
local integer SHS
local integer cHS
local unit oHS
local integer OHS
local integer lHS
local unit bHS
local integer yHS
local integer pHS
local unit eHS
local integer qHS
local integer aHS
local unit nHS
local integer dHS
local integer fHS
local unit RHS
local integer THS
local integer YHS
local unit GHS
local integer gHS
local integer hHS
local unit FHS
local integer kHS
local integer jHS
local unit xHS
local integer vHS
local integer mHS
local unit QHS
local integer WHS
local integer EHS
local unit ZHS
local integer UHS
local integer IHS
local unit PHS
local integer AHS
local integer DHS
local unit HHS
local integer JHS
local integer KHS
local unit LHS
local integer XHS
local integer CHS
local unit VHS
local integer BHS
local integer NHS
local unit MHS
local integer wJS
local integer uJS
local unit rJS
local integer sJS
local integer tJS
local unit iJS
local integer SJS
local integer cJS
local unit oJS
local integer OJS
local integer lJS
local unit bJS
local integer yJS
local integer pJS
local unit eJS
local integer qJS
local integer aJS
local unit nJS
local integer dJS
local integer fJS
local unit RJS
local integer TJS
local integer YJS
local unit GJS
local integer gJS
local integer hJS
local unit FJS
local integer kJS
local integer jJS
local unit xJS
local integer vJS
local integer mJS
local unit QJS
local integer WJS
local integer EJS
local unit ZJS
local integer UJS
local integer IJS
local unit PJS
local integer AJS
local integer DJS
local unit HJS
local integer JJS
local integer KJS
local string LJS
local integer XJS
local real CJS
local integer VJS
local string BJS
set aW[qW]=yAS
set qW=qW+1
set eAS=pW[bAS]
set qAS=$41305949
call UnitRemoveAbility(eAS,qAS)
set aAS=pW[bAS]
set nAS=$41304D32
call UnitRemoveAbility(aAS,nAS)
set dAS=pW[bAS]
set fAS=$414D3261
call UnitRemoveAbility(dAS,fAS)
set RAS=pW[bAS]
set TAS=$41303945
call UnitAddAbility(RAS,TAS)
set YAS=pW[bAS]
set GAS=$41304D39
call UnitAddAbility(YAS,GAS)
set gAS=pW[bAS]
set hAS=$41456576
call UnitAddAbility(gAS,hAS)
if uF==4 then
set FAS=pW[bAS]
set kAS=$41303945
set jAS=1
call SetUnitAbilityLevel(FAS,kAS,jAS)
set xAS=pW[bAS]
set vAS=$41304D39
set mAS=1
call SetUnitAbilityLevel(xAS,vAS,mAS)
set QAS=pW[bAS]
set WAS=$41456576
set EAS=1
call SetUnitAbilityLevel(QAS,WAS,EAS)
endif
if uF==5 then
set ZAS=pW[bAS]
set UAS=$41303945
set IAS=2
call SetUnitAbilityLevel(ZAS,UAS,IAS)
set PAS=pW[bAS]
set AAS=$41304D39
set DAS=1
call SetUnitAbilityLevel(PAS,AAS,DAS)
set HAS=pW[bAS]
set JAS=$41456576
set KAS=1
call SetUnitAbilityLevel(HAS,JAS,KAS)
endif
if uF==6 then
set LAS=pW[bAS]
set XAS=$41303945
set CAS=2
call SetUnitAbilityLevel(LAS,XAS,CAS)
set VAS=pW[bAS]
set BAS=$41304D39
set NAS=2
call SetUnitAbilityLevel(VAS,BAS,NAS)
set MAS=pW[bAS]
set wDS=$41456576
set uDS=1
call SetUnitAbilityLevel(MAS,wDS,uDS)
endif
if uF>=7 and uF<9 then
set rDS=pW[bAS]
set sDS=$41303945
set tDS=2
call SetUnitAbilityLevel(rDS,sDS,tDS)
set iDS=pW[bAS]
set SDS=$41304D39
set cDS=2
call SetUnitAbilityLevel(iDS,SDS,cDS)
set oDS=pW[bAS]
set ODS=$41456576
set lDS=2
call SetUnitAbilityLevel(oDS,ODS,lDS)
endif
if uF==9 then
set bDS=pW[bAS]
set yDS=$41303945
set pDS=3
call SetUnitAbilityLevel(bDS,yDS,pDS)
set eDS=pW[bAS]
set qDS=$41304D39
set aDS=2
call SetUnitAbilityLevel(eDS,qDS,aDS)
set nDS=pW[bAS]
set dDS=$41456576
set fDS=2
call SetUnitAbilityLevel(nDS,dDS,fDS)
endif
if uF==10 then
set RDS=pW[bAS]
set TDS=$41303945
set YDS=3
call SetUnitAbilityLevel(RDS,TDS,YDS)
set GDS=pW[bAS]
set gDS=$41304D39
set hDS=3
call SetUnitAbilityLevel(GDS,gDS,hDS)
set FDS=pW[bAS]
set kDS=$41456576
set jDS=2
call SetUnitAbilityLevel(FDS,kDS,jDS)
endif
if uF>=11 and uF<13 then
set xDS=pW[bAS]
set vDS=$41303945
set mDS=3
call SetUnitAbilityLevel(xDS,vDS,mDS)
set QDS=pW[bAS]
set WDS=$41304D39
set EDS=3
call SetUnitAbilityLevel(QDS,WDS,EDS)
set ZDS=pW[bAS]
set UDS=$41456576
set IDS=3
call SetUnitAbilityLevel(ZDS,UDS,IDS)
endif
if uF==13 then
set PDS=pW[bAS]
set ADS=$41303945
set DDS=4
call SetUnitAbilityLevel(PDS,ADS,DDS)
set HDS=pW[bAS]
set JDS=$41304D39
set KDS=3
call SetUnitAbilityLevel(HDS,JDS,KDS)
set LDS=pW[bAS]
set XDS=$41456576
set CDS=3
call SetUnitAbilityLevel(LDS,XDS,CDS)
endif
if uF==14 then
set VDS=pW[bAS]
set BDS=$41303945
set NDS=4
call SetUnitAbilityLevel(VDS,BDS,NDS)
set MDS=pW[bAS]
set wHS=$41304D39
set uHS=4
call SetUnitAbilityLevel(MDS,wHS,uHS)
set rHS=pW[bAS]
set sHS=$41456576
set tHS=3
call SetUnitAbilityLevel(rHS,sHS,tHS)
endif
if uF>=15 and uF<17 then
set iHS=pW[bAS]
set SHS=$41303945
set cHS=4
call SetUnitAbilityLevel(iHS,SHS,cHS)
set oHS=pW[bAS]
set OHS=$41304D39
set lHS=4
call SetUnitAbilityLevel(oHS,OHS,lHS)
set bHS=pW[bAS]
set yHS=$41456576
set pHS=4
call SetUnitAbilityLevel(bHS,yHS,pHS)
endif
if uF==17 then
set eHS=pW[bAS]
set qHS=$41303945
set aHS=5
call SetUnitAbilityLevel(eHS,qHS,aHS)
set nHS=pW[bAS]
set dHS=$41304D39
set fHS=4
call SetUnitAbilityLevel(nHS,dHS,fHS)
set RHS=pW[bAS]
set THS=$41456576
set YHS=4
call SetUnitAbilityLevel(RHS,THS,YHS)
endif
if uF==18 then
set GHS=pW[bAS]
set gHS=$41303945
set hHS=5
call SetUnitAbilityLevel(GHS,gHS,hHS)
set FHS=pW[bAS]
set kHS=$41304D39
set jHS=5
call SetUnitAbilityLevel(FHS,kHS,jHS)
set xHS=pW[bAS]
set vHS=$41456576
set mHS=4
call SetUnitAbilityLevel(xHS,vHS,mHS)
endif
if uF>=19 and uF<21 then
set QHS=pW[bAS]
set WHS=$41303945
set EHS=5
call SetUnitAbilityLevel(QHS,WHS,EHS)
set ZHS=pW[bAS]
set UHS=$41304D39
set IHS=5
call SetUnitAbilityLevel(ZHS,UHS,IHS)
set PHS=pW[bAS]
set AHS=$41456576
set DHS=5
call SetUnitAbilityLevel(PHS,AHS,DHS)
endif
if uF==21 then
set HHS=pW[bAS]
set JHS=$41303945
set KHS=6
call SetUnitAbilityLevel(HHS,JHS,KHS)
set LHS=pW[bAS]
set XHS=$41304D39
set CHS=5
call SetUnitAbilityLevel(LHS,XHS,CHS)
set VHS=pW[bAS]
set BHS=$41456576
set NHS=5
call SetUnitAbilityLevel(VHS,BHS,NHS)
endif
if uF==22 then
set MHS=pW[bAS]
set wJS=$41303945
set uJS=6
call SetUnitAbilityLevel(MHS,wJS,uJS)
set rJS=pW[bAS]
set sJS=$41304D39
set tJS=6
call SetUnitAbilityLevel(rJS,sJS,tJS)
set iJS=pW[bAS]
set SJS=$41456576
set cJS=5
call SetUnitAbilityLevel(iJS,SJS,cJS)
endif
if uF>=23 and uF<26 then
set oJS=pW[bAS]
set OJS=$41303945
set lJS=6
call SetUnitAbilityLevel(oJS,OJS,lJS)
set bJS=pW[bAS]
set yJS=$41304D39
set pJS=6
call SetUnitAbilityLevel(bJS,yJS,pJS)
set eJS=pW[bAS]
set qJS=$41456576
set aJS=6
call SetUnitAbilityLevel(eJS,qJS,aJS)
endif
if uF==25 then
set nJS=pW[bAS]
set dJS=$41303945
set fJS=7
call SetUnitAbilityLevel(nJS,dJS,fJS)
set RJS=pW[bAS]
set TJS=$41304D39
set YJS=6
call SetUnitAbilityLevel(RJS,TJS,YJS)
set GJS=pW[bAS]
set gJS=$41456576
set hJS=6
call SetUnitAbilityLevel(GJS,gJS,hJS)
endif
if uF==26 then
set FJS=pW[bAS]
set kJS=$41303945
set jJS=7
call SetUnitAbilityLevel(FJS,kJS,jJS)
set xJS=pW[bAS]
set vJS=$41304D39
set mJS=7
call SetUnitAbilityLevel(xJS,vJS,mJS)
set QJS=pW[bAS]
set WJS=$41456576
set EJS=6
call SetUnitAbilityLevel(QJS,WJS,EJS)
endif
if uF>=27 then
set ZJS=pW[bAS]
set UJS=$41303945
set IJS=7
call SetUnitAbilityLevel(ZJS,UJS,IJS)
set PJS=pW[bAS]
set AJS=$41304D39
set DJS=7
call SetUnitAbilityLevel(PJS,AJS,DJS)
set HJS=pW[bAS]
set JJS=$41456576
set KJS=7
call SetUnitAbilityLevel(HJS,JJS,KJS)
endif
set LJS="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ZulJin in ZulJin, line 688"
set aW[qW]=LJS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set XJS=fF
set RF[XJS]=788
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ZulJin.","when calling error in ZulJin, line 688")
set XJS=0
endif
else
set dF=dF-1
set XJS=nF[dF]
set RF[XJS]=788
endif
set qW=qW-1
set pAS=XJS
set CJS=61.
set VJS=pAS
set BJS="when calling doAfter in ZulJin, line 688"
set aW[qW]=BJS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),CJS,VJS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set eAS=null
set aAS=null
set dAS=null
set RAS=null
set YAS=null
set gAS=null
set FAS=null
set xAS=null
set QAS=null
set ZAS=null
set PAS=null
set HAS=null
set LAS=null
set VAS=null
set MAS=null
set rDS=null
set iDS=null
set oDS=null
set bDS=null
set eDS=null
set nDS=null
set RDS=null
set GDS=null
set FDS=null
set xDS=null
set QDS=null
set ZDS=null
set PDS=null
set HDS=null
set LDS=null
set VDS=null
set MDS=null
set rHS=null
set iHS=null
set oHS=null
set bHS=null
set eHS=null
set nHS=null
set RHS=null
set GHS=null
set FHS=null
set xHS=null
set QHS=null
set ZHS=null
set PHS=null
set HHS=null
set LHS=null
set VHS=null
set MHS=null
set rJS=null
set iJS=null
set oJS=null
set bJS=null
set eJS=null
set nJS=null
set RJS=null
set GJS=null
set FJS=null
set xJS=null
set QJS=null
set ZJS=null
set PJS=null
set HJS=null
endfunction
function NVu takes integer vVu,string mVu returns nothing
local integer QVu
local integer WVu
local integer EVu
local string ZVu
local integer UVu
local string IVu
local integer PVu
local integer AVu
local integer DVu
local string HVu
local integer JVu
local string KVu
local string LVu
local integer XVu
local real CVu
local integer VVu
local string BVu
set aW[qW]=mVu
set qW=qW+1
if GetPlayerController(Tu)==MAP_CONTROL_COMPUTER or u[Gk[vVu]]==0 then
set EVu=gY
set ZVu="when calling shuffle in AllPickRace, line 292"
set aW[qW]=ZVu
set qW=qW+1
if ok[EVu]==0 then
if EVu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(EVu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set UVu=gY
set IVu="when calling getFirst in AllPickRace, line 293"
set aW[qW]=IVu
set qW=qW+1
if ok[UVu]==0 then
if UVu==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set AVu=UVu
set PVu=Hv[Kv[Vv[AVu]]]
set qW=qW-1
set QVu=PVu
set DVu=QVu
set HVu="when calling numRace in AllPickRace, line 294"
set aW[qW]=HVu
set qW=qW+1
if DVu==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if DVu==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if DVu==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if DVu==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if DVu==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if DVu==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if DVu==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if DVu==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if DVu==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if DVu==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if DVu==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if DVu==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if DVu==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if DVu==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if DVu==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if DVu==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if DVu==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if DVu==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if DVu==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if DVu==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Tu,QVu,"when calling pickRaceRandom in AllPickRace, line 295")
call eWp(gY,QVu,"when calling remove in AllPickRace, line 296")
set JVu=gY
set KVu="when calling shuffle in AllPickRace, line 297"
set aW[qW]=KVu
set qW=qW+1
if ok[JVu]==0 then
if JVu==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(JVu,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
endif
set LVu="when calling alloc_CallbackSingle_doAfter_doAfter_AllPickRace in AllPickRace, line 298"
set aW[qW]=LVu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set XVu=fF
set RF[XVu]=769
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_AllPickRace.","when calling error in AllPickRace, line 298")
set XVu=0
endif
else
set dF=dF-1
set XVu=nF[dF]
set RF[XVu]=769
endif
set qW=qW-1
set WVu=XVu
set Fk[WVu]=gk[vVu]
set kk[WVu]=hk[vVu]
set CVu=.5
set VVu=WVu
set BVu="when calling doAfter in AllPickRace, line 298"
set aW[qW]=BVu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),CVu,VVu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function NXt takes integer QXt returns nothing
local unit WXt=fQ[QXt]
local unit EXt
local integer ZXt
local unit UXt
local widget IXt
local real PXt
local boolean AXt
local boolean DXt
local attacktype HXt
local damagetype JXt
local weapontype KXt
local effect LXt
local widget XXt
local string CXt
local string VXt
local boolean BXt
if UnitAlive(WXt) then
set EXt=fQ[QXt]
set ZXt=$42303831
set BXt=GetUnitAbilityLevel(EXt,ZXt)>0
else
set BXt=false
endif
if BXt then
set UXt=RQ[QXt]
set IXt=fQ[QXt]
set PXt=125.+25.*TQ[QXt]
set AXt=true
set DXt=false
set HXt=ATTACK_TYPE_NORMAL
set JXt=DAMAGE_TYPE_MAGIC
set KXt=WEAPON_TYPE_WHOKNOWS
call UnitDamageTarget(UXt,IXt,PXt,AXt,DXt,HXt,JXt,KXt)
set XXt=fQ[QXt]
set CXt="Pillar of Flame Blue.mdl"
set VXt="origin"
set LXt=AddSpecialEffectTarget(CXt,XXt,VXt)
call DestroyEffect(LXt)
endif
set WXt=null
set EXt=null
set UXt=null
set IXt=null
set HXt=null
set JXt=null
set KXt=null
set LXt=null
set XXt=null
endfunction
function OFp takes integer Qhp,string Whp returns nothing
local integer Ehp
local unit Zhp
local integer Uhp
local unit Ihp
local integer Php
local integer Ahp
local unit Dhp
local integer Hhp
local unit Jhp
local integer Khp
local integer Lhp
local unit Xhp
local integer Chp
local unit Vhp
local integer Bhp
local integer Nhp
local unit Mhp
local integer wFp
local unit uFp
local integer rFp
local unit sFp
local string tFp
local integer iFp
local real SFp
local integer cFp
local string oFp
set aW[qW]=Whp
set qW=qW+1
set ul=CreateUnit(Wk[Qhp],$55303139,Ek[Qhp],Zk[Qhp],GetUnitFacing(Uk[Qhp]))
call SetHeroLevel(ul,28,true)
set Zhp=ul
set Uhp=$41303942
call UnitAddAbility(Zhp,Uhp)
set Ihp=ul
set Php=$41303942
set Ahp=7
call SetUnitAbilityLevel(Ihp,Php,Ahp)
set Dhp=ul
set Hhp=$41323947
call UnitAddAbility(Dhp,Hhp)
set Jhp=ul
set Khp=$41323947
set Lhp=7
call SetUnitAbilityLevel(Jhp,Khp,Lhp)
set Xhp=ul
set Chp=$41323949
call UnitAddAbility(Xhp,Chp)
set Vhp=ul
set Bhp=$41323949
set Nhp=7
call SetUnitAbilityLevel(Vhp,Bhp,Nhp)
set Mhp=ul
set wFp=$494D306F
call UnitAddItemById(Mhp,wFp)
call dYr(ul)
set uFp=wl
set rFp=$41323934
call UnitRemoveAbility(uFp,rFp)
set sFp=wl
call DisplayTextToPlayer(GetOwningPlayer(sFp),0.,0.,"You have summoned Bonelord! You have to wait for a while until the Bonelord can be summoned again")
set il=600
set tFp="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 2989"
set aW[qW]=tFp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set iFp=fF
set RF[iFp]=780
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 2989")
set iFp=0
endif
else
set dF=dF-1
set iFp=nF[dF]
set RF[iFp]=780
endif
set qW=qW-1
set Ehp=iFp
set SFp=600.
set cFp=Ehp
set oFp="when calling doAfter in ArmyOfSkeletons, line 2989"
set aW[qW]=oFp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),SFp,cFp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set Zhp=null
set Ihp=null
set Dhp=null
set Jhp=null
set Xhp=null
set Vhp=null
set Mhp=null
set uFp=null
set sFp=null
endfunction
function Odt takes integer Hnt,string Jnt returns nothing
local integer Knt
local integer Lnt
local integer Xnt
local string Cnt
local integer Vnt
local string Bnt
local integer Nnt
local integer Mnt
local integer wdt
local string udt
local integer rdt
local string sdt
local string tdt
local integer idt
local real Sdt
local integer cdt
local string odt
set aW[qW]=Jnt
set qW=qW+1
if GetPlayerController(Gu)==MAP_CONTROL_COMPUTER or u[Fk[Hnt]]==0 then
set Xnt=gY
set Cnt="when calling shuffle in AllPickRace, line 300"
set aW[qW]=Cnt
set qW=qW+1
if ok[Xnt]==0 then
if Xnt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Xnt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Vnt=gY
set Bnt="when calling getFirst in AllPickRace, line 301"
set aW[qW]=Bnt
set qW=qW+1
if ok[Vnt]==0 then
if Vnt==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Mnt=Vnt
set Nnt=Hv[Kv[Vv[Mnt]]]
set qW=qW-1
set Knt=Nnt
set wdt=Knt
set udt="when calling numRace in AllPickRace, line 302"
set aW[qW]=udt
set qW=qW+1
if wdt==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if wdt==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if wdt==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if wdt==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if wdt==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if wdt==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if wdt==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if wdt==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if wdt==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if wdt==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if wdt==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if wdt==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if wdt==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if wdt==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if wdt==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if wdt==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if wdt==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if wdt==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if wdt==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if wdt==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Gu,Knt,"when calling pickRaceRandom in AllPickRace, line 303")
call eWp(gY,Knt,"when calling remove in AllPickRace, line 304")
set rdt=gY
set sdt="when calling shuffle in AllPickRace, line 305"
set aW[qW]=sdt
set qW=qW+1
if ok[rdt]==0 then
if rdt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(rdt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
endif
set tdt="when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_AllPickRace in AllPickRace, line 306"
set aW[qW]=tdt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set idt=fF
set RF[idt]=774
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_AllPickRace.","when calling error in AllPickRace, line 306")
set idt=0
endif
else
set dF=dF-1
set idt=nF[dF]
set RF[idt]=774
endif
set qW=qW-1
set Lnt=idt
set jk[Lnt]=kk[Hnt]
set Sdt=.5
set cdt=Lnt
set odt="when calling doAfter in AllPickRace, line 306"
set aW[qW]=odt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Sdt,cdt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function QZy takes integer aZy,string nZy returns nothing
local unit dZy
local integer fZy
local unit RZy
local real TZy
local unit YZy
local integer GZy
local unit gZy
local integer hZy
local integer FZy
local string kZy
local integer jZy
local real xZy
local integer vZy
local string mZy
set aW[qW]=nZy
set qW=qW+1
set dZy=CreateUnit(om[aZy],$75303030,Om[aZy],lm[aZy],GetUnitFacing(bm[aZy])+10.)
set RZy=dZy
set TZy=5.
call UnitApplyTimedLife(RZy,$42544C46,TZy)
set YZy=dZy
set GZy=$41305954
call UnitAddAbility(YZy,GZy)
set gZy=dZy
set hZy=$41305954
set FZy=ym[aZy]
call SetUnitAbilityLevel(gZy,hZy,FZy)
call IssuePointOrder(dZy,"impale",pm[aZy]+10.,em[aZy]+10.)
set kZy="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_Malorne in Malorne, line 419"
set aW[qW]=kZy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set jZy=fF
set RF[jZy]=786
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_Malorne.","when calling error in Malorne, line 419")
set jZy=0
endif
else
set dF=dF-1
set jZy=nF[dF]
set RF[jZy]=786
endif
set qW=qW-1
set fZy=jZy
set qm[fZy]=om[aZy]
set am[fZy]=Om[aZy]
set nm[fZy]=lm[aZy]
set dm[fZy]=bm[aZy]
set fm[fZy]=ym[aZy]
set Rm[fZy]=pm[aZy]
set Tm[fZy]=em[aZy]
set xZy=.3
set vZy=fZy
set mZy="when calling doAfter in Malorne, line 419"
set aW[qW]=mZy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),xZy,vZy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set dZy=null
set RZy=null
set YZy=null
set gZy=null
endfunction
function PGl takes unit mGl returns unit
local group QGl=CreateGroup()
local filterfunc WGl
local unit EGl
local group ZGl
local group UGl
local boolexpr IGl
call SaveUnitHandle(qu,$556E6974,$556E6974,mGl)
set WGl=Filter(ssw)
call GroupEnumUnitsInRange(QGl,GetUnitX(mGl),GetUnitY(mGl),900.,WGl)
set EGl=Dgy(QGl)
set ZGl=QGl
call GroupClear(ZGl)
set UGl=QGl
call DestroyGroup(UGl)
set IGl=WGl
call DestroyBoolExpr(IGl)
set Itw=EGl
set QGl=null
set WGl=null
set EGl=null
set ZGl=null
set UGl=null
set IGl=null
return Itw
endfunction
function PGy takes unit mGy returns unit
local group QGy=CreateGroup()
local filterfunc WGy
local unit EGy
local group ZGy
local group UGy
local boolexpr IGy
call SaveUnitHandle(qu,$556E6974,$556E6974,mGy)
set WGy=Filter(usw)
call GroupEnumUnitsInRange(QGy,GetUnitX(mGy),GetUnitY(mGy),900.,WGy)
set EGy=Dgy(QGy)
set ZGy=QGy
call GroupClear(ZGy)
set UGy=QGy
call DestroyGroup(UGy)
set IGy=WGy
call DestroyBoolExpr(IGy)
set Dtw=EGy
set QGy=null
set WGy=null
set EGy=null
set ZGy=null
set UGy=null
set IGy=null
return Dtw
endfunction
function YQi takes unit qQi returns unit
local group aQi=CreateGroup()
local filterfunc nQi
local unit dQi
local group fQi
local group RQi
local boolexpr TQi
call SaveUnitHandle(qu,$556E6974,$556E6974,qQi)
set nQi=Filter(tsw)
call GroupEnumUnitsInRange(aQi,GetUnitX(qQi),GetUnitY(qQi),900.,nQi)
set dQi=Dgy(aQi)
set fQi=aQi
call GroupClear(fQi)
set RQi=aQi
call DestroyGroup(RQi)
set TQi=nQi
call DestroyBoolExpr(TQi)
set jtw=dQi
set aQi=null
set nQi=null
set dQi=null
set fQi=null
set RQi=null
set TQi=null
return jtw
endfunction
function oIl takes unit uIl returns unit
local group rIl=CreateGroup()
local filterfunc sIl
local unit tIl
local group iIl
local group SIl
local boolexpr cIl
call SaveUnitHandle(qu,$556E6974,$556E6974,uIl)
set sIl=Filter(isw)
call GroupEnumUnitsInRange(rIl,GetUnitX(uIl),GetUnitY(uIl),700.,sIl)
set tIl=Dgy(rIl)
set iIl=rIl
call GroupClear(iIl)
set SIl=rIl
call DestroyGroup(SIl)
set cIl=sIl
call DestroyBoolExpr(cIl)
set Ptw=tIl
set rIl=null
set sIl=null
set tIl=null
set iIl=null
set SIl=null
set cIl=null
return Ptw
endfunction
function skc takes unit VFc returns unit
local group BFc=CreateGroup()
local filterfunc NFc
local unit MFc
local group wkc
local group ukc
local boolexpr rkc
call SaveUnitHandle(qu,$556E6974,$556E6974,VFc)
set NFc=Filter(rsw)
call GroupEnumUnitsInRange(BFc,GetUnitX(VFc),GetUnitY(VFc),900.,NFc)
set MFc=Dgy(BFc)
set wkc=BFc
call GroupClear(wkc)
set ukc=BFc
call DestroyGroup(ukc)
set rkc=NFc
call DestroyBoolExpr(rkc)
set Etw=MFc
set BFc=null
set NFc=null
set MFc=null
set wkc=null
set ukc=null
set rkc=null
return Etw
endfunction
function Sco takes integer u5o returns nothing
local unit t5o=KQ[u5o]
local integer i5o=$41303232
local real r5o
local real s5o
local unit S5o
local integer c5o
local unit o5o
local string O5o
local unit l5o
local integer b5o
local unit y5o
local integer p5o
local unit e5o
local integer q5o
local unit a5o
local integer n5o
local unit d5o
local integer f5o
local unit R5o
local integer T5o
local unit Y5o
local integer G5o
local unit g5o
local integer h5o
local unit F5o
local integer k5o
local unit j5o
local integer x5o
local unit v5o
local integer m5o
local unit Q5o
local integer W5o
local unit E5o
local integer Z5o
local unit U5o
local integer I5o
local unit P5o
local integer A5o
local unit D5o
local integer H5o
local unit J5o
local integer K5o
local unit L5o
local integer X5o
local unit C5o
local integer V5o
local unit B5o
local string N5o
local unit M5o
local integer w6o
local unit u6o
local string r6o
local unit s6o
local integer t6o
local unit i6o
local integer S6o
local unit c6o
local integer o6o
local unit O6o
local string l6o
local unit b6o
local integer y6o
local unit p6o
local integer e6o
local unit q6o
local integer a6o
local unit n6o
local integer d6o
local unit f6o
local string R6o
local unit T6o
local integer Y6o
local unit G6o
local integer g6o
local unit h6o
local integer F6o
local unit k6o
local string j6o
local unit x6o
local integer v6o
local unit m6o
local integer Q6o
local unit W6o
local integer E6o
local unit Z6o
local string U6o
local unit I6o
local integer P6o
local unit A6o
local integer D6o
local unit H6o
local string J6o
local unit K6o
local integer L6o
local unit X6o
local integer C6o
local unit V6o
local string B6o
local unit N6o
local integer M6o
local unit w7o
local string u7o
local unit r7o
local integer s7o
local unit t7o
local integer i7o
local unit S7o
local string c7o
local unit o7o
local integer O7o
local unit l7o
local integer b7o
local unit y7o
local string p7o
local unit e7o
local integer q7o
local unit a7o
local integer n7o
local unit d7o
local string f7o
local unit R7o
local integer T7o
local unit Y7o
local string G7o
local widget g7o
local unit h7o
local integer F7o
local unit k7o
local integer j7o
local unit x7o
local string v7o
local widget m7o
local unit Q7o
local integer W7o
local unit E7o
local string Z7o
local widget U7o
local unit I7o
local integer P7o
local unit A7o
local string D7o
local widget H7o
local unit J7o
local integer K7o
local unit L7o
local integer X7o
local unit C7o
local integer V7o
local unit B7o
local integer N7o
local unit M7o
local integer w8o
local unit u8o
local string r8o
local widget s8o
local unit t8o
local integer i8o
local unit S8o
local string c8o
local widget o8o
local unit O8o
local integer l8o
local unit b8o
local string y8o
local widget p8o
local unit e8o
local integer q8o
local unit a8o
local string n8o
local widget d8o
local unit f8o
local integer R8o
local unit T8o
local string Y8o
local widget G8o
local unit g8o
local integer h8o
local unit F8o
local integer k8o
local unit j8o
local integer x8o
local unit v8o
local integer m8o
local unit Q8o
local integer W8o
local unit E8o
local integer Z8o
local unit U8o
local string I8o
local widget P8o
local unit A8o
local integer D8o
local unit H8o
local integer J8o
local unit K8o
local string L8o
local widget X8o
local unit C8o
local integer V8o
local unit B8o
local string N8o
local widget M8o
local unit w9o
local integer u9o
local unit r9o
local string s9o
local widget t9o
local unit i9o
local integer S9o
local unit c9o
local string o9o
local widget O9o
local unit l9o
local integer b9o
local unit y9o
local string p9o
local widget e9o
local unit q9o
local integer a9o
local unit n9o
local string d9o
local widget f9o
local unit R9o
local integer T9o
local unit Y9o
local integer G9o
local unit g9o
local integer h9o
local unit F9o
local integer k9o
local unit j9o
local integer x9o
local unit v9o
local integer m9o
local unit Q9o
local integer W9o
local unit E9o
local integer Z9o
local unit U9o
local integer I9o
local unit P9o
local integer A9o
local unit D9o
local integer H9o
local unit J9o
local string K9o
local unit L9o
local integer X9o
local unit C9o
local integer V9o
local unit B9o
local integer N9o
local unit M9o
local integer w0o
local unit u0o
local integer r0o
local unit s0o
local integer t0o
local unit i0o
local string S0o
local unit c0o
local integer o0o
local unit O0o
local integer l0o
local unit b0o
local integer y0o
local unit p0o
local integer e0o
local unit q0o
local integer a0o
local unit n0o
local integer d0o
local unit f0o
local string R0o
local unit T0o
local integer Y0o
local unit G0o
local integer g0o
local unit h0o
local integer F0o
local unit k0o
local integer j0o
local unit x0o
local integer v0o
local unit m0o
local integer Q0o
local unit W0o
local integer E0o
local unit Z0o
local string U0o
local unit I0o
local integer P0o
local unit A0o
local integer D0o
local unit H0o
local integer J0o
local unit K0o
local integer L0o
local unit X0o
local string C0o
local widget V0o
local unit B0o
local integer N0o
local unit M0o
local integer w_o
local unit u_o
local integer r_o
local unit s_o
local integer t_o
local unit i_o
local integer S_o
local unit c_o
local integer o_o
local unit O_o
local string l_o
local widget b_o
local unit y_o
local integer p_o
local unit e_o
local integer q_o
local unit a_o
local integer n_o
local unit d_o
local string f_o
local widget R_o
local unit T_o
local integer Y_o
local unit G_o
local integer g_o
local unit h_o
local string F_o
local widget k_o
local unit j_o
local integer x_o
local unit v_o
local integer m_o
local unit Q_o
local integer W_o
local unit E_o
local integer Z_o
local unit U_o
local integer I_o
local unit P_o
local integer A_o
local unit D_o
local integer H_o
local unit J_o
local string K_o
local widget L_o
local unit X_o
local integer C_o
local unit V_o
local integer B_o
local unit N_o
local integer M_o
local unit wwo
local integer uwo
local unit rwo
local integer swo
local unit two
local string iwo
local widget Swo
local unit cwo
local unit owo
local unit Owo
local unit lwo
local integer bwo
local unit ywo
local integer pwo
local unit ewo
local integer qwo
local unit awo
local integer nwo
local unit dwo
local string fwo
local real Rwo
local real Two
local unit Ywo
local integer Gwo
local unit gwo
local integer hwo
local unit Fwo
local integer kwo
local unit jwo
local integer xwo
local unit vwo
local integer mwo
local unit Qwo
local integer Wwo
local unit Ewo
local integer Zwo
local unit Uwo
local integer Iwo
local unit Pwo
local string Awo
local real Dwo
local real Hwo
local unit Jwo
local integer Kwo
local unit Lwo
local integer Xwo
local unit Cwo
local integer Vwo
local unit Bwo
local integer Nwo
local unit Mwo
local integer wuo
local unit uuo
local integer ruo
local unit suo
local integer tuo
local unit iuo
local integer Suo
local unit cuo
local integer ouo
local unit Ouo
local integer luo
local unit buo
local integer yuo
local unit puo
local integer euo
local unit quo
local integer auo
local unit nuo
local integer duo
local unit fuo
local integer Ruo
local unit Tuo
local string Yuo
local real Guo
local real guo
local unit huo
local integer Fuo
local unit kuo
local integer juo
local unit xuo
local integer vuo
local unit muo
local integer Quo
local unit Wuo
local string Euo
local real Zuo
local real Uuo
local unit Iuo
local integer Puo
local unit Auo
local integer Duo
local unit Huo
local integer Juo
local unit Kuo
local string Luo
local real Xuo
local real Cuo
local unit Vuo
local integer Buo
local unit Nuo
local integer Muo
local unit wro
local string uro
local real rro
local real sro
local unit tro
local integer iro
local unit Sro
local string cro
local real oro
local real Oro
local unit lro
local integer bro
local unit yro
local string pro
local real ero
local real qro
local unit aro
local unit nro
local integer dro
local unit fro
local unit Rro
local unitstate Tro
local unit Yro
local unit Gro
local unitstate gro
local unit hro
local unit Fro
local unitstate kro
local unit jro
local integer xro
local unit vro
local integer mro
local unit Qro
local string Wro
local widget Ero
local unit Zro
local integer Uro
local unit Iro
local string Pro
local widget Aro
local unit Dro
local integer Hro
local unit Jro
local unit Kro
local unitstate Lro
local unit Xro
local unit Cro
local unitstate Vro
local unit Bro
local string Nro
local widget Mro
local unit wso
local integer uso
local unit rso
local string sso
local widget tso
local unit iso
local integer Sso
local unit cso
local string oso
local widget Oso
local unit lso
local integer bso
local unit yso
local integer pso
local unit eso
local string qso
local widget aso
local unit nso
local integer dso
local unit fso
local integer Rso
local unit Tso
local integer Yso
local unit Gso
local string gso
local widget hso
local unit Fso
local integer kso
local unit jso
local string xso
local widget vso
local unit mso
local integer Qso
local unit Wso
local string Eso
local widget Zso
local unit Uso
local integer Iso
local unit Pso
local string Aso
local widget Dso
local unit Hso
local unit Jso
local integer Kso
local unit Lso
local unit Xso
local unitstate Cso
local unit Vso
local unit Bso
local unitstate Nso
local unit Mso
local string wto
local widget uto
local unit rto
local integer sto
local unit tto
local string ito
local widget Sto
local boolean cto
local boolean oto
local boolean Oto
local boolean lto
local boolean bto
local boolean yto
local boolean pto
local boolean eto
local boolean qto
local boolean ato
local boolean nto
local boolean dto
local boolean fto
local boolean Rto
local boolean Tto
local boolean Yto
local boolean Gto
local boolean gto
local boolean hto
local boolean Fto
local boolean kto
local boolean jto
local boolean xto
local boolean vto
local boolean mto
local boolean Qto
local boolean Wto
local boolean Eto
local boolean Zto
local boolean Uto
local boolean Ito
local boolean Pto
local boolean Ato
local boolean Dto
local boolean Hto
local boolean Jto
local boolean Kto
local boolean Lto
local boolean Xto
local boolean Cto
local boolean Vto
local boolean Bto
local boolean Nto
local boolean Mto
local boolean wio
local boolean uio
local boolean rio
local boolean sio
local boolean tio
local boolean iio
local boolean Sio
local boolean cio
local boolean oio
local boolean Oio
local boolean lio
local boolean bio
local boolean yio
local boolean pio
local boolean eio
local boolean qio
local boolean aio
local boolean nio
local boolean dio
local boolean fio
local boolean Rio
local boolean Tio
local boolean Yio
local boolean Gio
local boolean gio
local boolean hio
local boolean Fio
local boolean kio
local boolean jio
local boolean xio
local boolean vio
local boolean mio
local boolean Qio
local boolean Wio
local boolean Eio
local boolean Zio
local boolean Uio
local boolean Iio
local boolean Pio
local boolean Aio
local boolean Dio
local boolean Hio
local boolean Jio
local boolean Kio
local boolean Lio
local boolean Xio
local boolean Cio
local real Vio
local boolean Bio
local boolean Nio
local boolean Mio
local boolean wSo
local boolean uSo
local boolean rSo
local boolean sSo
local boolean tSo
local boolean iSo
local boolean SSo
local boolean cSo
local boolean oSo
local boolean OSo
local boolean lSo
local boolean bSo
local boolean ySo
local boolean pSo
local boolean eSo
local boolean qSo
local boolean aSo
local boolean nSo
local boolean dSo
local boolean fSo
local boolean RSo
local boolean TSo
local boolean YSo
local boolean GSo
local boolean gSo
local boolean hSo
local boolean FSo
local boolean kSo
local boolean jSo
local real xSo
local boolean vSo
local real mSo
local boolean QSo
local boolean WSo
local boolean ESo
local boolean ZSo
local boolean USo
local real ISo
local boolean PSo
local real ASo
local real DSo
local real HSo
local real JSo
local real KSo
local real LSo
local real XSo
local real CSo
local real VSo
local real BSo
local real NSo
local real MSo
local real wco
local real uco
local real rco
local real sco
local real tco
local real ico
if GetUnitAbilityLevel(t5o,i5o)>0 then
set cto=true
else
set S5o=KQ[u5o]
set c5o=$41303144
set cto=GetUnitAbilityLevel(S5o,c5o)>0
endif
if cto then
set o5o=KQ[u5o]
set O5o="innerfire"
call IssueImmediateOrder(o5o,O5o)
endif
set l5o=KQ[u5o]
set b5o=$41487765
if GetUnitAbilityLevel(l5o,b5o)>0 then
set oto=true
else
set y5o=KQ[u5o]
set p5o=$41305458
set oto=GetUnitAbilityLevel(y5o,p5o)>0
endif
if oto then
set Oto=true
else
set e5o=KQ[u5o]
set q5o=$4130364D
set Oto=GetUnitAbilityLevel(e5o,q5o)>0
endif
if Oto then
set lto=true
else
set a5o=KQ[u5o]
set n5o=$41305952
set lto=GetUnitAbilityLevel(a5o,n5o)>0
endif
if lto then
set bto=true
else
set d5o=KQ[u5o]
set f5o=$414D3333
set bto=GetUnitAbilityLevel(d5o,f5o)>0
endif
if bto then
set yto=true
else
set R5o=KQ[u5o]
set T5o=$414D317A
set yto=GetUnitAbilityLevel(R5o,T5o)>0
endif
if yto then
set pto=true
else
set Y5o=KQ[u5o]
set G5o=$414D317B
set pto=GetUnitAbilityLevel(Y5o,G5o)>0
endif
if pto then
set eto=true
else
set g5o=KQ[u5o]
set h5o=$41313056
set eto=GetUnitAbilityLevel(g5o,h5o)>0
endif
if eto then
set qto=true
else
set F5o=KQ[u5o]
set k5o=$41313135
set qto=GetUnitAbilityLevel(F5o,k5o)>0
endif
if qto then
set ato=true
else
set j5o=KQ[u5o]
set x5o=$41305431
set ato=GetUnitAbilityLevel(j5o,x5o)>0
endif
if ato then
set nto=true
else
set v5o=KQ[u5o]
set m5o=$41305248
set nto=GetUnitAbilityLevel(v5o,m5o)>0
endif
if nto then
set dto=true
else
set Q5o=KQ[u5o]
set W5o=$4130574D
set dto=GetUnitAbilityLevel(Q5o,W5o)>0
endif
if dto then
set fto=true
else
set E5o=KQ[u5o]
set Z5o=$41305946
set fto=GetUnitAbilityLevel(E5o,Z5o)>0
endif
if fto then
set Rto=true
else
set U5o=KQ[u5o]
set I5o=$41305452
set Rto=GetUnitAbilityLevel(U5o,I5o)>0
endif
if Rto then
set Tto=true
else
set P5o=KQ[u5o]
set A5o=$41323339
set Tto=GetUnitAbilityLevel(P5o,A5o)>0
endif
if Tto then
set Yto=true
else
set D5o=KQ[u5o]
set H5o=$41333032
set Yto=GetUnitAbilityLevel(D5o,H5o)>0
endif
if Yto then
set Gto=true
else
set J5o=KQ[u5o]
set K5o=$414D3765
set Gto=GetUnitAbilityLevel(J5o,K5o)>0
endif
if Gto then
set gto=true
else
set L5o=KQ[u5o]
set X5o=$4131354C
set gto=GetUnitAbilityLevel(L5o,X5o)>0
endif
if gto then
set hto=true
else
set C5o=KQ[u5o]
set V5o=$41313731
set hto=GetUnitAbilityLevel(C5o,V5o)>0
endif
if hto then
set B5o=KQ[u5o]
set N5o="waterelemental"
call IssueImmediateOrder(B5o,N5o)
endif
set M5o=KQ[u5o]
set w6o=$41303344
if GetUnitAbilityLevel(M5o,w6o)>0 then
set u6o=KQ[u5o]
set r6o="roar"
call IssueImmediateOrder(u6o,r6o)
endif
set s6o=KQ[u5o]
set t6o=$41487265
if GetUnitAbilityLevel(s6o,t6o)>0 then
set Fto=true
else
set i6o=KQ[u5o]
set S6o=$41305A41
set Fto=GetUnitAbilityLevel(i6o,S6o)>0
endif
if Fto then
set kto=true
else
set c6o=KQ[u5o]
set o6o=$41303649
set kto=GetUnitAbilityLevel(c6o,o6o)>0
endif
if kto then
set O6o=KQ[u5o]
set l6o="resurrection"
call IssueImmediateOrder(O6o,l6o)
endif
set b6o=KQ[u5o]
set y6o=$414D3268
if GetUnitAbilityLevel(b6o,y6o)>0 then
set jto=true
else
set p6o=KQ[u5o]
set e6o=$414D3035
set jto=GetUnitAbilityLevel(p6o,e6o)>0
endif
if jto then
set xto=true
else
set q6o=KQ[u5o]
set a6o=$41303252
set xto=GetUnitAbilityLevel(q6o,a6o)>0
endif
if xto then
set vto=true
else
set n6o=KQ[u5o]
set d6o=$41313230
set vto=GetUnitAbilityLevel(n6o,d6o)>0
endif
if vto then
set f6o=KQ[u5o]
set R6o="berserk"
call IssueImmediateOrder(f6o,R6o)
endif
set T6o=KQ[u5o]
set Y6o=$414E6874
if GetUnitAbilityLevel(T6o,Y6o)>0 then
set mto=true
else
set G6o=KQ[u5o]
set g6o=$41303542
set mto=GetUnitAbilityLevel(G6o,g6o)>0
endif
if mto then
set Qto=true
else
set h6o=KQ[u5o]
set F6o=$41303154
set Qto=GetUnitAbilityLevel(h6o,F6o)>0
endif
if Qto then
set k6o=KQ[u5o]
set j6o="howlofterror"
call IssueImmediateOrder(k6o,j6o)
endif
set x6o=KQ[u5o]
set v6o=$414F7366
if GetUnitAbilityLevel(x6o,v6o)>0 then
set Wto=true
else
set m6o=KQ[u5o]
set Q6o=$41303134
set Wto=GetUnitAbilityLevel(m6o,Q6o)>0
endif
if Wto then
set Eto=true
else
set W6o=KQ[u5o]
set E6o=$41304E4B
set Eto=GetUnitAbilityLevel(W6o,E6o)>0
endif
if Eto then
set Z6o=KQ[u5o]
set U6o="spiritwolf"
call IssueImmediateOrder(Z6o,U6o)
endif
set I6o=KQ[u5o]
set P6o=$414F6C73
if GetUnitAbilityLevel(I6o,P6o)>0 then
set Zto=true
else
set A6o=KQ[u5o]
set D6o=$41304135
set Zto=GetUnitAbilityLevel(A6o,D6o)>0
endif
if Zto then
set H6o=KQ[u5o]
set J6o="Locustswarm"
call IssueImmediateOrder(H6o,J6o)
endif
set K6o=KQ[u5o]
set L6o=$414F6D69
if GetUnitAbilityLevel(K6o,L6o)>0 then
set Uto=true
else
set X6o=KQ[u5o]
set C6o=$4130524C
set Uto=GetUnitAbilityLevel(X6o,C6o)>0
endif
if Uto then
set V6o=KQ[u5o]
set B6o="mirrorimage"
call IssueImmediateOrder(V6o,B6o)
endif
set N6o=KQ[u5o]
set M6o=$41727371
if GetUnitAbilityLevel(N6o,M6o)>0 then
set w7o=KQ[u5o]
set u7o="summonquillbeast"
call IssueImmediateOrder(w7o,u7o)
endif
set r7o=KQ[u5o]
set s7o=$41304D50
if GetUnitAbilityLevel(r7o,s7o)>0 then
set Ito=true
else
set t7o=KQ[u5o]
set i7o=$41313355
set Ito=GetUnitAbilityLevel(t7o,i7o)>0
endif
if Ito then
set S7o=KQ[u5o]
set c7o="divineshield"
call IssueImmediateOrder(S7o,c7o)
endif
set o7o=KQ[u5o]
set O7o=$414F7777
if GetUnitAbilityLevel(o7o,O7o)>0 then
set Pto=true
else
set l7o=KQ[u5o]
set b7o=$414D316F
set Pto=GetUnitAbilityLevel(l7o,b7o)>0
endif
if Pto then
set y7o=KQ[u5o]
set p7o="whirlwind"
call IssueImmediateOrder(y7o,p7o)
endif
set e7o=KQ[u5o]
set q7o=$41457471
if GetUnitAbilityLevel(e7o,q7o)>0 then
set Ato=true
else
set a7o=KQ[u5o]
set n7o=$41323341
set Ato=GetUnitAbilityLevel(a7o,n7o)>0
endif
if Ato then
set d7o=KQ[u5o]
set f7o="tranquility"
call IssueImmediateOrder(d7o,f7o)
endif
set R7o=KQ[u5o]
set T7o=$414D3265
if GetUnitAbilityLevel(R7o,T7o)>0 then
set Y7o=KQ[u5o]
set G7o="summonfactory"
set g7o=LQ[u5o]
call IssueTargetOrder(Y7o,G7o,g7o)
endif
set h7o=KQ[u5o]
set F7o=$41313134
if GetUnitAbilityLevel(h7o,F7o)>0 then
set Dto=true
else
set k7o=KQ[u5o]
set j7o=$41303535
set Dto=GetUnitAbilityLevel(k7o,j7o)>0
endif
if Dto then
set x7o=KQ[u5o]
set v7o="rejuvination"
set m7o=PGy(KQ[u5o])
call IssueTargetOrder(x7o,v7o,m7o)
endif
set Q7o=KQ[u5o]
set W7o=$41304838
if GetUnitAbilityLevel(Q7o,W7o)>0 then
set E7o=KQ[u5o]
set Z7o="rejuvination"
set U7o=KQ[u5o]
call IssueTargetOrder(E7o,Z7o,U7o)
endif
set I7o=KQ[u5o]
set P7o=$41304658
if GetUnitAbilityLevel(I7o,P7o)>0 then
set A7o=KQ[u5o]
set D7o="unholyfrenzy"
set H7o=KQ[u5o]
call IssueTargetOrder(A7o,D7o,H7o)
endif
set J7o=KQ[u5o]
set K7o=$414F6877
if GetUnitAbilityLevel(J7o,K7o)>0 then
set Hto=true
else
set L7o=KQ[u5o]
set X7o=$41304C56
set Hto=GetUnitAbilityLevel(L7o,X7o)>0
endif
if Hto then
set Jto=true
else
set C7o=KQ[u5o]
set V7o=$41304548
set Jto=GetUnitAbilityLevel(C7o,V7o)>0
endif
if Jto then
set Kto=true
else
set B7o=KQ[u5o]
set N7o=$41304645
set Kto=GetUnitAbilityLevel(B7o,N7o)>0
endif
if Kto then
set Lto=true
else
set M7o=KQ[u5o]
set w8o=$41303934
set Lto=GetUnitAbilityLevel(M7o,w8o)>0
endif
if Lto then
set u8o=KQ[u5o]
set r8o="healingwave"
set s8o=PGy(KQ[u5o])
call IssueTargetOrder(u8o,r8o,s8o)
endif
set t8o=KQ[u5o]
set i8o=$41303831
if GetUnitAbilityLevel(t8o,i8o)>0 then
set S8o=KQ[u5o]
set c8o="polymorph"
set o8o=YQi(LQ[u5o])
call IssueTargetOrder(S8o,c8o,o8o)
endif
set O8o=KQ[u5o]
set l8o=$41304D32
if GetUnitAbilityLevel(O8o,l8o)>0 then
set b8o=KQ[u5o]
set y8o="bloodlust"
set p8o=KQ[u5o]
call IssueTargetOrder(b8o,y8o,p8o)
endif
set e8o=KQ[u5o]
set q8o=$41304C59
if GetUnitAbilityLevel(e8o,q8o)>0 then
set a8o=KQ[u5o]
set n8o="innerfire"
set d8o=skc(KQ[u5o])
call IssueTargetOrder(a8o,n8o,d8o)
endif
set f8o=KQ[u5o]
set R8o=$5472616E
if GetUnitAbilityLevel(f8o,R8o)>0 then
set T8o=KQ[u5o]
set Y8o="transmute"
set G8o=LQ[u5o]
call IssueTargetOrder(T8o,Y8o,G8o)
endif
set g8o=KQ[u5o]
set h8o=$414F7377
if GetUnitAbilityLevel(g8o,h8o)>0 then
set Xto=true
else
set F8o=KQ[u5o]
set k8o=$41305548
set Xto=GetUnitAbilityLevel(F8o,k8o)>0
endif
if Xto then
set Cto=true
else
set j8o=KQ[u5o]
set x8o=$41304C51
set Cto=GetUnitAbilityLevel(j8o,x8o)>0
endif
if Cto then
set Vto=true
else
set v8o=KQ[u5o]
set m8o=$41303050
set Vto=GetUnitAbilityLevel(v8o,m8o)>0
endif
if Vto then
set Bto=true
else
set Q8o=KQ[u5o]
set W8o=$414D3679
set Bto=GetUnitAbilityLevel(Q8o,W8o)>0
endif
if Bto then
set Nto=true
else
set E8o=KQ[u5o]
set Z8o=$41304B46
set Nto=GetUnitAbilityLevel(E8o,Z8o)>0
endif
if Nto then
set U8o=KQ[u5o]
set I8o="ward"
set P8o=LQ[u5o]
call IssueTargetOrder(U8o,I8o,P8o)
endif
set A8o=KQ[u5o]
set D8o=$41727377
if GetUnitAbilityLevel(A8o,D8o)>0 then
set Mto=true
else
set H8o=KQ[u5o]
set J8o=$41305752
set Mto=GetUnitAbilityLevel(H8o,J8o)>0
endif
if Mto then
set K8o=KQ[u5o]
set L8o="Serpentward"
set X8o=LQ[u5o]
call IssueTargetOrder(K8o,L8o,X8o)
endif
set C8o=KQ[u5o]
set V8o=$41303944
if GetUnitAbilityLevel(C8o,V8o)>0 then
set B8o=KQ[u5o]
set N8o="healingward"
set M8o=KQ[u5o]
call IssueTargetOrder(B8o,N8o,M8o)
endif
set w9o=KQ[u5o]
set u9o=$414D3361
if GetUnitAbilityLevel(w9o,u9o)>0 then
set r9o=KQ[u5o]
set s9o="entanglingroots"
set t9o=YQi(LQ[u5o])
call IssueTargetOrder(r9o,s9o,t9o)
endif
set i9o=KQ[u5o]
set S9o=$41304E35
if GetUnitAbilityLevel(i9o,S9o)>0 then
set c9o=KQ[u5o]
set o9o="sleep"
set O9o=YQi(LQ[u5o])
call IssueTargetOrder(c9o,o9o,O9o)
endif
set l9o=KQ[u5o]
set b9o=$414D3338
if GetUnitAbilityLevel(l9o,b9o)>0 then
set y9o=KQ[u5o]
set p9o="slow"
set e9o=YQi(LQ[u5o])
call IssueTargetOrder(y9o,p9o,e9o)
endif
set q9o=KQ[u5o]
set a9o=$414D3363
if GetUnitAbilityLevel(q9o,a9o)>0 then
set n9o=KQ[u5o]
set d9o="chainlightning"
set f9o=YQi(LQ[u5o])
call IssueTargetOrder(n9o,d9o,f9o)
endif
set R9o=KQ[u5o]
set T9o=$414F7732
if GetUnitAbilityLevel(R9o,T9o)>0 then
set wio=true
else
set Y9o=KQ[u5o]
set G9o=$414D3269
set wio=GetUnitAbilityLevel(Y9o,G9o)>0
endif
if wio then
set uio=true
else
set g9o=KQ[u5o]
set h9o=$4130344A
set uio=GetUnitAbilityLevel(g9o,h9o)>0
endif
if uio then
set rio=true
else
set F9o=KQ[u5o]
set k9o=$41313138
set rio=GetUnitAbilityLevel(F9o,k9o)>0
endif
if rio then
set sio=true
else
set j9o=KQ[u5o]
set x9o=$414F7773
set sio=GetUnitAbilityLevel(j9o,x9o)>0
endif
if sio then
set tio=true
else
set v9o=KQ[u5o]
set m9o=$414D366A
set tio=GetUnitAbilityLevel(v9o,m9o)>0
endif
if tio then
set iio=true
else
set Q9o=KQ[u5o]
set W9o=$41304A4C
set iio=GetUnitAbilityLevel(Q9o,W9o)>0
endif
if iio then
set Sio=true
else
set E9o=KQ[u5o]
set Z9o=$4130574A
set Sio=GetUnitAbilityLevel(E9o,Z9o)>0
endif
if Sio then
set cio=true
else
set U9o=KQ[u5o]
set I9o=$41304B38
set cio=GetUnitAbilityLevel(U9o,I9o)>0
endif
if cio then
set oio=true
else
set P9o=KQ[u5o]
set A9o=$41313349
set oio=GetUnitAbilityLevel(P9o,A9o)>0
endif
if oio then
set Oio=true
else
set D9o=KQ[u5o]
set H9o=$41303449
set Oio=GetUnitAbilityLevel(D9o,H9o)>0
endif
if Oio then
set J9o=KQ[u5o]
set K9o="stomp"
call IssueImmediateOrder(J9o,K9o)
endif
set L9o=KQ[u5o]
set X9o=$41305654
if GetUnitAbilityLevel(L9o,X9o)>0 then
set lio=true
else
set C9o=KQ[u5o]
set V9o=$41305731
set lio=GetUnitAbilityLevel(C9o,V9o)>0
endif
if lio then
set bio=true
else
set B9o=KQ[u5o]
set N9o=$41303346
set bio=GetUnitAbilityLevel(B9o,N9o)>0
endif
if bio then
set yio=true
else
set M9o=KQ[u5o]
set w0o=$41303634
set yio=GetUnitAbilityLevel(M9o,w0o)>0
endif
if yio then
set pio=true
else
set u0o=KQ[u5o]
set r0o=$41304E50
set pio=GetUnitAbilityLevel(u0o,r0o)>0
endif
if pio then
set eio=true
else
set s0o=KQ[u5o]
set t0o=$41313357
set eio=GetUnitAbilityLevel(s0o,t0o)>0
endif
if eio then
set i0o=KQ[u5o]
set S0o="stomp"
call IssueImmediateOrder(i0o,S0o)
endif
set c0o=KQ[u5o]
set o0o=$41487463
if GetUnitAbilityLevel(c0o,o0o)>0 then
set qio=true
else
set O0o=KQ[u5o]
set l0o=$41304C54
set qio=GetUnitAbilityLevel(O0o,l0o)>0
endif
if qio then
set aio=true
else
set b0o=KQ[u5o]
set y0o=$41304C53
set aio=GetUnitAbilityLevel(b0o,y0o)>0
endif
if aio then
set nio=true
else
set p0o=KQ[u5o]
set e0o=$41303444
set nio=GetUnitAbilityLevel(p0o,e0o)>0
endif
if nio then
set dio=true
else
set q0o=KQ[u5o]
set a0o=$41303945
set dio=GetUnitAbilityLevel(q0o,a0o)>0
endif
if dio then
set fio=true
else
set n0o=KQ[u5o]
set d0o=$414D366A
set fio=GetUnitAbilityLevel(n0o,d0o)>0
endif
if fio then
set f0o=KQ[u5o]
set R0o="thunderclap"
call IssueImmediateOrder(f0o,R0o)
endif
set T0o=KQ[u5o]
set Y0o=$4145666B
if GetUnitAbilityLevel(T0o,Y0o)>0 then
set Rio=true
else
set G0o=KQ[u5o]
set g0o=$414D3239
set Rio=GetUnitAbilityLevel(G0o,g0o)>0
endif
if Rio then
set Tio=true
else
set h0o=KQ[u5o]
set F0o=$41313059
set Tio=GetUnitAbilityLevel(h0o,F0o)>0
endif
if Tio then
set Yio=true
else
set k0o=KQ[u5o]
set j0o=$414F4C5A
set Yio=GetUnitAbilityLevel(k0o,j0o)>0
endif
if Yio then
set Gio=true
else
set x0o=KQ[u5o]
set v0o=$41304D51
set Gio=GetUnitAbilityLevel(x0o,v0o)>0
endif
if Gio then
set gio=true
else
set m0o=KQ[u5o]
set Q0o=$41305356
set gio=GetUnitAbilityLevel(m0o,Q0o)>0
endif
if gio then
set hio=true
else
set W0o=KQ[u5o]
set E0o=$414D3761
set hio=GetUnitAbilityLevel(W0o,E0o)>0
endif
if hio then
set Z0o=KQ[u5o]
set U0o="fanofknives"
call IssueImmediateOrder(Z0o,U0o)
endif
set I0o=KQ[u5o]
set P0o=$414F636C
if GetUnitAbilityLevel(I0o,P0o)>0 then
set Fio=true
else
set A0o=KQ[u5o]
set D0o=$41305747
set Fio=GetUnitAbilityLevel(A0o,D0o)>0
endif
if Fio then
set kio=true
else
set H0o=KQ[u5o]
set J0o=$41303346
set kio=GetUnitAbilityLevel(H0o,J0o)>0
endif
if kio then
set jio=true
else
set K0o=KQ[u5o]
set L0o=$4130344E
set jio=GetUnitAbilityLevel(K0o,L0o)>0
endif
if jio then
set X0o=KQ[u5o]
set C0o="chainlightning"
set V0o=LQ[u5o]
call IssueTargetOrder(X0o,C0o,V0o)
endif
set B0o=KQ[u5o]
set N0o=$4155666E
if GetUnitAbilityLevel(B0o,N0o)>0 then
set xio=true
else
set M0o=KQ[u5o]
set w_o=$4130444B
set xio=GetUnitAbilityLevel(M0o,w_o)>0
endif
if xio then
set vio=true
else
set u_o=KQ[u5o]
set r_o=$4130344B
set vio=GetUnitAbilityLevel(u_o,r_o)>0
endif
if vio then
set mio=true
else
set s_o=KQ[u5o]
set t_o=$41313055
set mio=GetUnitAbilityLevel(s_o,t_o)>0
endif
if mio then
set Qio=true
else
set i_o=KQ[u5o]
set S_o=$41304E54
set Qio=GetUnitAbilityLevel(i_o,S_o)>0
endif
if Qio then
set Wio=true
else
set c_o=KQ[u5o]
set o_o=$41304E55
set Wio=GetUnitAbilityLevel(c_o,o_o)>0
endif
if Wio then
set O_o=KQ[u5o]
set l_o="frostnova"
set b_o=LQ[u5o]
call IssueTargetOrder(O_o,l_o,b_o)
endif
set y_o=KQ[u5o]
set p_o=$41304959
if GetUnitAbilityLevel(y_o,p_o)>0 then
set Eio=true
else
set e_o=KQ[u5o]
set q_o=$41305748
set Eio=GetUnitAbilityLevel(e_o,q_o)>0
endif
if Eio then
set Zio=true
else
set a_o=KQ[u5o]
set n_o=$41304748
set Zio=GetUnitAbilityLevel(a_o,n_o)>0
endif
if Zio then
set d_o=KQ[u5o]
set f_o="acidbomb"
set R_o=LQ[u5o]
call IssueTargetOrder(d_o,f_o,R_o)
endif
set T_o=KQ[u5o]
set Y_o=$414F7368
if GetUnitAbilityLevel(T_o,Y_o)>0 then
set Uio=true
else
set G_o=KQ[u5o]
set g_o=$41323635
set Uio=GetUnitAbilityLevel(G_o,g_o)>0
endif
if Uio then
set h_o=KQ[u5o]
set F_o="shockwave"
set k_o=LQ[u5o]
call IssueTargetOrder(h_o,F_o,k_o)
endif
set j_o=KQ[u5o]
set x_o=$41556373
if GetUnitAbilityLevel(j_o,x_o)>0 then
set Iio=true
else
set v_o=KQ[u5o]
set m_o=$41305654
set Iio=GetUnitAbilityLevel(v_o,m_o)>0
endif
if Iio then
set Pio=true
else
set Q_o=KQ[u5o]
set W_o=$41303453
set Pio=GetUnitAbilityLevel(Q_o,W_o)>0
endif
if Pio then
set Aio=true
else
set E_o=KQ[u5o]
set Z_o=$41305949
set Aio=GetUnitAbilityLevel(E_o,Z_o)>0
endif
if Aio then
set Dio=true
else
set U_o=KQ[u5o]
set I_o=$41303546
set Dio=GetUnitAbilityLevel(U_o,I_o)>0
endif
if Dio then
set Hio=true
else
set P_o=KQ[u5o]
set A_o=$41305A31
set Hio=GetUnitAbilityLevel(P_o,A_o)>0
endif
if Hio then
set Jio=true
else
set D_o=KQ[u5o]
set H_o=$4132315A
set Jio=GetUnitAbilityLevel(D_o,H_o)>0
endif
if Jio then
set J_o=KQ[u5o]
set K_o="carrionswarm"
set L_o=LQ[u5o]
call IssueTargetOrder(J_o,K_o,L_o)
endif
set X_o=KQ[u5o]
set C_o=$414E666C
if GetUnitAbilityLevel(X_o,C_o)>0 then
set Kio=true
else
set V_o=KQ[u5o]
set B_o=$41305750
set Kio=GetUnitAbilityLevel(V_o,B_o)>0
endif
if Kio then
set Lio=true
else
set N_o=KQ[u5o]
set M_o=$41304A4A
set Lio=GetUnitAbilityLevel(N_o,M_o)>0
endif
if Lio then
set Xio=true
else
set wwo=KQ[u5o]
set uwo=$41305949
set Xio=GetUnitAbilityLevel(wwo,uwo)>0
endif
if Xio then
set Cio=true
else
set rwo=KQ[u5o]
set swo=$41304351
set Cio=GetUnitAbilityLevel(rwo,swo)>0
endif
if Cio then
set two=KQ[u5o]
set iwo="forkedlightning"
set Swo=LQ[u5o]
call IssueTargetOrder(two,iwo,Swo)
endif
set cwo=LQ[u5o]
set owo=cwo
set Vio=GetUnitX(owo)
set Owo=cwo
set ASo=Vio
set DSo=GetUnitY(Owo)
set r5o=ASo
set s5o=DSo
set lwo=KQ[u5o]
set bwo=$4148627A
if GetUnitAbilityLevel(lwo,bwo)>0 then
set Bio=true
else
set ywo=KQ[u5o]
set pwo=$41305850
set Bio=GetUnitAbilityLevel(ywo,pwo)>0
endif
if Bio then
set Nio=true
else
set ewo=KQ[u5o]
set qwo=$41305830
set Nio=GetUnitAbilityLevel(ewo,qwo)>0
endif
if Nio then
set Mio=true
else
set awo=KQ[u5o]
set nwo=$41304248
set Mio=GetUnitAbilityLevel(awo,nwo)>0
endif
if Mio then
set dwo=KQ[u5o]
set fwo="blizzard"
set HSo=r5o
set JSo=s5o
set Rwo=HSo
set Two=JSo
call IssuePointOrder(dwo,fwo,Rwo,Two)
endif
set Ywo=KQ[u5o]
set Gwo=$4155696D
if GetUnitAbilityLevel(Ywo,Gwo)>0 then
set wSo=true
else
set gwo=KQ[u5o]
set hwo=$41305335
set wSo=GetUnitAbilityLevel(gwo,hwo)>0
endif
if wSo then
set uSo=true
else
set Fwo=KQ[u5o]
set kwo=$41303443
set uSo=GetUnitAbilityLevel(Fwo,kwo)>0
endif
if uSo then
set rSo=true
else
set jwo=KQ[u5o]
set xwo=$41303538
set rSo=GetUnitAbilityLevel(jwo,xwo)>0
endif
if rSo then
set sSo=true
else
set vwo=KQ[u5o]
set mwo=$41304E53
set sSo=GetUnitAbilityLevel(vwo,mwo)>0
endif
if sSo then
set tSo=true
else
set Qwo=KQ[u5o]
set Wwo=$4130354F
set tSo=GetUnitAbilityLevel(Qwo,Wwo)>0
endif
if tSo then
set iSo=true
else
set Ewo=KQ[u5o]
set Zwo=$41303450
set iSo=GetUnitAbilityLevel(Ewo,Zwo)>0
endif
if iSo then
set SSo=true
else
set Uwo=KQ[u5o]
set Iwo=$41303943
set SSo=GetUnitAbilityLevel(Uwo,Iwo)>0
endif
if SSo then
set Pwo=KQ[u5o]
set Awo="impale"
set KSo=r5o
set LSo=s5o
set Dwo=KSo
set Hwo=LSo
call IssuePointOrder(Pwo,Awo,Dwo,Hwo)
endif
set Jwo=KQ[u5o]
set Kwo=$414E6373
if GetUnitAbilityLevel(Jwo,Kwo)>0 then
set cSo=true
else
set Lwo=KQ[u5o]
set Xwo=$41305852
set cSo=GetUnitAbilityLevel(Lwo,Xwo)>0
endif
if cSo then
set oSo=true
else
set Cwo=KQ[u5o]
set Vwo=$41305757
set oSo=GetUnitAbilityLevel(Cwo,Vwo)>0
endif
if oSo then
set OSo=true
else
set Bwo=KQ[u5o]
set Nwo=$41303447
set OSo=GetUnitAbilityLevel(Bwo,Nwo)>0
endif
if OSo then
set lSo=true
else
set Mwo=KQ[u5o]
set wuo=$41305953
set lSo=GetUnitAbilityLevel(Mwo,wuo)>0
endif
if lSo then
set bSo=true
else
set uuo=KQ[u5o]
set ruo=$4130544A
set bSo=GetUnitAbilityLevel(uuo,ruo)>0
endif
if bSo then
set ySo=true
else
set suo=KQ[u5o]
set tuo=$41303941
set ySo=GetUnitAbilityLevel(suo,tuo)>0
endif
if ySo then
set pSo=true
else
set iuo=KQ[u5o]
set Suo=$41303936
set pSo=GetUnitAbilityLevel(iuo,Suo)>0
endif
if pSo then
set eSo=true
else
set cuo=KQ[u5o]
set ouo=$41304E33
set eSo=GetUnitAbilityLevel(cuo,ouo)>0
endif
if eSo then
set qSo=true
else
set Ouo=KQ[u5o]
set luo=$41304E4F
set qSo=GetUnitAbilityLevel(Ouo,luo)>0
endif
if qSo then
set aSo=true
else
set buo=KQ[u5o]
set yuo=$41304E48
set aSo=GetUnitAbilityLevel(buo,yuo)>0
endif
if aSo then
set nSo=true
else
set puo=KQ[u5o]
set euo=$41304E37
set nSo=GetUnitAbilityLevel(puo,euo)>0
endif
if nSo then
set dSo=true
else
set quo=KQ[u5o]
set auo=$4130344F
set dSo=GetUnitAbilityLevel(quo,auo)>0
endif
if dSo then
set fSo=true
else
set nuo=KQ[u5o]
set duo=$41304453
set fSo=GetUnitAbilityLevel(nuo,duo)>0
endif
if fSo then
set RSo=true
else
set fuo=KQ[u5o]
set Ruo=$41313231
set RSo=GetUnitAbilityLevel(fuo,Ruo)>0
endif
if RSo then
set Tuo=KQ[u5o]
set Yuo="clusterrockets"
set XSo=r5o
set CSo=s5o
set Guo=XSo
set guo=CSo
call IssuePointOrder(Tuo,Yuo,Guo,guo)
endif
set huo=KQ[u5o]
set Fuo=$414E7266
if GetUnitAbilityLevel(huo,Fuo)>0 then
set TSo=true
else
set kuo=KQ[u5o]
set juo=$4130334B
set TSo=GetUnitAbilityLevel(kuo,juo)>0
endif
if TSo then
set YSo=true
else
set xuo=KQ[u5o]
set vuo=$41313136
set YSo=GetUnitAbilityLevel(xuo,vuo)>0
endif
if YSo then
set GSo=true
else
set muo=KQ[u5o]
set Quo=$414D3675
set GSo=GetUnitAbilityLevel(muo,Quo)>0
endif
if GSo then
set Wuo=KQ[u5o]
set Euo="rainoffire"
set VSo=r5o
set BSo=s5o
set Zuo=VSo
set Uuo=BSo
call IssuePointOrder(Wuo,Euo,Zuo,Uuo)
endif
set Iuo=KQ[u5o]
set Puo=$4155696E
if GetUnitAbilityLevel(Iuo,Puo)>0 then
set gSo=true
else
set Auo=KQ[u5o]
set Duo=$41303645
set gSo=GetUnitAbilityLevel(Auo,Duo)>0
endif
if gSo then
set hSo=true
else
set Huo=KQ[u5o]
set Juo=$4130584F
set hSo=GetUnitAbilityLevel(Huo,Juo)>0
endif
if hSo then
set Kuo=KQ[u5o]
set Luo="inferno"
set NSo=r5o
set MSo=s5o
set Xuo=NSo
set Cuo=MSo
call IssuePointOrder(Kuo,Luo,Xuo,Cuo)
endif
set Vuo=KQ[u5o]
set Buo=$414D3762
if GetUnitAbilityLevel(Vuo,Buo)>0 then
set FSo=true
else
set Nuo=KQ[u5o]
set Muo=$41436266
set FSo=GetUnitAbilityLevel(Nuo,Muo)>0
endif
if FSo then
set wro=KQ[u5o]
set uro="breathoffire"
set wco=r5o
set uco=s5o
set rro=wco
set sro=uco
call IssuePointOrder(wro,uro,rro,sro)
endif
set tro=KQ[u5o]
set iro=$414D3763
if GetUnitAbilityLevel(tro,iro)>0 then
set Sro=KQ[u5o]
set cro="drunkenhaze"
set rco=r5o
set sco=s5o
set oro=rco
set Oro=sco
call IssuePointOrder(Sro,cro,oro,Oro)
endif
set lro=KQ[u5o]
set bro=$414E7369
if GetUnitAbilityLevel(lro,bro)>0 then
set yro=KQ[u5o]
set pro="silence"
set tco=r5o
set ico=s5o
set ero=tco
set qro=ico
call IssuePointOrder(yro,pro,ero,qro)
endif
set aro=KQ[u5o]
if GetUnitTypeId(aro)==$45776172 then
set nro=KQ[u5o]
set dro=$41313433
set kSo=GetUnitAbilityLevel(nro,dro)>0
else
set kSo=false
endif
if kSo then
set fro=KQ[u5o]
set Rro=fro
set Tro=UNIT_STATE_MANA
set jSo=GetUnitState(Rro,Tro)>=100.
else
set jSo=false
endif
if jSo then
set Yro=KQ[u5o]
set Gro=Yro
set gro=UNIT_STATE_LIFE
set xSo=GetUnitState(Gro,gro)
set hro=KQ[u5o]
set Fro=hro
set kro=UNIT_STATE_MAX_LIFE
set vSo=xSo<=GetUnitState(Fro,kro)*.8
else
set vSo=false
endif
if vSo then
set jro=KQ[u5o]
set xro=852589
call IssueImmediateOrderById(jro,xro)
endif
set vro=KQ[u5o]
set mro=$414E736F
if GetUnitAbilityLevel(vro,mro)>0 then
set Qro=KQ[u5o]
set Wro="soulburn"
set Ero=YQi(LQ[u5o])
call IssueTargetOrder(Qro,Wro,Ero)
endif
set Zro=KQ[u5o]
set Uro=$41323158
if GetUnitAbilityLevel(Zro,Uro)>0 then
set Iro=KQ[u5o]
set Pro="bloodlust"
set Aro=PGl(KQ[u5o])
call IssueTargetOrder(Iro,Pro,Aro)
endif
set Dro=KQ[u5o]
set Hro=$41313130
if GetUnitAbilityLevel(Dro,Hro)>0 then
set Jro=KQ[u5o]
set Kro=Jro
set Lro=UNIT_STATE_LIFE
set mSo=GetUnitState(Kro,Lro)
set Xro=KQ[u5o]
set Cro=Xro
set Vro=UNIT_STATE_MAX_LIFE
set QSo=mSo<=GetUnitState(Cro,Vro)*.85
else
set QSo=false
endif
if QSo then
set Bro=KQ[u5o]
set Nro="rejuvination"
set Mro=KQ[u5o]
call IssueTargetOrder(Bro,Nro,Mro)
endif
set wso=KQ[u5o]
set uso=$41304B45
if GetUnitAbilityLevel(wso,uso)>0 then
set rso=KQ[u5o]
set sso="frostarmor"
set tso=KQ[u5o]
call IssueTargetOrder(rso,sso,tso)
endif
set iso=KQ[u5o]
set Sso=$41323030
if GetUnitAbilityLevel(iso,Sso)>0 then
set cso=KQ[u5o]
set oso="creepthunderbolt"
set Oso=YQi(LQ[u5o])
call IssueTargetOrder(cso,oso,Oso)
endif
set lso=KQ[u5o]
set bso=$4132314A
if GetUnitAbilityLevel(lso,bso)>0 then
set WSo=true
else
set yso=KQ[u5o]
set pso=$41323547
set WSo=GetUnitAbilityLevel(yso,pso)>0
endif
if WSo then
set eso=KQ[u5o]
set qso="innerfire"
set aso=KQ[u5o]
call IssueTargetOrder(eso,qso,aso)
endif
set nso=KQ[u5o]
set dso=$4130584C
if GetUnitAbilityLevel(nso,dso)>0 then
set ESo=true
else
set fso=KQ[u5o]
set Rso=$41304B53
set ESo=GetUnitAbilityLevel(fso,Rso)>0
endif
if ESo then
set ZSo=true
else
set Tso=KQ[u5o]
set Yso=$41305530
set ZSo=GetUnitAbilityLevel(Tso,Yso)>0
endif
if ZSo then
set Gso=KQ[u5o]
set gso="holybolt"
set hso=PGy(KQ[u5o])
call IssueTargetOrder(Gso,gso,hso)
endif
set Fso=KQ[u5o]
set kso=$41436463
if GetUnitAbilityLevel(Fso,kso)>0 then
set jso=KQ[u5o]
set xso="deathcoil"
set vso=PGy(KQ[u5o])
call IssueTargetOrder(jso,xso,vso)
endif
set mso=KQ[u5o]
set Qso=$414E6162
if GetUnitAbilityLevel(mso,Qso)>0 then
set Wso=KQ[u5o]
set Eso="acidbomb"
set Zso=oIl(LQ[u5o])
call IssueTargetOrder(Wso,Eso,Zso)
endif
set Uso=LQ[u5o]
set Iso=$41305858
if GetUnitAbilityLevel(Uso,Iso)>0 then
set Pso=LQ[u5o]
set Aso="soulburn"
set Dso=KQ[u5o]
call IssueTargetOrder(Pso,Aso,Dso)
endif
set Hso=KQ[u5o]
if GetUnitTypeId(Hso)==$4F303344 then
set Jso=KQ[u5o]
set Kso=$41313532
set USo=GetUnitAbilityLevel(Jso,Kso)>0
else
set USo=false
endif
if USo then
set Lso=KQ[u5o]
set Xso=Lso
set Cso=UNIT_STATE_LIFE
set ISo=GetUnitState(Xso,Cso)
set Vso=KQ[u5o]
set Bso=Vso
set Nso=UNIT_STATE_MAX_LIFE
set PSo=ISo<=GetUnitState(Bso,Nso)*.5
else
set PSo=false
endif
if PSo then
set Mso=KQ[u5o]
set wto="drain"
set uto=YQi(LQ[u5o])
call IssueTargetOrder(Mso,wto,uto)
endif
set rto=KQ[u5o]
set sto=$41436262
if GetUnitAbilityLevel(rto,sto)>0 then
set tto=KQ[u5o]
set ito="bloodlust"
set Sto=skc(KQ[u5o])
call IssueTargetOrder(tto,ito,Sto)
endif
set t5o=null
set S5o=null
set o5o=null
set l5o=null
set y5o=null
set e5o=null
set a5o=null
set d5o=null
set R5o=null
set Y5o=null
set g5o=null
set F5o=null
set j5o=null
set v5o=null
set Q5o=null
set E5o=null
set U5o=null
set P5o=null
set D5o=null
set J5o=null
set L5o=null
set C5o=null
set B5o=null
set M5o=null
set u6o=null
set s6o=null
set i6o=null
set c6o=null
set O6o=null
set b6o=null
set p6o=null
set q6o=null
set n6o=null
set f6o=null
set T6o=null
set G6o=null
set h6o=null
set k6o=null
set x6o=null
set m6o=null
set W6o=null
set Z6o=null
set I6o=null
set A6o=null
set H6o=null
set K6o=null
set X6o=null
set V6o=null
set N6o=null
set w7o=null
set r7o=null
set t7o=null
set S7o=null
set o7o=null
set l7o=null
set y7o=null
set e7o=null
set a7o=null
set d7o=null
set R7o=null
set Y7o=null
set g7o=null
set h7o=null
set k7o=null
set x7o=null
set m7o=null
set Q7o=null
set E7o=null
set U7o=null
set I7o=null
set A7o=null
set H7o=null
set J7o=null
set L7o=null
set C7o=null
set B7o=null
set M7o=null
set u8o=null
set s8o=null
set t8o=null
set S8o=null
set o8o=null
set O8o=null
set b8o=null
set p8o=null
set e8o=null
set a8o=null
set d8o=null
set f8o=null
set T8o=null
set G8o=null
set g8o=null
set F8o=null
set j8o=null
set v8o=null
set Q8o=null
set E8o=null
set U8o=null
set P8o=null
set A8o=null
set H8o=null
set K8o=null
set X8o=null
set C8o=null
set B8o=null
set M8o=null
set w9o=null
set r9o=null
set t9o=null
set i9o=null
set c9o=null
set O9o=null
set l9o=null
set y9o=null
set e9o=null
set q9o=null
set n9o=null
set f9o=null
set R9o=null
set Y9o=null
set g9o=null
set F9o=null
set j9o=null
set v9o=null
set Q9o=null
set E9o=null
set U9o=null
set P9o=null
set D9o=null
set J9o=null
set L9o=null
set C9o=null
set B9o=null
set M9o=null
set u0o=null
set s0o=null
set i0o=null
set c0o=null
set O0o=null
set b0o=null
set p0o=null
set q0o=null
set n0o=null
set f0o=null
set T0o=null
set G0o=null
set h0o=null
set k0o=null
set x0o=null
set m0o=null
set W0o=null
set Z0o=null
set I0o=null
set A0o=null
set H0o=null
set K0o=null
set X0o=null
set V0o=null
set B0o=null
set M0o=null
set u_o=null
set s_o=null
set i_o=null
set c_o=null
set O_o=null
set b_o=null
set y_o=null
set e_o=null
set a_o=null
set d_o=null
set R_o=null
set T_o=null
set G_o=null
set h_o=null
set k_o=null
set j_o=null
set v_o=null
set Q_o=null
set E_o=null
set U_o=null
set P_o=null
set D_o=null
set J_o=null
set L_o=null
set X_o=null
set V_o=null
set N_o=null
set wwo=null
set rwo=null
set two=null
set Swo=null
set cwo=null
set owo=null
set Owo=null
set lwo=null
set ywo=null
set ewo=null
set awo=null
set dwo=null
set Ywo=null
set gwo=null
set Fwo=null
set jwo=null
set vwo=null
set Qwo=null
set Ewo=null
set Uwo=null
set Pwo=null
set Jwo=null
set Lwo=null
set Cwo=null
set Bwo=null
set Mwo=null
set uuo=null
set suo=null
set iuo=null
set cuo=null
set Ouo=null
set buo=null
set puo=null
set quo=null
set nuo=null
set fuo=null
set Tuo=null
set huo=null
set kuo=null
set xuo=null
set muo=null
set Wuo=null
set Iuo=null
set Auo=null
set Huo=null
set Kuo=null
set Vuo=null
set Nuo=null
set wro=null
set tro=null
set Sro=null
set lro=null
set yro=null
set aro=null
set nro=null
set fro=null
set Rro=null
set Tro=null
set Yro=null
set Gro=null
set gro=null
set hro=null
set Fro=null
set kro=null
set jro=null
set vro=null
set Qro=null
set Ero=null
set Zro=null
set Iro=null
set Aro=null
set Dro=null
set Jro=null
set Kro=null
set Lro=null
set Xro=null
set Cro=null
set Vro=null
set Bro=null
set Mro=null
set wso=null
set rso=null
set tso=null
set iso=null
set cso=null
set Oso=null
set lso=null
set yso=null
set eso=null
set aso=null
set nso=null
set fso=null
set Tso=null
set Gso=null
set hso=null
set Fso=null
set jso=null
set vso=null
set mso=null
set Wso=null
set Zso=null
set Uso=null
set Pso=null
set Dso=null
set Hso=null
set Jso=null
set Lso=null
set Xso=null
set Cso=null
set Vso=null
set Bso=null
set Nso=null
set Mso=null
set uto=null
set rto=null
set tto=null
set Sto=null
endfunction
function Sqt takes integer Pbt,string Abt returns nothing
local integer Dbt
local integer Hbt
local unit Jbt
local string Kbt
local unit Lbt
local unit Xbt
local string Cbt
local unit Vbt
local string Bbt
local unit Nbt
local string Mbt
local unit wyt
local string uyt
local unit ryt
local string syt
local widget tyt
local unit iyt
local integer Syt
local unit cyt
local string oyt
local widget Oyt
local unit lyt
local string byt
local widget yyt
local unit pyt
local string eyt
local widget qyt
local unit ayt
local string nyt
local widget dyt
local unit fyt
local unit Ryt
local string Tyt
local widget Yyt
local unit Gyt
local string gyt
local widget hyt
local unit Fyt
local integer kyt
local unit jyt
local integer xyt
local unit vyt
local integer myt
local unit Qyt
local integer Wyt
local unit Eyt
local integer Zyt
local unit Uyt
local string Iyt
local widget Pyt
local unit Ayt
local integer Dyt
local unit Hyt
local integer Jyt
local unit Kyt
local integer Lyt
local unit Xyt
local integer Cyt
local unit Vyt
local integer Byt
local unit Nyt
local string Myt
local widget wpt
local unit upt
local integer rpt
local unit spt
local string tpt
local widget ipt
local unit Spt
local integer cpt
local unit opt
local string Opt
local widget lpt
local unit bpt
local integer ypt
local unit ppt
local integer ept
local unit qpt
local string apt
local widget npt
local unit dpt
local integer fpt
local unit Rpt
local string Tpt
local widget Ypt
local unit Gpt
local integer gpt
local unit hpt
local string Fpt
local widget kpt
local unit jpt
local unit xpt
local string vpt
local string mpt
local integer Qpt
local real Wpt
local integer Ept
local string Zpt
local unit Upt
local integer Ipt
local unit Ppt
local integer Apt
local unit Dpt
local integer Hpt
local unit Jpt
local string Kpt
local real Lpt
local real Xpt
local unit Cpt
local unit Vpt
local unit Bpt
local unit Npt
local unit Mpt
local unit wet
local unit uet
local unit ret
local unit tet
local unit iet
local unitstate Set
local unit cet
local integer oet
local unit Oet
local integer let
local unit bet
local integer yet
local unit pet
local string eet
local widget qet
local unit aet
local integer net
local unit det
local unit fet
local unit Ret
local player Tet
local unit Yet
local unit Get
local string get
local widget het
local unit Fet
local unit ket
local unit jet
local player xet
local unit vet
local unit met
local string Qet
local widget Wet
local boolean Eet
local boolean Zet
local boolean Uet
local boolean Iet
local boolean Pet
local boolean Aet
local boolean Det
local boolean Het
local boolean Jet
local boolean Ket
local boolean Let
local real Xet
local boolean Cet
local boolean Vet
local boolean Bet
local boolean Net
local boolean Met
local boolean wqt
local boolean uqt
local boolean rqt
local boolean sqt
local real tqt
local real iqt
set aW[qW]=Abt
set qW=qW+1
set Jbt=XQ[Pbt]
set Kbt="berserk"
call IssueImmediateOrder(Jbt,Kbt)
set Lbt=XQ[Pbt]
if GetUnitTypeId(Lbt)==$7562616E then
set Xbt=XQ[Pbt]
set Cbt="Locustswarm"
call IssueImmediateOrder(Xbt,Cbt)
endif
set Vbt=CQ[Pbt]
set Bbt="spiritofvengeance"
call IssueImmediateOrder(Vbt,Bbt)
set Nbt=CQ[Pbt]
set Mbt="avatar"
call IssueImmediateOrder(Nbt,Mbt)
set wyt=CQ[Pbt]
set uyt="taunt"
call IssueImmediateOrder(wyt,uyt)
set ryt=XQ[Pbt]
set syt="creepthunderbolt"
set tyt=CQ[Pbt]
call IssueTargetOrder(ryt,syt,tyt)
set iyt=XQ[Pbt]
set Syt=$414D6233
if GetUnitAbilityLevel(iyt,Syt)>0 then
set cyt=XQ[Pbt]
set oyt="frostnova"
set Oyt=CQ[Pbt]
call IssueTargetOrder(cyt,oyt,Oyt)
endif
set lyt=XQ[Pbt]
set byt="acidbomb"
set yyt=CQ[Pbt]
call IssueTargetOrder(lyt,byt,yyt)
set pyt=XQ[Pbt]
set eyt="transmute"
set qyt=CQ[Pbt]
call IssueTargetOrder(pyt,eyt,qyt)
set ayt=XQ[Pbt]
set nyt="forkedlightning"
set dyt=CQ[Pbt]
call IssueTargetOrder(ayt,nyt,dyt)
set fyt=XQ[Pbt]
if GetUnitTypeId(fyt)!=$68303146 then
set Ryt=XQ[Pbt]
set Tyt="shadowstrike"
set Yyt=PGl(CQ[Pbt])
call IssueTargetOrder(Ryt,Tyt,Yyt)
endif
set Gyt=XQ[Pbt]
set gyt="unholyfrenzy"
set hyt=XQ[Pbt]
call IssueTargetOrder(Gyt,gyt,hyt)
set Fyt=XQ[Pbt]
set kyt=$4131364D
if GetUnitAbilityLevel(Fyt,kyt)>0 then
set Eet=true
else
set jyt=XQ[Pbt]
set xyt=$41313654
set Eet=GetUnitAbilityLevel(jyt,xyt)>0
endif
if Eet then
set Zet=true
else
set vyt=XQ[Pbt]
set myt=$41304437
set Zet=GetUnitAbilityLevel(vyt,myt)>0
endif
if Zet then
set Uet=true
else
set Qyt=XQ[Pbt]
set Wyt=$41304B4A
set Uet=GetUnitAbilityLevel(Qyt,Wyt)>0
endif
if Uet then
set Iet=true
else
set Eyt=XQ[Pbt]
set Zyt=$4131384A
set Iet=GetUnitAbilityLevel(Eyt,Zyt)>0
endif
if Iet then
set Uyt=XQ[Pbt]
set Iyt="antimagicshell"
set Pyt=skc(XQ[Pbt])
call IssueTargetOrder(Uyt,Iyt,Pyt)
endif
set Ayt=CQ[Pbt]
set Dyt=$41303232
if GetUnitAbilityLevel(Ayt,Dyt)>0 then
set Pet=true
else
set Hyt=CQ[Pbt]
set Jyt=$41303144
set Pet=GetUnitAbilityLevel(Hyt,Jyt)>0
endif
if Pet then
set Aet=true
else
set Kyt=CQ[Pbt]
set Lyt=$41305756
set Aet=GetUnitAbilityLevel(Kyt,Lyt)>0
endif
if Aet then
set Det=true
else
set Xyt=CQ[Pbt]
set Cyt=$41304A4E
set Det=GetUnitAbilityLevel(Xyt,Cyt)>0
endif
if Det then
set Het=true
else
set Vyt=CQ[Pbt]
set Byt=$41303233
set Het=GetUnitAbilityLevel(Vyt,Byt)>0
endif
if Het then
set Nyt=CQ[Pbt]
set Myt="innerfire"
set wpt=CQ[Pbt]
call IssueTargetOrder(Nyt,Myt,wpt)
endif
set upt=XQ[Pbt]
set rpt=$41323947
if GetUnitAbilityLevel(upt,rpt)>0 then
set spt=XQ[Pbt]
set tpt="bloodlust"
set ipt=skc(XQ[Pbt])
call IssueTargetOrder(spt,tpt,ipt)
endif
set Spt=XQ[Pbt]
set cpt=$41323738
if GetUnitAbilityLevel(Spt,cpt)>0 then
set opt=XQ[Pbt]
set Opt="innerfire"
set lpt=skc(XQ[Pbt])
call IssueTargetOrder(opt,Opt,lpt)
endif
set bpt=XQ[Pbt]
set ypt=$4132314A
if GetUnitAbilityLevel(bpt,ypt)>0 then
set Jet=true
else
set ppt=XQ[Pbt]
set ept=$41323547
set Jet=GetUnitAbilityLevel(ppt,ept)>0
endif
if Jet then
set qpt=XQ[Pbt]
set apt="innerfire"
set npt=XQ[Pbt]
call IssueTargetOrder(qpt,apt,npt)
endif
set dpt=XQ[Pbt]
set fpt=$41323158
if GetUnitAbilityLevel(dpt,fpt)>0 then
set Rpt=XQ[Pbt]
set Tpt="bloodlust"
set Ypt=PGl(XQ[Pbt])
call IssueTargetOrder(Rpt,Tpt,Ypt)
endif
set Gpt=XQ[Pbt]
set gpt=$41305A43
if GetUnitAbilityLevel(Gpt,gpt)>0 then
set hpt=XQ[Pbt]
set Fpt="parasite"
set kpt=PGl(XQ[Pbt])
call IssueTargetOrder(hpt,Fpt,kpt)
endif
set jpt=XQ[Pbt]
if GetUnitTypeId(jpt)==$6F6B6F64 then
set xpt=XQ[Pbt]
set vpt="bearform"
call IssueImmediateOrder(xpt,vpt)
set mpt="when calling alloc_CallbackSingle_doAfter_doAfter_UseCast in UseCast, line 358"
set aW[qW]=mpt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Qpt=fF
set RF[Qpt]=773
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_UseCast.","when calling error in UseCast, line 358")
set Qpt=0
endif
else
set dF=dF-1
set Qpt=nF[dF]
set RF[Qpt]=773
endif
set qW=qW-1
set Dbt=Qpt
set VQ[Dbt]=XQ[Pbt]
set Wpt=30.
set Ept=Dbt
set Zpt="when calling doAfter in UseCast, line 358"
set aW[qW]=Zpt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Wpt,Ept,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set Upt=XQ[Pbt]
set Ipt=$41687764
if GetUnitAbilityLevel(Upt,Ipt)>0 then
set Ket=true
else
set Ppt=XQ[Pbt]
set Apt=$41414141
set Ket=GetUnitAbilityLevel(Ppt,Apt)>0
endif
if Ket then
set Let=true
else
set Dpt=XQ[Pbt]
set Hpt=$4130524E
set Let=GetUnitAbilityLevel(Dpt,Hpt)>0
endif
if Let then
set Jpt=XQ[Pbt]
set Kpt="healingward"
set Cpt=skc(XQ[Pbt])
set Xet=GetUnitX(Cpt)
set Vpt=skc(XQ[Pbt])
set tqt=Xet
set iqt=GetUnitY(Vpt)
set Lpt=tqt
set Xpt=iqt
call IssuePointOrder(Jpt,Kpt,Lpt,Xpt)
endif
set Bpt=CQ[Pbt]
if GetUnitTypeId(Bpt)==$6E303244 then
set Cet=true
else
set Npt=CQ[Pbt]
set Cet=GetUnitTypeId(Npt)==$6E62656C
endif
if Cet then
set Vet=true
else
set Mpt=CQ[Pbt]
set Vet=GetUnitTypeId(Mpt)==$686D7072
endif
if Vet then
set Bet=true
else
set wet=CQ[Pbt]
set Bet=GetUnitTypeId(wet)==$656E6563
endif
if Bet then
set Net=true
else
set uet=CQ[Pbt]
set Net=GetUnitTypeId(uet)==$68303237
endif
if Net then
set Met=true
else
set ret=CQ[Pbt]
set Met=GetUnitTypeId(ret)==$68737074
endif
if Met and $414D316B>0 then
set tet=CQ[Pbt]
set iet=tet
set Set=UNIT_STATE_MANA
set wqt=GetUnitState(iet,Set)>=10.
else
set wqt=false
endif
if wqt then
set cet=CQ[Pbt]
set oet=852589
call IssueImmediateOrderById(cet,oet)
endif
set Oet=CQ[Pbt]
set let=$414E656E
if GetUnitAbilityLevel(Oet,let)>0 then
set uqt=true
else
set bet=CQ[Pbt]
set yet=$41323258
set uqt=GetUnitAbilityLevel(bet,yet)>0
endif
if uqt then
set pet=CQ[Pbt]
set eet="ensnare"
set qet=XQ[Pbt]
call IssueTargetOrder(pet,eet,qet)
endif
set aet=XQ[Pbt]
set net=$41323753
if GetUnitAbilityLevel(aet,net)>0 then
set Hbt=GetRandomInt(1,2)
if Hbt==1 then
set det=CQ[Pbt]
set fet=XQ[Pbt]
if det!=null and fet!=null then
set Ret=det
set Yet=fet
set Tet=GetOwningPlayer(Yet)
set rqt=Ret!=null and IsUnitAlly(Ret,Tet)
else
set rqt=false
endif
if rqt then
set Get=XQ[Pbt]
set get="deathcoil"
set het=PGy(CQ[Pbt])
call IssueTargetOrder(Get,get,het)
endif
else
set Fet=CQ[Pbt]
set ket=XQ[Pbt]
if Fet!=null and ket!=null then
set jet=Fet
set vet=ket
set xet=GetOwningPlayer(vet)
set sqt=IsUnitEnemy(jet,xet)
else
set sqt=false
endif
if sqt then
set met=XQ[Pbt]
set Qet="deathcoil"
set Wet=CQ[Pbt]
call IssueTargetOrder(met,Qet,Wet)
endif
endif
endif
set qW=qW-1
set Jbt=null
set Lbt=null
set Xbt=null
set Vbt=null
set Nbt=null
set wyt=null
set ryt=null
set tyt=null
set iyt=null
set cyt=null
set Oyt=null
set lyt=null
set yyt=null
set pyt=null
set qyt=null
set ayt=null
set dyt=null
set fyt=null
set Ryt=null
set Yyt=null
set Gyt=null
set hyt=null
set Fyt=null
set jyt=null
set vyt=null
set Qyt=null
set Eyt=null
set Uyt=null
set Pyt=null
set Ayt=null
set Hyt=null
set Kyt=null
set Xyt=null
set Vyt=null
set Nyt=null
set wpt=null
set upt=null
set spt=null
set ipt=null
set Spt=null
set opt=null
set lpt=null
set bpt=null
set ppt=null
set qpt=null
set npt=null
set dpt=null
set Rpt=null
set Ypt=null
set Gpt=null
set hpt=null
set kpt=null
set jpt=null
set xpt=null
set Upt=null
set Ppt=null
set Dpt=null
set Jpt=null
set Cpt=null
set Vpt=null
set Bpt=null
set Npt=null
set Mpt=null
set wet=null
set uet=null
set ret=null
set tet=null
set iet=null
set Set=null
set cet=null
set Oet=null
set bet=null
set pet=null
set qet=null
set aet=null
set det=null
set fet=null
set Ret=null
set Tet=null
set Yet=null
set Get=null
set het=null
set Fet=null
set ket=null
set jet=null
set xet=null
set vet=null
set met=null
set Wet=null
endfunction
function TUw takes integer lUw returns nothing
local group bUw=CreateGroup()
local filterfunc yUw=Filter(btw)
local unit pUw
local group eUw
local group qUw
local group aUw
local unit nUw
local unit dUw
local group fUw
local boolexpr RUw
call GroupEnumUnitsInRect(bUw,bj_mapInitialPlayableArea,yUw)
set eUw=bUw
loop
set qUw=eUw
exitwhen not (FirstOfGroup(qUw)!=null)
set aUw=eUw
set nUw=FirstOfGroup(aUw)
call GroupRemoveUnit(aUw,nUw)
set pUw=nUw
set dUw=pUw
call KillUnit(dUw)
endloop
set fUw=bUw
call DestroyGroup(fUw)
set RUw=yUw
call DestroyBoolExpr(RUw)
set Xb=null
set Cb=null
set bUw=null
set yUw=null
set pUw=null
set eUw=null
set qUw=null
set aUw=null
set nUw=null
set dUw=null
set fUw=null
set RUw=null
endfunction
function Tqe takes integer yqe returns nothing
local unit pqe=CreateUnit(qv[yqe],$75303030,av[yqe],nv[yqe],GetUnitFacing(dv[yqe])-10.)
local unit eqe=pqe
local real qqe=5.
local unit aqe
local integer nqe
local unit dqe
local integer fqe
local integer Rqe
call UnitApplyTimedLife(eqe,$42544C46,qqe)
set aqe=pqe
set nqe=$4132374A
call UnitAddAbility(aqe,nqe)
set dqe=pqe
set fqe=$4132374A
set Rqe=fv[yqe]
call SetUnitAbilityLevel(dqe,fqe,Rqe)
call IssuePointOrder(pqe,"carrionswarm",Rv[yqe]-10.,Tv[yqe]-10.)
set pqe=null
set eqe=null
set aqe=null
set dqe=null
endfunction
function U0u takes integer M9u,string w0u returns nothing
local integer u0u
local unit r0u
local integer s0u
local unit t0u
local integer i0u
local integer S0u
local unit c0u
local integer o0u
local unit O0u
local integer l0u
local integer b0u
local unit y0u
local integer p0u
local unit e0u
local integer q0u
local integer a0u
local unit n0u
local integer d0u
local unit f0u
local integer R0u
local integer T0u
local unit Y0u
local integer G0u
local unit g0u
local integer h0u
local unit F0u
local string k0u
local integer j0u
local real x0u
local integer v0u
local string m0u
local timer Q0u
local real W0u
local integer E0u
local string Z0u
set aW[qW]=w0u
set qW=qW+1
set ul=CreateUnit(Ik[M9u],$55303141,Pk[M9u],Ak[M9u],GetUnitFacing(Dk[M9u]))
call SetHeroLevel(ul,28,true)
set r0u=ul
set s0u=$41323034
call UnitAddAbility(r0u,s0u)
set t0u=ul
set i0u=$41323034
set S0u=7
call SetUnitAbilityLevel(t0u,i0u,S0u)
set c0u=ul
set o0u=$414E736F
call UnitAddAbility(c0u,o0u)
set O0u=ul
set l0u=$414E736F
set b0u=7
call SetUnitAbilityLevel(O0u,l0u,b0u)
set y0u=ul
set p0u=$414D3761
call UnitAddAbility(y0u,p0u)
set e0u=ul
set q0u=$414D3761
set a0u=7
call SetUnitAbilityLevel(e0u,q0u,a0u)
set n0u=ul
set d0u=$41323952
call UnitAddAbility(n0u,d0u)
set f0u=ul
set R0u=$41323952
set T0u=7
call SetUnitAbilityLevel(f0u,R0u,T0u)
set Y0u=ul
set G0u=$494D306F
call UnitAddItemById(Y0u,G0u)
call dYr(ul)
set g0u=wl
set h0u=$41323935
call UnitRemoveAbility(g0u,h0u)
set F0u=wl
call DisplayTextToPlayer(GetOwningPlayer(F0u),0.,0.,"You have summoned Bonelord! You have to wait for a while until the Bonelord can be summoned again")
set il=600
set k0u="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 3021"
set aW[qW]=k0u
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set j0u=fF
set RF[j0u]=781
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 3021")
set j0u=0
endif
else
set dF=dF-1
set j0u=nF[dF]
set RF[j0u]=781
endif
set qW=qW-1
set u0u=j0u
set x0u=600.
set v0u=u0u
set m0u="when calling doAfter in ArmyOfSkeletons, line 3021"
set aW[qW]=m0u
set qW=qW+1
set Q0u=F6c("when calling getTimer in ClosureTimers, line 27")
set W0u=x0u
set E0u=v0u
set Z0u="when calling doAfter in ClosureTimers, line 27"
set aW[qW]=Z0u
set qW=qW+1
call P2s(E0u,Q0u,W0u,"when calling start in ClosureTimers, line 16")
set qW=qW-1
set qW=qW-1
set qW=qW-1
set r0u=null
set t0u=null
set c0u=null
set O0u=null
set y0u=null
set e0u=null
set n0u=null
set f0u=null
set Y0u=null
set g0u=null
set F0u=null
set Q0u=null
endfunction
function Uqp takes integer gqp returns nothing
local integer hqp=1
local unit Fqp
local unit kqp
local unit jqp
local unit xqp
local unit vqp
local integer mqp
local unit Qqp
local real Wqp
local player Eqp
local real Zqp
loop
exitwhen hqp>13
set kqp=im[gqp]
set Eqp=GetOwningPlayer(kqp)
set jqp=im[gqp]
set Zqp=GetUnitX(jqp)
set xqp=im[gqp]
set Fqp=CreateUnit(Eqp,$75303030,Zqp,GetUnitY(xqp),270.)
set vqp=Fqp
set mqp=$41304C41
call UnitAddAbility(vqp,mqp)
call IssuePointOrder(Fqp,"carrionswarm",Sm[gqp]+100.*Cos(45.+I2R(hqp)*30.*bj_DEGTORAD),cm[gqp]+100.*Sin(45.+I2R(hqp)*30.*bj_DEGTORAD))
set Qqp=Fqp
set Wqp=3.
call UnitApplyTimedLife(Qqp,$42544C46,Wqp)
set hqp=hqp+1
endloop
set Fqp=null
set kqp=null
set jqp=null
set xqp=null
set vqp=null
set Qqp=null
set Eqp=null
endfunction
function VUy takes integer YUy returns nothing
local rect FUy=bj_mapInitialPlayableArea
local boolexpr kUy=qe
local group jUy=CreateGroup()
local group GUy
local unit gUy
local group hUy
local group xUy
local group vUy
local unit mUy
local unit QUy
local player WUy
local integer EUy
local integer ZUy
local integer UUy
local widget IUy
local real PUy
local real AUy
local player DUy
local integer HUy
local integer JUy
local integer KUy
local widget LUy
local real XUy
local real CUy
call GroupEnumUnitsInRect(jUy,FUy,kUy)
call DestroyBoolExpr(kUy)
set GUy=jUy
set hUy=GUy
loop
set xUy=hUy
exitwhen not (FirstOfGroup(xUy)!=null)
set vUy=hUy
set mUy=FirstOfGroup(vUy)
call GroupRemoveUnit(vUy,mUy)
set gUy=mUy
set QUy=gUy
if GetOwningPlayer(QUy)==Uv[YUy] then
set WUy=Iv[YUy]
set EUy=$414D637B
set ZUy=2
set UUy=852119
set IUy=gUy
set DUy=WUy
set HUy=EUy
set JUy=ZUy
set KUy=UUy
set LUy=IUy
set XUy=GetWidgetX(IUy)
set CUy=GetWidgetY(IUy)
set PUy=XUy
set AUy=CUy
call I9S(DUy,HUy,JUy,KUy,LUy,PUy,AUy,0.)
endif
endloop
set GUy=null
set gUy=null
set hUy=null
set FUy=null
set kUy=null
set jUy=null
set xUy=null
set vUy=null
set mUy=null
set QUy=null
set WUy=null
set IUy=null
set DUy=null
set LUy=null
endfunction
function WtS takes integer etS,string qtS returns nothing
local integer atS
local integer ntS
local integer dtS
local string ftS
local integer RtS
local string TtS
local integer YtS
local integer GtS
local integer gtS
local string htS
local integer FtS
local string ktS
local string jtS
local integer xtS
local real vtS
local integer mtS
local string QtS
set aW[qW]=qtS
set qW=qW+1
set dtS=gY
set ftS="when calling shuffle in NewRandom, line 108"
set aW[qW]=ftS
set qW=qW+1
if ok[dtS]==0 then
if dtS==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(dtS,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set RtS=gY
set TtS="when calling getFirst in NewRandom, line 109"
set aW[qW]=TtS
set qW=qW+1
if ok[RtS]==0 then
if RtS==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set GtS=RtS
set YtS=Hv[Kv[Vv[GtS]]]
set qW=qW-1
set atS=YtS
set gtS=Dm[etS]
set htS="when calling numRace in NewRandom, line 110"
set aW[qW]=htS
set qW=qW+1
if gtS==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if gtS==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if gtS==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if gtS==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if gtS==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if gtS==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if gtS==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if gtS==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if gtS==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if gtS==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if gtS==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if gtS==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if gtS==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if gtS==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if gtS==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if gtS==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if gtS==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if gtS==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if gtS==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if gtS==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(gu,atS,"when calling pickRaceRandom in NewRandom, line 111")
call eWp(gY,atS,"when calling remove in NewRandom, line 112")
set FtS=gY
set ktS="when calling shuffle in NewRandom, line 113"
set aW[qW]=ktS
set qW=qW+1
if ok[FtS]==0 then
if FtS==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(FtS,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set jtS="when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_doAfter_NewRandom in NewRandom, line 114"
set aW[qW]=jtS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set xtS=fF
set RF[xtS]=776
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_doAfter_NewRandom.","when calling error in NewRandom, line 114")
set xtS=0
endif
else
set dF=dF-1
set xtS=nF[dF]
set RF[xtS]=776
endif
set qW=qW-1
set ntS=xtS
set vtS=.5
set mtS=ntS
set QtS="when calling doAfter in NewRandom, line 114"
set aW[qW]=QtS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),vtS,mtS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function YFi takes integer aFi returns nothing
local unit nFi=HQ[aFi]
local integer dFi=851976
local player fFi
local player RFi
local texttag TFi
call IssueImmediateOrderById(nFi,dFi)
set Bu=Bu-1
set fFi=Yu
set RFi=Yu
set wr[GetPlayerId(fFi)]=wr[GetPlayerId(RFi)]+1
set TFi=Mu
call DestroyTextTag(TFi)
set nFi=null
set fFi=null
set RFi=null
set TFi=null
endfunction
function ZWo takes integer YWo,string GWo returns nothing
local integer gWo
local integer hWo
local real FWo
local unit kWo
local integer jWo
local unit xWo
local string vWo
local integer mWo
local real QWo
local integer WWo
local string EWo
set aW[qW]=GWo
set qW=qW+1
set kWo=Lm[YWo]
set jWo=$4132314F
call UnitRemoveAbility(kWo,jWo)
set xWo=Lm[YWo]
set gWo=GetPlayerTechCount(GetOwningPlayer(xWo),$52303846,true)
set FWo=27.5-5.*gWo
set vWo="when calling alloc_CallbackSingle_doAfter_doAfter_Prediction in Prediction, line 60"
set aW[qW]=vWo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set mWo=fF
set RF[mWo]=772
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_Prediction.","when calling error in Prediction, line 60")
set mWo=0
endif
else
set dF=dF-1
set mWo=nF[dF]
set RF[mWo]=772
endif
set qW=qW-1
set hWo=mWo
set Xm[hWo]=Lm[YWo]
set QWo=FWo
set WWo=hWo
set EWo="when calling doAfter in Prediction, line 60"
set aW[qW]=EWo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),QWo,WWo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set kWo=null
set xWo=null
endfunction
function a3w takes integer l3w returns nothing
local unit b3w=DQ[l3w]
local integer y3w=851976
local player p3w
local player e3w
local texttag q3w
call IssueImmediateOrderById(b3w,y3w)
set Vu=Vu-1
set p3w=gu
set e3w=gu
set wr[GetPlayerId(p3w)]=wr[GetPlayerId(e3w)]-1
set q3w=Mu
call DestroyTextTag(q3w)
set b3w=null
set p3w=null
set e3w=null
set q3w=null
endfunction
function b5S takes integer s5S,string t5S returns nothing
local integer i5S
local string S5S
local integer c5S
local real o5S
local integer O5S
local string l5S
set aW[qW]=t5S
set qW=qW+1
set S5S="when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_registerPlayerUnitEvent_ZulJin in ZulJin, line 689"
set aW[qW]=S5S
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set c5S=fF
set RF[c5S]=778
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_registerPlayerUnitEvent_ZulJin.","when calling error in ZulJin, line 689")
set c5S=0
endif
else
set dF=dF-1
set c5S=nF[dF]
set RF[c5S]=778
endif
set qW=qW-1
set i5S=c5S
set o5S=2.
set O5S=i5S
set l5S="when calling doAfter in ZulJin, line 689"
set aW[qW]=l5S
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),o5S,O5S,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function bIi takes integer KUi,string LUi returns nothing
local integer XUi
local integer CUi
local integer VUi
local string BUi
local integer NUi
local string MUi
local integer wIi
local integer uIi
local integer rIi
local string sIi
local integer tIi
local string iIi
local string SIi
local integer cIi
local real oIi
local integer OIi
local string lIi
set aW[qW]=LUi
set qW=qW+1
set VUi=gY
set BUi="when calling shuffle in NewRandom, line 101"
set aW[qW]=BUi
set qW=qW+1
if ok[VUi]==0 then
if VUi==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(VUi,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set NUi=gY
set MUi="when calling getFirst in NewRandom, line 102"
set aW[qW]=MUi
set qW=qW+1
if ok[NUi]==0 then
if NUi==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set uIi=NUi
set wIi=Hv[Kv[Vv[uIi]]]
set qW=qW-1
set XUi=wIi
set rIi=XUi
set sIi="when calling numRace in NewRandom, line 103"
set aW[qW]=sIi
set qW=qW+1
if rIi==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if rIi==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if rIi==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if rIi==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if rIi==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if rIi==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if rIi==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if rIi==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if rIi==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if rIi==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if rIi==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if rIi==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if rIi==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if rIi==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if rIi==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if rIi==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if rIi==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if rIi==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if rIi==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if rIi==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Gu,XUi,"when calling pickRaceRandom in NewRandom, line 104")
call eWp(gY,XUi,"when calling remove in NewRandom, line 105")
set tIi=gY
set iIi="when calling shuffle in NewRandom, line 106"
set aW[qW]=iIi
set qW=qW+1
if ok[tIi]==0 then
if tIi==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(tIi,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set SIi="when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_NewRandom in NewRandom, line 107"
set aW[qW]=SIi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set cIi=fF
set RF[cIi]=775
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_NewRandom.","when calling error in NewRandom, line 107")
set cIi=0
endif
else
set dF=dF-1
set cIi=nF[dF]
set RF[cIi]=775
endif
set qW=qW-1
set CUi=cIi
set Dm[CUi]=Am[KUi]
set oIi=.5
set OIi=CUi
set lIi="when calling doAfter in NewRandom, line 107"
set aW[qW]=lIi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),oIi,OIi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function bPS takes integer rPS returns nothing
local unit sPS=CreateUnit(Gx[rPS],$75303030,gx[rPS],hx[rPS],GetUnitFacing(Fx[rPS])-10.)
local unit tPS=sPS
local real iPS=5.
local unit SPS
local integer cPS
local unit oPS
local integer OPS
local integer lPS
call UnitApplyTimedLife(tPS,$42544C46,iPS)
set SPS=sPS
set cPS=$4132374B
call UnitAddAbility(SPS,cPS)
set oPS=sPS
set OPS=$4132374B
set lPS=kx[rPS]
call SetUnitAbilityLevel(oPS,OPS,lPS)
call IssuePointOrder(sPS,"shockwave",jx[rPS]-10.,xx[rPS]-10.)
set sPS=null
set tPS=null
set SPS=null
set oPS=null
endfunction
function c7u takes integer u7u returns nothing
local unit r7u=AQ[u7u]
local integer s7u=851976
local player t7u
local player i7u
local texttag S7u
call IssueImmediateOrderById(r7u,s7u)
set Cu=Cu-1
set t7u=Tu
set i7u=Tu
set wr[GetPlayerId(t7u)]=wr[GetPlayerId(i7u)]-1
set S7u=Mu
call DestroyTextTag(S7u)
set r7u=null
set t7u=null
set i7u=null
set S7u=null
endfunction
function c9b takes integer d8b,string f8b returns nothing
local integer R8b
local sound T8b
local unit Y8b
local integer G8b
local unit g8b
local integer h8b
local unit F8b
local integer k8b
local integer j8b
local unit x8b
local integer v8b
local unit m8b
local integer Q8b
local integer W8b
local unit E8b
local integer Z8b
local unit U8b
local integer I8b
local integer P8b
local unit A8b
local integer D8b
local unit H8b
local integer J8b
local integer K8b
local unit L8b
local integer X8b
local unit C8b
local integer V8b
local unit B8b
local trigger N8b
local unit M8b
local unit w9b
local string u9b
local integer r9b
local real s9b
local integer t9b
local string i9b
local real S9b
set aW[qW]=f8b
set qW=qW+1
set T8b=Bi
if T8b!=null then
call StartSound(T8b)
endif
call DestroyEffect(AddSpecialEffectTarget("Holy Light.mdl",xk[d8b],"origin"))
set pO=CreateUnit(eO,$55303044,vk[d8b],mk[d8b],GetUnitFacing(xk[d8b]))
set Y8b=yO
set G8b=$41313347
call UnitAddAbility(Y8b,G8b)
call SetHeroLevel(pO,28,true)
set g8b=pO
set h8b=$414D6270
call UnitAddAbility(g8b,h8b)
set F8b=pO
set k8b=$414D6270
set j8b=7
call SetUnitAbilityLevel(F8b,k8b,j8b)
set x8b=pO
set v8b=$41303942
call UnitAddAbility(x8b,v8b)
set m8b=pO
set Q8b=$41303942
set W8b=7
call SetUnitAbilityLevel(m8b,Q8b,W8b)
set E8b=pO
set Z8b=$41313348
call UnitAddAbility(E8b,Z8b)
set U8b=pO
set I8b=$41313348
set P8b=7
call SetUnitAbilityLevel(U8b,I8b,P8b)
set A8b=pO
set D8b=$41313349
call UnitAddAbility(A8b,D8b)
set H8b=pO
set J8b=$41313349
set K8b=7
call SetUnitAbilityLevel(H8b,J8b,K8b)
set L8b=pO
set X8b=$49303044
call UnitAddItemById(L8b,X8b)
call dYr(pO)
set C8b=yO
set V8b=$41313346
call UnitRemoveAbility(C8b,V8b)
set B8b=yO
call DisplayTextToPlayer(GetOwningPlayer(B8b),0.,0.,"You have summoned Golem Gargantuan! You have to wait for a while until the Golem can be summoned again")
set N8b=iO
call EnableTrigger(N8b)
set pr=600
set M8b=yO
set S9b=GetUnitX(M8b)
set w9b=yO
set yr=jVl(S9b,GetUnitY(w9b),0.,I2S(pr),13.,255,230,0,255)
set u9b="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_AltarGold in AltarGold, line 1199"
set aW[qW]=u9b
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set r9b=fF
set RF[r9b]=779
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_AltarGold.","when calling error in AltarGold, line 1199")
set r9b=0
endif
else
set dF=dF-1
set r9b=nF[dF]
set RF[r9b]=779
endif
set qW=qW-1
set R8b=r9b
set s9b=600.
set t9b=R8b
set i9b="when calling doAfter in AltarGold, line 1199"
set aW[qW]=i9b
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),s9b,t9b,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set T8b=null
set Y8b=null
set g8b=null
set F8b=null
set x8b=null
set m8b=null
set E8b=null
set U8b=null
set A8b=null
set H8b=null
set L8b=null
set C8b=null
set B8b=null
set N8b=null
set M8b=null
set w9b=null
endfunction
function d9l takes integer a9l returns nothing
local unit n9l=Yj[a9l]
if UnitAlive(n9l)==false then
call FlushChildHashtable(qu,GetHandleId(Yj[a9l]))
endif
set n9l=null
endfunction
function QHl takes group gHl,integer hHl,string FHl returns nothing
local unit kHl
local group jHl
local group xHl
local group vHl
local unit mHl
set aW[qW]=FHl
set qW=qW+1
set jHl=gHl
loop
set xHl=jHl
exitwhen not (FirstOfGroup(xHl)!=null)
set vHl=jHl
set mHl=FirstOfGroup(vHl)
call GroupRemoveUnit(vHl,mHl)
set kHl=mHl
call WXp(3,hHl,kHl,"when calling callback in ClosureForGroups, line 40",0.,0.,0.,false,0,null,null,0,null)
endloop
call epi(hHl,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
set qW=qW-1
set kHl=null
set jHl=null
set xHl=null
set vHl=null
set mHl=null
endfunction
function eRl takes string cRl returns nothing
local integer oRl
local group ORl
local unit lRl
local string bRl
local integer yRl
local group pRl
set aW[qW]=cRl
set qW=qW+1
set lRl=VY
call RemoveUnit(lRl)
set ORl=CY
set bRl="when calling alloc_ForGroupCallback_forEachFrom_Preloader in Preloader, line 46"
set aW[qW]=bRl
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set yRl=qF
set aF[yRl]=860
else
call L8c("Out of memory: Could not create ForGroupCallback_forEachFrom_Preloader.","when calling error in Preloader, line 46")
set yRl=0
endif
else
set eF=eF-1
set yRl=pF[eF]
set aF[yRl]=860
endif
set qW=qW-1
set oRl=yRl
call QHl(ORl,oRl,"when calling forEachFrom in Preloader, line 46")
set pRl=CY
call DestroyGroup(pRl)
set CY=null
set qW=qW-1
set ORl=null
set lRl=null
set pRl=null
endfunction
function fVr takes integer KCr returns nothing
local rect VCr=bj_mapInitialPlayableArea
local boolexpr BCr=qe
local group NCr=CreateGroup()
local group LCr
local unit XCr
local group CCr
local group MCr
local group wVr
local unit uVr
local player rVr
local player sVr
local unit tVr
local player iVr
local integer SVr
local integer cVr
local integer oVr
local widget OVr
local real lVr
local real bVr
local player yVr
local integer pVr
local integer eVr
local integer qVr
local widget aVr
local real nVr
local real dVr
call GroupEnumUnitsInRect(NCr,VCr,BCr)
call DestroyBoolExpr(BCr)
set LCr=NCr
set CCr=LCr
loop
set MCr=CCr
exitwhen not (FirstOfGroup(MCr)!=null)
set wVr=CCr
set uVr=FirstOfGroup(wVr)
call GroupRemoveUnit(wVr,uVr)
set XCr=uVr
set tVr=XCr
set rVr=GetOwningPlayer(tVr)
set sVr=Zv[KCr]
if IsPlayerEnemy(rVr,sVr) then
set iVr=Zv[KCr]
set SVr=$414D637B
set cVr=1
set oVr=852119
set OVr=XCr
set yVr=iVr
set pVr=SVr
set eVr=cVr
set qVr=oVr
set aVr=OVr
set nVr=GetWidgetX(OVr)
set dVr=GetWidgetY(OVr)
set lVr=nVr
set bVr=dVr
call I9S(yVr,pVr,eVr,qVr,aVr,lVr,bVr,0.)
endif
endloop
set LCr=null
set XCr=null
set CCr=null
set VCr=null
set BCr=null
set NCr=null
set MCr=null
set wVr=null
set uVr=null
set rVr=null
set sVr=null
set tVr=null
set iVr=null
set OVr=null
set yVr=null
set aVr=null
endfunction
function fel takes integer qel returns nothing
local unit ael=wl
local integer nel=$41323934
local unit del
call UnitAddAbility(ael,nel)
set del=wl
call DisplayTextToPlayer(GetOwningPlayer(del),0.,0.,"You can summon Bonelord again")
set ael=null
set del=null
endfunction
function gCS takes integer MJS returns nothing
local unit wKS=eW[MJS]
local integer uKS=$41305949
local unit rKS
local integer sKS
local unit tKS
local integer iKS
local unit SKS
local integer cKS
local integer oKS
local unit OKS
local integer lKS
local integer bKS
local unit yKS
local integer pKS
local integer eKS
local unit qKS
local integer aKS
local integer nKS
local unit dKS
local integer fKS
local integer RKS
local unit TKS
local integer YKS
local integer GKS
local unit gKS
local integer hKS
local integer FKS
local unit kKS
local integer jKS
local integer xKS
local unit vKS
local integer mKS
local integer QKS
local unit WKS
local integer EKS
local integer ZKS
local unit UKS
local integer IKS
local integer PKS
local unit AKS
local integer DKS
local integer HKS
local unit JKS
local integer KKS
local integer LKS
local unit XKS
local integer CKS
local integer VKS
local unit BKS
local integer NKS
local integer MKS
local unit wLS
local integer uLS
local integer rLS
local unit sLS
local integer tLS
local integer iLS
local unit SLS
local integer cLS
local integer oLS
local unit OLS
local integer lLS
local integer bLS
local unit yLS
local integer pLS
local integer eLS
local unit qLS
local integer aLS
local integer nLS
local unit dLS
local integer fLS
local integer RLS
local unit TLS
local integer YLS
local integer GLS
local unit gLS
local integer hLS
local integer FLS
local unit kLS
local integer jLS
local integer xLS
local unit vLS
local integer mLS
local integer QLS
local unit WLS
local integer ELS
local integer ZLS
local unit ULS
local integer ILS
local integer PLS
local unit ALS
local integer DLS
local integer HLS
local unit JLS
local integer KLS
local integer LLS
local unit XLS
local integer CLS
local integer VLS
local unit BLS
local integer NLS
local integer MLS
local unit wXS
local integer uXS
local integer rXS
local unit sXS
local integer tXS
local integer iXS
local unit SXS
local integer cXS
local integer oXS
local unit OXS
local integer lXS
local integer bXS
local unit yXS
local integer pXS
local integer eXS
local unit qXS
local integer aXS
local integer nXS
local unit dXS
local integer fXS
local integer RXS
local unit TXS
local integer YXS
local integer GXS
local unit gXS
local integer hXS
local integer FXS
local unit kXS
local integer jXS
local integer xXS
local unit vXS
local integer mXS
local integer QXS
local unit WXS
local integer EXS
local integer ZXS
local unit UXS
local integer IXS
local integer PXS
local unit AXS
local integer DXS
local integer HXS
local unit JXS
local integer KXS
local integer LXS
local unit XXS
local integer CXS
local integer VXS
local unit BXS
local integer NXS
local integer MXS
local unit wCS
local integer uCS
local integer rCS
local unit sCS
local integer tCS
local integer iCS
local unit SCS
local integer cCS
local integer oCS
local unit OCS
local integer lCS
local integer bCS
local unit yCS
local integer pCS
local integer eCS
local unit qCS
local integer aCS
local integer nCS
local unit dCS
local integer fCS
local integer RCS
local unit TCS
local integer YCS
local integer GCS
call UnitAddAbility(wKS,uKS)
set rKS=eW[MJS]
set sKS=$41304D32
call UnitAddAbility(rKS,sKS)
set tKS=eW[MJS]
set iKS=$414D3261
call UnitAddAbility(tKS,iKS)
if uF==4 then
set SKS=eW[MJS]
set cKS=$41305949
set oKS=1
call SetUnitAbilityLevel(SKS,cKS,oKS)
set OKS=eW[MJS]
set lKS=$41304D32
set bKS=1
call SetUnitAbilityLevel(OKS,lKS,bKS)
set yKS=eW[MJS]
set pKS=$414D3261
set eKS=1
call SetUnitAbilityLevel(yKS,pKS,eKS)
endif
if uF==5 then
set qKS=eW[MJS]
set aKS=$41305949
set nKS=2
call SetUnitAbilityLevel(qKS,aKS,nKS)
set dKS=eW[MJS]
set fKS=$41304D32
set RKS=1
call SetUnitAbilityLevel(dKS,fKS,RKS)
set TKS=eW[MJS]
set YKS=$414D3261
set GKS=1
call SetUnitAbilityLevel(TKS,YKS,GKS)
endif
if uF==6 then
set gKS=eW[MJS]
set hKS=$41305949
set FKS=2
call SetUnitAbilityLevel(gKS,hKS,FKS)
set kKS=eW[MJS]
set jKS=$41304D32
set xKS=2
call SetUnitAbilityLevel(kKS,jKS,xKS)
set vKS=eW[MJS]
set mKS=$414D3261
set QKS=1
call SetUnitAbilityLevel(vKS,mKS,QKS)
endif
if uF>=7 and uF<9 then
set WKS=eW[MJS]
set EKS=$41305949
set ZKS=2
call SetUnitAbilityLevel(WKS,EKS,ZKS)
set UKS=eW[MJS]
set IKS=$41304D32
set PKS=2
call SetUnitAbilityLevel(UKS,IKS,PKS)
set AKS=eW[MJS]
set DKS=$414D3261
set HKS=2
call SetUnitAbilityLevel(AKS,DKS,HKS)
endif
if uF==9 then
set JKS=eW[MJS]
set KKS=$41305949
set LKS=3
call SetUnitAbilityLevel(JKS,KKS,LKS)
set XKS=eW[MJS]
set CKS=$41304D32
set VKS=2
call SetUnitAbilityLevel(XKS,CKS,VKS)
set BKS=eW[MJS]
set NKS=$414D3261
set MKS=2
call SetUnitAbilityLevel(BKS,NKS,MKS)
endif
if uF==10 then
set wLS=eW[MJS]
set uLS=$41305949
set rLS=3
call SetUnitAbilityLevel(wLS,uLS,rLS)
set sLS=eW[MJS]
set tLS=$41304D32
set iLS=3
call SetUnitAbilityLevel(sLS,tLS,iLS)
set SLS=eW[MJS]
set cLS=$414D3261
set oLS=2
call SetUnitAbilityLevel(SLS,cLS,oLS)
endif
if uF>=11 and uF<13 then
set OLS=eW[MJS]
set lLS=$41305949
set bLS=3
call SetUnitAbilityLevel(OLS,lLS,bLS)
set yLS=eW[MJS]
set pLS=$41304D32
set eLS=3
call SetUnitAbilityLevel(yLS,pLS,eLS)
set qLS=eW[MJS]
set aLS=$414D3261
set nLS=3
call SetUnitAbilityLevel(qLS,aLS,nLS)
endif
if uF==13 then
set dLS=eW[MJS]
set fLS=$41305949
set RLS=4
call SetUnitAbilityLevel(dLS,fLS,RLS)
set TLS=eW[MJS]
set YLS=$41304D32
set GLS=3
call SetUnitAbilityLevel(TLS,YLS,GLS)
set gLS=eW[MJS]
set hLS=$414D3261
set FLS=3
call SetUnitAbilityLevel(gLS,hLS,FLS)
endif
if uF==14 then
set kLS=eW[MJS]
set jLS=$41305949
set xLS=4
call SetUnitAbilityLevel(kLS,jLS,xLS)
set vLS=eW[MJS]
set mLS=$41304D32
set QLS=4
call SetUnitAbilityLevel(vLS,mLS,QLS)
set WLS=eW[MJS]
set ELS=$414D3261
set ZLS=3
call SetUnitAbilityLevel(WLS,ELS,ZLS)
endif
if uF>=15 and uF<17 then
set ULS=eW[MJS]
set ILS=$41305949
set PLS=4
call SetUnitAbilityLevel(ULS,ILS,PLS)
set ALS=eW[MJS]
set DLS=$41304D32
set HLS=4
call SetUnitAbilityLevel(ALS,DLS,HLS)
set JLS=eW[MJS]
set KLS=$414D3261
set LLS=4
call SetUnitAbilityLevel(JLS,KLS,LLS)
endif
if uF==17 then
set XLS=eW[MJS]
set CLS=$41305949
set VLS=5
call SetUnitAbilityLevel(XLS,CLS,VLS)
set BLS=eW[MJS]
set NLS=$41304D32
set MLS=4
call SetUnitAbilityLevel(BLS,NLS,MLS)
set wXS=eW[MJS]
set uXS=$414D3261
set rXS=4
call SetUnitAbilityLevel(wXS,uXS,rXS)
endif
if uF==18 then
set sXS=eW[MJS]
set tXS=$41305949
set iXS=5
call SetUnitAbilityLevel(sXS,tXS,iXS)
set SXS=eW[MJS]
set cXS=$41304D32
set oXS=5
call SetUnitAbilityLevel(SXS,cXS,oXS)
set OXS=eW[MJS]
set lXS=$414D3261
set bXS=4
call SetUnitAbilityLevel(OXS,lXS,bXS)
endif
if uF>=19 and uF<21 then
set yXS=eW[MJS]
set pXS=$41305949
set eXS=5
call SetUnitAbilityLevel(yXS,pXS,eXS)
set qXS=eW[MJS]
set aXS=$41304D32
set nXS=5
call SetUnitAbilityLevel(qXS,aXS,nXS)
set dXS=eW[MJS]
set fXS=$414D3261
set RXS=5
call SetUnitAbilityLevel(dXS,fXS,RXS)
endif
if uF==21 then
set TXS=eW[MJS]
set YXS=$41305949
set GXS=6
call SetUnitAbilityLevel(TXS,YXS,GXS)
set gXS=eW[MJS]
set hXS=$41304D32
set FXS=5
call SetUnitAbilityLevel(gXS,hXS,FXS)
set kXS=eW[MJS]
set jXS=$414D3261
set xXS=5
call SetUnitAbilityLevel(kXS,jXS,xXS)
endif
if uF==22 then
set vXS=eW[MJS]
set mXS=$41305949
set QXS=6
call SetUnitAbilityLevel(vXS,mXS,QXS)
set WXS=eW[MJS]
set EXS=$41304D32
set ZXS=6
call SetUnitAbilityLevel(WXS,EXS,ZXS)
set UXS=eW[MJS]
set IXS=$414D3261
set PXS=5
call SetUnitAbilityLevel(UXS,IXS,PXS)
endif
if uF>=23 and uF<25 then
set AXS=eW[MJS]
set DXS=$41305949
set HXS=6
call SetUnitAbilityLevel(AXS,DXS,HXS)
set JXS=eW[MJS]
set KXS=$41304D32
set LXS=6
call SetUnitAbilityLevel(JXS,KXS,LXS)
set XXS=eW[MJS]
set CXS=$414D3261
set VXS=6
call SetUnitAbilityLevel(XXS,CXS,VXS)
endif
if uF==25 then
set BXS=eW[MJS]
set NXS=$41305949
set MXS=7
call SetUnitAbilityLevel(BXS,NXS,MXS)
set wCS=eW[MJS]
set uCS=$41304D32
set rCS=6
call SetUnitAbilityLevel(wCS,uCS,rCS)
set sCS=eW[MJS]
set tCS=$414D3261
set iCS=6
call SetUnitAbilityLevel(sCS,tCS,iCS)
endif
if uF==26 then
set SCS=eW[MJS]
set cCS=$41305949
set oCS=7
call SetUnitAbilityLevel(SCS,cCS,oCS)
set OCS=eW[MJS]
set lCS=$41304D32
set bCS=7
call SetUnitAbilityLevel(OCS,lCS,bCS)
set yCS=eW[MJS]
set pCS=$414D3261
set eCS=6
call SetUnitAbilityLevel(yCS,pCS,eCS)
endif
if uF>=27 then
set qCS=eW[MJS]
set aCS=$41305949
set nCS=7
call SetUnitAbilityLevel(qCS,aCS,nCS)
set dCS=eW[MJS]
set fCS=$41304D32
set RCS=7
call SetUnitAbilityLevel(dCS,fCS,RCS)
set TCS=eW[MJS]
set YCS=$414D3261
set GCS=7
call SetUnitAbilityLevel(TCS,YCS,GCS)
endif
set wKS=null
set rKS=null
set tKS=null
set SKS=null
set OKS=null
set yKS=null
set qKS=null
set dKS=null
set TKS=null
set gKS=null
set kKS=null
set vKS=null
set WKS=null
set UKS=null
set AKS=null
set JKS=null
set XKS=null
set BKS=null
set wLS=null
set sLS=null
set SLS=null
set OLS=null
set yLS=null
set qLS=null
set dLS=null
set TLS=null
set gLS=null
set kLS=null
set vLS=null
set WLS=null
set ULS=null
set ALS=null
set JLS=null
set XLS=null
set BLS=null
set wXS=null
set sXS=null
set SXS=null
set OXS=null
set yXS=null
set qXS=null
set dXS=null
set TXS=null
set gXS=null
set kXS=null
set vXS=null
set WXS=null
set UXS=null
set AXS=null
set JXS=null
set XXS=null
set BXS=null
set wCS=null
set sCS=null
set SCS=null
set OCS=null
set yCS=null
set qCS=null
set dCS=null
set TCS=null
endfunction
function gIy takes integer qIy returns nothing
local unit aIy=CreateUnit(qm[qIy],$75303030,am[qIy],nm[qIy],GetUnitFacing(dm[qIy])-10.)
local unit nIy=aIy
local real dIy=5.
local unit fIy
local integer RIy
local unit TIy
local integer YIy
local integer GIy
call UnitApplyTimedLife(nIy,$42544C46,dIy)
set fIy=aIy
set RIy=$41305954
call UnitAddAbility(fIy,RIy)
set TIy=aIy
set YIy=$41305954
set GIy=fm[qIy]
call SetUnitAbilityLevel(TIy,YIy,GIy)
call IssuePointOrder(aIy,"impale",Rm[qIy]-10.,Tm[qIy]-10.)
set aIy=null
set nIy=null
set fIy=null
set TIy=null
endfunction
function ghl takes integer ohl,string Ohl returns nothing
local unit lhl
local integer bhl
local unit yhl
local real phl
local unit ehl
local integer qhl
local unit ahl
local integer nhl
local integer dhl
local string fhl
local integer Rhl
local real Thl
local integer Yhl
local string Ghl
set aW[qW]=Ohl
set qW=qW+1
set lhl=CreateUnit(ax[ohl],$75303030,nx[ohl],dx[ohl],GetUnitFacing(fx[ohl])+10.)
set yhl=lhl
set phl=5.
call UnitApplyTimedLife(yhl,$42544C46,phl)
set ehl=lhl
set qhl=$4132374B
call UnitAddAbility(ehl,qhl)
set ahl=lhl
set nhl=$4132374B
set dhl=Rx[ohl]
call SetUnitAbilityLevel(ahl,nhl,dhl)
call IssuePointOrder(lhl,"shockwave",Tx[ohl]+10.,Yx[ohl]+10.)
set fhl="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_GuffRunetotem in GuffRunetotem, line 517"
set aW[qW]=fhl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Rhl=fF
set RF[Rhl]=784
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_GuffRunetotem.","when calling error in GuffRunetotem, line 517")
set Rhl=0
endif
else
set dF=dF-1
set Rhl=nF[dF]
set RF[Rhl]=784
endif
set qW=qW-1
set bhl=Rhl
set Gx[bhl]=ax[ohl]
set gx[bhl]=nx[ohl]
set hx[bhl]=dx[ohl]
set Fx[bhl]=fx[ohl]
set kx[bhl]=Rx[ohl]
set jx[bhl]=Tx[ohl]
set xx[bhl]=Yx[ohl]
set Thl=.3
set Yhl=bhl
set Ghl="when calling doAfter in GuffRunetotem, line 517"
set aW[qW]=Ghl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Thl,Yhl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set lhl=null
set yhl=null
set ehl=null
set ahl=null
endfunction
function iEi takes integer PWi returns nothing
local unit DWi=oW[PWi]
local player sEi=GetOwningPlayer(DWi)
local unit HWi=oW[PWi]
local real tEi=GetUnitX(HWi)
local unit JWi=oW[PWi]
local unit AWi=CreateUnit(sEi,$75303030,tEi,GetUnitY(JWi),0.)
local unit KWi=AWi
local real LWi=3.
local unit XWi
local integer CWi
local unit VWi
local integer BWi
local integer NWi
local unit MWi
local string wEi
local group uEi
local boolexpr rEi
call UnitApplyTimedLife(KWi,$42544C46,LWi)
set XWi=AWi
set CWi=$41323545
call UnitAddAbility(XWi,CWi)
set VWi=AWi
set BWi=$41323545
set NWi=OW[PWi]
call SetUnitAbilityLevel(VWi,BWi,NWi)
set MWi=AWi
set wEi="stomp"
call IssueImmediateOrder(MWi,wEi)
set uEi=lW[PWi]
call DestroyGroup(uEi)
set rEi=bW[PWi]
call DestroyBoolExpr(rEi)
set AWi=null
set DWi=null
set HWi=null
set JWi=null
set KWi=null
set XWi=null
set VWi=null
set MWi=null
set uEi=null
set rEi=null
set sEi=null
endfunction
function iit takes integer wit returns nothing
local unit uit=ox[wit]
local integer rit=$41305649
local unit sit
local integer tit
call UnitRemoveAbility(uit,rit)
if GetRandomInt(1,100)<=10 then
set sit=ox[wit]
set tit=$4131384B
call UnitAddAbility(sit,tit)
endif
set uit=null
set sit=null
endfunction
function k_l takes integer N0l returns nothing
local unit S_l=px[N0l]
local group M0l
local filterfunc w_l
local unit u_l
local group r_l
local integer s_l
local integer t_l
local integer i_l
local unit c_l
local unit o_l
local group O_l
local group l_l
local unit b_l
local unit y_l
local player p_l
local player e_l
local integer q_l
local player a_l
local playerstate n_l
local integer d_l
local player f_l
local playerstate R_l
local group T_l
local boolexpr Y_l
local group G_l
local real g_l
local player h_l
local playerstate F_l
set wq=GetOwningPlayer(S_l)
set M0l=CreateGroup()
set w_l=Filter(etw)
set G_l=M0l
set c_l=px[N0l]
set g_l=GetUnitX(c_l)
set o_l=px[N0l]
call GroupEnumUnitsInRange(G_l,g_l,GetUnitY(o_l),900.,w_l)
set r_l=M0l
loop
set O_l=r_l
exitwhen not (FirstOfGroup(O_l)!=null)
set l_l=r_l
set b_l=FirstOfGroup(l_l)
call GroupRemoveUnit(l_l,b_l)
set u_l=b_l
set s_l=GetUnitPointValue(u_l)
set y_l=u_l
call KillUnit(y_l)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\PileofGold.mdl",u_l,"chest"))
set p_l=wq
set t_l=GetPlayerId(p_l)-4
set i_l=s_l+30
set e_l=Player(t_l)
set q_l=i_l
set a_l=e_l
set n_l=PLAYER_STATE_RESOURCE_GOLD
set d_l=q_l
set h_l=a_l
set F_l=n_l
set f_l=a_l
set R_l=n_l
call SetPlayerState(h_l,F_l,GetPlayerState(f_l,R_l)+d_l)
set hr[t_l]=hr[t_l]+i_l
set Fr[t_l]=Fr[t_l]+i_l
set Cr[t_l]=Cr[t_l]+i_l
endloop
set T_l=M0l
call DestroyGroup(T_l)
set Y_l=w_l
call DestroyBoolExpr(Y_l)
set M0l=null
set w_l=null
set u_l=null
set r_l=null
set S_l=null
set c_l=null
set o_l=null
set O_l=null
set l_l=null
set b_l=null
set y_l=null
set p_l=null
set e_l=null
set a_l=null
set n_l=null
set f_l=null
set R_l=null
set T_l=null
set Y_l=null
set G_l=null
set h_l=null
set F_l=null
endfunction
function lPs takes integer sPs returns nothing
local unit tPs=NQ[sPs]
local integer iPs=$49303243
local trigger SPs
local unit cPs
local integer oPs
local unit OPs
if RTS(tPs,iPs)!=null==false then
set SPs=Dh
call EnableTrigger(SPs)
set cPs=NQ[sPs]
set oPs=$49303243
call UnitAddItemById(cPs,oPs)
set OPs=NQ[sPs]
call SetPlayerTechResearched(GetOwningPlayer(OPs),$52303841,1)
endif
set tPs=null
set SPs=null
set cPs=null
set OPs=null
endfunction
function gee takes unit bee,integer yee returns boolean
local boolean pee=false
local integer eee=0
local unit aee=bee
local integer qee=UnitInventorySize(aee)-1
local item nee
local unit dee
local integer fee
local unit Ree
local item Tee
local unit Yee
local integer Gee
loop
exitwhen eee>qee
set dee=bee
set fee=eee
set nee=UnitItemInSlot(dee,fee)
if GetItemTypeId(nee)==yee then
set Ree=bee
set Yee=bee
set Gee=eee
set Tee=UnitItemInSlot(Yee,Gee)
call UnitRemoveItem(Ree,Tee)
set pee=true
exitwhen true
endif
set eee=eee+1
endloop
set aee=null
set nee=null
set dee=null
set Ree=null
set Tee=null
set Yee=null
return pee
endfunction
function lcc takes integer e_c returns nothing
local item M_c=fj[e_c]
local effect q_c
local effect a_c
local effect n_c
local effect d_c
local effect f_c
local effect R_c
local effect T_c
local effect Y_c
local effect G_c
local effect g_c
local effect h_c
local effect F_c
local effect k_c
local effect j_c
local effect x_c
local effect v_c
local effect m_c
local effect Q_c
local effect W_c
local effect E_c
local effect Z_c
local effect U_c
local effect I_c
local effect P_c
local effect A_c
local effect D_c
local effect H_c
local effect J_c
local effect K_c
local effect L_c
local effect X_c
local effect C_c
local effect V_c
local effect B_c
local effect N_c
local unit wwc
local integer uwc
local unit rwc
local integer swc
local unit twc
local integer iwc
local unit Swc
local integer cwc
local unit owc
local integer Owc
local unit lwc
local integer bwc
local unit ywc
local integer pwc
local effect ewc
local item qwc
local unit awc
local integer nwc
local unit dwc
local integer fwc
local unit Rwc
local integer Twc
local unit Ywc
local integer Gwc
local unit gwc
local integer hwc
local unit Fwc
local integer kwc
local unit jwc
local integer xwc
local effect vwc
local unit mwc
local integer Qwc
local unit Wwc
local integer Ewc
local unit Zwc
local integer Uwc
local effect Iwc
local unit Pwc
local integer Awc
local unit Dwc
local integer Hwc
local unit Jwc
local integer Kwc
local effect Lwc
local unit Xwc
local integer Cwc
local unit Vwc
local integer Bwc
local unit Nwc
local integer Mwc
local effect wuc
local unit uuc
local integer ruc
local unit suc
local integer tuc
local unit iuc
local integer Suc
local effect cuc
local unit ouc
local integer Ouc
local unit luc
local integer buc
local unit yuc
local integer puc
local effect euc
local item quc
local unit auc
local integer nuc
local unit duc
local integer fuc
local unit Ruc
local integer Tuc
local unit Yuc
local integer Guc
local unit guc
local integer huc
local unit Fuc
local integer kuc
local unit juc
local integer xuc
local unit vuc
local integer muc
local unit Quc
local integer Wuc
local effect Euc
local unit Zuc
local integer Uuc
local unit Iuc
local integer Puc
local unit Auc
local integer Duc
local effect Huc
local unit Juc
local integer Kuc
local unit Luc
local integer Xuc
local unit Cuc
local integer Vuc
local effect Buc
local unit Nuc
local integer Muc
local unit wrc
local integer urc
local unit rrc
local integer src
local effect trc
local unit irc
local integer Src
local unit crc
local integer orc
local unit Orc
local integer lrc
local effect brc
local unit yrc
local integer prc
local unit erc
local integer qrc
local unit arc
local integer nrc
local effect drc
local unit frc
local integer Rrc
local unit Trc
local integer Yrc
local unit Grc
local integer grc
local effect hrc
local unit Frc
local integer krc
local unit jrc
local integer xrc
local unit vrc
local integer mrc
local effect Qrc
local unit Wrc
local integer Erc
local unit Zrc
local integer Urc
local unit Irc
local integer Prc
local effect Arc
local unit Drc
local integer Hrc
local unit Jrc
local integer Krc
local unit Lrc
local integer Xrc
local effect Crc
local unit Vrc
local integer Brc
local unit Nrc
local integer Mrc
local unit wsc
local integer usc
local effect rsc
local unit ssc
local integer tsc
local unit isc
local integer Ssc
local unit csc
local integer osc
local effect Osc
local unit lsc
local integer bsc
local unit ysc
local integer psc
local unit esc
local integer qsc
local effect asc
local unit nsc
local integer dsc
local unit fsc
local integer Rsc
local unit Tsc
local integer Ysc
local effect Gsc
local unit gsc
local integer hsc
local unit Fsc
local integer ksc
local unit jsc
local integer xsc
local unit vsc
local integer msc
local unit Qsc
local integer Wsc
local unit Esc
local integer Zsc
local unit Usc
local integer Isc
local unit Psc
local integer Asc
local unit Dsc
local integer Hsc
local unit Jsc
local integer Ksc
local unit Lsc
local integer Xsc
local unit Csc
local integer Vsc
local unit Bsc
local integer Nsc
local unit Msc
local integer wtc
local unit utc
local integer rtc
local unit stc
local integer ttc
local unit itc
local integer Stc
local unit ctc
local integer otc
local effect Otc
local unit ltc
local integer btc
local unit ytc
local integer ptc
local unit etc
local integer qtc
local effect atc
local unit ntc
local integer dtc
local unit ftc
local integer Rtc
local unit Ttc
local integer Ytc
local effect Gtc
local unit gtc
local integer htc
local unit Ftc
local integer ktc
local unit jtc
local integer xtc
local effect vtc
local unit mtc
local integer Qtc
local unit Wtc
local integer Etc
local unit Ztc
local integer Utc
local effect Itc
local unit Ptc
local integer Atc
local unit Dtc
local integer Htc
local unit Jtc
local integer Ktc
local effect Ltc
local unit Xtc
local integer Ctc
local unit Vtc
local integer Btc
local unit Ntc
local integer Mtc
local effect wic
local unit uic
local integer ric
local unit sic
local integer tic
local unit iic
local integer Sic
local effect cic
local unit oic
local integer Oic
local unit lic
local integer bic
local unit yic
local integer pic
local effect eic
local unit qic
local integer aic
local unit nic
local integer dic
local unit fic
local integer Ric
local effect Tic
local unit Yic
local integer Gic
local unit gic
local integer hic
local unit Fic
local integer kic
local effect jic
local unit xic
local integer vic
local unit mic
local integer Qic
local unit Wic
local integer Eic
local effect Zic
local unit Uic
local integer Iic
local unit Pic
local integer Aic
local unit Dic
local integer Hic
local effect Jic
local unit Kic
local integer Lic
local unit Xic
local integer Cic
local unit Vic
local integer Bic
local effect Nic
local boolean Mic
local boolean wSc
local boolean uSc
local boolean rSc
local boolean sSc
local boolean tSc
local boolean iSc
local boolean SSc
local boolean cSc
local boolean oSc
local boolean OSc
local boolean lSc
local boolean bSc
local boolean ySc
local boolean pSc
local boolean eSc
local boolean qSc
local boolean aSc
local boolean nSc
local boolean dSc
local boolean fSc
local boolean RSc
local boolean TSc
local boolean YSc
local boolean GSc
local boolean gSc
local boolean hSc
local boolean FSc
local boolean kSc
local boolean jSc
local boolean xSc
local boolean vSc
local boolean mSc
local boolean QSc
local boolean WSc
local boolean ESc
local boolean ZSc
local boolean USc
local boolean ISc
local boolean PSc
local boolean ASc
local boolean DSc
local boolean HSc
local boolean JSc
local boolean KSc
local boolean LSc
local boolean XSc
local boolean CSc
local boolean VSc
local boolean BSc
local boolean NSc
local boolean MSc
local boolean wcc
local boolean ucc
local boolean rcc
local boolean scc
local boolean tcc
local boolean icc
local boolean Scc
local boolean ccc
local boolean occ
local boolean Occ
if GetItemLevel(M_c)==1 then
set wwc=Rj[e_c]
set uwc=$49303045
if RTS(wwc,uwc)!=null then
set Mic=true
else
set rwc=Rj[e_c]
set swc=$49303046
set Mic=RTS(rwc,swc)!=null
endif
if Mic then
set wSc=true
else
set twc=Rj[e_c]
set iwc=$49303047
set wSc=RTS(twc,iwc)!=null
endif
set uSc=wSc
else
set uSc=false
endif
if uSc then
set Swc=Rj[e_c]
set cwc=$49303045
if RTS(Swc,cwc)!=null==true then
set owc=Rj[e_c]
set Owc=$49303046
set rSc=RTS(owc,Owc)!=null==true
else
set rSc=false
endif
if rSc then
set lwc=Rj[e_c]
set bwc=$49303047
set sSc=RTS(lwc,bwc)!=null==true
else
set sSc=false
endif
if sSc then
set q_c=AddSpecialEffectTarget("Holy Light Void.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$49303045)
call gee(Rj[e_c],$49303046)
call gee(Rj[e_c],$49303047)
set ywc=Rj[e_c]
set pwc=$494D3038
call UnitAddItemById(ywc,pwc)
set ewc=q_c
call DestroyEffect(ewc)
endif
endif
set qwc=fj[e_c]
if GetItemLevel(qwc)==1 then
set awc=Rj[e_c]
set nwc=$49303048
if RTS(awc,nwc)!=null then
set tSc=true
else
set dwc=Rj[e_c]
set fwc=$4930304A
set tSc=RTS(dwc,fwc)!=null
endif
if tSc then
set iSc=true
else
set Rwc=Rj[e_c]
set Twc=$49303049
set iSc=RTS(Rwc,Twc)!=null
endif
if iSc then
set SSc=true
else
set Ywc=Rj[e_c]
set Gwc=$4930304B
set SSc=RTS(Ywc,Gwc)!=null
endif
set cSc=SSc
else
set cSc=false
endif
if cSc then
set gwc=Rj[e_c]
set hwc=$49303048
if RTS(gwc,hwc)!=null==true then
set Fwc=Rj[e_c]
set kwc=$4930304A
set oSc=RTS(Fwc,kwc)!=null==true
else
set oSc=false
endif
if oSc then
set a_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$49303048)
call gee(Rj[e_c],$4930304A)
set jwc=Rj[e_c]
set xwc=$494D3077
call UnitAddItemById(jwc,xwc)
set vwc=a_c
call DestroyEffect(vwc)
endif
set mwc=Rj[e_c]
set Qwc=$49303048
if RTS(mwc,Qwc)!=null==true then
set Wwc=Rj[e_c]
set Ewc=$49303049
set OSc=RTS(Wwc,Ewc)!=null==true
else
set OSc=false
endif
if OSc then
set n_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$49303048)
call gee(Rj[e_c],$49303049)
set Zwc=Rj[e_c]
set Uwc=$494D3074
call UnitAddItemById(Zwc,Uwc)
set Iwc=n_c
call DestroyEffect(Iwc)
endif
set Pwc=Rj[e_c]
set Awc=$49303048
if RTS(Pwc,Awc)!=null==true then
set Dwc=Rj[e_c]
set Hwc=$4930304B
set lSc=RTS(Dwc,Hwc)!=null==true
else
set lSc=false
endif
if lSc then
set d_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$49303048)
call gee(Rj[e_c],$4930304B)
set Jwc=Rj[e_c]
set Kwc=$494D3079
call UnitAddItemById(Jwc,Kwc)
set Lwc=d_c
call DestroyEffect(Lwc)
endif
set Xwc=Rj[e_c]
set Cwc=$4930304A
if RTS(Xwc,Cwc)!=null==true then
set Vwc=Rj[e_c]
set Bwc=$49303049
set bSc=RTS(Vwc,Bwc)!=null==true
else
set bSc=false
endif
if bSc then
set f_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$4930304A)
call gee(Rj[e_c],$49303049)
set Nwc=Rj[e_c]
set Mwc=$494D3076
call UnitAddItemById(Nwc,Mwc)
set wuc=f_c
call DestroyEffect(wuc)
endif
set uuc=Rj[e_c]
set ruc=$4930304A
if RTS(uuc,ruc)!=null==true then
set suc=Rj[e_c]
set tuc=$4930304B
set ySc=RTS(suc,tuc)!=null==true
else
set ySc=false
endif
if ySc then
set R_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$4930304A)
call gee(Rj[e_c],$4930304B)
set iuc=Rj[e_c]
set Suc=$494D3075
call UnitAddItemById(iuc,Suc)
set cuc=R_c
call DestroyEffect(cuc)
endif
set ouc=Rj[e_c]
set Ouc=$4930304B
if RTS(ouc,Ouc)!=null==true then
set luc=Rj[e_c]
set buc=$49303049
set pSc=RTS(luc,buc)!=null==true
else
set pSc=false
endif
if pSc then
set T_c=AddSpecialEffectTarget("Holy Light.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$4930304B)
call gee(Rj[e_c],$49303049)
set yuc=Rj[e_c]
set puc=$494D3078
call UnitAddItemById(yuc,puc)
set euc=T_c
call DestroyEffect(euc)
endif
endif
set quc=fj[e_c]
if GetItemLevel(quc)==2 then
set auc=Rj[e_c]
set nuc=$494D3074
if RTS(auc,nuc)!=null then
set eSc=true
else
set duc=Rj[e_c]
set fuc=$494D3077
set eSc=RTS(duc,fuc)!=null
endif
if eSc then
set qSc=true
else
set Ruc=Rj[e_c]
set Tuc=$494D3079
set qSc=RTS(Ruc,Tuc)!=null
endif
if qSc then
set aSc=true
else
set Yuc=Rj[e_c]
set Guc=$494D3076
set aSc=RTS(Yuc,Guc)!=null
endif
if aSc then
set nSc=true
else
set guc=Rj[e_c]
set huc=$494D3075
set nSc=RTS(guc,huc)!=null
endif
if nSc then
set dSc=true
else
set Fuc=Rj[e_c]
set kuc=$494D3078
set dSc=RTS(Fuc,kuc)!=null
endif
set fSc=dSc
else
set fSc=false
endif
if fSc then
set juc=Rj[e_c]
set xuc=$494D3074
if RTS(juc,xuc)!=null==true then
set vuc=Rj[e_c]
set muc=$494D3077
set RSc=RTS(vuc,muc)!=null==true
else
set RSc=false
endif
if RSc then
set Y_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3074)
call gee(Rj[e_c],$494D3077)
set Quc=Rj[e_c]
set Wuc=$494D306B
call UnitAddItemById(Quc,Wuc)
set Euc=Y_c
call DestroyEffect(Euc)
endif
set Zuc=Rj[e_c]
set Uuc=$494D3077
if RTS(Zuc,Uuc)!=null==true then
set Iuc=Rj[e_c]
set Puc=$494D3079
set TSc=RTS(Iuc,Puc)!=null==true
else
set TSc=false
endif
if TSc then
set G_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3077)
call gee(Rj[e_c],$494D3079)
set Auc=Rj[e_c]
set Duc=$494D3066
call UnitAddItemById(Auc,Duc)
set Huc=G_c
call DestroyEffect(Huc)
endif
set Juc=Rj[e_c]
set Kuc=$494D3077
if RTS(Juc,Kuc)!=null==true then
set Luc=Rj[e_c]
set Xuc=$494D3078
set YSc=RTS(Luc,Xuc)!=null==true
else
set YSc=false
endif
if YSc then
set g_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3077)
call gee(Rj[e_c],$494D3078)
set Cuc=Rj[e_c]
set Vuc=$494D3068
call UnitAddItemById(Cuc,Vuc)
set Buc=g_c
call DestroyEffect(Buc)
endif
set Nuc=Rj[e_c]
set Muc=$494D3074
if RTS(Nuc,Muc)!=null==true then
set wrc=Rj[e_c]
set urc=$494D3079
set GSc=RTS(wrc,urc)!=null==true
else
set GSc=false
endif
if GSc then
set h_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3074)
call gee(Rj[e_c],$494D3079)
set rrc=Rj[e_c]
set src=$494D3067
call UnitAddItemById(rrc,src)
set trc=h_c
call DestroyEffect(trc)
endif
set irc=Rj[e_c]
set Src=$494D3074
if RTS(irc,Src)!=null==true then
set crc=Rj[e_c]
set orc=$494D3078
set gSc=RTS(crc,orc)!=null==true
else
set gSc=false
endif
if gSc then
set F_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3074)
call gee(Rj[e_c],$494D3078)
set Orc=Rj[e_c]
set lrc=$494D3069
call UnitAddItemById(Orc,lrc)
set brc=F_c
call DestroyEffect(brc)
endif
set yrc=Rj[e_c]
set prc=$494D3075
if RTS(yrc,prc)!=null==true then
set erc=Rj[e_c]
set qrc=$494D3076
set hSc=RTS(erc,qrc)!=null==true
else
set hSc=false
endif
if hSc then
set k_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3076)
call gee(Rj[e_c],$494D3075)
set arc=Rj[e_c]
set nrc=$494D306A
call UnitAddItemById(arc,nrc)
set drc=k_c
call DestroyEffect(drc)
endif
set frc=Rj[e_c]
set Rrc=$494D3078
if RTS(frc,Rrc)!=null==true then
set Trc=Rj[e_c]
set Yrc=$494D3076
set FSc=RTS(Trc,Yrc)!=null==true
else
set FSc=false
endif
if FSc then
set j_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3076)
call gee(Rj[e_c],$494D3078)
set Grc=Rj[e_c]
set grc=$494D3064
call UnitAddItemById(Grc,grc)
set hrc=j_c
call DestroyEffect(hrc)
endif
set Frc=Rj[e_c]
set krc=$494D3077
if RTS(Frc,krc)!=null==true then
set jrc=Rj[e_c]
set xrc=$494D3076
set kSc=RTS(jrc,xrc)!=null==true
else
set kSc=false
endif
if kSc then
set x_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3076)
call gee(Rj[e_c],$494D3077)
set vrc=Rj[e_c]
set mrc=$494D3062
call UnitAddItemById(vrc,mrc)
set Qrc=x_c
call DestroyEffect(Qrc)
endif
set Wrc=Rj[e_c]
set Erc=$494D3075
if RTS(Wrc,Erc)!=null==true then
set Zrc=Rj[e_c]
set Urc=$494D3077
set jSc=RTS(Zrc,Urc)!=null==true
else
set jSc=false
endif
if jSc then
set v_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3077)
call gee(Rj[e_c],$494D3075)
set Irc=Rj[e_c]
set Prc=$494D306C
call UnitAddItemById(Irc,Prc)
set Arc=v_c
call DestroyEffect(Arc)
endif
set Drc=Rj[e_c]
set Hrc=$494D3074
if RTS(Drc,Hrc)!=null==true then
set Jrc=Rj[e_c]
set Krc=$494D3076
set xSc=RTS(Jrc,Krc)!=null==true
else
set xSc=false
endif
if xSc then
set m_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3076)
call gee(Rj[e_c],$494D3074)
set Lrc=Rj[e_c]
set Xrc=$494D3039
call UnitAddItemById(Lrc,Xrc)
set Crc=m_c
call DestroyEffect(Crc)
endif
set Vrc=Rj[e_c]
set Brc=$494D3075
if RTS(Vrc,Brc)!=null==true then
set Nrc=Rj[e_c]
set Mrc=$494D3074
set vSc=RTS(Nrc,Mrc)!=null==true
else
set vSc=false
endif
if vSc then
set Q_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3074)
call gee(Rj[e_c],$494D3075)
set wsc=Rj[e_c]
set usc=$494D306D
call UnitAddItemById(wsc,usc)
set rsc=Q_c
call DestroyEffect(rsc)
endif
set ssc=Rj[e_c]
set tsc=$494D3079
if RTS(ssc,tsc)!=null==true then
set isc=Rj[e_c]
set Ssc=$494D3076
set mSc=RTS(isc,Ssc)!=null==true
else
set mSc=false
endif
if mSc then
set W_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3076)
call gee(Rj[e_c],$494D3079)
set csc=Rj[e_c]
set osc=$494D3061
call UnitAddItemById(csc,osc)
set Osc=W_c
call DestroyEffect(Osc)
endif
set lsc=Rj[e_c]
set bsc=$494D3075
if RTS(lsc,bsc)!=null==true then
set ysc=Rj[e_c]
set psc=$494D3078
set QSc=RTS(ysc,psc)!=null==true
else
set QSc=false
endif
if QSc then
set E_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3075)
call gee(Rj[e_c],$494D3078)
set esc=Rj[e_c]
set qsc=$494D3063
call UnitAddItemById(esc,qsc)
set asc=E_c
call DestroyEffect(asc)
endif
set nsc=Rj[e_c]
set dsc=$494D3075
if RTS(nsc,dsc)!=null==true then
set fsc=Rj[e_c]
set Rsc=$494D3079
set WSc=RTS(fsc,Rsc)!=null==true
else
set WSc=false
endif
if WSc then
set Z_c=AddSpecialEffectTarget("Holy Light Royal.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3075)
call gee(Rj[e_c],$494D3079)
set Tsc=Rj[e_c]
set Ysc=$494D3065
call UnitAddItemById(Tsc,Ysc)
set Gsc=Z_c
call DestroyEffect(Gsc)
endif
endif
set gsc=Rj[e_c]
set hsc=$494D3039
if RTS(gsc,hsc)!=null then
set ESc=true
else
set Fsc=Rj[e_c]
set ksc=$494D3061
set ESc=RTS(Fsc,ksc)!=null
endif
if ESc then
set ZSc=true
else
set jsc=Rj[e_c]
set xsc=$494D3062
set ZSc=RTS(jsc,xsc)!=null
endif
if ZSc then
set USc=true
else
set vsc=Rj[e_c]
set msc=$494D3063
set USc=RTS(vsc,msc)!=null
endif
if USc then
set ISc=true
else
set Qsc=Rj[e_c]
set Wsc=$494D3064
set ISc=RTS(Qsc,Wsc)!=null
endif
if ISc then
set PSc=true
else
set Esc=Rj[e_c]
set Zsc=$494D3065
set PSc=RTS(Esc,Zsc)!=null
endif
if PSc then
set ASc=true
else
set Usc=Rj[e_c]
set Isc=$494D3066
set ASc=RTS(Usc,Isc)!=null
endif
if ASc then
set DSc=true
else
set Psc=Rj[e_c]
set Asc=$494D3067
set DSc=RTS(Psc,Asc)!=null
endif
if DSc then
set HSc=true
else
set Dsc=Rj[e_c]
set Hsc=$494D3068
set HSc=RTS(Dsc,Hsc)!=null
endif
if HSc then
set JSc=true
else
set Jsc=Rj[e_c]
set Ksc=$494D3069
set JSc=RTS(Jsc,Ksc)!=null
endif
if JSc then
set KSc=true
else
set Lsc=Rj[e_c]
set Xsc=$494D306A
set KSc=RTS(Lsc,Xsc)!=null
endif
if KSc then
set LSc=true
else
set Csc=Rj[e_c]
set Vsc=$494D306B
set LSc=RTS(Csc,Vsc)!=null
endif
if LSc then
set XSc=true
else
set Bsc=Rj[e_c]
set Nsc=$494D306C
set XSc=RTS(Bsc,Nsc)!=null
endif
if XSc then
set CSc=true
else
set Msc=Rj[e_c]
set wtc=$494D306D
set CSc=RTS(Msc,wtc)!=null
endif
if CSc then
set utc=Rj[e_c]
set rtc=$494D3038
if RTS(utc,rtc)!=null then
set stc=Rj[e_c]
set ttc=$494D3038
if RTS(stc,ttc)!=null==true then
set itc=Rj[e_c]
set Stc=$494D3063
set VSc=RTS(itc,Stc)!=null==true
else
set VSc=false
endif
if VSc then
set U_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3063)
set ctc=Rj[e_c]
set otc=$494D3034
call UnitAddItemById(ctc,otc)
set Otc=U_c
call DestroyEffect(Otc)
endif
set ltc=Rj[e_c]
set btc=$494D3038
if RTS(ltc,btc)!=null==true then
set ytc=Rj[e_c]
set ptc=$494D306A
set BSc=RTS(ytc,ptc)!=null==true
else
set BSc=false
endif
if BSc then
set I_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D306A)
set etc=Rj[e_c]
set qtc=$494D3034
call UnitAddItemById(etc,qtc)
set atc=I_c
call DestroyEffect(atc)
endif
set ntc=Rj[e_c]
set dtc=$494D3038
if RTS(ntc,dtc)!=null==true then
set ftc=Rj[e_c]
set Rtc=$494D306D
set NSc=RTS(ftc,Rtc)!=null==true
else
set NSc=false
endif
if NSc then
set P_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D306D)
set Ttc=Rj[e_c]
set Ytc=$494D3033
call UnitAddItemById(Ttc,Ytc)
set Gtc=P_c
call DestroyEffect(Gtc)
endif
set gtc=Rj[e_c]
set htc=$494D3038
if RTS(gtc,htc)!=null==true then
set Ftc=Rj[e_c]
set ktc=$494D3067
set MSc=RTS(Ftc,ktc)!=null==true
else
set MSc=false
endif
if MSc then
set A_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3067)
set jtc=Rj[e_c]
set xtc=$494D3033
call UnitAddItemById(jtc,xtc)
set vtc=A_c
call DestroyEffect(vtc)
endif
set mtc=Rj[e_c]
set Qtc=$494D3038
if RTS(mtc,Qtc)!=null==true then
set Wtc=Rj[e_c]
set Etc=$494D3069
set wcc=RTS(Wtc,Etc)!=null==true
else
set wcc=false
endif
if wcc then
set D_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3069)
set Ztc=Rj[e_c]
set Utc=$494D3035
call UnitAddItemById(Ztc,Utc)
set Itc=D_c
call DestroyEffect(Itc)
endif
set Ptc=Rj[e_c]
set Atc=$494D3038
if RTS(Ptc,Atc)!=null==true then
set Dtc=Rj[e_c]
set Htc=$494D3061
set ucc=RTS(Dtc,Htc)!=null==true
else
set ucc=false
endif
if ucc then
set H_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3061)
set Jtc=Rj[e_c]
set Ktc=$494D3035
call UnitAddItemById(Jtc,Ktc)
set Ltc=H_c
call DestroyEffect(Ltc)
endif
set Xtc=Rj[e_c]
set Ctc=$494D3038
if RTS(Xtc,Ctc)!=null==true then
set Vtc=Rj[e_c]
set Btc=$494D306C
set rcc=RTS(Vtc,Btc)!=null==true
else
set rcc=false
endif
if rcc then
set J_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D306C)
set Ntc=Rj[e_c]
set Mtc=$494D3037
call UnitAddItemById(Ntc,Mtc)
set wic=J_c
call DestroyEffect(wic)
endif
set uic=Rj[e_c]
set ric=$494D3038
if RTS(uic,ric)!=null==true then
set sic=Rj[e_c]
set tic=$494D3066
set scc=RTS(sic,tic)!=null==true
else
set scc=false
endif
if scc then
set K_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3066)
set iic=Rj[e_c]
set Sic=$494D3037
call UnitAddItemById(iic,Sic)
set cic=K_c
call DestroyEffect(cic)
endif
set oic=Rj[e_c]
set Oic=$494D3038
if RTS(oic,Oic)!=null==true then
set lic=Rj[e_c]
set bic=$494D3068
set tcc=RTS(lic,bic)!=null==true
else
set tcc=false
endif
if tcc then
set L_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3068)
set yic=Rj[e_c]
set pic=$494D3036
call UnitAddItemById(yic,pic)
set eic=L_c
call DestroyEffect(eic)
endif
set qic=Rj[e_c]
set aic=$494D3038
if RTS(qic,aic)!=null==true then
set nic=Rj[e_c]
set dic=$494D3039
set icc=RTS(nic,dic)!=null==true
else
set icc=false
endif
if icc then
set X_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3039)
set fic=Rj[e_c]
set Ric=$494D3036
call UnitAddItemById(fic,Ric)
set Tic=X_c
call DestroyEffect(Tic)
endif
set Yic=Rj[e_c]
set Gic=$494D3038
if RTS(Yic,Gic)!=null==true then
set gic=Rj[e_c]
set hic=$494D3065
set Scc=RTS(gic,hic)!=null==true
else
set Scc=false
endif
if Scc then
set C_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3065)
set Fic=Rj[e_c]
set kic=$494D3032
call UnitAddItemById(Fic,kic)
set jic=C_c
call DestroyEffect(jic)
endif
set xic=Rj[e_c]
set vic=$494D3038
if RTS(xic,vic)!=null==true then
set mic=Rj[e_c]
set Qic=$494D3064
set ccc=RTS(mic,Qic)!=null==true
else
set ccc=false
endif
if ccc then
set V_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3064)
set Wic=Rj[e_c]
set Eic=$494D3032
call UnitAddItemById(Wic,Eic)
set Zic=V_c
call DestroyEffect(Zic)
endif
set Uic=Rj[e_c]
set Iic=$494D3038
if RTS(Uic,Iic)!=null==true then
set Pic=Rj[e_c]
set Aic=$494D3062
set occ=RTS(Pic,Aic)!=null==true
else
set occ=false
endif
if occ then
set B_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D3062)
set Dic=Rj[e_c]
set Hic=$494D3031
call UnitAddItemById(Dic,Hic)
set Jic=B_c
call DestroyEffect(Jic)
endif
set Kic=Rj[e_c]
set Lic=$494D3038
if RTS(Kic,Lic)!=null==true then
set Xic=Rj[e_c]
set Cic=$494D306B
set Occ=RTS(Xic,Cic)!=null==true
else
set Occ=false
endif
if Occ then
set N_c=AddSpecialEffectTarget("Holy Light Nature.mdl",Rj[e_c],"origin")
call gee(Rj[e_c],$494D3038)
call gee(Rj[e_c],$494D306B)
set Vic=Rj[e_c]
set Bic=$494D3031
call UnitAddItemById(Vic,Bic)
set Nic=N_c
call DestroyEffect(Nic)
endif
endif
endif
set q_c=null
set a_c=null
set n_c=null
set d_c=null
set f_c=null
set R_c=null
set T_c=null
set Y_c=null
set G_c=null
set g_c=null
set h_c=null
set F_c=null
set k_c=null
set j_c=null
set x_c=null
set v_c=null
set m_c=null
set Q_c=null
set W_c=null
set E_c=null
set Z_c=null
set U_c=null
set I_c=null
set P_c=null
set A_c=null
set D_c=null
set H_c=null
set J_c=null
set K_c=null
set L_c=null
set X_c=null
set C_c=null
set V_c=null
set B_c=null
set N_c=null
set M_c=null
set wwc=null
set rwc=null
set twc=null
set Swc=null
set owc=null
set lwc=null
set ywc=null
set ewc=null
set qwc=null
set awc=null
set dwc=null
set Rwc=null
set Ywc=null
set gwc=null
set Fwc=null
set jwc=null
set vwc=null
set mwc=null
set Wwc=null
set Zwc=null
set Iwc=null
set Pwc=null
set Dwc=null
set Jwc=null
set Lwc=null
set Xwc=null
set Vwc=null
set Nwc=null
set wuc=null
set uuc=null
set suc=null
set iuc=null
set cuc=null
set ouc=null
set luc=null
set yuc=null
set euc=null
set quc=null
set auc=null
set duc=null
set Ruc=null
set Yuc=null
set guc=null
set Fuc=null
set juc=null
set vuc=null
set Quc=null
set Euc=null
set Zuc=null
set Iuc=null
set Auc=null
set Huc=null
set Juc=null
set Luc=null
set Cuc=null
set Buc=null
set Nuc=null
set wrc=null
set rrc=null
set trc=null
set irc=null
set crc=null
set Orc=null
set brc=null
set yrc=null
set erc=null
set arc=null
set drc=null
set frc=null
set Trc=null
set Grc=null
set hrc=null
set Frc=null
set jrc=null
set vrc=null
set Qrc=null
set Wrc=null
set Zrc=null
set Irc=null
set Arc=null
set Drc=null
set Jrc=null
set Lrc=null
set Crc=null
set Vrc=null
set Nrc=null
set wsc=null
set rsc=null
set ssc=null
set isc=null
set csc=null
set Osc=null
set lsc=null
set ysc=null
set esc=null
set asc=null
set nsc=null
set fsc=null
set Tsc=null
set Gsc=null
set gsc=null
set Fsc=null
set jsc=null
set vsc=null
set Qsc=null
set Esc=null
set Usc=null
set Psc=null
set Dsc=null
set Jsc=null
set Lsc=null
set Csc=null
set Bsc=null
set Msc=null
set utc=null
set stc=null
set itc=null
set ctc=null
set Otc=null
set ltc=null
set ytc=null
set etc=null
set atc=null
set ntc=null
set ftc=null
set Ttc=null
set Gtc=null
set gtc=null
set Ftc=null
set jtc=null
set vtc=null
set mtc=null
set Wtc=null
set Ztc=null
set Itc=null
set Ptc=null
set Dtc=null
set Jtc=null
set Ltc=null
set Xtc=null
set Vtc=null
set Ntc=null
set wic=null
set uic=null
set sic=null
set iic=null
set cic=null
set oic=null
set lic=null
set yic=null
set eic=null
set qic=null
set nic=null
set fic=null
set Tic=null
set Yic=null
set gic=null
set Fic=null
set jic=null
set xic=null
set mic=null
set Wic=null
set Zic=null
set Uic=null
set Pic=null
set Dic=null
set Jic=null
set Kic=null
set Xic=null
set Vic=null
set Nic=null
endfunction
function lee takes integer ree,string see returns nothing
local integer tee
local string iee
local integer See
local real cee
local integer oee
local string Oee
set aW[qW]=see
set qW=qW+1
call LWO("when calling randomBonusR in NewRandom, line 115")
set iee="when calling alloc_CallbackSingle_doAfter_doAfter_doAfter_doAfter_doAfter_NewRandom in NewRandom, line 116"
set aW[qW]=iee
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set See=fF
set RF[See]=777
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_doAfter_doAfter_doAfter_NewRandom.","when calling error in NewRandom, line 116")
set See=0
endif
else
set dF=dF-1
set See=nF[dF]
set RF[See]=777
endif
set qW=qW-1
set tee=See
set cee=1.
set oee=tee
set Oee="when calling doAfter in NewRandom, line 116"
set aW[qW]=Oee
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),cee,oee,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
endfunction
function m0l takes integer e0l returns nothing
local unit q0l=pQ[e0l]
local unit a0l
local integer n0l
local unit d0l
local widget f0l
local real R0l
local boolean T0l
local boolean Y0l
local attacktype G0l
local damagetype g0l
local weapontype h0l
local effect F0l
local widget k0l
local string j0l
local string x0l
local boolean v0l
if UnitAlive(q0l) then
set a0l=pQ[e0l]
set n0l=$42303831
set v0l=GetUnitAbilityLevel(a0l,n0l)>0
else
set v0l=false
endif
if v0l then
set d0l=eQ[e0l]
set f0l=pQ[e0l]
set R0l=125.+25.*qQ[e0l]
set T0l=true
set Y0l=false
set G0l=ATTACK_TYPE_NORMAL
set g0l=DAMAGE_TYPE_MAGIC
set h0l=WEAPON_TYPE_WHOKNOWS
call UnitDamageTarget(d0l,f0l,R0l,T0l,Y0l,G0l,g0l,h0l)
set k0l=pQ[e0l]
set j0l="Pillar of Flame Blue.mdl"
set x0l="origin"
set F0l=AddSpecialEffectTarget(j0l,k0l,x0l)
call DestroyEffect(F0l)
endif
set q0l=null
set a0l=null
set d0l=null
set f0l=null
set G0l=null
set g0l=null
set h0l=null
set F0l=null
set k0l=null
endfunction
function mlO takes integer klO returns nothing
local unit jlO=wl
local integer xlO=$41323855
local unit vlO
call UnitAddAbility(jlO,xlO)
set vlO=wl
call DisplayTextToPlayer(GetOwningPlayer(vlO),0.,0.,"You can summon Bonelord again")
set jlO=null
set vlO=null
endfunction
function ool takes integer Ucl,string Icl returns nothing
local integer Pcl
local integer Acl
local integer Dcl
local string Hcl
local integer Jcl
local string Kcl
local integer Lcl
local integer Xcl
local integer Ccl
local string Vcl
local integer Bcl
local string Ncl
local string Mcl
local integer wol
local real uol
local integer rol
local string sol
local timer tol
local real iol
local integer Sol
local string col
set aW[qW]=Icl
set qW=qW+1
set Dcl=gY
set Hcl="when calling shuffle in NewRandom, line 94"
set aW[qW]=Hcl
set qW=qW+1
if ok[Dcl]==0 then
if Dcl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Dcl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Jcl=gY
set Kcl="when calling getFirst in NewRandom, line 95"
set aW[qW]=Kcl
set qW=qW+1
if ok[Jcl]==0 then
if Jcl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Xcl=Jcl
set Lcl=Hv[Kv[Vv[Xcl]]]
set qW=qW-1
set Pcl=Lcl
set Ccl=Pcl
set Vcl="when calling numRace in NewRandom, line 96"
set aW[qW]=Vcl
set qW=qW+1
if Ccl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if Ccl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if Ccl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if Ccl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if Ccl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if Ccl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if Ccl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if Ccl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if Ccl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if Ccl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if Ccl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if Ccl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if Ccl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if Ccl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if Ccl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if Ccl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if Ccl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if Ccl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if Ccl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if Ccl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Tu,Pcl,"when calling pickRaceRandom in NewRandom, line 97")
call eWp(gY,Pcl,"when calling remove in NewRandom, line 98")
set Bcl=gY
set Ncl="when calling shuffle in NewRandom, line 99"
set aW[qW]=Ncl
set qW=qW+1
if ok[Bcl]==0 then
if Bcl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Bcl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Mcl="when calling alloc_CallbackSingle_doAfter_doAfter_NewRandom in NewRandom, line 100"
set aW[qW]=Mcl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set wol=fF
set RF[wol]=771
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_NewRandom.","when calling error in NewRandom, line 100")
set wol=0
endif
else
set dF=dF-1
set wol=nF[dF]
set RF[wol]=771
endif
set qW=qW-1
set Acl=wol
set Am[Acl]=Pm[Ucl]
set uol=.5
set rol=Acl
set sol="when calling doAfter in NewRandom, line 100"
set aW[qW]=sol
set qW=qW+1
set tol=F6c("when calling getTimer in ClosureTimers, line 27")
set iol=uol
set Sol=rol
set col="when calling doAfter in ClosureTimers, line 27"
set aW[qW]=col
set qW=qW+1
call P2s(Sol,tol,iol,"when calling start in ClosureTimers, line 16")
set qW=qW-1
set qW=qW-1
set qW=qW-1
set tol=null
endfunction
function pmw takes integer Xvw returns nothing
local unit Mvw=Lj[Xvw]
local integer wmw=$41313231
local integer Cvw=GetUnitAbilityLevel(Mvw,wmw)
local unit umw=Lj[Xvw]
local real Vvw=GetUnitX(umw)
local unit rmw=Lj[Xvw]
local real Bvw=GetUnitY(rmw)
local unit Nvw
local unit smw
local unit tmw
local real imw
local unit Smw
local integer cmw
local unit omw
local integer Omw
local integer lmw
local unit bmw
local string ymw
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",Vvw,Bvw))
set smw=Lj[Xvw]
set Nvw=CreateUnit(GetOwningPlayer(smw),$75303030,Vvw,Bvw,0.)
set tmw=Nvw
set imw=5.
call UnitApplyTimedLife(tmw,$42544C46,imw)
set Smw=Nvw
set cmw=$41313232
call UnitAddAbility(Smw,cmw)
set omw=Nvw
set Omw=$41313232
set lmw=Cvw
call SetUnitAbilityLevel(omw,Omw,lmw)
set bmw=Nvw
set ymw="stomp"
call IssueImmediateOrder(bmw,ymw)
set Nvw=null
set Mvw=null
set umw=null
set rmw=null
set smw=null
set tmw=null
set Smw=null
set omw=null
set bmw=null
endfunction
function qFi takes integer iFi returns nothing
local group SFi=CreateGroup()
local filterfunc cFi=Filter(ytw)
local unit oFi
local group OFi
local group lFi
local group bFi
local unit yFi
local group pFi
local boolexpr eFi
call GroupEnumUnitsInRect(SFi,bj_mapInitialPlayableArea,cFi)
set OFi=SFi
loop
set lFi=OFi
exitwhen not (FirstOfGroup(lFi)!=null)
set bFi=OFi
set yFi=FirstOfGroup(bFi)
call GroupRemoveUnit(bFi,yFi)
set oFi=yFi
call SaveInteger(qu,GetHandleId(oFi),$6D6F7665,lx[iFi])
endloop
set pFi=SFi
call DestroyGroup(pFi)
set eFi=cFi
call DestroyBoolExpr(eFi)
set SFi=null
set cFi=null
set oFi=null
set OFi=null
set lFi=null
set bFi=null
set yFi=null
set pFi=null
set eFi=null
endfunction
function bNe takes integer lNe returns boolean
if lNe==$6F30314D or lNe==$6F30314E or lNe==$6F30314F or lNe==$6F303150 or lNe==$6F303151 or lNe==$6F303152 or lNe==$6F303153 or lNe==$6F303154 or lNe==$6F303155 or lNe==$6F303156 or lNe==$6F303157 or lNe==$6F303158 or lNe==$7830327B or lNe==$78303276 or lNe==$78303270 or lNe==$78303275 or lNe==$6E303054 or lNe==$6830314D then
return true
else
return false
endif
endfunction
function eel takes unit ayl,integer nyl,integer dyl returns nothing
local texttag fyl
local texttag Ryl
local texttag Tyl
local texttag Yyl
local texttag Gyl
local texttag gyl
local texttag hyl
local texttag Fyl
local texttag kyl
local texttag jyl
local texttag xyl
local texttag vyl
local texttag myl
local texttag Qyl
local texttag Wyl
local unit Eyl
local unit Zyl
local unit Uyl
local integer Iyl
local texttag Pyl
local real Ayl
local real Dyl
local real Hyl
local unit Jyl
local unit Kyl
local texttag Lyl
local integer Xyl
local integer Cyl
local integer Vyl
local integer Byl
local texttag Nyl
local real Myl
local real wpl
local texttag upl
local boolean rpl
local texttag spl
local boolean tpl
local unit ipl
local unit Spl
local unit cpl
local integer opl
local texttag Opl
local real lpl
local real bpl
local real ypl
local unit ppl
local unit epl
local texttag qpl
local integer apl
local integer npl
local integer dpl
local integer fpl
local texttag Rpl
local real Tpl
local real Ypl
local texttag Gpl
local boolean gpl
local texttag hpl
local boolean Fpl
local unit kpl
local unit jpl
local unit xpl
local integer vpl
local texttag mpl
local real Qpl
local real Wpl
local real Epl
local unit Zpl
local unit Upl
local texttag Ipl
local integer Ppl
local integer Apl
local integer Dpl
local integer Hpl
local texttag Jpl
local real Kpl
local real Lpl
local texttag Xpl
local boolean Cpl
local texttag Vpl
local boolean Bpl
local trigger Npl
local real Mpl
local real wel
local real uel
local real rel
local real sel
local real tel
local real iel
local real Sel
local real cel
local real oel
local real Oel
local real lel
local real bel
local real yel
local real pel
if ayl==O[nyl] then
set Bw[nyl]=dyl
set Eyl=ayl
set Zyl=Eyl
set Mpl=GetUnitX(Zyl)
set Uyl=Eyl
set oel=Mpl
set Oel=GetUnitY(Uyl)
set wel=oel
set uel=Oel
set Iyl=Bw[nyl]
set fyl=PBr(wel,uel,I2S(Iyl))
set Pyl=fyl
set Jyl=ayl
set Ayl=GetUnitX(Jyl)
set Kyl=ayl
set Dyl=GetUnitY(Kyl)
set Hyl=350.
call SetTextTagPos(Pyl,Ayl,Dyl,Hyl)
set Ryl=fyl
set Lyl=Ryl
set Xyl=255
set Cyl=220
set Vyl=0
set Byl=255
call SetTextTagColor(Lyl,Xyl,Cyl,Vyl,Byl)
set Tyl=Ryl
set Nyl=Tyl
set Myl=0.
set wpl=0.
call SetTextTagVelocity(Nyl,Myl,wpl)
set Yyl=Tyl
set upl=Yyl
set rpl=true
call SetTextTagVisibility(upl,rpl)
set Gyl=Yyl
set spl=Gyl
set tpl=true
call SetTextTagPermanent(spl,tpl)
set wu[nyl]=Gyl
endif
if ayl==b[nyl] then
set Cw[nyl]=dyl
set ipl=ayl
set Spl=ipl
set rel=GetUnitX(Spl)
set cpl=ipl
set lel=rel
set bel=GetUnitY(cpl)
set sel=lel
set tel=bel
set opl=Cw[nyl]
set gyl=PBr(sel,tel,I2S(opl))
set Opl=gyl
set ppl=ayl
set lpl=GetUnitX(ppl)
set epl=ayl
set bpl=GetUnitY(epl)
set ypl=350.
call SetTextTagPos(Opl,lpl,bpl,ypl)
set hyl=gyl
set qpl=hyl
set apl=255
set npl=220
set dpl=0
set fpl=255
call SetTextTagColor(qpl,apl,npl,dpl,fpl)
set Fyl=hyl
set Rpl=Fyl
set Tpl=0.
set Ypl=0.
call SetTextTagVelocity(Rpl,Tpl,Ypl)
set kyl=Fyl
set Gpl=kyl
set gpl=true
call SetTextTagVisibility(Gpl,gpl)
set jyl=kyl
set hpl=jyl
set Fpl=true
call SetTextTagPermanent(hpl,Fpl)
set Nw[nyl]=jyl
endif
if ayl==l[nyl] then
set Vw[nyl]=dyl
set kpl=ayl
set jpl=kpl
set iel=GetUnitX(jpl)
set xpl=kpl
set yel=iel
set pel=GetUnitY(xpl)
set Sel=yel
set cel=pel
set vpl=Vw[nyl]
set xyl=PBr(Sel,cel,I2S(vpl))
set mpl=xyl
set Zpl=ayl
set Qpl=GetUnitX(Zpl)
set Upl=ayl
set Wpl=GetUnitY(Upl)
set Epl=350.
call SetTextTagPos(mpl,Qpl,Wpl,Epl)
set vyl=xyl
set Ipl=vyl
set Ppl=255
set Apl=220
set Dpl=0
set Hpl=255
call SetTextTagColor(Ipl,Ppl,Apl,Dpl,Hpl)
set myl=vyl
set Jpl=myl
set Kpl=0.
set Lpl=0.
call SetTextTagVelocity(Jpl,Kpl,Lpl)
set Qyl=myl
set Xpl=Qyl
set Cpl=true
call SetTextTagVisibility(Xpl,Cpl)
set Wyl=Qyl
set Vpl=Wyl
set Bpl=true
call SetTextTagPermanent(Vpl,Bpl)
set Mw[nyl]=Wyl
endif
set Npl=Ig
call EnableTrigger(Npl)
set fyl=null
set Ryl=null
set Tyl=null
set Yyl=null
set Gyl=null
set gyl=null
set hyl=null
set Fyl=null
set kyl=null
set jyl=null
set xyl=null
set vyl=null
set myl=null
set Qyl=null
set Wyl=null
set Eyl=null
set Zyl=null
set Uyl=null
set Pyl=null
set Jyl=null
set Kyl=null
set Lyl=null
set Nyl=null
set upl=null
set spl=null
set ipl=null
set Spl=null
set cpl=null
set Opl=null
set ppl=null
set epl=null
set qpl=null
set Rpl=null
set Gpl=null
set hpl=null
set kpl=null
set jpl=null
set xpl=null
set mpl=null
set Zpl=null
set Upl=null
set Ipl=null
set Jpl=null
set Xpl=null
set Vpl=null
set Npl=null
endfunction
function f6r takes integer n6r,integer d6r returns integer
if n6r==Re[d6r] then
set YW=Re[d6r]
set GW=Te[d6r]
return YW
endif
set YW=0
set GW=""
return YW
endfunction
function Ntt takes integer Ltt returns string
local integer Xtt=0
local string Ctt
local string Vtt
local string Btt
loop
exitwhen Xtt>19
call f6r(m[Ltt],Xtt)
set Btt=GW
set Vtt=Btt
set Ctt=Vtt
if Ctt!="" then
return Ctt
endif
set Xtt=Xtt+1
endloop
return ""
endfunction
function rJc takes nothing returns nothing
local integer Bkc
local integer Nkc
local multiboard Mkc
local integer wjc
local multiboard ujc
local integer rjc
local multiboard sjc
local string tjc
local multiboard ijc
local integer Sjc
local integer cjc
local integer ojc
local integer Ojc
local multiboard ljc
local integer bjc
local integer yjc
local multiboarditem pjc
local string ejc
local string qjc
local string ajc
local multiboarditem njc
local boolean djc
local boolean fjc
local multiboarditem Rjc
local real Tjc
local multiboarditem Yjc
local multiboard Gjc
local integer gjc
local integer hjc
local multiboarditem Fjc
local string kjc
local string jjc
local string xjc
local multiboarditem vjc
local boolean mjc
local boolean Qjc
local multiboarditem Wjc
local real Ejc
local multiboarditem Zjc
local multiboard Ujc
local integer Ijc
local integer Pjc
local multiboarditem Ajc
local string Djc
local string Hjc
local string Jjc
local multiboarditem Kjc
local boolean Ljc
local boolean Xjc
local multiboarditem Cjc
local real Vjc
local multiboarditem Bjc
local multiboard Njc
local integer Mjc
local integer wxc
local multiboarditem uxc
local string rxc
local string sxc
local string txc
local multiboarditem ixc
local boolean Sxc
local boolean cxc
local multiboarditem oxc
local real Oxc
local multiboarditem lxc
local multiboard bxc
local integer yxc
local integer pxc
local multiboarditem exc
local string qxc
local string axc
local string nxc
local multiboarditem dxc
local boolean fxc
local boolean Rxc
local multiboarditem Txc
local real Yxc
local multiboarditem Gxc
local multiboard gxc
local integer hxc
local integer Fxc
local multiboarditem kxc
local string jxc
local string xxc
local string vxc
local multiboarditem mxc
local boolean Qxc
local boolean Wxc
local multiboarditem Exc
local real Zxc
local multiboarditem Uxc
local multiboard Ixc
local integer Pxc
local integer Axc
local multiboarditem Dxc
local string Hxc
local string Jxc
local string Kxc
local multiboarditem Lxc
local boolean Xxc
local boolean Cxc
local multiboarditem Vxc
local real Bxc
local multiboarditem Nxc
local multiboard Mxc
local integer wvc
local integer uvc
local multiboarditem rvc
local string svc
local string tvc
local string ivc
local multiboarditem Svc
local boolean cvc
local boolean ovc
local multiboarditem Ovc
local real lvc
local multiboarditem bvc
local multiboard yvc
local integer pvc
local integer evc
local multiboarditem qvc
local string avc
local string nvc
local string dvc
local multiboarditem fvc
local boolean Rvc
local boolean Tvc
local multiboarditem Yvc
local real Gvc
local multiboarditem gvc
local multiboard hvc
local integer Fvc
local integer kvc
local multiboarditem jvc
local string xvc
local string vvc
local string mvc
local multiboarditem Qvc
local boolean Wvc
local boolean Evc
local multiboarditem Zvc
local real Uvc
local multiboarditem Ivc
local multiboard Pvc
local integer Avc
local integer Dvc
local multiboarditem Hvc
local string Jvc
local string Kvc
local string Lvc
local multiboarditem Xvc
local boolean Cvc
local boolean Vvc
local multiboarditem Bvc
local real Nvc
local multiboarditem Mvc
local multiboard wmc
local integer umc
local integer rmc
local multiboarditem smc
local string tmc
local string imc
local string Smc
local multiboarditem cmc
local boolean omc
local boolean Omc
local multiboarditem lmc
local real bmc
local multiboarditem ymc
local multiboard pmc
local integer emc
local integer qmc
local multiboarditem amc
local string nmc
local string dmc
local string fmc
local multiboarditem Rmc
local boolean Tmc
local boolean Ymc
local multiboarditem Gmc
local real gmc
local multiboarditem hmc
local multiboard Fmc
local integer kmc
local integer jmc
local multiboarditem xmc
local string vmc
local string mmc
local string Qmc
local multiboarditem Wmc
local boolean Emc
local boolean Zmc
local multiboarditem Umc
local real Imc
local multiboarditem Pmc
local multiboard Amc
local integer Dmc
local integer Hmc
local multiboarditem Jmc
local string Kmc
local string Lmc
local string Xmc
local multiboarditem Cmc
local boolean Vmc
local boolean Bmc
local multiboarditem Nmc
local real Mmc
local multiboarditem wQc
local multiboard uQc
local integer rQc
local integer sQc
local multiboarditem tQc
local string iQc
local string SQc
local string cQc
local multiboarditem oQc
local boolean OQc
local boolean lQc
local multiboarditem bQc
local real yQc
local multiboarditem pQc
local multiboard eQc
local integer qQc
local integer aQc
local multiboarditem nQc
local string dQc
local string fQc
local string RQc
local multiboarditem TQc
local boolean YQc
local boolean GQc
local multiboarditem gQc
local real hQc
local multiboarditem FQc
local multiboard kQc
local integer jQc
local integer xQc
local multiboarditem vQc
local string mQc
local string QQc
local string WQc
local multiboarditem EQc
local boolean ZQc
local boolean UQc
local multiboarditem IQc
local real PQc
local multiboarditem AQc
local multiboard DQc
local integer HQc
local integer JQc
local multiboarditem KQc
local string LQc
local string XQc
local string CQc
local multiboarditem VQc
local boolean BQc
local boolean NQc
local multiboarditem MQc
local real wWc
local multiboarditem uWc
local multiboard rWc
local integer sWc
local integer tWc
local multiboarditem iWc
local string SWc
local string cWc
local string oWc
local multiboarditem OWc
local boolean lWc
local boolean bWc
local multiboarditem yWc
local real pWc
local multiboarditem eWc
local multiboard qWc
local integer aWc
local integer nWc
local multiboarditem dWc
local string fWc
local string RWc
local string TWc
local multiboarditem YWc
local boolean GWc
local boolean gWc
local multiboarditem hWc
local real FWc
local multiboarditem kWc
local multiboard jWc
local integer xWc
local integer vWc
local multiboarditem mWc
local string QWc
local string WWc
local string EWc
local multiboarditem ZWc
local boolean UWc
local boolean IWc
local multiboarditem PWc
local real AWc
local multiboarditem DWc
local multiboard HWc
local integer JWc
local integer KWc
local multiboarditem LWc
local string XWc
local string CWc
local string VWc
local multiboarditem BWc
local boolean NWc
local boolean MWc
local multiboarditem wEc
local real uEc
local multiboarditem rEc
local multiboard sEc
local integer tEc
local integer iEc
local multiboarditem SEc
local string cEc
local string oEc
local string OEc
local multiboarditem lEc
local boolean bEc
local boolean yEc
local multiboarditem pEc
local real eEc
local multiboarditem qEc
local multiboard aEc
local integer nEc
local integer dEc
local multiboarditem fEc
local string REc
local string TEc
local string YEc
local multiboarditem GEc
local boolean gEc
local boolean hEc
local multiboarditem FEc
local real kEc
local multiboarditem jEc
local multiboard xEc
local integer vEc
local integer mEc
local multiboarditem QEc
local string WEc
local string EEc
local string ZEc
local multiboarditem UEc
local boolean IEc
local boolean PEc
local multiboarditem AEc
local real DEc
local multiboarditem HEc
local multiboard JEc
local integer KEc
local integer LEc
local multiboarditem XEc
local string CEc
local string VEc
local string BEc
local multiboarditem NEc
local boolean MEc
local boolean wZc
local multiboarditem uZc
local real rZc
local multiboarditem sZc
local multiboard tZc
local integer iZc
local integer SZc
local multiboarditem cZc
local string oZc
local string OZc
local string lZc
local multiboarditem bZc
local boolean yZc
local boolean pZc
local multiboarditem eZc
local real qZc
local multiboarditem aZc
local multiboard nZc
local integer dZc
local integer fZc
local multiboarditem RZc
local string TZc
local string YZc
local string GZc
local multiboarditem gZc
local boolean hZc
local boolean FZc
local multiboarditem kZc
local real jZc
local multiboarditem xZc
local multiboard vZc
local integer mZc
local integer QZc
local multiboarditem WZc
local string EZc
local string ZZc
local string UZc
local multiboarditem IZc
local boolean PZc
local boolean AZc
local multiboarditem DZc
local real HZc
local multiboarditem JZc
local multiboard KZc
local integer LZc
local integer XZc
local multiboarditem CZc
local string VZc
local string BZc
local string NZc
local multiboarditem MZc
local boolean wUc
local boolean uUc
local multiboarditem rUc
local real sUc
local multiboarditem tUc
local multiboard iUc
local integer SUc
local integer cUc
local multiboarditem oUc
local string OUc
local string lUc
local string bUc
local multiboarditem yUc
local boolean pUc
local boolean eUc
local multiboarditem qUc
local real aUc
local multiboarditem nUc
local multiboard dUc
local integer fUc
local integer RUc
local multiboarditem TUc
local string YUc
local string GUc
local string gUc
local multiboarditem hUc
local boolean FUc
local boolean kUc
local multiboarditem jUc
local real xUc
local multiboarditem vUc
local multiboard mUc
local integer QUc
local integer WUc
local multiboarditem EUc
local string ZUc
local string UUc
local string IUc
local multiboarditem PUc
local boolean AUc
local boolean DUc
local multiboarditem HUc
local real JUc
local multiboarditem KUc
local multiboard LUc
local integer XUc
local integer CUc
local multiboarditem VUc
local string BUc
local string NUc
local string MUc
local multiboarditem wIc
local boolean uIc
local boolean rIc
local multiboarditem sIc
local real tIc
local multiboarditem iIc
local multiboard SIc
local integer cIc
local integer oIc
local multiboarditem OIc
local string lIc
local string bIc
local string yIc
local multiboarditem pIc
local boolean eIc
local boolean qIc
local multiboarditem aIc
local real nIc
local multiboarditem dIc
local multiboard fIc
local integer RIc
local integer TIc
local multiboarditem YIc
local string GIc
local string gIc
local string hIc
local multiboarditem FIc
local boolean kIc
local boolean jIc
local multiboarditem xIc
local real vIc
local multiboarditem mIc
local multiboard QIc
local integer WIc
local integer EIc
local multiboarditem ZIc
local string UIc
local string IIc
local string PIc
local multiboarditem AIc
local boolean DIc
local boolean HIc
local multiboarditem JIc
local real KIc
local multiboarditem LIc
local multiboard XIc
local integer CIc
local integer VIc
local multiboarditem BIc
local string NIc
local string MIc
local string wPc
local multiboarditem uPc
local boolean rPc
local boolean sPc
local multiboarditem tPc
local real iPc
local multiboarditem SPc
local multiboard cPc
local integer oPc
local integer OPc
local multiboarditem lPc
local string bPc
local string yPc
local string pPc
local multiboarditem ePc
local boolean qPc
local boolean aPc
local multiboarditem nPc
local real dPc
local multiboarditem fPc
local multiboard RPc
local integer TPc
local integer YPc
local multiboarditem GPc
local string gPc
local string hPc
local string FPc
local multiboarditem kPc
local boolean jPc
local boolean xPc
local multiboarditem vPc
local real mPc
local multiboarditem QPc
local multiboard WPc
local integer EPc
local integer ZPc
local multiboarditem UPc
local string IPc
local string PPc
local string APc
local multiboarditem DPc
local boolean HPc
local boolean JPc
local multiboarditem KPc
local real LPc
local multiboarditem XPc
local multiboard CPc
local integer VPc
local integer BPc
local multiboarditem NPc
local string MPc
local string wAc
local string uAc
local multiboarditem rAc
local boolean sAc
local boolean tAc
local multiboarditem iAc
local real SAc
local multiboarditem cAc
local multiboard oAc
local integer OAc
local integer lAc
local multiboarditem bAc
local string yAc
local string pAc
local string eAc
local multiboarditem qAc
local boolean aAc
local boolean nAc
local multiboarditem dAc
local real fAc
local multiboarditem RAc
local multiboard TAc
local integer YAc
local integer GAc
local multiboarditem gAc
local string hAc
local string FAc
local string kAc
local multiboarditem jAc
local boolean xAc
local boolean vAc
local multiboarditem mAc
local real QAc
local multiboarditem WAc
local multiboard EAc
local integer ZAc
local integer UAc
local multiboarditem IAc
local string PAc
local string AAc
local string DAc
local multiboarditem HAc
local boolean JAc
local boolean KAc
local multiboarditem LAc
local real XAc
local multiboarditem CAc
local multiboard VAc
local integer BAc
local integer NAc
local multiboarditem MAc
local string wDc
local string uDc
local string rDc
local multiboarditem sDc
local boolean tDc
local boolean iDc
local multiboarditem SDc
local real cDc
local multiboarditem oDc
local multiboard ODc
local integer lDc
local integer bDc
local multiboarditem yDc
local string pDc
local string eDc
local string qDc
local multiboarditem aDc
local boolean nDc
local boolean dDc
local multiboarditem fDc
local real RDc
local multiboarditem TDc
local multiboard YDc
local integer GDc
local integer gDc
local multiboarditem hDc
local string FDc
local string kDc
local string jDc
local multiboarditem xDc
local boolean vDc
local boolean mDc
local multiboarditem QDc
local real WDc
local multiboarditem EDc
local multiboard ZDc
local integer UDc
local integer IDc
local multiboarditem PDc
local string ADc
local string DDc
local string HDc
local multiboarditem JDc
local boolean KDc
local boolean LDc
local multiboarditem XDc
local real CDc
local multiboarditem VDc
local multiboard BDc
local integer NDc
local integer MDc
local multiboarditem wHc
local string uHc
local string rHc
local string sHc
local multiboarditem tHc
local boolean iHc
local boolean SHc
local multiboarditem cHc
local real oHc
local multiboarditem OHc
local multiboard lHc
local integer bHc
local integer yHc
local multiboarditem pHc
local string eHc
local string qHc
local string aHc
local multiboarditem nHc
local boolean dHc
local boolean fHc
local multiboarditem RHc
local real THc
local multiboarditem YHc
local multiboard GHc
local integer gHc
local integer hHc
local multiboarditem FHc
local string kHc
local string jHc
local string xHc
local multiboarditem vHc
local boolean mHc
local boolean QHc
local multiboarditem WHc
local real EHc
local multiboarditem ZHc
local multiboard UHc
local integer IHc
local integer PHc
local multiboarditem AHc
local string DHc
local string HHc
local string JHc
local multiboarditem KHc
local boolean LHc
local boolean XHc
local multiboarditem CHc
local real VHc
local multiboarditem BHc
local multiboard NHc
local player MHc
local boolean wJc
local trigger uJc
set Yr=CreateMultiboard()
set Mkc=Yr
set wjc=27
call MultiboardSetRowCount(Mkc,wjc)
set ujc=Yr
set rjc=5
call MultiboardSetColumnCount(ujc,rjc)
set sjc=Yr
set tjc="|cffFDD017Survival Chaos|r"
call MultiboardSetTitleText(sjc,tjc)
set ijc=Yr
set Sjc=255
set cjc=255
set ojc=0
set Ojc=39
call MultiboardSetTitleTextColor(ijc,Sjc,cjc,ojc,Ojc)
set ljc=Yr
set bjc=0
set yjc=0
set de=MultiboardGetItem(ljc,bjc,yjc)
set pjc=de
set ejc="Player"
if ejc==null then
set ajc=""
else
set ajc=ejc
endif
set qjc=ajc
call MultiboardSetItemValue(pjc,qjc)
set njc=de
set djc=true
set fjc=false
call MultiboardSetItemStyle(njc,djc,fjc)
set Rjc=de
set Tjc=.07
call MultiboardSetItemWidth(Rjc,Tjc)
set Yjc=de
call MultiboardReleaseItem(Yjc)
set Gjc=Yr
set gjc=1
set hjc=0
set de=MultiboardGetItem(Gjc,gjc,hjc)
set Fjc=de
set kjc="|cff00FF00Race|r"
if kjc==null then
set xjc=""
else
set xjc=kjc
endif
set jjc=xjc
call MultiboardSetItemValue(Fjc,jjc)
set vjc=de
set mjc=true
set Qjc=false
call MultiboardSetItemStyle(vjc,mjc,Qjc)
set Wjc=de
set Ejc=.07
call MultiboardSetItemWidth(Wjc,Ejc)
set Zjc=de
call MultiboardReleaseItem(Zjc)
set Ujc=Yr
set Ijc=2
set Pjc=0
set de=MultiboardGetItem(Ujc,Ijc,Pjc)
set Ajc=de
set Djc="Total Gold"
if Djc==null then
set Jjc=""
else
set Jjc=Djc
endif
set Hjc=Jjc
call MultiboardSetItemValue(Ajc,Hjc)
set Kjc=de
set Ljc=true
set Xjc=false
call MultiboardSetItemStyle(Kjc,Ljc,Xjc)
set Cjc=de
set Vjc=.07
call MultiboardSetItemWidth(Cjc,Vjc)
set Bjc=de
call MultiboardReleaseItem(Bjc)
set Njc=Yr
set Mjc=3
set wxc=0
set de=MultiboardGetItem(Njc,Mjc,wxc)
set uxc=de
set rxc="Normal Gold"
if rxc==null then
set txc=""
else
set txc=rxc
endif
set sxc=txc
call MultiboardSetItemValue(uxc,sxc)
set ixc=de
set Sxc=true
set cxc=false
call MultiboardSetItemStyle(ixc,Sxc,cxc)
set oxc=de
set Oxc=.07
call MultiboardSetItemWidth(oxc,Oxc)
set lxc=de
call MultiboardReleaseItem(lxc)
set bxc=Yr
set yxc=4
set pxc=0
set de=MultiboardGetItem(bxc,yxc,pxc)
set exc=de
set qxc="Gold/min (GpM)"
if qxc==null then
set nxc=""
else
set nxc=qxc
endif
set axc=nxc
call MultiboardSetItemValue(exc,axc)
set dxc=de
set fxc=true
set Rxc=false
call MultiboardSetItemStyle(dxc,fxc,Rxc)
set Txc=de
set Yxc=.07
call MultiboardSetItemWidth(Txc,Yxc)
set Gxc=de
call MultiboardReleaseItem(Gxc)
set gxc=Yr
set hxc=5
set Fxc=0
set de=MultiboardGetItem(gxc,hxc,Fxc)
set kxc=de
set jxc="|cffFF0000Unit|r"
if jxc==null then
set vxc=""
else
set vxc=jxc
endif
set xxc=vxc
call MultiboardSetItemValue(kxc,xxc)
set mxc=de
set Qxc=true
set Wxc=false
call MultiboardSetItemStyle(mxc,Qxc,Wxc)
set Exc=de
set Zxc=.07
call MultiboardSetItemWidth(Exc,Zxc)
set Uxc=de
call MultiboardReleaseItem(Uxc)
set Ixc=Yr
set Pxc=6
set Axc=0
set de=MultiboardGetItem(Ixc,Pxc,Axc)
set Dxc=de
set Hxc="Units Killed"
if Hxc==null then
set Kxc=""
else
set Kxc=Hxc
endif
set Jxc=Kxc
call MultiboardSetItemValue(Dxc,Jxc)
set Lxc=de
set Xxc=true
set Cxc=false
call MultiboardSetItemStyle(Lxc,Xxc,Cxc)
set Vxc=de
set Bxc=.07
call MultiboardSetItemWidth(Vxc,Bxc)
set Nxc=de
call MultiboardReleaseItem(Nxc)
set Mxc=Yr
set wvc=7
set uvc=0
set de=MultiboardGetItem(Mxc,wvc,uvc)
set rvc=de
set svc="Units Bought"
if svc==null then
set ivc=""
else
set ivc=svc
endif
set tvc=ivc
call MultiboardSetItemValue(rvc,tvc)
set Svc=de
set cvc=true
set ovc=false
call MultiboardSetItemStyle(Svc,cvc,ovc)
set Ovc=de
set lvc=.07
call MultiboardSetItemWidth(Ovc,lvc)
set bvc=de
call MultiboardReleaseItem(bvc)
set yvc=Yr
set pvc=8
set evc=0
set de=MultiboardGetItem(yvc,pvc,evc)
set qvc=de
set avc="Heroes Killed"
if avc==null then
set dvc=""
else
set dvc=avc
endif
set nvc=dvc
call MultiboardSetItemValue(qvc,nvc)
set fvc=de
set Rvc=true
set Tvc=false
call MultiboardSetItemStyle(fvc,Rvc,Tvc)
set Yvc=de
set Gvc=.07
call MultiboardSetItemWidth(Yvc,Gvc)
set gvc=de
call MultiboardReleaseItem(gvc)
set hvc=Yr
set Fvc=9
set kvc=0
set de=MultiboardGetItem(hvc,Fvc,kvc)
set jvc=de
set xvc="Heroes Bought"
if xvc==null then
set mvc=""
else
set mvc=xvc
endif
set vvc=mvc
call MultiboardSetItemValue(jvc,vvc)
set Qvc=de
set Wvc=true
set Evc=false
call MultiboardSetItemStyle(Qvc,Wvc,Evc)
set Zvc=de
set Uvc=.07
call MultiboardSetItemWidth(Zvc,Uvc)
set Ivc=de
call MultiboardReleaseItem(Ivc)
set Pvc=Yr
set Avc=10
set Dvc=0
set de=MultiboardGetItem(Pvc,Avc,Dvc)
set Hvc=de
set Jvc="Hero Level"
if Jvc==null then
set Lvc=""
else
set Lvc=Jvc
endif
set Kvc=Lvc
call MultiboardSetItemValue(Hvc,Kvc)
set Xvc=de
set Cvc=true
set Vvc=false
call MultiboardSetItemStyle(Xvc,Cvc,Vvc)
set Bvc=de
set Nvc=.07
call MultiboardSetItemWidth(Bvc,Nvc)
set Mvc=de
call MultiboardReleaseItem(Mvc)
set wmc=Yr
set umc=11
set rmc=0
set de=MultiboardGetItem(wmc,umc,rmc)
set smc=de
set tmc="Research"
if tmc==null then
set Smc=""
else
set Smc=tmc
endif
set imc=Smc
call MultiboardSetItemValue(smc,imc)
set cmc=de
set omc=true
set Omc=false
call MultiboardSetItemStyle(cmc,omc,Omc)
set lmc=de
set bmc=.07
call MultiboardSetItemWidth(lmc,bmc)
set ymc=de
call MultiboardReleaseItem(ymc)
set pmc=Yr
set emc=12
set qmc=0
set de=MultiboardGetItem(pmc,emc,qmc)
set amc=de
set nmc="Buildings Razed"
if nmc==null then
set fmc=""
else
set fmc=nmc
endif
set dmc=fmc
call MultiboardSetItemValue(amc,dmc)
set Rmc=de
set Tmc=true
set Ymc=false
call MultiboardSetItemStyle(Rmc,Tmc,Ymc)
set Gmc=de
set gmc=.07
call MultiboardSetItemWidth(Gmc,gmc)
set hmc=de
call MultiboardReleaseItem(hmc)
set Fmc=Yr
set kmc=13
set jmc=0
set de=MultiboardGetItem(Fmc,kmc,jmc)
set xmc=de
set vmc="|cffFFD700Gold|r"
if vmc==null then
set Qmc=""
else
set Qmc=vmc
endif
set mmc=Qmc
call MultiboardSetItemValue(xmc,mmc)
set Wmc=de
set Emc=true
set Zmc=false
call MultiboardSetItemStyle(Wmc,Emc,Zmc)
set Umc=de
set Imc=.07
call MultiboardSetItemWidth(Umc,Imc)
set Pmc=de
call MultiboardReleaseItem(Pmc)
set Amc=Yr
set Dmc=14
set Hmc=0
set de=MultiboardGetItem(Amc,Dmc,Hmc)
set Jmc=de
set Kmc="GpM 0-10"
if Kmc==null then
set Xmc=""
else
set Xmc=Kmc
endif
set Lmc=Xmc
call MultiboardSetItemValue(Jmc,Lmc)
set Cmc=de
set Vmc=true
set Bmc=false
call MultiboardSetItemStyle(Cmc,Vmc,Bmc)
set Nmc=de
set Mmc=.07
call MultiboardSetItemWidth(Nmc,Mmc)
set wQc=de
call MultiboardReleaseItem(wQc)
set uQc=Yr
set rQc=15
set sQc=0
set de=MultiboardGetItem(uQc,rQc,sQc)
set tQc=de
set iQc="GpM 10-20"
if iQc==null then
set cQc=""
else
set cQc=iQc
endif
set SQc=cQc
call MultiboardSetItemValue(tQc,SQc)
set oQc=de
set OQc=true
set lQc=false
call MultiboardSetItemStyle(oQc,OQc,lQc)
set bQc=de
set yQc=.07
call MultiboardSetItemWidth(bQc,yQc)
set pQc=de
call MultiboardReleaseItem(pQc)
set eQc=Yr
set qQc=16
set aQc=0
set de=MultiboardGetItem(eQc,qQc,aQc)
set nQc=de
set dQc="GpM 20-30"
if dQc==null then
set RQc=""
else
set RQc=dQc
endif
set fQc=RQc
call MultiboardSetItemValue(nQc,fQc)
set TQc=de
set YQc=true
set GQc=false
call MultiboardSetItemStyle(TQc,YQc,GQc)
set gQc=de
set hQc=.07
call MultiboardSetItemWidth(gQc,hQc)
set FQc=de
call MultiboardReleaseItem(FQc)
set kQc=Yr
set jQc=17
set xQc=0
set de=MultiboardGetItem(kQc,jQc,xQc)
set vQc=de
set mQc="GpM 30-40"
if mQc==null then
set WQc=""
else
set WQc=mQc
endif
set QQc=WQc
call MultiboardSetItemValue(vQc,QQc)
set EQc=de
set ZQc=true
set UQc=false
call MultiboardSetItemStyle(EQc,ZQc,UQc)
set IQc=de
set PQc=.07
call MultiboardSetItemWidth(IQc,PQc)
set AQc=de
call MultiboardReleaseItem(AQc)
set DQc=Yr
set HQc=18
set JQc=0
set de=MultiboardGetItem(DQc,HQc,JQc)
set KQc=de
set LQc="GpM 40-50"
if LQc==null then
set CQc=""
else
set CQc=LQc
endif
set XQc=CQc
call MultiboardSetItemValue(KQc,XQc)
set VQc=de
set BQc=true
set NQc=false
call MultiboardSetItemStyle(VQc,BQc,NQc)
set MQc=de
set wWc=.07
call MultiboardSetItemWidth(MQc,wWc)
set uWc=de
call MultiboardReleaseItem(uWc)
set rWc=Yr
set sWc=19
set tWc=0
set de=MultiboardGetItem(rWc,sWc,tWc)
set iWc=de
set SWc="GpM 50-60"
if SWc==null then
set oWc=""
else
set oWc=SWc
endif
set cWc=oWc
call MultiboardSetItemValue(iWc,cWc)
set OWc=de
set lWc=true
set bWc=false
call MultiboardSetItemStyle(OWc,lWc,bWc)
set yWc=de
set pWc=.07
call MultiboardSetItemWidth(yWc,pWc)
set eWc=de
call MultiboardReleaseItem(eWc)
set qWc=Yr
set aWc=20
set nWc=0
set de=MultiboardGetItem(qWc,aWc,nWc)
set dWc=de
set fWc="from Salvage"
if fWc==null then
set TWc=""
else
set TWc=fWc
endif
set RWc=TWc
call MultiboardSetItemValue(dWc,RWc)
set YWc=de
set GWc=true
set gWc=false
call MultiboardSetItemStyle(YWc,GWc,gWc)
set hWc=de
set FWc=.07
call MultiboardSetItemWidth(hWc,FWc)
set kWc=de
call MultiboardReleaseItem(kWc)
set jWc=Yr
set xWc=21
set vWc=0
set de=MultiboardGetItem(jWc,xWc,vWc)
set mWc=de
set QWc="from Neutrals"
if QWc==null then
set EWc=""
else
set EWc=QWc
endif
set WWc=EWc
call MultiboardSetItemValue(mWc,WWc)
set ZWc=de
set UWc=true
set IWc=false
call MultiboardSetItemStyle(ZWc,UWc,IWc)
set PWc=de
set AWc=.07
call MultiboardSetItemWidth(PWc,AWc)
set DWc=de
call MultiboardReleaseItem(DWc)
set HWc=Yr
set JWc=22
set KWc=0
set de=MultiboardGetItem(HWc,JWc,KWc)
set LWc=de
set XWc="for Heroes killed"
if XWc==null then
set VWc=""
else
set VWc=XWc
endif
set CWc=VWc
call MultiboardSetItemValue(LWc,CWc)
set BWc=de
set NWc=true
set MWc=false
call MultiboardSetItemStyle(BWc,NWc,MWc)
set wEc=de
set uEc=.07
call MultiboardSetItemWidth(wEc,uEc)
set rEc=de
call MultiboardReleaseItem(rEc)
set sEc=Yr
set tEc=23
set iEc=0
set de=MultiboardGetItem(sEc,tEc,iEc)
set SEc=de
set cEc="from Fortress"
if cEc==null then
set OEc=""
else
set OEc=cEc
endif
set oEc=OEc
call MultiboardSetItemValue(SEc,oEc)
set lEc=de
set bEc=true
set yEc=false
call MultiboardSetItemStyle(lEc,bEc,yEc)
set pEc=de
set eEc=.07
call MultiboardSetItemWidth(pEc,eEc)
set qEc=de
call MultiboardReleaseItem(qEc)
set aEc=Yr
set nEc=24
set dEc=0
set de=MultiboardGetItem(aEc,nEc,dEc)
set fEc=de
set REc="for units in mid"
if REc==null then
set YEc=""
else
set YEc=REc
endif
set TEc=YEc
call MultiboardSetItemValue(fEc,TEc)
set GEc=de
set gEc=true
set hEc=false
call MultiboardSetItemStyle(GEc,gEc,hEc)
set FEc=de
set kEc=.07
call MultiboardSetItemWidth(FEc,kEc)
set jEc=de
call MultiboardReleaseItem(jEc)
set xEc=Yr
set vEc=25
set mEc=0
set de=MultiboardGetItem(xEc,vEc,mEc)
set QEc=de
set WEc="for other units"
if WEc==null then
set ZEc=""
else
set ZEc=WEc
endif
set EEc=ZEc
call MultiboardSetItemValue(QEc,EEc)
set UEc=de
set IEc=true
set PEc=false
call MultiboardSetItemStyle(UEc,IEc,PEc)
set AEc=de
set DEc=.07
call MultiboardSetItemWidth(AEc,DEc)
set HEc=de
call MultiboardReleaseItem(HEc)
set JEc=Yr
set KEc=26
set LEc=0
set de=MultiboardGetItem(JEc,KEc,LEc)
set XEc=de
set CEc="Mana Stone"
if CEc==null then
set BEc=""
else
set BEc=CEc
endif
set VEc=BEc
call MultiboardSetItemValue(XEc,VEc)
set NEc=de
set MEc=true
set wZc=false
call MultiboardSetItemStyle(NEc,MEc,wZc)
set uZc=de
set rZc=.07
call MultiboardSetItemWidth(uZc,rZc)
set sZc=de
call MultiboardReleaseItem(sZc)
set Bkc=0
loop
exitwhen Bkc>3
set tZc=Yr
set iZc=0
set SZc=Bkc+1
set de=MultiboardGetItem(tZc,iZc,SZc)
set cZc=de
set oZc=Aw[Bkc]+GetPlayerName(Player(Bkc))+"|r"
if oZc==null then
set lZc=""
else
set lZc=oZc
endif
set OZc=lZc
call MultiboardSetItemValue(cZc,OZc)
set bZc=de
set yZc=true
set pZc=false
call MultiboardSetItemStyle(bZc,yZc,pZc)
set eZc=de
set qZc=.07
call MultiboardSetItemWidth(eZc,qZc)
set aZc=de
call MultiboardReleaseItem(aZc)
set nZc=Yr
set dZc=1
set fZc=Bkc+1
set de=MultiboardGetItem(nZc,dZc,fZc)
set RZc=de
set TZc=Ntt(Bkc)
if TZc==null then
set GZc=""
else
set GZc=TZc
endif
set YZc=GZc
call MultiboardSetItemIcon(RZc,YZc)
set gZc=de
set hZc=false
set FZc=true
call MultiboardSetItemStyle(gZc,hZc,FZc)
set kZc=de
set jZc=.07
call MultiboardSetItemWidth(kZc,jZc)
set xZc=de
call MultiboardReleaseItem(xZc)
set vZc=Yr
set mZc=2
set QZc=Bkc+1
set de=MultiboardGetItem(vZc,mZc,QZc)
set WZc=de
set EZc="0"
if EZc==null then
set UZc=""
else
set UZc=EZc
endif
set ZZc=UZc
call MultiboardSetItemValue(WZc,ZZc)
set IZc=de
set PZc=true
set AZc=false
call MultiboardSetItemStyle(IZc,PZc,AZc)
set DZc=de
set HZc=.07
call MultiboardSetItemWidth(DZc,HZc)
set JZc=de
call MultiboardReleaseItem(JZc)
set KZc=Yr
set LZc=3
set XZc=Bkc+1
set de=MultiboardGetItem(KZc,LZc,XZc)
set CZc=de
set VZc="0"
if VZc==null then
set NZc=""
else
set NZc=VZc
endif
set BZc=NZc
call MultiboardSetItemValue(CZc,BZc)
set MZc=de
set wUc=true
set uUc=false
call MultiboardSetItemStyle(MZc,wUc,uUc)
set rUc=de
set sUc=.07
call MultiboardSetItemWidth(rUc,sUc)
set tUc=de
call MultiboardReleaseItem(tUc)
set iUc=Yr
set SUc=4
set cUc=Bkc+1
set de=MultiboardGetItem(iUc,SUc,cUc)
set oUc=de
set OUc="-"
if OUc==null then
set bUc=""
else
set bUc=OUc
endif
set lUc=bUc
call MultiboardSetItemValue(oUc,lUc)
set yUc=de
set pUc=true
set eUc=false
call MultiboardSetItemStyle(yUc,pUc,eUc)
set qUc=de
set aUc=.07
call MultiboardSetItemWidth(qUc,aUc)
set nUc=de
call MultiboardReleaseItem(nUc)
set dUc=Yr
set fUc=5
set RUc=Bkc+1
set de=MultiboardGetItem(dUc,fUc,RUc)
set TUc=de
set YUc="ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp"
if YUc==null then
set gUc=""
else
set gUc=YUc
endif
set GUc=gUc
call MultiboardSetItemIcon(TUc,GUc)
set hUc=de
set FUc=false
set kUc=true
call MultiboardSetItemStyle(hUc,FUc,kUc)
set jUc=de
set xUc=.07
call MultiboardSetItemWidth(jUc,xUc)
set vUc=de
call MultiboardReleaseItem(vUc)
set mUc=Yr
set QUc=6
set WUc=Bkc+1
set de=MultiboardGetItem(mUc,QUc,WUc)
set EUc=de
set ZUc="0"
if ZUc==null then
set IUc=""
else
set IUc=ZUc
endif
set UUc=IUc
call MultiboardSetItemValue(EUc,UUc)
set PUc=de
set AUc=true
set DUc=false
call MultiboardSetItemStyle(PUc,AUc,DUc)
set HUc=de
set JUc=.07
call MultiboardSetItemWidth(HUc,JUc)
set KUc=de
call MultiboardReleaseItem(KUc)
set LUc=Yr
set XUc=7
set CUc=Bkc+1
set de=MultiboardGetItem(LUc,XUc,CUc)
set VUc=de
set BUc="0"
if BUc==null then
set MUc=""
else
set MUc=BUc
endif
set NUc=MUc
call MultiboardSetItemValue(VUc,NUc)
set wIc=de
set uIc=true
set rIc=false
call MultiboardSetItemStyle(wIc,uIc,rIc)
set sIc=de
set tIc=.07
call MultiboardSetItemWidth(sIc,tIc)
set iIc=de
call MultiboardReleaseItem(iIc)
set SIc=Yr
set cIc=8
set oIc=Bkc+1
set de=MultiboardGetItem(SIc,cIc,oIc)
set OIc=de
set lIc="0"
if lIc==null then
set yIc=""
else
set yIc=lIc
endif
set bIc=yIc
call MultiboardSetItemValue(OIc,bIc)
set pIc=de
set eIc=true
set qIc=false
call MultiboardSetItemStyle(pIc,eIc,qIc)
set aIc=de
set nIc=.07
call MultiboardSetItemWidth(aIc,nIc)
set dIc=de
call MultiboardReleaseItem(dIc)
set fIc=Yr
set RIc=9
set TIc=Bkc+1
set de=MultiboardGetItem(fIc,RIc,TIc)
set YIc=de
set GIc="0"
if GIc==null then
set hIc=""
else
set hIc=GIc
endif
set gIc=hIc
call MultiboardSetItemValue(YIc,gIc)
set FIc=de
set kIc=true
set jIc=false
call MultiboardSetItemStyle(FIc,kIc,jIc)
set xIc=de
set vIc=.07
call MultiboardSetItemWidth(xIc,vIc)
set mIc=de
call MultiboardReleaseItem(mIc)
set QIc=Yr
set WIc=10
set EIc=Bkc+1
set de=MultiboardGetItem(QIc,WIc,EIc)
set ZIc=de
set UIc="1/1/1/1"
if UIc==null then
set PIc=""
else
set PIc=UIc
endif
set IIc=PIc
call MultiboardSetItemValue(ZIc,IIc)
set AIc=de
set DIc=true
set HIc=false
call MultiboardSetItemStyle(AIc,DIc,HIc)
set JIc=de
set KIc=.07
call MultiboardSetItemWidth(JIc,KIc)
set LIc=de
call MultiboardReleaseItem(LIc)
set XIc=Yr
set CIc=11
set VIc=Bkc+1
set de=MultiboardGetItem(XIc,CIc,VIc)
set BIc=de
set NIc="0"
if NIc==null then
set wPc=""
else
set wPc=NIc
endif
set MIc=wPc
call MultiboardSetItemValue(BIc,MIc)
set uPc=de
set rPc=true
set sPc=false
call MultiboardSetItemStyle(uPc,rPc,sPc)
set tPc=de
set iPc=.07
call MultiboardSetItemWidth(tPc,iPc)
set SPc=de
call MultiboardReleaseItem(SPc)
set cPc=Yr
set oPc=12
set OPc=Bkc+1
set de=MultiboardGetItem(cPc,oPc,OPc)
set lPc=de
set bPc="0"
if bPc==null then
set pPc=""
else
set pPc=bPc
endif
set yPc=pPc
call MultiboardSetItemValue(lPc,yPc)
set ePc=de
set qPc=true
set aPc=false
call MultiboardSetItemStyle(ePc,qPc,aPc)
set nPc=de
set dPc=.07
call MultiboardSetItemWidth(nPc,dPc)
set fPc=de
call MultiboardReleaseItem(fPc)
set RPc=Yr
set TPc=13
set YPc=Bkc+1
set de=MultiboardGetItem(RPc,TPc,YPc)
set GPc=de
set gPc="ReplaceableTextures\\CommandButtons\\BTNMGexchange.blp"
if gPc==null then
set FPc=""
else
set FPc=gPc
endif
set hPc=FPc
call MultiboardSetItemIcon(GPc,hPc)
set kPc=de
set jPc=false
set xPc=true
call MultiboardSetItemStyle(kPc,jPc,xPc)
set vPc=de
set mPc=.07
call MultiboardSetItemWidth(vPc,mPc)
set QPc=de
call MultiboardReleaseItem(QPc)
set WPc=Yr
set EPc=14
set ZPc=Bkc+1
set de=MultiboardGetItem(WPc,EPc,ZPc)
set UPc=de
set IPc="-"
if IPc==null then
set APc=""
else
set APc=IPc
endif
set PPc=APc
call MultiboardSetItemValue(UPc,PPc)
set DPc=de
set HPc=true
set JPc=false
call MultiboardSetItemStyle(DPc,HPc,JPc)
set KPc=de
set LPc=.07
call MultiboardSetItemWidth(KPc,LPc)
set XPc=de
call MultiboardReleaseItem(XPc)
set CPc=Yr
set VPc=15
set BPc=Bkc+1
set de=MultiboardGetItem(CPc,VPc,BPc)
set NPc=de
set MPc="-"
if MPc==null then
set uAc=""
else
set uAc=MPc
endif
set wAc=uAc
call MultiboardSetItemValue(NPc,wAc)
set rAc=de
set sAc=true
set tAc=false
call MultiboardSetItemStyle(rAc,sAc,tAc)
set iAc=de
set SAc=.07
call MultiboardSetItemWidth(iAc,SAc)
set cAc=de
call MultiboardReleaseItem(cAc)
set oAc=Yr
set OAc=16
set lAc=Bkc+1
set de=MultiboardGetItem(oAc,OAc,lAc)
set bAc=de
set yAc="-"
if yAc==null then
set eAc=""
else
set eAc=yAc
endif
set pAc=eAc
call MultiboardSetItemValue(bAc,pAc)
set qAc=de
set aAc=true
set nAc=false
call MultiboardSetItemStyle(qAc,aAc,nAc)
set dAc=de
set fAc=.07
call MultiboardSetItemWidth(dAc,fAc)
set RAc=de
call MultiboardReleaseItem(RAc)
set TAc=Yr
set YAc=17
set GAc=Bkc+1
set de=MultiboardGetItem(TAc,YAc,GAc)
set gAc=de
set hAc="-"
if hAc==null then
set kAc=""
else
set kAc=hAc
endif
set FAc=kAc
call MultiboardSetItemValue(gAc,FAc)
set jAc=de
set xAc=true
set vAc=false
call MultiboardSetItemStyle(jAc,xAc,vAc)
set mAc=de
set QAc=.07
call MultiboardSetItemWidth(mAc,QAc)
set WAc=de
call MultiboardReleaseItem(WAc)
set EAc=Yr
set ZAc=18
set UAc=Bkc+1
set de=MultiboardGetItem(EAc,ZAc,UAc)
set IAc=de
set PAc="-"
if PAc==null then
set DAc=""
else
set DAc=PAc
endif
set AAc=DAc
call MultiboardSetItemValue(IAc,AAc)
set HAc=de
set JAc=true
set KAc=false
call MultiboardSetItemStyle(HAc,JAc,KAc)
set LAc=de
set XAc=.07
call MultiboardSetItemWidth(LAc,XAc)
set CAc=de
call MultiboardReleaseItem(CAc)
set VAc=Yr
set BAc=19
set NAc=Bkc+1
set de=MultiboardGetItem(VAc,BAc,NAc)
set MAc=de
set wDc="-"
if wDc==null then
set rDc=""
else
set rDc=wDc
endif
set uDc=rDc
call MultiboardSetItemValue(MAc,uDc)
set sDc=de
set tDc=true
set iDc=false
call MultiboardSetItemStyle(sDc,tDc,iDc)
set SDc=de
set cDc=.07
call MultiboardSetItemWidth(SDc,cDc)
set oDc=de
call MultiboardReleaseItem(oDc)
set ODc=Yr
set lDc=20
set bDc=Bkc+1
set de=MultiboardGetItem(ODc,lDc,bDc)
set yDc=de
set pDc="-"
if pDc==null then
set qDc=""
else
set qDc=pDc
endif
set eDc=qDc
call MultiboardSetItemValue(yDc,eDc)
set aDc=de
set nDc=true
set dDc=false
call MultiboardSetItemStyle(aDc,nDc,dDc)
set fDc=de
set RDc=.07
call MultiboardSetItemWidth(fDc,RDc)
set TDc=de
call MultiboardReleaseItem(TDc)
set YDc=Yr
set GDc=21
set gDc=Bkc+1
set de=MultiboardGetItem(YDc,GDc,gDc)
set hDc=de
set FDc="-"
if FDc==null then
set jDc=""
else
set jDc=FDc
endif
set kDc=jDc
call MultiboardSetItemValue(hDc,kDc)
set xDc=de
set vDc=true
set mDc=false
call MultiboardSetItemStyle(xDc,vDc,mDc)
set QDc=de
set WDc=.07
call MultiboardSetItemWidth(QDc,WDc)
set EDc=de
call MultiboardReleaseItem(EDc)
set ZDc=Yr
set UDc=22
set IDc=Bkc+1
set de=MultiboardGetItem(ZDc,UDc,IDc)
set PDc=de
set ADc="-"
if ADc==null then
set HDc=""
else
set HDc=ADc
endif
set DDc=HDc
call MultiboardSetItemValue(PDc,DDc)
set JDc=de
set KDc=true
set LDc=false
call MultiboardSetItemStyle(JDc,KDc,LDc)
set XDc=de
set CDc=.07
call MultiboardSetItemWidth(XDc,CDc)
set VDc=de
call MultiboardReleaseItem(VDc)
set BDc=Yr
set NDc=23
set MDc=Bkc+1
set de=MultiboardGetItem(BDc,NDc,MDc)
set wHc=de
set uHc="-"
if uHc==null then
set sHc=""
else
set sHc=uHc
endif
set rHc=sHc
call MultiboardSetItemValue(wHc,rHc)
set tHc=de
set iHc=true
set SHc=false
call MultiboardSetItemStyle(tHc,iHc,SHc)
set cHc=de
set oHc=.07
call MultiboardSetItemWidth(cHc,oHc)
set OHc=de
call MultiboardReleaseItem(OHc)
set lHc=Yr
set bHc=24
set yHc=Bkc+1
set de=MultiboardGetItem(lHc,bHc,yHc)
set pHc=de
set eHc="-"
if eHc==null then
set aHc=""
else
set aHc=eHc
endif
set qHc=aHc
call MultiboardSetItemValue(pHc,qHc)
set nHc=de
set dHc=true
set fHc=false
call MultiboardSetItemStyle(nHc,dHc,fHc)
set RHc=de
set THc=.07
call MultiboardSetItemWidth(RHc,THc)
set YHc=de
call MultiboardReleaseItem(YHc)
set GHc=Yr
set gHc=25
set hHc=Bkc+1
set de=MultiboardGetItem(GHc,gHc,hHc)
set FHc=de
set kHc="-"
if kHc==null then
set xHc=""
else
set xHc=kHc
endif
set jHc=xHc
call MultiboardSetItemValue(FHc,jHc)
set vHc=de
set mHc=true
set QHc=false
call MultiboardSetItemStyle(vHc,mHc,QHc)
set WHc=de
set EHc=.07
call MultiboardSetItemWidth(WHc,EHc)
set ZHc=de
call MultiboardReleaseItem(ZHc)
set UHc=Yr
set IHc=26
set PHc=Bkc+1
set de=MultiboardGetItem(UHc,IHc,PHc)
set AHc=de
set DHc="-"
if DHc==null then
set JHc=""
else
set JHc=DHc
endif
set HHc=JHc
call MultiboardSetItemValue(AHc,HHc)
set KHc=de
set LHc=true
set XHc=false
call MultiboardSetItemStyle(KHc,LHc,XHc)
set CHc=de
set VHc=.07
call MultiboardSetItemWidth(CHc,VHc)
set BHc=de
call MultiboardReleaseItem(BHc)
set Bkc=Bkc+1
endloop
set Nkc=8
loop
exitwhen Nkc>11
if IsPlayerObserver(Player(Nkc))==true then
set NHc=Yr
set MHc=Player(Nkc)
set wJc=true
if IY==MHc then
call MultiboardDisplay(NHc,wJc)
endif
set fe=true
endif
set Nkc=Nkc+1
endloop
if fe==true then
set uJc=ae
call EnableTrigger(uJc)
endif
set Mkc=null
set ujc=null
set sjc=null
set ijc=null
set ljc=null
set pjc=null
set njc=null
set Rjc=null
set Yjc=null
set Gjc=null
set Fjc=null
set vjc=null
set Wjc=null
set Zjc=null
set Ujc=null
set Ajc=null
set Kjc=null
set Cjc=null
set Bjc=null
set Njc=null
set uxc=null
set ixc=null
set oxc=null
set lxc=null
set bxc=null
set exc=null
set dxc=null
set Txc=null
set Gxc=null
set gxc=null
set kxc=null
set mxc=null
set Exc=null
set Uxc=null
set Ixc=null
set Dxc=null
set Lxc=null
set Vxc=null
set Nxc=null
set Mxc=null
set rvc=null
set Svc=null
set Ovc=null
set bvc=null
set yvc=null
set qvc=null
set fvc=null
set Yvc=null
set gvc=null
set hvc=null
set jvc=null
set Qvc=null
set Zvc=null
set Ivc=null
set Pvc=null
set Hvc=null
set Xvc=null
set Bvc=null
set Mvc=null
set wmc=null
set smc=null
set cmc=null
set lmc=null
set ymc=null
set pmc=null
set amc=null
set Rmc=null
set Gmc=null
set hmc=null
set Fmc=null
set xmc=null
set Wmc=null
set Umc=null
set Pmc=null
set Amc=null
set Jmc=null
set Cmc=null
set Nmc=null
set wQc=null
set uQc=null
set tQc=null
set oQc=null
set bQc=null
set pQc=null
set eQc=null
set nQc=null
set TQc=null
set gQc=null
set FQc=null
set kQc=null
set vQc=null
set EQc=null
set IQc=null
set AQc=null
set DQc=null
set KQc=null
set VQc=null
set MQc=null
set uWc=null
set rWc=null
set iWc=null
set OWc=null
set yWc=null
set eWc=null
set qWc=null
set dWc=null
set YWc=null
set hWc=null
set kWc=null
set jWc=null
set mWc=null
set ZWc=null
set PWc=null
set DWc=null
set HWc=null
set LWc=null
set BWc=null
set wEc=null
set rEc=null
set sEc=null
set SEc=null
set lEc=null
set pEc=null
set qEc=null
set aEc=null
set fEc=null
set GEc=null
set FEc=null
set jEc=null
set xEc=null
set QEc=null
set UEc=null
set AEc=null
set HEc=null
set JEc=null
set XEc=null
set NEc=null
set uZc=null
set sZc=null
set tZc=null
set cZc=null
set bZc=null
set eZc=null
set aZc=null
set nZc=null
set RZc=null
set gZc=null
set kZc=null
set xZc=null
set vZc=null
set WZc=null
set IZc=null
set DZc=null
set JZc=null
set KZc=null
set CZc=null
set MZc=null
set rUc=null
set tUc=null
set iUc=null
set oUc=null
set yUc=null
set qUc=null
set nUc=null
set dUc=null
set TUc=null
set hUc=null
set jUc=null
set vUc=null
set mUc=null
set EUc=null
set PUc=null
set HUc=null
set KUc=null
set LUc=null
set VUc=null
set wIc=null
set sIc=null
set iIc=null
set SIc=null
set OIc=null
set pIc=null
set aIc=null
set dIc=null
set fIc=null
set YIc=null
set FIc=null
set xIc=null
set mIc=null
set QIc=null
set ZIc=null
set AIc=null
set JIc=null
set LIc=null
set XIc=null
set BIc=null
set uPc=null
set tPc=null
set SPc=null
set cPc=null
set lPc=null
set ePc=null
set nPc=null
set fPc=null
set RPc=null
set GPc=null
set kPc=null
set vPc=null
set QPc=null
set WPc=null
set UPc=null
set DPc=null
set KPc=null
set XPc=null
set CPc=null
set NPc=null
set rAc=null
set iAc=null
set cAc=null
set oAc=null
set bAc=null
set qAc=null
set dAc=null
set RAc=null
set TAc=null
set gAc=null
set jAc=null
set mAc=null
set WAc=null
set EAc=null
set IAc=null
set HAc=null
set LAc=null
set CAc=null
set VAc=null
set MAc=null
set sDc=null
set SDc=null
set oDc=null
set ODc=null
set yDc=null
set aDc=null
set fDc=null
set TDc=null
set YDc=null
set hDc=null
set xDc=null
set QDc=null
set EDc=null
set ZDc=null
set PDc=null
set JDc=null
set XDc=null
set VDc=null
set BDc=null
set wHc=null
set tHc=null
set cHc=null
set OHc=null
set lHc=null
set pHc=null
set nHc=null
set RHc=null
set YHc=null
set GHc=null
set FHc=null
set vHc=null
set WHc=null
set ZHc=null
set UHc=null
set AHc=null
set KHc=null
set CHc=null
set BHc=null
set NHc=null
set MHc=null
set uJc=null
endfunction
function AIy takes integer IIy,integer PIy returns integer
if IIy==Mb[PIy] then
set RW=Mb[PIy]
set TW=wy[PIy]
return RW
endif
set RW=0
set TW=""
return RW
endfunction
function REO takes integer qEO returns string
local integer aEO=0
local string nEO
local string dEO
local string fEO
loop
exitwhen aEO>19
call AIy(m[qEO],aEO)
set fEO=TW
set dEO=fEO
set nEO=dEO
if nEO!="" then
return nEO
endif
set aEO=aEO+1
endloop
return ""
endfunction
function wFO takes nothing returns nothing
local integer LbO=0
local multiboard XbO
local integer CbO
local multiboard VbO
local integer BbO
local multiboard NbO
local string MbO
local multiboard wyO
local integer uyO
local integer ryO
local integer syO
local integer tyO
local multiboard iyO
local integer SyO
local integer cyO
local multiboarditem oyO
local string OyO
local string lyO
local string byO
local multiboarditem yyO
local boolean pyO
local boolean eyO
local multiboarditem qyO
local real ayO
local multiboarditem nyO
local multiboard dyO
local integer fyO
local integer RyO
local multiboarditem TyO
local string YyO
local string GyO
local string gyO
local multiboarditem hyO
local boolean FyO
local boolean kyO
local multiboarditem jyO
local real xyO
local multiboarditem vyO
local multiboard myO
local integer QyO
local integer WyO
local multiboarditem EyO
local string ZyO
local string UyO
local string IyO
local multiboarditem PyO
local boolean AyO
local boolean DyO
local multiboarditem HyO
local real JyO
local multiboarditem KyO
local multiboard LyO
local integer XyO
local integer CyO
local multiboarditem VyO
local string ByO
local string NyO
local string MyO
local multiboarditem wpO
local boolean upO
local boolean rpO
local multiboarditem spO
local real tpO
local multiboarditem ipO
local multiboard SpO
local integer cpO
local integer opO
local multiboarditem OpO
local string lpO
local string bpO
local string ypO
local multiboarditem ppO
local boolean epO
local boolean qpO
local multiboarditem apO
local real npO
local multiboarditem dpO
local multiboard fpO
local integer RpO
local integer TpO
local multiboarditem YpO
local string GpO
local string gpO
local string hpO
local multiboarditem FpO
local boolean kpO
local boolean jpO
local multiboarditem xpO
local real vpO
local multiboarditem mpO
local multiboard QpO
local integer WpO
local integer EpO
local multiboarditem ZpO
local string UpO
local string IpO
local string PpO
local multiboarditem ApO
local boolean DpO
local boolean HpO
local multiboarditem JpO
local real KpO
local multiboarditem LpO
local multiboard XpO
local integer CpO
local integer VpO
local multiboarditem BpO
local string NpO
local string MpO
local string weO
local multiboarditem ueO
local boolean reO
local boolean seO
local multiboarditem teO
local real ieO
local multiboarditem SeO
local multiboard ceO
local integer oeO
local integer OeO
local multiboarditem leO
local string beO
local string yeO
local string peO
local multiboarditem eeO
local boolean qeO
local boolean aeO
local multiboarditem neO
local real deO
local multiboarditem feO
local multiboard ReO
local integer TeO
local integer YeO
local multiboarditem GeO
local string geO
local string heO
local string FeO
local multiboarditem keO
local boolean jeO
local boolean xeO
local multiboarditem veO
local real meO
local multiboarditem QeO
local multiboard WeO
local integer EeO
local integer ZeO
local multiboarditem UeO
local string IeO
local string PeO
local string AeO
local multiboarditem DeO
local boolean HeO
local boolean JeO
local multiboarditem KeO
local real LeO
local multiboarditem XeO
local multiboard CeO
local integer VeO
local integer BeO
local multiboarditem NeO
local string MeO
local string wqO
local string uqO
local multiboarditem rqO
local boolean sqO
local boolean tqO
local multiboarditem iqO
local real SqO
local multiboarditem cqO
local multiboard oqO
local integer OqO
local integer lqO
local multiboarditem bqO
local string yqO
local string pqO
local string eqO
local multiboarditem qqO
local boolean aqO
local boolean nqO
local multiboarditem dqO
local real fqO
local multiboarditem RqO
local multiboard TqO
local integer YqO
local integer GqO
local multiboarditem gqO
local string hqO
local string FqO
local string kqO
local multiboarditem jqO
local boolean xqO
local boolean vqO
local multiboarditem mqO
local real QqO
local multiboarditem WqO
local multiboard EqO
local integer ZqO
local integer UqO
local multiboarditem IqO
local string PqO
local string AqO
local string DqO
local multiboarditem HqO
local boolean JqO
local boolean KqO
local multiboarditem LqO
local real XqO
local multiboarditem CqO
local multiboard VqO
local integer BqO
local integer NqO
local multiboarditem MqO
local string waO
local string uaO
local string raO
local multiboarditem saO
local boolean taO
local boolean iaO
local multiboarditem SaO
local real caO
local multiboarditem oaO
local multiboard OaO
local integer laO
local integer baO
local multiboarditem yaO
local string paO
local string eaO
local string qaO
local multiboarditem aaO
local boolean naO
local boolean daO
local multiboarditem faO
local real RaO
local multiboarditem TaO
local multiboard YaO
local integer GaO
local integer gaO
local multiboarditem haO
local string FaO
local string kaO
local string jaO
local multiboarditem xaO
local boolean vaO
local boolean maO
local multiboarditem QaO
local real WaO
local multiboarditem EaO
local multiboard ZaO
local integer UaO
local integer IaO
local multiboarditem PaO
local string AaO
local string DaO
local string HaO
local multiboarditem JaO
local boolean KaO
local boolean LaO
local multiboarditem XaO
local real CaO
local multiboarditem VaO
local multiboard BaO
local integer NaO
local integer MaO
local multiboarditem wnO
local string unO
local string rnO
local string snO
local multiboarditem tnO
local boolean inO
local boolean SnO
local multiboarditem cnO
local real onO
local multiboarditem OnO
local multiboard lnO
local integer bnO
local integer ynO
local multiboarditem pnO
local string enO
local string qnO
local string anO
local multiboarditem nnO
local boolean dnO
local boolean fnO
local multiboarditem RnO
local real TnO
local multiboarditem YnO
local multiboard GnO
local integer gnO
local integer hnO
local multiboarditem FnO
local string knO
local string jnO
local string xnO
local multiboarditem vnO
local boolean mnO
local boolean QnO
local multiboarditem WnO
local real EnO
local multiboarditem ZnO
local multiboard UnO
local integer InO
local integer PnO
local multiboarditem AnO
local string DnO
local string HnO
local string JnO
local multiboarditem KnO
local boolean LnO
local boolean XnO
local multiboarditem CnO
local real VnO
local multiboarditem BnO
local multiboard NnO
local integer MnO
local integer wdO
local multiboarditem udO
local string rdO
local string sdO
local string tdO
local multiboarditem idO
local boolean SdO
local boolean cdO
local multiboarditem odO
local real OdO
local multiboarditem ldO
local multiboard bdO
local integer ydO
local integer pdO
local multiboarditem edO
local string qdO
local string adO
local string ndO
local multiboarditem ddO
local boolean fdO
local boolean RdO
local multiboarditem TdO
local real YdO
local multiboarditem GdO
local multiboard gdO
local integer hdO
local integer FdO
local multiboarditem kdO
local string jdO
local string xdO
local string vdO
local multiboarditem mdO
local boolean QdO
local boolean WdO
local multiboarditem EdO
local real ZdO
local multiboarditem UdO
local multiboard IdO
local integer PdO
local integer AdO
local multiboarditem DdO
local string HdO
local string JdO
local string KdO
local multiboarditem LdO
local boolean XdO
local boolean CdO
local multiboarditem VdO
local real BdO
local multiboarditem NdO
local multiboard MdO
local integer wfO
local integer ufO
local multiboarditem rfO
local string sfO
local string tfO
local string ifO
local multiboarditem SfO
local boolean cfO
local boolean ofO
local multiboarditem OfO
local real lfO
local multiboarditem bfO
local multiboard yfO
local integer pfO
local integer efO
local multiboarditem qfO
local string afO
local string nfO
local string dfO
local multiboarditem ffO
local boolean RfO
local boolean TfO
local multiboarditem YfO
local real GfO
local multiboarditem gfO
local multiboard hfO
local integer FfO
local integer kfO
local multiboarditem jfO
local string xfO
local string vfO
local string mfO
local multiboarditem QfO
local boolean WfO
local boolean EfO
local multiboarditem ZfO
local real UfO
local multiboarditem IfO
local multiboard PfO
local integer AfO
local integer DfO
local multiboarditem HfO
local string JfO
local string KfO
local string LfO
local multiboarditem XfO
local boolean CfO
local boolean VfO
local multiboarditem BfO
local real NfO
local multiboarditem MfO
local multiboard wRO
local integer uRO
local integer rRO
local multiboarditem sRO
local string tRO
local string iRO
local string SRO
local multiboarditem cRO
local boolean oRO
local boolean ORO
local multiboarditem lRO
local real bRO
local multiboarditem yRO
local multiboard pRO
local integer eRO
local integer qRO
local multiboarditem aRO
local string nRO
local string dRO
local string fRO
local multiboarditem RRO
local boolean TRO
local boolean YRO
local multiboarditem GRO
local real gRO
local multiboarditem hRO
local multiboard FRO
local integer kRO
local integer jRO
local multiboarditem xRO
local string vRO
local string mRO
local string QRO
local multiboarditem WRO
local boolean ERO
local boolean ZRO
local multiboarditem URO
local real IRO
local multiboarditem PRO
local multiboard ARO
local integer DRO
local integer HRO
local multiboarditem JRO
local string KRO
local string LRO
local string XRO
local multiboarditem CRO
local boolean VRO
local boolean BRO
local multiboarditem NRO
local real MRO
local multiboarditem wTO
local multiboard uTO
local integer rTO
local integer sTO
local multiboarditem tTO
local string iTO
local string STO
local string cTO
local multiboarditem oTO
local boolean OTO
local boolean lTO
local multiboarditem bTO
local real yTO
local multiboarditem pTO
local multiboard eTO
local integer qTO
local integer aTO
local multiboarditem nTO
local string dTO
local string fTO
local string RTO
local multiboarditem TTO
local boolean YTO
local boolean GTO
local multiboarditem gTO
local real hTO
local multiboarditem FTO
local multiboard kTO
local integer jTO
local integer xTO
local multiboarditem vTO
local string mTO
local string QTO
local string WTO
local multiboarditem ETO
local boolean ZTO
local boolean UTO
local multiboarditem ITO
local real PTO
local multiboarditem ATO
local multiboard DTO
local integer HTO
local integer JTO
local multiboarditem KTO
local string LTO
local string XTO
local string CTO
local multiboarditem VTO
local boolean BTO
local boolean NTO
local multiboarditem MTO
local real wYO
local multiboarditem uYO
local multiboard rYO
local integer sYO
local integer tYO
local multiboarditem iYO
local string SYO
local string cYO
local string oYO
local multiboarditem OYO
local boolean lYO
local boolean bYO
local multiboarditem yYO
local real pYO
local multiboarditem eYO
local multiboard qYO
local integer aYO
local integer nYO
local multiboarditem dYO
local string fYO
local string RYO
local string TYO
local multiboarditem YYO
local boolean GYO
local boolean gYO
local multiboarditem hYO
local real FYO
local multiboarditem kYO
local multiboard jYO
local integer xYO
local integer vYO
local multiboarditem mYO
local string QYO
local string WYO
local string EYO
local multiboarditem ZYO
local boolean UYO
local boolean IYO
local multiboarditem PYO
local real AYO
local multiboarditem DYO
local multiboard HYO
local integer JYO
local integer KYO
local multiboarditem LYO
local string XYO
local string CYO
local string VYO
local multiboarditem BYO
local boolean NYO
local boolean MYO
local multiboarditem wGO
local real uGO
local multiboarditem rGO
local multiboard sGO
local integer tGO
local integer iGO
local multiboarditem SGO
local string cGO
local string oGO
local string OGO
local multiboarditem lGO
local boolean bGO
local boolean yGO
local multiboarditem pGO
local real eGO
local multiboarditem qGO
local multiboard aGO
local integer nGO
local integer dGO
local multiboarditem fGO
local string RGO
local string TGO
local string YGO
local multiboarditem GGO
local boolean gGO
local boolean hGO
local multiboarditem FGO
local real kGO
local multiboarditem jGO
local multiboard xGO
local integer vGO
local integer mGO
local multiboarditem QGO
local string WGO
local string EGO
local string ZGO
local multiboarditem UGO
local boolean IGO
local boolean PGO
local multiboarditem AGO
local real DGO
local multiboarditem HGO
local multiboard JGO
local integer KGO
local integer LGO
local multiboarditem XGO
local string CGO
local string VGO
local string BGO
local multiboarditem NGO
local boolean MGO
local boolean wgO
local multiboarditem ugO
local real rgO
local multiboarditem sgO
local multiboard tgO
local integer igO
local integer SgO
local multiboarditem cgO
local string ogO
local string OgO
local string lgO
local multiboarditem bgO
local boolean ygO
local boolean pgO
local multiboarditem egO
local real qgO
local multiboarditem agO
local multiboard ngO
local integer dgO
local integer fgO
local multiboarditem RgO
local string TgO
local string YgO
local string GgO
local multiboarditem ggO
local boolean hgO
local boolean FgO
local multiboarditem kgO
local real jgO
local multiboarditem xgO
local multiboard vgO
local integer mgO
local integer QgO
local multiboarditem WgO
local string EgO
local string ZgO
local string UgO
local multiboarditem IgO
local boolean PgO
local boolean AgO
local multiboarditem DgO
local real HgO
local multiboarditem JgO
local multiboard KgO
local integer LgO
local integer XgO
local multiboarditem CgO
local string VgO
local string BgO
local string NgO
local multiboarditem MgO
local boolean whO
local boolean uhO
local multiboarditem rhO
local real shO
local multiboarditem thO
local multiboard ihO
local integer ShO
local integer chO
local multiboarditem ohO
local string OhO
local string lhO
local string bhO
local multiboarditem yhO
local boolean phO
local boolean ehO
local multiboarditem qhO
local real ahO
local multiboarditem nhO
local multiboard dhO
local integer fhO
local integer RhO
local multiboarditem ThO
local string YhO
local string GhO
local string ghO
local multiboarditem hhO
local boolean FhO
local boolean khO
local multiboarditem jhO
local real xhO
local multiboarditem vhO
local multiboard mhO
local integer QhO
local integer WhO
local multiboarditem EhO
local string ZhO
local string UhO
local string IhO
local multiboarditem PhO
local boolean AhO
local boolean DhO
local multiboarditem HhO
local real JhO
local multiboarditem KhO
local multiboard LhO
local player XhO
local boolean ChO
local multiboard VhO
local player BhO
local multiboard NhO
local trigger MhO
loop
exitwhen LbO>3
set Tr[LbO]=CreateMultiboard()
set XbO=Tr[LbO]
set CbO=27
call MultiboardSetRowCount(XbO,CbO)
set VbO=Tr[LbO]
set BbO=2
call MultiboardSetColumnCount(VbO,BbO)
set NbO=Tr[LbO]
set MbO="|cffFDD017Survival Chaos|r"
call MultiboardSetTitleText(NbO,MbO)
set wyO=Tr[LbO]
set uyO=255
set ryO=255
set syO=0
set tyO=39
call MultiboardSetTitleTextColor(wyO,uyO,ryO,syO,tyO)
set iyO=Tr[LbO]
set SyO=0
set cyO=0
set Nb=MultiboardGetItem(iyO,SyO,cyO)
set oyO=Nb
set OyO="Player"
if OyO==null then
set byO=""
else
set byO=OyO
endif
set lyO=byO
call MultiboardSetItemValue(oyO,lyO)
set yyO=Nb
set pyO=true
set eyO=false
call MultiboardSetItemStyle(yyO,pyO,eyO)
set qyO=Nb
set ayO=.07
call MultiboardSetItemWidth(qyO,ayO)
set nyO=Nb
call MultiboardReleaseItem(nyO)
set dyO=Tr[LbO]
set fyO=0
set RyO=1
set Nb=MultiboardGetItem(dyO,fyO,RyO)
set TyO=Nb
set YyO=Aw[LbO]+GetPlayerName(Player(LbO))+"|r"
if YyO==null then
set gyO=""
else
set gyO=YyO
endif
set GyO=gyO
call MultiboardSetItemValue(TyO,GyO)
set hyO=Nb
set FyO=true
set kyO=false
call MultiboardSetItemStyle(hyO,FyO,kyO)
set jyO=Nb
set xyO=.07
call MultiboardSetItemWidth(jyO,xyO)
set vyO=Nb
call MultiboardReleaseItem(vyO)
set myO=Tr[LbO]
set QyO=1
set WyO=0
set Nb=MultiboardGetItem(myO,QyO,WyO)
set EyO=Nb
set ZyO="|cff00FF00Race|r"
if ZyO==null then
set IyO=""
else
set IyO=ZyO
endif
set UyO=IyO
call MultiboardSetItemValue(EyO,UyO)
set PyO=Nb
set AyO=true
set DyO=false
call MultiboardSetItemStyle(PyO,AyO,DyO)
set HyO=Nb
set JyO=.07
call MultiboardSetItemWidth(HyO,JyO)
set KyO=Nb
call MultiboardReleaseItem(KyO)
set LyO=Tr[LbO]
set XyO=1
set CyO=1
set Nb=MultiboardGetItem(LyO,XyO,CyO)
set VyO=Nb
set ByO=REO(LbO)
if ByO==null then
set MyO=""
else
set MyO=ByO
endif
set NyO=MyO
call MultiboardSetItemIcon(VyO,NyO)
set wpO=Nb
set upO=false
set rpO=true
call MultiboardSetItemStyle(wpO,upO,rpO)
set spO=Nb
set tpO=.07
call MultiboardSetItemWidth(spO,tpO)
set ipO=Nb
call MultiboardReleaseItem(ipO)
set SpO=Tr[LbO]
set cpO=2
set opO=0
set Nb=MultiboardGetItem(SpO,cpO,opO)
set OpO=Nb
set lpO="Total Gold"
if lpO==null then
set ypO=""
else
set ypO=lpO
endif
set bpO=ypO
call MultiboardSetItemValue(OpO,bpO)
set ppO=Nb
set epO=true
set qpO=false
call MultiboardSetItemStyle(ppO,epO,qpO)
set apO=Nb
set npO=.07
call MultiboardSetItemWidth(apO,npO)
set dpO=Nb
call MultiboardReleaseItem(dpO)
set fpO=Tr[LbO]
set RpO=2
set TpO=1
set Nb=MultiboardGetItem(fpO,RpO,TpO)
set YpO=Nb
set GpO="0"
if GpO==null then
set hpO=""
else
set hpO=GpO
endif
set gpO=hpO
call MultiboardSetItemValue(YpO,gpO)
set FpO=Nb
set kpO=true
set jpO=false
call MultiboardSetItemStyle(FpO,kpO,jpO)
set xpO=Nb
set vpO=.07
call MultiboardSetItemWidth(xpO,vpO)
set mpO=Nb
call MultiboardReleaseItem(mpO)
set QpO=Tr[LbO]
set WpO=3
set EpO=0
set Nb=MultiboardGetItem(QpO,WpO,EpO)
set ZpO=Nb
set UpO="Normal Gold"
if UpO==null then
set PpO=""
else
set PpO=UpO
endif
set IpO=PpO
call MultiboardSetItemValue(ZpO,IpO)
set ApO=Nb
set DpO=true
set HpO=false
call MultiboardSetItemStyle(ApO,DpO,HpO)
set JpO=Nb
set KpO=.07
call MultiboardSetItemWidth(JpO,KpO)
set LpO=Nb
call MultiboardReleaseItem(LpO)
set XpO=Tr[LbO]
set CpO=3
set VpO=1
set Nb=MultiboardGetItem(XpO,CpO,VpO)
set BpO=Nb
set NpO="0"
if NpO==null then
set weO=""
else
set weO=NpO
endif
set MpO=weO
call MultiboardSetItemValue(BpO,MpO)
set ueO=Nb
set reO=true
set seO=false
call MultiboardSetItemStyle(ueO,reO,seO)
set teO=Nb
set ieO=.07
call MultiboardSetItemWidth(teO,ieO)
set SeO=Nb
call MultiboardReleaseItem(SeO)
set ceO=Tr[LbO]
set oeO=4
set OeO=0
set Nb=MultiboardGetItem(ceO,oeO,OeO)
set leO=Nb
set beO="Gold/min (GpM)"
if beO==null then
set peO=""
else
set peO=beO
endif
set yeO=peO
call MultiboardSetItemValue(leO,yeO)
set eeO=Nb
set qeO=true
set aeO=false
call MultiboardSetItemStyle(eeO,qeO,aeO)
set neO=Nb
set deO=.07
call MultiboardSetItemWidth(neO,deO)
set feO=Nb
call MultiboardReleaseItem(feO)
set ReO=Tr[LbO]
set TeO=4
set YeO=1
set Nb=MultiboardGetItem(ReO,TeO,YeO)
set GeO=Nb
set geO="-"
if geO==null then
set FeO=""
else
set FeO=geO
endif
set heO=FeO
call MultiboardSetItemValue(GeO,heO)
set keO=Nb
set jeO=true
set xeO=false
call MultiboardSetItemStyle(keO,jeO,xeO)
set veO=Nb
set meO=.07
call MultiboardSetItemWidth(veO,meO)
set QeO=Nb
call MultiboardReleaseItem(QeO)
set WeO=Tr[LbO]
set EeO=5
set ZeO=0
set Nb=MultiboardGetItem(WeO,EeO,ZeO)
set UeO=Nb
set IeO="|cffFF0000Unit|r"
if IeO==null then
set AeO=""
else
set AeO=IeO
endif
set PeO=AeO
call MultiboardSetItemValue(UeO,PeO)
set DeO=Nb
set HeO=true
set JeO=false
call MultiboardSetItemStyle(DeO,HeO,JeO)
set KeO=Nb
set LeO=.07
call MultiboardSetItemWidth(KeO,LeO)
set XeO=Nb
call MultiboardReleaseItem(XeO)
set CeO=Tr[LbO]
set VeO=5
set BeO=1
set Nb=MultiboardGetItem(CeO,VeO,BeO)
set NeO=Nb
set MeO="ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp"
if MeO==null then
set uqO=""
else
set uqO=MeO
endif
set wqO=uqO
call MultiboardSetItemIcon(NeO,wqO)
set rqO=Nb
set sqO=false
set tqO=true
call MultiboardSetItemStyle(rqO,sqO,tqO)
set iqO=Nb
set SqO=.07
call MultiboardSetItemWidth(iqO,SqO)
set cqO=Nb
call MultiboardReleaseItem(cqO)
set oqO=Tr[LbO]
set OqO=6
set lqO=0
set Nb=MultiboardGetItem(oqO,OqO,lqO)
set bqO=Nb
set yqO="Units Killed"
if yqO==null then
set eqO=""
else
set eqO=yqO
endif
set pqO=eqO
call MultiboardSetItemValue(bqO,pqO)
set qqO=Nb
set aqO=true
set nqO=false
call MultiboardSetItemStyle(qqO,aqO,nqO)
set dqO=Nb
set fqO=.07
call MultiboardSetItemWidth(dqO,fqO)
set RqO=Nb
call MultiboardReleaseItem(RqO)
set TqO=Tr[LbO]
set YqO=6
set GqO=1
set Nb=MultiboardGetItem(TqO,YqO,GqO)
set gqO=Nb
set hqO="0"
if hqO==null then
set kqO=""
else
set kqO=hqO
endif
set FqO=kqO
call MultiboardSetItemValue(gqO,FqO)
set jqO=Nb
set xqO=true
set vqO=false
call MultiboardSetItemStyle(jqO,xqO,vqO)
set mqO=Nb
set QqO=.07
call MultiboardSetItemWidth(mqO,QqO)
set WqO=Nb
call MultiboardReleaseItem(WqO)
set EqO=Tr[LbO]
set ZqO=7
set UqO=0
set Nb=MultiboardGetItem(EqO,ZqO,UqO)
set IqO=Nb
set PqO="Units Bought"
if PqO==null then
set DqO=""
else
set DqO=PqO
endif
set AqO=DqO
call MultiboardSetItemValue(IqO,AqO)
set HqO=Nb
set JqO=true
set KqO=false
call MultiboardSetItemStyle(HqO,JqO,KqO)
set LqO=Nb
set XqO=.07
call MultiboardSetItemWidth(LqO,XqO)
set CqO=Nb
call MultiboardReleaseItem(CqO)
set VqO=Tr[LbO]
set BqO=7
set NqO=1
set Nb=MultiboardGetItem(VqO,BqO,NqO)
set MqO=Nb
set waO="0"
if waO==null then
set raO=""
else
set raO=waO
endif
set uaO=raO
call MultiboardSetItemValue(MqO,uaO)
set saO=Nb
set taO=true
set iaO=false
call MultiboardSetItemStyle(saO,taO,iaO)
set SaO=Nb
set caO=.07
call MultiboardSetItemWidth(SaO,caO)
set oaO=Nb
call MultiboardReleaseItem(oaO)
set OaO=Tr[LbO]
set laO=8
set baO=0
set Nb=MultiboardGetItem(OaO,laO,baO)
set yaO=Nb
set paO="Heroes Killed"
if paO==null then
set qaO=""
else
set qaO=paO
endif
set eaO=qaO
call MultiboardSetItemValue(yaO,eaO)
set aaO=Nb
set naO=true
set daO=false
call MultiboardSetItemStyle(aaO,naO,daO)
set faO=Nb
set RaO=.07
call MultiboardSetItemWidth(faO,RaO)
set TaO=Nb
call MultiboardReleaseItem(TaO)
set YaO=Tr[LbO]
set GaO=8
set gaO=1
set Nb=MultiboardGetItem(YaO,GaO,gaO)
set haO=Nb
set FaO="0"
if FaO==null then
set jaO=""
else
set jaO=FaO
endif
set kaO=jaO
call MultiboardSetItemValue(haO,kaO)
set xaO=Nb
set vaO=true
set maO=false
call MultiboardSetItemStyle(xaO,vaO,maO)
set QaO=Nb
set WaO=.07
call MultiboardSetItemWidth(QaO,WaO)
set EaO=Nb
call MultiboardReleaseItem(EaO)
set ZaO=Tr[LbO]
set UaO=9
set IaO=0
set Nb=MultiboardGetItem(ZaO,UaO,IaO)
set PaO=Nb
set AaO="Heroes Bought"
if AaO==null then
set HaO=""
else
set HaO=AaO
endif
set DaO=HaO
call MultiboardSetItemValue(PaO,DaO)
set JaO=Nb
set KaO=true
set LaO=false
call MultiboardSetItemStyle(JaO,KaO,LaO)
set XaO=Nb
set CaO=.07
call MultiboardSetItemWidth(XaO,CaO)
set VaO=Nb
call MultiboardReleaseItem(VaO)
set BaO=Tr[LbO]
set NaO=9
set MaO=1
set Nb=MultiboardGetItem(BaO,NaO,MaO)
set wnO=Nb
set unO="0"
if unO==null then
set snO=""
else
set snO=unO
endif
set rnO=snO
call MultiboardSetItemValue(wnO,rnO)
set tnO=Nb
set inO=true
set SnO=false
call MultiboardSetItemStyle(tnO,inO,SnO)
set cnO=Nb
set onO=.07
call MultiboardSetItemWidth(cnO,onO)
set OnO=Nb
call MultiboardReleaseItem(OnO)
set lnO=Tr[LbO]
set bnO=10
set ynO=0
set Nb=MultiboardGetItem(lnO,bnO,ynO)
set pnO=Nb
set enO="Hero Level"
if enO==null then
set anO=""
else
set anO=enO
endif
set qnO=anO
call MultiboardSetItemValue(pnO,qnO)
set nnO=Nb
set dnO=true
set fnO=false
call MultiboardSetItemStyle(nnO,dnO,fnO)
set RnO=Nb
set TnO=.07
call MultiboardSetItemWidth(RnO,TnO)
set YnO=Nb
call MultiboardReleaseItem(YnO)
set GnO=Tr[LbO]
set gnO=10
set hnO=1
set Nb=MultiboardGetItem(GnO,gnO,hnO)
set FnO=Nb
set knO="1/1/1/1"
if knO==null then
set xnO=""
else
set xnO=knO
endif
set jnO=xnO
call MultiboardSetItemValue(FnO,jnO)
set vnO=Nb
set mnO=true
set QnO=false
call MultiboardSetItemStyle(vnO,mnO,QnO)
set WnO=Nb
set EnO=.07
call MultiboardSetItemWidth(WnO,EnO)
set ZnO=Nb
call MultiboardReleaseItem(ZnO)
set UnO=Tr[LbO]
set InO=11
set PnO=0
set Nb=MultiboardGetItem(UnO,InO,PnO)
set AnO=Nb
set DnO="Research"
if DnO==null then
set JnO=""
else
set JnO=DnO
endif
set HnO=JnO
call MultiboardSetItemValue(AnO,HnO)
set KnO=Nb
set LnO=true
set XnO=false
call MultiboardSetItemStyle(KnO,LnO,XnO)
set CnO=Nb
set VnO=.07
call MultiboardSetItemWidth(CnO,VnO)
set BnO=Nb
call MultiboardReleaseItem(BnO)
set NnO=Tr[LbO]
set MnO=11
set wdO=1
set Nb=MultiboardGetItem(NnO,MnO,wdO)
set udO=Nb
set rdO="0"
if rdO==null then
set tdO=""
else
set tdO=rdO
endif
set sdO=tdO
call MultiboardSetItemValue(udO,sdO)
set idO=Nb
set SdO=true
set cdO=false
call MultiboardSetItemStyle(idO,SdO,cdO)
set odO=Nb
set OdO=.07
call MultiboardSetItemWidth(odO,OdO)
set ldO=Nb
call MultiboardReleaseItem(ldO)
set bdO=Tr[LbO]
set ydO=12
set pdO=0
set Nb=MultiboardGetItem(bdO,ydO,pdO)
set edO=Nb
set qdO="Buildings Razed"
if qdO==null then
set ndO=""
else
set ndO=qdO
endif
set adO=ndO
call MultiboardSetItemValue(edO,adO)
set ddO=Nb
set fdO=true
set RdO=false
call MultiboardSetItemStyle(ddO,fdO,RdO)
set TdO=Nb
set YdO=.07
call MultiboardSetItemWidth(TdO,YdO)
set GdO=Nb
call MultiboardReleaseItem(GdO)
set gdO=Tr[LbO]
set hdO=12
set FdO=1
set Nb=MultiboardGetItem(gdO,hdO,FdO)
set kdO=Nb
set jdO="0"
if jdO==null then
set vdO=""
else
set vdO=jdO
endif
set xdO=vdO
call MultiboardSetItemValue(kdO,xdO)
set mdO=Nb
set QdO=true
set WdO=false
call MultiboardSetItemStyle(mdO,QdO,WdO)
set EdO=Nb
set ZdO=.07
call MultiboardSetItemWidth(EdO,ZdO)
set UdO=Nb
call MultiboardReleaseItem(UdO)
set IdO=Tr[LbO]
set PdO=13
set AdO=0
set Nb=MultiboardGetItem(IdO,PdO,AdO)
set DdO=Nb
set HdO="|cffFFD700Gold|r"
if HdO==null then
set KdO=""
else
set KdO=HdO
endif
set JdO=KdO
call MultiboardSetItemValue(DdO,JdO)
set LdO=Nb
set XdO=true
set CdO=false
call MultiboardSetItemStyle(LdO,XdO,CdO)
set VdO=Nb
set BdO=.07
call MultiboardSetItemWidth(VdO,BdO)
set NdO=Nb
call MultiboardReleaseItem(NdO)
set MdO=Tr[LbO]
set wfO=13
set ufO=1
set Nb=MultiboardGetItem(MdO,wfO,ufO)
set rfO=Nb
set sfO="ReplaceableTextures\\CommandButtons\\BTNMGexchange.blp"
if sfO==null then
set ifO=""
else
set ifO=sfO
endif
set tfO=ifO
call MultiboardSetItemIcon(rfO,tfO)
set SfO=Nb
set cfO=false
set ofO=true
call MultiboardSetItemStyle(SfO,cfO,ofO)
set OfO=Nb
set lfO=.07
call MultiboardSetItemWidth(OfO,lfO)
set bfO=Nb
call MultiboardReleaseItem(bfO)
set yfO=Tr[LbO]
set pfO=14
set efO=0
set Nb=MultiboardGetItem(yfO,pfO,efO)
set qfO=Nb
set afO="GpM 0-10"
if afO==null then
set dfO=""
else
set dfO=afO
endif
set nfO=dfO
call MultiboardSetItemValue(qfO,nfO)
set ffO=Nb
set RfO=true
set TfO=false
call MultiboardSetItemStyle(ffO,RfO,TfO)
set YfO=Nb
set GfO=.07
call MultiboardSetItemWidth(YfO,GfO)
set gfO=Nb
call MultiboardReleaseItem(gfO)
set hfO=Tr[LbO]
set FfO=14
set kfO=1
set Nb=MultiboardGetItem(hfO,FfO,kfO)
set jfO=Nb
set xfO="-"
if xfO==null then
set mfO=""
else
set mfO=xfO
endif
set vfO=mfO
call MultiboardSetItemValue(jfO,vfO)
set QfO=Nb
set WfO=true
set EfO=false
call MultiboardSetItemStyle(QfO,WfO,EfO)
set ZfO=Nb
set UfO=.07
call MultiboardSetItemWidth(ZfO,UfO)
set IfO=Nb
call MultiboardReleaseItem(IfO)
set PfO=Tr[LbO]
set AfO=15
set DfO=0
set Nb=MultiboardGetItem(PfO,AfO,DfO)
set HfO=Nb
set JfO="GpM 10-20"
if JfO==null then
set LfO=""
else
set LfO=JfO
endif
set KfO=LfO
call MultiboardSetItemValue(HfO,KfO)
set XfO=Nb
set CfO=true
set VfO=false
call MultiboardSetItemStyle(XfO,CfO,VfO)
set BfO=Nb
set NfO=.07
call MultiboardSetItemWidth(BfO,NfO)
set MfO=Nb
call MultiboardReleaseItem(MfO)
set wRO=Tr[LbO]
set uRO=15
set rRO=1
set Nb=MultiboardGetItem(wRO,uRO,rRO)
set sRO=Nb
set tRO="-"
if tRO==null then
set SRO=""
else
set SRO=tRO
endif
set iRO=SRO
call MultiboardSetItemValue(sRO,iRO)
set cRO=Nb
set oRO=true
set ORO=false
call MultiboardSetItemStyle(cRO,oRO,ORO)
set lRO=Nb
set bRO=.07
call MultiboardSetItemWidth(lRO,bRO)
set yRO=Nb
call MultiboardReleaseItem(yRO)
set pRO=Tr[LbO]
set eRO=16
set qRO=0
set Nb=MultiboardGetItem(pRO,eRO,qRO)
set aRO=Nb
set nRO="GpM 20-30"
if nRO==null then
set fRO=""
else
set fRO=nRO
endif
set dRO=fRO
call MultiboardSetItemValue(aRO,dRO)
set RRO=Nb
set TRO=true
set YRO=false
call MultiboardSetItemStyle(RRO,TRO,YRO)
set GRO=Nb
set gRO=.07
call MultiboardSetItemWidth(GRO,gRO)
set hRO=Nb
call MultiboardReleaseItem(hRO)
set FRO=Tr[LbO]
set kRO=16
set jRO=1
set Nb=MultiboardGetItem(FRO,kRO,jRO)
set xRO=Nb
set vRO="-"
if vRO==null then
set QRO=""
else
set QRO=vRO
endif
set mRO=QRO
call MultiboardSetItemValue(xRO,mRO)
set WRO=Nb
set ERO=true
set ZRO=false
call MultiboardSetItemStyle(WRO,ERO,ZRO)
set URO=Nb
set IRO=.07
call MultiboardSetItemWidth(URO,IRO)
set PRO=Nb
call MultiboardReleaseItem(PRO)
set ARO=Tr[LbO]
set DRO=17
set HRO=0
set Nb=MultiboardGetItem(ARO,DRO,HRO)
set JRO=Nb
set KRO="GpM 30-40"
if KRO==null then
set XRO=""
else
set XRO=KRO
endif
set LRO=XRO
call MultiboardSetItemValue(JRO,LRO)
set CRO=Nb
set VRO=true
set BRO=false
call MultiboardSetItemStyle(CRO,VRO,BRO)
set NRO=Nb
set MRO=.07
call MultiboardSetItemWidth(NRO,MRO)
set wTO=Nb
call MultiboardReleaseItem(wTO)
set uTO=Tr[LbO]
set rTO=17
set sTO=1
set Nb=MultiboardGetItem(uTO,rTO,sTO)
set tTO=Nb
set iTO="-"
if iTO==null then
set cTO=""
else
set cTO=iTO
endif
set STO=cTO
call MultiboardSetItemValue(tTO,STO)
set oTO=Nb
set OTO=true
set lTO=false
call MultiboardSetItemStyle(oTO,OTO,lTO)
set bTO=Nb
set yTO=.07
call MultiboardSetItemWidth(bTO,yTO)
set pTO=Nb
call MultiboardReleaseItem(pTO)
set eTO=Tr[LbO]
set qTO=18
set aTO=0
set Nb=MultiboardGetItem(eTO,qTO,aTO)
set nTO=Nb
set dTO="GpM 40-50"
if dTO==null then
set RTO=""
else
set RTO=dTO
endif
set fTO=RTO
call MultiboardSetItemValue(nTO,fTO)
set TTO=Nb
set YTO=true
set GTO=false
call MultiboardSetItemStyle(TTO,YTO,GTO)
set gTO=Nb
set hTO=.07
call MultiboardSetItemWidth(gTO,hTO)
set FTO=Nb
call MultiboardReleaseItem(FTO)
set kTO=Tr[LbO]
set jTO=18
set xTO=1
set Nb=MultiboardGetItem(kTO,jTO,xTO)
set vTO=Nb
set mTO="-"
if mTO==null then
set WTO=""
else
set WTO=mTO
endif
set QTO=WTO
call MultiboardSetItemValue(vTO,QTO)
set ETO=Nb
set ZTO=true
set UTO=false
call MultiboardSetItemStyle(ETO,ZTO,UTO)
set ITO=Nb
set PTO=.07
call MultiboardSetItemWidth(ITO,PTO)
set ATO=Nb
call MultiboardReleaseItem(ATO)
set DTO=Tr[LbO]
set HTO=19
set JTO=0
set Nb=MultiboardGetItem(DTO,HTO,JTO)
set KTO=Nb
set LTO="GpM 50-60"
if LTO==null then
set CTO=""
else
set CTO=LTO
endif
set XTO=CTO
call MultiboardSetItemValue(KTO,XTO)
set VTO=Nb
set BTO=true
set NTO=false
call MultiboardSetItemStyle(VTO,BTO,NTO)
set MTO=Nb
set wYO=.07
call MultiboardSetItemWidth(MTO,wYO)
set uYO=Nb
call MultiboardReleaseItem(uYO)
set rYO=Tr[LbO]
set sYO=19
set tYO=1
set Nb=MultiboardGetItem(rYO,sYO,tYO)
set iYO=Nb
set SYO="-"
if SYO==null then
set oYO=""
else
set oYO=SYO
endif
set cYO=oYO
call MultiboardSetItemValue(iYO,cYO)
set OYO=Nb
set lYO=true
set bYO=false
call MultiboardSetItemStyle(OYO,lYO,bYO)
set yYO=Nb
set pYO=.07
call MultiboardSetItemWidth(yYO,pYO)
set eYO=Nb
call MultiboardReleaseItem(eYO)
set qYO=Tr[LbO]
set aYO=20
set nYO=0
set Nb=MultiboardGetItem(qYO,aYO,nYO)
set dYO=Nb
set fYO="from Salvage"
if fYO==null then
set TYO=""
else
set TYO=fYO
endif
set RYO=TYO
call MultiboardSetItemValue(dYO,RYO)
set YYO=Nb
set GYO=true
set gYO=false
call MultiboardSetItemStyle(YYO,GYO,gYO)
set hYO=Nb
set FYO=.07
call MultiboardSetItemWidth(hYO,FYO)
set kYO=Nb
call MultiboardReleaseItem(kYO)
set jYO=Tr[LbO]
set xYO=20
set vYO=1
set Nb=MultiboardGetItem(jYO,xYO,vYO)
set mYO=Nb
set QYO="-"
if QYO==null then
set EYO=""
else
set EYO=QYO
endif
set WYO=EYO
call MultiboardSetItemValue(mYO,WYO)
set ZYO=Nb
set UYO=true
set IYO=false
call MultiboardSetItemStyle(ZYO,UYO,IYO)
set PYO=Nb
set AYO=.07
call MultiboardSetItemWidth(PYO,AYO)
set DYO=Nb
call MultiboardReleaseItem(DYO)
set HYO=Tr[LbO]
set JYO=21
set KYO=0
set Nb=MultiboardGetItem(HYO,JYO,KYO)
set LYO=Nb
set XYO="from Neutrals"
if XYO==null then
set VYO=""
else
set VYO=XYO
endif
set CYO=VYO
call MultiboardSetItemValue(LYO,CYO)
set BYO=Nb
set NYO=true
set MYO=false
call MultiboardSetItemStyle(BYO,NYO,MYO)
set wGO=Nb
set uGO=.07
call MultiboardSetItemWidth(wGO,uGO)
set rGO=Nb
call MultiboardReleaseItem(rGO)
set sGO=Tr[LbO]
set tGO=21
set iGO=1
set Nb=MultiboardGetItem(sGO,tGO,iGO)
set SGO=Nb
set cGO="-"
if cGO==null then
set OGO=""
else
set OGO=cGO
endif
set oGO=OGO
call MultiboardSetItemValue(SGO,oGO)
set lGO=Nb
set bGO=true
set yGO=false
call MultiboardSetItemStyle(lGO,bGO,yGO)
set pGO=Nb
set eGO=.07
call MultiboardSetItemWidth(pGO,eGO)
set qGO=Nb
call MultiboardReleaseItem(qGO)
set aGO=Tr[LbO]
set nGO=22
set dGO=0
set Nb=MultiboardGetItem(aGO,nGO,dGO)
set fGO=Nb
set RGO="for Heroes killed"
if RGO==null then
set YGO=""
else
set YGO=RGO
endif
set TGO=YGO
call MultiboardSetItemValue(fGO,TGO)
set GGO=Nb
set gGO=true
set hGO=false
call MultiboardSetItemStyle(GGO,gGO,hGO)
set FGO=Nb
set kGO=.07
call MultiboardSetItemWidth(FGO,kGO)
set jGO=Nb
call MultiboardReleaseItem(jGO)
set xGO=Tr[LbO]
set vGO=22
set mGO=1
set Nb=MultiboardGetItem(xGO,vGO,mGO)
set QGO=Nb
set WGO="-"
if WGO==null then
set ZGO=""
else
set ZGO=WGO
endif
set EGO=ZGO
call MultiboardSetItemValue(QGO,EGO)
set UGO=Nb
set IGO=true
set PGO=false
call MultiboardSetItemStyle(UGO,IGO,PGO)
set AGO=Nb
set DGO=.07
call MultiboardSetItemWidth(AGO,DGO)
set HGO=Nb
call MultiboardReleaseItem(HGO)
set JGO=Tr[LbO]
set KGO=23
set LGO=0
set Nb=MultiboardGetItem(JGO,KGO,LGO)
set XGO=Nb
set CGO="from Fortress"
if CGO==null then
set BGO=""
else
set BGO=CGO
endif
set VGO=BGO
call MultiboardSetItemValue(XGO,VGO)
set NGO=Nb
set MGO=true
set wgO=false
call MultiboardSetItemStyle(NGO,MGO,wgO)
set ugO=Nb
set rgO=.07
call MultiboardSetItemWidth(ugO,rgO)
set sgO=Nb
call MultiboardReleaseItem(sgO)
set tgO=Tr[LbO]
set igO=23
set SgO=1
set Nb=MultiboardGetItem(tgO,igO,SgO)
set cgO=Nb
set ogO="-"
if ogO==null then
set lgO=""
else
set lgO=ogO
endif
set OgO=lgO
call MultiboardSetItemValue(cgO,OgO)
set bgO=Nb
set ygO=true
set pgO=false
call MultiboardSetItemStyle(bgO,ygO,pgO)
set egO=Nb
set qgO=.07
call MultiboardSetItemWidth(egO,qgO)
set agO=Nb
call MultiboardReleaseItem(agO)
set ngO=Tr[LbO]
set dgO=24
set fgO=0
set Nb=MultiboardGetItem(ngO,dgO,fgO)
set RgO=Nb
set TgO="for units in mid"
if TgO==null then
set GgO=""
else
set GgO=TgO
endif
set YgO=GgO
call MultiboardSetItemValue(RgO,YgO)
set ggO=Nb
set hgO=true
set FgO=false
call MultiboardSetItemStyle(ggO,hgO,FgO)
set kgO=Nb
set jgO=.07
call MultiboardSetItemWidth(kgO,jgO)
set xgO=Nb
call MultiboardReleaseItem(xgO)
set vgO=Tr[LbO]
set mgO=24
set QgO=1
set Nb=MultiboardGetItem(vgO,mgO,QgO)
set WgO=Nb
set EgO="-"
if EgO==null then
set UgO=""
else
set UgO=EgO
endif
set ZgO=UgO
call MultiboardSetItemValue(WgO,ZgO)
set IgO=Nb
set PgO=true
set AgO=false
call MultiboardSetItemStyle(IgO,PgO,AgO)
set DgO=Nb
set HgO=.07
call MultiboardSetItemWidth(DgO,HgO)
set JgO=Nb
call MultiboardReleaseItem(JgO)
set KgO=Tr[LbO]
set LgO=25
set XgO=0
set Nb=MultiboardGetItem(KgO,LgO,XgO)
set CgO=Nb
set VgO="for other units"
if VgO==null then
set NgO=""
else
set NgO=VgO
endif
set BgO=NgO
call MultiboardSetItemValue(CgO,BgO)
set MgO=Nb
set whO=true
set uhO=false
call MultiboardSetItemStyle(MgO,whO,uhO)
set rhO=Nb
set shO=.07
call MultiboardSetItemWidth(rhO,shO)
set thO=Nb
call MultiboardReleaseItem(thO)
set ihO=Tr[LbO]
set ShO=25
set chO=1
set Nb=MultiboardGetItem(ihO,ShO,chO)
set ohO=Nb
set OhO="-"
if OhO==null then
set bhO=""
else
set bhO=OhO
endif
set lhO=bhO
call MultiboardSetItemValue(ohO,lhO)
set yhO=Nb
set phO=true
set ehO=false
call MultiboardSetItemStyle(yhO,phO,ehO)
set qhO=Nb
set ahO=.07
call MultiboardSetItemWidth(qhO,ahO)
set nhO=Nb
call MultiboardReleaseItem(nhO)
set dhO=Tr[LbO]
set fhO=26
set RhO=0
set Nb=MultiboardGetItem(dhO,fhO,RhO)
set ThO=Nb
set YhO="Mana Stone"
if YhO==null then
set ghO=""
else
set ghO=YhO
endif
set GhO=ghO
call MultiboardSetItemValue(ThO,GhO)
set hhO=Nb
set FhO=true
set khO=false
call MultiboardSetItemStyle(hhO,FhO,khO)
set jhO=Nb
set xhO=.07
call MultiboardSetItemWidth(jhO,xhO)
set vhO=Nb
call MultiboardReleaseItem(vhO)
set mhO=Tr[LbO]
set QhO=26
set WhO=1
set Nb=MultiboardGetItem(mhO,QhO,WhO)
set EhO=Nb
set ZhO="-"
if ZhO==null then
set IhO=""
else
set IhO=ZhO
endif
set UhO=IhO
call MultiboardSetItemValue(EhO,UhO)
set PhO=Nb
set AhO=true
set DhO=false
call MultiboardSetItemStyle(PhO,AhO,DhO)
set HhO=Nb
set JhO=.07
call MultiboardSetItemWidth(HhO,JhO)
set KhO=Nb
call MultiboardReleaseItem(KhO)
set LhO=Tr[LbO]
set XhO=Player(LbO)
set ChO=true
if IY==XhO then
call MultiboardDisplay(LhO,ChO)
endif
set VhO=Tr[LbO]
set BhO=Player(LbO)
if IY==BhO then
set NhO=VhO
call MultiboardMinimize(NhO,true)
endif
set Er[LbO]=1
set Zr[LbO]=1
set Ur[LbO]=1
set Ir[LbO]=1
set rs[LbO]=2
set LbO=LbO+1
endloop
set MhO=yd
call EnableTrigger(MhO)
set XbO=null
set VbO=null
set NbO=null
set wyO=null
set iyO=null
set oyO=null
set yyO=null
set qyO=null
set nyO=null
set dyO=null
set TyO=null
set hyO=null
set jyO=null
set vyO=null
set myO=null
set EyO=null
set PyO=null
set HyO=null
set KyO=null
set LyO=null
set VyO=null
set wpO=null
set spO=null
set ipO=null
set SpO=null
set OpO=null
set ppO=null
set apO=null
set dpO=null
set fpO=null
set YpO=null
set FpO=null
set xpO=null
set mpO=null
set QpO=null
set ZpO=null
set ApO=null
set JpO=null
set LpO=null
set XpO=null
set BpO=null
set ueO=null
set teO=null
set SeO=null
set ceO=null
set leO=null
set eeO=null
set neO=null
set feO=null
set ReO=null
set GeO=null
set keO=null
set veO=null
set QeO=null
set WeO=null
set UeO=null
set DeO=null
set KeO=null
set XeO=null
set CeO=null
set NeO=null
set rqO=null
set iqO=null
set cqO=null
set oqO=null
set bqO=null
set qqO=null
set dqO=null
set RqO=null
set TqO=null
set gqO=null
set jqO=null
set mqO=null
set WqO=null
set EqO=null
set IqO=null
set HqO=null
set LqO=null
set CqO=null
set VqO=null
set MqO=null
set saO=null
set SaO=null
set oaO=null
set OaO=null
set yaO=null
set aaO=null
set faO=null
set TaO=null
set YaO=null
set haO=null
set xaO=null
set QaO=null
set EaO=null
set ZaO=null
set PaO=null
set JaO=null
set XaO=null
set VaO=null
set BaO=null
set wnO=null
set tnO=null
set cnO=null
set OnO=null
set lnO=null
set pnO=null
set nnO=null
set RnO=null
set YnO=null
set GnO=null
set FnO=null
set vnO=null
set WnO=null
set ZnO=null
set UnO=null
set AnO=null
set KnO=null
set CnO=null
set BnO=null
set NnO=null
set udO=null
set idO=null
set odO=null
set ldO=null
set bdO=null
set edO=null
set ddO=null
set TdO=null
set GdO=null
set gdO=null
set kdO=null
set mdO=null
set EdO=null
set UdO=null
set IdO=null
set DdO=null
set LdO=null
set VdO=null
set NdO=null
set MdO=null
set rfO=null
set SfO=null
set OfO=null
set bfO=null
set yfO=null
set qfO=null
set ffO=null
set YfO=null
set gfO=null
set hfO=null
set jfO=null
set QfO=null
set ZfO=null
set IfO=null
set PfO=null
set HfO=null
set XfO=null
set BfO=null
set MfO=null
set wRO=null
set sRO=null
set cRO=null
set lRO=null
set yRO=null
set pRO=null
set aRO=null
set RRO=null
set GRO=null
set hRO=null
set FRO=null
set xRO=null
set WRO=null
set URO=null
set PRO=null
set ARO=null
set JRO=null
set CRO=null
set NRO=null
set wTO=null
set uTO=null
set tTO=null
set oTO=null
set bTO=null
set pTO=null
set eTO=null
set nTO=null
set TTO=null
set gTO=null
set FTO=null
set kTO=null
set vTO=null
set ETO=null
set ITO=null
set ATO=null
set DTO=null
set KTO=null
set VTO=null
set MTO=null
set uYO=null
set rYO=null
set iYO=null
set OYO=null
set yYO=null
set eYO=null
set qYO=null
set dYO=null
set YYO=null
set hYO=null
set kYO=null
set jYO=null
set mYO=null
set ZYO=null
set PYO=null
set DYO=null
set HYO=null
set LYO=null
set BYO=null
set wGO=null
set rGO=null
set sGO=null
set SGO=null
set lGO=null
set pGO=null
set qGO=null
set aGO=null
set fGO=null
set GGO=null
set FGO=null
set jGO=null
set xGO=null
set QGO=null
set UGO=null
set AGO=null
set HGO=null
set JGO=null
set XGO=null
set NGO=null
set ugO=null
set sgO=null
set tgO=null
set cgO=null
set bgO=null
set egO=null
set agO=null
set ngO=null
set RgO=null
set ggO=null
set kgO=null
set xgO=null
set vgO=null
set WgO=null
set IgO=null
set DgO=null
set JgO=null
set KgO=null
set CgO=null
set MgO=null
set rhO=null
set thO=null
set ihO=null
set ohO=null
set yhO=null
set qhO=null
set nhO=null
set dhO=null
set ThO=null
set hhO=null
set jhO=null
set vhO=null
set mhO=null
set EhO=null
set PhO=null
set HhO=null
set KhO=null
set LhO=null
set XhO=null
set VhO=null
set BhO=null
set NhO=null
set MhO=null
endfunction
function rDy takes nothing returns nothing
local timerdialog WPy=tr
local group FPy
local filterfunc kPy
local unit jPy
local group xPy
local integer vPy
local integer mPy
local integer QPy
local trigger EPy
local trigger ZPy
local trigger UPy
local trigger IPy
local trigger PPy
local trigger APy
local string DPy
local group HPy
local group JPy
local unit KPy
local player LPy
local integer XPy
local integer CPy
local integer VPy
local widget BPy
local real NPy
local real MPy
local group wAy
local boolexpr uAy
local texttag rAy
local texttag sAy
local texttag tAy
local texttag iAy
local texttag SAy
local unit cAy
local player oAy
local real OAy
local real lAy
local unit bAy
local unit yAy
local unit pAy
local player eAy
local player qAy
local integer aAy
local boolean nAy
local player dAy
local integer fAy
local boolean RAy
local player TAy
local integer YAy
local boolean GAy
local unit gAy
local unit hAy
local unit FAy
local unit kAy
local integer jAy
local unit xAy
local unit vAy
local unit mAy
local unit QAy
local unit WAy
local unit EAy
local player ZAy
local integer UAy
local player IAy
local playerstate PAy
local integer AAy
local player DAy
local playerstate HAy
local player JAy
local integer KAy
local integer LAy
local integer XAy
local widget CAy
local player VAy
local real BAy
local player NAy
local playerstate MAy
local real wDy
local real uDy
call DestroyTimerDialog(WPy)
if Fu==false then
call TimerStart(ir,90.,false,Mww_930)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Bonus selection")
call TimerDialogDisplay(tr,true)
endif
call wFO()
call rJc()
set EPy=Ca
call EnableTrigger(EPy)
set ZPy=Va
call EnableTrigger(ZPy)
set UPy=Ba
call EnableTrigger(UPy)
set IPy=Ma
call EnableTrigger(IPy)
set PPy=wn
call EnableTrigger(PPy)
set APy=cd
call EnableTrigger(APy)
call UnitShareVision(G[1],Tu,false)
call UnitShareVision(G[2],Tu,false)
call UnitShareVision(G[7],Tu,false)
call UnitShareVision(G[8],Tu,false)
call UnitShareVision(G[3],Yu,false)
call UnitShareVision(G[4],Yu,false)
call UnitShareVision(G[5],Yu,false)
call UnitShareVision(G[6],Yu,false)
call UnitShareVision(G[5],Gu,false)
call UnitShareVision(G[6],Gu,false)
call UnitShareVision(G[7],Gu,false)
call UnitShareVision(G[8],Gu,false)
call UnitShareVision(G[1],gu,false)
call UnitShareVision(G[2],gu,false)
call UnitShareVision(G[3],gu,false)
call UnitShareVision(G[4],gu,false)
set DPy="|cffff0000Attention!|r |cffffcc00Focused Ultimate Weapon can only be selected when there are two players left alive.|r"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,DPy)
set FPy=CreateGroup()
set kPy=Filter(www_3499)
call GroupEnumUnitsInRect(FPy,bj_mapInitialPlayableArea,kPy)
set xPy=FPy
loop
set HPy=xPy
exitwhen not (FirstOfGroup(HPy)!=null)
set JPy=xPy
set KPy=FirstOfGroup(JPy)
call GroupRemoveUnit(JPy,KPy)
set jPy=KPy
set LPy=Player(13)
set XPy=$414D6378
set CPy=1
set VPy=852527
set BPy=jPy
set JAy=LPy
set KAy=XPy
set LAy=CPy
set XAy=VPy
set CAy=BPy
set wDy=GetWidgetX(BPy)
set uDy=GetWidgetY(BPy)
set NPy=wDy
set MPy=uDy
call I9S(JAy,KAy,LAy,XAy,CAy,NPy,MPy,0.)
endloop
set wAy=FPy
call DestroyGroup(wAy)
set uAy=kPy
call DestroyBoolExpr(uAy)
set vPy=0
loop
exitwhen vPy>3
if jY[vPy]!=null then
set rAy=jY[vPy]
call DestroyTextTag(rAy)
set jY[vPy]=null
set sAy=xY[vPy]
call DestroyTextTag(sAy)
set xY[vPy]=null
set tAy=TY
call DestroyTextTag(tAy)
set iAy=YY
call DestroyTextTag(iAy)
set TY=null
set YY=null
endif
set vPy=vPy+1
endloop
set mPy=0
loop
exitwhen mPy>7
if kY[mPy]!=null then
set SAy=kY[mPy]
call DestroyTextTag(SAy)
set kY[mPy]=null
endif
set mPy=mPy+1
endloop
set QPy=0
loop
exitwhen QPy>3
set cAy=F[QPy]
if bNe(GetUnitTypeId(cAy))==true then
set oAy=Player(QPy)
set bAy=F[QPy]
set OAy=GetUnitX(bAy)
set yAy=F[QPy]
set lAy=GetUnitY(yAy)
if GetLocalPlayer()==oAy then
call SetCameraPosition(OAy,lAy)
endif
set pAy=F[QPy]
set eAy=Player(QPy)
if GetLocalPlayer()==eAy then
call ClearSelection()
call SelectUnit(pAy,true)
endif
endif
set qAy=Player(QPy)
set aAy=$41304F43
set nAy=false
call SetPlayerAbilityAvailable(qAy,aAy,nAy)
if xu==true and ju==true then
set dAy=Player(QPy)
set fAy=$41323458
set RAy=false
call SetPlayerAbilityAvailable(dAy,fAy,RAy)
set TAy=Player(QPy)
set YAy=$41305051
set GAy=false
call SetPlayerAbilityAvailable(TAy,YAy,GAy)
endif
set gAy=o[QPy]
set VAy=GetOwningPlayer(gAy)
set hAy=o[QPy]
set BAy=GetUnitX(hAy)
set FAy=o[QPy]
set c[QPy]=CreateUnit(VAy,$75303038,BAy,GetUnitY(FAy),0.)
set kAy=c[QPy]
set jAy=$41313136
call UnitAddAbility(kAy,jAy)
call eel(O[QPy],QPy,15)
set xAy=O[QPy]
set lu[QPy]=GetUnitX(xAy)
set vAy=O[QPy]
set pu[QPy]=GetUnitY(vAy)
set Su[QPy]=GetUnitFacing(O[QPy])
call eel(b[QPy],QPy,15)
set mAy=b[QPy]
set ou[QPy]=GetUnitX(mAy)
set QAy=b[QPy]
set bu[QPy]=GetUnitY(QAy)
set iu[QPy]=GetUnitFacing(b[QPy])
call eel(l[QPy],QPy,15)
set WAy=l[QPy]
set Ou[QPy]=GetUnitX(WAy)
set EAy=l[QPy]
set yu[QPy]=GetUnitY(EAy)
set cu[QPy]=GetUnitFacing(l[QPy])
set ZAy=Player(QPy)
set UAy=360
set IAy=ZAy
set PAy=PLAYER_STATE_RESOURCE_GOLD
set AAy=UAy
set NAy=IAy
set MAy=PAy
set DAy=IAy
set HAy=PAy
call SetPlayerState(NAy,MAy,GetPlayerState(DAy,HAy)+AAy)
set hr[QPy]=hr[QPy]+360
set Fr[QPy]=Fr[QPy]+360
set QPy=QPy+1
endloop
set FPy=null
set kPy=null
set jPy=null
set xPy=null
set WPy=null
set EPy=null
set ZPy=null
set UPy=null
set IPy=null
set PPy=null
set APy=null
set HPy=null
set JPy=null
set KPy=null
set LPy=null
set BPy=null
set wAy=null
set uAy=null
set rAy=null
set sAy=null
set tAy=null
set iAy=null
set SAy=null
set cAy=null
set oAy=null
set bAy=null
set yAy=null
set pAy=null
set eAy=null
set qAy=null
set dAy=null
set TAy=null
set gAy=null
set hAy=null
set FAy=null
set kAy=null
set xAy=null
set vAy=null
set mAy=null
set QAy=null
set WAy=null
set EAy=null
set ZAy=null
set IAy=null
set PAy=null
set DAy=null
set HAy=null
set JAy=null
set CAy=null
set VAy=null
set NAy=null
set MAy=null
endfunction
function rvi takes integer Xxi returns nothing
local unit Cxi=Hx[Xxi]
local integer Vxi=$41323456
local unit Bxi
local real Nxi
local unit Mxi
local unitstate wvi
local real uvi
if GetUnitAbilityLevel(Cxi,Vxi)==0 then
set Bxi=Hx[Xxi]
set Nxi=1000.
set Mxi=Bxi
set wvi=UNIT_STATE_MANA
set uvi=Nxi
call SetUnitState(Mxi,wvi,uvi)
endif
set Cxi=null
set Bxi=null
set Mxi=null
set wvi=null
endfunction
function sUl takes integer HZl,string JZl returns nothing
local integer KZl
local integer LZl
local string XZl
local integer CZl
local string VZl
local integer BZl
local integer NZl
local integer MZl
local string wUl
local integer uUl
local string rUl
set aW[qW]=JZl
set qW=qW+1
if GetPlayerController(gu)==MAP_CONTROL_COMPUTER or u[jk[HZl]]==0 then
set LZl=gY
set XZl="when calling shuffle in AllPickRace, line 308"
set aW[qW]=XZl
set qW=qW+1
if ok[LZl]==0 then
if LZl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(LZl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set CZl=gY
set VZl="when calling getFirst in AllPickRace, line 309"
set aW[qW]=VZl
set qW=qW+1
if ok[CZl]==0 then
if CZl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set NZl=CZl
set BZl=Hv[Kv[Vv[NZl]]]
set qW=qW-1
set KZl=BZl
set MZl=KZl
set wUl="when calling numRace in AllPickRace, line 310"
set aW[qW]=wUl
set qW=qW+1
if MZl==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if MZl==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if MZl==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if MZl==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if MZl==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if MZl==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if MZl==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if MZl==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if MZl==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if MZl==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if MZl==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if MZl==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if MZl==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if MZl==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if MZl==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if MZl==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if MZl==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if MZl==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if MZl==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if MZl==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(gu,KZl,"when calling pickRaceRandom in AllPickRace, line 311")
call eWp(gY,KZl,"when calling remove in AllPickRace, line 312")
set uUl=gY
set rUl="when calling shuffle in AllPickRace, line 313"
set aW[qW]=rUl
set qW=qW+1
if ok[uUl]==0 then
if uUl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(uUl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
endif
call rDy()
set qW=qW-1
endfunction
function tbl takes string sbl returns nothing
endfunction
function uiu takes integer Ztu returns nothing
local unit Utu=aQ[Ztu]
local unit Itu
local integer Ptu
local unit Atu
local widget Dtu
local real Htu
local boolean Jtu
local boolean Ktu
local attacktype Ltu
local damagetype Xtu
local weapontype Ctu
local effect Vtu
local widget Btu
local string Ntu
local string Mtu
local boolean wiu
if UnitAlive(Utu) then
set Itu=aQ[Ztu]
set Ptu=$42303831
set wiu=GetUnitAbilityLevel(Itu,Ptu)>0
else
set wiu=false
endif
if wiu then
set Atu=nQ[Ztu]
set Dtu=aQ[Ztu]
set Htu=125.+25.*dQ[Ztu]
set Jtu=true
set Ktu=false
set Ltu=ATTACK_TYPE_NORMAL
set Xtu=DAMAGE_TYPE_MAGIC
set Ctu=WEAPON_TYPE_WHOKNOWS
call UnitDamageTarget(Atu,Dtu,Htu,Jtu,Ktu,Ltu,Xtu,Ctu)
set Btu=aQ[Ztu]
set Ntu="Pillar of Flame Blue.mdl"
set Mtu="origin"
set Vtu=AddSpecialEffectTarget(Ntu,Btu,Mtu)
call DestroyEffect(Vtu)
endif
set Utu=null
set Itu=null
set Atu=null
set Dtu=null
set Ltu=null
set Xtu=null
set Ctu=null
set Vtu=null
set Btu=null
endfunction
function upw takes integer Uyw,string Iyw returns nothing
local unit Pyw
local integer Ayw
local unit Dyw
local real Hyw
local unit Jyw
local integer Kyw
local unit Lyw
local integer Xyw
local integer Cyw
local string Vyw
local integer Byw
local real Nyw
local integer Myw
local string wpw
set aW[qW]=Iyw
set qW=qW+1
set Pyw=CreateUnit(ov[Uyw],$75303030,Ov[Uyw],lv[Uyw],GetUnitFacing(bv[Uyw])+10.)
set Dyw=Pyw
set Hyw=5.
call UnitApplyTimedLife(Dyw,$42544C46,Hyw)
set Jyw=Pyw
set Kyw=$4132374A
call UnitAddAbility(Jyw,Kyw)
set Lyw=Pyw
set Xyw=$4132374A
set Cyw=yv[Uyw]
call SetUnitAbilityLevel(Lyw,Xyw,Cyw)
call IssuePointOrder(Pyw,"carrionswarm",pv[Uyw]+10.,ev[Uyw]+10.)
set Vyw="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_JainaProudmooreK in JainaProudmooreK, line 541"
set aW[qW]=Vyw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Byw=fF
set RF[Byw]=785
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_JainaProudmooreK.","when calling error in JainaProudmooreK, line 541")
set Byw=0
endif
else
set dF=dF-1
set Byw=nF[dF]
set RF[Byw]=785
endif
set qW=qW-1
set Ayw=Byw
set qv[Ayw]=ov[Uyw]
set av[Ayw]=Ov[Uyw]
set nv[Ayw]=lv[Uyw]
set dv[Ayw]=bv[Uyw]
set fv[Ayw]=yv[Uyw]
set Rv[Ayw]=pv[Uyw]
set Tv[Ayw]=ev[Uyw]
set Nyw=.3
set Myw=Ayw
set wpw="when calling doAfter in JainaProudmooreK, line 541"
set aW[qW]=wpw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Nyw,Myw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set Pyw=null
set Dyw=null
set Jyw=null
set Lyw=null
endfunction
function vTr takes integer JRr,string KRr returns nothing
local integer LRr
local unit XRr
local integer CRr
local unit VRr
local integer BRr
local unit NRr
local integer MRr
local unit wTr
local integer uTr
local unit rTr
local integer sTr
local unit tTr
local integer iTr
local unit STr
local integer cTr
local unit oTr
local integer OTr
local unit lTr
local integer bTr
local unit yTr
local integer pTr
local integer eTr
local unit qTr
local integer aTr
local unit nTr
local integer dTr
local integer fTr
local unit RTr
local integer TTr
local unit YTr
local integer GTr
local unit gTr
local string hTr
local integer FTr
local real kTr
local integer jTr
local string xTr
set aW[qW]=KRr
set qW=qW+1
set ul=CreateUnit(Hk[JRr],$55303142,Jk[JRr],Kk[JRr],GetUnitFacing(Lk[JRr]))
call SetHeroLevel(ul,28,true)
set XRr=ul
set CRr=$41323953
call UnitAddAbility(XRr,CRr)
set VRr=ul
set BRr=$4132394A
call UnitAddAbility(VRr,BRr)
set NRr=ul
set MRr=$4132394B
call UnitAddAbility(NRr,MRr)
set wTr=ul
set uTr=$4132394C
call UnitAddAbility(wTr,uTr)
set rTr=ul
set sTr=$4132394E
call UnitAddAbility(rTr,sTr)
set tTr=ul
set iTr=$4132394D
call UnitAddAbility(tTr,iTr)
set STr=ul
set cTr=$4132394F
call UnitAddAbility(STr,cTr)
set oTr=ul
set OTr=$41323950
call UnitAddAbility(oTr,OTr)
set lTr=ul
set bTr=$41323954
call UnitAddAbility(lTr,bTr)
set yTr=ul
set pTr=$41323954
set eTr=7
call SetUnitAbilityLevel(yTr,pTr,eTr)
set qTr=ul
set aTr=$41323955
call UnitAddAbility(qTr,aTr)
set nTr=ul
set dTr=$41323955
set fTr=7
call SetUnitAbilityLevel(nTr,dTr,fTr)
set RTr=ul
set TTr=$494D306F
call UnitAddItemById(RTr,TTr)
call dYr(ul)
set YTr=wl
set GTr=$41323855
call UnitRemoveAbility(YTr,GTr)
set gTr=wl
call DisplayTextToPlayer(GetOwningPlayer(gTr),0.,0.,"You have summoned Bonelord! You have to wait for a while until the Bonelord can be summoned again")
set il=600
set hTr="when calling alloc_CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 3059"
set aW[qW]=hTr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set FTr=fF
set RF[FTr]=782
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 3059")
set FTr=0
endif
else
set dF=dF-1
set FTr=nF[dF]
set RF[FTr]=782
endif
set qW=qW-1
set LRr=FTr
set kTr=600.
set jTr=LRr
set xTr="when calling doAfter in ArmyOfSkeletons, line 3059"
set aW[qW]=xTr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),kTr,jTr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set XRr=null
set VRr=null
set NRr=null
set wTr=null
set rTr=null
set tTr=null
set STr=null
set oTr=null
set lTr=null
set yTr=null
set qTr=null
set nTr=null
set RTr=null
set YTr=null
set gTr=null
endfunction
function vWp takes integer dWp returns nothing
local unit RWp=ex[dWp]
local integer TWp=$41313855
local timer fWp
local unit YWp
local integer GWp
local unit gWp
local integer hWp
local unit FWp
local integer kWp
local unit jWp
local integer xWp
if GetUnitAbilityLevel(RWp,TWp)==1 then
set YWp=ex[dWp]
set GWp=$41313855
call UnitRemoveAbility(YWp,GWp)
set gWp=ex[dWp]
set hWp=$41313856
call UnitAddAbility(gWp,hWp)
set FWp=ex[dWp]
set kWp=$41313859
call UnitAddAbility(FWp,kWp)
set jWp=ex[dWp]
set xWp=$4131385A
call UnitAddAbility(jWp,xWp)
set fWp=CreateTimer()
call SaveUnitHandle(qu,GetHandleId(fWp),$556E6974,ex[dWp])
call TimerStart(fWp,20.,false,qtw)
endif
set fWp=null
set RWp=null
set YWp=null
set gWp=null
set FWp=null
set jWp=null
endfunction
function xGw takes integer aGw,string nGw returns nothing
local integer dGw
local integer fGw
local string RGw
local integer TGw
local string YGw
local integer GGw
local integer gGw
local string hGw
local real FGw
local player kGw
local unit jGw
set aW[qW]=nGw
set qW=qW+1
if mj[aGw]!=$52303631 then
set fGw=lp
set RGw="when calling shuffle in DragonForge, line 742"
set aW[qW]=RGw
set qW=qW+1
if ok[fGw]==0 then
if fGw==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(fGw,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set TGw=lp
set YGw="when calling getFirst in DragonForge, line 743"
set aW[qW]=YGw
set qW=qW+1
if ok[TGw]==0 then
if TGw==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set gGw=TGw
set GGw=Hv[Kv[Vv[gGw]]]
set qW=qW-1
set dGw=GGw
if dGw==$5230355A then
set bp="4 lvls Melting Armour"
endif
if dGw==$52303633 then
set bp="4 lvls Enkindling"
endif
if dGw==$52303630 then
set bp="4 lvls Pride"
endif
if dGw==$52303634 then
set bp="4 lvls Dragon's Blood"
endif
if dGw==$52303558 then
set bp="4 lvls Stalker"
endif
if dGw==$52303632 then
set bp="4 lvls Dancing Fire"
endif
call SetPlayerTechResearched(Qj[aGw],dGw,1)
set hGw=bp
set FGw=10.
set jGw=Ly
set kGw=GetOwningPlayer(jGw)
call DisplayTimedTextToPlayer(kGw,0.,0.,FGw,hGw)
set bp=null
endif
set qW=qW-1
set kGw=null
set jGw=null
endfunction
function xVc takes integer GVc returns nothing
local unit gVc=JQ[GVc]
local integer hVc=851976
local player FVc
local player kVc
local texttag jVc
call IssueImmediateOrderById(gVc,hVc)
set Nu=Nu-1
set FVc=Gu
set kVc=Gu
set wr[GetPlayerId(FVc)]=wr[GetPlayerId(kVc)]+1
set jVc=Mu
call DestroyTextTag(jVc)
set gVc=null
set FVc=null
set kVc=null
set jVc=null
endfunction
function xXt takes integer GXt returns nothing
local integer gXt
local integer hXt
local player FXt
local location kXt
local real jXt
call DestroyEffect(ij[GXt])
set gXt=2
set hXt=$7830307D
set FXt=GetOwningPlayer(Sj[GXt])
set kXt=GetUnitLoc(Sj[GXt])
set jXt=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set gXt=gXt-1
exitwhen gXt<0
call CreateUnitAtLocSaveLast(FXt,hXt,kXt,jXt)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set FXt=null
set kXt=null
endfunction
function ygc takes integer NGc returns nothing
local group MGc=CreateGroup()
local unit igc=FQ[NGc]
local real wgc=GetUnitX(igc)
local unit Sgc=FQ[NGc]
local real ugc=GetUnitY(Sgc)
local filterfunc rgc=Filter(atw)
local unit sgc
local group tgc
local group cgc
local group ogc
local unit Ogc
local group lgc
local boolexpr bgc
call GroupEnumUnitsInRange(MGc,wgc,ugc,350.,rgc)
set tgc=MGc
loop
set cgc=tgc
exitwhen not (FirstOfGroup(cgc)!=null)
set ogc=tgc
set Ogc=FirstOfGroup(ogc)
call GroupRemoveUnit(ogc,Ogc)
set sgc=Ogc
call UnitDamageTarget(FQ[NGc],sgc,I2R(150+25*kQ[NGc]),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_ENHANCED,WEAPON_TYPE_WHOKNOWS)
endloop
call DestroyEffect(AddSpecialEffect("Singularity I Red.mdl",wgc,ugc))
set lgc=MGc
call DestroyGroup(lgc)
set bgc=rgc
call DestroyBoolExpr(bgc)
set ag=null
set MGc=null
set rgc=null
set sgc=null
set tgc=null
set igc=null
set Sgc=null
set cgc=null
set ogc=null
set Ogc=null
set lgc=null
set bgc=null
endfunction
function Voe takes integer W0e,string E0e returns nothing
local integer Z0e
local unit U0e
local integer I0e
local integer P0e
local trigger A0e
local integer D0e
local unit H0e
local integer J0e
local integer K0e
local integer L0e
local integer X0e
local integer C0e
local integer V0e
local integer B0e
local integer N0e
local integer M0e
local integer w_e
local integer u_e
local integer r_e
local integer s_e
local integer t_e
local trigger i_e
local integer S_e
local unit c_e
local integer o_e
local integer O_e
local unit l_e
local integer b_e
local unit y_e
local integer p_e
local unit e_e
local integer q_e
local integer a_e
local unit n_e
local integer d_e
local integer f_e
local unit R_e
local integer T_e
local trigger Y_e
local integer G_e
local unit g_e
local integer h_e
local unit F_e
local integer k_e
local integer j_e
local unit x_e
local integer v_e
local unit m_e
local integer Q_e
local integer W_e
local unit E_e
local integer Z_e
local integer U_e
local trigger I_e
local integer P_e
local unit A_e
local integer D_e
local integer H_e
local trigger J_e
local integer K_e
local trigger L_e
local integer X_e
local unit C_e
local integer V_e
local integer B_e
local unit N_e
local integer M_e
local string wwe
local integer uwe
local integer rwe
local integer swe
local string twe
local integer iwe
local integer Swe
local integer cwe
local string owe
local integer Owe
local integer lwe
local integer bwe
local string ywe
local integer pwe
local integer ewe
local integer qwe
local string awe
local integer nwe
local integer dwe
local integer fwe
local string Rwe
local integer Twe
local integer Ywe
local integer Gwe
local string gwe
local integer hwe
local integer Fwe
local integer kwe
local string jwe
local integer xwe
local integer vwe
local integer mwe
local string Qwe
local integer Wwe
local integer Ewe
local integer Zwe
local string Uwe
local integer Iwe
local integer Pwe
local integer Awe
local string Dwe
local integer Hwe
local integer Jwe
local integer Kwe
local string Lwe
local integer Xwe
local integer Cwe
local integer Vwe
local string Bwe
local integer Nwe
local integer Mwe
local integer wue
local string uue
local integer rue
local integer sue
local integer tue
local string iue
local integer Sue
local integer cue
local integer oue
local string Oue
local integer lue
local integer bue
local integer yue
local string pue
local integer eue
local integer que
local integer aue
local string nue
local integer due
local integer fue
local integer Rue
local string Tue
local integer Yue
local integer Gue
local integer gue
local string hue
local integer Fue
local integer kue
local integer jue
local string xue
local integer vue
local integer mue
local integer Que
local string Wue
local integer Eue
local integer Zue
local integer Uue
local string Iue
local integer Pue
local integer Aue
local integer Due
local string Hue
local integer Jue
local integer Kue
local integer Lue
local string Xue
local integer Cue
local integer Vue
local integer Bue
local string Nue
local integer Mue
local integer wre
local integer ure
local string rre
local integer sre
local integer tre
local integer ire
local string Sre
local integer cre
local integer ore
local integer Ore
local string lre
local integer bre
local integer yre
local integer pre
local string ere
local integer qre
local integer are
local integer nre
local string dre
local integer fre
local integer Rre
local integer Tre
local string Yre
local integer Gre
local integer gre
local integer hre
local string Fre
local integer kre
local integer jre
local integer xre
local string vre
local integer mre
local integer Qre
local integer Wre
local string Ere
local integer Zre
local integer Ure
local integer Ire
local string Pre
local integer Are
local integer Dre
local integer Hre
local string Jre
local integer Kre
local integer Lre
local integer Xre
local string Cre
local integer Vre
local integer Bre
local integer Nre
local string Mre
local integer wse
local integer rse
local integer sse
local string tse
local integer ise
local integer Sse
local integer cse
local string ose
local integer Ose
local integer lse
local integer bse
local string yse
local integer pse
local unit ese
local integer qse
local integer ase
local trigger nse
local integer dse
local trigger fse
local integer Rse
local unit Tse
local integer Yse
local unit Gse
local integer gse
local integer hse
local unit Fse
local integer kse
local unit jse
local integer xse
local integer vse
local unit mse
local integer Qse
local integer Wse
local unit Ese
local integer Zse
local unit Use
local integer Ise
local integer Pse
local integer Ase
local unit Dse
local integer Hse
local integer Jse
local unit Kse
local integer Lse
local unit Xse
local integer Cse
local integer Vse
local trigger Bse
local integer Nse
local unit Mse
local integer wte
local integer ute
local trigger rte
local integer ste
local trigger tte
local integer ite
local trigger Ste
local integer cte
local trigger ote
local integer Ote
local trigger lte
local integer bte
local trigger yte
local integer pte
local trigger ete
local integer qte
local trigger ate
local integer nte
local unit dte
local integer fte
local integer Rte
local unit Tte
local integer Yte
local integer Gte
local trigger gte
local integer hte
local trigger Fte
local integer kte
local unit jte
local integer xte
local integer vte
local trigger mte
local integer Qte
local unit Wte
local integer Ete
local integer Zte
local unit Ute
local integer Ite
local integer Pte
local unit Ate
local integer Dte
local integer Hte
local unit Jte
local integer Kte
local unit Lte
local integer Xte
local integer Cte
local unit Vte
local integer Bte
local unit Nte
local integer Mte
local integer wie
local unit uie
local integer rie
local unit sie
local integer tie
local integer iie
local trigger Sie
local integer cie
local unit oie
local integer Oie
local unit lie
local integer bie
local integer yie
local integer pie
local unit eie
local integer qie
local integer aie
local unit nie
local string die
local integer fie
local unit Rie
local integer Tie
local integer Yie
local group Gie
local unit gie
local integer hie
local group Fie
local unit kie
local unit jie
local integer xie
local unit vie
local integer mie
local unit Qie
local integer Wie
local unit Eie
local integer Zie
local unit Uie
local integer Iie
local unit Pie
local integer Aie
local unit Die
local integer Hie
local unit Jie
local integer Kie
local unit Lie
local integer Xie
local unit Cie
local integer Vie
local unit Bie
local integer Nie
local unit Mie
local integer wSe
local integer uSe
local unit rSe
local unit sSe
local integer tSe
local integer iSe
local unit SSe
local integer cSe
local unit oSe
local integer OSe
local integer lSe
local unit bSe
local integer ySe
local integer pSe
local effect eSe
local unit qSe
local integer aSe
local integer nSe
local unit dSe
local integer fSe
local integer RSe
local unit TSe
local integer YSe
local integer GSe
local unit gSe
local integer hSe
local integer FSe
local unit kSe
local integer jSe
local integer xSe
local unit vSe
local integer mSe
local integer QSe
local unit WSe
local integer ESe
local integer ZSe
local effect USe
local unit ISe
local integer PSe
local integer ASe
local effect DSe
local unit HSe
local integer JSe
local integer KSe
local unit LSe
local integer XSe
local integer CSe
local unit VSe
local integer BSe
local unit NSe
local integer MSe
local unit wce
local integer uce
local unit rce
local integer sce
local unit tce
local integer ice
local unit Sce
local integer cce
local unit oce
local integer Oce
local unit lce
local integer bce
local unit yce
local integer pce
local unit ece
local integer qce
local integer ace
local unit nce
local integer dce
local integer fce
local player Rce
local integer Tce
local integer Yce
local integer Gce
local widget gce
local real hce
local real Fce
local integer kce
local player jce
local integer xce
local integer vce
local integer mce
local widget Qce
local real Wce
local real Ece
local integer Zce
local unit Uce
local integer Ice
local integer Pce
local unit Ace
local integer Dce
local unit Hce
local integer Jce
local integer Kce
local unit Lce
local integer Xce
local integer Cce
local group Vce
local unit Bce
local unit Nce
local integer Mce
local unit woe
local integer uoe
local unit roe
local integer soe
local unit toe
local integer ioe
local unit Soe
local integer coe
local unit ooe
local integer Ooe
local unit loe
local integer boe
local unit yoe
local integer poe
local unit eoe
local integer qoe
local unit aoe
local integer noe
local unit doe
local integer foe
local unit Roe
local integer Toe
local unit Yoe
local integer Goe
local unit goe
local integer hoe
local integer Foe
local unit koe
local integer joe
local unit xoe
local integer voe
local string moe
local string Qoe
local player Woe
local integer Eoe
local integer Zoe
local integer Uoe
local widget Ioe
local player Poe
local integer Aoe
local integer Doe
local integer Hoe
local widget Joe
local real Koe
local real Loe
local real Xoe
local real Coe
set aW[qW]=E0e
set qW=qW+1
if RF[W0e]==0 then
if W0e==0 then
call L8c("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 109")
else
call L8c("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 109")
endif
endif
if RF[W0e]<=765 then
if RF[W0e]<=723 then
if RF[W0e]<=702 then
if RF[W0e]<=691 then
if RF[W0e]<=686 then
if RF[W0e]<=683 then
if RF[W0e]<=682 then
if RF[W0e]<=681 then
call NVu(W0e,"when calling call_doAfter_AllPickRace in ClosureTimers, line 109")
else
set Z0e=W0e
set U0e=uj[Z0e]
set I0e=$414D3033
call UnitRemoveAbility(U0e,I0e)
endif
else
set P0e=W0e
set A0e=rj[P0e]
call EnableTrigger(A0e)
endif
elseif RF[W0e]<=685 then
if RF[W0e]<=684 then
set D0e=W0e
set H0e=tj[D0e]
set J0e=$414D3033
call UnitRemoveAbility(H0e,J0e)
else
call xXt(W0e)
endif
else
set K0e=W0e
call SetUnitAcquireRange(q[oj[K0e]],600.)
endif
elseif RF[W0e]<=689 then
if RF[W0e]<=688 then
if RF[W0e]<=687 then
set L0e=W0e
call SetUnitAcquireRange(q[Oj[L0e]],600.)
else
set X0e=W0e
call SetUnitAcquireRange(a[lj[X0e]],600.)
endif
else
set C0e=W0e
call SetUnitAcquireRange(a[bj[C0e]],600.)
endif
elseif RF[W0e]<=690 then
set V0e=W0e
call SetUnitAcquireRange(n[yj[V0e]],600.)
else
set B0e=W0e
call SetUnitAcquireRange(n[pj[B0e]],600.)
endif
elseif RF[W0e]<=697 then
if RF[W0e]<=694 then
if RF[W0e]<=693 then
if RF[W0e]<=692 then
set N0e=W0e
call SetUnitAcquireRange(d[ej[N0e]],600.)
else
set M0e=W0e
call SetUnitAcquireRange(d[qj[M0e]],600.)
endif
else
set Qb=Qb+50
endif
elseif RF[W0e]<=696 then
if RF[W0e]<=695 then
set Qb=Qb*2
else
set Qb=Qb/2
set w_e=Qb
set u_e=250
if w_e!=u_e then
set r_e=u_e
set Qoe="Expected <"+I2S(r_e)+">, Actual <"
set s_e=w_e
call tbl(Qoe+I2S(s_e)+">")
endif
endif
else
call TUw(W0e)
endif
elseif RF[W0e]<=700 then
if RF[W0e]<=699 then
if RF[W0e]<=698 then
set t_e=W0e
set i_e=dj[t_e]
call EnableTrigger(i_e)
else
set S_e=W0e
set c_e=Tj[S_e]
set o_e=$414D6231
call UnitRemoveAbility(c_e,o_e)
endif
else
call d9l(W0e)
endif
elseif RF[W0e]<=701 then
set O_e=W0e
set l_e=Gj[O_e]
set b_e=$414D6335
call UnitRemoveAbility(l_e,b_e)
set y_e=Gj[O_e]
set p_e=$506F5372
call UnitRemoveAbility(y_e,p_e)
set e_e=Gj[O_e]
set q_e=$41303136
call UnitAddAbility(e_e,q_e)
else
set a_e=W0e
set n_e=hj[a_e]
set d_e=$41305649
call UnitRemoveAbility(n_e,d_e)
endif
elseif RF[W0e]<=713 then
if RF[W0e]<=708 then
if RF[W0e]<=705 then
if RF[W0e]<=704 then
if RF[W0e]<=703 then
set f_e=W0e
set R_e=o[Fj[f_e]]
set T_e=mY[Fj[f_e]]
call UnitAddAbility(R_e,T_e)
else
set Y_e=xy
call EnableTrigger(Y_e)
endif
else
set G_e=W0e
set g_e=xj[G_e]
set h_e=$494D306F
if RTS(g_e,h_e)!=null==false then
set F_e=xj[G_e]
set k_e=$494D306F
call UnitAddItemById(F_e,k_e)
endif
endif
elseif RF[W0e]<=707 then
if RF[W0e]<=706 then
set j_e=W0e
set x_e=vj[j_e]
set v_e=$494D306F
if RTS(x_e,v_e)!=null==false then
set m_e=vj[j_e]
set Q_e=$494D306F
call UnitAddItemById(m_e,Q_e)
endif
else
call xGw(W0e,"when calling call_doAfter_DragonForge in ClosureTimers, line 109")
endif
else
call CRt(W0e,"when calling call_doAfter_DummyCaster_DummyCaster in ClosureTimers, line 109")
endif
elseif RF[W0e]<=711 then
if RF[W0e]<=710 then
if RF[W0e]<=709 then
set W_e=W0e
set E_e=cx[W_e]
set Z_e=$414D3033
call UnitRemoveAbility(E_e,Z_e)
else
call iit(W0e)
endif
else
call k_l(W0e)
endif
elseif RF[W0e]<=712 then
call vWp(W0e)
else
set U_e=W0e
set I_e=vx[U_e]
call EnableTrigger(I_e)
endif
elseif RF[W0e]<=718 then
if RF[W0e]<=716 then
if RF[W0e]<=715 then
if RF[W0e]<=714 then
call rvi(W0e)
else
set P_e=W0e
set A_e=Jx[P_e]
set D_e=$414D3135
call UnitRemoveAbility(A_e,D_e)
endif
else
set H_e=W0e
set J_e=Vx[H_e]
call EnableTrigger(J_e)
endif
elseif RF[W0e]<=717 then
set K_e=W0e
set L_e=Bx[K_e]
call EnableTrigger(L_e)
else
set X_e=W0e
set C_e=uv[X_e]
set V_e=$414D3365
call UnitRemoveAbility(C_e,V_e)
endif
elseif RF[W0e]<=721 then
if RF[W0e]<=720 then
if RF[W0e]<=719 then
set B_e=W0e
set N_e=rv[B_e]
set M_e=$414D3365
call UnitRemoveAbility(N_e,M_e)
else
call UnitShareVision(G[1],Tu,true)
call UnitShareVision(G[2],Tu,true)
call UnitShareVision(G[7],Tu,true)
call UnitShareVision(G[8],Tu,true)
call UnitShareVision(G[3],Yu,true)
call UnitShareVision(G[4],Yu,true)
call UnitShareVision(G[5],Yu,true)
call UnitShareVision(G[6],Yu,true)
call UnitShareVision(G[5],Gu,true)
call UnitShareVision(G[6],Gu,true)
call UnitShareVision(G[7],Gu,true)
call UnitShareVision(G[8],Gu,true)
call UnitShareVision(G[1],gu,true)
call UnitShareVision(G[2],gu,true)
call UnitShareVision(G[3],gu,true)
call UnitShareVision(G[4],gu,true)
endif
else
set wwe="when calling call_doAfter_InventoryStore in ClosureTimers, line 109"
set aW[qW]=wwe
set qW=qW+1
set uwe=vn
set rwe=$49303045
set swe=$414D3868
set twe="when calling put in InventoryStore, line 14"
set aW[qW]=twe
set qW=qW+1
if KF[uwe]==0 then
if uwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(uwe,rwe,swe,"when calling put in HashMap, line 59")
set qW=qW-1
set iwe=vn
set Swe=$49303046
set cwe=$414D3869
set owe="when calling put in InventoryStore, line 15"
set aW[qW]=owe
set qW=qW+1
if KF[iwe]==0 then
if iwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(iwe,Swe,cwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Owe=vn
set lwe=$49303047
set bwe=$414D386A
set ywe="when calling put in InventoryStore, line 16"
set aW[qW]=ywe
set qW=qW+1
if KF[Owe]==0 then
if Owe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Owe,lwe,bwe,"when calling put in HashMap, line 59")
set qW=qW-1
set pwe=vn
set ewe=$494D3038
set qwe=$414D386B
set awe="when calling put in InventoryStore, line 17"
set aW[qW]=awe
set qW=qW+1
if KF[pwe]==0 then
if pwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(pwe,ewe,qwe,"when calling put in HashMap, line 59")
set qW=qW-1
set nwe=vn
set dwe=$49303048
set fwe=$414D3772
set Rwe="when calling put in InventoryStore, line 19"
set aW[qW]=Rwe
set qW=qW+1
if KF[nwe]==0 then
if nwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(nwe,dwe,fwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Twe=vn
set Ywe=$49303049
set Gwe=$414D3773
set gwe="when calling put in InventoryStore, line 20"
set aW[qW]=gwe
set qW=qW+1
if KF[Twe]==0 then
if Twe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Twe,Ywe,Gwe,"when calling put in HashMap, line 59")
set qW=qW-1
set hwe=vn
set Fwe=$4930304A
set kwe=$414D3774
set jwe="when calling put in InventoryStore, line 21"
set aW[qW]=jwe
set qW=qW+1
if KF[hwe]==0 then
if hwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(hwe,Fwe,kwe,"when calling put in HashMap, line 59")
set qW=qW-1
set xwe=vn
set vwe=$4930304B
set mwe=$414D3775
set Qwe="when calling put in InventoryStore, line 22"
set aW[qW]=Qwe
set qW=qW+1
if KF[xwe]==0 then
if xwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(xwe,vwe,mwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Wwe=vn
set Ewe=$494D3074
set Zwe=$414D3776
set Uwe="when calling put in InventoryStore, line 24"
set aW[qW]=Uwe
set qW=qW+1
if KF[Wwe]==0 then
if Wwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Wwe,Ewe,Zwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Iwe=vn
set Pwe=$494D3075
set Awe=$414D3777
set Dwe="when calling put in InventoryStore, line 25"
set aW[qW]=Dwe
set qW=qW+1
if KF[Iwe]==0 then
if Iwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Iwe,Pwe,Awe,"when calling put in HashMap, line 59")
set qW=qW-1
set Hwe=vn
set Jwe=$494D3076
set Kwe=$414D3778
set Lwe="when calling put in InventoryStore, line 26"
set aW[qW]=Lwe
set qW=qW+1
if KF[Hwe]==0 then
if Hwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Hwe,Jwe,Kwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Xwe=vn
set Cwe=$494D3077
set Vwe=$414D3779
set Bwe="when calling put in InventoryStore, line 27"
set aW[qW]=Bwe
set qW=qW+1
if KF[Xwe]==0 then
if Xwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Xwe,Cwe,Vwe,"when calling put in HashMap, line 59")
set qW=qW-1
set Nwe=vn
set Mwe=$494D3078
set wue=$414D377A
set uue="when calling put in InventoryStore, line 28"
set aW[qW]=uue
set qW=qW+1
if KF[Nwe]==0 then
if Nwe==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Nwe,Mwe,wue,"when calling put in HashMap, line 59")
set qW=qW-1
set rue=vn
set sue=$494D3079
set tue=$414D377B
set iue="when calling put in InventoryStore, line 29"
set aW[qW]=iue
set qW=qW+1
if KF[rue]==0 then
if rue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(rue,sue,tue,"when calling put in HashMap, line 59")
set qW=qW-1
set Sue=vn
set cue=$494D3066
set oue=$414D377C
set Oue="when calling put in InventoryStore, line 31"
set aW[qW]=Oue
set qW=qW+1
if KF[Sue]==0 then
if Sue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Sue,cue,oue,"when calling put in HashMap, line 59")
set qW=qW-1
set lue=vn
set bue=$494D3039
set yue=$414D377D
set pue="when calling put in InventoryStore, line 32"
set aW[qW]=pue
set qW=qW+1
if KF[lue]==0 then
if lue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(lue,bue,yue,"when calling put in HashMap, line 59")
set qW=qW-1
set eue=vn
set que=$494D3067
set aue=$414D377E
set nue="when calling put in InventoryStore, line 33"
set aW[qW]=nue
set qW=qW+1
if KF[eue]==0 then
if eue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(eue,que,aue,"when calling put in HashMap, line 59")
set qW=qW-1
set due=vn
set fue=$494D3068
set Rue=$414D3821
set Tue="when calling put in InventoryStore, line 34"
set aW[qW]=Tue
set qW=qW+1
if KF[due]==0 then
if due==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(due,fue,Rue,"when calling put in HashMap, line 59")
set qW=qW-1
set Yue=vn
set Gue=$494D3069
set gue=$414D3830
set hue="when calling put in InventoryStore, line 35"
set aW[qW]=hue
set qW=qW+1
if KF[Yue]==0 then
if Yue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Yue,Gue,gue,"when calling put in HashMap, line 59")
set qW=qW-1
set Fue=vn
set kue=$494D306A
set jue=$414D3831
set xue="when calling put in InventoryStore, line 36"
set aW[qW]=xue
set qW=qW+1
if KF[Fue]==0 then
if Fue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Fue,kue,jue,"when calling put in HashMap, line 59")
set qW=qW-1
set vue=vn
set mue=$494D306B
set Que=$414D3832
set Wue="when calling put in InventoryStore, line 37"
set aW[qW]=Wue
set qW=qW+1
if KF[vue]==0 then
if vue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(vue,mue,Que,"when calling put in HashMap, line 59")
set qW=qW-1
set Eue=vn
set Zue=$494D3061
set Uue=$414D3833
set Iue="when calling put in InventoryStore, line 38"
set aW[qW]=Iue
set qW=qW+1
if KF[Eue]==0 then
if Eue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Eue,Zue,Uue,"when calling put in HashMap, line 59")
set qW=qW-1
set Pue=vn
set Aue=$494D3062
set Due=$414D3834
set Hue="when calling put in InventoryStore, line 39"
set aW[qW]=Hue
set qW=qW+1
if KF[Pue]==0 then
if Pue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Pue,Aue,Due,"when calling put in HashMap, line 59")
set qW=qW-1
set Jue=vn
set Kue=$494D3063
set Lue=$414D3835
set Xue="when calling put in InventoryStore, line 40"
set aW[qW]=Xue
set qW=qW+1
if KF[Jue]==0 then
if Jue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Jue,Kue,Lue,"when calling put in HashMap, line 59")
set qW=qW-1
set Cue=vn
set Vue=$494D3064
set Bue=$414D3836
set Nue="when calling put in InventoryStore, line 41"
set aW[qW]=Nue
set qW=qW+1
if KF[Cue]==0 then
if Cue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Cue,Vue,Bue,"when calling put in HashMap, line 59")
set qW=qW-1
set Mue=vn
set wre=$494D306C
set ure=$414D3837
set rre="when calling put in InventoryStore, line 42"
set aW[qW]=rre
set qW=qW+1
if KF[Mue]==0 then
if Mue==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Mue,wre,ure,"when calling put in HashMap, line 59")
set qW=qW-1
set sre=vn
set tre=$494D306D
set ire=$414D3838
set Sre="when calling put in InventoryStore, line 43"
set aW[qW]=Sre
set qW=qW+1
if KF[sre]==0 then
if sre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(sre,tre,ire,"when calling put in HashMap, line 59")
set qW=qW-1
set cre=vn
set ore=$494D3065
set Ore=$414D3839
set lre="when calling put in InventoryStore, line 44"
set aW[qW]=lre
set qW=qW+1
if KF[cre]==0 then
if cre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(cre,ore,Ore,"when calling put in HashMap, line 59")
set qW=qW-1
set bre=vn
set yre=$494D3031
set pre=$414D3861
set ere="when calling put in InventoryStore, line 46"
set aW[qW]=ere
set qW=qW+1
if KF[bre]==0 then
if bre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(bre,yre,pre,"when calling put in HashMap, line 59")
set qW=qW-1
set qre=vn
set are=$494D3032
set nre=$414D3863
set dre="when calling put in InventoryStore, line 47"
set aW[qW]=dre
set qW=qW+1
if KF[qre]==0 then
if qre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(qre,are,nre,"when calling put in HashMap, line 59")
set qW=qW-1
set fre=vn
set Rre=$494D3033
set Tre=$414D3864
set Yre="when calling put in InventoryStore, line 48"
set aW[qW]=Yre
set qW=qW+1
if KF[fre]==0 then
if fre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(fre,Rre,Tre,"when calling put in HashMap, line 59")
set qW=qW-1
set Gre=vn
set gre=$494D3034
set hre=$414D3865
set Fre="when calling put in InventoryStore, line 49"
set aW[qW]=Fre
set qW=qW+1
if KF[Gre]==0 then
if Gre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Gre,gre,hre,"when calling put in HashMap, line 59")
set qW=qW-1
set kre=vn
set jre=$494D3035
set xre=$414D3866
set vre="when calling put in InventoryStore, line 50"
set aW[qW]=vre
set qW=qW+1
if KF[kre]==0 then
if kre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(kre,jre,xre,"when calling put in HashMap, line 59")
set qW=qW-1
set mre=vn
set Qre=$494D3036
set Wre=$414D3867
set Ere="when calling put in InventoryStore, line 51"
set aW[qW]=Ere
set qW=qW+1
if KF[mre]==0 then
if mre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(mre,Qre,Wre,"when calling put in HashMap, line 59")
set qW=qW-1
set Zre=vn
set Ure=$494D3037
set Ire=$414D3862
set Pre="when calling put in InventoryStore, line 52"
set aW[qW]=Pre
set qW=qW+1
if KF[Zre]==0 then
if Zre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Zre,Ure,Ire,"when calling put in HashMap, line 59")
set qW=qW-1
set Are=vn
set Dre=$49303030
set Hre=$414D386C
set Jre="when calling put in InventoryStore, line 54"
set aW[qW]=Jre
set qW=qW+1
if KF[Are]==0 then
if Are==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Are,Dre,Hre,"when calling put in HashMap, line 59")
set qW=qW-1
set Kre=vn
set Lre=$49303037
set Xre=$414D386D
set Cre="when calling put in InventoryStore, line 55"
set aW[qW]=Cre
set qW=qW+1
if KF[Kre]==0 then
if Kre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Kre,Lre,Xre,"when calling put in HashMap, line 59")
set qW=qW-1
set Vre=vn
set Bre=$49303032
set Nre=$414D386E
set Mre="when calling put in InventoryStore, line 56"
set aW[qW]=Mre
set qW=qW+1
if KF[Vre]==0 then
if Vre==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Vre,Bre,Nre,"when calling put in HashMap, line 59")
set qW=qW-1
set wse=vn
set rse=$49303033
set sse=$414D386F
set tse="when calling put in InventoryStore, line 57"
set aW[qW]=tse
set qW=qW+1
if KF[wse]==0 then
if wse==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(wse,rse,sse,"when calling put in HashMap, line 59")
set qW=qW-1
set ise=vn
set Sse=$49303036
set cse=$414D3870
set ose="when calling put in InventoryStore, line 58"
set aW[qW]=ose
set qW=qW+1
if KF[ise]==0 then
if ise==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(ise,Sse,cse,"when calling put in HashMap, line 59")
set qW=qW-1
set Ose=vn
set lse=$49303035
set bse=$414D3871
set yse="when calling put in InventoryStore, line 59"
set aW[qW]=yse
set qW=qW+1
if KF[Ose]==0 then
if Ose==0 then
call L8c("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call L8c("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call jPS(Ose,lse,bse,"when calling put in HashMap, line 59")
set qW=qW-1
set qW=qW-1
endif
elseif RF[W0e]<=722 then
set pse=W0e
set ese=cv[pse]
set qse=$414D3033
call UnitRemoveAbility(ese,qse)
else
call JUl(W0e,"when calling call_doAfter_Jinto in ClosureTimers, line 109")
endif
elseif RF[W0e]<=744 then
if RF[W0e]<=734 then
if RF[W0e]<=729 then
if RF[W0e]<=726 then
if RF[W0e]<=725 then
if RF[W0e]<=724 then
set ase=W0e
set nse=hv[ase]
call EnableTrigger(nse)
else
set dse=W0e
set fse=kv[dse]
call EnableTrigger(fse)
endif
else
call BGu(W0e)
endif
elseif RF[W0e]<=728 then
if RF[W0e]<=727 then
set Rse=W0e
set Tse=sm[Rse]
set Yse=$4130564B
call UnitRemoveAbility(Tse,Yse)
set Gse=sm[Rse]
set gse=$4130564C
call UnitRemoveAbility(Gse,gse)
else
set hse=W0e
set Fse=tm[hse]
set kse=$4130564C
if GetUnitAbilityLevel(Fse,kse)==0 then
set jse=tm[hse]
set xse=$4130564C
call UnitAddAbility(jse,xse)
endif
endif
else
set vse=W0e
set mse=Ym[vse]
set Qse=$41313559
call UnitRemoveAbility(mse,Qse)
endif
elseif RF[W0e]<=732 then
if RF[W0e]<=731 then
if RF[W0e]<=730 then
set Wse=W0e
set Ese=Gm[Wse]
set Zse=$4132314B
call UnitRemoveAbility(Ese,Zse)
set Use=Gm[Wse]
set Ise=$4132314C
set Pse=1
call SetUnitAbilityLevel(Use,Ise,Pse)
else
set Ase=W0e
set Dse=km[Ase]
set Hse=$4130584B
call UnitRemoveAbility(Dse,Hse)
endif
else
set Jse=W0e
set Kse=jm[Jse]
set Lse=$4132314E
call UnitRemoveAbility(Kse,Lse)
set Xse=jm[Jse]
set Cse=$4132314D
set Vse=1
call SetUnitAbilityLevel(Xse,Cse,Vse)
endif
elseif RF[W0e]<=733 then
set Bse=cf
call EnableTrigger(Bse)
else
set Nse=W0e
set Mse=xm[Nse]
set wte=$41414145
call UnitRemoveAbility(Mse,wte)
endif
elseif RF[W0e]<=739 then
if RF[W0e]<=737 then
if RF[W0e]<=736 then
if RF[W0e]<=735 then
set ute=W0e
set rte=vm[ute]
call EnableTrigger(rte)
else
set ste=W0e
set tte=mm[ste]
call EnableTrigger(tte)
endif
else
set ite=W0e
set Ste=Qm[ite]
call EnableTrigger(Ste)
endif
elseif RF[W0e]<=738 then
set cte=W0e
set ote=Wm[cte]
call EnableTrigger(ote)
else
set Ote=W0e
set lte=Em[Ote]
call EnableTrigger(lte)
endif
elseif RF[W0e]<=742 then
if RF[W0e]<=741 then
if RF[W0e]<=740 then
set bte=W0e
set yte=Zm[bte]
call EnableTrigger(yte)
else
set pte=W0e
set ete=Um[pte]
call EnableTrigger(ete)
endif
else
set qte=W0e
set ate=Im[qte]
call EnableTrigger(ate)
endif
elseif RF[W0e]<=743 then
call ool(W0e,"when calling call_doAfter_NewRandom in ClosureTimers, line 109")
else
call rDy()
endif
elseif RF[W0e]<=755 then
if RF[W0e]<=750 then
if RF[W0e]<=747 then
if RF[W0e]<=746 then
if RF[W0e]<=745 then
set nte=W0e
set dte=Hm[nte]
set fte=$41323630
call UnitRemoveAbility(dte,fte)
else
set Rte=W0e
set Tte=Km[Rte]
set Yte=$41323555
call UnitRemoveAbility(Tte,Yte)
endif
else
call ZWo(W0e,"when calling call_doAfter_Prediction in ClosureTimers, line 109")
endif
elseif RF[W0e]<=749 then
if RF[W0e]<=748 then
set Gte=W0e
set gte=uQ[Gte]
call EnableTrigger(gte)
else
set hte=W0e
set Fte=rQ[hte]
call EnableTrigger(Fte)
endif
else
set kte=W0e
set jte=sQ[kte]
set xte=$4131384F
call UnitRemoveAbility(jte,xte)
endif
elseif RF[W0e]<=753 then
if RF[W0e]<=752 then
if RF[W0e]<=751 then
set vte=W0e
set mte=tQ[vte]
call EnableTrigger(mte)
else
set Qte=W0e
set Wte=yQ[Qte]
set Ete=$4132374F
call UnitRemoveAbility(Wte,Ete)
endif
else
set Zte=W0e
set Ute=hQ[Zte]
set Ite=$414D3033
call UnitRemoveAbility(Ute,Ite)
endif
elseif RF[W0e]<=754 then
call ygc(W0e)
else
set Pte=W0e
set Ate=jQ[Pte]
set Dte=$414D3339
call UnitRemoveAbility(Ate,Dte)
endif
elseif RF[W0e]<=760 then
if RF[W0e]<=758 then
if RF[W0e]<=757 then
if RF[W0e]<=756 then
call rDy()
else
call KXl(W0e)
endif
else
call c7u(W0e)
endif
elseif RF[W0e]<=759 then
call a3w(W0e)
else
call YFi(W0e)
endif
elseif RF[W0e]<=763 then
if RF[W0e]<=762 then
if RF[W0e]<=761 then
call xVc(W0e)
else
call Sco(W0e)
endif
else
call Sqt(W0e,"when calling call_doAfter_UseCast in ClosureTimers, line 109")
endif
elseif RF[W0e]<=764 then
call lPs(W0e)
else
set Hte=W0e
set Jte=MQ[Hte]
set Kte=$49303244
if RTS(Jte,Kte)!=null==false then
set Lte=MQ[Hte]
set Xte=$49303244
call UnitAddItemById(Lte,Xte)
endif
endif
elseif RF[W0e]<=807 then
if RF[W0e]<=786 then
if RF[W0e]<=776 then
if RF[W0e]<=771 then
if RF[W0e]<=768 then
if RF[W0e]<=767 then
if RF[W0e]<=766 then
set Cte=W0e
set Vte=wW[Cte]
set Bte=$49303245
if RTS(Vte,Bte)!=null==false then
set Nte=wW[Cte]
set Mte=$49303245
call UnitAddItemById(Nte,Mte)
endif
else
set wie=W0e
set uie=uW[wie]
set rie=$49303246
if RTS(uie,rie)!=null==false then
set sie=uW[wie]
set tie=$49303246
call UnitAddItemById(sie,tie)
endif
endif
else
set iie=W0e
set Sie=yW[iie]
call EnableTrigger(Sie)
endif
elseif RF[W0e]<=770 then
if RF[W0e]<=769 then
call Odt(W0e,"when calling call_doAfter_doAfter_AllPickRace in ClosureTimers, line 109")
else
set cie=W0e
set oie=Gv[cie]
set Oie=$41305958
call UnitAddAbility(oie,Oie)
set lie=Gv[cie]
set bie=$41305958
set yie=gv[cie]
call SetUnitAbilityLevel(lie,bie,yie)
endif
else
call bIi(W0e,"when calling call_doAfter_doAfter_NewRandom in ClosureTimers, line 109")
endif
elseif RF[W0e]<=774 then
if RF[W0e]<=773 then
if RF[W0e]<=772 then
set pie=W0e
set eie=Xm[pie]
set qie=$4132314F
call UnitAddAbility(eie,qie)
else
set aie=W0e
set nie=VQ[aie]
set die="unbearform"
call IssueImmediateOrder(nie,die)
endif
else
call sUl(W0e,"when calling call_doAfter_doAfter_doAfter_AllPickRace in ClosureTimers, line 109")
endif
elseif RF[W0e]<=775 then
call WtS(W0e,"when calling call_doAfter_doAfter_doAfter_NewRandom in ClosureTimers, line 109")
else
call lee(W0e,"when calling call_doAfter_doAfter_doAfter_doAfter_NewRandom in ClosureTimers, line 109")
endif
elseif RF[W0e]<=781 then
if RF[W0e]<=779 then
if RF[W0e]<=778 then
if RF[W0e]<=777 then
call rDy()
else
call DMw(W0e)
endif
else
call K7s(W0e)
endif
elseif RF[W0e]<=780 then
call fel(W0e)
else
call B7S(W0e)
endif
elseif RF[W0e]<=784 then
if RF[W0e]<=783 then
if RF[W0e]<=782 then
call mlO(W0e)
else
set fie=W0e
set Rie=jj[fie]
set Tie=$41305A35
call UnitAddAbility(Rie,Tie)
endif
else
call bPS(W0e)
endif
elseif RF[W0e]<=785 then
call Tqe(W0e)
else
call gIy(W0e)
endif
elseif RF[W0e]<=797 then
if RF[W0e]<=792 then
if RF[W0e]<=789 then
if RF[W0e]<=788 then
if RF[W0e]<=787 then
call iEi(W0e)
else
call b5S(W0e,"when calling call_doAfter_doAfter_registerPlayerUnitEvent_ZulJin in ClosureTimers, line 109")
endif
else
set Yie=W0e
set Gie=sO
set gie=dk[Yie]
call GroupRemoveUnit(Gie,gie)
endif
elseif RF[W0e]<=791 then
if RF[W0e]<=790 then
set hie=W0e
set Fie=sO
set kie=Tk[hie]
call GroupRemoveUnit(Fie,kie)
else
set jie=fg
set xie=$414D6267
call UnitAddAbility(jie,xie)
set vie=fg
set mie=$414D6268
call UnitAddAbility(vie,mie)
endif
else
set Qie=fg
set Wie=$414D6267
call UnitAddAbility(Qie,Wie)
set Eie=fg
set Zie=$414D6266
call UnitAddAbility(Eie,Zie)
endif
elseif RF[W0e]<=795 then
if RF[W0e]<=794 then
if RF[W0e]<=793 then
set Uie=fg
set Iie=$41313434
call UnitAddAbility(Uie,Iie)
set Pie=fg
set Aie=$414D626B
call UnitAddAbility(Pie,Aie)
else
set Die=fg
set Hie=$41305657
call UnitAddAbility(Die,Hie)
set Jie=fg
set Kie=$414D626C
call UnitAddAbility(Jie,Kie)
endif
else
set Lie=fg
set Xie=$414D6269
call UnitAddAbility(Lie,Xie)
set Cie=fg
set Vie=$414D626B
call UnitAddAbility(Cie,Vie)
endif
elseif RF[W0e]<=796 then
set Bie=fg
set Nie=$414D626D
call UnitAddAbility(Bie,Nie)
set Mie=fg
set wSe=$414D626F
call UnitAddAbility(Mie,wSe)
else
set uSe=W0e
set rSe=OQ[uSe]
if UnitAlive(rSe) then
set sSe=OQ[uSe]
set tSe=$414D327D
call UnitRemoveAbility(sSe,tSe)
endif
endif
elseif RF[W0e]<=802 then
if RF[W0e]<=800 then
if RF[W0e]<=799 then
if RF[W0e]<=798 then
call c9b(W0e,"when calling call_doAfter_registerPlayerUnitEvent_AltarGold in ClosureTimers, line 109")
else
set iSe=W0e
set SSe=Qk[iSe]
set cSe=$41323343
call UnitRemoveAbility(SSe,cSe)
set oSe=Qk[iSe]
set OSe=$41323344
call UnitRemoveAbility(oSe,OSe)
endif
else
call OFp(W0e,"when calling call_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ClosureTimers, line 109")
endif
elseif RF[W0e]<=801 then
call U0u(W0e,"when calling call_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ClosureTimers, line 109")
else
call vTr(W0e,"when calling call_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ClosureTimers, line 109")
endif
elseif RF[W0e]<=805 then
if RF[W0e]<=804 then
if RF[W0e]<=803 then
set lSe=W0e
set bSe=wj[lSe]
set ySe=$426C476C
call UnitRemoveAbility(bSe,ySe)
else
set pSe=W0e
set eSe=cj[pSe]
call DestroyEffect(eSe)
endif
else
call lcc(W0e)
endif
elseif RF[W0e]<=806 then
set qSe=iy
set aSe=$41314936
call UnitRemoveAbility(qSe,aSe)
else
set nSe=W0e
set dSe=gj[nSe]
set fSe=$414D3033
call UnitRemoveAbility(dSe,fSe)
endif
elseif RF[W0e]<=828 then
if RF[W0e]<=818 then
if RF[W0e]<=813 then
if RF[W0e]<=810 then
if RF[W0e]<=809 then
if RF[W0e]<=808 then
call BKu(W0e,"when calling call_doAfter_registerPlayerUnitEvent_DraconidRangeBonus in ClosureTimers, line 109")
else
call pmw(W0e)
endif
else
set RSe=W0e
set TSe=Vj[RSe]
set YSe=$41323443
call UnitRemoveAbility(TSe,YSe)
endif
elseif RF[W0e]<=812 then
if RF[W0e]<=811 then
set GSe=W0e
set gSe=Bj[GSe]
set hSe=$41323444
call UnitRemoveAbility(gSe,hSe)
else
set FSe=W0e
set kSe=Sx[FSe]
set jSe=$41323445
call UnitRemoveAbility(kSe,jSe)
endif
else
set xSe=W0e
set vSe=Ox[xSe]
set mSe=$4131354D
call UnitRemoveAbility(vSe,mSe)
endif
elseif RF[W0e]<=816 then
if RF[W0e]<=815 then
if RF[W0e]<=814 then
call qFi(W0e)
else
call ghl(W0e,"when calling call_doAfter_registerPlayerUnitEvent_GuffRunetotem in ClosureTimers, line 109")
endif
else
set QSe=W0e
set WSe=Ux[QSe]
set ESe=$4130594F
call UnitRemoveAbility(WSe,ESe)
endif
elseif RF[W0e]<=817 then
set ZSe=W0e
set USe=va
call DestroyEffect(USe)
set ISe=Kx[ZSe]
set PSe=$414D3263
call UnitRemoveAbility(ISe,PSe)
set xa=0
else
set ASe=W0e
set DSe=va
call DestroyEffect(DSe)
set va=null
set HSe=Lx[ASe]
set JSe=$414D3263
call UnitRemoveAbility(HSe,JSe)
endif
elseif RF[W0e]<=823 then
if RF[W0e]<=821 then
if RF[W0e]<=820 then
if RF[W0e]<=819 then
set KSe=W0e
set LSe=iv[KSe]
set XSe=$414D3033
call UnitRemoveAbility(LSe,XSe)
else
call upw(W0e,"when calling call_doAfter_registerPlayerUnitEvent_JainaProudmooreK in ClosureTimers, line 109")
endif
else
set CSe=W0e
if jv[CSe]==0 then
set VSe=xv[CSe]
set BSe=$41323333
call UnitRemoveAbility(VSe,BSe)
elseif jv[CSe]==1 then
set NSe=xv[CSe]
set MSe=$41323333
call UnitRemoveAbility(NSe,MSe)
set wce=xv[CSe]
set uce=$41323334
call UnitRemoveAbility(wce,uce)
elseif jv[CSe]==2 then
set rce=xv[CSe]
set sce=$41323333
call UnitRemoveAbility(rce,sce)
set tce=xv[CSe]
set ice=$41323334
call UnitRemoveAbility(tce,ice)
set Sce=xv[CSe]
set cce=$41323335
call UnitRemoveAbility(Sce,cce)
else
set oce=xv[CSe]
set Oce=$41323333
call UnitRemoveAbility(oce,Oce)
set lce=xv[CSe]
set bce=$41323334
call UnitRemoveAbility(lce,bce)
set yce=xv[CSe]
set pce=$41323335
call UnitRemoveAbility(yce,pce)
set ece=xv[CSe]
set qce=$41323336
call UnitRemoveAbility(ece,qce)
endif
endif
elseif RF[W0e]<=822 then
set ace=W0e
set nce=vv[ace]
set dce=$414D3033
call UnitRemoveAbility(nce,dce)
else
set fce=W0e
set Rce=mv[fce]
set Tce=$414D637C
set Yce=3
set Gce=852119
set gce=Qv[fce]
set Woe=Rce
set Eoe=Tce
set Zoe=Yce
set Uoe=Gce
set Ioe=gce
set Koe=GetWidgetX(gce)
set Loe=GetWidgetY(gce)
set hce=Koe
set Fce=Loe
call I9S(Woe,Eoe,Zoe,Uoe,Ioe,hce,Fce,0.)
endif
elseif RF[W0e]<=826 then
if RF[W0e]<=825 then
if RF[W0e]<=824 then
set kce=W0e
set jce=Wv[kce]
set xce=$41323648
set vce=3
set mce=852119
set Qce=Ev[kce]
set Poe=jce
set Aoe=xce
set Doe=vce
set Hoe=mce
set Joe=Qce
set Xoe=GetWidgetX(Qce)
set Coe=GetWidgetY(Qce)
set Wce=Xoe
set Ece=Coe
call I9S(Poe,Aoe,Doe,Hoe,Joe,Wce,Ece,0.)
else
call fVr(W0e)
endif
else
call VUy(W0e)
endif
elseif RF[W0e]<=827 then
call Uqp(W0e)
else
call QZy(W0e,"when calling call_doAfter_registerPlayerUnitEvent_Malorne in ClosureTimers, line 109")
endif
elseif RF[W0e]<=839 then
if RF[W0e]<=834 then
if RF[W0e]<=831 then
if RF[W0e]<=830 then
if RF[W0e]<=829 then
set Zce=W0e
set Uce=Jm[Zce]
set Ice=$41313131
call UnitRemoveAbility(Uce,Ice)
else
set Pce=W0e
set Ace=wQ[Pce]
set Dce=$41706976
call UnitAddAbility(Ace,Dce)
set Hce=wQ[Pce]
set Jce=$41304A31
call UnitAddAbility(Hce,Jce)
endif
else
set Kce=W0e
set Lce=iQ[Kce]
set Xce=$414D3033
call UnitRemoveAbility(Lce,Xce)
endif
elseif RF[W0e]<=833 then
if RF[W0e]<=832 then
set Cce=W0e
set Vce=sg
set Bce=lQ[Cce]
call GroupRemoveUnit(Vce,Bce)
else
call m0l(W0e)
endif
else
call uiu(W0e)
endif
elseif RF[W0e]<=837 then
if RF[W0e]<=836 then
if RF[W0e]<=835 then
call NXt(W0e)
else
call BQi(W0e)
endif
else
set Nce=Rg
set Mce=$41305231
call UnitRemoveAbility(Nce,Mce)
endif
elseif RF[W0e]<=838 then
set woe=fg
set uoe=$414D6266
call UnitAddAbility(woe,uoe)
set roe=fg
set soe=$414D6268
call UnitAddAbility(roe,soe)
else
set toe=fg
set ioe=$41313434
call UnitAddAbility(toe,ioe)
set Soe=fg
set coe=$414D6269
call UnitAddAbility(Soe,coe)
endif
elseif RF[W0e]<=844 then
if RF[W0e]<=842 then
if RF[W0e]<=841 then
if RF[W0e]<=840 then
set ooe=fg
set Ooe=$414D626A
call UnitAddAbility(ooe,Ooe)
set loe=fg
set boe=$414D626C
call UnitAddAbility(loe,boe)
else
set yoe=Rg
set poe=$41303338
call UnitRemoveAbility(yoe,poe)
endif
else
set eoe=fg
set qoe=$414D626A
call UnitAddAbility(eoe,qoe)
set aoe=fg
set noe=$41305657
call UnitAddAbility(aoe,noe)
endif
elseif RF[W0e]<=843 then
set doe=fg
set foe=$414D626E
call UnitAddAbility(doe,foe)
set Roe=fg
set Toe=$414D626F
call UnitAddAbility(Roe,Toe)
else
set Yoe=fg
set Goe=$414D626E
call UnitAddAbility(Yoe,Goe)
set goe=fg
set hoe=$414D626D
call UnitAddAbility(goe,hoe)
endif
elseif RF[W0e]<=847 then
if RF[W0e]<=846 then
if RF[W0e]<=845 then
set Foe=W0e
set koe=rW[Foe]
set joe=$414D6335
call UnitRemoveAbility(koe,joe)
set xoe=rW[Foe]
set voe=$41303136
call UnitAddAbility(xoe,voe)
else
call MgS(W0e,"when calling call_doAfter_registerPlayerUnitEvent_WarianWrynn in ClosureTimers, line 109")
endif
else
call NJS(W0e,"when calling call_doAfter_registerPlayerUnitEvent_ZulJin in ClosureTimers, line 109")
endif
elseif RF[W0e]<=848 then
call gCS(W0e)
else
set moe="when calling call_nullTimer_Preloader in ClosureTimers, line 109"
set aW[qW]=moe
set qW=qW+1
call eRl("when calling finishPreload in Preloader, line 55")
set qW=qW-1
endif
set qW=qW-1
set U0e=null
set A0e=null
set H0e=null
set i_e=null
set c_e=null
set l_e=null
set y_e=null
set e_e=null
set n_e=null
set R_e=null
set Y_e=null
set g_e=null
set F_e=null
set x_e=null
set m_e=null
set E_e=null
set I_e=null
set A_e=null
set J_e=null
set L_e=null
set C_e=null
set N_e=null
set ese=null
set nse=null
set fse=null
set Tse=null
set Gse=null
set Fse=null
set jse=null
set mse=null
set Ese=null
set Use=null
set Dse=null
set Kse=null
set Xse=null
set Bse=null
set Mse=null
set rte=null
set tte=null
set Ste=null
set ote=null
set lte=null
set yte=null
set ete=null
set ate=null
set dte=null
set Tte=null
set gte=null
set Fte=null
set jte=null
set mte=null
set Wte=null
set Ute=null
set Ate=null
set Jte=null
set Lte=null
set Vte=null
set Nte=null
set uie=null
set sie=null
set Sie=null
set oie=null
set lie=null
set eie=null
set nie=null
set Rie=null
set Gie=null
set gie=null
set Fie=null
set kie=null
set jie=null
set vie=null
set Qie=null
set Eie=null
set Uie=null
set Pie=null
set Die=null
set Jie=null
set Lie=null
set Cie=null
set Bie=null
set Mie=null
set rSe=null
set sSe=null
set SSe=null
set oSe=null
set bSe=null
set eSe=null
set qSe=null
set dSe=null
set TSe=null
set gSe=null
set kSe=null
set vSe=null
set WSe=null
set USe=null
set ISe=null
set DSe=null
set HSe=null
set LSe=null
set VSe=null
set NSe=null
set wce=null
set rce=null
set tce=null
set Sce=null
set oce=null
set lce=null
set yce=null
set ece=null
set nce=null
set Rce=null
set gce=null
set jce=null
set Qce=null
set Uce=null
set Ace=null
set Hce=null
set Lce=null
set Vce=null
set Bce=null
set Nce=null
set woe=null
set roe=null
set toe=null
set Soe=null
set ooe=null
set loe=null
set yoe=null
set eoe=null
set aoe=null
set doe=null
set Roe=null
set Yoe=null
set goe=null
set koe=null
set xoe=null
set Woe=null
set Ioe=null
set Poe=null
set Joe=null
endfunction
function j9u takes string G9u returns nothing
local timer g9u
local integer h9u
local integer F9u
local string k9u
set aW[qW]=G9u
set qW=qW+1
set g9u=GetExpiredTimer()
set h9u=Vle(g9u,"when calling getData in ClosureTimers, line 119")
call Voe(h9u,"when calling call in ClosureTimers, line 120")
set F9u=h9u
set k9u="when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121"
set aW[qW]=k9u
set qW=qW+1
if RF[F9u]==0 then
if F9u==0 then
call L8c("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 107")
else
call L8c("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 107")
endif
endif
call T1o(F9u,"when calling destroyCallbackSingle in ClosureTimers, line 107")
set qW=qW-1
set qW=qW-1
set g9u=null
endfunction
function c4u takes nothing returns nothing
local string S4u
set qW=0
set S4u="via function reference ClosureTimers, line 114"
set aW[qW]=S4u
set qW=qW+1
call j9u("when calling staticCallback in ClosureTimers, line 114")
set qW=qW-1
endfunction
function c4y takes nothing returns boolean
local unit N1y=GetFilterUnit()
local unit M1y
local unit w4y
local unittype u4y
local unit r4y
local unittype s4y
local boolean t4y
local boolean i4y
local boolean S4y
if IsUnitEnemy(N1y,wq)==true and IsUnitAlly(N1y,wq)==false then
set M1y=N1y
set t4y=UnitAlive(M1y)==true
else
set t4y=false
endif
if t4y then
set w4y=N1y
set u4y=UNIT_TYPE_HERO
set i4y=IsUnitType(w4y,u4y)==false
else
set i4y=false
endif
if i4y then
set r4y=N1y
set s4y=UNIT_TYPE_STRUCTURE
set S4y=IsUnitType(r4y,s4y)==false
else
set S4y=false
endif
set N1y=null
set M1y=null
set w4y=null
set u4y=null
set r4y=null
set s4y=null
return S4y
endfunction
function c5b takes nothing returns boolean
return true
endfunction
function c5p takes nothing returns nothing
local integer Q4p=GetSpellAbilityId()
local integer W4p
local unit E4p
local integer Z4p
local unit U4p
local integer I4p
local sound P4p
local unit A4p
local unit D4p
local unit H4p
local unit J4p
local real K4p
local unit L4p
local real X4p
local unit C4p
local real V4p
local effect B4p
local string N4p
local real M4p
local real w2p
local unit u2p
local unit r2p
local unit s2p
local unit t2p
local integer i2p
local unit S2p
local integer c2p
local unit o2p
local integer O2p
local unit l2p
local integer b2p
local unit y2p
local integer p2p
local unit e2p
local integer q2p
local unit a2p
local integer n2p
local unit d2p
local integer f2p
local unit R2p
local integer T2p
local player Y2p
local unit G2p
local effect g2p
local string h2p
local real F2p
local real k2p
local unit j2p
local effect x2p
local string v2p
local real m2p
local real Q2p
local unit W2p
local effect E2p
local string Z2p
local real U2p
local real I2p
local unit P2p
local unit A2p
local integer D2p
local unit H2p
local integer J2p
local unit K2p
local integer L2p
local unit X2p
local integer C2p
local player V2p
local real B2p
local real N2p
local real M2p
local real w5p
local real u5p
local real r5p
local real s5p
local real t5p
local real i5p
local real S5p
if Q4p==$41313542 then
set U4p=Eh
set I4p=$41313542
set W4p=GetUnitAbilityLevel(U4p,I4p)
set P4p=Hh
call StartSound(P4p)
set A4p=Eh
set V2p=GetOwningPlayer(A4p)
set D4p=Eh
set B2p=GetUnitX(D4p)
set H4p=Eh
set E4p=CreateUnit(V2p,$75303030,B2p,GetUnitY(H4p),0.)
if W4p<4 then
set J4p=E4p
set K4p=30.
call UnitApplyTimedLife(J4p,$42544C46,K4p)
elseif W4p==4 then
set L4p=E4p
set X4p=45.
call UnitApplyTimedLife(L4p,$42544C46,X4p)
else
set C4p=E4p
set V4p=60.
call UnitApplyTimedLife(C4p,$42544C46,V4p)
endif
set N4p="Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl"
set u2p=Eh
set r2p=u2p
set N2p=GetUnitX(r2p)
set s2p=u2p
set M2p=N2p
set w5p=GetUnitY(s2p)
set M4p=M2p
set w2p=w5p
set B4p=AddSpecialEffect(N4p,M4p,w2p)
call DestroyEffect(B4p)
if W4p==1 then
set t2p=E4p
set i2p=$41313544
call UnitAddAbility(t2p,i2p)
set S2p=E4p
set c2p=$41313548
call UnitAddAbility(S2p,c2p)
elseif W4p==2 then
set o2p=E4p
set O2p=$41313545
call UnitAddAbility(o2p,O2p)
set l2p=E4p
set b2p=$41313549
call UnitAddAbility(l2p,b2p)
set y2p=E4p
set p2p=$41313554
call UnitAddAbility(y2p,p2p)
elseif W4p==3 then
set e2p=E4p
set q2p=$41313546
call UnitAddAbility(e2p,q2p)
set a2p=E4p
set n2p=$4131354A
call UnitAddAbility(a2p,n2p)
set d2p=E4p
set f2p=$41313550
call UnitAddAbility(d2p,f2p)
set R2p=E4p
set T2p=$4131354F
call UnitAddAbility(R2p,T2p)
else
set G2p=Eh
set Y2p=GetOwningPlayer(G2p)
set Z4p=GetPlayerId(Y2p)
set h2p="Void Teleport Red Target.mdl"
set u5p=lu[Z4p]
set r5p=pu[Z4p]
set F2p=u5p
set k2p=r5p
set g2p=AddSpecialEffect(h2p,F2p,k2p)
call DestroyEffect(g2p)
set j2p=Eh
call eCe(GetOwningPlayer(j2p),Xw[Z4p],Su[Z4p],lu[Z4p],pu[Z4p])
set v2p="Void Teleport Red Target.mdl"
set s5p=ou[Z4p]
set t5p=bu[Z4p]
set m2p=s5p
set Q2p=t5p
set x2p=AddSpecialEffect(v2p,m2p,Q2p)
call DestroyEffect(x2p)
set W2p=Eh
call eCe(GetOwningPlayer(W2p),Kw[Z4p],iu[Z4p],ou[Z4p],bu[Z4p])
set Z2p="Void Teleport Red Target.mdl"
set i5p=Ou[Z4p]
set S5p=yu[Z4p]
set U2p=i5p
set I2p=S5p
set E2p=AddSpecialEffect(Z2p,U2p,I2p)
call DestroyEffect(E2p)
set P2p=Eh
call eCe(GetOwningPlayer(P2p),Lw[Z4p],cu[Z4p],Ou[Z4p],yu[Z4p])
set A2p=E4p
set D2p=$41313547
call UnitAddAbility(A2p,D2p)
set H2p=E4p
set J2p=$41313553
call UnitAddAbility(H2p,J2p)
set K2p=E4p
set L2p=$41313551
call UnitAddAbility(K2p,L2p)
set X2p=E4p
set C2p=$4131354E
call UnitAddAbility(X2p,C2p)
endif
endif
set E4p=null
set U4p=null
set P4p=null
set A4p=null
set D4p=null
set H4p=null
set J4p=null
set L4p=null
set C4p=null
set B4p=null
set u2p=null
set r2p=null
set s2p=null
set t2p=null
set S2p=null
set o2p=null
set l2p=null
set y2p=null
set e2p=null
set a2p=null
set d2p=null
set R2p=null
set Y2p=null
set G2p=null
set g2p=null
set j2p=null
set x2p=null
set W2p=null
set E2p=null
set P2p=null
set A2p=null
set H2p=null
set K2p=null
set X2p=null
set V2p=null
endfunction
function DOS takes string lOS returns nothing
local unit bOS
local trigger yOS
local group pOS
local filterfunc eOS
local unit qOS
local group aOS
local integer nOS
local unit dOS
local integer fOS
local unit ROS
local unit TOS
local unit YOS
local string GOS
local group gOS
local group hOS
local unit FOS
local effect kOS
local widget jOS
local string xOS
local string vOS
local group mOS
local boolexpr QOS
local string WOS
local integer EOS
local real ZOS
local integer UOS
local string IOS
local group POS
local real AOS
set aW[qW]=lOS
set qW=qW+1
set bOS=GetTriggerUnit()
set dOS=bOS
set fOS=$49303331
if RTS(dOS,fOS)!=null then
if GetRandomInt(1,100)<=10 then
set yOS=GetTriggeringTrigger()
set pOS=CreateGroup()
set eOS=Filter(d5)
set POS=pOS
set ROS=bOS
set AOS=GetUnitX(ROS)
set TOS=bOS
call GroupEnumUnitsInRange(POS,AOS,GetUnitY(TOS),350.,eOS)
set YOS=bOS
set GOS="attack spell slam"
call SetUnitAnimation(YOS,GOS)
set aOS=pOS
loop
set gOS=aOS
exitwhen not (FirstOfGroup(gOS)!=null)
set hOS=aOS
set FOS=FirstOfGroup(hOS)
call GroupRemoveUnit(hOS,FOS)
set qOS=FOS
call UnitDamageTarget(bOS,qOS,50.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
set jOS=qOS
set xOS="Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
set vOS="origin"
set kOS=AddSpecialEffectTarget(xOS,jOS,vOS)
call DestroyEffect(kOS)
endloop
set mOS=pOS
call DestroyGroup(mOS)
set QOS=eOS
call DestroyBoolExpr(QOS)
set WOS="when calling alloc_CallbackSingle_doAfter_HolyReflection in HolyReflection, line 42"
set aW[qW]=WOS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EOS=fF
set RF[EOS]=717
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_HolyReflection.","when calling error in HolyReflection, line 42")
set EOS=0
endif
else
set dF=dF-1
set EOS=nF[dF]
set RF[EOS]=717
endif
set qW=qW-1
set nOS=EOS
set Bx[nOS]=yOS
set ZOS=2.
set UOS=nOS
set IOS="when calling doAfter in HolyReflection, line 42"
set aW[qW]=IOS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ZOS,UOS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set bOS=null
set yOS=null
set pOS=null
set eOS=null
set qOS=null
set aOS=null
set dOS=null
set ROS=null
set TOS=null
set YOS=null
set gOS=null
set hOS=null
set FOS=null
set kOS=null
set jOS=null
set mOS=null
set QOS=null
set POS=null
endfunction
function c6u takes nothing returns nothing
set qW=0
call DOS("via function reference HolyReflection, line 49")
endfunction
function c7e takes nothing returns nothing
local unit w7e=GetTriggerUnit()
local unit s7e=w7e
local integer u7e=GetUnitTypeId(s7e)
local player r7e
local trigger t7e
local trigger i7e
local player S7e
if u7e==$6E303245 then
set r7e=GetTriggerPlayer()
set t7e=KY
call EnableTrigger(t7e)
set i7e=LY
call EnableTrigger(i7e)
call SetPlayerTechResearched(r7e,$52303544,1)
set S7e=r7e
call SetPlayerTechResearched(Player(GetPlayerId(S7e)+4),$52303544,1)
endif
set w7e=null
set r7e=null
set s7e=null
set t7e=null
set i7e=null
set S7e=null
endfunction
function cAt takes nothing returns nothing
local unit uAt=GetTriggerUnit()
local unit sAt=uAt
local integer rAt
local unit tAt
local integer iAt
local unit SAt
if GetUnitTypeId(sAt)==$4F303434 then
set tAt=uAt
set iAt=$41323033
set rAt=GetUnitAbilityLevel(tAt,iAt)
set SAt=uAt
call SetPlayerTechResearched(GetOwningPlayer(SAt),$52303757,rAt)
endif
set uAt=null
set sAt=null
set tAt=null
set SAt=null
endfunction
function cBy takes nothing returns nothing
set ur=true
endfunction
function cCt takes nothing returns boolean
local trigger MXt
local trigger wCt
local playerunitevent uCt
local trigger rCt
local playerunitevent sCt
local integer tCt
local trigger iCt
local code SCt
set Md=CreateTrigger()
set MXt=Md
call DisableTrigger(MXt)
set wCt=Md
set uCt=EVENT_PLAYER_UNIT_ATTACKED
set rCt=wCt
set sCt=uCt
set tCt=0
loop
call TriggerRegisterPlayerUnitEvent(rCt,Player(tCt),sCt,null)
set tCt=tCt+1
exitwhen tCt==bj_MAX_PLAYER_SLOTS
endloop
set iCt=Md
set SCt=t8
call TriggerAddAction(iCt,SCt)
set MXt=null
set wCt=null
set uCt=null
set rCt=null
set sCt=null
set iCt=null
return true
endfunction
function cCu takes nothing returns boolean
local trigger MXu
local trigger wCu
local playerunitevent uCu
local trigger rCu
local playerunitevent sCu
local integer tCu
local trigger iCu
local code SCu
set SY=CreateTrigger()
set MXu=SY
call DisableTrigger(MXu)
set wCu=SY
set uCu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set rCu=wCu
set sCu=uCu
set tCu=0
loop
call TriggerRegisterPlayerUnitEvent(rCu,Player(tCu),sCu,null)
set tCu=tCu+1
exitwhen tCu==bj_MAX_PLAYER_SLOTS
endloop
set iCu=SY
set SCu=Gww_515
call TriggerAddAction(iCu,SCu)
set MXu=null
set wCu=null
set uCu=null
set rCu=null
set sCu=null
set iCu=null
return true
endfunction
function cHl takes nothing returns boolean
local playerunitevent uHl
local code rHl
local playerunitevent sHl
local code tHl
local playerunitevent iHl
local code SHl
set iF=CreateTimer()
set uHl=EVENT_PLAYER_HERO_LEVEL
set rHl=stw
call emO(uHl,null,rHl,null)
set sHl=EVENT_PLAYER_HERO_REVIVE_FINISH
set tHl=ttw
call emO(sHl,null,tHl,null)
set iHl=EVENT_PLAYER_UNIT_DEATH
set SHl=itw
call emO(iHl,null,SHl,null)
set uHl=null
set sHl=null
set iHl=null
return true
endfunction
function cIp takes nothing returns boolean
return true
endfunction
function o1o takes string X3c returns nothing
local unit C3c
local integer V3c
local unit B3c
local unit N3c
local unit M3c
local integer w1o
local string u1o
local integer r1o
local real s1o
local integer t1o
local string i1o
local boolean S1o
local boolean c1o
set aW[qW]=X3c
set qW=qW+1
set C3c=GetAttacker()
if GetRandomInt(1,100)<=15 and GetHeroLevel(C3c)>=8 then
set B3c=C3c
if GetUnitTypeId(B3c)==$45303037 then
set S1o=true
else
set N3c=C3c
set S1o=GetUnitTypeId(N3c)==$45303038
endif
set c1o=S1o
else
set c1o=false
endif
if c1o then
set M3c=C3c
set w1o=$4130594F
call UnitAddAbility(M3c,w1o)
set u1o="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_HeadHunter in HeadHunter, line 35"
set aW[qW]=u1o
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set r1o=fF
set RF[r1o]=816
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_HeadHunter.","when calling error in HeadHunter, line 35")
set r1o=0
endif
else
set dF=dF-1
set r1o=nF[dF]
set RF[r1o]=816
endif
set qW=qW-1
set V3c=r1o
set Ux[V3c]=C3c
set s1o=1.5
set t1o=V3c
set i1o="when calling doAfter in HeadHunter, line 35"
set aW[qW]=i1o
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),s1o,t1o,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set C3c=null
set B3c=null
set N3c=null
set M3c=null
endfunction
function cKc takes nothing returns nothing
set qW=0
call o1o("via function reference HeadHunter, line 31")
endfunction
function cLO takes nothing returns boolean
local trigger YKO
local rect GKO
local region gKO
local trigger hKO
local rect FKO
local region kKO
local trigger jKO
local rect xKO
local region vKO
local trigger mKO
local rect QKO
local region WKO
local trigger EKO
local rect ZKO
local region UKO
local trigger IKO
local rect PKO
local region AKO
local trigger DKO
local rect HKO
local region JKO
local trigger KKO
local rect LKO
local region XKO
local trigger CKO
local trigger VKO
local real BKO
local trigger NKO
local trigger MKO
local real wLO
local trigger uLO
local trigger rLO
local real sLO
local trigger tLO
local trigger iLO
local real SLO
set ZR=CreateTrigger()
set UR=CreateTrigger()
set IR=CreateTrigger()
set PR=CreateTrigger()
set AR=CreateTrigger()
set DR=CreateTrigger()
set HR=CreateTrigger()
set JR=CreateTrigger()
set KR=CreateTrigger()
set LR=CreateTrigger()
set XR=CreateTrigger()
set CR=CreateTrigger()
set YKO=ZR
set GKO=bs
set gKO=CreateRegion()
call RegionAddRect(gKO,GKO)
call TriggerRegisterEnterRegion(YKO,gKO,null)
call TriggerAddCondition(ZR,Condition(X9))
call TriggerAddAction(ZR,C9)
set hKO=UR
set FKO=ys
set kKO=CreateRegion()
call RegionAddRect(kKO,FKO)
call TriggerRegisterEnterRegion(hKO,kKO,null)
call TriggerAddCondition(UR,Condition(V9))
call TriggerAddAction(UR,B9)
set jKO=IR
set xKO=ps
set vKO=CreateRegion()
call RegionAddRect(vKO,xKO)
call TriggerRegisterEnterRegion(jKO,vKO,null)
call TriggerAddCondition(IR,Condition(N9))
call TriggerAddAction(IR,M9)
set mKO=PR
set QKO=es
set WKO=CreateRegion()
call RegionAddRect(WKO,QKO)
call TriggerRegisterEnterRegion(mKO,WKO,null)
call TriggerAddCondition(PR,Condition(w0w))
call TriggerAddAction(PR,u0w)
set EKO=AR
set ZKO=qs
set UKO=CreateRegion()
call RegionAddRect(UKO,ZKO)
call TriggerRegisterEnterRegion(EKO,UKO,null)
call TriggerAddCondition(AR,Condition(r0w))
call TriggerAddAction(AR,s0w)
set IKO=DR
set PKO=as
set AKO=CreateRegion()
call RegionAddRect(AKO,PKO)
call TriggerRegisterEnterRegion(IKO,AKO,null)
call TriggerAddCondition(DR,Condition(t0w))
call TriggerAddAction(DR,i0w)
set DKO=HR
set HKO=ns
set JKO=CreateRegion()
call RegionAddRect(JKO,HKO)
call TriggerRegisterEnterRegion(DKO,JKO,null)
call TriggerAddCondition(HR,Condition(S0w))
call TriggerAddAction(HR,c0w)
set KKO=JR
set LKO=ds
set XKO=CreateRegion()
call RegionAddRect(XKO,LKO)
call TriggerRegisterEnterRegion(KKO,XKO,null)
call TriggerAddCondition(JR,Condition(o0w))
call TriggerAddAction(JR,O0w)
set CKO=KR
call DisableTrigger(CKO)
set VKO=KR
set BKO=80.
call TriggerRegisterTimerEvent(VKO,BKO,true)
call TriggerAddAction(KR,l0w)
set NKO=LR
call DisableTrigger(NKO)
set MKO=LR
set wLO=65.
call TriggerRegisterTimerEvent(MKO,wLO,true)
call TriggerAddAction(LR,l0w)
set uLO=XR
call DisableTrigger(uLO)
set rLO=XR
set sLO=50.
call TriggerRegisterTimerEvent(rLO,sLO,true)
call TriggerAddAction(XR,l0w)
set tLO=CR
call DisableTrigger(tLO)
set iLO=CR
set SLO=35.
call TriggerRegisterTimerEvent(iLO,SLO,true)
call TriggerAddAction(CR,l0w)
set YKO=null
set GKO=null
set gKO=null
set hKO=null
set FKO=null
set kKO=null
set jKO=null
set xKO=null
set vKO=null
set mKO=null
set QKO=null
set WKO=null
set EKO=null
set ZKO=null
set UKO=null
set IKO=null
set PKO=null
set AKO=null
set DKO=null
set HKO=null
set JKO=null
set KKO=null
set LKO=null
set XKO=null
set CKO=null
set VKO=null
set NKO=null
set MKO=null
set uLO=null
set rLO=null
set tLO=null
set iLO=null
return true
endfunction
function cMS takes nothing returns boolean
local trigger uMS
local trigger rMS
local playerunitevent sMS
local integer tMS
local playerunitevent iMS
local code SMS
set tY=CreateTrigger()
set uMS=tY
call DisableTrigger(uMS)
set rMS=tY
set sMS=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set tMS=0
loop
call TriggerRegisterPlayerUnitEvent(rMS,Player(tMS),sMS,null)
set tMS=tMS+1
exitwhen tMS==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(tY,dww)
set iMS=EVENT_PLAYER_UNIT_SPELL_EFFECT
set SMS=fww
call emO(iMS,null,SMS,null)
set uMS=null
set rMS=null
set sMS=null
set iMS=null
return true
endfunction
function cMe takes nothing returns boolean
local playerunitevent iMe=EVENT_PLAYER_UNIT_SPELL_CAST
local code SMe=Y0w
call emO(iMe,null,SMe,null)
set iMe=null
return true
endfunction
function pJc takes string sJc returns nothing
local integer tJc
local unit iJc
local integer SJc
local integer cJc
local unit oJc
local unit OJc
local integer lJc
local string bJc
local integer yJc
set aW[qW]=sJc
set qW=qW+1
set tJc=GetSpellAbilityId()
if tJc==$41305756 then
set iJc=GetSpellAbilityUnit()
set oJc=iJc
set Pe=GetOwningPlayer(oJc)
set OJc=iJc
set lJc=$41305756
set SJc=GetUnitAbilityLevel(OJc,lJc)
set Ie=0
set bJc="when calling alloc_CallbackPeriodic_doPeriodically_GalagrondBlue in GalagrondBlue, line 451"
set aW[qW]=bJc
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set yJc=GF
set gF[yJc]=660
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_GalagrondBlue.","when calling error in GalagrondBlue, line 451")
set yJc=0
endif
else
set YF=YF-1
set yJc=TF[YF]
set gF[yJc]=660
endif
set qW=qW-1
set cJc=yJc
set bx[cJc]=iJc
set yx[cJc]=SJc
call GtO(.5,cJc,"when calling doPeriodically in GalagrondBlue, line 451")
endif
set qW=qW-1
set iJc=null
set oJc=null
set OJc=null
endfunction
function cOl takes nothing returns nothing
set qW=0
call pJc("via function reference GalagrondBlue, line 471")
endfunction
function cQp takes nothing returns boolean
local trigger sQp
local trigger tQp
local playerunitevent iQp
local integer SQp
set dn=CreateTrigger()
set sQp=dn
call DisableTrigger(sQp)
set tQp=dn
set iQp=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SQp=0
loop
call TriggerRegisterPlayerUnitEvent(tQp,Player(SQp),iQp,null)
set SQp=SQp+1
exitwhen SQp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(dn,r6)
set sQp=null
set tQp=null
set iQp=null
return true
endfunction
function cUs takes nothing returns nothing
local integer XZs=GetSpellAbilityId()
local unit CZs
local unit VZs
local integer BZs
local unit NZs
local unit MZs
local unit wUs
local unit uUs
local real rUs
local integer sUs
local unit tUs
local player iUs
local real SUs
if XZs==$41313531 then
set CZs=GetSpellAbilityUnit()
set VZs=CZs
set BZs=$41313531
set BO=GetUnitAbilityLevel(VZs,BZs)
set NZs=CZs
set iUs=GetOwningPlayer(NZs)
set MZs=CZs
set SUs=GetUnitX(MZs)
set wUs=CZs
set XO=CreateUnit(iUs,$7530304B,SUs,GetUnitY(wUs),0.)
set uUs=XO
set sUs=25+5*BO
set rUs=sUs*1.
call UnitApplyTimedLife(uUs,$42544C46,rUs)
set tUs=XO
call SetPlayerTechResearched(GetOwningPlayer(tUs),$52303733,BO)
set CO=true
set VO=CreateTimer()
call TimerStart(VO,5.,false,mM)
endif
set CZs=null
set VZs=null
set NZs=null
set MZs=null
set wUs=null
set uUs=null
set tUs=null
set iUs=null
endfunction
function cZu takes nothing returns boolean
return true
endfunction
function caw takes nothing returns boolean
local trigger uaw
local rect raw
local region saw
local trigger taw
local boolexpr iaw
local trigger Saw
set fG=CreateTrigger()
set uaw=fG
set raw=bj_mapInitialPlayableArea
set saw=CreateRegion()
call RegionAddRect(saw,raw)
call TriggerRegisterEnterRegion(uaw,saw,null)
set taw=fG
set iaw=Condition(Zww_1850)
call TriggerAddCondition(taw,iaw)
set Saw=fG
call DisableTrigger(Saw)
set uaw=null
set raw=null
set saw=null
set taw=null
set iaw=null
set Saw=null
return true
endfunction
function MJl takes integer iJl,integer SJl,integer cJl,integer oJl,integer OJl,integer lJl,integer bJl,integer yJl,integer pJl,integer eJl,integer qJl,integer aJl,integer nJl,integer dJl,integer fJl,integer RJl,integer TJl,integer YJl,integer GJl,integer gJl,integer hJl,string FJl returns nothing
local integer kJl
local integer jJl
local integer xJl
local integer vJl
local integer mJl
local integer QJl
local integer WJl
local integer EJl
local integer ZJl
local integer UJl
local integer IJl
local integer PJl
local integer AJl
local integer DJl
local integer HJl
local integer JJl
local integer KJl
local integer LJl
local integer XJl
local integer CJl
local integer VJl
local string BJl
local integer NJl
set aW[qW]=FJl
set qW=qW+1
if ok[iJl]==0 then
if iJl==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set kJl=iJl
set jJl=SJl
set xJl=cJl
set vJl=oJl
set mJl=OJl
set QJl=lJl
set WJl=bJl
set EJl=yJl
set ZJl=pJl
set UJl=eJl
set IJl=qJl
set PJl=aJl
set AJl=nJl
set DJl=dJl
set HJl=fJl
set JJl=RJl
set KJl=TJl
set LJl=YJl
set XJl=GJl
set CJl=gJl
set VJl=hJl
set BJl="when calling add in LinkedList, line 38"
set aW[qW]=BJl
set qW=qW+1
set NJl=jMe(jJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(xJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(vJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(mJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(QJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(WJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(EJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(ZJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(UJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(IJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(PJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(AJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(DJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(HJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(JJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(KJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(LJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(XJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(CJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set NJl=jMe(VJl,Jv[Vv[kJl]],Vv[kJl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[kJl]]]=NJl
set Jv[Vv[kJl]]=NJl
set Bv[kJl]=Bv[kJl]+1
set qW=qW-1
set qW=qW-1
endfunction
function f1i takes integer X3i,integer C3i,integer V3i,integer B3i,integer N3i,integer M3i,integer w1i,integer u1i,integer r1i,integer s1i,integer t1i,string i1i returns nothing
local integer S1i
local integer c1i
local integer o1i
local integer O1i
local integer l1i
local integer b1i
local integer y1i
local integer p1i
local integer e1i
local integer q1i
local integer a1i
local string n1i
local integer d1i
set aW[qW]=i1i
set qW=qW+1
if ok[X3i]==0 then
if X3i==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set S1i=X3i
set c1i=C3i
set o1i=V3i
set O1i=B3i
set l1i=N3i
set b1i=M3i
set y1i=w1i
set p1i=u1i
set e1i=r1i
set q1i=s1i
set a1i=t1i
set n1i="when calling add in LinkedList, line 38"
set aW[qW]=n1i
set qW=qW+1
set d1i=jMe(c1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(o1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(O1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(l1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(b1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(y1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(p1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(e1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(q1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set d1i=jMe(a1i,Jv[Vv[S1i]],Vv[S1i],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[S1i]]]=d1i
set Jv[Vv[S1i]]=d1i
set Bv[S1i]=Bv[S1i]+1
set qW=qW-1
set qW=qW-1
endfunction
function Ywt takes string lwt returns boolean
local trigger bwt
local playerunitevent ywt
local trigger pwt
local playerunitevent ewt
local integer qwt
local trigger awt
local boolexpr nwt
local trigger dwt
local code fwt
local playerunitevent Rwt
local code Twt
set aW[qW]=lwt
set qW=qW+1
set TY=null
set YY=null
set GY=CreateTrigger()
set gY=kHw("when calling new_LinkedList in PickRace, line 214")
set hY=kHw("when calling new_LinkedList in PickRace, line 215")
set FY=kHw("when calling new_LinkedList in PickRace, line 216")
set vY=kHw("when calling new_LinkedList in PickRace, line 220")
call MJl(gY,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,"when calling add in PickRace, line 3293")
call f1i(FY,1,2,3,4,5,6,7,8,9,10,"when calling add in PickRace, line 3294")
call MJl(hY,$41313930,$41313931,$41313932,$41313933,$41313934,$41313935,$41313936,$41313937,$41313938,$41313939,$41313941,$41313942,$41313943,$41313944,$41313945,$41313946,$41313947,$41313948,$41313949,$4131394A,"when calling add in PickRace, line 3295")
call MJl(vY,$41313930,$41313931,$41313932,$41313933,$41313934,$41313935,$41313936,$41313937,$41313938,$41313939,$41313941,$41313942,$41313943,$41313944,$41313945,$41313946,$41313947,$41313948,$41313949,$4131394A,"when calling add in PickRace, line 3296")
set RY=CreateTrigger()
set bwt=RY
set ywt=EVENT_PLAYER_UNIT_SPELL_CAST
set pwt=bwt
set ewt=ywt
set qwt=0
loop
call TriggerRegisterPlayerUnitEvent(pwt,Player(qwt),ewt,null)
set qwt=qwt+1
exitwhen qwt==bj_MAX_PLAYER_SLOTS
endloop
set awt=RY
set nwt=Condition(Uww_1510)
call TriggerAddCondition(awt,nwt)
set dwt=RY
set fwt=Iww_653
call TriggerAddAction(dwt,fwt)
set Rwt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Twt=Pww_1155
call emO(Rwt,null,Twt,null)
set qW=qW-1
set bwt=null
set ywt=null
set pwt=null
set ewt=null
set awt=null
set nwt=null
set dwt=null
set Rwt=null
return true
endfunction
function cgu takes nothing returns boolean
set qW=0
return Ywt("via function reference PickRace, line 1")
endfunction
function cgy takes nothing returns boolean
local trigger MGy
local trigger wgy
local playerunitevent ugy
local trigger rgy
local playerunitevent sgy
local integer tgy
local trigger igy
local code Sgy
set aY=CreateTrigger()
set MGy=aY
call DisableTrigger(MGy)
set wgy=aY
set ugy=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set rgy=wgy
set sgy=ugy
set tgy=0
loop
call TriggerRegisterPlayerUnitEvent(rgy,Player(tgy),sgy,null)
set tgy=tgy+1
exitwhen tgy==bj_MAX_PLAYER_SLOTS
endloop
set igy=aY
set Sgy=mww_2821
call TriggerAddAction(igy,Sgy)
set MGy=null
set wgy=null
set ugy=null
set rgy=null
set sgy=null
set igy=null
return true
endfunction
function chl takes nothing returns boolean
local trigger Mgl
local trigger whl
local playerunitevent uhl
local trigger rhl
local playerunitevent shl
local integer thl
local trigger ihl
local boolexpr Shl
set ah=CreateTrigger()
set Mgl=ah
call DisableTrigger(Mgl)
set whl=ah
set uhl=EVENT_PLAYER_UNIT_DEATH
set rhl=whl
set shl=uhl
set thl=0
loop
call TriggerRegisterPlayerUnitEvent(rhl,Player(thl),shl,null)
set thl=thl+1
exitwhen thl==bj_MAX_PLAYER_SLOTS
endloop
set ihl=ah
set Shl=Condition(psw)
call TriggerAddCondition(ihl,Shl)
set Mgl=null
set whl=null
set uhl=null
set rhl=null
set shl=null
set ihl=null
set Shl=null
return true
endfunction
function cju takes nothing returns boolean
return true
endfunction
function coi takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1483")
endfunction
function cot takes nothing returns boolean
local trigger Mct
local trigger wot
local playerunitevent uot
local trigger rot
local playerunitevent sot
local integer tot
local trigger iot
local code Sot
set Xg=CreateTrigger()
set Mct=Xg
call DisableTrigger(Mct)
set wot=Xg
set uot=EVENT_PLAYER_UNIT_DEATH
set rot=wot
set sot=uot
set tot=0
loop
call TriggerRegisterPlayerUnitEvent(rot,Player(tot),sot,null)
set tot=tot+1
exitwhen tot==bj_MAX_PLAYER_SLOTS
endloop
set iot=Xg
set Sot=hrw
call TriggerAddAction(iot,Sot)
set Mct=null
set wot=null
set uot=null
set rot=null
set sot=null
set iot=null
return true
endfunction
function cpi takes nothing returns boolean
set Jn=CreateSound("Ysera.mp3",false,false,false,127,127,"DefaultEAXON")
call SetSoundDuration(Jn,5374)
call SetSoundChannel(Jn,0)
call SetSoundVolume(Jn,250)
call SetSoundPitch(Jn,1.)
return true
endfunction
function cpu takes nothing returns nothing
local unit Nyu=GetTriggerUnit()
local unit Myu=Nyu
local string wpu="attack"
local real ipu=Qw[13]
local real Spu=Ww[13]
local real upu=ipu
local real rpu=Spu
local unit spu
local unittype tpu
call IssuePointOrder(Myu,wpu,upu,rpu)
set spu=Nyu
set tpu=UNIT_TYPE_HERO
if IsUnitType(spu,tpu) then
call SaveInteger(qu,GetHandleId(Nyu),$6D6F7665,13)
endif
set Nyu=null
set Myu=null
set spu=null
set tpu=null
endfunction
function cqc takes nothing returns boolean
local string uqc
local integer rqc
local integer sqc
local integer tqc
local string iqc
local integer Sqc
set qW=0
set uqc="via function reference TrueCHAOS, line 1"
set aW[qW]=uqc
set qW=qW+1
set rqc=$6E676E73
set sqc=$6E636872
set tqc=$6E636867
set iqc="when calling asList in TrueCHAOS, line 8"
set aW[qW]=iqc
set qW=qW+1
set Sqc=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(Sqc,rqc,"when calling add in LinkedList, line 412")
call x7s(Sqc,sqc,"when calling add in LinkedList, line 412")
call x7s(Sqc,tqc,"when calling add in LinkedList, line 412")
set qW=qW-1
set ih=Sqc
set qW=qW-1
return true
endfunction
function cqu takes nothing returns nothing
local integer ceu=GetSpellAbilityId()
local unit oeu
local real Oeu
local real leu
local integer beu
local unit yeu
local unit peu
local integer eeu
local group qeu
local unit aeu
local real neu
local real deu
local filterfunc feu
local unit Reu
local group Teu
local unit Yeu
local unit Geu
local integer geu
local unit heu
local unit Feu
local integer keu
local unit jeu
local real xeu
local unit veu
local integer meu
local integer Qeu
local unit Weu
local unit Eeu
local integer Zeu
local unit Ueu
local unit Ieu
local group Peu
local group Aeu
local unit Deu
local unit Heu
local unit Jeu
local unit Keu
local unit Leu
local real Xeu
local unit Ceu
local integer Veu
local unit Beu
local integer Neu
local integer Meu
local unit wqu
local string uqu
local widget rqu
local group squ
local boolexpr tqu
local player iqu
local real Squ
if ceu==$41323835 then
set oeu=GetSpellAbilityUnit()
set Oeu=GetSpellTargetX()
set leu=GetSpellTargetY()
set Geu=oeu
set geu=$41323835
set beu=GetUnitAbilityLevel(Geu,geu)
set heu=oeu
set yeu=CreateUnit(GetOwningPlayer(heu),$75303132,Oeu,leu,0.)
set Feu=yeu
set keu=$41323834
call UnitAddAbility(Feu,keu)
set jeu=yeu
set xeu=10.
call UnitApplyTimedLife(jeu,$42544C46,xeu)
set veu=yeu
set meu=$41323834
set Qeu=beu
call SetUnitAbilityLevel(veu,meu,Qeu)
endif
if ceu==$41323837 then
set peu=GetSpellAbilityUnit()
set Weu=peu
set Kn=GetOwningPlayer(Weu)
set Eeu=peu
set Zeu=$41323837
set eeu=GetUnitAbilityLevel(Eeu,Zeu)
set qeu=CreateGroup()
set aeu=GetSpellTargetUnit()
set Ueu=aeu
set neu=GetUnitX(Ueu)
set Ieu=aeu
set deu=GetUnitY(Ieu)
set feu=Filter(H6)
call GroupEnumUnitsInRange(qeu,neu,deu,450.,feu)
set Teu=qeu
loop
set Peu=Teu
exitwhen not (FirstOfGroup(Peu)!=null)
set Aeu=Teu
set Deu=FirstOfGroup(Aeu)
call GroupRemoveUnit(Aeu,Deu)
set Reu=Deu
set Heu=peu
set iqu=GetOwningPlayer(Heu)
set Jeu=Reu
set Squ=GetUnitX(Jeu)
set Keu=Reu
set Yeu=CreateUnit(iqu,$75303030,Squ,GetUnitY(Keu),0.)
set Leu=Yeu
set Xeu=3.
call UnitApplyTimedLife(Leu,$42544C46,Xeu)
set Ceu=Yeu
set Veu=$41323838
call UnitAddAbility(Ceu,Veu)
set Beu=Yeu
set Neu=$41323838
set Meu=eeu
call SetUnitAbilityLevel(Beu,Neu,Meu)
set wqu=Yeu
set uqu="parasite"
set rqu=Reu
call IssueTargetOrder(wqu,uqu,rqu)
endloop
set squ=qeu
call DestroyGroup(squ)
set tqu=feu
call DestroyBoolExpr(tqu)
set Kn=null
endif
set oeu=null
set yeu=null
set peu=null
set qeu=null
set aeu=null
set feu=null
set Reu=null
set Teu=null
set Yeu=null
set Geu=null
set heu=null
set Feu=null
set jeu=null
set veu=null
set Weu=null
set Eeu=null
set Ueu=null
set Ieu=null
set Peu=null
set Aeu=null
set Deu=null
set Heu=null
set Jeu=null
set Keu=null
set Leu=null
set Ceu=null
set Beu=null
set wqu=null
set rqu=null
set squ=null
set tqu=null
set iqu=null
endfunction
function cwt takes nothing returns boolean
local trigger swt
local trigger twt
local playerunitevent iwt
local integer Swt
set Me=CreateTrigger()
set swt=Me
call DisableTrigger(swt)
set twt=Me
set iwt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Swt=0
loop
call TriggerRegisterPlayerUnitEvent(twt,Player(Swt),iwt,null)
set Swt=Swt+1
exitwhen Swt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Me,m2)
set swt=null
set twt=null
set iwt=null
return true
endfunction
function d0e takes nothing returns boolean
local trigger e0e
local trigger q0e
local playerunitevent a0e
local integer n0e
set QG=CreateTrigger()
set e0e=QG
call DisableTrigger(e0e)
set q0e=QG
set a0e=EVENT_PLAYER_UNIT_DEATH
set n0e=0
loop
call TriggerRegisterPlayerUnitEvent(q0e,Player(n0e),a0e,null)
set n0e=n0e+1
exitwhen n0e==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(QG,uuw)
set e0e=null
set q0e=null
set a0e=null
return true
endfunction
function d1b takes nothing returns boolean
return true
endfunction
function d2S takes nothing returns boolean
return true
endfunction
function d2y takes nothing returns nothing
local unit Z4y=GetEventDamageSource()
local unit U4y=GetTriggerUnit()
local unit A4y=U4y
local unittype D4y=UNIT_TYPE_MECHANICAL
local integer I4y
local integer P4y
local unit H4y
local unittype J4y
local unit K4y
local player L4y
local integer X4y
local player C4y
local playerstate V4y
local integer B4y
local player N4y
local playerstate M4y
local unit w2y
local unittype u2y
local unit r2y
local unittype s2y
local unit t2y
local player i2y
local integer S2y
local player c2y
local playerstate o2y
local integer O2y
local player l2y
local playerstate b2y
local boolean y2y
local player p2y
local playerstate e2y
local boolean q2y
local player a2y
local playerstate n2y
if IsUnitType(A4y,D4y)==true then
set H4y=U4y
set J4y=UNIT_TYPE_STRUCTURE
set y2y=IsUnitType(H4y,J4y)==false
else
set y2y=false
endif
if y2y then
call UuS(Z4y,1)
set I4y=0
loop
exitwhen I4y>3
set K4y=Ly
if GetOwningPlayer(K4y)==Player(I4y) then
set L4y=Player(I4y)
set X4y=1
set C4y=L4y
set V4y=PLAYER_STATE_RESOURCE_GOLD
set B4y=X4y
set p2y=C4y
set e2y=V4y
set N4y=C4y
set M4y=V4y
call SetPlayerState(p2y,e2y,GetPlayerState(N4y,M4y)+B4y)
set hr[I4y]=hr[I4y]+1
set Fr[I4y]=Fr[I4y]+1
set Cr[I4y]=Cr[I4y]+1
endif
set I4y=I4y+1
endloop
endif
set w2y=U4y
set u2y=UNIT_TYPE_STRUCTURE
if IsUnitType(w2y,u2y)==true then
set r2y=U4y
set s2y=UNIT_TYPE_STRUCTURE
set q2y=IsUnitType(r2y,s2y)==true
else
set q2y=false
endif
if q2y then
call UuS(Z4y,3)
set P4y=0
loop
exitwhen P4y>3
set t2y=Ly
if GetOwningPlayer(t2y)==Player(P4y) then
set i2y=Player(P4y)
set S2y=3
set c2y=i2y
set o2y=PLAYER_STATE_RESOURCE_GOLD
set O2y=S2y
set a2y=c2y
set n2y=o2y
set l2y=c2y
set b2y=o2y
call SetPlayerState(a2y,n2y,GetPlayerState(l2y,b2y)+O2y)
set hr[P4y]=hr[P4y]+3
set Fr[P4y]=Fr[P4y]+3
set Cr[P4y]=Cr[P4y]+3
endif
set P4y=P4y+1
endloop
endif
set Z4y=null
set U4y=null
set A4y=null
set D4y=null
set H4y=null
set J4y=null
set K4y=null
set L4y=null
set C4y=null
set V4y=null
set N4y=null
set M4y=null
set w2y=null
set u2y=null
set r2y=null
set s2y=null
set t2y=null
set i2y=null
set c2y=null
set o2y=null
set l2y=null
set b2y=null
set p2y=null
set e2y=null
set a2y=null
set n2y=null
endfunction
function d7l takes nothing returns nothing
local integer i7l=GetResearched()
local unit S7l
local integer c7l
local unit o7l
local unit O7l
local integer l7l
local player b7l
local unit y7l
local unit p7l
local integer e7l
local integer q7l
local player a7l
local unit n7l
if i7l==$52756578 then
set S7l=GetTriggerUnit()
set o7l=S7l
set c7l=GetPlayerTechCount(GetOwningPlayer(o7l),$52756578,true)
if c7l==1 then
set y7l=S7l
set b7l=GetOwningPlayer(y7l)
set O7l=c[GetPlayerId(b7l)]
set l7l=$41303034
call UnitAddAbility(O7l,l7l)
else
set n7l=S7l
set a7l=GetOwningPlayer(n7l)
set p7l=c[GetPlayerId(a7l)]
set e7l=$41303034
set q7l=c7l
call SetUnitAbilityLevel(p7l,e7l,q7l)
endif
endif
set S7l=null
set o7l=null
set O7l=null
set b7l=null
set y7l=null
set p7l=null
set a7l=null
set n7l=null
endfunction
function d8S takes nothing returns boolean
return true
endfunction
function d9e takes nothing returns nothing
local unit y9e=GetDyingUnit()
local unit q9e=y9e
local real p9e
local real e9e
local unit a9e
local unit n9e
if GetUnitTypeId(q9e)==$6F303445 then
set a9e=y9e
set p9e=GetUnitX(a9e)
set n9e=y9e
set e9e=GetUnitY(n9e)
call DestroyEffect(AddSpecialEffect("units\\undead\\PlagueCloud\\PlagueCloud.mdl",p9e,e9e))
endif
set y9e=null
set q9e=null
set a9e=null
set n9e=null
endfunction
function dAt takes nothing returns boolean
local playerunitevent eAt=EVENT_PLAYER_UNIT_ATTACKED
local code qAt=c7
local playerunitevent aAt
local code nAt
call emO(eAt,null,qAt,null)
set aAt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set nAt=o7
call emO(aAt,null,nAt,null)
set eAt=null
set aAt=null
return true
endfunction
function dBc takes nothing returns nothing
local unit vVc=GetAttacker()
local unit EVc=vVc
local integer mVc
local unit QVc
local unit WVc
local unit ZVc
local unit UVc
local unit IVc
local unit PVc
local unit AVc
local unit DVc
local unit HVc
local unit JVc
local unit KVc
local unit LVc
local real XVc
local unit CVc
local integer VVc
local unit BVc
local integer NVc
local integer MVc
local unit wBc
local unit uBc
local string rBc
local real sBc
local real tBc
local unit iBc
local unit SBc
local boolean cBc
local boolean oBc
local boolean OBc
local boolean lBc
local boolean bBc
local integer yBc
local player pBc
local real eBc
local real qBc
local real aBc
local real nBc
if GetUnitTypeId(EVc)==$6F303359 then
set cBc=true
else
set ZVc=vVc
set cBc=GetUnitTypeId(ZVc)==$68303153
endif
if cBc then
set oBc=true
else
set UVc=vVc
set oBc=GetUnitTypeId(UVc)==$6F303331
endif
if oBc then
set OBc=true
else
set IVc=vVc
set OBc=GetUnitTypeId(IVc)==$6F303341
endif
if OBc then
set lBc=true
else
set PVc=vVc
set lBc=GetUnitTypeId(PVc)==$6E303239
endif
if lBc then
set AVc=vVc
set bBc=GetPlayerTechCount(GetOwningPlayer(AVc),$52303639,true)>0
else
set bBc=false
endif
if bBc then
set mVc=GetRandomInt(1,100)
set yBc=mVc
set DVc=vVc
if yBc<=8*GetPlayerTechCount(GetOwningPlayer(DVc),$52303639,true) then
set QVc=GetTriggerUnit()
set HVc=vVc
set pBc=GetOwningPlayer(HVc)
set JVc=vVc
set eBc=GetUnitX(JVc)
set KVc=vVc
set WVc=CreateUnit(pBc,$75303030,eBc,GetUnitY(KVc),GetUnitFacing(vVc))
set LVc=WVc
set XVc=5.
call UnitApplyTimedLife(LVc,$42544C46,XVc)
set CVc=WVc
set VVc=$41313043
call UnitAddAbility(CVc,VVc)
set BVc=WVc
set NVc=$41313043
set wBc=vVc
set MVc=GetPlayerTechCount(GetOwningPlayer(wBc),$52303639,true)
call SetUnitAbilityLevel(BVc,NVc,MVc)
set uBc=WVc
set rBc="breathoffire"
set iBc=QVc
set qBc=GetUnitX(iBc)
set SBc=QVc
set aBc=qBc
set nBc=GetUnitY(SBc)
set sBc=aBc
set tBc=nBc
call IssuePointOrder(uBc,rBc,sBc,tBc)
endif
endif
set vVc=null
set QVc=null
set WVc=null
set EVc=null
set ZVc=null
set UVc=null
set IVc=null
set PVc=null
set AVc=null
set DVc=null
set HVc=null
set JVc=null
set KVc=null
set LVc=null
set CVc=null
set BVc=null
set wBc=null
set uBc=null
set iBc=null
set SBc=null
set pBc=null
endfunction
function dFt takes nothing returns boolean
local trigger bFt
local playerunitevent yFt
local trigger pFt
local playerunitevent eFt
local integer qFt
local trigger aFt
local code nFt
set ZY=CreateTrigger()
set bFt=ZY
set yFt=EVENT_PLAYER_UNIT_ATTACKED
set pFt=bFt
set eFt=yFt
set qFt=0
loop
call TriggerRegisterPlayerUnitEvent(pFt,Player(qFt),eFt,null)
set qFt=qFt+1
exitwhen qFt==bj_MAX_PLAYER_SLOTS
endloop
set aFt=ZY
set nFt=tww_3295
call TriggerAddAction(aFt,nFt)
set bFt=null
set yFt=null
set pFt=null
set eFt=null
set aFt=null
return true
endfunction
function dFu takes nothing returns boolean
local trigger eFu
local trigger qFu
local playerunitevent aFu
local integer nFu
set Fd=CreateTrigger()
set eFu=Fd
call DisableTrigger(eFu)
set qFu=Fd
set aFu=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nFu=0
loop
call TriggerRegisterPlayerUnitEvent(qFu,Player(nFu),aFu,null)
set nFu=nFu+1
exitwhen nFu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Fd,H7)
set eFu=null
set qFu=null
set aFu=null
return true
endfunction
function dGi takes nothing returns nothing
set tq=tq+.03
endfunction
function dHp takes nothing returns nothing
local player KDp=Player(0)
local playerstate LDp=PLAYER_STATE_RESOURCE_FOOD_USED
local integer HDp
local integer JDp
local player XDp
local playerstate CDp
local integer VDp
local player BDp
local integer NDp
local player MDp
local playerstate wHp
local integer uHp
local player rHp
local playerstate sHp
local player tHp
local playerstate iHp
local integer SHp
local player cHp
local playerstate oHp
local integer OHp
local player lHp
local playerstate bHp
local texttag yHp
local string pHp
local real eHp
local integer qHp
local player aHp
local playerstate nHp
if GetPlayerState(KDp,LDp)==60 then
set HDp=0
loop
exitwhen HDp>3
set XDp=Player(HDp)
set CDp=PLAYER_STATE_RESOURCE_FOOD_USED
set VDp=0
call SetPlayerState(XDp,CDp,VDp)
set BDp=Player(HDp)
set NDp=1
set MDp=BDp
set wHp=PLAYER_STATE_RESOURCE_LUMBER
set uHp=NDp
set aHp=MDp
set nHp=wHp
set rHp=MDp
set sHp=wHp
call SetPlayerState(aHp,nHp,GetPlayerState(rHp,sHp)+uHp)
set HDp=HDp+1
endloop
endif
set JDp=0
loop
exitwhen JDp>3
set tHp=Player(JDp)
set iHp=PLAYER_STATE_RESOURCE_FOOD_CAP
set SHp=60
call SetPlayerState(tHp,iHp,SHp)
set cHp=Player(JDp)
set oHp=PLAYER_STATE_RESOURCE_FOOD_USED
set lHp=Player(JDp)
set bHp=PLAYER_STATE_RESOURCE_FOOD_USED
set OHp=GetPlayerState(lHp,bHp)+1
call SetPlayerState(cHp,oHp,OHp)
set JDp=JDp+1
endloop
if il>0 then
set il=il-1
set yHp=tl
set qHp=il
set pHp=I2S(qHp)
set eHp=13.
call SetTextTagText(yHp,pHp,eHp*.0023)
endif
set KDp=null
set LDp=null
set XDp=null
set CDp=null
set BDp=null
set MDp=null
set wHp=null
set rHp=null
set sHp=null
set tHp=null
set iHp=null
set cHp=null
set oHp=null
set lHp=null
set bHp=null
set yHp=null
set aHp=null
set nHp=null
endfunction
function Zul takes player Wwl,unit Ewl returns nothing
local player Iwl=Wwl
local integer Zwl=GetPlayerId(Iwl)
local unit Pwl=Ewl
local integer Awl=$554C564C
local integer Uwl=GetUnitAbilityLevel(Pwl,Awl)
local unit Dwl
local integer Hwl
local unit Jwl
local integer Kwl
local unit Lwl
local integer Xwl
local unit Cwl
local integer Vwl
local integer Bwl
local unit Nwl
local integer Mwl
local unit wul
local integer uul
local integer rul
local unit sul
local integer tul
local integer iul
local unit Sul
local integer cul
local unit oul
local integer Oul
local integer lul
local unit bul
local integer yul
local unit pul
local integer eul
local integer qul
local unit aul
local integer nul
local unit dul
local integer ful
local integer Rul
local unit Tul
local unit Yul
local integer Gul
local unit gul
local unit hul
local integer Ful
local unit kul
local integer jul
local unit xul
local integer vul
local unit mul
local integer Qul
local boolean Wul
local boolean Eul
if Iw[Zwl]==true then
set Dwl=O[Zwl]
set Hwl=$534C4F57
call UnitAddAbility(Dwl,Hwl)
endif
if Pw[Zwl]==true then
set Jwl=l[Zwl]
set Kwl=$534C4F57
call UnitAddAbility(Jwl,Kwl)
endif
if Uw[Zwl]==true then
set Lwl=b[Zwl]
set Xwl=$534C4F57
call UnitAddAbility(Lwl,Xwl)
endif
if Ewl==b[Zwl] then
set Kw[Zwl]=Kw[Zwl]+1
endif
if Ewl==l[Zwl] then
set Lw[Zwl]=Lw[Zwl]+1
endif
if Ewl==O[Zwl] then
set Xw[Zwl]=Xw[Zwl]+1
endif
if Uwl==1 then
set Cwl=Ewl
set Vwl=$554C564C
set Bwl=2
call SetUnitAbilityLevel(Cwl,Vwl,Bwl)
set Nwl=Ewl
set Mwl=$41303043
if GetUnitAbilityLevel(Nwl,Mwl)>0 then
set wul=Ewl
set uul=$41303043
set rul=2
call SetUnitAbilityLevel(wul,uul,rul)
endif
call AddUnitToStock(Ewl,J[Zwl],2,2)
call AddUnitToStock(Ewl,r[Zwl],1,1)
call AddUnitToStock(Ewl,s[Zwl],1,1)
call AddUnitToStock(Ewl,t[Zwl],1,1)
endif
if Uwl==2 then
set sul=Ewl
set tul=$554C564C
set iul=3
call SetUnitAbilityLevel(sul,tul,iul)
set Sul=Ewl
set cul=$41303043
if GetUnitAbilityLevel(Sul,cul)>0 then
set oul=Ewl
set Oul=$41303043
set lul=3
call SetUnitAbilityLevel(oul,Oul,lul)
endif
call AddUnitToStock(Ewl,K[Zwl],1,2)
call AddUnitToStock(Ewl,i[Zwl],1,1)
endif
if Uwl==3 then
set bul=Ewl
set yul=$54344152
call UnitAddAbility(bul,yul)
set pul=Ewl
set eul=$554C564C
set qul=4
call SetUnitAbilityLevel(pul,eul,qul)
set aul=Ewl
set nul=$41303043
if GetUnitAbilityLevel(aul,nul)>0 then
set dul=Ewl
set ful=$41303043
set Rul=4
call SetUnitAbilityLevel(dul,ful,Rul)
endif
call AddUnitToStock(Ewl,L[Zwl],1,1)
endif
if o[Zwl]==Ewl then
set Tul=Ewl
set Wul=GetUnitTypeId(Tul)==m[Zwl]
else
set Wul=false
endif
if Wul then
call SetPlayerTechMaxAllowed(Wwl,r[Zwl],20)
call SetPlayerTechMaxAllowed(Wwl,s[Zwl],20)
call SetPlayerTechMaxAllowed(Wwl,t[Zwl],20)
set Yul=Ewl
set Gul=w[Zwl]
call UnitAddAbility(Yul,Gul)
endif
if o[Zwl]==Ewl then
set gul=Ewl
set Eul=GetUnitTypeId(gul)==Q[Zwl]
else
set Eul=false
endif
if Eul then
call SetPlayerTechMaxAllowed(Wwl,i[Zwl],20)
set hul=Ewl
set Ful=w[Zwl]
if GetUnitAbilityLevel(hul,Ful)==0 then
set kul=Ewl
set jul=w[Zwl]
call UnitAddAbility(kul,jul)
endif
if x[Zwl]==$4132344C then
set xul=Ewl
set vul=j[Zwl]
call UnitRemoveAbility(xul,vul)
set mul=Ewl
set Qul=x[Zwl]
call UnitAddAbility(mul,Qul)
endif
endif
set Iwl=null
set Pwl=null
set Dwl=null
set Jwl=null
set Lwl=null
set Cwl=null
set Nwl=null
set wul=null
set sul=null
set Sul=null
set oul=null
set bul=null
set pul=null
set aul=null
set dul=null
set Tul=null
set Yul=null
set gul=null
set hul=null
set kul=null
set xul=null
set mul=null
endfunction
function dHw takes nothing returns nothing
call Zul(GetOwningPlayer(GetTriggerUnit()),GetTriggerUnit())
endfunction
function dIi takes nothing returns boolean
local trigger yIi
local trigger pIi
local rect eIi
local region qIi
local trigger aIi
local boolexpr nIi
set HO=CreateTrigger()
set yIi=HO
call DisableTrigger(yIi)
set pIi=HO
set eIi=bj_mapInitialPlayableArea
set qIi=CreateRegion()
call RegionAddRect(qIi,eIi)
call TriggerRegisterEnterRegion(pIi,qIi,null)
set aIi=HO
set nIi=Condition(kM)
call TriggerAddCondition(aIi,nIi)
set yIi=null
set pIi=null
set eIi=null
set qIi=null
set aIi=null
set nIi=null
return true
endfunction
function dJc takes nothing returns boolean
local playerunitevent eJc
local code qJc
local playerunitevent aJc
local code nJc
set lg=null
set eJc=EVENT_PLAYER_UNIT_DEATH
set qJc=Auw
call emO(eJc,null,qJc,null)
set aJc=EVENT_PLAYER_UNIT_SPELL_CAST
set nJc=Duw
call emO(aJc,null,nJc,null)
set eJc=null
set aJc=null
return true
endfunction
function dKl takes nothing returns boolean
local trigger lKl
local trigger bKl
local playerunitevent yKl
local integer pKl
local trigger eKl
local trigger qKl
local playerunitevent aKl
local integer nKl
set WO=CreateTrigger()
set EO=CreateTrigger()
set ZO=null
set lKl=WO
call DisableTrigger(lKl)
set bKl=WO
set yKl=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set pKl=0
loop
call TriggerRegisterPlayerUnitEvent(bKl,Player(pKl),yKl,null)
set pKl=pKl+1
exitwhen pKl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(WO,fM)
set eKl=EO
call DisableTrigger(eKl)
set qKl=EO
set aKl=EVENT_PLAYER_UNIT_DEATH
set nKl=0
loop
call TriggerRegisterPlayerUnitEvent(qKl,Player(nKl),aKl,null)
set nKl=nKl+1
exitwhen nKl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(EO,RM)
set lKl=null
set bKl=null
set yKl=null
set eKl=null
set qKl=null
set aKl=null
return true
endfunction
function dLr takes nothing returns boolean
local unit wLr=GetFilterUnit()
local unit uLr=wLr
local unit rLr
local unit sLr
local unit tLr
local player iLr
local unit SLr
local unit cLr
local integer oLr
local unit OLr
local integer lLr
local unit bLr
local unittype yLr
local boolean pLr
local boolean eLr
local boolean qLr
local boolean aLr
local boolean nLr
if UnitAlive(uLr)==true then
set rLr=wLr
set sLr=GetSpellAbilityUnit()
if rLr!=null and sLr!=null then
set tLr=rLr
set SLr=sLr
set iLr=GetOwningPlayer(SLr)
set pLr=tLr!=null and IsUnitAlly(tLr,iLr)
else
set pLr=false
endif
set eLr=pLr==true
else
set eLr=false
endif
if eLr then
set cLr=wLr
set oLr=$42303339
set qLr=GetUnitAbilityLevel(cLr,oLr)==0
else
set qLr=false
endif
if qLr then
set OLr=wLr
set lLr=$42303341
set aLr=GetUnitAbilityLevel(OLr,lLr)==0
else
set aLr=false
endif
if aLr then
set bLr=wLr
set yLr=UNIT_TYPE_ANCIENT
set nLr=IsUnitType(bLr,yLr)==false
else
set nLr=false
endif
set wLr=null
set uLr=null
set rLr=null
set sLr=null
set tLr=null
set iLr=null
set SLr=null
set cLr=null
set OLr=null
set bLr=null
set yLr=null
return nLr
endfunction
function dMp takes nothing returns boolean
local trigger yMp
local trigger pMp
local rect eMp
local region qMp
local trigger aMp
local boolexpr nMp
set Ty=CreateTrigger()
set yMp=Ty
call DisableTrigger(yMp)
set pMp=Ty
set eMp=bj_mapInitialPlayableArea
set qMp=CreateRegion()
call RegionAddRect(qMp,eMp)
call TriggerRegisterEnterRegion(pMp,qMp,null)
set aMp=Ty
set nMp=Condition(x1)
call TriggerAddCondition(aMp,nMp)
set yMp=null
set pMp=null
set eMp=null
set qMp=null
set aMp=null
set nMp=null
return true
endfunction
function dNO takes nothing returns boolean
local trigger eNO
local trigger qNO
local playerunitevent aNO
local integer nNO
set XG=CreateTrigger()
set eNO=XG
call DisableTrigger(eNO)
set qNO=XG
set aNO=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nNO=0
loop
call TriggerRegisterPlayerUnitEvent(qNO,Player(nNO),aNO,null)
set nNO=nNO+1
exitwhen nNO==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(XG,auw)
set eNO=null
set qNO=null
set aNO=null
return true
endfunction
function dOe takes nothing returns boolean
local trigger yOe
local rect pOe
local region eOe
local trigger qOe
local boolexpr aOe
local trigger nOe
set RG=CreateTrigger()
call CreateTrigger()
set yOe=RG
set pOe=bj_mapInitialPlayableArea
set eOe=CreateRegion()
call RegionAddRect(eOe,pOe)
call TriggerRegisterEnterRegion(yOe,eOe,null)
set qOe=RG
set aOe=Condition(Uww)
call TriggerAddCondition(qOe,aOe)
set nOe=RG
call DisableTrigger(nOe)
set yOe=null
set pOe=null
set eOe=null
set qOe=null
set aOe=null
set nOe=null
return true
endfunction
function dSi takes nothing returns nothing
local integer iSi=GetResearched()
local unit SSi
local integer cSi
local unit oSi
local unit OSi
local integer lSi
local player bSi
local unit ySi
local unit pSi
local integer eSi
local integer qSi
local player aSi
local unit nSi
if iSi==$52756766 then
set SSi=GetTriggerUnit()
set oSi=SSi
set cSi=GetPlayerTechCount(GetOwningPlayer(oSi),$52756766,true)
if cSi==1 then
set ySi=SSi
set bSi=GetOwningPlayer(ySi)
set OSi=c[GetPlayerId(bSi)]
set lSi=$41303034
call UnitAddAbility(OSi,lSi)
else
set nSi=SSi
set aSi=GetOwningPlayer(nSi)
set pSi=c[GetPlayerId(aSi)]
set eSi=$41303034
set qSi=cSi
call SetUnitAbilityLevel(pSi,eSi,qSi)
endif
endif
set SSi=null
set oSi=null
set OSi=null
set bSi=null
set ySi=null
set pSi=null
set aSi=null
set nSi=null
endfunction
function dXu takes nothing returns nothing
local unit yXu=GetTriggerUnit()
local unit eXu=yXu
local integer pXu
local unit qXu
local integer aXu
local unit nXu
if GetUnitTypeId(eXu)==$4F303439 then
set qXu=yXu
set aXu=$41323339
set pXu=GetUnitAbilityLevel(qXu,aXu)
set nXu=yXu
call SetPlayerTechResearched(GetOwningPlayer(nXu),$5230384E,pXu)
endif
set yXu=null
set eXu=null
set qXu=null
set nXu=null
endfunction
function d_t takes nothing returns boolean
return IsUnitIllusion(GetDyingUnit())==false and GetUnitAbilityLevel(GetDyingUnit(),$416C6F63)==0 and GetUnitAbilityLevel(GetDyingUnit(),$4176756C)==0
endfunction
function dco takes nothing returns nothing
local unit cco=GetTriggerUnit()
local unit bco=cco
local integer oco=GetUnitTypeId(bco)
local unit yco=cco
local player Oco=GetOwningPlayer(yco)
local player pco=Oco
local integer lco=GetPlayerId(pco)
local trigger eco
local trigger qco
local trigger aco
local trigger nco
if oco==$68626C61 then
call SetPlayerTechResearched(Oco,$52303247,1)
call SetPlayerTechResearched(Player(lco+4),$52303247,1)
set eco=eG
call EnableTrigger(eco)
endif
if oco==$68637477 then
set qco=wT
call EnableTrigger(qco)
call SetPlayerTechResearched(Oco,$52303831,1)
call RemoveUnitFromStock(O[lco],A[lco])
call RemoveUnitFromStock(b[lco],A[lco])
call RemoveUnitFromStock(l[lco],A[lco])
set A[lco]=$78303132
call AddUnitToStock(O[lco],A[lco],1,3)
call AddUnitToStock(b[lco],A[lco],1,3)
call AddUnitToStock(l[lco],A[lco],1,3)
endif
if oco==$65303049 then
call SetPlayerTechResearched(Oco,$52303831,1)
call RemoveUnitFromStock(O[lco],A[lco])
call RemoveUnitFromStock(b[lco],A[lco])
call RemoveUnitFromStock(l[lco],A[lco])
set A[lco]=$65303048
call AddUnitToStock(O[lco],A[lco],1,3)
call AddUnitToStock(b[lco],A[lco],1,3)
call AddUnitToStock(l[lco],A[lco],1,3)
endif
if oco==$6E6D7233 then
set aco=np
call EnableTrigger(aco)
call RemoveUnitFromStock(O[lco],D[lco])
call RemoveUnitFromStock(b[lco],D[lco])
call RemoveUnitFromStock(l[lco],D[lco])
set D[lco]=$6E626565
call AddUnitToStock(O[lco],D[lco],1,3)
call AddUnitToStock(b[lco],D[lco],1,3)
call AddUnitToStock(l[lco],D[lco],1,3)
endif
if oco==$6E637432 then
call RemoveUnitFromStock(O[lco],H[lco])
call RemoveUnitFromStock(b[lco],H[lco])
call RemoveUnitFromStock(l[lco],H[lco])
set H[lco]=$6E686577
call AddUnitToStock(O[lco],H[lco],1,3)
call AddUnitToStock(b[lco],H[lco],1,3)
call AddUnitToStock(l[lco],H[lco],1,3)
endif
if oco==$6861726D then
set J[lco]=$68626F74
endif
if oco==$68677261 then
set nco=np
call EnableTrigger(nco)
set K[lco]=$6E777331
endif
if oco==$6E6D6572 then
set K[lco]=$65303043
endif
if oco==$6E646368 then
set L[lco]=$68627368
endif
if oco==$78303134 then
call SetPlayerTechResearched(Oco,$52303533,1)
call SetPlayerTechResearched(Player(lco+4),$52303533,1)
endif
set cco=null
set Oco=null
set bco=null
set yco=null
set pco=null
set eco=null
set qco=null
set aco=null
set nco=null
endfunction
function dgc takes nothing returns boolean
local playerunitevent agc=EVENT_PLAYER_HERO_LEVEL
local code ngc=R1
call emO(agc,null,ngc,null)
set agc=null
return true
endfunction
function dkp takes nothing returns boolean
local trigger ykp
local trigger pkp
local rect ekp
local region qkp
local trigger akp
local boolexpr nkp
set Bb=CreateTrigger()
set ykp=Bb
call DisableTrigger(ykp)
set pkp=Bb
set ekp=bj_mapInitialPlayableArea
set qkp=CreateRegion()
call RegionAddRect(qkp,ekp)
call TriggerRegisterEnterRegion(pkp,qkp,null)
set akp=Bb
set nkp=Condition(B3)
call TriggerAddCondition(akp,nkp)
set ykp=null
set pkp=null
set ekp=null
set qkp=null
set akp=null
set nkp=null
return true
endfunction
function dkt takes nothing returns nothing
local unit ckt=GetDyingUnit()
local unit okt=ckt
local unittype Okt=UNIT_TYPE_STRUCTURE
local group lkt
local unit bkt
local group ykt
local unit pkt
local group ekt
local unit qkt
local group akt
local unit nkt
if IsUnitType(okt,Okt)==true then
set lkt=sO
set bkt=ckt
call GroupRemoveUnit(lkt,bkt)
set ykt=rO
set pkt=ckt
call GroupRemoveUnit(ykt,pkt)
endif
if IsUnitInGroup(ckt,wO)==true then
set ekt=wO
set qkt=ckt
call GroupRemoveUnit(ekt,qkt)
endif
if IsUnitInGroup(ckt,uO)==true then
set akt=uO
set nkt=ckt
call GroupRemoveUnit(akt,nkt)
endif
set ckt=null
set okt=null
set Okt=null
set lkt=null
set bkt=null
set ykt=null
set pkt=null
set ekt=null
set qkt=null
set akt=null
set nkt=null
endfunction
function doi takes nothing returns boolean
return true
endfunction
function dpS takes nothing returns boolean
local playerunitevent apS=EVENT_PLAYER_UNIT_DEATH
local code npS=hsw
call emO(apS,null,npS,null)
set apS=null
return true
endfunction
function dpc takes nothing returns boolean
local playerunitevent apc=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code npc=F0w
call emO(apc,null,npc,null)
set apc=null
return true
endfunction
function dry takes nothing returns nothing
local integer yry=GetResearched()
local player pry
local integer ery
local player qry
local trigger ary
local trigger nry
if yry==$524D3165 then
set pry=GetTriggerPlayer()
set ery=$524D3165
set qry=pry
if GetPlayerTechCount(qry,ery,true)==1 then
set ary=GT
call EnableTrigger(ary)
endif
endif
if yry==$524D316A then
set nry=ql
call EnableTrigger(nry)
endif
set pry=null
set qry=null
set ary=null
set nry=null
endfunction
function dsb takes nothing returns nothing
local unit isb=GetEnteringUnit()
local unit csb=isb
local integer Ssb=GetUnitTypeId(csb)
local unit osb
local integer Osb
local unit lsb
local integer bsb
local unit ysb
local integer psb
local unit esb
local integer qsb
local unit asb
local integer nsb
if Ssb==$6E62616E or Ssb==$6E676E77 or Ssb==$6F737077 or Ssb==$6F746175 then
set osb=isb
set Osb=$41304A31
call UnitAddAbility(osb,Osb)
endif
if Ssb==$6F746175 then
set lsb=isb
set bsb=$41304A43
call UnitAddAbility(lsb,bsb)
endif
if Ssb==$6F737077 then
set ysb=isb
set psb=$41303957
call UnitAddAbility(ysb,psb)
endif
if Ssb==$6E676E77 then
set esb=isb
set qsb=$41304231
call UnitAddAbility(esb,qsb)
endif
if Ssb==$6E62616E then
set asb=isb
set nsb=$41304A44
call UnitAddAbility(asb,nsb)
endif
set isb=null
set csb=null
set osb=null
set lsb=null
set ysb=null
set esb=null
set asb=null
endfunction
function dxl takes nothing returns nothing
local unit nxl=GetDyingUnit()
if GetUnitTypeId(nxl)==$4F303430 then
set Qp=false
endif
set nxl=null
endfunction
function dxs takes nothing returns nothing
local integer exs=GetResearched()
local player qxs
local player axs
local trigger nxs
if exs==$5230344B then
set qxs=GetTriggerPlayer()
if GetPlayerTechCount(qxs,$5230344B,true)==1 then
set axs=qxs
set X[GetPlayerId(axs)]=$6E667472
set nxs=dy
call EnableTrigger(nxs)
endif
endif
set qxs=null
set axs=null
set nxs=null
endfunction
function dxy takes nothing returns boolean
local playerunitevent lxy
local code bxy
local trigger yxy
local rect pxy
local region exy
local trigger qxy
local boolexpr axy
local trigger nxy
set Iy=CreateTrigger()
set lxy=EVENT_PLAYER_HERO_LEVEL
set bxy=B1
call emO(lxy,null,bxy,null)
set yxy=Iy
set pxy=bj_mapInitialPlayableArea
set exy=CreateRegion()
call RegionAddRect(exy,pxy)
call TriggerRegisterEnterRegion(yxy,exy,null)
set qxy=Iy
set axy=Condition(N1)
call TriggerAddCondition(qxy,axy)
set nxy=Iy
call DisableTrigger(nxy)
set lxy=null
set yxy=null
set pxy=null
set exy=null
set qxy=null
set axy=null
set nxy=null
return true
endfunction
function e7S takes nothing returns nothing
local unit w7S=GetEnteringUnit()
local unit t7S=w7S
local integer u7S=GetUnitTypeId(t7S)
local unit i7S=w7S
local player r7S=GetOwningPlayer(i7S)
local integer s7S
local unit S7S
local integer c7S
local unit o7S
local integer O7S
local unit l7S
local integer b7S
local unit y7S
local integer p7S
if u7S==$686B6E69 or u7S==$6E6A6B73 or u7S==$68303236 and GetPlayerTechCount(r7S,$52303033,true)>0 then
set s7S=GetPlayerTechCount(r7S,$52303033,true)
if s7S==1 then
set S7S=w7S
set c7S=$41303044
call UnitAddAbility(S7S,c7S)
elseif s7S==2 then
set o7S=w7S
set O7S=$41303556
call UnitAddAbility(o7S,O7S)
elseif s7S==3 then
set l7S=w7S
set b7S=$41303253
call UnitAddAbility(l7S,b7S)
else
set y7S=w7S
set p7S=$4130494B
call UnitAddAbility(y7S,p7S)
endif
endif
set w7S=null
set r7S=null
set t7S=null
set i7S=null
set S7S=null
set o7S=null
set l7S=null
set y7S=null
endfunction
function PrO takes unit brO,player yrO returns boolean
local unit prO=brO
local widget erO=prO
local unit qrO
local unittype arO
local player nrO
local player drO
local unit frO
local unit RrO
local integer TrO
local unit YrO
local integer GrO
local unit grO
local integer hrO
local unit FrO
local unittype krO
local unit jrO
local unit xrO
local boolean vrO
local boolean mrO
local boolean QrO
local boolean WrO
local boolean ErO
local boolean ZrO
local boolean UrO
local boolean IrO
if GetWidgetLife(erO)<.405 then
set vrO=true
else
set qrO=prO
set arO=UNIT_TYPE_DEAD
set vrO=IsUnitType(qrO,arO)
endif
if vrO==false then
set frO=brO
set nrO=GetOwningPlayer(frO)
set drO=yrO
set mrO=IsPlayerEnemy(nrO,drO)
else
set mrO=false
endif
if mrO then
set RrO=brO
set TrO=$416C6F63
set QrO=GetUnitAbilityLevel(RrO,TrO)==0
else
set QrO=false
endif
if QrO then
set YrO=brO
set GrO=$4176756C
set WrO=GetUnitAbilityLevel(YrO,GrO)==0
else
set WrO=false
endif
if WrO then
set grO=brO
set hrO=$42637963
set ErO=GetUnitAbilityLevel(grO,hrO)==0
else
set ErO=false
endif
if ErO then
set FrO=brO
set krO=UNIT_TYPE_STRUCTURE
set ZrO=not IsUnitType(FrO,krO)
else
set ZrO=false
endif
if ZrO then
set jrO=brO
if GetUnitTypeId(jrO)==$75303030 then
set UrO=true
else
set xrO=brO
set UrO=GetUnitTypeId(xrO)==$7864756D
endif
set IrO=not UrO
else
set IrO=false
endif
set prO=null
set erO=null
set qrO=null
set arO=null
set nrO=null
set drO=null
set frO=null
set RrO=null
set YrO=null
set grO=null
set FrO=null
set krO=null
set jrO=null
set xrO=null
return IrO
endfunction
function e8r takes nothing returns boolean
local unit t8r=GetFilterUnit()
local unit i8r=VG
local unit S8r=t8r
local unittype c8r=UNIT_TYPE_HERO
local unit o8r
local unit O8r
local unittype l8r
local unit b8r
local boolean y8r
local boolean p8r
if IsUnitType(S8r,c8r) then
set b8r=t8r
set o8r=i8r
set y8r=PrO(b8r,GetOwningPlayer(o8r))
else
set y8r=false
endif
if y8r then
set O8r=t8r
set l8r=UNIT_TYPE_ANCIENT
set p8r=IsUnitType(O8r,l8r)
else
set p8r=false
endif
set t8r=null
set i8r=null
set S8r=null
set c8r=null
set o8r=null
set O8r=null
set l8r=null
set b8r=null
return p8r
endfunction
function eBS takes nothing returns boolean
local unit OBS=GetTriggerUnit()
local unit bBS=OBS
local integer lBS=GetUnitTypeId(bBS)
local unit yBS=OBS
local boolean pBS=GetOwningPlayer(yBS)==Ru and lBS!=$75303031 and lBS!=$75303030 and lBS!=$75303032 and lBS!=$75303033 and lBS!=$75303034 and lBS!=$75303035 and lBS!=$75303036 and lBS!=$75303037 and lBS!=$75303131
set OBS=null
set bBS=null
set yBS=null
return pBS
endfunction
function rZO takes string TEO returns nothing
local integer YEO
local unit GEO
local integer gEO
local group hEO
local filterfunc FEO
local unit kEO
local group jEO
local unit xEO
local integer vEO
local unit mEO
local unit QEO
local integer WEO
local group EEO
local group ZEO
local unit UEO
local unit IEO
local real PEO
local unit AEO
local unitstate DEO
local real HEO
local unit JEO
local unitstate KEO
local group LEO
local boolexpr XEO
local string CEO
local integer VEO
local real BEO
local integer NEO
local string MEO
local unit wZO
local unitstate uZO
set aW[qW]=TEO
set qW=qW+1
set YEO=GetSpellAbilityId()
if YEO==$41303447 then
set GEO=GetSpellAbilityUnit()
set mEO=GEO
set wq=GetOwningPlayer(mEO)
set QEO=GEO
set WEO=$41303447
set gEO=GetUnitAbilityLevel(QEO,WEO)
set hEO=CreateGroup()
set FEO=Filter(Q2)
call GroupEnumUnitsInRange(hEO,GetSpellTargetX(),GetSpellTargetY(),500.,FEO)
set jEO=hEO
loop
set EEO=jEO
exitwhen not (FirstOfGroup(EEO)!=null)
set ZEO=jEO
set UEO=FirstOfGroup(ZEO)
call GroupRemoveUnit(ZEO,UEO)
set kEO=UEO
set IEO=kEO
set PEO=I2R(300+25*gEO)
set AEO=IEO
set DEO=UNIT_STATE_LIFE
set HEO=PEO
set wZO=AEO
set uZO=DEO
set JEO=AEO
set KEO=DEO
call SetUnitState(wZO,uZO,GetUnitState(JEO,KEO)+HEO)
call DestroyEffect(AddSpecialEffectTarget("Heal Orange.mdl",kEO,"origin"))
endloop
set LEO=hEO
call DestroyGroup(LEO)
set XEO=FEO
call DestroyBoolExpr(XEO)
endif
if YEO==$41305948 then
set xEO=GetSpellAbilityUnit()
set CEO="when calling alloc_CallbackSingle_doAfter_GalagrondRainbow in GalagrondRainbow, line 458"
set aW[qW]=CEO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set VEO=fF
set RF[VEO]=711
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_GalagrondRainbow.","when calling error in GalagrondRainbow, line 458")
set VEO=0
endif
else
set dF=dF-1
set VEO=nF[dF]
set RF[VEO]=711
endif
set qW=qW-1
set vEO=VEO
set px[vEO]=xEO
set BEO=3.
set NEO=vEO
set MEO="when calling doAfter in GalagrondRainbow, line 458"
set aW[qW]=MEO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),BEO,NEO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set GEO=null
set hEO=null
set FEO=null
set kEO=null
set jEO=null
set xEO=null
set mEO=null
set QEO=null
set EEO=null
set ZEO=null
set UEO=null
set IEO=null
set AEO=null
set DEO=null
set JEO=null
set KEO=null
set LEO=null
set XEO=null
set wZO=null
set uZO=null
endfunction
function eBp takes nothing returns nothing
set qW=0
call rZO("via function reference GalagrondRainbow, line 479")
endfunction
function eDl takes nothing returns nothing
local unit vAl=GetTriggerUnit()
local unit QAl=vAl
local player mAl=GetOwningPlayer(QAl)
local unit WAl
local string EAl
local real ZAl
local real UAl
local unit IAl
local unittype PAl
local unit AAl
local string DAl
local real HAl
local real JAl
local unit KAl
local unittype LAl
local unit XAl
local string CAl
local real VAl
local real BAl
local unit NAl
local unittype MAl
local unit wDl
local string uDl
local real rDl
local real sDl
local unit tDl
local unittype iDl
local real SDl
local real cDl
local real oDl
local real ODl
local real lDl
local real bDl
local real yDl
local real pDl
if mAl==du then
if (Ew[2]==false and Ew[3]==false) or (Ew[1]==true and Ew[2]==true) then
set WAl=vAl
set EAl="attack"
set SDl=Qw[18]
set cDl=Ww[18]
set ZAl=SDl
set UAl=cDl
call IssuePointOrder(WAl,EAl,ZAl,UAl)
set IAl=vAl
set PAl=UNIT_TYPE_HERO
if IsUnitType(IAl,PAl) then
call SaveInteger(qu,GetHandleId(vAl),$6D6F7665,18)
endif
elseif Ew[1]==true and Ew[3]==true then
set AAl=vAl
set DAl="attack"
set oDl=Qw[16]
set ODl=Ww[16]
set HAl=oDl
set JAl=ODl
call IssuePointOrder(AAl,DAl,HAl,JAl)
set KAl=vAl
set LAl=UNIT_TYPE_HERO
if IsUnitType(KAl,LAl) then
call SaveInteger(qu,GetHandleId(vAl),$6D6F7665,16)
endif
endif
endif
if mAl==fu then
set XAl=vAl
set CAl="attack"
set lDl=Qw[18]
set bDl=Ww[18]
set VAl=lDl
set BAl=bDl
call IssuePointOrder(XAl,CAl,VAl,BAl)
set NAl=vAl
set MAl=UNIT_TYPE_HERO
if IsUnitType(NAl,MAl) then
call SaveInteger(qu,GetHandleId(vAl),$6D6F7665,18)
endif
endif
if mAl==Ru then
set wDl=vAl
set uDl="attack"
set yDl=Qw[16]
set pDl=Ww[16]
set rDl=yDl
set sDl=pDl
call IssuePointOrder(wDl,uDl,rDl,sDl)
set tDl=vAl
set iDl=UNIT_TYPE_HERO
if IsUnitType(tDl,iDl) then
call SaveInteger(qu,GetHandleId(vAl),$6D6F7665,16)
endif
endif
set vAl=null
set mAl=null
set QAl=null
set WAl=null
set IAl=null
set PAl=null
set AAl=null
set KAl=null
set LAl=null
set XAl=null
set NAl=null
set MAl=null
set wDl=null
set tDl=null
set iDl=null
endfunction
function eEO takes nothing returns nothing
local unit XWO=GetDyingUnit()
local unit wEO=XWO
local group CWO
local unit VWO
local filterfunc BWO
local unit NWO
local group MWO
local unit uEO
local unit rEO
local unit sEO
local group tEO
local group iEO
local unit SEO
local unit cEO
local unit oEO
local group OEO
local boolexpr lEO
local group bEO
local real yEO
local real pEO
if GetUnitTypeId(wEO)==$7830306C then
set CWO=CreateGroup()
set VWO=GetKillingUnit()
set uEO=XWO
set eh=GetOwningPlayer(uEO)
set BWO=Filter(bsw)
set bEO=CWO
set rEO=VWO
set yEO=GetUnitX(rEO)
set sEO=VWO
call GroupEnumUnitsInRange(bEO,yEO,GetUnitY(sEO),200.,BWO)
set MWO=CWO
loop
set tEO=MWO
exitwhen not (FirstOfGroup(tEO)!=null)
set iEO=MWO
set SEO=FirstOfGroup(iEO)
call GroupRemoveUnit(iEO,SEO)
set NWO=SEO
call UnitDamageTarget(XWO,NWO,100.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set cEO=VWO
set pEO=GetUnitX(cEO)
set oEO=VWO
call DestroyEffect(AddSpecialEffect("Singularity II Purple.mdl",pEO,GetUnitY(oEO)))
set OEO=CWO
call DestroyGroup(OEO)
set lEO=BWO
call DestroyBoolExpr(lEO)
set eh=null
endif
set XWO=null
set CWO=null
set VWO=null
set BWO=null
set NWO=null
set MWO=null
set wEO=null
set uEO=null
set rEO=null
set sEO=null
set tEO=null
set iEO=null
set SEO=null
set cEO=null
set oEO=null
set OEO=null
set lEO=null
set bEO=null
endfunction
function eIy takes nothing returns boolean
local unit BUy=GetFilterUnit()
local unit NUy=BUy
local unit MUy
local player wIy
local unit uIy
local unittype rIy
local unit sIy
local unittype tIy
local unit iIy
local unittype SIy
local unit cIy
local integer oIy
local boolean OIy
local boolean lIy
local boolean bIy
local boolean yIy
local boolean pIy
if UnitAlive(NUy) then
set MUy=BUy
set wIy=Kn
set OIy=IsUnitEnemy(MUy,wIy)
else
set OIy=false
endif
if OIy then
set uIy=BUy
set rIy=UNIT_TYPE_STRUCTURE
set lIy=IsUnitType(uIy,rIy)==false
else
set lIy=false
endif
if lIy then
set sIy=BUy
set tIy=UNIT_TYPE_ANCIENT
set bIy=IsUnitType(sIy,tIy)==false
else
set bIy=false
endif
if bIy then
set iIy=BUy
set SIy=UNIT_TYPE_HERO
set yIy=IsUnitType(iIy,SIy)==false
else
set yIy=false
endif
if yIy then
set cIy=BUy
set oIy=$4230384E
set pIy=GetUnitAbilityLevel(cIy,oIy)>0==false
else
set pIy=false
endif
set BUy=null
set NUy=null
set MUy=null
set wIy=null
set uIy=null
set rIy=null
set sIy=null
set tIy=null
set iIy=null
set SIy=null
set cIy=null
return pIy
endfunction
function eOi takes nothing returns boolean
return true
endfunction
function eQi takes nothing returns boolean
local trigger lQi
local trigger bQi
local playerunitevent yQi
local integer pQi
set yY=CreateTrigger()
set lQi=yY
call DisableTrigger(lQi)
set bQi=yY
set yQi=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set pQi=0
loop
call TriggerRegisterPlayerUnitEvent(bQi,Player(pQi),yQi,null)
set pQi=pQi+1
exitwhen pQi==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(yY,jww)
set lQi=null
set bQi=null
set yQi=null
return true
endfunction
function eRr takes nothing returns nothing
local unit cRr=GetTriggerUnit()
local unittype oRr=UNIT_TYPE_HERO
local unit ORr
local integer lRr
local unit bRr
local integer yRr
local boolean pRr
if IsUnitType(cRr,oRr)==true then
set ORr=GetTriggerUnit()
set lRr=$41305857
set pRr=GetUnitAbilityLevel(ORr,lRr)==1
else
set pRr=false
endif
if pRr then
set bRr=GetTriggerUnit()
set yRr=$41305857
call UnitRemoveAbility(bRr,yRr)
endif
set cRr=null
set oRr=null
set ORr=null
set bRr=null
endfunction
function eVe takes nothing returns boolean
local playerunitevent yVe=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code pVe=grw
call emO(yVe,null,pVe,null)
set yVe=null
return true
endfunction
function eVp takes nothing returns boolean
return true
endfunction
function eWy takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1751")
endfunction
function eZu takes nothing returns boolean
return true
endfunction
function h4p takes string l4p returns nothing
local integer b4p
local location y4p
local real p4p
local real e4p
local integer q4p
local real a4p
local real n4p
local filterfunc d4p
local string f4p
local integer R4p
local real T4p
local real Y4p
local real G4p
local real g4p
set aW[qW]=l4p
set qW=qW+1
set b4p=GetSpellAbilityId()
if b4p==$414D3173 then
set y4p=GetSpellTargetLoc()
set T4p=GetLocationX(y4p)
set Y4p=GetLocationY(y4p)
set p4p=T4p
set e4p=Y4p
set G4p=p4p
set g4p=e4p
set a4p=G4p
set n4p=g4p
set d4p=Filter(Fww)
set f4p="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos in ReignOfChaos, line 278"
set aW[qW]=f4p
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set R4p=qF
set aF[R4p]=873
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_ReignOfChaos.","when calling error in ReignOfChaos, line 278")
set R4p=0
endif
else
set eF=eF-1
set R4p=pF[eF]
set aF[R4p]=873
endif
set qW=qW-1
set q4p=R4p
set Nm[q4p]=y4p
call WXp(4,0,null,null,a4p,n4p,400.,false,0,null,d4p,q4p,"when calling forNearestUnit in ReignOfChaos, line 278")
endif
set qW=qW-1
set y4p=null
set d4p=null
endfunction
function eao takes nothing returns nothing
set qW=0
call h4p("via function reference ReignOfChaos, line 273")
endfunction
function ecS takes nothing returns boolean
return true
endfunction
function edl takes nothing returns boolean
local playerunitevent ydl=EVENT_PLAYER_UNIT_SPELL_CAST
local code pdl=E7
call emO(ydl,null,pdl,null)
set ydl=null
return true
endfunction
function emu takes nothing returns boolean
local playerunitevent ymu=EVENT_PLAYER_UNIT_ATTACKED
local code pmu=d4
call emO(ymu,null,pmu,null)
set ymu=null
return true
endfunction
function eni takes nothing returns boolean
local playerunitevent yni=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code pni=v6
call emO(yni,null,pni,null)
set yni=null
return true
endfunction
function epc takes nothing returns boolean
return true
endfunction
function epu takes nothing returns boolean
return true
endfunction
function epw takes nothing returns boolean
local trigger Spw=CreateTrigger()
local integer cpw=0
local trigger opw
local player Opw
local string lpw
local boolean bpw
local trigger ypw
local code ppw
loop
exitwhen cpw>3
set opw=Spw
set Opw=Player(cpw)
set lpw=""
set bpw=true
call TriggerRegisterPlayerChatEvent(opw,Opw,lpw,bpw)
set cpw=cpw+1
endloop
set ypw=Spw
set ppw=Nsw
call TriggerAddAction(ypw,ppw)
set Spw=null
set opw=null
set Opw=null
set ypw=null
return true
endfunction
function equ takes nothing returns boolean
return true
endfunction
function erb takes nothing returns boolean
return true
endfunction
function eri takes nothing returns nothing
local integer Fwi=GetSpellAbilityId()
local unit kwi
local integer jwi
local group xwi
local real vwi
local real mwi
local filterfunc Qwi
local group Wwi
local unit Ewi
local group Zwi
local unit Uwi
local unit Iwi
local integer Pwi
local group Awi
local real Dwi
local real Hwi
local filterfunc Jwi
local unit Kwi
local group Lwi
local integer Xwi
local unit Cwi
local integer Vwi
local unit Bwi
local unit Nwi
local group Mwi
local group wui
local unit uui
local unit rui
local unit sui
local real tui
local unit iui
local integer Sui
local unit cui
local integer oui
local integer Oui
local unit lui
local string bui
local widget yui
local group pui
local group eui
local boolexpr qui
local unit aui
local integer nui
local unit dui
local unit fui
local group Rui
local group Tui
local unit Yui
local unit Gui
local integer gui
local unit hui
local integer Fui
local unit kui
local integer jui
local unit xui
local integer vui
local unit mui
local integer Qui
local unit Wui
local integer Eui
local unit Zui
local integer Uui
local unit Iui
local integer Pui
local unit Aui
local integer Dui
local unit Hui
local integer Jui
local unit Kui
local integer Lui
local unit Xui
local integer Cui
local unit Vui
local integer Bui
local unit Nui
local integer Mui
local unit wri
local integer uri
local unit rri
local integer sri
local unit tri
local integer iri
local unit Sri
local integer cri
local unit ori
local integer Ori
local unit lri
local integer bri
local group yri
local boolexpr pri
if Fwi==$41313134 then
set kwi=GetSpellAbilityUnit()
set Cwi=kwi
set Vwi=$41313134
set jwi=GetUnitAbilityLevel(Cwi,Vwi)
set xwi=CreateGroup()
set Bwi=kwi
set vwi=GetUnitX(Bwi)
set Nwi=kwi
set mwi=GetUnitY(Nwi)
set Qwi=Filter(C6)
call GroupEnumUnitsInRange(xwi,vwi,mwi,300.,Qwi)
set Wwi=GetRandomSubGroup(2+1*jwi,xwi)
set Zwi=Wwi
loop
set Mwi=Zwi
exitwhen not (FirstOfGroup(Mwi)!=null)
set wui=Zwi
set uui=FirstOfGroup(wui)
call GroupRemoveUnit(wui,uui)
set Ewi=uui
set rui=kwi
set Uwi=CreateUnit(GetOwningPlayer(rui),$75303030,vwi,mwi,0.)
set sui=Uwi
set tui=5.
call UnitApplyTimedLife(sui,$42544C46,tui)
set iui=Uwi
set Sui=$41313145
call UnitAddAbility(iui,Sui)
set cui=Uwi
set oui=$41313145
set Oui=jwi
call SetUnitAbilityLevel(cui,oui,Oui)
set lui=Uwi
set bui="rejuvination"
set yui=Ewi
call IssueTargetOrder(lui,bui,yui)
endloop
set pui=xwi
call DestroyGroup(pui)
set eui=Wwi
call DestroyGroup(eui)
set qui=Qwi
call DestroyBoolExpr(qui)
endif
if Fwi==$41313135 then
set Iwi=GetSpellAbilityUnit()
set aui=Iwi
set nui=$41313135
set Pwi=GetUnitAbilityLevel(aui,nui)
set Awi=CreateGroup()
set dui=Iwi
set Dwi=GetUnitX(dui)
set fui=Iwi
set Hwi=GetUnitY(fui)
set Jwi=Filter(V6)
call GroupEnumUnitsInRange(Awi,Dwi,Hwi,900.,Jwi)
set Lwi=Awi
loop
set Rui=Lwi
exitwhen not (FirstOfGroup(Rui)!=null)
set Tui=Lwi
set Yui=FirstOfGroup(Tui)
call GroupRemoveUnit(Tui,Yui)
set Kwi=Yui
set Xwi=GetRandomInt(1,5)
if jWu(Kwi)<6 then
if Pwi<3 then
if Xwi==1 then
set Gui=Kwi
set gui=$4930304C
call UnitAddItemById(Gui,gui)
endif
if Xwi==2 then
set hui=Kwi
set Fui=$4930304D
call UnitAddItemById(hui,Fui)
endif
if Xwi==3 then
set kui=Kwi
set jui=$4930304E
call UnitAddItemById(kui,jui)
endif
if Xwi==4 then
set xui=Kwi
set vui=$4930304F
call UnitAddItemById(xui,vui)
endif
if Xwi==5 then
set mui=Kwi
set Qui=$49303050
call UnitAddItemById(mui,Qui)
endif
endif
if Pwi>=3 and Pwi<5 then
if Xwi==1 then
set Wui=Kwi
set Eui=$49303051
call UnitAddItemById(Wui,Eui)
endif
if Xwi==2 then
set Zui=Kwi
set Uui=$49303052
call UnitAddItemById(Zui,Uui)
endif
if Xwi==3 then
set Iui=Kwi
set Pui=$49303053
call UnitAddItemById(Iui,Pui)
endif
if Xwi==4 then
set Aui=Kwi
set Dui=$49303054
call UnitAddItemById(Aui,Dui)
endif
if Xwi==5 then
set Hui=Kwi
set Jui=$49303055
call UnitAddItemById(Hui,Jui)
endif
endif
if Pwi>=5 and Pwi<7 then
if Xwi==1 then
set Kui=Kwi
set Lui=$49303056
call UnitAddItemById(Kui,Lui)
endif
if Xwi==2 then
set Xui=Kwi
set Cui=$49303057
call UnitAddItemById(Xui,Cui)
endif
if Xwi==3 then
set Vui=Kwi
set Bui=$49303058
call UnitAddItemById(Vui,Bui)
endif
if Xwi==4 then
set Nui=Kwi
set Mui=$49303059
call UnitAddItemById(Nui,Mui)
endif
if Xwi==5 then
set wri=Kwi
set uri=$4930305A
call UnitAddItemById(wri,uri)
endif
endif
if Pwi==7 then
if Xwi==1 then
set rri=Kwi
set sri=$49303130
call UnitAddItemById(rri,sri)
endif
if Xwi==2 then
set tri=Kwi
set iri=$49303131
call UnitAddItemById(tri,iri)
endif
if Xwi==3 then
set Sri=Kwi
set cri=$49303132
call UnitAddItemById(Sri,cri)
endif
if Xwi==4 then
set ori=Kwi
set Ori=$49303133
call UnitAddItemById(ori,Ori)
endif
if Xwi==5 then
set lri=Kwi
set bri=$49303134
call UnitAddItemById(lri,bri)
endif
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl",Kwi,"origin"))
endif
endloop
set yri=Awi
call DestroyGroup(yri)
set pri=Jwi
call DestroyBoolExpr(pri)
endif
set kwi=null
set xwi=null
set Qwi=null
set Wwi=null
set Ewi=null
set Zwi=null
set Uwi=null
set Iwi=null
set Awi=null
set Jwi=null
set Kwi=null
set Lwi=null
set Cwi=null
set Bwi=null
set Nwi=null
set Mwi=null
set wui=null
set uui=null
set rui=null
set sui=null
set iui=null
set cui=null
set lui=null
set yui=null
set pui=null
set eui=null
set qui=null
set aui=null
set dui=null
set fui=null
set Rui=null
set Tui=null
set Yui=null
set Gui=null
set hui=null
set kui=null
set xui=null
set mui=null
set Wui=null
set Zui=null
set Iui=null
set Aui=null
set Hui=null
set Kui=null
set Xui=null
set Vui=null
set Nui=null
set wri=null
set rri=null
set tri=null
set Sri=null
set ori=null
set lri=null
set yri=null
set pri=null
endfunction
function evt takes nothing returns boolean
return true
endfunction
function exb takes nothing returns nothing
local integer pxb
if mR!=null then
set pxb=GetResearched()
if pxb==$52303932 then
set YR=YR+1
endif
if pxb==$52303939 then
set TR=TR+1
endif
endif
endfunction
function exu takes nothing returns boolean
return true
endfunction
function f0O takes nothing returns nothing
local unit AJo=GetLevelingUnit()
local unit VLo=AJo
local group DJo
local player HJo
local filterfunc JJo
local unit KJo
local group LJo
local real XJo
local real CJo
local integer VJo
local integer BJo
local integer NJo
local integer MJo
local integer wKo
local integer uKo
local integer rKo
local integer sKo
local integer tKo
local integer iKo
local integer SKo
local real cKo
local real oKo
local integer OKo
local integer lKo
local integer bKo
local integer yKo
local integer pKo
local integer eKo
local integer qKo
local integer aKo
local integer nKo
local integer dKo
local integer fKo
local real RKo
local real TKo
local integer YKo
local integer GKo
local integer gKo
local integer hKo
local integer FKo
local integer kKo
local integer jKo
local integer xKo
local integer vKo
local integer mKo
local integer QKo
local real WKo
local real EKo
local integer ZKo
local integer UKo
local integer IKo
local integer PKo
local integer AKo
local integer DKo
local integer HKo
local integer JKo
local integer KKo
local integer LKo
local integer XKo
local real CKo
local real VKo
local integer BKo
local integer NKo
local integer MKo
local integer wLo
local integer uLo
local integer rLo
local integer sLo
local integer tLo
local integer iLo
local integer SLo
local integer cLo
local real oLo
local real OLo
local integer lLo
local integer bLo
local integer yLo
local integer pLo
local integer eLo
local integer qLo
local integer aLo
local integer nLo
local integer dLo
local integer fLo
local integer RLo
local real TLo
local real YLo
local integer GLo
local integer gLo
local integer hLo
local integer FLo
local integer kLo
local integer jLo
local integer xLo
local integer vLo
local integer mLo
local integer QLo
local integer WLo
local real ELo
local real ZLo
local integer ULo
local integer ILo
local integer PLo
local integer ALo
local integer DLo
local integer HLo
local integer JLo
local integer KLo
local integer LLo
local integer XLo
local integer CLo
local trigger BLo
local unit NLo
local trigger MLo
local trigger wXo
local player uXo
local unit rXo
local group sXo
local group tXo
local unit iXo
local unit SXo
local unit cXo
local unit oXo
local integer OXo
local unit lXo
local unit bXo
local integer yXo
local unit pXo
local integer eXo
local unit qXo
local integer aXo
local integer nXo
local unit dXo
local unit fXo
local integer RXo
local unit TXo
local integer YXo
local unit GXo
local integer gXo
local integer hXo
local unit FXo
local unit kXo
local integer jXo
local unit xXo
local integer vXo
local unit mXo
local integer QXo
local integer WXo
local unit EXo
local unit ZXo
local integer UXo
local unit IXo
local integer PXo
local unit AXo
local integer DXo
local integer HXo
local unit JXo
local unit KXo
local integer LXo
local unit XXo
local integer CXo
local unit VXo
local integer BXo
local unit NXo
local integer MXo
local integer wCo
local unit uCo
local integer rCo
local unit sCo
local integer tCo
local integer iCo
local unit SCo
local unit cCo
local integer oCo
local unit OCo
local unit lCo
local integer bCo
local unit yCo
local unit pCo
local integer eCo
local unit qCo
local integer aCo
local unit nCo
local integer dCo
local integer fCo
local unit RCo
local unit TCo
local integer YCo
local unit GCo
local integer gCo
local unit hCo
local integer FCo
local integer kCo
local unit jCo
local unit xCo
local integer vCo
local unit mCo
local integer QCo
local unit WCo
local integer ECo
local integer ZCo
local unit UCo
local unit ICo
local integer PCo
local unit ACo
local integer DCo
local unit HCo
local integer JCo
local integer KCo
local unit LCo
local unit XCo
local integer CCo
local unit VCo
local integer BCo
local unit NCo
local integer MCo
local integer wVo
local unit uVo
local unit rVo
local unit sVo
local integer tVo
local unit iVo
local unit SVo
local integer cVo
local unit oVo
local integer OVo
local unit lVo
local integer bVo
local integer yVo
local unit pVo
local unit eVo
local integer qVo
local unit aVo
local integer nVo
local unit dVo
local integer fVo
local integer RVo
local unit TVo
local unit YVo
local integer GVo
local unit gVo
local integer hVo
local unit FVo
local integer kVo
local integer jVo
local unit xVo
local unit vVo
local integer mVo
local unit QVo
local integer WVo
local unit EVo
local integer ZVo
local integer UVo
local unit IVo
local unit PVo
local integer AVo
local unit DVo
local integer HVo
local unit JVo
local integer KVo
local unit LVo
local integer XVo
local integer CVo
local unit VVo
local integer BVo
local unit NVo
local integer MVo
local integer wBo
local unit uBo
local unit rBo
local integer sBo
local unit tBo
local unit iBo
local integer SBo
local unit cBo
local unit oBo
local integer OBo
local unit lBo
local integer bBo
local unit yBo
local integer pBo
local integer eBo
local unit qBo
local unit aBo
local integer nBo
local unit dBo
local integer fBo
local unit RBo
local integer TBo
local integer YBo
local unit GBo
local unit gBo
local integer hBo
local unit FBo
local integer kBo
local unit jBo
local integer xBo
local integer vBo
local unit mBo
local unit QBo
local integer WBo
local unit EBo
local integer ZBo
local unit UBo
local integer IBo
local integer PBo
local unit ABo
local unit DBo
local integer HBo
local unit JBo
local integer KBo
local unit LBo
local integer XBo
local integer CBo
local unit VBo
local unit BBo
local unit NBo
local integer MBo
local unit wNo
local unit uNo
local integer rNo
local unit sNo
local integer tNo
local unit iNo
local integer SNo
local integer cNo
local unit oNo
local unit ONo
local integer lNo
local unit bNo
local integer yNo
local unit pNo
local integer eNo
local integer qNo
local unit aNo
local unit nNo
local integer dNo
local unit fNo
local integer RNo
local unit TNo
local integer YNo
local integer GNo
local unit gNo
local unit hNo
local integer FNo
local unit kNo
local integer jNo
local unit xNo
local integer vNo
local integer mNo
local unit QNo
local unit WNo
local integer ENo
local unit ZNo
local integer UNo
local unit INo
local integer PNo
local unit ANo
local integer DNo
local integer HNo
local unit JNo
local integer KNo
local unit LNo
local integer XNo
local integer CNo
local unit VNo
local unit BNo
local integer NNo
local unit MNo
local unit wMo
local integer uMo
local unit rMo
local unit sMo
local integer tMo
local unit iMo
local integer SMo
local unit cMo
local integer oMo
local integer OMo
local unit lMo
local unit bMo
local integer yMo
local unit pMo
local integer eMo
local unit qMo
local integer aMo
local integer nMo
local unit dMo
local unit fMo
local integer RMo
local unit TMo
local integer YMo
local unit GMo
local integer gMo
local integer hMo
local unit FMo
local unit kMo
local integer jMo
local unit xMo
local integer vMo
local unit mMo
local integer QMo
local integer WMo
local unit EMo
local unit ZMo
local integer UMo
local unit IMo
local integer PMo
local unit AMo
local integer DMo
local integer HMo
local unit JMo
local unit KMo
local unit LMo
local integer XMo
local unit CMo
local unit VMo
local integer BMo
local unit NMo
local integer MMo
local unit w3O
local integer u3O
local integer r3O
local unit s3O
local unit t3O
local integer i3O
local unit S3O
local integer c3O
local unit o3O
local integer O3O
local integer l3O
local unit b3O
local unit y3O
local integer p3O
local unit e3O
local integer q3O
local unit a3O
local integer n3O
local integer d3O
local unit f3O
local unit R3O
local integer T3O
local unit Y3O
local integer G3O
local unit g3O
local integer h3O
local integer F3O
local unit k3O
local unit j3O
local integer x3O
local unit v3O
local integer m3O
local unit Q3O
local integer W3O
local unit E3O
local integer Z3O
local integer U3O
local unit I3O
local integer P3O
local unit A3O
local integer D3O
local integer H3O
local unit J3O
local unit K3O
local integer L3O
local unit X3O
local unit C3O
local integer V3O
local unit B3O
local unit N3O
local integer M3O
local unit w1O
local integer u1O
local unit r1O
local integer s1O
local integer t1O
local unit i1O
local unit S1O
local integer c1O
local unit o1O
local integer O1O
local unit l1O
local integer b1O
local integer y1O
local unit p1O
local unit e1O
local integer q1O
local unit a1O
local integer n1O
local unit d1O
local integer f1O
local integer R1O
local unit T1O
local unit Y1O
local integer G1O
local unit g1O
local integer h1O
local unit F1O
local integer k1O
local integer j1O
local unit x1O
local unit v1O
local integer m1O
local unit Q1O
local integer W1O
local unit E1O
local integer Z1O
local integer U1O
local unit I1O
local unit P1O
local unit A1O
local integer D1O
local unit H1O
local unit J1O
local integer K1O
local unit L1O
local integer X1O
local unit C1O
local integer V1O
local integer B1O
local unit N1O
local unit M1O
local integer w4O
local unit u4O
local integer r4O
local unit s4O
local integer t4O
local integer i4O
local unit S4O
local unit c4O
local integer o4O
local unit O4O
local integer l4O
local unit b4O
local integer y4O
local integer p4O
local unit e4O
local unit q4O
local integer a4O
local unit n4O
local integer d4O
local unit f4O
local integer R4O
local integer T4O
local unit Y4O
local unit G4O
local integer g4O
local unit h4O
local integer F4O
local unit k4O
local integer j4O
local unit x4O
local integer v4O
local integer m4O
local unit Q4O
local integer W4O
local unit E4O
local integer Z4O
local integer U4O
local unit I4O
local unit P4O
local integer A4O
local unit D4O
local unit H4O
local integer J4O
local unit K4O
local unit L4O
local integer X4O
local unit C4O
local integer V4O
local unit B4O
local integer N4O
local integer M4O
local unit w2O
local unit u2O
local integer r2O
local unit s2O
local integer t2O
local unit i2O
local integer S2O
local integer c2O
local unit o2O
local unit O2O
local integer l2O
local unit b2O
local integer y2O
local unit p2O
local integer e2O
local integer q2O
local unit a2O
local unit n2O
local integer d2O
local unit f2O
local integer R2O
local unit T2O
local integer Y2O
local integer G2O
local unit g2O
local unit h2O
local integer F2O
local unit k2O
local integer j2O
local unit x2O
local integer v2O
local integer m2O
local unit Q2O
local unit W2O
local unit E2O
local integer Z2O
local unit U2O
local unit I2O
local integer P2O
local unit A2O
local integer D2O
local unit H2O
local integer J2O
local integer K2O
local unit L2O
local unit X2O
local integer C2O
local unit V2O
local integer B2O
local unit N2O
local integer M2O
local integer w5O
local unit u5O
local unit r5O
local integer s5O
local unit t5O
local integer i5O
local unit S5O
local integer c5O
local integer o5O
local unit O5O
local unit l5O
local integer b5O
local unit y5O
local integer p5O
local unit e5O
local integer q5O
local integer a5O
local unit n5O
local unit d5O
local integer f5O
local unit R5O
local integer T5O
local unit Y5O
local integer G5O
local unit g5O
local integer h5O
local integer F5O
local unit k5O
local integer j5O
local unit x5O
local integer v5O
local integer m5O
local unit Q5O
local unit W5O
local integer E5O
local unit Z5O
local unit U5O
local integer I5O
local unit P5O
local unit A5O
local integer D5O
local unit H5O
local integer J5O
local unit K5O
local integer L5O
local integer X5O
local unit C5O
local unit V5O
local integer B5O
local unit N5O
local integer M5O
local unit w6O
local integer u6O
local integer r6O
local unit s6O
local unit t6O
local integer i6O
local unit S6O
local integer c6O
local unit o6O
local integer O6O
local integer l6O
local unit b6O
local unit y6O
local integer p6O
local unit e6O
local integer q6O
local unit a6O
local integer n6O
local integer d6O
local unit f6O
local unit R6O
local integer T6O
local unit Y6O
local integer G6O
local unit g6O
local integer h6O
local integer F6O
local unit k6O
local unit j6O
local unit x6O
local integer v6O
local unit m6O
local unit Q6O
local integer W6O
local unit E6O
local integer Z6O
local unit U6O
local integer I6O
local integer P6O
local unit A6O
local unit D6O
local integer H6O
local unit J6O
local integer K6O
local unit L6O
local integer X6O
local integer C6O
local unit V6O
local unit B6O
local integer N6O
local unit M6O
local integer w7O
local unit u7O
local integer r7O
local integer s7O
local unit t7O
local unit i7O
local integer S7O
local unit c7O
local integer o7O
local unit O7O
local integer l7O
local integer b7O
local unit y7O
local unit p7O
local integer e7O
local unit q7O
local integer a7O
local unit n7O
local integer d7O
local unit f7O
local integer R7O
local integer T7O
local unit Y7O
local integer G7O
local unit g7O
local integer h7O
local integer F7O
local unit k7O
local unit j7O
local integer x7O
local unit v7O
local unit m7O
local integer Q7O
local unit W7O
local unit E7O
local integer Z7O
local unit U7O
local integer I7O
local unit P7O
local integer A7O
local integer D7O
local unit H7O
local unit J7O
local integer K7O
local unit L7O
local integer X7O
local unit C7O
local integer V7O
local integer B7O
local unit N7O
local unit M7O
local integer w8O
local unit u8O
local integer r8O
local unit s8O
local integer t8O
local integer i8O
local unit S8O
local unit c8O
local integer o8O
local unit O8O
local integer l8O
local unit b8O
local integer y8O
local integer p8O
local unit e8O
local unit q8O
local integer a8O
local unit n8O
local integer d8O
local unit f8O
local integer R8O
local integer T8O
local unit Y8O
local unit G8O
local unit g8O
local integer h8O
local unit F8O
local unit k8O
local integer j8O
local unit x8O
local integer v8O
local unit m8O
local integer Q8O
local integer W8O
local unit E8O
local unit Z8O
local integer U8O
local unit I8O
local integer P8O
local unit A8O
local integer D8O
local integer H8O
local unit J8O
local unit K8O
local integer L8O
local unit X8O
local integer C8O
local unit V8O
local integer B8O
local integer N8O
local unit M8O
local unit w9O
local integer u9O
local unit r9O
local integer s9O
local unit t9O
local integer i9O
local integer S9O
local unit c9O
local unit o9O
local integer O9O
local unit l9O
local integer b9O
local unit y9O
local integer p9O
local unit e9O
local integer q9O
local integer a9O
local unit n9O
local integer d9O
local unit f9O
local integer R9O
local integer T9O
local unit Y9O
local unit G9O
local integer g9O
local unit h9O
local unit F9O
local integer k9O
local unit j9O
local unit x9O
local integer v9O
local unit m9O
local integer Q9O
local unit W9O
local integer E9O
local integer Z9O
local unit U9O
local unit I9O
local integer P9O
local unit A9O
local integer D9O
local unit H9O
local integer J9O
local integer K9O
local unit L9O
local unit X9O
local integer C9O
local unit V9O
local integer B9O
local unit N9O
local integer M9O
local integer w0O
local unit u0O
local unit r0O
local integer s0O
local unit t0O
local integer i0O
local unit S0O
local integer c0O
local integer o0O
local unit O0O
local unit l0O
local integer b0O
local unit y0O
local integer p0O
local unit e0O
local integer q0O
local integer a0O
local group n0O
local boolexpr d0O
if GetUnitTypeId(VLo)==$4F303344 then
if GetHeroLevel(AJo)>=8 then
set BLo=kG
call EnableTrigger(BLo)
endif
if GetHeroLevel(AJo)>=14 then
set NLo=AJo
call SetPlayerTechResearched(GetOwningPlayer(NLo),$52303734,1)
endif
if GetHeroLevel(AJo)>=20 and Rq==false then
set Rq=true
set fq=true
set MLo=Tq
call EnableTrigger(MLo)
set wXo=Yq
call EnableTrigger(wXo)
set DJo=CreateGroup()
set rXo=AJo
set uXo=GetOwningPlayer(rXo)
set HJo=Player(GetPlayerId(uXo)-4)
set JJo=Filter(Lww)
call GroupEnumUnitsInRect(DJo,bj_mapInitialPlayableArea,JJo)
set LJo=DJo
loop
set sXo=LJo
exitwhen not (FirstOfGroup(sXo)!=null)
set tXo=LJo
set iXo=FirstOfGroup(tXo)
call GroupRemoveUnit(tXo,iXo)
set KJo=iXo
if KJo==G[1] then
set SXo=G[1]
set XJo=GetUnitX(SXo)
set cXo=G[1]
set CJo=GetUnitY(cXo)
set h[1]=CreateUnit(HJo,$6E303349,XJo,CJo,0.)
set oXo=h[1]
set OXo=$4545564F
call UnitAddAbility(oXo,OXo)
set lXo=G[1]
if GetUnitTypeId(lXo)==$6E676164 then
set bXo=G[1]
set yXo=$41303042
set VJo=GetUnitAbilityLevel(bXo,yXo)
set pXo=h[1]
set eXo=$41313641
call UnitAddAbility(pXo,eXo)
set qXo=h[1]
set aXo=$41313641
set nXo=VJo
call SetUnitAbilityLevel(qXo,aXo,nXo)
endif
set dXo=G[1]
if GetUnitTypeId(dXo)==$6E64727A then
set fXo=G[1]
set RXo=$41303852
set BJo=GetUnitAbilityLevel(fXo,RXo)
set TXo=h[1]
set YXo=$41313630
call UnitAddAbility(TXo,YXo)
set GXo=h[1]
set gXo=$41313630
set hXo=BJo
call SetUnitAbilityLevel(GXo,gXo,hXo)
endif
set FXo=G[1]
if GetUnitTypeId(FXo)==$6E647267 then
set kXo=G[1]
set jXo=$41303856
set NJo=GetUnitAbilityLevel(kXo,jXo)
set xXo=h[1]
set vXo=$41313642
call UnitAddAbility(xXo,vXo)
set mXo=h[1]
set QXo=$41313642
set WXo=NJo
call SetUnitAbilityLevel(mXo,QXo,WXo)
endif
set EXo=G[1]
if GetUnitTypeId(EXo)==$6E676D65 then
set ZXo=G[1]
set UXo=$4130384F
set MJo=GetUnitAbilityLevel(ZXo,UXo)
set IXo=h[1]
set PXo=$41313631
call UnitAddAbility(IXo,PXo)
set AXo=h[1]
set DXo=$41313631
set HXo=MJo
call SetUnitAbilityLevel(AXo,DXo,HXo)
endif
set JXo=G[1]
if GetUnitTypeId(JXo)==$6E647272 then
set KXo=G[1]
set LXo=$41303858
set wKo=GetUnitAbilityLevel(KXo,LXo)
set XXo=G[1]
set CXo=$41303859
set uKo=GetUnitAbilityLevel(XXo,CXo)
set VXo=h[1]
set BXo=$41313632
call UnitAddAbility(VXo,BXo)
set NXo=h[1]
set MXo=$41313633
set wCo=wKo
call SetUnitAbilityLevel(NXo,MXo,wCo)
set uCo=h[1]
set rCo=$41313632
call UnitAddAbility(uCo,rCo)
set sCo=h[1]
set tCo=$41313633
set iCo=uKo
call SetUnitAbilityLevel(sCo,tCo,iCo)
endif
set SCo=G[1]
if GetUnitTypeId(SCo)==$6E6D7232 then
set cCo=h[1]
set oCo=$41303853
call UnitAddAbility(cCo,oCo)
endif
set OCo=G[1]
if GetUnitTypeId(OCo)==$6E676F6C then
set lCo=h[1]
set bCo=$41303853
call UnitAddAbility(lCo,bCo)
endif
set yCo=G[1]
if GetUnitTypeId(yCo)==$6E64726F then
set pCo=G[1]
set eCo=$41303855
set rKo=GetUnitAbilityLevel(pCo,eCo)
set qCo=h[1]
set aCo=$41313635
call UnitAddAbility(qCo,aCo)
set nCo=h[1]
set dCo=$41313635
set fCo=rKo
call SetUnitAbilityLevel(nCo,dCo,fCo)
endif
set RCo=G[1]
if GetUnitTypeId(RCo)==$6E776774 then
set TCo=G[1]
set YCo=$41303850
set sKo=GetUnitAbilityLevel(TCo,YCo)
set GCo=h[1]
set gCo=$41313636
call UnitAddAbility(GCo,gCo)
set hCo=h[1]
set FCo=$41313636
set kCo=sKo
call SetUnitAbilityLevel(hCo,FCo,kCo)
endif
set jCo=G[1]
if GetUnitTypeId(jCo)==$6E647275 then
set xCo=G[1]
set vCo=$4130384E
set tKo=GetUnitAbilityLevel(xCo,vCo)
set mCo=h[1]
set QCo=$41313637
call UnitAddAbility(mCo,QCo)
set WCo=h[1]
set ECo=$41313637
set ZCo=tKo
call SetUnitAbilityLevel(WCo,ECo,ZCo)
endif
set UCo=G[1]
if GetUnitTypeId(UCo)==$6E666F68 then
set ICo=G[1]
set PCo=$4130384D
set iKo=GetUnitAbilityLevel(ICo,PCo)
set ACo=h[1]
set DCo=$41313638
call UnitAddAbility(ACo,DCo)
set HCo=h[1]
set JCo=$41313638
set KCo=iKo
call SetUnitAbilityLevel(HCo,JCo,KCo)
endif
set LCo=G[1]
if GetUnitTypeId(LCo)==$6E64726B then
set XCo=G[1]
set CCo=$41303851
set SKo=GetUnitAbilityLevel(XCo,CCo)
set VCo=h[1]
set BCo=$41313639
call UnitAddAbility(VCo,BCo)
set NCo=h[1]
set MCo=$41313639
set wVo=SKo
call SetUnitAbilityLevel(NCo,MCo,wVo)
endif
endif
if KJo==G[2] then
set uVo=G[2]
set cKo=GetUnitX(uVo)
set rVo=G[2]
set oKo=GetUnitY(rVo)
set h[2]=CreateUnit(HJo,$6E303349,cKo,oKo,0.)
set sVo=h[2]
set tVo=$4545564F
call UnitAddAbility(sVo,tVo)
set iVo=G[2]
if GetUnitTypeId(iVo)==$6E676164 then
set SVo=G[2]
set cVo=$41303042
set OKo=GetUnitAbilityLevel(SVo,cVo)
set oVo=h[2]
set OVo=$41313641
call UnitAddAbility(oVo,OVo)
set lVo=h[2]
set bVo=$41313641
set yVo=OKo
call SetUnitAbilityLevel(lVo,bVo,yVo)
endif
set pVo=G[2]
if GetUnitTypeId(pVo)==$6E64727A then
set eVo=G[2]
set qVo=$41303852
set lKo=GetUnitAbilityLevel(eVo,qVo)
set aVo=h[2]
set nVo=$41313630
call UnitAddAbility(aVo,nVo)
set dVo=h[2]
set fVo=$41313630
set RVo=lKo
call SetUnitAbilityLevel(dVo,fVo,RVo)
endif
set TVo=G[2]
if GetUnitTypeId(TVo)==$6E647267 then
set YVo=G[2]
set GVo=$41303856
set bKo=GetUnitAbilityLevel(YVo,GVo)
set gVo=h[2]
set hVo=$41313642
call UnitAddAbility(gVo,hVo)
set FVo=h[2]
set kVo=$41313642
set jVo=bKo
call SetUnitAbilityLevel(FVo,kVo,jVo)
endif
set xVo=G[2]
if GetUnitTypeId(xVo)==$6E676D65 then
set vVo=G[2]
set mVo=$4130384F
set yKo=GetUnitAbilityLevel(vVo,mVo)
set QVo=h[2]
set WVo=$41313631
call UnitAddAbility(QVo,WVo)
set EVo=h[2]
set ZVo=$41313631
set UVo=yKo
call SetUnitAbilityLevel(EVo,ZVo,UVo)
endif
set IVo=G[2]
if GetUnitTypeId(IVo)==$6E647272 then
set PVo=G[2]
set AVo=$41303858
set pKo=GetUnitAbilityLevel(PVo,AVo)
set DVo=G[2]
set HVo=$41303859
set eKo=GetUnitAbilityLevel(DVo,HVo)
set JVo=h[2]
set KVo=$41313632
call UnitAddAbility(JVo,KVo)
set LVo=h[2]
set XVo=$41313633
set CVo=pKo
call SetUnitAbilityLevel(LVo,XVo,CVo)
set VVo=h[2]
set BVo=$41313632
call UnitAddAbility(VVo,BVo)
set NVo=h[2]
set MVo=$41313633
set wBo=eKo
call SetUnitAbilityLevel(NVo,MVo,wBo)
endif
set uBo=G[2]
if GetUnitTypeId(uBo)==$6E6D7232 then
set rBo=h[2]
set sBo=$41303853
call UnitAddAbility(rBo,sBo)
endif
set tBo=G[2]
if GetUnitTypeId(tBo)==$6E676F6C then
set iBo=h[2]
set SBo=$41303853
call UnitAddAbility(iBo,SBo)
endif
set cBo=G[2]
if GetUnitTypeId(cBo)==$6E64726F then
set oBo=G[2]
set OBo=$41303855
set qKo=GetUnitAbilityLevel(oBo,OBo)
set lBo=h[2]
set bBo=$41313635
call UnitAddAbility(lBo,bBo)
set yBo=h[2]
set pBo=$41313635
set eBo=qKo
call SetUnitAbilityLevel(yBo,pBo,eBo)
endif
set qBo=G[2]
if GetUnitTypeId(qBo)==$6E776774 then
set aBo=G[2]
set nBo=$41303850
set aKo=GetUnitAbilityLevel(aBo,nBo)
set dBo=h[2]
set fBo=$41313636
call UnitAddAbility(dBo,fBo)
set RBo=h[2]
set TBo=$41313636
set YBo=aKo
call SetUnitAbilityLevel(RBo,TBo,YBo)
endif
set GBo=G[2]
if GetUnitTypeId(GBo)==$6E647275 then
set gBo=G[2]
set hBo=$4130384E
set nKo=GetUnitAbilityLevel(gBo,hBo)
set FBo=h[2]
set kBo=$41313637
call UnitAddAbility(FBo,kBo)
set jBo=h[2]
set xBo=$41313637
set vBo=nKo
call SetUnitAbilityLevel(jBo,xBo,vBo)
endif
set mBo=G[2]
if GetUnitTypeId(mBo)==$6E666F68 then
set QBo=G[2]
set WBo=$4130384D
set dKo=GetUnitAbilityLevel(QBo,WBo)
set EBo=h[2]
set ZBo=$41313638
call UnitAddAbility(EBo,ZBo)
set UBo=h[2]
set IBo=$41313638
set PBo=dKo
call SetUnitAbilityLevel(UBo,IBo,PBo)
endif
set ABo=G[2]
if GetUnitTypeId(ABo)==$6E64726B then
set DBo=G[2]
set HBo=$41303851
set fKo=GetUnitAbilityLevel(DBo,HBo)
set JBo=h[2]
set KBo=$41313639
call UnitAddAbility(JBo,KBo)
set LBo=h[2]
set XBo=$41313639
set CBo=fKo
call SetUnitAbilityLevel(LBo,XBo,CBo)
endif
endif
if KJo==G[3] then
set VBo=G[3]
set RKo=GetUnitX(VBo)
set BBo=G[3]
set TKo=GetUnitY(BBo)
set h[3]=CreateUnit(HJo,$6E303349,RKo,TKo,0.)
set NBo=h[3]
set MBo=$4545564F
call UnitAddAbility(NBo,MBo)
set wNo=G[3]
if GetUnitTypeId(wNo)==$6E676164 then
set uNo=G[3]
set rNo=$41303042
set YKo=GetUnitAbilityLevel(uNo,rNo)
set sNo=h[3]
set tNo=$41313641
call UnitAddAbility(sNo,tNo)
set iNo=h[3]
set SNo=$41313641
set cNo=YKo
call SetUnitAbilityLevel(iNo,SNo,cNo)
endif
set oNo=G[3]
if GetUnitTypeId(oNo)==$6E64727A then
set ONo=G[3]
set lNo=$41303852
set GKo=GetUnitAbilityLevel(ONo,lNo)
set bNo=h[3]
set yNo=$41313630
call UnitAddAbility(bNo,yNo)
set pNo=h[3]
set eNo=$41313630
set qNo=GKo
call SetUnitAbilityLevel(pNo,eNo,qNo)
endif
set aNo=G[3]
if GetUnitTypeId(aNo)==$6E647267 then
set nNo=G[3]
set dNo=$41303856
set gKo=GetUnitAbilityLevel(nNo,dNo)
set fNo=h[3]
set RNo=$41313642
call UnitAddAbility(fNo,RNo)
set TNo=h[3]
set YNo=$41313642
set GNo=gKo
call SetUnitAbilityLevel(TNo,YNo,GNo)
endif
set gNo=G[3]
if GetUnitTypeId(gNo)==$6E676D65 then
set hNo=G[3]
set FNo=$4130384F
set hKo=GetUnitAbilityLevel(hNo,FNo)
set kNo=h[3]
set jNo=$41313631
call UnitAddAbility(kNo,jNo)
set xNo=h[3]
set vNo=$41313631
set mNo=hKo
call SetUnitAbilityLevel(xNo,vNo,mNo)
endif
set QNo=G[3]
if GetUnitTypeId(QNo)==$6E647272 then
set WNo=G[3]
set ENo=$41303858
set FKo=GetUnitAbilityLevel(WNo,ENo)
set ZNo=G[3]
set UNo=$41303859
set kKo=GetUnitAbilityLevel(ZNo,UNo)
set INo=h[3]
set PNo=$41313632
call UnitAddAbility(INo,PNo)
set ANo=h[3]
set DNo=$41313633
set HNo=FKo
call SetUnitAbilityLevel(ANo,DNo,HNo)
set JNo=h[3]
set KNo=$41313632
call UnitAddAbility(JNo,KNo)
set LNo=h[3]
set XNo=$41313633
set CNo=kKo
call SetUnitAbilityLevel(LNo,XNo,CNo)
endif
set VNo=G[3]
if GetUnitTypeId(VNo)==$6E6D7232 then
set BNo=h[3]
set NNo=$41303853
call UnitAddAbility(BNo,NNo)
endif
set MNo=G[3]
if GetUnitTypeId(MNo)==$6E676F6C then
set wMo=h[3]
set uMo=$41303853
call UnitAddAbility(wMo,uMo)
endif
set rMo=G[3]
if GetUnitTypeId(rMo)==$6E64726F then
set sMo=G[3]
set tMo=$41303855
set jKo=GetUnitAbilityLevel(sMo,tMo)
set iMo=h[3]
set SMo=$41313635
call UnitAddAbility(iMo,SMo)
set cMo=h[3]
set oMo=$41313635
set OMo=jKo
call SetUnitAbilityLevel(cMo,oMo,OMo)
endif
set lMo=G[3]
if GetUnitTypeId(lMo)==$6E776774 then
set bMo=G[3]
set yMo=$41303850
set xKo=GetUnitAbilityLevel(bMo,yMo)
set pMo=h[3]
set eMo=$41313636
call UnitAddAbility(pMo,eMo)
set qMo=h[3]
set aMo=$41313636
set nMo=xKo
call SetUnitAbilityLevel(qMo,aMo,nMo)
endif
set dMo=G[3]
if GetUnitTypeId(dMo)==$6E647275 then
set fMo=G[3]
set RMo=$4130384E
set vKo=GetUnitAbilityLevel(fMo,RMo)
set TMo=h[3]
set YMo=$41313637
call UnitAddAbility(TMo,YMo)
set GMo=h[3]
set gMo=$41313637
set hMo=vKo
call SetUnitAbilityLevel(GMo,gMo,hMo)
endif
set FMo=G[3]
if GetUnitTypeId(FMo)==$6E666F68 then
set kMo=G[3]
set jMo=$4130384D
set mKo=GetUnitAbilityLevel(kMo,jMo)
set xMo=h[3]
set vMo=$41313638
call UnitAddAbility(xMo,vMo)
set mMo=h[3]
set QMo=$41313638
set WMo=mKo
call SetUnitAbilityLevel(mMo,QMo,WMo)
endif
set EMo=G[3]
if GetUnitTypeId(EMo)==$6E64726B then
set ZMo=G[3]
set UMo=$41303851
set QKo=GetUnitAbilityLevel(ZMo,UMo)
set IMo=h[3]
set PMo=$41313639
call UnitAddAbility(IMo,PMo)
set AMo=h[3]
set DMo=$41313639
set HMo=QKo
call SetUnitAbilityLevel(AMo,DMo,HMo)
endif
endif
if KJo==G[4] then
set JMo=G[4]
set WKo=GetUnitX(JMo)
set KMo=G[4]
set EKo=GetUnitY(KMo)
set h[4]=CreateUnit(HJo,$6E303349,WKo,EKo,0.)
set LMo=h[4]
set XMo=$4545564F
call UnitAddAbility(LMo,XMo)
set CMo=G[4]
if GetUnitTypeId(CMo)==$6E676164 then
set VMo=G[4]
set BMo=$41303042
set ZKo=GetUnitAbilityLevel(VMo,BMo)
set NMo=h[4]
set MMo=$41313641
call UnitAddAbility(NMo,MMo)
set w3O=h[4]
set u3O=$41313641
set r3O=ZKo
call SetUnitAbilityLevel(w3O,u3O,r3O)
endif
set s3O=G[4]
if GetUnitTypeId(s3O)==$6E64727A then
set t3O=G[4]
set i3O=$41303852
set UKo=GetUnitAbilityLevel(t3O,i3O)
set S3O=h[4]
set c3O=$41313630
call UnitAddAbility(S3O,c3O)
set o3O=h[4]
set O3O=$41313630
set l3O=UKo
call SetUnitAbilityLevel(o3O,O3O,l3O)
endif
set b3O=G[4]
if GetUnitTypeId(b3O)==$6E647267 then
set y3O=G[4]
set p3O=$41303856
set IKo=GetUnitAbilityLevel(y3O,p3O)
set e3O=h[4]
set q3O=$41313642
call UnitAddAbility(e3O,q3O)
set a3O=h[4]
set n3O=$41313642
set d3O=IKo
call SetUnitAbilityLevel(a3O,n3O,d3O)
endif
set f3O=G[4]
if GetUnitTypeId(f3O)==$6E676D65 then
set R3O=G[4]
set T3O=$4130384F
set PKo=GetUnitAbilityLevel(R3O,T3O)
set Y3O=h[4]
set G3O=$41313631
call UnitAddAbility(Y3O,G3O)
set g3O=h[4]
set h3O=$41313631
set F3O=PKo
call SetUnitAbilityLevel(g3O,h3O,F3O)
endif
set k3O=G[4]
if GetUnitTypeId(k3O)==$6E647272 then
set j3O=G[4]
set x3O=$41303858
set AKo=GetUnitAbilityLevel(j3O,x3O)
set v3O=G[4]
set m3O=$41303859
set DKo=GetUnitAbilityLevel(v3O,m3O)
set Q3O=h[4]
set W3O=$41313632
call UnitAddAbility(Q3O,W3O)
set E3O=h[4]
set Z3O=$41313633
set U3O=AKo
call SetUnitAbilityLevel(E3O,Z3O,U3O)
set I3O=h[4]
set P3O=$41313632
call UnitAddAbility(I3O,P3O)
set A3O=h[4]
set D3O=$41313633
set H3O=DKo
call SetUnitAbilityLevel(A3O,D3O,H3O)
endif
set J3O=G[4]
if GetUnitTypeId(J3O)==$6E6D7232 then
set K3O=h[4]
set L3O=$41303853
call UnitAddAbility(K3O,L3O)
endif
set X3O=G[4]
if GetUnitTypeId(X3O)==$6E676F6C then
set C3O=h[4]
set V3O=$41303853
call UnitAddAbility(C3O,V3O)
endif
set B3O=G[4]
if GetUnitTypeId(B3O)==$6E64726F then
set N3O=G[4]
set M3O=$41303855
set HKo=GetUnitAbilityLevel(N3O,M3O)
set w1O=h[4]
set u1O=$41313635
call UnitAddAbility(w1O,u1O)
set r1O=h[4]
set s1O=$41313635
set t1O=HKo
call SetUnitAbilityLevel(r1O,s1O,t1O)
endif
set i1O=G[4]
if GetUnitTypeId(i1O)==$6E776774 then
set S1O=G[4]
set c1O=$41303850
set JKo=GetUnitAbilityLevel(S1O,c1O)
set o1O=h[4]
set O1O=$41313636
call UnitAddAbility(o1O,O1O)
set l1O=h[4]
set b1O=$41313636
set y1O=JKo
call SetUnitAbilityLevel(l1O,b1O,y1O)
endif
set p1O=G[4]
if GetUnitTypeId(p1O)==$6E647275 then
set e1O=G[4]
set q1O=$4130384E
set KKo=GetUnitAbilityLevel(e1O,q1O)
set a1O=h[4]
set n1O=$41313637
call UnitAddAbility(a1O,n1O)
set d1O=h[4]
set f1O=$41313637
set R1O=KKo
call SetUnitAbilityLevel(d1O,f1O,R1O)
endif
set T1O=G[4]
if GetUnitTypeId(T1O)==$6E666F68 then
set Y1O=G[4]
set G1O=$4130384D
set LKo=GetUnitAbilityLevel(Y1O,G1O)
set g1O=h[4]
set h1O=$41313638
call UnitAddAbility(g1O,h1O)
set F1O=h[4]
set k1O=$41313638
set j1O=LKo
call SetUnitAbilityLevel(F1O,k1O,j1O)
endif
set x1O=G[4]
if GetUnitTypeId(x1O)==$6E64726B then
set v1O=G[4]
set m1O=$41303851
set XKo=GetUnitAbilityLevel(v1O,m1O)
set Q1O=h[4]
set W1O=$41313639
call UnitAddAbility(Q1O,W1O)
set E1O=h[4]
set Z1O=$41313639
set U1O=XKo
call SetUnitAbilityLevel(E1O,Z1O,U1O)
endif
endif
if KJo==G[5] then
set I1O=G[5]
set CKo=GetUnitX(I1O)
set P1O=G[5]
set VKo=GetUnitY(P1O)
set h[5]=CreateUnit(HJo,$6E303349,CKo,VKo,0.)
set A1O=h[5]
set D1O=$4545564F
call UnitAddAbility(A1O,D1O)
set H1O=G[5]
if GetUnitTypeId(H1O)==$6E676164 then
set J1O=G[5]
set K1O=$41303042
set BKo=GetUnitAbilityLevel(J1O,K1O)
set L1O=h[5]
set X1O=$41313641
call UnitAddAbility(L1O,X1O)
set C1O=h[5]
set V1O=$41313641
set B1O=BKo
call SetUnitAbilityLevel(C1O,V1O,B1O)
endif
set N1O=G[5]
if GetUnitTypeId(N1O)==$6E64727A then
set M1O=G[5]
set w4O=$41303852
set NKo=GetUnitAbilityLevel(M1O,w4O)
set u4O=h[5]
set r4O=$41313630
call UnitAddAbility(u4O,r4O)
set s4O=h[5]
set t4O=$41313630
set i4O=NKo
call SetUnitAbilityLevel(s4O,t4O,i4O)
endif
set S4O=G[5]
if GetUnitTypeId(S4O)==$6E647267 then
set c4O=G[5]
set o4O=$41303856
set MKo=GetUnitAbilityLevel(c4O,o4O)
set O4O=h[5]
set l4O=$41313642
call UnitAddAbility(O4O,l4O)
set b4O=h[5]
set y4O=$41313642
set p4O=MKo
call SetUnitAbilityLevel(b4O,y4O,p4O)
endif
set e4O=G[5]
if GetUnitTypeId(e4O)==$6E676D65 then
set q4O=G[5]
set a4O=$4130384F
set wLo=GetUnitAbilityLevel(q4O,a4O)
set n4O=h[5]
set d4O=$41313631
call UnitAddAbility(n4O,d4O)
set f4O=h[5]
set R4O=$41313631
set T4O=wLo
call SetUnitAbilityLevel(f4O,R4O,T4O)
endif
set Y4O=G[5]
if GetUnitTypeId(Y4O)==$6E647272 then
set G4O=G[5]
set g4O=$41303858
set uLo=GetUnitAbilityLevel(G4O,g4O)
set h4O=G[5]
set F4O=$41303859
set rLo=GetUnitAbilityLevel(h4O,F4O)
set k4O=h[5]
set j4O=$41313632
call UnitAddAbility(k4O,j4O)
set x4O=h[5]
set v4O=$41313633
set m4O=uLo
call SetUnitAbilityLevel(x4O,v4O,m4O)
set Q4O=h[5]
set W4O=$41313632
call UnitAddAbility(Q4O,W4O)
set E4O=h[5]
set Z4O=$41313633
set U4O=rLo
call SetUnitAbilityLevel(E4O,Z4O,U4O)
endif
set I4O=G[5]
if GetUnitTypeId(I4O)==$6E6D7232 then
set P4O=h[5]
set A4O=$41303853
call UnitAddAbility(P4O,A4O)
endif
set D4O=G[5]
if GetUnitTypeId(D4O)==$6E676F6C then
set H4O=h[5]
set J4O=$41303853
call UnitAddAbility(H4O,J4O)
endif
set K4O=G[5]
if GetUnitTypeId(K4O)==$6E64726F then
set L4O=G[5]
set X4O=$41303855
set sLo=GetUnitAbilityLevel(L4O,X4O)
set C4O=h[5]
set V4O=$41313635
call UnitAddAbility(C4O,V4O)
set B4O=h[5]
set N4O=$41313635
set M4O=sLo
call SetUnitAbilityLevel(B4O,N4O,M4O)
endif
set w2O=G[5]
if GetUnitTypeId(w2O)==$6E776774 then
set u2O=G[5]
set r2O=$41303850
set tLo=GetUnitAbilityLevel(u2O,r2O)
set s2O=h[5]
set t2O=$41313636
call UnitAddAbility(s2O,t2O)
set i2O=h[5]
set S2O=$41313636
set c2O=tLo
call SetUnitAbilityLevel(i2O,S2O,c2O)
endif
set o2O=G[5]
if GetUnitTypeId(o2O)==$6E647275 then
set O2O=G[5]
set l2O=$4130384E
set iLo=GetUnitAbilityLevel(O2O,l2O)
set b2O=h[5]
set y2O=$41313637
call UnitAddAbility(b2O,y2O)
set p2O=h[5]
set e2O=$41313637
set q2O=iLo
call SetUnitAbilityLevel(p2O,e2O,q2O)
endif
set a2O=G[5]
if GetUnitTypeId(a2O)==$6E666F68 then
set n2O=G[5]
set d2O=$4130384D
set SLo=GetUnitAbilityLevel(n2O,d2O)
set f2O=h[5]
set R2O=$41313638
call UnitAddAbility(f2O,R2O)
set T2O=h[5]
set Y2O=$41313638
set G2O=SLo
call SetUnitAbilityLevel(T2O,Y2O,G2O)
endif
set g2O=G[5]
if GetUnitTypeId(g2O)==$6E64726B then
set h2O=G[5]
set F2O=$41303851
set cLo=GetUnitAbilityLevel(h2O,F2O)
set k2O=h[5]
set j2O=$41313639
call UnitAddAbility(k2O,j2O)
set x2O=h[5]
set v2O=$41313639
set m2O=cLo
call SetUnitAbilityLevel(x2O,v2O,m2O)
endif
endif
if KJo==G[6] then
set Q2O=G[6]
set oLo=GetUnitX(Q2O)
set W2O=G[6]
set OLo=GetUnitY(W2O)
set h[6]=CreateUnit(HJo,$6E303349,oLo,OLo,0.)
set E2O=h[6]
set Z2O=$4545564F
call UnitAddAbility(E2O,Z2O)
set U2O=G[6]
if GetUnitTypeId(U2O)==$6E676164 then
set I2O=G[6]
set P2O=$41303042
set lLo=GetUnitAbilityLevel(I2O,P2O)
set A2O=h[6]
set D2O=$41313641
call UnitAddAbility(A2O,D2O)
set H2O=h[6]
set J2O=$41313641
set K2O=lLo
call SetUnitAbilityLevel(H2O,J2O,K2O)
endif
set L2O=G[6]
if GetUnitTypeId(L2O)==$6E64727A then
set X2O=G[6]
set C2O=$41303852
set bLo=GetUnitAbilityLevel(X2O,C2O)
set V2O=h[6]
set B2O=$41313630
call UnitAddAbility(V2O,B2O)
set N2O=h[6]
set M2O=$41313630
set w5O=bLo
call SetUnitAbilityLevel(N2O,M2O,w5O)
endif
set u5O=G[6]
if GetUnitTypeId(u5O)==$6E647267 then
set r5O=G[6]
set s5O=$41303856
set yLo=GetUnitAbilityLevel(r5O,s5O)
set t5O=h[6]
set i5O=$41313642
call UnitAddAbility(t5O,i5O)
set S5O=h[6]
set c5O=$41313642
set o5O=yLo
call SetUnitAbilityLevel(S5O,c5O,o5O)
endif
set O5O=G[6]
if GetUnitTypeId(O5O)==$6E676D65 then
set l5O=G[6]
set b5O=$4130384F
set pLo=GetUnitAbilityLevel(l5O,b5O)
set y5O=h[6]
set p5O=$41313631
call UnitAddAbility(y5O,p5O)
set e5O=h[6]
set q5O=$41313631
set a5O=pLo
call SetUnitAbilityLevel(e5O,q5O,a5O)
endif
set n5O=G[6]
if GetUnitTypeId(n5O)==$6E647272 then
set d5O=G[6]
set f5O=$41303858
set eLo=GetUnitAbilityLevel(d5O,f5O)
set R5O=G[6]
set T5O=$41303859
set qLo=GetUnitAbilityLevel(R5O,T5O)
set Y5O=h[6]
set G5O=$41313632
call UnitAddAbility(Y5O,G5O)
set g5O=h[6]
set h5O=$41313633
set F5O=eLo
call SetUnitAbilityLevel(g5O,h5O,F5O)
set k5O=h[6]
set j5O=$41313632
call UnitAddAbility(k5O,j5O)
set x5O=h[6]
set v5O=$41313633
set m5O=qLo
call SetUnitAbilityLevel(x5O,v5O,m5O)
endif
set Q5O=G[6]
if GetUnitTypeId(Q5O)==$6E6D7232 then
set W5O=h[6]
set E5O=$41303853
call UnitAddAbility(W5O,E5O)
endif
set Z5O=G[6]
if GetUnitTypeId(Z5O)==$6E676F6C then
set U5O=h[6]
set I5O=$41303853
call UnitAddAbility(U5O,I5O)
endif
set P5O=G[6]
if GetUnitTypeId(P5O)==$6E64726F then
set A5O=G[6]
set D5O=$41303855
set aLo=GetUnitAbilityLevel(A5O,D5O)
set H5O=h[6]
set J5O=$41313635
call UnitAddAbility(H5O,J5O)
set K5O=h[6]
set L5O=$41313635
set X5O=aLo
call SetUnitAbilityLevel(K5O,L5O,X5O)
endif
set C5O=G[6]
if GetUnitTypeId(C5O)==$6E776774 then
set V5O=G[6]
set B5O=$41303850
set nLo=GetUnitAbilityLevel(V5O,B5O)
set N5O=h[6]
set M5O=$41313636
call UnitAddAbility(N5O,M5O)
set w6O=h[6]
set u6O=$41313636
set r6O=nLo
call SetUnitAbilityLevel(w6O,u6O,r6O)
endif
set s6O=G[6]
if GetUnitTypeId(s6O)==$6E647275 then
set t6O=G[6]
set i6O=$4130384E
set dLo=GetUnitAbilityLevel(t6O,i6O)
set S6O=h[6]
set c6O=$41313637
call UnitAddAbility(S6O,c6O)
set o6O=h[6]
set O6O=$41313637
set l6O=dLo
call SetUnitAbilityLevel(o6O,O6O,l6O)
endif
set b6O=G[6]
if GetUnitTypeId(b6O)==$6E666F68 then
set y6O=G[6]
set p6O=$4130384D
set fLo=GetUnitAbilityLevel(y6O,p6O)
set e6O=h[6]
set q6O=$41313638
call UnitAddAbility(e6O,q6O)
set a6O=h[6]
set n6O=$41313638
set d6O=fLo
call SetUnitAbilityLevel(a6O,n6O,d6O)
endif
set f6O=G[6]
if GetUnitTypeId(f6O)==$6E64726B then
set R6O=G[6]
set T6O=$41303851
set RLo=GetUnitAbilityLevel(R6O,T6O)
set Y6O=h[6]
set G6O=$41313639
call UnitAddAbility(Y6O,G6O)
set g6O=h[6]
set h6O=$41313639
set F6O=RLo
call SetUnitAbilityLevel(g6O,h6O,F6O)
endif
endif
if KJo==G[7] then
set k6O=G[7]
set TLo=GetUnitX(k6O)
set j6O=G[7]
set YLo=GetUnitY(j6O)
set h[7]=CreateUnit(HJo,$6E303349,TLo,YLo,0.)
set x6O=h[7]
set v6O=$4545564F
call UnitAddAbility(x6O,v6O)
set m6O=G[7]
if GetUnitTypeId(m6O)==$6E676164 then
set Q6O=G[7]
set W6O=$41303042
set GLo=GetUnitAbilityLevel(Q6O,W6O)
set E6O=h[7]
set Z6O=$41313641
call UnitAddAbility(E6O,Z6O)
set U6O=h[7]
set I6O=$41313641
set P6O=GLo
call SetUnitAbilityLevel(U6O,I6O,P6O)
endif
set A6O=G[7]
if GetUnitTypeId(A6O)==$6E64727A then
set D6O=G[7]
set H6O=$41303852
set gLo=GetUnitAbilityLevel(D6O,H6O)
set J6O=h[7]
set K6O=$41313630
call UnitAddAbility(J6O,K6O)
set L6O=h[7]
set X6O=$41313630
set C6O=gLo
call SetUnitAbilityLevel(L6O,X6O,C6O)
endif
set V6O=G[7]
if GetUnitTypeId(V6O)==$6E647267 then
set B6O=G[7]
set N6O=$41303856
set hLo=GetUnitAbilityLevel(B6O,N6O)
set M6O=h[7]
set w7O=$41313642
call UnitAddAbility(M6O,w7O)
set u7O=h[7]
set r7O=$41313642
set s7O=hLo
call SetUnitAbilityLevel(u7O,r7O,s7O)
endif
set t7O=G[7]
if GetUnitTypeId(t7O)==$6E676D65 then
set i7O=G[7]
set S7O=$4130384F
set FLo=GetUnitAbilityLevel(i7O,S7O)
set c7O=h[7]
set o7O=$41313631
call UnitAddAbility(c7O,o7O)
set O7O=h[7]
set l7O=$41313631
set b7O=FLo
call SetUnitAbilityLevel(O7O,l7O,b7O)
endif
set y7O=G[7]
if GetUnitTypeId(y7O)==$6E647272 then
set p7O=G[7]
set e7O=$41303858
set kLo=GetUnitAbilityLevel(p7O,e7O)
set q7O=G[7]
set a7O=$41303859
set jLo=GetUnitAbilityLevel(q7O,a7O)
set n7O=h[7]
set d7O=$41313632
call UnitAddAbility(n7O,d7O)
set f7O=h[7]
set R7O=$41313633
set T7O=kLo
call SetUnitAbilityLevel(f7O,R7O,T7O)
set Y7O=h[7]
set G7O=$41313632
call UnitAddAbility(Y7O,G7O)
set g7O=h[7]
set h7O=$41313633
set F7O=jLo
call SetUnitAbilityLevel(g7O,h7O,F7O)
endif
set k7O=G[7]
if GetUnitTypeId(k7O)==$6E6D7232 then
set j7O=h[7]
set x7O=$41303853
call UnitAddAbility(j7O,x7O)
endif
set v7O=G[7]
if GetUnitTypeId(v7O)==$6E676F6C then
set m7O=h[7]
set Q7O=$41303853
call UnitAddAbility(m7O,Q7O)
endif
set W7O=G[7]
if GetUnitTypeId(W7O)==$6E64726F then
set E7O=G[7]
set Z7O=$41303855
set xLo=GetUnitAbilityLevel(E7O,Z7O)
set U7O=h[7]
set I7O=$41313635
call UnitAddAbility(U7O,I7O)
set P7O=h[7]
set A7O=$41313635
set D7O=xLo
call SetUnitAbilityLevel(P7O,A7O,D7O)
endif
set H7O=G[7]
if GetUnitTypeId(H7O)==$6E776774 then
set J7O=G[7]
set K7O=$41303850
set vLo=GetUnitAbilityLevel(J7O,K7O)
set L7O=h[7]
set X7O=$41313636
call UnitAddAbility(L7O,X7O)
set C7O=h[7]
set V7O=$41313636
set B7O=vLo
call SetUnitAbilityLevel(C7O,V7O,B7O)
endif
set N7O=G[7]
if GetUnitTypeId(N7O)==$6E647275 then
set M7O=G[7]
set w8O=$4130384E
set mLo=GetUnitAbilityLevel(M7O,w8O)
set u8O=h[7]
set r8O=$41313637
call UnitAddAbility(u8O,r8O)
set s8O=h[7]
set t8O=$41313637
set i8O=mLo
call SetUnitAbilityLevel(s8O,t8O,i8O)
endif
set S8O=G[7]
if GetUnitTypeId(S8O)==$6E666F68 then
set c8O=G[7]
set o8O=$4130384D
set QLo=GetUnitAbilityLevel(c8O,o8O)
set O8O=h[7]
set l8O=$41313638
call UnitAddAbility(O8O,l8O)
set b8O=h[7]
set y8O=$41313638
set p8O=QLo
call SetUnitAbilityLevel(b8O,y8O,p8O)
endif
set e8O=G[7]
if GetUnitTypeId(e8O)==$6E64726B then
set q8O=G[7]
set a8O=$41303851
set WLo=GetUnitAbilityLevel(q8O,a8O)
set n8O=h[7]
set d8O=$41313639
call UnitAddAbility(n8O,d8O)
set f8O=h[7]
set R8O=$41313639
set T8O=WLo
call SetUnitAbilityLevel(f8O,R8O,T8O)
endif
endif
if KJo==G[8] then
set Y8O=G[8]
set ELo=GetUnitX(Y8O)
set G8O=G[8]
set ZLo=GetUnitY(G8O)
set h[8]=CreateUnit(HJo,$6E303349,ELo,ZLo,0.)
set g8O=h[8]
set h8O=$4545564F
call UnitAddAbility(g8O,h8O)
set F8O=G[8]
if GetUnitTypeId(F8O)==$6E676164 then
set k8O=G[8]
set j8O=$41303042
set ULo=GetUnitAbilityLevel(k8O,j8O)
set x8O=h[8]
set v8O=$41313641
call UnitAddAbility(x8O,v8O)
set m8O=h[8]
set Q8O=$41313641
set W8O=ULo
call SetUnitAbilityLevel(m8O,Q8O,W8O)
endif
set E8O=G[8]
if GetUnitTypeId(E8O)==$6E64727A then
set Z8O=G[8]
set U8O=$41303852
set ILo=GetUnitAbilityLevel(Z8O,U8O)
set I8O=h[8]
set P8O=$41313630
call UnitAddAbility(I8O,P8O)
set A8O=h[8]
set D8O=$41313630
set H8O=ILo
call SetUnitAbilityLevel(A8O,D8O,H8O)
endif
set J8O=G[8]
if GetUnitTypeId(J8O)==$6E647267 then
set K8O=G[8]
set L8O=$41303856
set PLo=GetUnitAbilityLevel(K8O,L8O)
set X8O=h[8]
set C8O=$41313642
call UnitAddAbility(X8O,C8O)
set V8O=h[8]
set B8O=$41313642
set N8O=PLo
call SetUnitAbilityLevel(V8O,B8O,N8O)
endif
set M8O=G[8]
if GetUnitTypeId(M8O)==$6E676D65 then
set w9O=G[8]
set u9O=$4130384F
set ALo=GetUnitAbilityLevel(w9O,u9O)
set r9O=h[8]
set s9O=$41313631
call UnitAddAbility(r9O,s9O)
set t9O=h[8]
set i9O=$41313631
set S9O=ALo
call SetUnitAbilityLevel(t9O,i9O,S9O)
endif
set c9O=G[8]
if GetUnitTypeId(c9O)==$6E647272 then
set o9O=G[8]
set O9O=$41303858
set DLo=GetUnitAbilityLevel(o9O,O9O)
set l9O=G[8]
set b9O=$41303859
set HLo=GetUnitAbilityLevel(l9O,b9O)
set y9O=h[8]
set p9O=$41313632
call UnitAddAbility(y9O,p9O)
set e9O=h[8]
set q9O=$41313633
set a9O=DLo
call SetUnitAbilityLevel(e9O,q9O,a9O)
set n9O=h[8]
set d9O=$41313632
call UnitAddAbility(n9O,d9O)
set f9O=h[8]
set R9O=$41313633
set T9O=HLo
call SetUnitAbilityLevel(f9O,R9O,T9O)
endif
set Y9O=G[8]
if GetUnitTypeId(Y9O)==$6E6D7232 then
set G9O=h[8]
set g9O=$41303853
call UnitAddAbility(G9O,g9O)
endif
set h9O=G[8]
if GetUnitTypeId(h9O)==$6E676F6C then
set F9O=h[8]
set k9O=$41303853
call UnitAddAbility(F9O,k9O)
endif
set j9O=G[8]
if GetUnitTypeId(j9O)==$6E64726F then
set x9O=G[8]
set v9O=$41303855
set JLo=GetUnitAbilityLevel(x9O,v9O)
set m9O=h[8]
set Q9O=$41313635
call UnitAddAbility(m9O,Q9O)
set W9O=h[8]
set E9O=$41313635
set Z9O=JLo
call SetUnitAbilityLevel(W9O,E9O,Z9O)
endif
set U9O=G[8]
if GetUnitTypeId(U9O)==$6E776774 then
set I9O=G[8]
set P9O=$41303850
set KLo=GetUnitAbilityLevel(I9O,P9O)
set A9O=h[8]
set D9O=$41313636
call UnitAddAbility(A9O,D9O)
set H9O=h[8]
set J9O=$41313636
set K9O=KLo
call SetUnitAbilityLevel(H9O,J9O,K9O)
endif
set L9O=G[8]
if GetUnitTypeId(L9O)==$6E647275 then
set X9O=G[8]
set C9O=$4130384E
set LLo=GetUnitAbilityLevel(X9O,C9O)
set V9O=h[8]
set B9O=$41313637
call UnitAddAbility(V9O,B9O)
set N9O=h[8]
set M9O=$41313637
set w0O=LLo
call SetUnitAbilityLevel(N9O,M9O,w0O)
endif
set u0O=G[8]
if GetUnitTypeId(u0O)==$6E666F68 then
set r0O=G[8]
set s0O=$4130384D
set XLo=GetUnitAbilityLevel(r0O,s0O)
set t0O=h[8]
set i0O=$41313638
call UnitAddAbility(t0O,i0O)
set S0O=h[8]
set c0O=$41313638
set o0O=XLo
call SetUnitAbilityLevel(S0O,c0O,o0O)
endif
set O0O=G[8]
if GetUnitTypeId(O0O)==$6E64726B then
set l0O=G[8]
set b0O=$41303851
set CLo=GetUnitAbilityLevel(l0O,b0O)
set y0O=h[8]
set p0O=$41313639
call UnitAddAbility(y0O,p0O)
set e0O=h[8]
set q0O=$41313639
set a0O=CLo
call SetUnitAbilityLevel(e0O,q0O,a0O)
endif
endif
endloop
set n0O=DJo
call DestroyGroup(n0O)
set d0O=JJo
call DestroyBoolExpr(d0O)
endif
endif
set AJo=null
set DJo=null
set HJo=null
set JJo=null
set KJo=null
set LJo=null
set VLo=null
set BLo=null
set NLo=null
set MLo=null
set wXo=null
set uXo=null
set rXo=null
set sXo=null
set tXo=null
set iXo=null
set SXo=null
set cXo=null
set oXo=null
set lXo=null
set bXo=null
set pXo=null
set qXo=null
set dXo=null
set fXo=null
set TXo=null
set GXo=null
set FXo=null
set kXo=null
set xXo=null
set mXo=null
set EXo=null
set ZXo=null
set IXo=null
set AXo=null
set JXo=null
set KXo=null
set XXo=null
set VXo=null
set NXo=null
set uCo=null
set sCo=null
set SCo=null
set cCo=null
set OCo=null
set lCo=null
set yCo=null
set pCo=null
set qCo=null
set nCo=null
set RCo=null
set TCo=null
set GCo=null
set hCo=null
set jCo=null
set xCo=null
set mCo=null
set WCo=null
set UCo=null
set ICo=null
set ACo=null
set HCo=null
set LCo=null
set XCo=null
set VCo=null
set NCo=null
set uVo=null
set rVo=null
set sVo=null
set iVo=null
set SVo=null
set oVo=null
set lVo=null
set pVo=null
set eVo=null
set aVo=null
set dVo=null
set TVo=null
set YVo=null
set gVo=null
set FVo=null
set xVo=null
set vVo=null
set QVo=null
set EVo=null
set IVo=null
set PVo=null
set DVo=null
set JVo=null
set LVo=null
set VVo=null
set NVo=null
set uBo=null
set rBo=null
set tBo=null
set iBo=null
set cBo=null
set oBo=null
set lBo=null
set yBo=null
set qBo=null
set aBo=null
set dBo=null
set RBo=null
set GBo=null
set gBo=null
set FBo=null
set jBo=null
set mBo=null
set QBo=null
set EBo=null
set UBo=null
set ABo=null
set DBo=null
set JBo=null
set LBo=null
set VBo=null
set BBo=null
set NBo=null
set wNo=null
set uNo=null
set sNo=null
set iNo=null
set oNo=null
set ONo=null
set bNo=null
set pNo=null
set aNo=null
set nNo=null
set fNo=null
set TNo=null
set gNo=null
set hNo=null
set kNo=null
set xNo=null
set QNo=null
set WNo=null
set ZNo=null
set INo=null
set ANo=null
set JNo=null
set LNo=null
set VNo=null
set BNo=null
set MNo=null
set wMo=null
set rMo=null
set sMo=null
set iMo=null
set cMo=null
set lMo=null
set bMo=null
set pMo=null
set qMo=null
set dMo=null
set fMo=null
set TMo=null
set GMo=null
set FMo=null
set kMo=null
set xMo=null
set mMo=null
set EMo=null
set ZMo=null
set IMo=null
set AMo=null
set JMo=null
set KMo=null
set LMo=null
set CMo=null
set VMo=null
set NMo=null
set w3O=null
set s3O=null
set t3O=null
set S3O=null
set o3O=null
set b3O=null
set y3O=null
set e3O=null
set a3O=null
set f3O=null
set R3O=null
set Y3O=null
set g3O=null
set k3O=null
set j3O=null
set v3O=null
set Q3O=null
set E3O=null
set I3O=null
set A3O=null
set J3O=null
set K3O=null
set X3O=null
set C3O=null
set B3O=null
set N3O=null
set w1O=null
set r1O=null
set i1O=null
set S1O=null
set o1O=null
set l1O=null
set p1O=null
set e1O=null
set a1O=null
set d1O=null
set T1O=null
set Y1O=null
set g1O=null
set F1O=null
set x1O=null
set v1O=null
set Q1O=null
set E1O=null
set I1O=null
set P1O=null
set A1O=null
set H1O=null
set J1O=null
set L1O=null
set C1O=null
set N1O=null
set M1O=null
set u4O=null
set s4O=null
set S4O=null
set c4O=null
set O4O=null
set b4O=null
set e4O=null
set q4O=null
set n4O=null
set f4O=null
set Y4O=null
set G4O=null
set h4O=null
set k4O=null
set x4O=null
set Q4O=null
set E4O=null
set I4O=null
set P4O=null
set D4O=null
set H4O=null
set K4O=null
set L4O=null
set C4O=null
set B4O=null
set w2O=null
set u2O=null
set s2O=null
set i2O=null
set o2O=null
set O2O=null
set b2O=null
set p2O=null
set a2O=null
set n2O=null
set f2O=null
set T2O=null
set g2O=null
set h2O=null
set k2O=null
set x2O=null
set Q2O=null
set W2O=null
set E2O=null
set U2O=null
set I2O=null
set A2O=null
set H2O=null
set L2O=null
set X2O=null
set V2O=null
set N2O=null
set u5O=null
set r5O=null
set t5O=null
set S5O=null
set O5O=null
set l5O=null
set y5O=null
set e5O=null
set n5O=null
set d5O=null
set R5O=null
set Y5O=null
set g5O=null
set k5O=null
set x5O=null
set Q5O=null
set W5O=null
set Z5O=null
set U5O=null
set P5O=null
set A5O=null
set H5O=null
set K5O=null
set C5O=null
set V5O=null
set N5O=null
set w6O=null
set s6O=null
set t6O=null
set S6O=null
set o6O=null
set b6O=null
set y6O=null
set e6O=null
set a6O=null
set f6O=null
set R6O=null
set Y6O=null
set g6O=null
set k6O=null
set j6O=null
set x6O=null
set m6O=null
set Q6O=null
set E6O=null
set U6O=null
set A6O=null
set D6O=null
set J6O=null
set L6O=null
set V6O=null
set B6O=null
set M6O=null
set u7O=null
set t7O=null
set i7O=null
set c7O=null
set O7O=null
set y7O=null
set p7O=null
set q7O=null
set n7O=null
set f7O=null
set Y7O=null
set g7O=null
set k7O=null
set j7O=null
set v7O=null
set m7O=null
set W7O=null
set E7O=null
set U7O=null
set P7O=null
set H7O=null
set J7O=null
set L7O=null
set C7O=null
set N7O=null
set M7O=null
set u8O=null
set s8O=null
set S8O=null
set c8O=null
set O8O=null
set b8O=null
set e8O=null
set q8O=null
set n8O=null
set f8O=null
set Y8O=null
set G8O=null
set g8O=null
set F8O=null
set k8O=null
set x8O=null
set m8O=null
set E8O=null
set Z8O=null
set I8O=null
set A8O=null
set J8O=null
set K8O=null
set X8O=null
set V8O=null
set M8O=null
set w9O=null
set r9O=null
set t9O=null
set c9O=null
set o9O=null
set l9O=null
set y9O=null
set e9O=null
set n9O=null
set f9O=null
set Y9O=null
set G9O=null
set h9O=null
set F9O=null
set j9O=null
set x9O=null
set m9O=null
set W9O=null
set U9O=null
set I9O=null
set A9O=null
set H9O=null
set L9O=null
set X9O=null
set V9O=null
set N9O=null
set u0O=null
set r0O=null
set t0O=null
set S0O=null
set O0O=null
set l0O=null
set y0O=null
set e0O=null
set n0O=null
set d0O=null
endfunction
function urO takes string HuO returns nothing
local unit JuO
local integer KuO
local unit LuO
local unit XuO
local integer CuO
local string VuO
local integer BuO
local real NuO
local integer MuO
local string wrO
set aW[qW]=HuO
set qW=qW+1
set JuO=GetAttacker()
set LuO=JuO
if GetUnitTypeId(LuO)==$68303235 then
if GetRandomInt(1,100)<=15 then
set XuO=JuO
set CuO=$414D3033
call UnitAddAbility(XuO,CuO)
set VuO="when calling alloc_CallbackSingle_doAfter_BloodRangeBonus in BloodRangeBonus, line 79"
set aW[qW]=VuO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set BuO=fF
set RF[BuO]=684
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BloodRangeBonus.","when calling error in BloodRangeBonus, line 79")
set BuO=0
endif
else
set dF=dF-1
set BuO=nF[dF]
set RF[BuO]=684
endif
set qW=qW-1
set KuO=BuO
set tj[KuO]=JuO
set NuO=1.7
set MuO=KuO
set wrO="when calling doAfter in BloodRangeBonus, line 79"
set aW[qW]=wrO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),NuO,MuO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set JuO=null
set LuO=null
set XuO=null
endfunction
function f0e takes nothing returns nothing
set qW=0
call urO("via function reference BloodRangeBonus, line 84")
endfunction
function f1e takes nothing returns boolean
local trigger X3e=CreateTrigger()
local integer C3e=0
local trigger V3e
local trigger B3e
local boolexpr N3e
local trigger M3e
local code w1e
local trigger u1e
local playerunitevent r1e
local trigger s1e
local playerunitevent t1e
local integer i1e
local trigger S1e
local boolexpr c1e
local trigger o1e
local code O1e
local trigger l1e
local playerunitevent b1e
local trigger y1e
local playerunitevent p1e
local integer e1e
local trigger q1e
local boolexpr a1e
local trigger n1e
local code d1e
loop
exitwhen C3e>3
call TriggerRegisterPlayerSelectionEventBJ(X3e,Player(C3e),true)
call TriggerRegisterPlayerSelectionEventBJ(X3e,Player(C3e),false)
set C3e=C3e+1
endloop
set B3e=X3e
set N3e=Condition(b0w)
call TriggerAddCondition(B3e,N3e)
set M3e=X3e
set w1e=y0w
call TriggerAddAction(M3e,w1e)
set V3e=CreateTrigger()
set u1e=V3e
set r1e=EVENT_PLAYER_UNIT_SPELL_EFFECT
set s1e=u1e
set t1e=r1e
set i1e=0
loop
call TriggerRegisterPlayerUnitEvent(s1e,Player(i1e),t1e,null)
set i1e=i1e+1
exitwhen i1e==bj_MAX_PLAYER_SLOTS
endloop
set S1e=V3e
set c1e=Condition(p0w)
call TriggerAddCondition(S1e,c1e)
set o1e=V3e
set O1e=e0w
call TriggerAddAction(o1e,O1e)
set l1e=Ws
set b1e=EVENT_PLAYER_UNIT_SPELL_EFFECT
set y1e=l1e
set p1e=b1e
set e1e=0
loop
call TriggerRegisterPlayerUnitEvent(y1e,Player(e1e),p1e,null)
set e1e=e1e+1
exitwhen e1e==bj_MAX_PLAYER_SLOTS
endloop
set q1e=Ws
set a1e=Condition(q0w)
call TriggerAddCondition(q1e,a1e)
set n1e=Ws
set d1e=a0w
call TriggerAddAction(n1e,d1e)
set cs[1]=$534C5431
set cs[2]=$534C5432
set cs[3]=$534C5433
set cs[4]=$534C5434
set cs[5]=$534C5435
set cs[6]=$534C5436
set ss[1]=$49303048
set ts[1]=$414D3772
set ss[2]=$49303049
set ts[2]=$414D3773
set ss[3]=$4930304A
set ts[3]=$414D3774
set ss[4]=$4930304B
set ts[4]=$414D3775
set ss[5]=$49303045
set ts[5]=$414D3868
set ss[6]=$49303046
set ts[6]=$414D3869
set ss[7]=$49303047
set ts[7]=$414D386A
set ss[8]=$494D3074
set ts[8]=$414D3776
set ss[9]=$494D3075
set ts[9]=$414D3777
set ss[10]=$494D3076
set ts[10]=$414D3778
set ss[11]=$494D3077
set ts[11]=$414D3779
set ss[12]=$494D3078
set ts[12]=$414D377A
set ss[13]=$494D3079
set ts[13]=$414D377B
set ss[14]=$494D3066
set ts[14]=$414D377C
set ss[15]=$494D3039
set ts[15]=$414D377D
set ss[16]=$494D3067
set ts[16]=$414D377E
set ss[17]=$494D3068
set ts[17]=$414D3821
set ss[18]=$494D3069
set ts[18]=$414D3830
set ss[19]=$494D306A
set ts[19]=$414D3831
set ss[20]=$494D306B
set ts[20]=$414D3832
set ss[41]=$494D3061
set ts[41]=$414D3833
set ss[21]=$494D3062
set ts[21]=$414D3834
set ss[22]=$494D3063
set ts[22]=$414D3835
set ss[23]=$494D3064
set ts[23]=$414D3836
set ss[24]=$494D306C
set ts[24]=$414D3837
set ss[25]=$494D306D
set ts[25]=$414D3838
set ss[26]=$494D3065
set ts[26]=$414D3839
set ss[27]=$494D3038
set ts[27]=$414D386B
set ss[28]=$494D3031
set ts[28]=$414D3861
set ss[29]=$494D3032
set ts[29]=$414D3863
set ss[30]=$494D3033
set ts[30]=$414D3864
set ss[31]=$494D3034
set ts[31]=$414D3865
set ss[32]=$494D3035
set ts[32]=$414D3866
set ss[33]=$494D3036
set ts[33]=$414D3867
set ss[34]=$494D3037
set ts[34]=$414D3862
set ss[35]=$49303030
set ts[35]=$414D386C
set ss[36]=$49303037
set ts[36]=$414D386D
set ss[37]=$49303032
set ts[37]=$414D386E
set ss[38]=$49303033
set ts[38]=$414D386F
set ss[39]=$49303036
set ts[39]=$414D3870
set ss[40]=$49303035
set ts[40]=$414D3871
set is[1]=$484D306B
set Ss[1]=$414D3731
set is[2]=$484D306A
set Ss[2]=$414D3733
set is[3]=$484D3068
set Ss[3]=$414D3735
set is[4]=$484D3069
set Ss[4]=$414D3737
set is[5]=$55303041
set Ss[5]=$414D376A
set is[6]=$55303042
set Ss[6]=$414D376C
set is[7]=$55303043
set Ss[7]=$414D376E
set is[8]=$55303045
set Ss[8]=$414D3770
set is[9]=$48303247
set Ss[9]=$414D366C
set is[10]=$48303248
set Ss[10]=$414D366E
set is[11]=$48303249
set Ss[11]=$414D3670
set is[12]=$4830324A
set Ss[12]=$414D3672
set is[13]=$4F303258
set Ss[13]=$414D357C
set is[14]=$4F303337
set Ss[14]=$414D357E
set is[15]=$4F303338
set Ss[15]=$414D3630
set is[16]=$4F303339
set Ss[16]=$414D3632
set is[17]=$484D3064
set Ss[17]=$414D3636
set is[18]=$484D3067
set Ss[18]=$414D3634
set is[19]=$484D3066
set Ss[19]=$414D3638
set is[20]=$484D3065
set Ss[20]=$414D3661
set is[21]=$4E627374
set Ss[21]=$414D3521
set is[22]=$4F677268
set Ss[22]=$414D347D
set is[23]=$4F746872
set Ss[23]=$414D3531
set is[24]=$4E736A73
set Ss[24]=$414D3533
set is[25]=$484D3039
set Ss[25]=$414D3574
set is[26]=$484D3061
set Ss[26]=$414D3576
set is[27]=$484D3062
set Ss[27]=$414D3578
set is[28]=$484D3063
set Ss[28]=$414D357A
set is[29]=$4F746368
set Ss[29]=$414D3537
set is[30]=$4F73616D
set Ss[30]=$414D3535
set is[31]=$4F676C64
set Ss[31]=$414D3539
set is[32]=$4F636232
set Ss[32]=$414D3562
set is[33]=$45777264
set Ss[33]=$414D3477
set is[34]=$456D6F6F
set Ss[34]=$414D3475
set is[35]=$45667572
set Ss[35]=$414D3479
set is[36]=$4563656E
set Ss[36]=$414D347B
set is[37]=$45696C6C
set Ss[37]=$414D3366
set is[38]=$45776172
set Ss[38]=$414D3368
set is[39]=$48303238
set Ss[39]=$414D336A
set is[40]=$45747972
set Ss[40]=$414D336C
set is[41]=$4F626C61
set Ss[41]=$414D3566
set is[42]=$4F736864
set Ss[42]=$414D3564
set is[43]=$4F647274
set Ss[43]=$414D3568
set is[44]=$4F726578
set Ss[44]=$414D356A
set is[45]=$4E706C68
set Ss[45]=$414D3370
set is[46]=$55647265
set Ss[46]=$414D336E
set is[47]=$4E666972
set Ss[47]=$414D3372
set is[48]=$5563726C
set Ss[48]=$414D3374
set is[49]=$4F706768
set Ss[49]=$414D3430
set is[50]=$4E626263
set Ss[50]=$414D337E
set is[51]=$4F666172
set Ss[51]=$414D3432
set is[52]=$5562616C
set Ss[52]=$414D3434
set is[53]=$4E726F62
set Ss[53]=$414D3438
set is[54]=$4E616C63
set Ss[54]=$414D3436
set is[55]=$4E74696E
set Ss[55]=$414D3461
set is[56]=$4864676F
set Ss[56]=$414D3463
set is[57]=$486D6B67
set Ss[57]=$414D3378
set is[58]=$486B616C
set Ss[58]=$414D3376
set is[59]=$48616E74
set Ss[59]=$414D337A
set is[60]=$48686B6C
set Ss[60]=$414D337C
set is[61]=$4564656D
set Ss[61]=$414D346F
set is[62]=$4E6E6773
set Ss[62]=$414D346D
set is[63]=$456D6672
set Ss[63]=$414D3471
set is[64]=$456D6E73
set Ss[64]=$414D3473
set is[65]=$55646561
set Ss[65]=$414D356E
set is[66]=$4E62726E
set Ss[66]=$414D356C
set is[67]=$556C6963
set Ss[67]=$414D3570
set is[68]=$556B746C
set Ss[68]=$414D3572
set is[69]=$4870616C
set Ss[69]=$414D3467
set is[70]=$4861706D
set Ss[70]=$414D3465
set is[71]=$48616D67
set Ss[71]=$414D3469
set is[72]=$4867616D
set Ss[72]=$414D346B
set is[73]=$4F303431
set Ss[73]=$414D3872
set is[74]=$4F303432
set Ss[74]=$414D3873
set is[75]=$4F303433
set Ss[75]=$414D3874
set is[76]=$4F303434
set Ss[76]=$414D3875
set is[77]=$4F303435
set Ss[77]=$41323235
set is[78]=$4F303436
set Ss[78]=$41323236
set is[79]=$4F303437
set Ss[79]=$41323237
set is[80]=$4F303438
set Ss[80]=$41323238
set X3e=null
set V3e=null
set B3e=null
set N3e=null
set M3e=null
set u1e=null
set r1e=null
set s1e=null
set t1e=null
set S1e=null
set c1e=null
set o1e=null
set l1e=null
set b1e=null
set y1e=null
set p1e=null
set q1e=null
set a1e=null
set n1e=null
return true
endfunction
function f5u takes nothing returns boolean
return true
endfunction
function f6u takes nothing returns boolean
local playerunitevent n6u=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code d6u=E1
call emO(n6u,null,d6u,null)
set n6u=null
return true
endfunction
function f7S takes nothing returns boolean
local playerunitevent q7S=EVENT_PLAYER_UNIT_ATTACKED
local code a7S=d2
local playerunitevent n7S
local code d7S
call emO(q7S,null,a7S,null)
set n7S=EVENT_PLAYER_UNIT_SPELL_CAST
set d7S=f2
call emO(n7S,null,d7S,null)
set q7S=null
set n7S=null
return true
endfunction
function f7b takes nothing returns nothing
local timer l7b=GetExpiredTimer()
local integer b7b=GetHandleId(l7b)
local unit y7b=LoadUnitHandle(qu,b7b,$556E6974)
local unit p7b=LoadUnitHandle(qu,b7b,$54617267)
local integer e7b=GetHandleId(y7b)
local group q7b=tO
local unit a7b=p7b
local group n7b
local unit d7b
if IsUnitInGroup(a7b,q7b)==true then
set n7b=tO
set d7b=p7b
call GroupRemoveUnit(n7b,d7b)
endif
if LoadInteger(qu,$41544344,e7b)!=1 then
call SaveInteger(qu,$41544344,e7b,1)
call IssueImmediateOrder(y7b,"stop")
call IssueImmediateOrder(p7b,"stop")
call DestroyEffect(LoadEffectHandle(qu,b7b,$45666631))
call DestroyEffect(LoadEffectHandle(qu,b7b,$45666632))
call PauseTimer(l7b)
call DestroyTimer(l7b)
call FlushChildHashtable(qu,b7b)
endif
set l7b=null
set y7b=null
set p7b=null
set q7b=null
set a7b=null
set n7b=null
set d7b=null
endfunction
function f7t takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function f8l takes nothing returns boolean
local integer v7l
local string m7l
local integer Q7l
local string W7l
local integer E7l
local string Z7l
local integer U7l
local string I7l
local integer P7l
local string A7l
local integer D7l
local string H7l
local integer J7l
local string K7l
local integer L7l
local string X7l
local integer C7l
local string V7l
local integer B7l
local string N7l
local integer M7l
local string w8l
local integer u8l
local string r8l
local integer s8l
local string t8l
local integer i8l
local string S8l
local integer c8l
local string o8l
local integer O8l
local string l8l
local integer b8l
local string y8l
local integer p8l
local string e8l
local integer q8l
local string a8l
local integer n8l
local string d8l
set Nb=null
set v7l=$6F303033
set m7l="ReplaceableTextures\\CommandButtons\\BTNPickHuman.blp"
set Mb[0]=v7l
set wy[0]=m7l
set Q7l=$6F303036
set W7l="ReplaceableTextures\\CommandButtons\\BTNPickDwarf.blp"
set Mb[1]=Q7l
set wy[1]=W7l
set E7l=$6F303038
set Z7l="ReplaceableTextures\\CommandButtons\\BTNPickMerc2.blp"
set Mb[2]=E7l
set wy[2]=Z7l
set U7l=$6F303043
set I7l="ReplaceableTextures\\CommandButtons\\BTNPickOrc.blp"
set Mb[3]=U7l
set wy[3]=I7l
set P7l=$6F303046
set A7l="ReplaceableTextures\\CommandButtons\\BTNPickTroll.blp"
set Mb[4]=P7l
set wy[4]=A7l
set D7l=$6F303049
set H7l="ReplaceableTextures\\CommandButtons\\BTNPickTauren.blp"
set Mb[5]=D7l
set wy[5]=H7l
set J7l=$6F30304F
set K7l="ReplaceableTextures\\CommandButtons\\BTNPickDemon4.blp"
set Mb[6]=J7l
set wy[6]=K7l
set L7l=$6F30304C
set X7l="ReplaceableTextures\\CommandButtons\\BTNPickUndead.blp"
set Mb[7]=L7l
set wy[7]=X7l
set C7l=$6F303047
set V7l="ReplaceableTextures\\CommandButtons\\BTNPickFO.blp"
set Mb[8]=C7l
set wy[8]=V7l
set B7l=$65303032
set N7l="ReplaceableTextures\\CommandButtons\\BTNPickNE.blp"
set Mb[9]=B7l
set wy[9]=N7l
set M7l=$6F303055
set w8l="ReplaceableTextures\\CommandButtons\\BTNPickNaga.blp"
set Mb[10]=M7l
set wy[10]=w8l
set u8l=$6F303058
set r8l="ReplaceableTextures\\CommandButtons\\BTNPickBE.blp"
set Mb[11]=u8l
set wy[11]=r8l
set s8l=$6E303156
set t8l="ReplaceableTextures\\CommandButtons\\BTNAstroSatyr.blp"
set Mb[12]=s8l
set wy[12]=t8l
set i8l=$78303066
set S8l="ReplaceableTextures\\CommandButtons\\BTNPickRogue.blp"
set Mb[13]=i8l
set wy[13]=S8l
set c8l=$78303033
set o8l="ReplaceableTextures\\CommandButtons\\BTNArakkoaVoid.blp"
set Mb[14]=c8l
set wy[14]=o8l
set O8l=$78303074
set l8l="ReplaceableTextures\\CommandButtons\\BTNPandaren.blp"
set Mb[15]=O8l
set wy[15]=l8l
set b8l=$6F303247
set y8l="ReplaceableTextures\\CommandButtons\\BTNDraconid.blp"
set Mb[16]=b8l
set wy[16]=y8l
set p8l=$6830314B
set e8l="ReplaceableTextures\\CommandButtons\\BTNVupleraPick.blp"
set Mb[17]=p8l
set wy[17]=e8l
set q8l=$6E30325A
set a8l="ReplaceableTextures\\CommandButtons\\BTNgnoll.blp"
set Mb[18]=q8l
set wy[18]=a8l
set n8l=$6F303543
set d8l="ReplaceableTextures\\CommandButtons\\BTNKultirasPick.blp"
set Mb[19]=n8l
set wy[19]=d8l
return true
endfunction
function fAl takes nothing returns boolean
local unit qAl=GetKillingUnit()
local integer aAl=$41313856
local unit nAl
local boolean dAl
if GetUnitAbilityLevel(qAl,aAl)==0 then
set nAl=GetKillingUnit()
set dAl=GetUnitTypeId(nAl)==$4F303431
else
set dAl=false
endif
set qAl=null
set nAl=null
return dAl
endfunction
function fAt takes nothing returns boolean
return true
endfunction
function fBS takes nothing returns nothing
local unit qBS=GetAttacker()
local unit aBS=qBS
local unit nBS
local integer dBS
if GetUnitTypeId(aBS)==$486D6B67 then
set nBS=qBS
set dBS=852180
call IssueImmediateOrderById(nBS,dBS)
endif
set qBS=null
set aBS=null
set nBS=null
endfunction
function fCu takes nothing returns boolean
local unit oCu=GetFilterUnit()
local unit OCu=ol
local unit lCu=oCu
local unittype bCu=UNIT_TYPE_HERO
local unit yCu
local player pCu
local unit eCu
local unit qCu
local unittype aCu
local boolean nCu
local boolean dCu
if IsUnitType(lCu,bCu) then
set yCu=oCu
set eCu=OCu
set pCu=GetOwningPlayer(eCu)
set nCu=IsUnitEnemy(yCu,pCu)
else
set nCu=false
endif
if nCu then
set qCu=oCu
set aCu=UNIT_TYPE_DEAD
set dCu=not IsUnitType(qCu,aCu)
else
set dCu=false
endif
set oCu=null
set OCu=null
set lCu=null
set bCu=null
set yCu=null
set pCu=null
set eCu=null
set qCu=null
set aCu=null
return dCu
endfunction
function fDu takes nothing returns boolean
return true
endfunction
function fDw takes nothing returns boolean
local playerunitevent pDw
local code eDw
local playerunitevent qDw
local code aDw
local playerunitevent nDw
local code dDw
set jO=CreateSound("KARTI.wav",false,false,false,10,10,"DefaultEAXON")
set pDw=EVENT_PLAYER_HERO_LEVEL
set eDw=pM
call emO(pDw,null,eDw,null)
set qDw=EVENT_PLAYER_UNIT_SPELL_EFFECT
set aDw=eM
call emO(qDw,null,aDw,null)
set nDw=EVENT_PLAYER_UNIT_ATTACKED
set dDw=qM
call emO(nDw,null,dDw,null)
set pDw=null
set qDw=null
set nDw=null
return true
endfunction
function fGS takes nothing returns nothing
local unit ZYS=GetTriggerUnit()
local unit IYS=ZYS
local player UYS=GetOwningPlayer(IYS)
local unit PYS
local string AYS
local real DYS
local real HYS
local unit JYS
local unittype KYS
local unit LYS
local string XYS
local real CYS
local real VYS
local unit BYS
local unittype NYS
local unit MYS
local string wGS
local real uGS
local real rGS
local unit sGS
local unittype tGS
local unit iGS
local string SGS
local real cGS
local real oGS
local unit OGS
local unittype lGS
local real bGS
local real yGS
local real pGS
local real eGS
local real qGS
local real aGS
local real nGS
local real dGS
if UYS==Ru then
if (Ew[0]==false and Ew[1]==false) or (Ew[0]==true and Ew[2]==true) then
set PYS=ZYS
set AYS="attack"
set bGS=Qw[19]
set yGS=Ww[19]
set DYS=bGS
set HYS=yGS
call IssuePointOrder(PYS,AYS,DYS,HYS)
set JYS=ZYS
set KYS=UNIT_TYPE_HERO
if IsUnitType(JYS,KYS) then
call SaveInteger(qu,GetHandleId(ZYS),$6D6F7665,19)
endif
elseif Ew[1]==true and Ew[2]==true then
set LYS=ZYS
set XYS="attack"
set pGS=Qw[21]
set eGS=Ww[21]
set CYS=pGS
set VYS=eGS
call IssuePointOrder(LYS,XYS,CYS,VYS)
set BYS=ZYS
set NYS=UNIT_TYPE_HERO
if IsUnitType(BYS,NYS) then
call SaveInteger(qu,GetHandleId(ZYS),$6D6F7665,21)
endif
endif
endif
if UYS==du then
set MYS=ZYS
set wGS="attack"
set qGS=Qw[19]
set aGS=Ww[19]
set uGS=qGS
set rGS=aGS
call IssuePointOrder(MYS,wGS,uGS,rGS)
set sGS=ZYS
set tGS=UNIT_TYPE_HERO
if IsUnitType(sGS,tGS) then
call SaveInteger(qu,GetHandleId(ZYS),$6D6F7665,19)
endif
endif
if UYS==nu then
set iGS=ZYS
set SGS="attack"
set nGS=Qw[21]
set dGS=Ww[21]
set cGS=nGS
set oGS=dGS
call IssuePointOrder(iGS,SGS,cGS,oGS)
set OGS=ZYS
set lGS=UNIT_TYPE_HERO
if IsUnitType(OGS,lGS) then
call SaveInteger(qu,GetHandleId(ZYS),$6D6F7665,21)
endif
endif
set ZYS=null
set UYS=null
set IYS=null
set PYS=null
set JYS=null
set KYS=null
set LYS=null
set BYS=null
set NYS=null
set MYS=null
set sGS=null
set tGS=null
set iGS=null
set OGS=null
set lGS=null
endfunction
function nFy takes string SFy returns boolean
local trigger cFy
local trigger oFy
local trigger OFy
local boolexpr lFy
local trigger bFy
local dialog yFy
local trigger pFy
local boolexpr eFy
local trigger qFy
local dialog aFy
set aW[qW]=SFy
set qW=qW+1
set Qg=CreateTimer()
set Wg=kHw("when calling new_LinkedList in ThreeRacePick, line 11")
set Eg=kHw("when calling new_LinkedList in ThreeRacePick, line 12")
set Zg=kHw("when calling new_LinkedList in ThreeRacePick, line 13")
set Ug=kHw("when calling new_LinkedList in ThreeRacePick, line 14")
set cFy=CreateTrigger()
set OFy=cFy
set lFy=Condition(drw)
call TriggerAddCondition(OFy,lFy)
set bFy=cFy
set yFy=sr
call TriggerRegisterDialogEvent(bFy,yFy)
set oFy=CreateTrigger()
set pFy=oFy
set eFy=Condition(frw)
call TriggerAddCondition(pFy,eFy)
set qFy=oFy
set aFy=sr
call TriggerRegisterDialogEvent(qFy,aFy)
set qW=qW-1
set cFy=null
set oFy=null
set OFy=null
set lFy=null
set bFy=null
set yFy=null
set pFy=null
set eFy=null
set qFy=null
set aFy=null
return true
endfunction
function fHt takes nothing returns boolean
set qW=0
return nFy("via function reference ThreeRacePick, line 1")
endfunction
function JCb takes string JHb returns nothing
local trigger KHb
local unit LHb
local player XHb
local player CHb
local integer VHb
local real BHb
local real NHb
local integer MHb
local integer wJb
local integer uJb
local integer rJb
local integer sJb
local integer tJb
local integer iJb
local integer SJb
local integer cJb
local integer oJb
local integer OJb
local real lJb
local real bJb
local integer yJb
local integer pJb
local integer eJb
local integer qJb
local integer aJb
local integer nJb
local integer dJb
local integer fJb
local integer RJb
local integer TJb
local integer YJb
local integer GJb
local unit gJb
local player hJb
local player FJb
local trigger kJb
local unit jJb
local sound xJb
local unit vJb
local player mJb
local boolean QJb
local player WJb
local integer EJb
local player ZJb
local playerstate UJb
local integer IJb
local player PJb
local playerstate AJb
local string DJb
local real HJb
local string JJb
local real KJb
local unit LJb
local player XJb
local boolean CJb
local unit VJb
local unit BJb
local unit NJb
local unit MJb
local integer wKb
local unit uKb
local integer rKb
local unit sKb
local integer tKb
local integer iKb
local unit SKb
local unit cKb
local integer oKb
local unit OKb
local integer lKb
local unit bKb
local integer yKb
local integer pKb
local unit eKb
local unit qKb
local integer aKb
local unit nKb
local integer dKb
local unit fKb
local integer RKb
local integer TKb
local unit YKb
local unit GKb
local integer gKb
local unit hKb
local integer FKb
local unit kKb
local integer jKb
local integer xKb
local unit vKb
local unit mKb
local integer QKb
local unit WKb
local integer EKb
local unit ZKb
local integer UKb
local unit IKb
local integer PKb
local integer AKb
local unit DKb
local integer HKb
local unit JKb
local integer KKb
local integer LKb
local unit XKb
local unit CKb
local integer VKb
local unit BKb
local unit NKb
local integer MKb
local unit wLb
local unit uLb
local integer rLb
local unit sLb
local integer tLb
local unit iLb
local integer SLb
local integer cLb
local unit oLb
local unit OLb
local integer lLb
local unit bLb
local integer yLb
local unit pLb
local integer eLb
local integer qLb
local unit aLb
local unit nLb
local integer dLb
local unit fLb
local integer RLb
local unit TLb
local integer YLb
local integer GLb
local unit gLb
local unit hLb
local integer FLb
local unit kLb
local integer jLb
local unit xLb
local integer vLb
local integer mLb
local unit QLb
local unit WLb
local integer ELb
local unit ZLb
local integer ULb
local unit ILb
local integer PLb
local integer ALb
local unit DLb
local unit HLb
local unit JLb
local integer KLb
local unit LLb
local unit XLb
local integer CLb
local unit VLb
local integer BLb
local unit NLb
local integer MLb
local integer wXb
local unit uXb
local unit rXb
local integer sXb
local unit tXb
local integer iXb
local unit SXb
local integer cXb
local integer oXb
local unit OXb
local unit lXb
local integer bXb
local unit yXb
local integer pXb
local unit eXb
local integer qXb
local integer aXb
local unit nXb
local unit dXb
local integer fXb
local unit RXb
local integer TXb
local unit YXb
local integer GXb
local integer gXb
local unit hXb
local unit FXb
local integer kXb
local unit jXb
local integer xXb
local unit vXb
local integer mXb
local unit QXb
local integer WXb
local integer EXb
local unit ZXb
local integer UXb
local unit IXb
local integer PXb
local integer AXb
local unit DXb
local unit HXb
local integer JXb
local unit KXb
local unit LXb
local integer XXb
local unit CXb
local unit VXb
local integer BXb
local unit NXb
local integer MXb
local unit wCb
local integer uCb
local integer rCb
local unit sCb
local unit tCb
local integer iCb
local unit SCb
local integer cCb
local unit oCb
local integer OCb
local integer lCb
local unit bCb
local unit yCb
local integer pCb
local unit eCb
local integer qCb
local unit aCb
local integer nCb
local integer dCb
local unit fCb
local unit RCb
local integer TCb
local unit YCb
local integer GCb
local unit gCb
local integer hCb
local integer FCb
local unit kCb
local unit jCb
local integer xCb
local unit vCb
local integer mCb
local unit QCb
local integer WCb
local integer ECb
local string ZCb
local integer UCb
local real ICb
local integer PCb
local string ACb
local player DCb
local playerstate HCb
set aW[qW]=JHb
set qW=qW+1
set KHb=GetTriggeringTrigger()
set LHb=GetEnteringUnit()
set gJb=LHb
set XHb=GetOwningPlayer(gJb)
set hJb=XHb
set CHb=Player(GetPlayerId(hJb)-4)
set FJb=CHb
set VHb=GetPlayerId(FJb)
set kJb=KHb
call DisableTrigger(kJb)
set jJb=G[6]
if GetOwningPlayer(jJb)==Player(15) then
set xJb=bj_questUpdatedSound
call StartSound(xJb)
set vJb=G[6]
set mJb=CHb
set QJb=false
call SetUnitOwner(vJb,mJb,QJb)
call UuS(G[6],75)
set WJb=CHb
set EJb=75
set ZJb=WJb
set UJb=PLAYER_STATE_RESOURCE_GOLD
set IJb=EJb
set DCb=ZJb
set HCb=UJb
set PJb=ZJb
set AJb=UJb
call SetPlayerState(DCb,HCb,GetPlayerState(PJb,AJb)+IJb)
set DJb=Aw[VHb]+GetPlayerName(CHb)+"|r"+" has captured neutral building!"
set HJb=10.
set JJb=DJb
set KJb=HJb
call DisplayTimedTextToPlayer(IY,0.,0.,KJb,JJb)
set hr[VHb]=hr[VHb]+75
set Fr[VHb]=Fr[VHb]+75
set Vr[VHb]=Vr[VHb]+75
else
set LJb=G[6]
set XJb=CHb
set CJb=false
call SetUnitOwner(LJb,XJb,CJb)
endif
if CHb==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set VJb=G[6]
set BHb=GetUnitX(VJb)
set BJb=G[6]
set NHb=GetUnitY(BJb)
set g[6]=CreateUnit(Ud,$6E303349,BHb,NHb,0.)
set NJb=G[6]
if GetUnitTypeId(NJb)==$6E676164 then
set MJb=G[6]
set wKb=$41303042
set MHb=GetUnitAbilityLevel(MJb,wKb)
set uKb=g[6]
set rKb=$41313053
call UnitAddAbility(uKb,rKb)
set sKb=g[6]
set tKb=$41313053
set iKb=MHb
call SetUnitAbilityLevel(sKb,tKb,iKb)
endif
set SKb=G[6]
if GetUnitTypeId(SKb)==$6E64727A then
set cKb=G[6]
set oKb=$41303852
set wJb=GetUnitAbilityLevel(cKb,oKb)
set OKb=g[6]
set lKb=$41313049
call UnitAddAbility(OKb,lKb)
set bKb=g[6]
set yKb=$41313049
set pKb=wJb
call SetUnitAbilityLevel(bKb,yKb,pKb)
endif
set eKb=G[6]
if GetUnitTypeId(eKb)==$6E647267 then
set qKb=G[6]
set aKb=$41303856
set uJb=GetUnitAbilityLevel(qKb,aKb)
set nKb=g[6]
set dKb=$41313054
call UnitAddAbility(nKb,dKb)
set fKb=g[6]
set RKb=$41313054
set TKb=uJb
call SetUnitAbilityLevel(fKb,RKb,TKb)
endif
set YKb=G[6]
if GetUnitTypeId(YKb)==$6E676D65 then
set GKb=G[6]
set gKb=$4130384F
set rJb=GetUnitAbilityLevel(GKb,gKb)
set hKb=g[6]
set FKb=$4131304A
call UnitAddAbility(hKb,FKb)
set kKb=g[6]
set jKb=$4131304A
set xKb=rJb
call SetUnitAbilityLevel(kKb,jKb,xKb)
endif
set vKb=G[6]
if GetUnitTypeId(vKb)==$6E647272 then
set mKb=G[6]
set QKb=$41303858
set sJb=GetUnitAbilityLevel(mKb,QKb)
set WKb=G[6]
set EKb=$41303859
set tJb=GetUnitAbilityLevel(WKb,EKb)
set ZKb=g[6]
set UKb=$4131304B
call UnitAddAbility(ZKb,UKb)
set IKb=g[6]
set PKb=$4131304B
set AKb=sJb
call SetUnitAbilityLevel(IKb,PKb,AKb)
set DKb=g[6]
set HKb=$4131304C
call UnitAddAbility(DKb,HKb)
set JKb=g[6]
set KKb=$4131304C
set LKb=tJb
call SetUnitAbilityLevel(JKb,KKb,LKb)
endif
set XKb=G[6]
if GetUnitTypeId(XKb)==$6E6D7232 then
set CKb=g[6]
set VKb=$41303853
call UnitAddAbility(CKb,VKb)
endif
set BKb=G[6]
if GetUnitTypeId(BKb)==$6E676F6C then
set NKb=g[6]
set MKb=$41303853
call UnitAddAbility(NKb,MKb)
endif
set wLb=G[6]
if GetUnitTypeId(wLb)==$6E64726F then
set uLb=G[6]
set rLb=$41303855
set iJb=GetUnitAbilityLevel(uLb,rLb)
set sLb=g[6]
set tLb=$4131304E
call UnitAddAbility(sLb,tLb)
set iLb=g[6]
set SLb=$4131304E
set cLb=iJb
call SetUnitAbilityLevel(iLb,SLb,cLb)
endif
set oLb=G[6]
if GetUnitTypeId(oLb)==$6E776774 then
set OLb=G[6]
set lLb=$41303850
set SJb=GetUnitAbilityLevel(OLb,lLb)
set bLb=g[6]
set yLb=$4131304F
call UnitAddAbility(bLb,yLb)
set pLb=g[6]
set eLb=$4131304F
set qLb=SJb
call SetUnitAbilityLevel(pLb,eLb,qLb)
endif
set aLb=G[6]
if GetUnitTypeId(aLb)==$6E647275 then
set nLb=G[6]
set dLb=$4130384E
set cJb=GetUnitAbilityLevel(nLb,dLb)
set fLb=g[6]
set RLb=$41313050
call UnitAddAbility(fLb,RLb)
set TLb=g[6]
set YLb=$41313050
set GLb=cJb
call SetUnitAbilityLevel(TLb,YLb,GLb)
endif
set gLb=G[6]
if GetUnitTypeId(gLb)==$6E666F68 then
set hLb=G[6]
set FLb=$4130384D
set oJb=GetUnitAbilityLevel(hLb,FLb)
set kLb=g[6]
set jLb=$41313051
call UnitAddAbility(kLb,jLb)
set xLb=g[6]
set vLb=$41313051
set mLb=oJb
call SetUnitAbilityLevel(xLb,vLb,mLb)
endif
set QLb=G[6]
if GetUnitTypeId(QLb)==$6E64726B then
set WLb=G[6]
set ELb=$41303851
set OJb=GetUnitAbilityLevel(WLb,ELb)
set ZLb=g[6]
set ULb=$41313052
call UnitAddAbility(ZLb,ULb)
set ILb=g[6]
set PLb=$41313052
set ALb=OJb
call SetUnitAbilityLevel(ILb,PLb,ALb)
endif
endif
if CHb!=Ud and g[6]!=null then
call RemoveUnit(g[6])
set g[6]=null
endif
if CHb==Ud and fq==true then
set DLb=G[6]
set lJb=GetUnitX(DLb)
set HLb=G[6]
set bJb=GetUnitY(HLb)
set h[6]=CreateUnit(Ud,$6E303349,lJb,bJb,0.)
set JLb=h[6]
set KLb=$4545564F
call UnitAddAbility(JLb,KLb)
set LLb=G[6]
if GetUnitTypeId(LLb)==$6E676164 then
set XLb=G[6]
set CLb=$41303042
set yJb=GetUnitAbilityLevel(XLb,CLb)
set VLb=h[6]
set BLb=$41313641
call UnitAddAbility(VLb,BLb)
set NLb=h[6]
set MLb=$41313641
set wXb=yJb
call SetUnitAbilityLevel(NLb,MLb,wXb)
endif
set uXb=G[6]
if GetUnitTypeId(uXb)==$6E64727A then
set rXb=G[6]
set sXb=$41303852
set pJb=GetUnitAbilityLevel(rXb,sXb)
set tXb=h[6]
set iXb=$41313630
call UnitAddAbility(tXb,iXb)
set SXb=h[6]
set cXb=$41313630
set oXb=pJb
call SetUnitAbilityLevel(SXb,cXb,oXb)
endif
set OXb=G[6]
if GetUnitTypeId(OXb)==$6E647267 then
set lXb=G[6]
set bXb=$41303856
set eJb=GetUnitAbilityLevel(lXb,bXb)
set yXb=h[6]
set pXb=$41313642
call UnitAddAbility(yXb,pXb)
set eXb=h[6]
set qXb=$41313642
set aXb=eJb
call SetUnitAbilityLevel(eXb,qXb,aXb)
endif
set nXb=G[6]
if GetUnitTypeId(nXb)==$6E676D65 then
set dXb=G[6]
set fXb=$4130384F
set qJb=GetUnitAbilityLevel(dXb,fXb)
set RXb=h[6]
set TXb=$41313631
call UnitAddAbility(RXb,TXb)
set YXb=h[6]
set GXb=$41313631
set gXb=qJb
call SetUnitAbilityLevel(YXb,GXb,gXb)
endif
set hXb=G[6]
if GetUnitTypeId(hXb)==$6E647272 then
set FXb=G[6]
set kXb=$41303858
set aJb=GetUnitAbilityLevel(FXb,kXb)
set jXb=G[6]
set xXb=$41303859
set nJb=GetUnitAbilityLevel(jXb,xXb)
set vXb=h[6]
set mXb=$41313632
call UnitAddAbility(vXb,mXb)
set QXb=h[6]
set WXb=$41313633
set EXb=aJb
call SetUnitAbilityLevel(QXb,WXb,EXb)
set ZXb=h[6]
set UXb=$41313632
call UnitAddAbility(ZXb,UXb)
set IXb=h[6]
set PXb=$41313633
set AXb=nJb
call SetUnitAbilityLevel(IXb,PXb,AXb)
endif
set DXb=G[6]
if GetUnitTypeId(DXb)==$6E6D7232 then
set HXb=h[6]
set JXb=$41303853
call UnitAddAbility(HXb,JXb)
endif
set KXb=G[6]
if GetUnitTypeId(KXb)==$6E676F6C then
set LXb=h[6]
set XXb=$41303853
call UnitAddAbility(LXb,XXb)
endif
set CXb=G[6]
if GetUnitTypeId(CXb)==$6E64726F then
set VXb=G[6]
set BXb=$41303855
set dJb=GetUnitAbilityLevel(VXb,BXb)
set NXb=h[6]
set MXb=$41313635
call UnitAddAbility(NXb,MXb)
set wCb=h[6]
set uCb=$41313635
set rCb=dJb
call SetUnitAbilityLevel(wCb,uCb,rCb)
endif
set sCb=G[6]
if GetUnitTypeId(sCb)==$6E776774 then
set tCb=G[6]
set iCb=$41303850
set fJb=GetUnitAbilityLevel(tCb,iCb)
set SCb=h[6]
set cCb=$41313636
call UnitAddAbility(SCb,cCb)
set oCb=h[6]
set OCb=$41313636
set lCb=fJb
call SetUnitAbilityLevel(oCb,OCb,lCb)
endif
set bCb=G[6]
if GetUnitTypeId(bCb)==$6E647275 then
set yCb=G[6]
set pCb=$4130384E
set RJb=GetUnitAbilityLevel(yCb,pCb)
set eCb=h[6]
set qCb=$41313637
call UnitAddAbility(eCb,qCb)
set aCb=h[6]
set nCb=$41313637
set dCb=RJb
call SetUnitAbilityLevel(aCb,nCb,dCb)
endif
set fCb=G[6]
if GetUnitTypeId(fCb)==$6E666F68 then
set RCb=G[6]
set TCb=$4130384D
set TJb=GetUnitAbilityLevel(RCb,TCb)
set YCb=h[6]
set GCb=$41313638
call UnitAddAbility(YCb,GCb)
set gCb=h[6]
set hCb=$41313638
set FCb=TJb
call SetUnitAbilityLevel(gCb,hCb,FCb)
endif
set kCb=G[6]
if GetUnitTypeId(kCb)==$6E64726B then
set jCb=G[6]
set xCb=$41303851
set YJb=GetUnitAbilityLevel(jCb,xCb)
set vCb=h[6]
set mCb=$41313639
call UnitAddAbility(vCb,mCb)
set QCb=h[6]
set WCb=$41313639
set ECb=YJb
call SetUnitAbilityLevel(QCb,WCb,ECb)
endif
endif
if CHb!=Ud and h[6]!=null then
call RemoveUnit(h[6])
set h[6]=null
endif
set ZCb="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 893"
set aW[qW]=ZCb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set UCb=fF
set RF[UCb]=740
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 893")
set UCb=0
endif
else
set dF=dF-1
set UCb=nF[dF]
set RF[UCb]=740
endif
set qW=qW-1
set GJb=UCb
set Zm[GJb]=KHb
set ICb=2.
set PCb=GJb
set ACb="when calling doAfter in NeutralStructures, line 893"
set aW[qW]=ACb
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ICb,PCb,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set KHb=null
set LHb=null
set XHb=null
set CHb=null
set gJb=null
set hJb=null
set FJb=null
set kJb=null
set jJb=null
set xJb=null
set vJb=null
set mJb=null
set WJb=null
set ZJb=null
set UJb=null
set PJb=null
set AJb=null
set LJb=null
set XJb=null
set VJb=null
set BJb=null
set NJb=null
set MJb=null
set uKb=null
set sKb=null
set SKb=null
set cKb=null
set OKb=null
set bKb=null
set eKb=null
set qKb=null
set nKb=null
set fKb=null
set YKb=null
set GKb=null
set hKb=null
set kKb=null
set vKb=null
set mKb=null
set WKb=null
set ZKb=null
set IKb=null
set DKb=null
set JKb=null
set XKb=null
set CKb=null
set BKb=null
set NKb=null
set wLb=null
set uLb=null
set sLb=null
set iLb=null
set oLb=null
set OLb=null
set bLb=null
set pLb=null
set aLb=null
set nLb=null
set fLb=null
set TLb=null
set gLb=null
set hLb=null
set kLb=null
set xLb=null
set QLb=null
set WLb=null
set ZLb=null
set ILb=null
set DLb=null
set HLb=null
set JLb=null
set LLb=null
set XLb=null
set VLb=null
set NLb=null
set uXb=null
set rXb=null
set tXb=null
set SXb=null
set OXb=null
set lXb=null
set yXb=null
set eXb=null
set nXb=null
set dXb=null
set RXb=null
set YXb=null
set hXb=null
set FXb=null
set jXb=null
set vXb=null
set QXb=null
set ZXb=null
set IXb=null
set DXb=null
set HXb=null
set KXb=null
set LXb=null
set CXb=null
set VXb=null
set NXb=null
set wCb=null
set sCb=null
set tCb=null
set SCb=null
set oCb=null
set bCb=null
set yCb=null
set eCb=null
set aCb=null
set fCb=null
set RCb=null
set YCb=null
set gCb=null
set kCb=null
set jCb=null
set vCb=null
set QCb=null
set DCb=null
set HCb=null
endfunction
function fJc takes nothing returns nothing
set qW=0
call JCb("via function reference NeutralStructures, line 1749")
endfunction
function fJp takes nothing returns nothing
local unit fHp=GetTriggerUnit()
local unit THp=fHp
local player RHp=GetOwningPlayer(THp)
local unit YHp
local string GHp
local real gHp
local real hHp
local unit FHp
local unittype kHp
local unit jHp
local string xHp
local real vHp
local real mHp
local unit QHp
local unittype WHp
local unit EHp
local string ZHp
local real UHp
local real IHp
local unit PHp
local unittype AHp
local unit DHp
local string HHp
local real JHp
local real KHp
local unit LHp
local unittype XHp
local unit CHp
local string VHp
local real BHp
local real NHp
local unit MHp
local unittype wJp
local unit uJp
local string rJp
local real sJp
local real tJp
local unit iJp
local unittype SJp
local real cJp
local real oJp
local real OJp
local real lJp
local real bJp
local real yJp
local real pJp
local real eJp
local real qJp
local real aJp
local real nJp
local real dJp
if RHp==du then
set YHp=fHp
set GHp="attack"
set cJp=Qw[34]
set oJp=Ww[34]
set gHp=cJp
set hHp=oJp
call IssuePointOrder(YHp,GHp,gHp,hHp)
set FHp=fHp
set kHp=UNIT_TYPE_HERO
if IsUnitType(FHp,kHp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,34)
endif
endif
if RHp==nu then
if Ew[3]==true then
set jHp=fHp
set xHp="attack"
set OJp=Qw[52]
set lJp=Ww[52]
set vHp=OJp
set mHp=lJp
call IssuePointOrder(jHp,xHp,vHp,mHp)
set QHp=fHp
set WHp=UNIT_TYPE_HERO
if IsUnitType(QHp,WHp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,52)
endif
else
set EHp=fHp
set ZHp="attack"
set bJp=Qw[34]
set yJp=Ww[34]
set UHp=bJp
set IHp=yJp
call IssuePointOrder(EHp,ZHp,UHp,IHp)
set PHp=fHp
set AHp=UNIT_TYPE_HERO
if IsUnitType(PHp,AHp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,34)
endif
endif
endif
if RHp==fu then
if Ew[0]==true then
set DHp=fHp
set HHp="attack"
set pJp=Qw[34]
set eJp=Ww[34]
set JHp=pJp
set KHp=eJp
call IssuePointOrder(DHp,HHp,JHp,KHp)
set LHp=fHp
set XHp=UNIT_TYPE_HERO
if IsUnitType(LHp,XHp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,34)
endif
else
set CHp=fHp
set VHp="attack"
set qJp=Qw[52]
set aJp=Ww[52]
set BHp=qJp
set NHp=aJp
call IssuePointOrder(CHp,VHp,BHp,NHp)
set MHp=fHp
set wJp=UNIT_TYPE_HERO
if IsUnitType(MHp,wJp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,52)
endif
endif
endif
if RHp==Ru then
set uJp=fHp
set rJp="attack"
set nJp=Qw[52]
set dJp=Ww[52]
set sJp=nJp
set tJp=dJp
call IssuePointOrder(uJp,rJp,sJp,tJp)
set iJp=fHp
set SJp=UNIT_TYPE_HERO
if IsUnitType(iJp,SJp) then
call SaveInteger(qu,GetHandleId(fHp),$6D6F7665,52)
endif
endif
set fHp=null
set RHp=null
set THp=null
set YHp=null
set FHp=null
set kHp=null
set jHp=null
set QHp=null
set WHp=null
set EHp=null
set PHp=null
set AHp=null
set DHp=null
set LHp=null
set XHp=null
set CHp=null
set MHp=null
set wJp=null
set uJp=null
set iJp=null
set SJp=null
endfunction
function fLi takes nothing returns nothing
local integer eLi=GetResearched()
local unit qLi
local integer aLi
local player nLi
local unit dLi
if eLi==$52303756 then
set qLi=GetResearchingUnit()
set dLi=qLi
set nLi=GetOwningPlayer(dLi)
set aLi=GetPlayerId(nLi)
set Nn[aLi]=Nn[aLi]+1
endif
set qLi=null
set nLi=null
set dLi=null
endfunction
function fLu takes nothing returns boolean
local trigger bLu
local rect yLu
local region pLu
local trigger eLu
local boolexpr qLu
local trigger aLu
local playerunitevent nLu
local code dLu
set of=CreateTrigger()
set bLu=of
set yLu=bj_mapInitialPlayableArea
set pLu=CreateRegion()
call RegionAddRect(pLu,yLu)
call TriggerRegisterEnterRegion(bLu,pLu,null)
set eLu=of
set qLu=Condition(p8)
call TriggerAddCondition(eLu,qLu)
set aLu=of
call DisableTrigger(aLu)
set nLu=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dLu=e8
call emO(nLu,null,dLu,null)
set bLu=null
set yLu=null
set pLu=null
set eLu=null
set qLu=null
set aLu=null
set nLu=null
return true
endfunction
function fMp takes nothing returns boolean
return GetSpellAbilityId()==$41323747
endfunction
function fOe takes nothing returns nothing
set qW=0
call d5u("via function reference TournamentMode, line 323")
endfunction
function fRu takes nothing returns nothing
local unit idu=GetKillingUnit()
local unit odu=idu
local integer Sdu
local integer cdu
local unit Odu
local unit ldu
local unit bdu
local unit ydu
local unit pdu
local unit edu
local unit qdu
local unit adu
local unit ndu
local unit ddu
local integer fdu
local unit Rdu
local integer Tdu
local unit Ydu
local integer Gdu
local unit gdu
local integer hdu
local unit Fdu
local integer kdu
local unit jdu
local integer xdu
local unit vdu
local integer mdu
local unit Qdu
local integer Wdu
local unit Edu
local integer Zdu
local unit Udu
local integer Idu
local unit Pdu
local integer Adu
local unit Ddu
local integer Hdu
local unit Jdu
local integer Kdu
local unit Ldu
local integer Xdu
local unit Cdu
local integer Vdu
local unit Bdu
local integer Ndu
local unit Mdu
local integer wfu
local unit ufu
local integer rfu
local unit sfu
local integer tfu
local unit ifu
local integer Sfu
local unit cfu
local integer ofu
local unit Ofu
local integer lfu
local unit bfu
local integer yfu
local unit pfu
local integer efu
local unit qfu
local integer afu
local unit nfu
local integer dfu
local unit ffu
local integer Rfu
local unit Tfu
local integer Yfu
local unit Gfu
local integer gfu
local unit hfu
local integer Ffu
local unit kfu
local integer jfu
local unit xfu
local integer vfu
local unit mfu
local integer Qfu
local unit Wfu
local integer Efu
local unit Zfu
local integer Ufu
local unit Ifu
local integer Pfu
local unit Afu
local integer Dfu
local unit Hfu
local integer Jfu
local unit Kfu
local integer Lfu
local unit Xfu
local integer Cfu
local unit Vfu
local integer Bfu
local unit Nfu
local integer Mfu
local unit wRu
local integer uRu
local unit rRu
local integer sRu
local unit tRu
local integer iRu
local unit SRu
local integer cRu
local unit oRu
local integer ORu
local unit lRu
local integer bRu
local boolean yRu
local boolean pRu
local boolean eRu
local boolean qRu
local boolean aRu
local boolean nRu
local integer dRu
if GetUnitTypeId(odu)==$6F303349 then
set yRu=true
else
set Odu=idu
set yRu=GetUnitTypeId(Odu)==$6F30334A
endif
if yRu then
set pRu=true
else
set ldu=idu
set pRu=GetUnitTypeId(ldu)==$6F30334B
endif
if pRu then
set eRu=true
else
set bdu=idu
set eRu=GetUnitTypeId(bdu)==$6F30334C
endif
if eRu then
set qRu=true
else
set ydu=idu
set qRu=GetUnitTypeId(ydu)==$6F30334E
endif
if qRu then
set aRu=true
else
set pdu=idu
set aRu=GetUnitTypeId(pdu)==$6F30334D
endif
if aRu and UnitItemInSlot(idu,5)==null then
set edu=idu
set nRu=UnitAlive(edu)==true
else
set nRu=false
endif
if nRu then
set qdu=idu
set Sdu=GetPlayerTechCount(GetOwningPlayer(qdu),$52303755,true)
if Sdu>0 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl",idu,"origin"))
set adu=idu
set dRu=jWu(adu)
set ndu=adu
if dRu==UnitInventorySize(ndu)==false then
set cdu=Sdu
if cdu==1 then
if jWu(idu)<6 then
set ddu=idu
set fdu=0
if UnitItemInSlot(ddu,fdu)==null then
set Rdu=idu
set Tdu=$4930314C
call UnitAddItemById(Rdu,Tdu)
else
set Ydu=idu
set Gdu=1
if UnitItemInSlot(Ydu,Gdu)==null then
set gdu=idu
set hdu=$49303150
call UnitAddItemById(gdu,hdu)
else
set Fdu=idu
set kdu=2
if UnitItemInSlot(Fdu,kdu)==null then
set jdu=idu
set xdu=$49303139
call UnitAddItemById(jdu,xdu)
else
set vdu=idu
set mdu=3
if UnitItemInSlot(vdu,mdu)==null then
set Qdu=idu
set Wdu=$49303147
call UnitAddItemById(Qdu,Wdu)
else
set Edu=idu
set Zdu=4
if UnitItemInSlot(Edu,Zdu)==null then
set Udu=idu
set Idu=$49303144
call UnitAddItemById(Udu,Idu)
else
set Pdu=idu
set Adu=5
if UnitItemInSlot(Pdu,Adu)==null then
set Ddu=idu
set Hdu=$49303157
call UnitAddItemById(Ddu,Hdu)
endif
endif
endif
endif
endif
endif
endif
elseif cdu==2 then
if jWu(idu)<6 then
set Jdu=idu
set Kdu=0
if UnitItemInSlot(Jdu,Kdu)==null then
set Ldu=idu
set Xdu=$4930314D
call UnitAddItemById(Ldu,Xdu)
else
set Cdu=idu
set Vdu=1
if UnitItemInSlot(Cdu,Vdu)==null then
set Bdu=idu
set Ndu=$49303152
call UnitAddItemById(Bdu,Ndu)
else
set Mdu=idu
set wfu=2
if UnitItemInSlot(Mdu,wfu)==null then
set ufu=idu
set rfu=$49303141
call UnitAddItemById(ufu,rfu)
else
set sfu=idu
set tfu=3
if UnitItemInSlot(sfu,tfu)==null then
set ifu=idu
set Sfu=$49303148
call UnitAddItemById(ifu,Sfu)
else
set cfu=idu
set ofu=4
if UnitItemInSlot(cfu,ofu)==null then
set Ofu=idu
set lfu=$49303145
call UnitAddItemById(Ofu,lfu)
else
set bfu=idu
set yfu=5
if UnitItemInSlot(bfu,yfu)==null then
set pfu=idu
set efu=$49303155
call UnitAddItemById(pfu,efu)
endif
endif
endif
endif
endif
endif
endif
elseif cdu==3 then
if jWu(idu)<6 then
set qfu=idu
set afu=0
if UnitItemInSlot(qfu,afu)==null then
set nfu=idu
set dfu=$4930314E
call UnitAddItemById(nfu,dfu)
else
set ffu=idu
set Rfu=1
if UnitItemInSlot(ffu,Rfu)==null then
set Tfu=idu
set Yfu=$49303153
call UnitAddItemById(Tfu,Yfu)
else
set Gfu=idu
set gfu=2
if UnitItemInSlot(Gfu,gfu)==null then
set hfu=idu
set Ffu=$49303142
call UnitAddItemById(hfu,Ffu)
else
set kfu=idu
set jfu=3
if UnitItemInSlot(kfu,jfu)==null then
set xfu=idu
set vfu=$49303149
call UnitAddItemById(xfu,vfu)
else
set mfu=idu
set Qfu=4
if UnitItemInSlot(mfu,Qfu)==null then
set Wfu=idu
set Efu=$49303146
call UnitAddItemById(Wfu,Efu)
else
set Zfu=idu
set Ufu=5
if UnitItemInSlot(Zfu,Ufu)==null then
set Ifu=idu
set Pfu=$49303156
call UnitAddItemById(Ifu,Pfu)
endif
endif
endif
endif
endif
endif
endif
elseif cdu==4 then
if jWu(idu)<6 then
set Afu=idu
set Dfu=0
if UnitItemInSlot(Afu,Dfu)==null then
set Hfu=idu
set Jfu=$4930314F
call UnitAddItemById(Hfu,Jfu)
else
set Kfu=idu
set Lfu=1
if UnitItemInSlot(Kfu,Lfu)==null then
set Xfu=idu
set Cfu=$49303154
call UnitAddItemById(Xfu,Cfu)
else
set Vfu=idu
set Bfu=2
if UnitItemInSlot(Vfu,Bfu)==null then
set Nfu=idu
set Mfu=$49303143
call UnitAddItemById(Nfu,Mfu)
else
set wRu=idu
set uRu=3
if UnitItemInSlot(wRu,uRu)==null then
set rRu=idu
set sRu=$4930314A
call UnitAddItemById(rRu,sRu)
else
set tRu=idu
set iRu=4
if UnitItemInSlot(tRu,iRu)==null then
set SRu=idu
set cRu=$4930314B
call UnitAddItemById(SRu,cRu)
else
set oRu=idu
set ORu=5
if UnitItemInSlot(oRu,ORu)==null then
set lRu=idu
set bRu=$49303158
call UnitAddItemById(lRu,bRu)
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
set idu=null
set odu=null
set Odu=null
set ldu=null
set bdu=null
set ydu=null
set pdu=null
set edu=null
set qdu=null
set adu=null
set ndu=null
set ddu=null
set Rdu=null
set Ydu=null
set gdu=null
set Fdu=null
set jdu=null
set vdu=null
set Qdu=null
set Edu=null
set Udu=null
set Pdu=null
set Ddu=null
set Jdu=null
set Ldu=null
set Cdu=null
set Bdu=null
set Mdu=null
set ufu=null
set sfu=null
set ifu=null
set cfu=null
set Ofu=null
set bfu=null
set pfu=null
set qfu=null
set nfu=null
set ffu=null
set Tfu=null
set Gfu=null
set hfu=null
set kfu=null
set xfu=null
set mfu=null
set Wfu=null
set Zfu=null
set Ifu=null
set Afu=null
set Hfu=null
set Kfu=null
set Xfu=null
set Vfu=null
set Nfu=null
set wRu=null
set rRu=null
set tRu=null
set SRu=null
set oRu=null
set lRu=null
endfunction
function fUO takes nothing returns boolean
local playerunitevent nUO=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code dUO=R2
call emO(nUO,null,dUO,null)
set nUO=null
return true
endfunction
function fat takes nothing returns boolean
local unit pat=GetTriggerUnit()
local unit eat
local unit qat
local integer aat
local boolean nat
local boolean dat
if GetUnitTypeId(pat)==$456D6E73 then
set nat=true
else
set eat=GetTriggerUnit()
set nat=GetUnitTypeId(eat)==$4F303259
endif
if nat then
set qat=GetTriggerUnit()
set aat=$41304B41
set dat=GetUnitAbilityLevel(qat,aat)>0
else
set dat=false
endif
set pat=null
set eat=null
set qat=null
return dat
endfunction
function fbS takes nothing returns boolean
local unit wbS=GetEnteringUnit()
local unit rbS=wbS
local player ubS=GetOwningPlayer(rbS)
local player sbS=ubS
local unit ibS=G[1]
local player tbS=GetOwningPlayer(ibS)
local unit SbS
local unit cbS
local unittype obS
local unit ObS
local unit lbS
local unit bbS
local unit ybS
local boolean pbS
local boolean ebS
local boolean qbS
local boolean abS
local boolean nbS
local boolean dbS
if IsPlayerEnemy(sbS,tbS) then
set pbS=true
else
set SbS=G[1]
set pbS=GetOwningPlayer(SbS)==Player(15)
endif
if pbS then
set cbS=wbS
set obS=UNIT_TYPE_HERO
set ebS=IsUnitType(cbS,obS)==true or GetUnitLevel(wbS)>=7
else
set ebS=false
endif
if ebS then
set ObS=wbS
set qbS=GetUnitTypeId(ObS)!=$6830324C
else
set qbS=false
endif
if qbS then
set lbS=wbS
set abS=GetUnitTypeId(lbS)!=$6830324D
else
set abS=false
endif
if abS then
set bbS=wbS
set nbS=GetUnitTypeId(bbS)!=$68303254
else
set nbS=false
endif
if nbS then
set ybS=wbS
set dbS=GetUnitTypeId(ybS)!=$6830324F
else
set dbS=false
endif
set wbS=null
set ubS=null
set rbS=null
set sbS=null
set tbS=null
set ibS=null
set SbS=null
set cbS=null
set obS=null
set ObS=null
set lbS=null
set bbS=null
set ybS=null
return dbS
endfunction
function fco takes nothing returns nothing
set qW=0
call TYu("via function reference ThreeRacePick, line 349")
endfunction
function fhw takes nothing returns nothing
local real uhw
local real rhw
local integer shw
local unit thw
local unit ihw
local unit Shw
local unit chw
local unit ohw
local unit Ohw
local unit lhw
local integer bhw
local unit yhw
local integer phw
local integer ehw
local unit qhw
local real ahw
local player nhw
local real dhw
if pb!=null then
set pr=180-ab
call TimerStart(Sr,I2R(180-ab),false,Rww)
set ihw=pb
set uhw=GetUnitX(ihw)
set Shw=pb
set rhw=GetUnitY(Shw)
set shw=1
loop
exitwhen shw>16
set chw=pb
set nhw=GetOwningPlayer(chw)
set ohw=pb
set dhw=GetUnitX(ohw)
set Ohw=pb
set thw=CreateUnit(nhw,$75303030,dhw,GetUnitY(Ohw),270.)
set lhw=thw
set bhw=$41305938
call UnitAddAbility(lhw,bhw)
set yhw=thw
set phw=$41305938
set ehw=eb
call SetUnitAbilityLevel(yhw,phw,ehw)
call IssuePointOrder(thw,"carrionswarm",uhw+100.*Cos(67.5+I2R(shw)*22.5*bj_DEGTORAD),rhw+100.*Sin(67.5+I2R(shw)*22.5*bj_DEGTORAD))
set qhw=thw
set ahw=3.
call UnitApplyTimedLife(qhw,$42544C46,ahw)
set shw=shw+1
endloop
endif
set thw=null
set ihw=null
set Shw=null
set chw=null
set ohw=null
set Ohw=null
set lhw=null
set yhw=null
set qhw=null
set nhw=null
endfunction
function Fst takes string Krt returns nothing
local group Lrt
local filterfunc Xrt
local group Crt
local unit Vrt
local group Brt
local trigger Nrt
local texttag Mrt
local group wst
local group ust
local unit rst
local integer sst
local string tst
local unit ist
local integer Sst
local integer cst
local string ost
local integer Ost
local integer lst
local unit bst
local unit yst
local integer pst
local string est
local integer qst
local integer ast
local group nst
local group dst
local boolexpr fst
local trigger Rst
local unit Tst
local unit Yst
local string Gst
local player gst
local real hst
set aW[qW]=Krt
set qW=qW+1
if yO!=null then
set Nrt=iO
call DisableTrigger(Nrt)
set Mrt=yr
call DestroyTextTag(Mrt)
set Lrt=CreateGroup()
set Xrt=Filter(UN)
call GroupEnumUnitsInRect(Lrt,bj_mapInitialPlayableArea,Xrt)
set Crt=GetRandomSubGroup(1,Lrt)
set Brt=Crt
loop
set wst=Brt
exitwhen not (FirstOfGroup(wst)!=null)
set ust=Brt
set rst=FirstOfGroup(ust)
call GroupRemoveUnit(ust,rst)
set Vrt=rst
set sst=bO
set tst="when calling shuffle in AltarGold, line 1060"
set aW[qW]=tst
set qW=qW+1
if ok[sst]==0 then
if sst==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sst,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set ist=Vrt
set cst=bO
set ost="when calling getFirst in AltarGold, line 1061"
set aW[qW]=ost
set qW=qW+1
if ok[cst]==0 then
if cst==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set lst=cst
set Ost=Hv[Kv[Vv[lst]]]
set qW=qW-1
set Sst=Ost
call UnitAddItemById(ist,Sst)
set bst=yO
set gst=GetOwningPlayer(bst)
set yst=Vrt
set Gst=GetHeroProperName(yst)+" received "
set pst=bO
set est="when calling getFirst in AltarGold, line 1062"
set aW[qW]=est
set qW=qW+1
if ok[pst]==0 then
if pst==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set ast=pst
set qst=Hv[Kv[Vv[ast]]]
set qW=qW-1
call DisplayTextToPlayer(gst,0.,0.,Gst+I2S(qst))
endloop
set nst=Crt
call DestroyGroup(nst)
set dst=Lrt
call DestroyGroup(dst)
set fst=Xrt
call DestroyBoolExpr(fst)
set Rst=iO
call EnableTrigger(Rst)
set pr=300
set Tst=yO
set hst=GetUnitX(Tst)
set Yst=yO
set yr=jVl(hst,GetUnitY(Yst),0.,I2S(pr),13.,255,230,0,255)
call TimerStart(cO,300.,false,IN)
endif
set qW=qW-1
set Lrt=null
set Xrt=null
set Crt=null
set Vrt=null
set Brt=null
set Nrt=null
set Mrt=null
set wst=null
set ust=null
set rst=null
set ist=null
set bst=null
set yst=null
set nst=null
set dst=null
set fst=null
set Rst=null
set Tst=null
set Yst=null
set gst=null
endfunction
function fpc takes nothing returns nothing
set qW=0
call Fst("via function reference AltarGold, line 1069")
endfunction
function fry takes nothing returns boolean
set cg=CreateSound("Units\\Undead\\Acolyte\\AcolytePissed5.wav",false,false,false,10,10,"DefaultEAXON")
return true
endfunction
function fsu takes nothing returns nothing
local unit Lru=GetTriggerUnit()
local unit Bru=Lru
local integer Xru=GetUnitTypeId(Bru)
local unit Nru=Lru
local player Cru=GetOwningPlayer(Nru)
local player Mru=Cru
local integer Vru=GetPlayerId(Mru)
local sound wsu
local unit usu
local real rsu
local real ssu
local real tsu
local sound isu
local trigger Ssu
local unit csu
local real osu
local real Osu
local real lsu
local unit bsu
local real ysu
local real psu
local real esu
local unit qsu
local real asu
local real nsu
local real dsu
if Xru==$6F736879 then
set wsu=wF
call StartSound(wsu)
set usu=Lru
set rsu=70.
set ssu=70.
set tsu=70.
call SetUnitScale(usu,rsu*.01,ssu*.01,tsu*.01)
set i[Vru]=$45303037
endif
if Xru==$6E706766 then
set isu=Ls
call StartSound(isu)
set Ssu=wd
call EnableTrigger(Ssu)
set csu=Lru
set osu=90.
set Osu=90.
set lsu=90.
call SetUnitScale(csu,osu*.01,Osu*.01,lsu*.01)
set r[Vru]=$4F726B6E
endif
if Xru==$6E647262 then
call RemoveUnitFromStock(O[Vru],A[Vru])
call RemoveUnitFromStock(b[Vru],A[Vru])
call RemoveUnitFromStock(l[Vru],A[Vru])
set A[Vru]=$6E667474
call AddUnitToStock(O[Vru],A[Vru],1,3)
call AddUnitToStock(b[Vru],A[Vru],1,3)
call AddUnitToStock(l[Vru],A[Vru],1,3)
endif
if Xru==$6F636277 then
call RemoveUnitFromStock(O[Vru],D[Vru])
call RemoveUnitFromStock(b[Vru],D[Vru])
call RemoveUnitFromStock(l[Vru],D[Vru])
set D[Vru]=$6E667462
call AddUnitToStock(O[Vru],D[Vru],1,3)
call AddUnitToStock(b[Vru],D[Vru],1,3)
call AddUnitToStock(l[Vru],D[Vru],1,3)
endif
if Xru==$6F766C6E then
call RemoveUnitFromStock(O[Vru],H[Vru])
call RemoveUnitFromStock(b[Vru],H[Vru])
call RemoveUnitFromStock(l[Vru],H[Vru])
set H[Vru]=$6E697468
call AddUnitToStock(O[Vru],H[Vru],1,3)
call AddUnitToStock(b[Vru],H[Vru],1,3)
call AddUnitToStock(l[Vru],H[Vru],1,3)
endif
if Xru==$7830326C then
set bsu=Lru
set ysu=70.
set psu=70.
set esu=70.
call SetUnitScale(bsu,ysu*.01,psu*.01,esu*.01)
set J[Vru]=$6F317A67
endif
if Xru==$6E776332 then
set K[Vru]=$6F303352
endif
if Xru==$6E303159 then
set K[Vru]=$6F303444
endif
if Xru==$6E636262 then
set L[Vru]=$6E706C67
endif
if Xru==$6E776331 then
set qsu=Lru
set asu=120.
set nsu=120.
set dsu=120.
call SetUnitScale(qsu,asu*.01,nsu*.01,dsu*.01)
call SetPlayerTechResearched(Cru,$52303450,1)
call SetPlayerTechResearched(Player(Vru+4),$52303450,1)
endif
set Lru=null
set Cru=null
set Bru=null
set Nru=null
set Mru=null
set wsu=null
set usu=null
set isu=null
set Ssu=null
set csu=null
set bsu=null
set qsu=null
endfunction
function fxl takes nothing returns boolean
return true
endfunction
function UEi takes string OEi returns nothing
local integer lEi
local integer bEi
local integer yEi
local integer pEi
local integer eEi
local integer qEi
local timerdialog aEi
local player nEi
local player dEi
local player fEi
local player REi
local integer TEi
local string YEi
local integer GEi
local string gEi
local integer hEi
local integer FEi
local integer kEi
local string jEi
local integer xEi
local string vEi
local string mEi
local integer QEi
local real WEi
local integer EEi
local string ZEi
set aW[qW]=OEi
set qW=qW+1
set aEi=tr
call DestroyTimerDialog(aEi)
set nEi=Yu
set lEi=GetPlayerId(nEi)
set dEi=Tu
set bEi=GetPlayerId(dEi)
set fEi=Gu
set yEi=GetPlayerId(fEi)
set REi=gu
set pEi=GetPlayerId(REi)
if GetPlayerController(Yu)==MAP_CONTROL_COMPUTER or u[lEi]==0 then
set TEi=gY
set YEi="when calling shuffle in AllPickRace, line 284"
set aW[qW]=YEi
set qW=qW+1
if ok[TEi]==0 then
if TEi==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(TEi,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set GEi=gY
set gEi="when calling getFirst in AllPickRace, line 285"
set aW[qW]=gEi
set qW=qW+1
if ok[GEi]==0 then
if GEi==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set FEi=GEi
set hEi=Hv[Kv[Vv[FEi]]]
set qW=qW-1
set eEi=hEi
set kEi=eEi
set jEi="when calling numRace in AllPickRace, line 286"
set aW[qW]=jEi
set qW=qW+1
if kEi==$41313930 then
call eWp(gY,1,"when calling remove in PickRace, line 3140")
call eWp(vY,$41313930,"when calling remove in PickRace, line 3141")
endif
if kEi==$41313931 then
call eWp(gY,2,"when calling remove in PickRace, line 3143")
call eWp(vY,$41313931,"when calling remove in PickRace, line 3144")
endif
if kEi==$41313932 then
call eWp(gY,3,"when calling remove in PickRace, line 3146")
call eWp(vY,$41313932,"when calling remove in PickRace, line 3147")
endif
if kEi==$41313933 then
call eWp(gY,4,"when calling remove in PickRace, line 3149")
call eWp(vY,$41313933,"when calling remove in PickRace, line 3150")
endif
if kEi==$41313934 then
call eWp(gY,5,"when calling remove in PickRace, line 3152")
call eWp(vY,$41313934,"when calling remove in PickRace, line 3153")
endif
if kEi==$41313935 then
call eWp(gY,6,"when calling remove in PickRace, line 3155")
call eWp(vY,$41313935,"when calling remove in PickRace, line 3156")
endif
if kEi==$41313936 then
call eWp(gY,7,"when calling remove in PickRace, line 3158")
call eWp(vY,$41313936,"when calling remove in PickRace, line 3159")
endif
if kEi==$41313937 then
call eWp(gY,8,"when calling remove in PickRace, line 3161")
call eWp(vY,$41313937,"when calling remove in PickRace, line 3162")
endif
if kEi==$41313938 then
call eWp(gY,9,"when calling remove in PickRace, line 3164")
call eWp(vY,$41313938,"when calling remove in PickRace, line 3165")
endif
if kEi==$41313939 then
call eWp(gY,10,"when calling remove in PickRace, line 3167")
call eWp(vY,$41313939,"when calling remove in PickRace, line 3168")
endif
if kEi==$41313941 then
call eWp(gY,11,"when calling remove in PickRace, line 3170")
call eWp(vY,$41313941,"when calling remove in PickRace, line 3171")
endif
if kEi==$41313942 then
call eWp(gY,12,"when calling remove in PickRace, line 3173")
call eWp(vY,$41313942,"when calling remove in PickRace, line 3174")
endif
if kEi==$41313943 then
call eWp(gY,13,"when calling remove in PickRace, line 3176")
call eWp(vY,$41313943,"when calling remove in PickRace, line 3177")
endif
if kEi==$41313944 then
call eWp(gY,14,"when calling remove in PickRace, line 3179")
call eWp(vY,$41313944,"when calling remove in PickRace, line 3180")
endif
if kEi==$41313945 then
call eWp(gY,15,"when calling remove in PickRace, line 3182")
call eWp(vY,$41313945,"when calling remove in PickRace, line 3183")
endif
if kEi==$41313946 then
call eWp(gY,16,"when calling remove in PickRace, line 3185")
call eWp(vY,$41313946,"when calling remove in PickRace, line 3186")
endif
if kEi==$41313947 then
call eWp(gY,17,"when calling remove in PickRace, line 3188")
call eWp(vY,$41313947,"when calling remove in PickRace, line 3189")
endif
if kEi==$41313948 then
call eWp(gY,18,"when calling remove in PickRace, line 3191")
call eWp(vY,$41313948,"when calling remove in PickRace, line 3192")
endif
if kEi==$4131394A then
call eWp(gY,19,"when calling remove in PickRace, line 3194")
call eWp(vY,$4131394A,"when calling remove in PickRace, line 3195")
endif
if kEi==$41313949 then
call eWp(gY,20,"when calling remove in PickRace, line 3197")
call eWp(vY,$41313949,"when calling remove in PickRace, line 3198")
endif
set qW=qW-1
call Gqp(Yu,eEi,"when calling pickRaceRandom in AllPickRace, line 287")
call eWp(gY,eEi,"when calling remove in AllPickRace, line 288")
set xEi=gY
set vEi="when calling shuffle in AllPickRace, line 289"
set aW[qW]=vEi
set qW=qW+1
if ok[xEi]==0 then
if xEi==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(xEi,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
endif
set mEi="when calling alloc_CallbackSingle_doAfter_AllPickRace in AllPickRace, line 290"
set aW[qW]=mEi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set QEi=fF
set RF[QEi]=681
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_AllPickRace.","when calling error in AllPickRace, line 290")
set QEi=0
endif
else
set dF=dF-1
set QEi=nF[dF]
set RF[QEi]=681
endif
set qW=qW-1
set qEi=QEi
set Gk[qEi]=bEi
set gk[qEi]=yEi
set hk[qEi]=pEi
set WEi=.5
set EEi=qEi
set ZEi="when calling doAfter in AllPickRace, line 290"
set aW[qW]=ZEi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),WEi,EEi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set aEi=null
set nEi=null
set dEi=null
set fEi=null
set REi=null
endfunction
function g2S takes nothing returns nothing
set qW=0
call UEi("via function reference AllPickRace, line 340")
endfunction
function g5S takes nothing returns boolean
return true
endfunction
function g8l takes nothing returns boolean
local playerunitevent R8l=EVENT_PLAYER_UNIT_ATTACKED
local code T8l=Tsw
local playerunitevent Y8l
local code G8l
call emO(R8l,null,T8l,null)
set Y8l=EVENT_PLAYER_UNIT_SPELL_FINISH
set G8l=Ysw
call emO(Y8l,null,G8l,null)
set R8l=null
set Y8l=null
return true
endfunction
function g9l takes nothing returns boolean
local trigger f9l
local playerunitevent R9l
local trigger T9l
local playerunitevent Y9l
local integer G9l
set tf=CreateTrigger()
set f9l=tf
set R9l=EVENT_PLAYER_UNIT_ATTACKED
set T9l=f9l
set Y9l=R9l
set G9l=0
loop
call TriggerRegisterPlayerUnitEvent(T9l,Player(G9l),Y9l,null)
set G9l=G9l+1
exitwhen G9l==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(tf,l8)
set f9l=null
set R9l=null
set T9l=null
set Y9l=null
return true
endfunction
function gGl takes nothing returns boolean
set Sg=lF
return true
endfunction
function gHb takes nothing returns boolean
return true
endfunction
function gJo takes nothing returns nothing
local unit wHo=GetTriggerUnit()
local unit rHo=wHo
local player uHo=GetOwningPlayer(rHo)
local unit sHo
local string tHo
local real iHo
local real SHo
local unit cHo
local unittype oHo
local unit OHo
local string lHo
local real bHo
local real yHo
local unit pHo
local unittype eHo
local unit qHo
local string aHo
local real nHo
local real dHo
local unit fHo
local unittype RHo
local unit THo
local string YHo
local real GHo
local real gHo
local unit hHo
local unittype FHo
local unit kHo
local string jHo
local real xHo
local real vHo
local unit mHo
local unittype QHo
local unit WHo
local string EHo
local real ZHo
local real UHo
local unit IHo
local unittype PHo
local unit AHo
local string DHo
local real HHo
local real JHo
local unit KHo
local unittype LHo
local unit XHo
local string CHo
local real VHo
local real BHo
local unit NHo
local unittype MHo
local unit wJo
local string uJo
local real rJo
local real sJo
local unit tJo
local unittype iJo
local real SJo
local real cJo
local real oJo
local real OJo
local real lJo
local real bJo
local real yJo
local real pJo
local real eJo
local real qJo
local real aJo
local real nJo
local real dJo
local real fJo
local real RJo
local real TJo
local real YJo
local real GJo
if uHo==nu then
if Ew[0]==false then
set sHo=wHo
set tHo="attack"
set SJo=Qw[26]
set cJo=Ww[26]
set iHo=SJo
set SHo=cJo
call IssuePointOrder(sHo,tHo,iHo,SHo)
set cHo=wHo
set oHo=UNIT_TYPE_HERO
if IsUnitType(cHo,oHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,26)
endif
else
set OHo=wHo
set lHo="attack"
set oJo=Qw[61]
set OJo=Ww[61]
set bHo=oJo
set yHo=OJo
call IssuePointOrder(OHo,lHo,bHo,yHo)
set pHo=wHo
set eHo=UNIT_TYPE_HERO
if IsUnitType(pHo,eHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,61)
endif
endif
endif
if uHo==Ru then
if Ew[2]==false then
set qHo=wHo
set aHo="attack"
set lJo=Qw[44]
set bJo=Ww[44]
set nHo=lJo
set dHo=bJo
call IssuePointOrder(qHo,aHo,nHo,dHo)
set fHo=wHo
set RHo=UNIT_TYPE_HERO
if IsUnitType(fHo,RHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,44)
endif
elseif Ew[0]==false then
set THo=wHo
set YHo="attack"
set yJo=Qw[26]
set pJo=Ww[26]
set GHo=yJo
set gHo=pJo
call IssuePointOrder(THo,YHo,GHo,gHo)
set hHo=wHo
set FHo=UNIT_TYPE_HERO
if IsUnitType(hHo,FHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,26)
endif
elseif Ew[1]==false then
set kHo=wHo
set jHo="attack"
set eJo=Qw[41]
set qJo=Ww[41]
set xHo=eJo
set vHo=qJo
call IssuePointOrder(kHo,jHo,xHo,vHo)
set mHo=wHo
set QHo=UNIT_TYPE_HERO
if IsUnitType(mHo,QHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,41)
endif
endif
endif
if uHo==du then
set WHo=wHo
set EHo="attack"
set aJo=Qw[61]
set nJo=Ww[61]
set ZHo=aJo
set UHo=nJo
call IssuePointOrder(WHo,EHo,ZHo,UHo)
set IHo=wHo
set PHo=UNIT_TYPE_HERO
if IsUnitType(IHo,PHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,61)
endif
endif
if uHo==fu then
if Ew[3]==false then
set AHo=wHo
set DHo="attack"
set dJo=Qw[47]
set fJo=Ww[47]
set HHo=dJo
set JHo=fJo
call IssuePointOrder(AHo,DHo,HHo,JHo)
set KHo=wHo
set LHo=UNIT_TYPE_HERO
if IsUnitType(KHo,LHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,47)
endif
elseif Ew[1]==false then
set XHo=wHo
set CHo="attack"
set RJo=Qw[41]
set TJo=Ww[41]
set VHo=RJo
set BHo=TJo
call IssuePointOrder(XHo,CHo,VHo,BHo)
set NHo=wHo
set MHo=UNIT_TYPE_HERO
if IsUnitType(NHo,MHo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,41)
endif
elseif Ew[0]==false then
set wJo=wHo
set uJo="attack"
set YJo=Qw[26]
set GJo=Ww[26]
set rJo=YJo
set sJo=GJo
call IssuePointOrder(wJo,uJo,rJo,sJo)
set tJo=wHo
set iJo=UNIT_TYPE_HERO
if IsUnitType(tJo,iJo) then
call SaveInteger(qu,GetHandleId(wHo),$6D6F7665,26)
endif
endif
endif
set wHo=null
set uHo=null
set rHo=null
set sHo=null
set cHo=null
set oHo=null
set OHo=null
set pHo=null
set eHo=null
set qHo=null
set fHo=null
set RHo=null
set THo=null
set hHo=null
set FHo=null
set kHo=null
set mHo=null
set QHo=null
set WHo=null
set IHo=null
set PHo=null
set AHo=null
set KHo=null
set LHo=null
set XHo=null
set NHo=null
set MHo=null
set wJo=null
set tJo=null
set iJo=null
endfunction
function gJp takes nothing returns boolean
local playerunitevent YJp=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code GJp=guw
call emO(YJp,null,GJp,null)
set YJp=null
return true
endfunction
function gJy takes nothing returns nothing
local integer wJy=GetSpellAbilityId()
local unit uJy
local integer rJy
local unit sJy
local unit tJy
local integer iJy
local unit SJy
local unit cJy
local unit oJy
local unit OJy
local real lJy
local unit bJy
local integer yJy
local unit pJy
local integer eJy
local integer qJy
local unit aJy
local string nJy
local real dJy
local real fJy
local player RJy
local real TJy
local real YJy
local real GJy
if wJy==$41304E33 then
set uJy=GetSpellAbilityUnit()
set tJy=uJy
set iJy=$41304E33
set rJy=GetUnitAbilityLevel(tJy,iJy)
set SJy=uJy
set RJy=GetOwningPlayer(SJy)
set cJy=uJy
set TJy=GetUnitX(cJy)
set oJy=uJy
set sJy=CreateUnit(RJy,$75303030,TJy,GetUnitY(oJy),0.)
set OJy=sJy
set lJy=23.
call UnitApplyTimedLife(OJy,$42544C46,lJy)
set bJy=sJy
set yJy=$414E7663
call UnitAddAbility(bJy,yJy)
set pJy=sJy
set eJy=$414E7663
set qJy=rJy
call SetUnitAbilityLevel(pJy,eJy,qJy)
set aJy=sJy
set nJy="volcano"
set YJy=GetSpellTargetX()
set GJy=GetSpellTargetY()
set dJy=YJy
set fJy=GJy
call IssuePointOrder(aJy,nJy,dJy,fJy)
endif
set uJy=null
set sJy=null
set tJy=null
set SJy=null
set cJy=null
set oJy=null
set OJy=null
set bJy=null
set pJy=null
set aJy=null
set RJy=null
endfunction
function Xhi takes nothing returns nothing
local player Fhi=CT
local group dhi
local filterfunc fhi
local unit Rhi
local group Thi
local group Yhi
local filterfunc Ghi
local unit ghi
local group hhi
local group khi
local group jhi
local unit xhi
local unit vhi
local integer mhi
local unit Qhi
local integer Whi
local group Ehi
local boolexpr Zhi
local group Uhi
local group Ihi
local unit Phi
local unit Ahi
local integer Dhi
local unit Hhi
local integer Jhi
local group Khi
local boolexpr Lhi
if wY[GetPlayerId(Fhi)]==true then
set dhi=CreateGroup()
set fhi=Filter(oww)
call GroupEnumUnitsInRect(dhi,bj_mapInitialPlayableArea,fhi)
set Thi=dhi
loop
set khi=Thi
exitwhen not (FirstOfGroup(khi)!=null)
set jhi=Thi
set xhi=FirstOfGroup(jhi)
call GroupRemoveUnit(jhi,xhi)
set Rhi=xhi
set vhi=Rhi
set mhi=$41313831
if GetUnitAbilityLevel(vhi,mhi)==0 then
set Qhi=Rhi
set Whi=$41313831
call UnitAddAbility(Qhi,Whi)
endif
endloop
set Ehi=dhi
call DestroyGroup(Ehi)
set Zhi=fhi
call DestroyBoolExpr(Zhi)
else
set Yhi=CreateGroup()
set Ghi=Filter(oww)
call GroupEnumUnitsInRect(Yhi,bj_mapInitialPlayableArea,Ghi)
set hhi=Yhi
loop
set Uhi=hhi
exitwhen not (FirstOfGroup(Uhi)!=null)
set Ihi=hhi
set Phi=FirstOfGroup(Ihi)
call GroupRemoveUnit(Ihi,Phi)
set ghi=Phi
set Ahi=ghi
set Dhi=$41313831
if GetUnitAbilityLevel(Ahi,Dhi)==1 then
set Hhi=ghi
set Jhi=$41313831
call UnitRemoveAbility(Hhi,Jhi)
endif
endloop
set Khi=Yhi
call DestroyGroup(Khi)
set Lhi=Ghi
call DestroyBoolExpr(Lhi)
endif
set dhi=null
set fhi=null
set Rhi=null
set Thi=null
set Yhi=null
set Ghi=null
set ghi=null
set hhi=null
set Fhi=null
set khi=null
set jhi=null
set xhi=null
set vhi=null
set Qhi=null
set Ehi=null
set Zhi=null
set Uhi=null
set Ihi=null
set Phi=null
set Ahi=null
set Hhi=null
set Khi=null
set Lhi=null
endfunction
function q4r takes nothing returns nothing
local integer Q3r=GetRandomInt(1,9)
local unit Z3r=KT
local player E3r=GetOwningPlayer(Z3r)
local integer W3r=GetPlayerId(E3r)
local unit U3r
local unit I3r
local unit P3r
local string A3r
local real D3r
local player H3r
local unit J3r
local unit K3r
local unit L3r
local unit X3r
local string C3r
local real V3r
local player B3r
local unit N3r
local unit M3r
local unit w1r
local unit u1r
local string r1r
local real s1r
local player t1r
local unit i1r
local unit S1r
local unit c1r
local unit o1r
local string O1r
local real l1r
local player b1r
local unit y1r
local unit p1r
local unit e1r
local unit q1r
local string a1r
local real n1r
local player d1r
local unit f1r
local unit R1r
local unit T1r
local unit Y1r
local string G1r
local real g1r
local player h1r
local unit F1r
local unit k1r
local unit j1r
local unit x1r
local string v1r
local real m1r
local player Q1r
local unit W1r
local unit E1r
local unit Z1r
local unit U1r
local string I1r
local real P1r
local player A1r
local unit D1r
local unit H1r
local unit J1r
local unit K1r
local string L1r
local real X1r
local player C1r
local unit V1r
local player B1r
local integer N1r
local player M1r
local integer w4r
local player u4r
local integer r4r
local player s4r
local integer t4r
local player i4r
local integer S4r
local player c4r
local integer o4r
local player O4r
local integer l4r
local player b4r
local integer y4r
local player p4r
local integer e4r
if Q3r==1 then
set U3r=KT
if GetPlayerTechCount(GetOwningPlayer(U3r),uw[W3r],true)<5 then
set I3r=KT
set B1r=GetOwningPlayer(I3r)
set N1r=uw[W3r]
set P3r=KT
call SetPlayerTechResearched(B1r,N1r,GetPlayerTechCount(GetOwningPlayer(P3r),uw[W3r],true)+1)
call SetPlayerTechResearched(XT,uw[W3r],GetPlayerTechCount(XT,uw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set A3r="You research Shredder Rounds up lvl"
set D3r=10.
set J3r=KT
set H3r=GetOwningPlayer(J3r)
call DisplayTimedTextToPlayer(H3r,0.,0.,D3r,A3r)
endif
elseif Q3r==2 then
set K3r=KT
if GetPlayerTechCount(GetOwningPlayer(K3r),rw[W3r],true)<5 then
set L3r=KT
set M1r=GetOwningPlayer(L3r)
set w4r=rw[W3r]
set X3r=KT
call SetPlayerTechResearched(M1r,w4r,GetPlayerTechCount(GetOwningPlayer(X3r),rw[W3r],true)+1)
call SetPlayerTechResearched(XT,rw[W3r],GetPlayerTechCount(XT,rw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set C3r="You research Shield of Unification up lvl"
set V3r=10.
set N3r=KT
set B3r=GetOwningPlayer(N3r)
call DisplayTimedTextToPlayer(B3r,0.,0.,V3r,C3r)
endif
elseif Q3r==3 then
set M3r=KT
if GetPlayerTechCount(GetOwningPlayer(M3r),sw[W3r],true)<5 then
set w1r=KT
set u4r=GetOwningPlayer(w1r)
set r4r=sw[W3r]
set u1r=KT
call SetPlayerTechResearched(u4r,r4r,GetPlayerTechCount(GetOwningPlayer(u1r),sw[W3r],true)+1)
call SetPlayerTechResearched(XT,sw[W3r],GetPlayerTechCount(XT,sw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set r1r="You research Flaming Rounds up lvl"
set s1r=10.
set i1r=KT
set t1r=GetOwningPlayer(i1r)
call DisplayTimedTextToPlayer(t1r,0.,0.,s1r,r1r)
endif
elseif Q3r==4 then
set S1r=KT
if GetPlayerTechCount(GetOwningPlayer(S1r),tw[W3r],true)<5 then
set c1r=KT
set s4r=GetOwningPlayer(c1r)
set t4r=tw[W3r]
set o1r=KT
call SetPlayerTechResearched(s4r,t4r,GetPlayerTechCount(GetOwningPlayer(o1r),tw[W3r],true)+1)
call SetPlayerTechResearched(XT,tw[W3r],GetPlayerTechCount(XT,tw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set O1r="You research Advanced Guns up lvl"
set l1r=10.
set y1r=KT
set b1r=GetOwningPlayer(y1r)
call DisplayTimedTextToPlayer(b1r,0.,0.,l1r,O1r)
endif
elseif Q3r==5 then
set p1r=KT
if GetPlayerTechCount(GetOwningPlayer(p1r),iw[W3r],true)<5 then
set e1r=KT
set i4r=GetOwningPlayer(e1r)
set S4r=iw[W3r]
set q1r=KT
call SetPlayerTechResearched(i4r,S4r,GetPlayerTechCount(GetOwningPlayer(q1r),iw[W3r],true)+1)
call SetPlayerTechResearched(XT,iw[W3r],GetPlayerTechCount(XT,iw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set a1r="You research Missile Launchers up lvl"
set n1r=10.
set f1r=KT
set d1r=GetOwningPlayer(f1r)
call DisplayTimedTextToPlayer(d1r,0.,0.,n1r,a1r)
endif
elseif Q3r==6 then
set R1r=KT
if GetPlayerTechCount(GetOwningPlayer(R1r),Sw[W3r],true)<5 then
set T1r=KT
set c4r=GetOwningPlayer(T1r)
set o4r=Sw[W3r]
set Y1r=KT
call SetPlayerTechResearched(c4r,o4r,GetPlayerTechCount(GetOwningPlayer(Y1r),Sw[W3r],true)+1)
call SetPlayerTechResearched(XT,Sw[W3r],GetPlayerTechCount(XT,Sw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set G1r="You research Composite Armor up lvl"
set g1r=10.
set F1r=KT
set h1r=GetOwningPlayer(F1r)
call DisplayTimedTextToPlayer(h1r,0.,0.,g1r,G1r)
endif
elseif Q3r==7 then
set k1r=KT
if GetPlayerTechCount(GetOwningPlayer(k1r),cw[W3r],true)<5 then
set j1r=KT
set O4r=GetOwningPlayer(j1r)
set l4r=cw[W3r]
set x1r=KT
call SetPlayerTechResearched(O4r,l4r,GetPlayerTechCount(GetOwningPlayer(x1r),cw[W3r],true)+1)
call SetPlayerTechResearched(XT,cw[W3r],GetPlayerTechCount(XT,cw[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set v1r="You research Mortar Barrage up lvl"
set m1r=10.
set W1r=KT
set Q1r=GetOwningPlayer(W1r)
call DisplayTimedTextToPlayer(Q1r,0.,0.,m1r,v1r)
endif
elseif Q3r==8 then
set E1r=KT
if GetPlayerTechCount(GetOwningPlayer(E1r),ow[W3r],true)<5 then
set Z1r=KT
set b4r=GetOwningPlayer(Z1r)
set y4r=ow[W3r]
set U1r=KT
call SetPlayerTechResearched(b4r,y4r,GetPlayerTechCount(GetOwningPlayer(U1r),ow[W3r],true)+1)
call SetPlayerTechResearched(XT,ow[W3r],GetPlayerTechCount(XT,ow[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set I1r="You research Magic Training up lvl"
set P1r=10.
set D1r=KT
set A1r=GetOwningPlayer(D1r)
call DisplayTimedTextToPlayer(A1r,0.,0.,P1r,I1r)
endif
else
set H1r=KT
if GetPlayerTechCount(GetOwningPlayer(H1r),Ow[W3r],true)<5 then
set J1r=KT
set p4r=GetOwningPlayer(J1r)
set e4r=Ow[W3r]
set K1r=KT
call SetPlayerTechResearched(p4r,e4r,GetPlayerTechCount(GetOwningPlayer(K1r),Ow[W3r],true)+1)
call SetPlayerTechResearched(XT,Ow[W3r],GetPlayerTechCount(XT,Ow[W3r],true)+1)
set Pr[W3r]=Pr[W3r]+1
set L1r="You research Repair Bots up lvl"
set X1r=10.
set V1r=KT
set C1r=GetOwningPlayer(V1r)
call DisplayTimedTextToPlayer(C1r,0.,0.,X1r,L1r)
endif
endif
set E3r=null
set Z3r=null
set U3r=null
set I3r=null
set P3r=null
set H3r=null
set J3r=null
set K3r=null
set L3r=null
set X3r=null
set B3r=null
set N3r=null
set M3r=null
set w1r=null
set u1r=null
set t1r=null
set i1r=null
set S1r=null
set c1r=null
set o1r=null
set b1r=null
set y1r=null
set p1r=null
set e1r=null
set q1r=null
set d1r=null
set f1r=null
set R1r=null
set T1r=null
set Y1r=null
set h1r=null
set F1r=null
set k1r=null
set j1r=null
set x1r=null
set Q1r=null
set W1r=null
set E1r=null
set Z1r=null
set U1r=null
set A1r=null
set D1r=null
set H1r=null
set J1r=null
set K1r=null
set C1r=null
set V1r=null
set B1r=null
set M1r=null
set u4r=null
set s4r=null
set i4r=null
set c4r=null
set O4r=null
set b4r=null
set p4r=null
endfunction
function gQo takes nothing returns nothing
local integer aRo=GetSpellAbilityId()
local integer nRo
local integer dRo
local texttag fRo
local unit RRo
local real TRo
local unit YRo
local unitstate GRo
local real gRo
local unit hRo
local unitstate FRo
local unit kRo
local integer jRo
local unit xRo
local integer vRo
local string mRo
local real QRo
local player WRo
local unit ERo
local unit ZRo
local integer URo
local unit IRo
local integer PRo
local unit ARo
local integer DRo
local unit HRo
local integer JRo
local unit KRo
local integer LRo
local unit XRo
local integer CRo
local trigger VRo
local trigger BRo
local player NRo
local player MRo
local player wTo
local player uTo
local unit rTo
local integer sTo
local unit tTo
local integer iTo
local unit STo
local integer cTo
local unit oTo
local integer OTo
local unit lTo
local integer bTo
local unit yTo
local integer pTo
local unit eTo
local integer qTo
local unit aTo
local integer nTo
local unit dTo
local integer fTo
local unit RTo
local integer TTo
local unit YTo
local integer GTo
local unit gTo
local integer hTo
local unit FTo
local integer kTo
local unit jTo
local integer xTo
local unit vTo
local integer mTo
local unit QTo
local integer WTo
local unit ETo
local integer ZTo
local unit UTo
local integer ITo
local unit PTo
local integer ATo
local unit DTo
local integer HTo
local unit JTo
local integer KTo
local trigger LTo
local unit XTo
local integer CTo
local unit VTo
local integer BTo
local unit NTo
local integer MTo
local unit wYo
local integer uYo
local unit rYo
local integer sYo
local unit tYo
local integer iYo
local unit SYo
local integer cYo
local unit oYo
local integer OYo
local unit lYo
local integer bYo
local unit yYo
local integer pYo
local player eYo
local unit qYo
local unit aYo
local integer nYo
local unit dYo
local integer fYo
local unit RYo
local integer TYo
local unit YYo
local integer GYo
local unit gYo
local integer hYo
local unit FYo
local integer kYo
local player jYo
local unit xYo
local unit vYo
local integer mYo
local unit QYo
local integer WYo
local unit EYo
local integer ZYo
local unit UYo
local integer IYo
local player PYo
local integer AYo
local player DYo
local playerstate HYo
local integer JYo
local player KYo
local playerstate LYo
local unit XYo
local player CYo
local player VYo
local player BYo
local player NYo
local player MYo
local player wGo
local player uGo
local integer rGo
local player sGo
local playerstate tGo
local integer iGo
local player SGo
local playerstate cGo
local unit oGo
local player OGo
local player lGo
local player bGo
local player yGo
local player pGo
local player eGo
local unit qGo
local integer aGo
local unit nGo
local integer dGo
local unit fGo
local integer RGo
local unit TGo
local integer YGo
local unit GGo
local integer gGo
local integer hGo
local unit FGo
local integer kGo
local unit jGo
local integer xGo
local unit vGo
local integer mGo
local unit QGo
local integer WGo
local unit EGo
local integer ZGo
local integer UGo
local unit IGo
local integer PGo
local unit AGo
local integer DGo
local integer HGo
local unit JGo
local integer KGo
local unit LGo
local integer XGo
local unit CGo
local integer VGo
local trigger BGo
local unit NGo
local integer MGo
local unit wgo
local integer ugo
local unit rgo
local integer sgo
local unit tgo
local integer igo
local unit Sgo
local integer cgo
local unit ogo
local integer Ogo
local integer lgo
local unit bgo
local integer ygo
local unit pgo
local integer ego
local integer qgo
local unit ago
local integer ngo
local unit dgo
local integer fgo
local unit Rgo
local integer Tgo
local string Ygo
local real Ggo
local player ggo
local unit hgo
local unit Fgo
local integer kgo
local unit jgo
local integer xgo
local integer vgo
local unit mgo
local integer Qgo
local integer Wgo
local unit Ego
local integer Zgo
local unit Ugo
local integer Igo
local integer Pgo
local unit Ago
local integer Dgo
local unit Hgo
local integer Jgo
local unit Kgo
local integer Lgo
local integer Xgo
local unit Cgo
local integer Vgo
local unit Bgo
local integer Ngo
local integer Mgo
local unit who
local integer uho
local unit rho
local integer sho
local unit tho
local integer iho
local string Sho
local real cho
local player oho
local unit Oho
local unit lho
local integer bho
local unit yho
local integer pho
local integer eho
local unit qho
local integer aho
local unit nho
local integer dho
local integer fho
local unit Rho
local integer Tho
local unit Yho
local integer Gho
local integer gho
local unit hho
local integer Fho
local unit kho
local integer jho
local unit xho
local integer vho
local unit mho
local integer Qho
local integer Who
local unit Eho
local integer Zho
local integer Uho
local unit Iho
local integer Pho
local unit Aho
local integer Dho
local unit Hho
local integer Jho
local string Kho
local real Lho
local player Xho
local unit Cho
local unit Vho
local integer Bho
local unit Nho
local integer Mho
local integer wFo
local unit uFo
local integer rFo
local integer sFo
local unit tFo
local integer iFo
local unit SFo
local integer cFo
local integer oFo
local unit OFo
local integer lFo
local unit bFo
local integer yFo
local integer pFo
local unit eFo
local integer qFo
local unit aFo
local integer nFo
local integer dFo
local unit fFo
local integer RFo
local unit TFo
local integer YFo
local unit GFo
local integer gFo
local unit hFo
local integer FFo
local unit kFo
local integer jFo
local integer xFo
local unit vFo
local integer mFo
local integer QFo
local unit WFo
local integer EFo
local unit ZFo
local integer UFo
local string IFo
local real PFo
local player AFo
local unit DFo
local unit HFo
local integer JFo
local unit KFo
local integer LFo
local unit XFo
local integer CFo
local integer VFo
local unit BFo
local integer NFo
local unit MFo
local integer wko
local unit uko
local integer rko
local integer sko
local unit tko
local integer iko
local unit Sko
local integer cko
local unit oko
local integer Oko
local integer lko
local unit bko
local integer yko
local unit pko
local integer eko
local unit qko
local integer ako
local integer nko
local unit dko
local integer fko
local unit Rko
local integer Tko
local unit Yko
local integer Gko
local integer gko
local player hko
local unit Fko
local integer kko
local unit jko
local integer xko
local unit vko
local integer mko
local integer Qko
local unit Wko
local integer Eko
local unit Zko
local integer Uko
local integer Iko
local unit Pko
local integer Ako
local unit Dko
local integer Hko
local unit Jko
local integer Kko
local integer Lko
local trigger Xko
local trigger Cko
local unit Vko
local integer Bko
local unit Nko
local integer Mko
local unit wjo
local integer ujo
local integer rjo
local unit sjo
local integer tjo
local integer ijo
local unit Sjo
local integer cjo
local integer ojo
local unit Ojo
local integer ljo
local unit bjo
local integer yjo
local string pjo
local real ejo
local player qjo
local unit ajo
local unit njo
local integer djo
local unit fjo
local integer Rjo
local unit Tjo
local integer Yjo
local integer Gjo
local unit gjo
local integer hjo
local unit Fjo
local integer kjo
local unit jjo
local integer xjo
local integer vjo
local player mjo
local unit Qjo
local integer Wjo
local player Ejo
local unit Zjo
local integer Ujo
local unit Ijo
local integer Pjo
local unit Ajo
local integer Djo
local integer Hjo
local unit Jjo
local integer Kjo
local trigger Ljo
local unit Xjo
local integer Cjo
local unit Vjo
local integer Bjo
local unit Njo
local integer Mjo
local integer wxo
local player uxo
local unit rxo
local integer sxo
local player txo
local unit ixo
local integer Sxo
local player cxo
local unit oxo
local integer Oxo
local unit lxo
local integer bxo
local string yxo
local real pxo
local player exo
local unit qxo
local unit axo
local integer nxo
local unit dxo
local integer fxo
local unit Rxo
local integer Txo
local integer Yxo
local unit Gxo
local integer gxo
local integer hxo
local unit Fxo
local integer kxo
local integer jxo
local unit xxo
local real vxo
local unit mxo
local unitstate Qxo
local real Wxo
local unit Exo
local unitstate Zxo
local player Uxo
local texttag Ixo
local real Pxo
local real Axo
local real Dxo
local unit Hxo
local player Jxo
local unit Kxo
local player Lxo
local texttag Xxo
local integer Cxo
local integer Vxo
local integer Bxo
local integer Nxo
local texttag Mxo
local real wvo
local texttag uvo
local real rvo
local texttag svo
local boolean tvo
local texttag ivo
local boolean Svo
local texttag cvo
local string ovo
local real Ovo
local texttag lvo
local real bvo
local real yvo
local player pvo
local unit evo
local integer qvo
local unit avo
local integer nvo
local unit dvo
local integer fvo
local integer Rvo
local player Tvo
local trigger Yvo
local unit Gvo
local integer gvo
local unit hvo
local integer Fvo
local unit kvo
local integer jvo
local integer xvo
local unit vvo
local integer mvo
local unit Qvo
local integer Wvo
local unit Evo
local integer Zvo
local integer Uvo
local unit Ivo
local integer Pvo
local unit Avo
local integer Dvo
local unit Hvo
local integer Jvo
local string Kvo
local real Lvo
local player Xvo
local unit Cvo
local unit Vvo
local integer Bvo
local unit Nvo
local integer Mvo
local unit wmo
local integer umo
local integer rmo
local unit smo
local integer tmo
local integer imo
local unit Smo
local integer cmo
local integer omo
local unit Omo
local integer lmo
local integer bmo
local unit ymo
local integer pmo
local unit emo
local integer qmo
local unit amo
local integer nmo
local integer dmo
local unit fmo
local integer Rmo
local unit Tmo
local integer Ymo
local unit Gmo
local integer gmo
local integer hmo
local unit Fmo
local integer kmo
local unit jmo
local integer xmo
local unit vmo
local integer mmo
local integer Qmo
local unit Wmo
local integer Emo
local unit Zmo
local integer Umo
local unit Imo
local integer Pmo
local integer Amo
local unit Dmo
local integer Hmo
local unit Jmo
local integer Kmo
local unit Lmo
local integer Xmo
local integer Cmo
local unit Vmo
local integer Bmo
local unit Nmo
local integer Mmo
local unit wQo
local integer uQo
local integer rQo
local unit sQo
local integer tQo
local integer iQo
local unit SQo
local integer cQo
local integer oQo
local unit OQo
local integer lQo
local integer bQo
local unit yQo
local integer pQo
local integer eQo
local unit qQo
local unitstate aQo
local boolean nQo
local player dQo
local playerstate fQo
local player RQo
local playerstate TQo
local unit YQo
local unitstate GQo
if aRo==$41313830 then
set RRo=KT
set TRo=2.
set YRo=RRo
set GRo=UNIT_STATE_MANA
set gRo=TRo
set qQo=YRo
set aQo=GRo
set hRo=YRo
set FRo=GRo
call SetUnitState(qQo,aQo,GetUnitState(hRo,FRo)+gRo)
set kRo=KT
set jRo=$41313742
call UnitAddAbility(kRo,jRo)
set xRo=KT
set vRo=$41313830
call UnitRemoveAbility(xRo,vRo)
set mRo="You have destroyed the Perfect Mechanism"
set QRo=10.
set ERo=KT
set WRo=GetOwningPlayer(ERo)
call DisplayTimedTextToPlayer(WRo,0.,0.,QRo,mRo)
set ZRo=LT
set URo=$41323330
if GetUnitAbilityLevel(ZRo,URo)>0 then
set IRo=LT
set PRo=$41323330
call UnitRemoveAbility(IRo,PRo)
endif
set ARo=LT
set DRo=$41323332
if GetUnitAbilityLevel(ARo,DRo)>0 then
set HRo=LT
set JRo=$41323332
call UnitRemoveAbility(HRo,JRo)
endif
set KRo=LT
set LRo=$41323331
if GetUnitAbilityLevel(KRo,LRo)==1 then
set XRo=LT
set CRo=$41323331
call UnitRemoveAbility(XRo,CRo)
endif
set VRo=QT
call DisableTrigger(VRo)
set BRo=WT
call DisableTrigger(BRo)
set NRo=CT
set BT[GetPlayerId(NRo)]=false
set MRo=CT
set NT[GetPlayerId(MRo)]=false
set wTo=CT
set MT[GetPlayerId(wTo)]=false
set uTo=CT
set wY[GetPlayerId(uTo)]=false
set IT=0
set rTo=KT
set sTo=$41313754
if GetUnitAbilityLevel(rTo,sTo)==1 then
set tTo=KT
set iTo=$41313754
call UnitRemoveAbility(tTo,iTo)
endif
set STo=KT
set cTo=$41313755
if GetUnitAbilityLevel(STo,cTo)==1 then
set oTo=KT
set OTo=$41313755
call UnitRemoveAbility(oTo,OTo)
endif
set lTo=KT
set bTo=$41313756
if GetUnitAbilityLevel(lTo,bTo)==1 then
set yTo=KT
set pTo=$41313756
call UnitRemoveAbility(yTo,pTo)
endif
set eTo=KT
set qTo=$41313757
if GetUnitAbilityLevel(eTo,qTo)==1 then
set aTo=KT
set nTo=$41313757
call UnitRemoveAbility(aTo,nTo)
endif
set dTo=KT
set fTo=$41313758
if GetUnitAbilityLevel(dTo,fTo)==1 then
set RTo=KT
set TTo=$41313758
call UnitRemoveAbility(RTo,TTo)
endif
set YTo=KT
set GTo=$41313759
if GetUnitAbilityLevel(YTo,GTo)==1 then
set gTo=KT
set hTo=$41313759
call UnitRemoveAbility(gTo,hTo)
endif
set FTo=KT
set kTo=$4131375A
if GetUnitAbilityLevel(FTo,kTo)==1 then
set jTo=KT
set xTo=$4131375A
call UnitRemoveAbility(jTo,xTo)
set vTo=LT
set mTo=$41313838
if GetUnitAbilityLevel(vTo,mTo)==1 then
set QTo=LT
set WTo=$41313838
call UnitRemoveAbility(QTo,WTo)
endif
endif
set ETo=KT
set ZTo=$41313750
if GetUnitAbilityLevel(ETo,ZTo)!=0 then
set UTo=KT
set ITo=$41313750
call UnitRemoveAbility(UTo,ITo)
endif
set PTo=KT
set ATo=$41313751
if GetUnitAbilityLevel(PTo,ATo)!=0 then
set DTo=KT
set HTo=$41313751
call UnitRemoveAbility(DTo,HTo)
set JTo=LT
set KTo=$41323331
call UnitRemoveAbility(JTo,KTo)
call Xhi()
set LTo=mT
call DisableTrigger(LTo)
endif
set XTo=KT
set CTo=$41313752
if GetUnitAbilityLevel(XTo,CTo)!=0 then
set VTo=KT
set BTo=$41313752
call UnitRemoveAbility(VTo,BTo)
set NTo=LT
set MTo=$41313831
if GetUnitAbilityLevel(NTo,MTo)==1 then
set wYo=LT
set uYo=$41313831
call UnitRemoveAbility(wYo,uYo)
endif
set rYo=LT
set sYo=$41313832
if GetUnitAbilityLevel(rYo,sYo)==1 then
set tYo=LT
set iYo=$41313832
call UnitRemoveAbility(tYo,iYo)
endif
set SYo=LT
set cYo=$41313833
if GetUnitAbilityLevel(SYo,cYo)==1 then
set oYo=LT
set OYo=$41313833
call UnitRemoveAbility(oYo,OYo)
endif
set lYo=LT
set bYo=$41313441
if GetUnitAbilityLevel(lYo,bYo)==1 then
set yYo=LT
set pYo=$41313441
call UnitRemoveAbility(yYo,pYo)
endif
set qYo=KT
set eYo=GetOwningPlayer(qYo)
set nRo=GetPlayerId(eYo)
set aYo=o[nRo]
set nYo=$41313836
if GetUnitAbilityLevel(aYo,nYo)==1 then
set dYo=o[nRo]
set fYo=$41313836
call UnitRemoveAbility(dYo,fYo)
endif
endif
set RYo=KT
set TYo=$41313753
if GetUnitAbilityLevel(RYo,TYo)!=0 then
set YYo=KT
set GYo=$41313753
call UnitRemoveAbility(YYo,GYo)
set gYo=LT
set hYo=$41313835
if GetUnitAbilityLevel(gYo,hYo)==1 then
set FYo=LT
set kYo=$41313835
call UnitRemoveAbility(FYo,kYo)
endif
set xYo=KT
set jYo=GetOwningPlayer(xYo)
set dRo=GetPlayerId(jYo)
set vYo=o[dRo]
set mYo=$41313836
if GetUnitAbilityLevel(vYo,mYo)==1 then
set QYo=o[dRo]
set WYo=$41313837
set nQo=GetUnitAbilityLevel(QYo,WYo)==1
else
set nQo=false
endif
if nQo then
set EYo=o[dRo]
set ZYo=$41313836
call UnitRemoveAbility(EYo,ZYo)
set UYo=o[dRo]
set IYo=$41313837
call UnitRemoveAbility(UYo,IYo)
endif
endif
endif
if aRo==$41313749 or aRo==$4131374A or aRo==$4131374B and PT==false then
set PT=true
set XYo=KT
set PYo=GetOwningPlayer(XYo)
set AYo=500
set DYo=PYo
set HYo=PLAYER_STATE_RESOURCE_GOLD
set JYo=AYo
set dQo=DYo
set fQo=HYo
set KYo=DYo
set LYo=HYo
call SetPlayerState(dQo,fQo,GetPlayerState(KYo,LYo)+JYo)
call UuS(KT,500)
set CYo=CT
set VYo=CT
set hr[GetPlayerId(CYo)]=hr[GetPlayerId(VYo)]+500
set BYo=CT
set NYo=CT
set Fr[GetPlayerId(BYo)]=Fr[GetPlayerId(NYo)]+500
set MYo=CT
set wGo=CT
set Cr[GetPlayerId(MYo)]=Cr[GetPlayerId(wGo)]+500
endif
if aRo==$4131374C or aRo==$4131374D or aRo==$4131374E or aRo==$4131374F and AT==false then
set AT=true
set oGo=KT
set uGo=GetOwningPlayer(oGo)
set rGo=1000
set sGo=uGo
set tGo=PLAYER_STATE_RESOURCE_GOLD
set iGo=rGo
set RQo=sGo
set TQo=tGo
set SGo=sGo
set cGo=tGo
call SetPlayerState(RQo,TQo,GetPlayerState(SGo,cGo)+iGo)
call UuS(KT,1000)
set OGo=CT
set lGo=CT
set hr[GetPlayerId(OGo)]=hr[GetPlayerId(lGo)]+1000
set bGo=CT
set yGo=CT
set Fr[GetPlayerId(bGo)]=Fr[GetPlayerId(yGo)]+1000
set pGo=CT
set eGo=CT
set Cr[GetPlayerId(pGo)]=Cr[GetPlayerId(eGo)]+1000
endif
if aRo==$41313745 then
set qGo=KT
set aGo=$41313742
call UnitRemoveAbility(qGo,aGo)
set nGo=KT
set dGo=$41313743
call UnitAddAbility(nGo,dGo)
call SetUnitAnimation(KT,"Work")
set fGo=KT
set RGo=$41313750
call UnitAddAbility(fGo,RGo)
set TGo=LT
set YGo=$41323330
call UnitAddAbility(TGo,YGo)
set GGo=LT
set gGo=$41323330
set hGo=2
call SetUnitAbilityLevel(GGo,gGo,hGo)
endif
if aRo==$41313746 then
set FGo=KT
set kGo=$41313742
call UnitRemoveAbility(FGo,kGo)
set jGo=KT
set xGo=$41313743
call UnitAddAbility(jGo,xGo)
call SetUnitAnimation(KT,"Work")
set vGo=KT
set mGo=$41313751
call UnitAddAbility(vGo,mGo)
set QGo=LT
set WGo=$41323330
call UnitAddAbility(QGo,WGo)
set EGo=LT
set ZGo=$41323330
set UGo=1
call SetUnitAbilityLevel(EGo,ZGo,UGo)
set IGo=LT
set PGo=$41323332
call UnitAddAbility(IGo,PGo)
set AGo=LT
set DGo=$41323332
set HGo=1
call SetUnitAbilityLevel(AGo,DGo,HGo)
endif
if aRo==$41313747 then
set JGo=KT
set KGo=$41313742
call UnitRemoveAbility(JGo,KGo)
set LGo=KT
set XGo=$41313743
call UnitAddAbility(LGo,XGo)
call SetUnitAnimation(KT,"Work")
set CGo=KT
set VGo=$41313752
call UnitAddAbility(CGo,VGo)
set BGo=QT
call EnableTrigger(BGo)
set IT=50
set NGo=LT
set MGo=$41313832
call UnitAddAbility(NGo,MGo)
endif
if aRo==$41313748 then
set wgo=KT
set ugo=$41313742
call UnitRemoveAbility(wgo,ugo)
set rgo=KT
set sgo=$41313743
call UnitAddAbility(rgo,sgo)
call SetUnitAnimation(KT,"Work")
set tgo=KT
set igo=$41313753
call UnitAddAbility(tgo,igo)
set Sgo=LT
set cgo=$41323330
call UnitAddAbility(Sgo,cgo)
set ogo=LT
set Ogo=$41323330
set lgo=2
call SetUnitAbilityLevel(ogo,Ogo,lgo)
set bgo=LT
set ygo=$41323332
call UnitAddAbility(bgo,ygo)
set pgo=LT
set ego=$41323332
set qgo=2
call SetUnitAbilityLevel(pgo,ego,qgo)
endif
if aRo==$41313749 then
set HT=true
set ago=KT
set ngo=$41313743
call UnitRemoveAbility(ago,ngo)
set dgo=KT
set fgo=$41313744
call UnitAddAbility(dgo,fgo)
set Rgo=KT
set Tgo=$41313754
call UnitAddAbility(Rgo,Tgo)
call SetUnitAnimation(KT,"Work")
set Ygo="You have improved the mechanism with Form"
set Ggo=10.
set hgo=KT
set ggo=GetOwningPlayer(hgo)
call DisplayTimedTextToPlayer(ggo,0.,0.,Ggo,Ygo)
set Fgo=KT
set kgo=$41313750
if GetUnitAbilityLevel(Fgo,kgo)!=0 then
set jgo=KT
set xgo=$41313750
set vgo=2
call SetUnitAbilityLevel(jgo,xgo,vgo)
set mgo=LT
set Qgo=$41323330
set Wgo=3
call SetUnitAbilityLevel(mgo,Qgo,Wgo)
endif
set Ego=KT
set Zgo=$41313751
if GetUnitAbilityLevel(Ego,Zgo)!=0 then
set Ugo=KT
set Igo=$41313751
set Pgo=2
call SetUnitAbilityLevel(Ugo,Igo,Pgo)
set Ago=LT
set Dgo=$41323331
call UnitAddAbility(Ago,Dgo)
endif
set Hgo=KT
set Jgo=$41313752
if GetUnitAbilityLevel(Hgo,Jgo)!=0 then
set Kgo=KT
set Lgo=$41313752
set Xgo=2
call SetUnitAbilityLevel(Kgo,Lgo,Xgo)
endif
set Cgo=KT
set Vgo=$41313753
if GetUnitAbilityLevel(Cgo,Vgo)!=0 then
set Bgo=KT
set Ngo=$41313753
set Mgo=2
call SetUnitAbilityLevel(Bgo,Ngo,Mgo)
endif
endif
if aRo==$4131374A then
set JT=true
set who=KT
set uho=$41313743
call UnitRemoveAbility(who,uho)
set rho=KT
set sho=$41313744
call UnitAddAbility(rho,sho)
set tho=KT
set iho=$41313756
call UnitAddAbility(tho,iho)
call SetUnitAnimation(KT,"Work")
set Sho="You have improved the mechanism with Form"
set cho=10.
set Oho=KT
set oho=GetOwningPlayer(Oho)
call DisplayTimedTextToPlayer(oho,0.,0.,cho,Sho)
set lho=KT
set bho=$41313750
if GetUnitAbilityLevel(lho,bho)!=0 then
set yho=KT
set pho=$41313750
set eho=3
call SetUnitAbilityLevel(yho,pho,eho)
endif
set qho=KT
set aho=$41313751
if GetUnitAbilityLevel(qho,aho)!=0 then
set nho=KT
set dho=$41313751
set fho=3
call SetUnitAbilityLevel(nho,dho,fho)
endif
set Rho=KT
set Tho=$41313752
if GetUnitAbilityLevel(Rho,Tho)!=0 then
set Yho=KT
set Gho=$41313752
set gho=3
call SetUnitAbilityLevel(Yho,Gho,gho)
set hho=LT
set Fho=$41313832
call UnitRemoveAbility(hho,Fho)
set kho=LT
set jho=$41313833
call UnitAddAbility(kho,jho)
set IT=75
endif
set xho=KT
set vho=$41313753
if GetUnitAbilityLevel(xho,vho)!=0 then
set mho=KT
set Qho=$41313753
set Who=3
call SetUnitAbilityLevel(mho,Qho,Who)
set Eho=LT
set Zho=$41323330
set Uho=1
call SetUnitAbilityLevel(Eho,Zho,Uho)
endif
endif
if aRo==$4131374B then
set DT=true
set Iho=KT
set Pho=$41313743
call UnitRemoveAbility(Iho,Pho)
set Aho=KT
set Dho=$41313744
call UnitAddAbility(Aho,Dho)
set Hho=KT
set Jho=$41313755
call UnitAddAbility(Hho,Jho)
call SetUnitAnimation(KT,"Work")
set Kho="You have improved the mechanism with Form"
set Lho=10.
set Cho=KT
set Xho=GetOwningPlayer(Cho)
call DisplayTimedTextToPlayer(Xho,0.,0.,Lho,Kho)
set Vho=KT
set Bho=$41313750
if GetUnitAbilityLevel(Vho,Bho)!=0 then
set Nho=KT
set Mho=$41313750
set wFo=4
call SetUnitAbilityLevel(Nho,Mho,wFo)
set uFo=LT
set rFo=$41323330
set sFo=1
call SetUnitAbilityLevel(uFo,rFo,sFo)
endif
set tFo=KT
set iFo=$41313751
if GetUnitAbilityLevel(tFo,iFo)!=0 then
set SFo=KT
set cFo=$41313751
set oFo=4
call SetUnitAbilityLevel(SFo,cFo,oFo)
set OFo=LT
set lFo=$41323332
call UnitRemoveAbility(OFo,lFo)
set bFo=LT
set yFo=$41323330
set pFo=2
call SetUnitAbilityLevel(bFo,yFo,pFo)
endif
set eFo=KT
set qFo=$41313752
if GetUnitAbilityLevel(eFo,qFo)!=0 then
set aFo=KT
set nFo=$41313752
set dFo=4
call SetUnitAbilityLevel(aFo,nFo,dFo)
set fFo=LT
set RFo=$41313832
call UnitRemoveAbility(fFo,RFo)
set TFo=LT
set YFo=$41313833
call UnitAddAbility(TFo,YFo)
set GFo=LT
set gFo=$41313441
call UnitAddAbility(GFo,gFo)
set IT=25
endif
set hFo=KT
set FFo=$41313753
if GetUnitAbilityLevel(hFo,FFo)!=0 then
set kFo=KT
set jFo=$41313753
set xFo=4
call SetUnitAbilityLevel(kFo,jFo,xFo)
set vFo=LT
set mFo=$41323332
set QFo=1
call SetUnitAbilityLevel(vFo,mFo,QFo)
endif
endif
if aRo==$4131374C then
set WFo=KT
set EFo=$41313744
call UnitRemoveAbility(WFo,EFo)
set ZFo=KT
set UFo=$41313830
call UnitAddAbility(ZFo,UFo)
call SetUnitAnimation(KT,"Work")
set IFo="You have improved the mechanism with Crystal\nYou have created the Perfect Mechanism!"
set PFo=10.
set DFo=KT
set AFo=GetOwningPlayer(DFo)
call DisplayTimedTextToPlayer(AFo,0.,0.,PFo,IFo)
set HFo=KT
set JFo=$41313750
if GetUnitAbilityLevel(HFo,JFo)!=0 then
set KFo=KT
set LFo=$41313757
call UnitAddAbility(KFo,LFo)
set XFo=KT
set CFo=$41313750
set VFo=5
call SetUnitAbilityLevel(XFo,CFo,VFo)
if DT==true then
set BFo=LT
set NFo=$41323330
call UnitRemoveAbility(BFo,NFo)
set MFo=LT
set wko=$41323332
call UnitAddAbility(MFo,wko)
set uko=LT
set rko=$41323332
set sko=1
call SetUnitAbilityLevel(uko,rko,sko)
endif
if HT==true then
set tko=LT
set iko=$41323330
call UnitRemoveAbility(tko,iko)
set Sko=LT
set cko=$41323332
call UnitAddAbility(Sko,cko)
set oko=LT
set Oko=$41323332
set lko=3
call SetUnitAbilityLevel(oko,Oko,lko)
endif
if JT==true then
set bko=LT
set yko=$41323330
call UnitRemoveAbility(bko,yko)
set pko=LT
set eko=$41323332
call UnitAddAbility(pko,eko)
set qko=LT
set ako=$41323332
set nko=2
call SetUnitAbilityLevel(qko,ako,nko)
endif
endif
set dko=KT
set fko=$41313751
if GetUnitAbilityLevel(dko,fko)!=0 then
set Rko=KT
set Tko=$41313757
call UnitAddAbility(Rko,Tko)
set Yko=KT
set Gko=$41313751
set gko=5
call SetUnitAbilityLevel(Yko,Gko,gko)
set hko=CT
set BT[GetPlayerId(hko)]=true
endif
set Fko=KT
set kko=$41313752
if GetUnitAbilityLevel(Fko,kko)!=0 then
set jko=KT
set xko=$41313757
call UnitAddAbility(jko,xko)
set vko=KT
set mko=$41313752
set Qko=5
call SetUnitAbilityLevel(vko,mko,Qko)
if DT==true then
set Wko=LT
set Eko=$41323330
call UnitAddAbility(Wko,Eko)
set Zko=LT
set Uko=$41323330
set Iko=3
call SetUnitAbilityLevel(Zko,Uko,Iko)
endif
if JT==true then
set Pko=LT
set Ako=$41313833
call UnitRemoveAbility(Pko,Ako)
endif
if HT==true then
set Dko=LT
set Hko=$41323330
call UnitAddAbility(Dko,Hko)
set Jko=LT
set Kko=$41323330
set Lko=2
call SetUnitAbilityLevel(Jko,Kko,Lko)
endif
set Xko=QT
call DisableTrigger(Xko)
set IT=0
call q4r()
set Cko=WT
call EnableTrigger(Cko)
endif
set Vko=KT
set Bko=$41313753
if GetUnitAbilityLevel(Vko,Bko)!=0 then
set Nko=KT
set Mko=$41313757
call UnitAddAbility(Nko,Mko)
set wjo=KT
set ujo=$41313753
set rjo=5
call SetUnitAbilityLevel(wjo,ujo,rjo)
if DT==true then
set sjo=LT
set tjo=$41323332
set ijo=2
call SetUnitAbilityLevel(sjo,tjo,ijo)
endif
if JT==true then
set Sjo=LT
set cjo=$41323332
set ojo=4
call SetUnitAbilityLevel(Sjo,cjo,ojo)
endif
endif
endif
if aRo==$4131374D then
set Ojo=KT
set ljo=$41313744
call UnitRemoveAbility(Ojo,ljo)
set bjo=KT
set yjo=$41313830
call UnitAddAbility(bjo,yjo)
call SetUnitAnimation(KT,"Work")
set pjo="You have improved the mechanism with Crystal\nYou have created the Perfect Mechanism!"
set ejo=10.
set ajo=KT
set qjo=GetOwningPlayer(ajo)
call DisplayTimedTextToPlayer(qjo,0.,0.,ejo,pjo)
set njo=KT
set djo=$41313750
if GetUnitAbilityLevel(njo,djo)!=0 then
set fjo=KT
set Rjo=$41313758
call UnitAddAbility(fjo,Rjo)
set Tjo=KT
set Yjo=$41313750
set Gjo=6
call SetUnitAbilityLevel(Tjo,Yjo,Gjo)
endif
set gjo=KT
set hjo=$41313751
if GetUnitAbilityLevel(gjo,hjo)!=0 then
set Fjo=KT
set kjo=$41313758
call UnitAddAbility(Fjo,kjo)
set jjo=KT
set xjo=$41313751
set vjo=6
call SetUnitAbilityLevel(jjo,xjo,vjo)
set mjo=CT
set NT[GetPlayerId(mjo)]=true
set Ejo=CT
set Qjo=o[GetPlayerId(Ejo)]
set Wjo=$41313836
call UnitAddAbility(Qjo,Wjo)
endif
set Zjo=KT
set Ujo=$41313752
if GetUnitAbilityLevel(Zjo,Ujo)!=0 then
set Ijo=KT
set Pjo=$41313758
call UnitAddAbility(Ijo,Pjo)
set Ajo=KT
set Djo=$41313752
set Hjo=6
call SetUnitAbilityLevel(Ajo,Djo,Hjo)
set Jjo=LT
set Kjo=$41313838
call UnitAddAbility(Jjo,Kjo)
set Ljo=QT
call DisableTrigger(Ljo)
set IT=0
endif
set Xjo=KT
set Cjo=$41313753
if GetUnitAbilityLevel(Xjo,Cjo)!=0 then
set Vjo=KT
set Bjo=$41313758
call UnitAddAbility(Vjo,Bjo)
set Njo=KT
set Mjo=$41313753
set wxo=6
call SetUnitAbilityLevel(Njo,Mjo,wxo)
if DT==true or HT==true and JT==false then
set uxo=CT
set MT[GetPlayerId(uxo)]=true
endif
if JT==true and DT==false or HT==false then
set txo=CT
set rxo=o[GetPlayerId(txo)]
set sxo=$41313836
call UnitAddAbility(rxo,sxo)
set cxo=CT
set ixo=o[GetPlayerId(cxo)]
set Sxo=$41313837
call UnitAddAbility(ixo,Sxo)
endif
endif
endif
if aRo==$4131374E then
set oxo=KT
set Oxo=$41313744
call UnitRemoveAbility(oxo,Oxo)
set lxo=KT
set bxo=$41313830
call UnitAddAbility(lxo,bxo)
call SetUnitAnimation(KT,"Work")
set yxo="You have improved the mechanism with Crystal\nYou have created the Perfect Mechanism!"
set pxo=10.
set qxo=KT
set exo=GetOwningPlayer(qxo)
call DisplayTimedTextToPlayer(exo,0.,0.,pxo,yxo)
set axo=KT
set nxo=$41313750
if GetUnitAbilityLevel(axo,nxo)!=0 then
set dxo=KT
set fxo=$41313759
call UnitAddAbility(dxo,fxo)
set Rxo=KT
set Txo=$41313750
set Yxo=7
call SetUnitAbilityLevel(Rxo,Txo,Yxo)
if DT==true then
set Gxo=LT
set gxo=$41323330
set hxo=3
call SetUnitAbilityLevel(Gxo,gxo,hxo)
endif
if HT==true and JT==false then
set Fxo=LT
set kxo=$41323330
set jxo=2
call SetUnitAbilityLevel(Fxo,kxo,jxo)
set Uxo=CT
set xxo=o[GetPlayerId(Uxo)]
set vxo=70.
set mxo=xxo
set Qxo=UNIT_STATE_MANA
set Wxo=vxo
set YQo=mxo
set GQo=Qxo
set Exo=mxo
set Zxo=Qxo
call SetUnitState(YQo,GQo,GetUnitState(Exo,Zxo)+Wxo)
set fRo=CreateTextTag()
set Ixo=fRo
set Jxo=CT
set Hxo=o[GetPlayerId(Jxo)]
set Pxo=GetUnitX(Hxo)
set Lxo=CT
set Kxo=o[GetPlayerId(Lxo)]
set Axo=GetUnitY(Kxo)
set Dxo=50.
call SetTextTagPos(Ixo,Pxo,Axo,Dxo)
set Xxo=fRo
set Cxo=0
set Vxo=77
set Bxo=255
set Nxo=255
call SetTextTagColor(Xxo,Cxo,Vxo,Bxo,Nxo)
set Mxo=fRo
set wvo=6.
call SetTextTagLifespan(Mxo,wvo)
set uvo=fRo
set rvo=4.
call SetTextTagFadepoint(uvo,rvo)
set svo=fRo
set tvo=true
call SetTextTagVisibility(svo,tvo)
set ivo=fRo
set Svo=false
call SetTextTagPermanent(ivo,Svo)
set cvo=fRo
set ovo="+70"
set Ovo=10.
call SetTextTagText(cvo,ovo,Ovo*.0023)
set lvo=fRo
set bvo=0.
set yvo=.03
call SetTextTagVelocity(lvo,bvo,yvo)
set pvo=CT
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge Blue.mdl",o[GetPlayerId(pvo)],"origin"))
endif
endif
set evo=KT
set qvo=$41313751
if GetUnitAbilityLevel(evo,qvo)!=0 then
set avo=KT
set nvo=$41313759
call UnitAddAbility(avo,nvo)
set dvo=KT
set fvo=$41313751
set Rvo=7
call SetUnitAbilityLevel(dvo,fvo,Rvo)
set Tvo=CT
set wY[GetPlayerId(Tvo)]=true
call Xhi()
set Yvo=mT
call EnableTrigger(Yvo)
endif
set Gvo=KT
set gvo=$41313752
if GetUnitAbilityLevel(Gvo,gvo)!=0 then
set hvo=KT
set Fvo=$41313759
call UnitAddAbility(hvo,Fvo)
set kvo=KT
set jvo=$41313752
set xvo=7
call SetUnitAbilityLevel(kvo,jvo,xvo)
endif
set vvo=KT
set mvo=$41313753
if GetUnitAbilityLevel(vvo,mvo)!=0 then
set Qvo=KT
set Wvo=$41313759
call UnitAddAbility(Qvo,Wvo)
set Evo=KT
set Zvo=$41313753
set Uvo=7
call SetUnitAbilityLevel(Evo,Zvo,Uvo)
if HT==true then
set Ivo=LT
set Pvo=$41313835
call UnitAddAbility(Ivo,Pvo)
endif
endif
endif
if aRo==$4131374F then
set Avo=KT
set Dvo=$41313744
call UnitRemoveAbility(Avo,Dvo)
set Hvo=KT
set Jvo=$41313830
call UnitAddAbility(Hvo,Jvo)
call SetUnitAnimation(KT,"Work")
set Kvo="You have improved the mechanism with Crystal\nYou have created the Perfect Mechanism!"
set Lvo=10.
set Cvo=KT
set Xvo=GetOwningPlayer(Cvo)
call DisplayTimedTextToPlayer(Xvo,0.,0.,Lvo,Kvo)
set Vvo=KT
set Bvo=$41313750
if GetUnitAbilityLevel(Vvo,Bvo)!=0 then
set Nvo=KT
set Mvo=$4131375A
call UnitAddAbility(Nvo,Mvo)
set wmo=KT
set umo=$41313750
set rmo=8
call SetUnitAbilityLevel(wmo,umo,rmo)
if DT==true then
set smo=LT
set tmo=$41323330
set imo=3
call SetUnitAbilityLevel(smo,tmo,imo)
endif
if HT==true then
set Smo=LT
set cmo=$41323330
set omo=6
call SetUnitAbilityLevel(Smo,cmo,omo)
endif
if JT==true then
set Omo=LT
set lmo=$41323330
set bmo=4
call SetUnitAbilityLevel(Omo,lmo,bmo)
endif
endif
set ymo=KT
set pmo=$41313751
if GetUnitAbilityLevel(ymo,pmo)!=0 then
set emo=KT
set qmo=$4131375A
call UnitAddAbility(emo,qmo)
set amo=KT
set nmo=$41313751
set dmo=8
call SetUnitAbilityLevel(amo,nmo,dmo)
endif
set fmo=KT
set Rmo=$41313752
if GetUnitAbilityLevel(fmo,Rmo)!=0 then
set Tmo=KT
set Ymo=$4131375A
call UnitAddAbility(Tmo,Ymo)
set Gmo=KT
set gmo=$41313752
set hmo=8
call SetUnitAbilityLevel(Gmo,gmo,hmo)
if DT==true then
set Fmo=LT
set kmo=$41313833
call UnitRemoveAbility(Fmo,kmo)
set jmo=LT
set xmo=$41323330
call UnitAddAbility(jmo,xmo)
set vmo=LT
set mmo=$41323330
set Qmo=2
call SetUnitAbilityLevel(vmo,mmo,Qmo)
set IT=100
endif
if HT==true then
set Wmo=LT
set Emo=$41313832
call UnitRemoveAbility(Wmo,Emo)
set Zmo=LT
set Umo=$41323330
call UnitAddAbility(Zmo,Umo)
set Imo=LT
set Pmo=$41323330
set Amo=1
call SetUnitAbilityLevel(Imo,Pmo,Amo)
set IT=125
endif
if JT==true then
set Dmo=LT
set Hmo=$41313833
call UnitRemoveAbility(Dmo,Hmo)
set Jmo=LT
set Kmo=$41323330
call UnitAddAbility(Jmo,Kmo)
set Lmo=LT
set Xmo=$41323330
set Cmo=2
call SetUnitAbilityLevel(Lmo,Xmo,Cmo)
set IT=175
endif
endif
set Vmo=KT
set Bmo=$41313753
if GetUnitAbilityLevel(Vmo,Bmo)!=0 then
set Nmo=KT
set Mmo=$4131375A
call UnitAddAbility(Nmo,Mmo)
set wQo=KT
set uQo=$41313753
set rQo=8
call SetUnitAbilityLevel(wQo,uQo,rQo)
if JT==true then
set sQo=LT
set tQo=$41323330
set iQo=2
call SetUnitAbilityLevel(sQo,tQo,iQo)
endif
if HT==true then
set SQo=LT
set cQo=$41323330
set oQo=8
call SetUnitAbilityLevel(SQo,cQo,oQo)
set OQo=LT
set lQo=$41323332
set bQo=8
call SetUnitAbilityLevel(OQo,lQo,bQo)
endif
if DT==true then
set yQo=LT
set pQo=$41323330
set eQo=4
call SetUnitAbilityLevel(yQo,pQo,eQo)
endif
endif
endif
set fRo=null
set RRo=null
set YRo=null
set GRo=null
set hRo=null
set FRo=null
set kRo=null
set xRo=null
set WRo=null
set ERo=null
set ZRo=null
set IRo=null
set ARo=null
set HRo=null
set KRo=null
set XRo=null
set VRo=null
set BRo=null
set NRo=null
set MRo=null
set wTo=null
set uTo=null
set rTo=null
set tTo=null
set STo=null
set oTo=null
set lTo=null
set yTo=null
set eTo=null
set aTo=null
set dTo=null
set RTo=null
set YTo=null
set gTo=null
set FTo=null
set jTo=null
set vTo=null
set QTo=null
set ETo=null
set UTo=null
set PTo=null
set DTo=null
set JTo=null
set LTo=null
set XTo=null
set VTo=null
set NTo=null
set wYo=null
set rYo=null
set tYo=null
set SYo=null
set oYo=null
set lYo=null
set yYo=null
set eYo=null
set qYo=null
set aYo=null
set dYo=null
set RYo=null
set YYo=null
set gYo=null
set FYo=null
set jYo=null
set xYo=null
set vYo=null
set QYo=null
set EYo=null
set UYo=null
set PYo=null
set DYo=null
set HYo=null
set KYo=null
set LYo=null
set XYo=null
set CYo=null
set VYo=null
set BYo=null
set NYo=null
set MYo=null
set wGo=null
set uGo=null
set sGo=null
set tGo=null
set SGo=null
set cGo=null
set oGo=null
set OGo=null
set lGo=null
set bGo=null
set yGo=null
set pGo=null
set eGo=null
set qGo=null
set nGo=null
set fGo=null
set TGo=null
set GGo=null
set FGo=null
set jGo=null
set vGo=null
set QGo=null
set EGo=null
set IGo=null
set AGo=null
set JGo=null
set LGo=null
set CGo=null
set BGo=null
set NGo=null
set wgo=null
set rgo=null
set tgo=null
set Sgo=null
set ogo=null
set bgo=null
set pgo=null
set ago=null
set dgo=null
set Rgo=null
set ggo=null
set hgo=null
set Fgo=null
set jgo=null
set mgo=null
set Ego=null
set Ugo=null
set Ago=null
set Hgo=null
set Kgo=null
set Cgo=null
set Bgo=null
set who=null
set rho=null
set tho=null
set oho=null
set Oho=null
set lho=null
set yho=null
set qho=null
set nho=null
set Rho=null
set Yho=null
set hho=null
set kho=null
set xho=null
set mho=null
set Eho=null
set Iho=null
set Aho=null
set Hho=null
set Xho=null
set Cho=null
set Vho=null
set Nho=null
set uFo=null
set tFo=null
set SFo=null
set OFo=null
set bFo=null
set eFo=null
set aFo=null
set fFo=null
set TFo=null
set GFo=null
set hFo=null
set kFo=null
set vFo=null
set WFo=null
set ZFo=null
set AFo=null
set DFo=null
set HFo=null
set KFo=null
set XFo=null
set BFo=null
set MFo=null
set uko=null
set tko=null
set Sko=null
set oko=null
set bko=null
set pko=null
set qko=null
set dko=null
set Rko=null
set Yko=null
set hko=null
set Fko=null
set jko=null
set vko=null
set Wko=null
set Zko=null
set Pko=null
set Dko=null
set Jko=null
set Xko=null
set Cko=null
set Vko=null
set Nko=null
set wjo=null
set sjo=null
set Sjo=null
set Ojo=null
set bjo=null
set qjo=null
set ajo=null
set njo=null
set fjo=null
set Tjo=null
set gjo=null
set Fjo=null
set jjo=null
set mjo=null
set Qjo=null
set Ejo=null
set Zjo=null
set Ijo=null
set Ajo=null
set Jjo=null
set Ljo=null
set Xjo=null
set Vjo=null
set Njo=null
set uxo=null
set rxo=null
set txo=null
set ixo=null
set cxo=null
set oxo=null
set lxo=null
set exo=null
set qxo=null
set axo=null
set dxo=null
set Rxo=null
set Gxo=null
set Fxo=null
set xxo=null
set mxo=null
set Qxo=null
set Exo=null
set Zxo=null
set Uxo=null
set Ixo=null
set Hxo=null
set Jxo=null
set Kxo=null
set Lxo=null
set Xxo=null
set Mxo=null
set uvo=null
set svo=null
set ivo=null
set cvo=null
set lvo=null
set pvo=null
set evo=null
set avo=null
set dvo=null
set Tvo=null
set Yvo=null
set Gvo=null
set hvo=null
set kvo=null
set vvo=null
set Qvo=null
set Evo=null
set Ivo=null
set Avo=null
set Hvo=null
set Xvo=null
set Cvo=null
set Vvo=null
set Nvo=null
set wmo=null
set smo=null
set Smo=null
set Omo=null
set ymo=null
set emo=null
set amo=null
set fmo=null
set Tmo=null
set Gmo=null
set Fmo=null
set jmo=null
set vmo=null
set Wmo=null
set Zmo=null
set Imo=null
set Dmo=null
set Jmo=null
set Lmo=null
set Vmo=null
set Nmo=null
set wQo=null
set sQo=null
set SQo=null
set OQo=null
set yQo=null
set qQo=null
set aQo=null
set dQo=null
set fQo=null
set RQo=null
set TQo=null
set YQo=null
set GQo=null
endfunction
function gRw takes nothing returns boolean
local playerunitevent YRw=EVENT_PLAYER_UNIT_DEATH
local code GRw=Hsw
call emO(YRw,null,GRw,null)
set YRw=null
return true
endfunction
function RQu takes unit eQu,real qQu,real aQu returns nothing
local real nQu=GetUnitX(eQu)
local real dQu=GetUnitY(eQu)
local item fQu
set nQu=nQu+aQu*Cos(qQu*.01745)
set dQu=dQu+aQu*Sin(qQu*.01745)
set fQu=CreateItem($73707368,nQu,dQu)
call SetItemPosition(fQu,nQu,dQu)
if nQu==GetItemX(fQu) and dQu==GetItemY(fQu) then
call RemoveItem(fQu)
call SetUnitX(eQu,nQu)
call SetUnitY(eQu,dQu)
else
call RemoveItem(fQu)
call PauseUnit(eQu,false)
endif
set fQu=null
set fQu=null
endfunction
function wGc takes unit DYc,real HYc,real JYc returns nothing
local group KYc=CreateGroup()
local real LYc=GetUnitX(DYc)
local real XYc=GetUnitY(DYc)
local unit CYc
local group VYc
local group BYc
local group NYc
local unit MYc
call SaveUnitHandle(qu,$556E6974,$556E6974,DYc)
call GroupEnumUnitsInRange(KYc,LYc,XYc,HYc+30.,Filter(J2))
set VYc=KYc
loop
set BYc=VYc
exitwhen not (FirstOfGroup(BYc)!=null)
set NYc=VYc
set MYc=FirstOfGroup(NYc)
call GroupRemoveUnit(NYc,MYc)
set CYc=MYc
if CYc!=null then
call UnitDamageTarget(DYc,CYc,JYc,true,false,ATTACK_TYPE_HERO,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
call GroupRemoveUnit(KYc,CYc)
endif
endloop
call GroupClear(KYc)
call DestroyGroup(KYc)
set KYc=null
set CYc=null
set VYc=null
set BYc=null
set NYc=null
set MYc=null
endfunction
function gSS takes nothing returns nothing
local timer sSS=GetExpiredTimer()
local integer tSS=GetHandleId(sSS)
local unit iSS=LoadUnitHandle(qu,tSS,$556E6974)
local real SSS=GetUnitX(iSS)
local real cSS=GetUnitY(iSS)
local real oSS=LoadReal(qu,tSS,$47535458)
local real OSS=LoadReal(qu,tSS,$47535459)
local real lSS=LoadReal(qu,tSS,$44697374)
local real bSS=LoadReal(qu,tSS,$616E676C)
local real ySS=SquareRoot((oSS-SSS)*(oSS-SSS)+(OSS-cSS)*(OSS-cSS))
local real nSS=0.
local real dSS=0.
local real fSS=lSS
local real RSS=lSS
local real TSS=ySS
local real pSS=(4.*fSS/RSS*(RSS-TSS)+dSS-nSS)*(TSS/RSS)+nSS
local real eSS=I2R(GetUnitAbilityLevel(iSS,$4130324A))*25.
local unit qSS
local unit aSS
local unit YSS
local boolean GSS
if lSS-ySS>=25. and IsUnitPaused(iSS)==true then
set YSS=iSS
set GSS=(GetWidgetLife(YSS)<.405 or IsUnitType(YSS,UNIT_TYPE_DEAD))==false
else
set GSS=false
endif
if GSS then
call RQu(iSS,bSS,30.)
call SetUnitFlyHeight(iSS,pSS,0.)
if GetRandomInt(1,2)==1 then
set qSS=CreateUnit(GetOwningPlayer(iSS),$6E303158,SSS,cSS,GetRandomReal(0.,360.))
call SetUnitFlyHeight(qSS,pSS,0.)
call UnitApplyTimedLife(qSS,$42544C46,1.)
else
set aSS=CreateUnit(GetOwningPlayer(iSS),$6E30315A,SSS,cSS,GetRandomReal(0.,360.))
call SetUnitFlyHeight(aSS,pSS,0.)
call UnitApplyTimedLife(aSS,$42544C46,1.)
endif
else
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl",SSS,cSS))
call wGc(iSS,325.,150.+eSS)
call SetUnitFlyHeight(iSS,0.,0.)
call DestroyEffect(LoadEffectHandle(qu,tSS,$65666665))
call PauseUnit(iSS,false)
call SetUnitPathing(iSS,true)
call PauseTimer(sSS)
call DestroyTimer(sSS)
call FlushChildHashtable(qu,tSS)
endif
set sSS=null
set iSS=null
set qSS=null
set aSS=null
set YSS=null
endfunction
function gUp takes nothing returns nothing
local unit UZp=GetDyingUnit()
local unit IZp=GetKillingUnit()
local player PZp=GetOwningPlayer(IZp)
local unit HZp=UZp
local unittype JZp=UNIT_TYPE_ANCIENT
local integer AZp
local integer DZp
local unit KZp
local unittype LZp
local player XZp
local player CZp
local player VZp
local integer BZp
local player NZp
local playerstate MZp
local integer wUp
local player uUp
local playerstate rUp
local unit sUp
local unittype tUp
local unit iUp
local unittype SUp
local player cUp
local player oUp
local player OUp
local integer lUp
local player bUp
local playerstate yUp
local integer pUp
local player eUp
local playerstate qUp
local boolean aUp
local boolean nUp
local player dUp
local playerstate fUp
local boolean RUp
local boolean TUp
local player YUp
local playerstate GUp
if IsUnitType(HZp,JZp) then
set KZp=UZp
set LZp=UNIT_TYPE_HERO
set aUp=IsUnitType(KZp,LZp)
else
set aUp=false
endif
if aUp then
set AZp=0
loop
exitwhen AZp>12
if IO[AZp]==1 then
set XZp=UY[AZp]
set CZp=PZp
set nUp=IsPlayerAlly(XZp,CZp)
else
set nUp=false
endif
if nUp and UY[AZp]!=PZp then
set VZp=UY[AZp]
set BZp=300
set NZp=VZp
set MZp=PLAYER_STATE_RESOURCE_GOLD
set wUp=BZp
set dUp=NZp
set fUp=MZp
set uUp=NZp
set rUp=MZp
call SetPlayerState(dUp,fUp,GetPlayerState(uUp,rUp)+wUp)
endif
set AZp=AZp+1
endloop
endif
set sUp=UZp
set tUp=UNIT_TYPE_HERO
if IsUnitType(sUp,tUp) then
set iUp=UZp
set SUp=UNIT_TYPE_ANCIENT
set RUp=IsUnitType(iUp,SUp)==false
else
set RUp=false
endif
if RUp then
set DZp=0
loop
exitwhen DZp>12
if IO[DZp]==1 then
set cUp=UY[DZp]
set oUp=PZp
set TUp=IsPlayerAlly(cUp,oUp)
else
set TUp=false
endif
if TUp and UY[DZp]!=PZp then
set OUp=UY[DZp]
set lUp=120
set bUp=OUp
set yUp=PLAYER_STATE_RESOURCE_GOLD
set pUp=lUp
set YUp=bUp
set GUp=yUp
set eUp=bUp
set qUp=yUp
call SetPlayerState(YUp,GUp,GetPlayerState(eUp,qUp)+pUp)
endif
set DZp=DZp+1
endloop
endif
set UZp=null
set IZp=null
set PZp=null
set HZp=null
set JZp=null
set KZp=null
set LZp=null
set XZp=null
set CZp=null
set VZp=null
set NZp=null
set MZp=null
set uUp=null
set rUp=null
set sUp=null
set tUp=null
set iUp=null
set SUp=null
set cUp=null
set oUp=null
set OUp=null
set bUp=null
set yUp=null
set eUp=null
set qUp=null
set dUp=null
set fUp=null
set YUp=null
set GUp=null
endfunction
function gVb takes nothing returns nothing
call EnumItemsInRect(bj_mapInitialPlayableArea,null,N7)
endfunction
function gWs takes nothing returns boolean
local unit YWs=GetFilterUnit()
local boolean GWs=GetUnitTypeId(YWs)==$7530305A
set YWs=null
return GWs
endfunction
function g_u takes nothing returns nothing
local integer H0u=GetSpellAbilityId()
local real J0u
local real K0u
local unit L0u
local unit X0u
local unit C0u
local real V0u
local real B0u
local integer N0u
local unit M0u
local unit w_u
local unit u_u
local real r_u
local unit s_u
local integer t_u
local effect i_u
local string S_u
local real c_u
local real o_u
local unit O_u
local string l_u
local unit b_u
local unit y_u
local unit p_u
local unit e_u
local unit q_u
local unit a_u
local integer n_u
local unit d_u
local real f_u
local player R_u
local real T_u
local real Y_u
local real G_u
if H0u==$41303354 then
set J0u=GetSpellTargetX()
set K0u=GetSpellTargetY()
set L0u=GetSpellAbilityUnit()
set w_u=L0u
set X0u=CreateUnit(GetOwningPlayer(w_u),$75303030,J0u,K0u,0.)
set u_u=X0u
set r_u=3.
call UnitApplyTimedLife(u_u,$42544C46,r_u)
set s_u=X0u
set t_u=$41303352
call UnitAddAbility(s_u,t_u)
set S_u="war3mapImported\\WaterGeyser.mdx"
set Y_u=J0u
set G_u=K0u
set c_u=Y_u
set o_u=G_u
set i_u=AddSpecialEffect(S_u,c_u,o_u)
call DestroyEffect(i_u)
set O_u=X0u
set l_u="stomp"
call IssueImmediateOrder(O_u,l_u)
endif
if H0u==$41304C37 then
set C0u=GetSpellAbilityUnit()
set b_u=C0u
set V0u=GetUnitX(b_u)
set y_u=C0u
set B0u=GetUnitY(y_u)
set N0u=1
loop
exitwhen N0u>16
set p_u=C0u
set R_u=GetOwningPlayer(p_u)
set e_u=C0u
set T_u=GetUnitX(e_u)
set q_u=C0u
set M0u=CreateUnit(R_u,$75303030,T_u,GetUnitY(q_u),270.)
set a_u=M0u
set n_u=$41304C38
call UnitAddAbility(a_u,n_u)
call IssuePointOrder(M0u,"carrionswarm",V0u+100.*Cos(67.5+I2R(N0u)*22.5*bj_DEGTORAD),B0u+100.*Sin(67.5+I2R(N0u)*22.5*bj_DEGTORAD))
set d_u=M0u
set f_u=3.
call UnitApplyTimedLife(d_u,$42544C46,f_u)
set N0u=N0u+1
endloop
endif
set L0u=null
set X0u=null
set C0u=null
set M0u=null
set w_u=null
set u_u=null
set s_u=null
set i_u=null
set O_u=null
set b_u=null
set y_u=null
set p_u=null
set e_u=null
set q_u=null
set a_u=null
set d_u=null
set R_u=null
endfunction
function gao takes nothing returns nothing
local unit qao=GetTriggerUnit()
local unit aao=qao
local string nao="attack"
local real Yao=Qw[22]
local real Gao=Ww[22]
local real dao=Yao
local real fao=Gao
local unit Rao
local unittype Tao
call IssuePointOrder(aao,nao,dao,fao)
set Rao=qao
set Tao=UNIT_TYPE_HERO
if IsUnitType(Rao,Tao) then
call SaveInteger(qu,GetHandleId(qao),$6D6F7665,22)
endif
set qao=null
set aao=null
set Rao=null
set Tao=null
endfunction
function gbe takes nothing returns boolean
local unit pbe=GetFilterUnit()
local unit ebe=GetTriggerUnit()
local unit qbe
local player abe
local unit nbe
local unit dbe
local unit fbe
local unittype Rbe
local boolean Tbe
local boolean Ybe
local boolean Gbe
if pbe!=null and ebe!=null then
set qbe=pbe
set nbe=ebe
set abe=GetOwningPlayer(nbe)
set Tbe=IsUnitEnemy(qbe,abe)
else
set Tbe=false
endif
if Tbe==true then
set dbe=GetFilterUnit()
set Ybe=UnitAlive(dbe)==true
else
set Ybe=false
endif
if Ybe then
set fbe=GetFilterUnit()
set Rbe=UNIT_TYPE_STRUCTURE
set Gbe=IsUnitType(fbe,Rbe)==false
else
set Gbe=false
endif
set pbe=null
set ebe=null
set qbe=null
set abe=null
set nbe=null
set dbe=null
set fbe=null
set Rbe=null
return Gbe
endfunction
function RWs takes integer Cvs,unit Vvs,player Bvs returns nothing
local player Mvs=Bvs
local integer Nvs=GetPlayerId(Mvs)
local unit wms
local integer ums
local unit rms
local integer sms
local unit tms
local integer ims
local unit Sms
local integer cms
local unit oms
local integer Oms
local unit lms
local integer bms
local unit yms
local integer pms
local unit ems
local integer qms
local unit ams
local integer nms
local unit dms
local integer fms
local unit Rms
local integer Tms
local unit Yms
local integer Gms
local unit gms
local integer hms
local unit Fms
local integer kms
local unit jms
local integer xms
local unit vms
local integer mms
local unit Qms
local integer Wms
local unit Ems
local integer Zms
local unit Ums
local integer Ims
local unit Pms
local integer Ams
local unit Dms
local integer Hms
local unit Jms
local integer Kms
local unit Lms
local integer Xms
local unit Cms
local integer Vms
local unit Bms
local integer Nms
local unit Mms
local integer wQs
local unit uQs
local integer rQs
local unit sQs
local integer tQs
local unit iQs
local integer SQs
local unit cQs
local integer oQs
local unit OQs
local integer lQs
local unit bQs
local integer yQs
local unit pQs
local integer eQs
local unit qQs
local integer aQs
local unit nQs
local integer dQs
local unit fQs
local integer RQs
local unit TQs
local integer YQs
local unit GQs
local integer gQs
local unit hQs
local integer FQs
local unit kQs
local integer jQs
local unit xQs
local integer vQs
local unit mQs
local integer QQs
local unit WQs
local integer EQs
local unit ZQs
local integer UQs
local unit IQs
local integer PQs
local unit AQs
local integer DQs
local unit HQs
local integer JQs
local unit KQs
local integer LQs
local unit XQs
local integer CQs
local unit VQs
local integer BQs
local unit NQs
local integer MQs
local unit wWs
local integer uWs
local unit rWs
local integer sWs
local unit tWs
local integer iWs
local unit SWs
local integer cWs
local unit oWs
local integer OWs
local unit lWs
local integer bWs
local unit yWs
local integer pWs
local unit eWs
local integer qWs
local unit aWs
local integer nWs
local unit dWs
local integer fWs
if Cvs==$41303441 then
set wms=Vvs
set ums=w[Nvs]
call UnitRemoveAbility(wms,ums)
set rms=Vvs
set sms=$41303638
call UnitAddAbility(rms,sms)
set w[Nvs]=$41303638
endif
if Cvs==$41304239 then
set tms=Vvs
set ims=w[Nvs]
call UnitRemoveAbility(tms,ims)
set Sms=Vvs
set cms=$41304256
call UnitAddAbility(Sms,cms)
set w[Nvs]=$41304256
endif
if Cvs==$41304138 then
set oms=Vvs
set Oms=w[Nvs]
call UnitRemoveAbility(oms,Oms)
set lms=Vvs
set bms=$41304137
call UnitAddAbility(lms,bms)
set w[Nvs]=$41304137
endif
if Cvs==$41304139 then
set yms=Vvs
set pms=w[Nvs]
call UnitRemoveAbility(yms,pms)
set ems=Vvs
set qms=$41304141
call UnitAddAbility(ems,qms)
set w[Nvs]=$41304141
endif
if Cvs==$41304945 then
set ams=Vvs
set nms=w[Nvs]
call UnitRemoveAbility(ams,nms)
set dms=Vvs
set fms=$41304930
call UnitAddAbility(dms,fms)
set w[Nvs]=$41304930
endif
if Cvs==$41304157 then
set Rms=Vvs
set Tms=w[Nvs]
call UnitRemoveAbility(Rms,Tms)
set Yms=Vvs
set Gms=$41303436
call UnitAddAbility(Yms,Gms)
set w[Nvs]=$41303436
endif
if Cvs==$41303441 then
set gms=Vvs
set hms=w[Nvs]
call UnitRemoveAbility(gms,hms)
set Fms=Vvs
set kms=$41303638
call UnitAddAbility(Fms,kms)
set w[Nvs]=$41303638
endif
if Cvs==$41305637 then
set jms=Vvs
set xms=w[Nvs]
call UnitRemoveAbility(jms,xms)
set vms=Vvs
set mms=$41305638
call UnitAddAbility(vms,mms)
set w[Nvs]=$41305638
endif
if Cvs==$41305639 then
set Qms=Vvs
set Wms=w[Nvs]
call UnitRemoveAbility(Qms,Wms)
set Ems=Vvs
set Zms=$41305641
call UnitAddAbility(Ems,Zms)
set w[Nvs]=$41305641
endif
if Cvs==$41303954 then
set Ums=Vvs
set Ims=w[Nvs]
call UnitRemoveAbility(Ums,Ims)
set Pms=Vvs
set Ams=$41303432
call UnitAddAbility(Pms,Ams)
set w[Nvs]=$41303432
endif
if Cvs==$41313033 then
set Dms=Vvs
set Hms=w[Nvs]
call UnitRemoveAbility(Dms,Hms)
set Jms=Vvs
set Kms=$41313032
call UnitAddAbility(Jms,Kms)
set w[Nvs]=$41313032
endif
if Cvs==$41304145 then
set Lms=Vvs
set Xms=w[Nvs]
call UnitRemoveAbility(Lms,Xms)
set Cms=Vvs
set Vms=$41304144
call UnitAddAbility(Cms,Vms)
set w[Nvs]=$41304144
endif
if Cvs==$41313034 then
set Bms=Vvs
set Nms=w[Nvs]
call UnitRemoveAbility(Bms,Nms)
set Mms=Vvs
set wQs=$41313035
call UnitAddAbility(Mms,wQs)
set w[Nvs]=$41313035
endif
if Cvs==$496E4175 then
set uQs=Vvs
set rQs=w[Nvs]
call UnitRemoveAbility(uQs,rQs)
set sQs=Vvs
set tQs=$496E414F
call UnitAddAbility(sQs,tQs)
set w[Nvs]=$496E414F
endif
if Cvs==$41304150 then
set iQs=Vvs
set SQs=w[Nvs]
call UnitRemoveAbility(iQs,SQs)
set cQs=Vvs
set oQs=$41303433
call UnitAddAbility(cQs,oQs)
set w[Nvs]=$41303433
endif
if Cvs==$41304151 then
set OQs=Vvs
set lQs=w[Nvs]
call UnitRemoveAbility(OQs,lQs)
set bQs=Vvs
set yQs=$41304A5A
call UnitAddAbility(bQs,yQs)
set w[Nvs]=$41304A5A
endif
if Cvs==$4130415A then
set pQs=Vvs
set eQs=w[Nvs]
call UnitRemoveAbility(pQs,eQs)
set qQs=Vvs
set aQs=$41303437
call UnitAddAbility(qQs,aQs)
set w[Nvs]=$41303437
endif
if Cvs==$41304143 then
set nQs=Vvs
set dQs=w[Nvs]
call UnitRemoveAbility(nQs,dQs)
set fQs=Vvs
set RQs=$41303431
call UnitAddAbility(fQs,RQs)
set w[Nvs]=$41303431
endif
if Cvs==$41304154 then
set TQs=Vvs
set YQs=w[Nvs]
call UnitRemoveAbility(TQs,YQs)
set GQs=Vvs
set gQs=$53303031
call UnitAddAbility(GQs,gQs)
set w[Nvs]=$53303031
endif
if Cvs==$41304A59 then
set hQs=Vvs
set FQs=w[Nvs]
call UnitRemoveAbility(hQs,FQs)
set kQs=Vvs
set jQs=$41304A58
call UnitAddAbility(kQs,jQs)
set w[Nvs]=$41304A58
endif
if Cvs==$41304152 then
set xQs=Vvs
set vQs=w[Nvs]
call UnitRemoveAbility(xQs,vQs)
set mQs=Vvs
set QQs=$41303434
call UnitAddAbility(mQs,QQs)
set w[Nvs]=$41303434
endif
if Cvs==$41304155 then
set WQs=Vvs
set EQs=w[Nvs]
call UnitRemoveAbility(WQs,EQs)
set ZQs=Vvs
set UQs=$41303435
call UnitAddAbility(ZQs,UQs)
set w[Nvs]=$41303435
endif
if Cvs==$41304159 then
set IQs=Vvs
set PQs=w[Nvs]
call UnitRemoveAbility(IQs,PQs)
set AQs=Vvs
set DQs=$41304230
call UnitAddAbility(AQs,DQs)
set w[Nvs]=$41304230
endif
if Cvs==$41313845 then
set HQs=Vvs
set JQs=w[Nvs]
call UnitRemoveAbility(HQs,JQs)
set KQs=Vvs
set LQs=$41313846
call UnitAddAbility(KQs,LQs)
set w[Nvs]=$41313846
endif
if Cvs==$41323131 then
set XQs=Vvs
set CQs=w[Nvs]
call UnitRemoveAbility(XQs,CQs)
set VQs=Vvs
set BQs=$41323136
call UnitAddAbility(VQs,BQs)
set w[Nvs]=$41323136
set NQs=c[Nvs]
set MQs=$41323137
call UnitAddAbility(NQs,MQs)
endif
if Cvs==$41323134 then
set wWs=Vvs
set uWs=w[Nvs]
call UnitRemoveAbility(wWs,uWs)
set rWs=Vvs
set sWs=$41323138
call UnitAddAbility(rWs,sWs)
set w[Nvs]=$41323138
set tWs=c[Nvs]
set iWs=$41323139
call UnitAddAbility(tWs,iWs)
endif
if Cvs==$41323135 then
set SWs=Vvs
set cWs=w[Nvs]
call UnitRemoveAbility(SWs,cWs)
set oWs=Vvs
set OWs=$41323142
call UnitAddAbility(oWs,OWs)
set w[Nvs]=$41323142
set lWs=c[Nvs]
set bWs=$41323141
call UnitAddAbility(lWs,bWs)
call SetPlayerTechResearched(Bvs,$52303836,1)
endif
if Cvs==$41304156 then
set yWs=Vvs
set pWs=w[Nvs]
call UnitRemoveAbility(yWs,pWs)
set eWs=Vvs
set qWs=$41303755
call UnitAddAbility(eWs,qWs)
set w[Nvs]=$41303755
endif
if Cvs==$41304158 then
set aWs=Vvs
set nWs=w[Nvs]
call UnitRemoveAbility(aWs,nWs)
set dWs=Vvs
set fWs=$53303035
call UnitAddAbility(dWs,fWs)
set w[Nvs]=$53303035
endif
set Mvs=null
set wms=null
set rms=null
set tms=null
set Sms=null
set oms=null
set lms=null
set yms=null
set ems=null
set ams=null
set dms=null
set Rms=null
set Yms=null
set gms=null
set Fms=null
set jms=null
set vms=null
set Qms=null
set Ems=null
set Ums=null
set Pms=null
set Dms=null
set Jms=null
set Lms=null
set Cms=null
set Bms=null
set Mms=null
set uQs=null
set sQs=null
set iQs=null
set cQs=null
set OQs=null
set bQs=null
set pQs=null
set qQs=null
set nQs=null
set fQs=null
set TQs=null
set GQs=null
set hQs=null
set kQs=null
set xQs=null
set mQs=null
set WQs=null
set ZQs=null
set IQs=null
set AQs=null
set HQs=null
set KQs=null
set XQs=null
set VQs=null
set NQs=null
set wWs=null
set rWs=null
set tWs=null
set SWs=null
set oWs=null
set lWs=null
set yWs=null
set eWs=null
set aWs=null
set dWs=null
endfunction
function gku takes nothing returns nothing
call RWs(GetSpellAbilityId(),GetSpellAbilityUnit(),GetOwningPlayer(GetSpellAbilityUnit()))
endfunction
function P2l takes unit D1l,player H1l,unit J1l returns nothing
local player C1l=H1l
local integer K1l=gw[GetPlayerId(C1l)]
local unit V1l=J1l
local integer L1l
local unit X1l
local unit B1l
local unit N1l
local unit M1l
local unit w4l
local unit u4l
local integer r4l
local player s4l
local unit t4l
local string i4l
local real S4l
local player c4l
local unit o4l
local unit O4l
local unit l4l
local unit b4l
local integer y4l
local unit p4l
local integer e4l
local integer q4l
local unit a4l
local integer n4l
local unit d4l
local integer f4l
local integer R4l
local unit T4l
local integer Y4l
local unit G4l
local integer g4l
local integer h4l
local unit F4l
local integer k4l
local unit j4l
local integer x4l
local integer v4l
local unit m4l
local integer Q4l
local unit W4l
local unit E4l
local unit Z4l
local unit U4l
local unit I4l
local string P4l
local real A4l
local player D4l
local unit H4l
local unit J4l
local unit K4l
local unit L4l
local unit X4l
local unit C4l
local unit V4l
local real B4l
local unit N4l
local integer M4l
local unit w2l
local string u2l
local widget r2l
local unit s2l
local integer t2l
local unit i2l
local integer S2l
local integer c2l
local unit o2l
local integer O2l
local unit l2l
local integer b2l
local integer y2l
local unit p2l
local integer e2l
local unit q2l
local integer a2l
local integer n2l
local unit d2l
local integer f2l
local unit R2l
local integer T2l
local integer Y2l
local boolean G2l
local boolean g2l
local boolean h2l
local boolean F2l
local boolean k2l
local string j2l
local string x2l
local boolean v2l
local boolean m2l
local boolean Q2l
local boolean W2l
local string E2l
local string Z2l
local player U2l
local real I2l
if GetUnitTypeId(V1l)!=$6830324C then
set B1l=J1l
set G2l=GetUnitTypeId(B1l)!=$6830324D
else
set G2l=false
endif
if G2l then
set N1l=J1l
set g2l=GetUnitTypeId(N1l)!=$68303254
else
set g2l=false
endif
if g2l then
set M1l=J1l
set h2l=GetUnitTypeId(M1l)!=$78303332
else
set h2l=false
endif
if h2l then
set w4l=J1l
set F2l=GetUnitTypeId(w4l)!=$6830324F
else
set F2l=false
endif
if F2l then
set u4l=J1l
set r4l=$494D306F
set k2l=RTS(u4l,r4l)!=null==false
else
set k2l=false
endif
if k2l then
set t4l=J1l
set s4l=GetOwningPlayer(t4l)
set L1l=GetPlayerId(s4l)-4
set o4l=D1l
set c4l=GetOwningPlayer(o4l)
set x2l=Aw[GetPlayerId(c4l)]
set O4l=D1l
set j2l=GetPlayerName(GetOwningPlayer(O4l))+"|r"+" used |cff008000Curse of Weakness|r on "+Aw[L1l]
set l4l=J1l
set i4l=x2l+j2l+GetUnitName(l4l)+"|r"
set S4l=10.
call DisplayTimedTextToPlayer(IY,0.,0.,S4l,i4l)
set b4l=J1l
set y4l=$41323451
call UnitAddAbility(b4l,y4l)
set p4l=J1l
set e4l=$41323451
set q4l=K1l
call SetUnitAbilityLevel(p4l,e4l,q4l)
set a4l=J1l
set n4l=$41323453
call UnitAddAbility(a4l,n4l)
set d4l=J1l
set f4l=$41323453
set R4l=K1l
call SetUnitAbilityLevel(d4l,f4l,R4l)
set T4l=J1l
set Y4l=$41323454
call UnitAddAbility(T4l,Y4l)
set G4l=J1l
set g4l=$41323454
set h4l=K1l
call SetUnitAbilityLevel(G4l,g4l,h4l)
set F4l=J1l
set k4l=$41323455
call UnitAddAbility(F4l,k4l)
set j4l=J1l
set x4l=$41323455
set v4l=K1l
call SetUnitAbilityLevel(j4l,x4l,v4l)
if K1l>2 then
set m4l=J1l
set Q4l=$41323456
call UnitAddAbility(m4l,Q4l)
endif
endif
set W4l=J1l
if GetUnitTypeId(W4l)==$6830324C then
set v2l=true
else
set E4l=J1l
set v2l=GetUnitTypeId(E4l)==$6830324D
endif
if v2l then
set m2l=true
else
set Z4l=J1l
set m2l=GetUnitTypeId(Z4l)==$68303254
endif
if m2l then
set Q2l=true
else
set U4l=J1l
set Q2l=GetUnitTypeId(U4l)==$78303332
endif
if Q2l then
set W2l=true
else
set I4l=J1l
set W2l=GetUnitTypeId(I4l)==$6830324F
endif
if W2l then
if K1l>2 then
set H4l=D1l
set D4l=GetOwningPlayer(H4l)
set Z2l=Aw[GetPlayerId(D4l)]
set J4l=D1l
set E2l=GetPlayerName(GetOwningPlayer(J4l))+"|r"+" used |cff008000Curse of Weakness|r on "+"|cff800080"
set K4l=J1l
set P4l=Z2l+E2l+GetUnitName(K4l)+"|r"
set A4l=10.
call DisplayTimedTextToPlayer(IY,0.,0.,A4l,P4l)
set L4l=D1l
set U2l=GetOwningPlayer(L4l)
set X4l=J1l
set I2l=GetUnitX(X4l)
set C4l=J1l
set X1l=CreateUnit(U2l,$75303030,I2l,GetUnitY(C4l),0.)
set V4l=X1l
set B4l=3.
call UnitApplyTimedLife(V4l,$42544C46,B4l)
set N4l=X1l
set M4l=$4132354B
call UnitAddAbility(N4l,M4l)
set w2l=X1l
set u2l="soulburn"
set r2l=J1l
call IssueTargetOrder(w2l,u2l,r2l)
set s2l=J1l
set t2l=$41323451
call UnitAddAbility(s2l,t2l)
set i2l=J1l
set S2l=$41323451
set c2l=K1l
call SetUnitAbilityLevel(i2l,S2l,c2l)
set o2l=J1l
set O2l=$41323453
call UnitAddAbility(o2l,O2l)
set l2l=J1l
set b2l=$41323453
set y2l=K1l
call SetUnitAbilityLevel(l2l,b2l,y2l)
set p2l=J1l
set e2l=$41323454
call UnitAddAbility(p2l,e2l)
set q2l=J1l
set a2l=$41323454
set n2l=K1l
call SetUnitAbilityLevel(q2l,a2l,n2l)
set d2l=J1l
set f2l=$41323455
call UnitAddAbility(d2l,f2l)
set R2l=J1l
set T2l=$41323455
set Y2l=K1l
call SetUnitAbilityLevel(R2l,T2l,Y2l)
endif
endif
set X1l=null
set C1l=null
set V1l=null
set B1l=null
set N1l=null
set M1l=null
set w4l=null
set u4l=null
set s4l=null
set t4l=null
set c4l=null
set o4l=null
set O4l=null
set l4l=null
set b4l=null
set p4l=null
set a4l=null
set d4l=null
set T4l=null
set G4l=null
set F4l=null
set j4l=null
set m4l=null
set W4l=null
set E4l=null
set Z4l=null
set U4l=null
set I4l=null
set D4l=null
set H4l=null
set J4l=null
set K4l=null
set L4l=null
set X4l=null
set C4l=null
set V4l=null
set N4l=null
set w2l=null
set r2l=null
set s2l=null
set i2l=null
set o2l=null
set l2l=null
set p2l=null
set q2l=null
set d2l=null
set R2l=null
set U2l=null
endfunction
function gmw takes nothing returns nothing
local integer emw=GetSpellAbilityId()
local unit qmw
local unit amw
local integer nmw
local player dmw
local unit fmw
local unit Rmw
local integer Tmw
local unit Ymw
local integer Gmw
if emw==$41323452 then
set qmw=GetSpellAbilityUnit()
set amw=GetSpellTargetUnit()
set fmw=qmw
set dmw=GetOwningPlayer(fmw)
set nmw=GetPlayerId(dmw)
if gw[nmw]!=5 then
set gw[nmw]=gw[nmw]+1
set Rmw=qmw
set Tmw=$41323452
if GetUnitAbilityLevel(Rmw,Tmw)!=5 then
set Ymw=qmw
set Gmw=$41323452
call IncUnitAbilityLevel(Ymw,Gmw)
endif
endif
call P2l(qmw,Player(nmw),amw)
endif
set qmw=null
set amw=null
set dmw=null
set fmw=null
set Rmw=null
set Ymw=null
endfunction
function gBe takes string fBe returns boolean
local string RBe
local string TBe
local real YBe
local real GBe
set aW[qW]=fBe
set qW=qW+1
set RBe="when calling alloc_Comparator_LinkedList in LinkedList, line 533"
set aW[qW]=RBe
set qW=qW+1
if CF==0 then
if VF<32768 then
set VF=VF+1
else
call L8c("Out of memory: Could not create Comparator_LinkedList.","when calling error in LinkedList, line 533")
endif
else
set CF=CF-1
endif
set qW=qW-1
set TBe="when calling alloc_Comparator_LinkedList in LinkedList, line 537"
set aW[qW]=TBe
set qW=qW+1
if CF==0 then
if VF<32768 then
set VF=VF+1
else
call L8c("Out of memory: Could not create Comparator_LinkedList.","when calling error in LinkedList, line 537")
endif
else
set CF=CF-1
endif
set qW=qW-1
set YBe=0.
set GBe=YBe*1000.
call R2I(GBe)
set qW=qW-1
return true
endfunction
function gnS takes nothing returns boolean
set qW=0
return gBe("via function reference LinkedList, line 1")
endfunction
function gtO takes nothing returns boolean
return GetUnitTypeId(GetTriggerUnit())==$6E656630
endfunction
function gwt takes nothing returns boolean
return true
endfunction
function gxS takes nothing returns boolean
return true
endfunction
function gxb takes nothing returns boolean
return true
endfunction
function gxi takes nothing returns boolean
return true
endfunction
function h2S takes nothing returns boolean
return true
endfunction
function h3w takes nothing returns boolean
local unit n3w=GetFilterUnit()
local unit d3w=n3w
local unit f3w
local unittype R3w
local unit T3w
local player Y3w
local boolean G3w
local boolean g3w
if UnitAlive(d3w)==true then
set f3w=n3w
set R3w=UNIT_TYPE_STRUCTURE
set G3w=IsUnitType(f3w,R3w)==false
else
set G3w=false
endif
if G3w then
set T3w=n3w
set Y3w=ag
set g3w=IsUnitEnemy(T3w,Y3w)
else
set g3w=false
endif
set n3w=null
set d3w=null
set f3w=null
set R3w=null
set T3w=null
set Y3w=null
return g3w
endfunction
function h4r takes nothing returns boolean
return true
endfunction
function B9u takes string Q9u returns nothing
local unit W9u
local integer E9u
local unit Z9u
local unit U9u
local unit I9u
local integer P9u
local unit A9u
local string D9u
local widget H9u
local string J9u
local integer K9u
local real L9u
local integer X9u
local string C9u
local boolean V9u
set aW[qW]=Q9u
set qW=qW+1
set W9u=GetKillingUnit()
set Z9u=W9u
if GetUnitTypeId(Z9u)==$68303145 then
set V9u=true
else
set U9u=W9u
set V9u=GetUnitTypeId(U9u)==$6F737779
endif
if V9u then
set I9u=W9u
set P9u=$41323555
call UnitAddAbility(I9u,P9u)
set A9u=W9u
set D9u="bloodlust"
set H9u=W9u
call IssueTargetOrder(A9u,D9u,H9u)
set J9u="when calling alloc_CallbackSingle_doAfter_Pegasus in Pegasus, line 119"
set aW[qW]=J9u
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set K9u=fF
set RF[K9u]=746
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Pegasus.","when calling error in Pegasus, line 119")
set K9u=0
endif
else
set dF=dF-1
set K9u=nF[dF]
set RF[K9u]=746
endif
set qW=qW-1
set E9u=K9u
set Km[E9u]=W9u
set L9u=2.
set X9u=E9u
set C9u="when calling doAfter in Pegasus, line 119"
set aW[qW]=C9u
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),L9u,X9u,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set W9u=null
set Z9u=null
set U9u=null
set I9u=null
set A9u=null
set H9u=null
endfunction
function h5S takes nothing returns nothing
set qW=0
call B9u("via function reference Pegasus, line 125")
endfunction
function h6S takes nothing returns nothing
local player y6S
local integer p6S
local unit e6S
local player q6S
local integer a6S
local player n6S
local playerstate d6S
local integer f6S
local player R6S
local playerstate T6S
local player Y6S
local player G6S
local playerstate g6S
if KT!=null then
set e6S=KT
set y6S=GetOwningPlayer(e6S)
set q6S=y6S
set a6S=IT
set n6S=q6S
set d6S=PLAYER_STATE_RESOURCE_GOLD
set f6S=a6S
set G6S=n6S
set g6S=d6S
set R6S=n6S
set T6S=d6S
call SetPlayerState(G6S,g6S,GetPlayerState(R6S,T6S)+f6S)
call UuS(KT,IT)
set Y6S=y6S
set p6S=GetPlayerId(Y6S)
set hr[p6S]=hr[p6S]+IT
set Fr[p6S]=Fr[p6S]+IT
set Cr[p6S]=Cr[p6S]+IT
endif
set y6S=null
set e6S=null
set q6S=null
set n6S=null
set d6S=null
set R6S=null
set T6S=null
set Y6S=null
set G6S=null
set g6S=null
endfunction
function sjb takes unit tSb,string iSb returns nothing
local integer SSb
local player cSb
local integer oSb
local unit OSb
local unit lSb
local player bSb
local unit ySb
local integer pSb
local unit eSb
local boolean qSb
local unit aSb
local integer nSb
local unit dSb
local boolean fSb
local unit RSb
local integer TSb
local unit YSb
local boolean GSb
local unit gSb
local integer hSb
local unit FSb
local boolean kSb
local unit jSb
local integer xSb
local unit vSb
local boolean mSb
local unit QSb
local integer WSb
local unit ESb
local boolean ZSb
local unit USb
local integer ISb
local unit PSb
local boolean ASb
local unit DSb
local integer HSb
local unit JSb
local boolean KSb
local unit LSb
local integer XSb
local unit CSb
local boolean VSb
local unit BSb
local integer NSb
local unit MSb
local boolean wcb
local unit ucb
local integer rcb
local unit scb
local boolean tcb
local unit icb
local integer Scb
local unit ccb
local boolean ocb
local unit Ocb
local integer lcb
local unit bcb
local boolean ycb
local unit pcb
local integer ecb
local unit qcb
local boolean acb
local unit ncb
local integer dcb
local unit fcb
local boolean Rcb
local unit Tcb
local integer Ycb
local unit Gcb
local boolean gcb
local unit hcb
local integer Fcb
local unit kcb
local boolean jcb
local unit xcb
local integer vcb
local unit mcb
local boolean Qcb
local unit Wcb
local integer Ecb
local unit Zcb
local boolean Ucb
local unit Icb
local integer Pcb
local unit Acb
local boolean Dcb
local unit Hcb
local integer Jcb
local unit Kcb
local boolean Lcb
local unit Xcb
local integer Ccb
local unit Vcb
local integer Bcb
local unit Ncb
local integer Mcb
local unit wob
local integer uob
local unit rob
local integer sob
local unit tob
local integer iob
local unit Sob
local integer cob
local unit oob
local integer Oob
local unit lob
local integer bob
local unit yob
local integer pob
local unit eob
local integer qob
local unit aob
local integer nob
local unit dob
local integer fob
local unit Rob
local integer Tob
local unit Yob
local integer Gob
local unit gob
local integer hob
local unit Fob
local integer kob
local unit job
local integer xob
local unit vob
local integer mob
local unit Qob
local integer Wob
local unit Eob
local integer Zob
local unit Uob
local integer Iob
local unit Pob
local integer Aob
local unit Dob
local integer Hob
local unit Job
local integer Kob
local unit Lob
local integer Xob
local unit Cob
local integer Vob
local unit Bob
local integer Nob
local unit Mob
local integer wOb
local unit uOb
local integer rOb
local unit sOb
local integer tOb
local unit iOb
local integer SOb
local unit cOb
local integer oOb
local unit OOb
local integer lOb
local unit bOb
local integer yOb
local unit pOb
local integer eOb
local unit qOb
local integer aOb
local unit nOb
local integer dOb
local unit fOb
local integer ROb
local unit TOb
local integer YOb
local unit GOb
local integer gOb
local unit hOb
local integer FOb
local unit kOb
local integer jOb
local unit xOb
local integer vOb
local unit mOb
local integer QOb
local unit WOb
local integer EOb
local unit ZOb
local integer UOb
local unit IOb
local integer POb
local unit AOb
local integer DOb
local unit HOb
local integer JOb
local unit KOb
local integer LOb
local unit XOb
local integer COb
local unit VOb
local integer BOb
local unit NOb
local integer MOb
local unit wlb
local integer ulb
local unit rlb
local integer slb
local unit tlb
local integer ilb
local unit Slb
local integer clb
local unit olb
local integer Olb
local unit llb
local integer blb
local unit ylb
local integer plb
local unit elb
local integer qlb
local unit alb
local integer nlb
local unit dlb
local integer flb
local unit Rlb
local integer Tlb
local unit Ylb
local integer Glb
local unit glb
local integer hlb
local unit Flb
local integer klb
local unit jlb
local integer xlb
local unit vlb
local integer mlb
local unit Qlb
local integer Wlb
local unit Elb
local integer Zlb
local unit Ulb
local integer Ilb
local unit Plb
local integer Alb
local unit Dlb
local integer Hlb
local unit Jlb
local integer Klb
local unit Llb
local integer Xlb
local unit Clb
local integer Vlb
local unit Blb
local integer Nlb
local unit Mlb
local integer wbb
local unit ubb
local integer rbb
local unit sbb
local integer tbb
local unit ibb
local integer Sbb
local unit cbb
local integer obb
local unit Obb
local integer lbb
local unit bbb
local integer ybb
local unit pbb
local integer ebb
local unit qbb
local integer abb
local unit nbb
local integer dbb
local unit fbb
local integer Rbb
local unit Tbb
local integer Ybb
local unit Gbb
local integer gbb
local unit hbb
local integer Fbb
local unit kbb
local integer jbb
local unit xbb
local integer vbb
local unit mbb
local integer Qbb
local unit Wbb
local integer Ebb
local unit Zbb
local integer Ubb
local unit Ibb
local integer Pbb
local unit Abb
local integer Dbb
local unit Hbb
local integer Jbb
local unit Kbb
local integer Lbb
local unit Xbb
local integer Cbb
local unit Vbb
local integer Bbb
local unit Nbb
local integer Mbb
local unit wyb
local integer uyb
local unit ryb
local integer syb
local unit tyb
local integer iyb
local unit Syb
local integer cyb
local unit oyb
local integer Oyb
local unit lyb
local integer byb
local unit yyb
local integer pyb
local unit eyb
local integer qyb
local unit ayb
local integer nyb
local unit dyb
local integer fyb
local unit Ryb
local integer Tyb
local unit Yyb
local integer Gyb
local unit gyb
local integer hyb
local unit Fyb
local integer kyb
local unit jyb
local integer xyb
local unit vyb
local integer myb
local unit Qyb
local integer Wyb
local unit Eyb
local integer Zyb
local unit Uyb
local integer Iyb
local unit Pyb
local integer Ayb
local unit Dyb
local integer Hyb
local unit Jyb
local integer Kyb
local unit Lyb
local integer Xyb
local unit Cyb
local integer Vyb
local unit Byb
local integer Nyb
local unit Myb
local integer wpb
local unit upb
local integer rpb
local unit spb
local integer tpb
local unit ipb
local integer Spb
local unit cpb
local integer opb
local unit Opb
local integer lpb
local unit bpb
local integer ypb
local unit ppb
local integer epb
local unit qpb
local integer apb
local unit npb
local integer dpb
local unit fpb
local integer Rpb
local unit Tpb
local integer Ypb
local unit Gpb
local integer gpb
local unit hpb
local integer Fpb
local unit kpb
local integer jpb
local unit xpb
local integer vpb
local unit mpb
local integer Qpb
local unit Wpb
local integer Epb
local unit Zpb
local integer Upb
local unit Ipb
local integer Ppb
local unit Apb
local integer Dpb
local unit Hpb
local integer Jpb
local unit Kpb
local integer Lpb
local unit Xpb
local integer Cpb
local unit Vpb
local integer Bpb
local unit Npb
local integer Mpb
local unit web
local integer ueb
local unit reb
local integer seb
local unit teb
local integer ieb
local unit Seb
local integer ceb
local unit oeb
local integer Oeb
local unit leb
local integer beb
local unit yeb
local integer peb
local unit eeb
local integer qeb
local unit aeb
local integer neb
local unit deb
local integer feb
local unit Reb
local integer Teb
local unit Yeb
local integer Geb
local unit geb
local integer heb
local unit Feb
local integer keb
local unit jeb
local integer xeb
local unit veb
local integer meb
local unit Qeb
local integer Web
local unit Eeb
local integer Zeb
local unit Ueb
local integer Ieb
local unit Peb
local integer Aeb
local unit Deb
local integer Heb
local unit Jeb
local integer Keb
local unit Leb
local integer Xeb
local unit Ceb
local integer Veb
local unit Beb
local integer Neb
local unit Meb
local integer wqb
local unit uqb
local integer rqb
local unit sqb
local integer tqb
local unit iqb
local integer Sqb
local unit cqb
local integer oqb
local unit Oqb
local integer lqb
local unit bqb
local integer yqb
local unit pqb
local integer eqb
local unit qqb
local integer aqb
local unit nqb
local integer dqb
local unit fqb
local integer Rqb
local unit Tqb
local integer Yqb
local unit Gqb
local integer gqb
local unit hqb
local integer Fqb
local unit kqb
local integer jqb
local unit xqb
local integer vqb
local unit mqb
local integer Qqb
local unit Wqb
local integer Eqb
local unit Zqb
local integer Uqb
local unit Iqb
local integer Pqb
local unit Aqb
local integer Dqb
local unit Hqb
local integer Jqb
local unit Kqb
local integer Lqb
local unit Xqb
local integer Cqb
local unit Vqb
local integer Bqb
local unit Nqb
local integer Mqb
local unit wab
local integer uab
local unit rab
local integer sab
local unit tab
local integer iab
local unit Sab
local integer cab
local unit oab
local integer Oab
local unit lab
local integer bab
local unit yab
local integer pab
local unit eab
local integer qab
local unit aab
local integer nab
local unit dab
local integer fab
local unit Rab
local integer Tab
local unit Yab
local integer Gab
local unit gab
local integer hab
local unit Fab
local integer kab
local unit jab
local integer xab
local unit vab
local integer mab
local unit Qab
local integer Wab
local unit Eab
local integer Zab
local unit Uab
local integer Iab
local unit Pab
local integer Aab
local unit Dab
local integer Hab
local unit Jab
local integer Kab
local unit Lab
local integer Xab
local unit Cab
local integer Vab
local unit Bab
local integer Nab
local unit Mab
local integer wnb
local unit unb
local integer rnb
local unit snb
local integer tnb
local unit inb
local integer Snb
local unit cnb
local integer onb
local unit Onb
local integer lnb
local unit bnb
local integer ynb
local unit pnb
local integer enb
local unit qnb
local integer anb
local unit nnb
local integer dnb
local unit fnb
local integer Rnb
local unit Tnb
local integer Ynb
local unit Gnb
local integer gnb
local unit hnb
local integer Fnb
local unit knb
local integer jnb
local unit xnb
local integer vnb
local unit mnb
local integer Qnb
local unit Wnb
local integer Enb
local unit Znb
local integer Unb
local unit Inb
local integer Pnb
local unit Anb
local integer Dnb
local unit Hnb
local integer Jnb
local unit Knb
local integer Lnb
local unit Xnb
local integer Cnb
local unit Vnb
local integer Bnb
local unit Nnb
local integer Mnb
local unit wdb
local integer udb
local unit rdb
local integer sdb
local unit tdb
local integer idb
local unit Sdb
local integer cdb
local unit odb
local integer Odb
local unit ldb
local integer bdb
local unit ydb
local integer pdb
local unit edb
local integer qdb
local unit adb
local integer ndb
local unit ddb
local integer fdb
local unit Rdb
local integer Tdb
local unit Ydb
local integer Gdb
local unit gdb
local integer hdb
local unit Fdb
local integer kdb
local unit jdb
local integer xdb
local unit vdb
local integer mdb
local unit Qdb
local integer Wdb
local unit Edb
local integer Zdb
local unit Udb
local integer Idb
local unit Pdb
local integer Adb
local unit Ddb
local integer Hdb
local unit Jdb
local integer Kdb
local unit Ldb
local integer Xdb
local unit Cdb
local integer Vdb
local unit Bdb
local integer Ndb
local unit Mdb
local integer wfb
local unit ufb
local integer rfb
local unit sfb
local integer tfb
local unit ifb
local integer Sfb
local unit cfb
local integer ofb
local unit Ofb
local integer lfb
local unit bfb
local integer yfb
local unit pfb
local integer efb
local unit qfb
local integer afb
local unit nfb
local integer dfb
local unit ffb
local integer Rfb
local unit Tfb
local integer Yfb
local unit Gfb
local integer gfb
local unit hfb
local integer Ffb
local unit kfb
local integer jfb
local unit xfb
local integer vfb
local unit mfb
local integer Qfb
local unit Wfb
local integer Efb
local unit Zfb
local integer Ufb
local unit Ifb
local integer Pfb
local unit Afb
local integer Dfb
local unit Hfb
local integer Jfb
local unit Kfb
local integer Lfb
local unit Xfb
local integer Cfb
local unit Vfb
local integer Bfb
local unit Nfb
local integer Mfb
local unit wRb
local integer uRb
local unit rRb
local integer sRb
local unit tRb
local integer iRb
local unit SRb
local integer cRb
local unit oRb
local integer ORb
local unit lRb
local integer bRb
local unit yRb
local integer pRb
local unit eRb
local integer qRb
local unit aRb
local integer nRb
local unit dRb
local integer fRb
local unit RRb
local integer TRb
local unit YRb
local integer GRb
local unit gRb
local integer hRb
local unit FRb
local integer kRb
local unit jRb
local integer xRb
local unit vRb
local integer mRb
local unit QRb
local integer WRb
local unit ERb
local integer ZRb
local unit URb
local integer IRb
local unit PRb
local integer ARb
local unit DRb
local integer HRb
local unit JRb
local integer KRb
local unit LRb
local integer XRb
local unit CRb
local integer VRb
local unit BRb
local integer NRb
local unit MRb
local integer wTb
local unit uTb
local integer rTb
local unit sTb
local integer tTb
local unit iTb
local integer STb
local unit cTb
local integer oTb
local unit OTb
local integer lTb
local unit bTb
local integer yTb
local unit pTb
local integer eTb
local unit qTb
local integer aTb
local unit nTb
local integer dTb
local unit fTb
local integer RTb
local unit TTb
local integer YTb
local unit GTb
local integer gTb
local unit hTb
local integer FTb
local unit kTb
local integer jTb
local unit xTb
local integer vTb
local unit mTb
local integer QTb
local unit WTb
local integer ETb
local unit ZTb
local integer UTb
local unit ITb
local integer PTb
local unit ATb
local integer DTb
local unit HTb
local integer JTb
local unit KTb
local integer LTb
local unit XTb
local integer CTb
local unit VTb
local integer BTb
local unit NTb
local integer MTb
local unit wYb
local integer uYb
local unit rYb
local integer sYb
local unit tYb
local integer iYb
local unit SYb
local integer cYb
local unit oYb
local integer OYb
local unit lYb
local integer bYb
local unit yYb
local integer pYb
local unit eYb
local integer qYb
local unit aYb
local integer nYb
local unit dYb
local integer fYb
local unit RYb
local integer TYb
local unit YYb
local integer GYb
local unit gYb
local integer hYb
local unit FYb
local integer kYb
local unit jYb
local integer xYb
local unit vYb
local integer mYb
local unit QYb
local integer WYb
local unit EYb
local integer ZYb
local unit UYb
local integer IYb
local unit PYb
local integer AYb
local unit DYb
local integer HYb
local unit JYb
local integer KYb
local unit LYb
local integer XYb
local unit CYb
local integer VYb
local unit BYb
local integer NYb
local unit MYb
local integer wGb
local unit uGb
local integer rGb
local unit sGb
local integer tGb
local unit iGb
local integer SGb
local unit cGb
local integer oGb
local unit OGb
local integer lGb
local unit bGb
local integer yGb
local unit pGb
local integer eGb
local unit qGb
local integer aGb
local unit nGb
local integer dGb
local unit fGb
local integer RGb
local unit TGb
local integer YGb
local unit GGb
local integer gGb
local unit hGb
local integer FGb
local unit kGb
local integer jGb
local unit xGb
local integer vGb
local unit mGb
local integer QGb
local unit WGb
local integer EGb
local unit ZGb
local integer UGb
local unit IGb
local integer PGb
local unit AGb
local integer DGb
local unit HGb
local integer JGb
local unit KGb
local integer LGb
local unit XGb
local integer CGb
local unit VGb
local integer BGb
local unit NGb
local integer MGb
local unit wgb
local integer ugb
local unit rgb
local integer sgb
local unit tgb
local integer igb
local unit Sgb
local integer cgb
local unit ogb
local integer Ogb
local unit lgb
local integer bgb
local unit ygb
local integer pgb
local unit egb
local integer qgb
local unit agb
local integer ngb
local unit dgb
local integer fgb
local unit Rgb
local integer Tgb
local unit Ygb
local integer Ggb
local unit ggb
local integer hgb
local unit Fgb
local integer kgb
local unit jgb
local integer xgb
local unit vgb
local integer mgb
local unit Qgb
local integer Wgb
local unit Egb
local integer Zgb
local unit Ugb
local integer Igb
local unit Pgb
local integer Agb
local unit Dgb
local integer Hgb
local unit Jgb
local integer Kgb
local unit Lgb
local integer Xgb
local unit Cgb
local integer Vgb
local unit Bgb
local integer Ngb
local unit Mgb
local integer whb
local unit uhb
local integer rhb
local unit shb
local integer thb
local unit ihb
local integer Shb
local unit chb
local integer ohb
local unit Ohb
local integer lhb
local unit bhb
local integer yhb
local unit phb
local integer ehb
local unit qhb
local integer ahb
local unit nhb
local integer dhb
local unit fhb
local integer Rhb
local unit Thb
local integer Yhb
local unit Ghb
local integer ghb
local unit hhb
local integer Fhb
local unit khb
local integer jhb
local unit xhb
local integer vhb
local unit mhb
local integer Qhb
local unit Whb
local integer Ehb
local unit Zhb
local integer Uhb
local unit Ihb
local integer Phb
local unit Ahb
local integer Dhb
local unit Hhb
local integer Jhb
local unit Khb
local integer Lhb
local unit Xhb
local integer Chb
local unit Vhb
local integer Bhb
local unit Nhb
local integer Mhb
local unit wFb
local integer uFb
local unit rFb
local integer sFb
local unit tFb
local integer iFb
local unit SFb
local integer cFb
local unit oFb
local integer OFb
local unit lFb
local integer bFb
local unit yFb
local integer pFb
local unit eFb
local integer qFb
local unit aFb
local integer nFb
local unit dFb
local integer fFb
local unit RFb
local integer TFb
local unit YFb
local integer GFb
local unit gFb
local integer hFb
local unit FFb
local integer kFb
local unit jFb
local integer xFb
local unit vFb
local integer mFb
local unit QFb
local integer WFb
local unit EFb
local integer ZFb
local unit UFb
local integer IFb
local unit PFb
local integer AFb
local unit DFb
local integer HFb
local unit JFb
local integer KFb
local unit LFb
local integer XFb
local unit CFb
local integer VFb
local unit BFb
local integer NFb
local unit MFb
local integer wkb
local unit ukb
local integer rkb
local unit skb
local integer tkb
local unit ikb
local integer Skb
local unit ckb
local integer okb
local unit Okb
local integer lkb
local unit bkb
local integer ykb
local unit pkb
local integer ekb
local unit qkb
local unit akb
local unit nkb
local unit dkb
local unit fkb
local unit Rkb
local unit Tkb
local unit Ykb
local unit Gkb
local unit gkb
local unit hkb
local unit Fkb
local unit kkb
local unit jkb
local unit xkb
local unit vkb
local unit mkb
local unit Qkb
local unit Wkb
local unit Ekb
local unit Zkb
local boolean Ukb
local boolean Ikb
local boolean Pkb
local boolean Akb
local boolean Dkb
local boolean Hkb
local boolean Jkb
local boolean Kkb
local boolean Lkb
local boolean Xkb
local boolean Ckb
local boolean Vkb
local boolean Bkb
local boolean Nkb
local boolean Mkb
local boolean wjb
local boolean ujb
local boolean rjb
set aW[qW]=iSb
set qW=qW+1
set OSb=tSb
set SSb=GetUnitTypeId(OSb)
set lSb=tSb
set cSb=GetOwningPlayer(lSb)
set bSb=cSb
set oSb=GetPlayerId(bSb)-4
if SSb==r[oSb] then
set Er[oSb]=GetHeroLevel(tSb)
if Er[oSb]>=4 and Er[oSb]<8 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==0 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 70")
endif
endif
if Er[oSb]>=8 and Er[oSb]<12 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==1 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 74")
endif
endif
if Er[oSb]>=12 and Er[oSb]<16 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==2 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 78")
endif
endif
if Er[oSb]>=16 and Er[oSb]<20 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==3 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 82")
endif
endif
if Er[oSb]>=20 and Er[oSb]<24 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==4 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 86")
endif
endif
if Er[oSb]>=24 and Er[oSb]<28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==5 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 90")
endif
endif
if Er[oSb]==28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and EG[oSb]==6 then
set EG[oSb]=EG[oSb]+1
call j5y(q[oSb],"when calling addRandomItem in SelectSkill, line 94")
endif
endif
endif
if SSb==s[oSb] then
set Zr[oSb]=GetHeroLevel(tSb)
if Zr[oSb]>=4 and Zr[oSb]<8 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==0 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 100")
endif
endif
if Zr[oSb]>=8 and Zr[oSb]<12 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==1 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 104")
endif
endif
if Zr[oSb]>=12 and Zr[oSb]<16 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==2 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 108")
endif
endif
if Zr[oSb]>=16 and Zr[oSb]<20 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==3 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 112")
endif
endif
if Zr[oSb]>=20 and Zr[oSb]<24 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==4 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 116")
endif
endif
if Zr[oSb]>=24 and Zr[oSb]<28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==5 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 120")
endif
endif
if Zr[oSb]==28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and ZG[oSb]==6 then
set ZG[oSb]=ZG[oSb]+1
call j5y(a[oSb],"when calling addRandomItem in SelectSkill, line 124")
endif
endif
endif
if SSb==t[oSb] then
set Ur[oSb]=GetHeroLevel(tSb)
if Ur[oSb]>=4 and Ur[oSb]<8 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==0 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 130")
endif
endif
if Ur[oSb]>=8 and Ur[oSb]<12 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==1 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 134")
endif
endif
if Ur[oSb]>=12 and Ur[oSb]<16 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==2 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 138")
endif
endif
if Ur[oSb]>=16 and Ur[oSb]<20 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==3 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 142")
endif
endif
if Ur[oSb]>=20 and Ur[oSb]<24 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==4 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 146")
endif
endif
if Ur[oSb]>=24 and Ur[oSb]<28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==5 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 150")
endif
endif
if Ur[oSb]==28 then
if GetPlayerTechCount(cSb,$52303259,true)>0 and UG[oSb]==6 then
set UG[oSb]=UG[oSb]+1
call j5y(n[oSb],"when calling addRandomItem in SelectSkill, line 154")
endif
endif
endif
if SSb==i[oSb] then
set Ir[oSb]=GetHeroLevel(tSb)
if Yw[oSb]==0 and Ir[oSb]>=4 and Ir[oSb]<8 then
set Yw[oSb]=Yw[oSb]+1
set ySb=tSb
set pSb=2
set qkb=ySb
set eSb=ySb
set qSb=false
call SetHeroStr(qkb,GetHeroStr(eSb,qSb)+pSb,true)
set aSb=tSb
set nSb=2
set akb=aSb
set dSb=aSb
set fSb=false
call SetHeroAgi(akb,GetHeroAgi(dSb,fSb)+nSb,true)
set RSb=tSb
set TSb=2
set nkb=RSb
set YSb=RSb
set GSb=false
call SetHeroInt(nkb,GetHeroInt(YSb,GSb)+TSb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==0 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 164")
endif
endif
if Yw[oSb]==1 and Ir[oSb]>=8 and Ir[oSb]<12 then
set Yw[oSb]=Yw[oSb]+1
set gSb=tSb
set hSb=2
set dkb=gSb
set FSb=gSb
set kSb=false
call SetHeroStr(dkb,GetHeroStr(FSb,kSb)+hSb,true)
set jSb=tSb
set xSb=2
set fkb=jSb
set vSb=jSb
set mSb=false
call SetHeroAgi(fkb,GetHeroAgi(vSb,mSb)+xSb,true)
set QSb=tSb
set WSb=2
set Rkb=QSb
set ESb=QSb
set ZSb=false
call SetHeroInt(Rkb,GetHeroInt(ESb,ZSb)+WSb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==1 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 172")
endif
endif
if Yw[oSb]==2 and Ir[oSb]>=12 and Ir[oSb]<16 then
set Yw[oSb]=Yw[oSb]+1
set USb=tSb
set ISb=2
set Tkb=USb
set PSb=USb
set ASb=false
call SetHeroStr(Tkb,GetHeroStr(PSb,ASb)+ISb,true)
set DSb=tSb
set HSb=2
set Ykb=DSb
set JSb=DSb
set KSb=false
call SetHeroAgi(Ykb,GetHeroAgi(JSb,KSb)+HSb,true)
set LSb=tSb
set XSb=2
set Gkb=LSb
set CSb=LSb
set VSb=false
call SetHeroInt(Gkb,GetHeroInt(CSb,VSb)+XSb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==2 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 180")
endif
endif
if Yw[oSb]==3 and Ir[oSb]>=16 and Ir[oSb]<20 then
set Yw[oSb]=Yw[oSb]+1
set BSb=tSb
set NSb=2
set gkb=BSb
set MSb=BSb
set wcb=false
call SetHeroStr(gkb,GetHeroStr(MSb,wcb)+NSb,true)
set ucb=tSb
set rcb=2
set hkb=ucb
set scb=ucb
set tcb=false
call SetHeroAgi(hkb,GetHeroAgi(scb,tcb)+rcb,true)
set icb=tSb
set Scb=2
set Fkb=icb
set ccb=icb
set ocb=false
call SetHeroInt(Fkb,GetHeroInt(ccb,ocb)+Scb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==3 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 188")
endif
endif
if Yw[oSb]==4 and Ir[oSb]>=20 and Ir[oSb]<24 then
set Yw[oSb]=Yw[oSb]+1
set Ocb=tSb
set lcb=2
set kkb=Ocb
set bcb=Ocb
set ycb=false
call SetHeroStr(kkb,GetHeroStr(bcb,ycb)+lcb,true)
set pcb=tSb
set ecb=2
set jkb=pcb
set qcb=pcb
set acb=false
call SetHeroAgi(jkb,GetHeroAgi(qcb,acb)+ecb,true)
set ncb=tSb
set dcb=2
set xkb=ncb
set fcb=ncb
set Rcb=false
call SetHeroInt(xkb,GetHeroInt(fcb,Rcb)+dcb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==4 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 196")
endif
endif
if Yw[oSb]==5 and Ir[oSb]>=24 and Ir[oSb]<28 then
set Yw[oSb]=Yw[oSb]+1
set Tcb=tSb
set Ycb=2
set vkb=Tcb
set Gcb=Tcb
set gcb=false
call SetHeroStr(vkb,GetHeroStr(Gcb,gcb)+Ycb,true)
set hcb=tSb
set Fcb=2
set mkb=hcb
set kcb=hcb
set jcb=false
call SetHeroAgi(mkb,GetHeroAgi(kcb,jcb)+Fcb,true)
set xcb=tSb
set vcb=2
set Qkb=xcb
set mcb=xcb
set Qcb=false
call SetHeroInt(Qkb,GetHeroInt(mcb,Qcb)+vcb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==5 then
set IG[oSb]=IG[oSb]+1
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 204")
endif
endif
if Yw[oSb]==6 and Ir[oSb]==28 then
set Wcb=tSb
set Ecb=2
set Wkb=Wcb
set Zcb=Wcb
set Ucb=false
call SetHeroStr(Wkb,GetHeroStr(Zcb,Ucb)+Ecb,true)
set Icb=tSb
set Pcb=2
set Ekb=Icb
set Acb=Icb
set Dcb=false
call SetHeroAgi(Ekb,GetHeroAgi(Acb,Dcb)+Pcb,true)
set Hcb=tSb
set Jcb=2
set Zkb=Hcb
set Kcb=Hcb
set Lcb=false
call SetHeroInt(Zkb,GetHeroInt(Kcb,Lcb)+Jcb,true)
if GetPlayerTechCount(cSb,$52303259,true)>0 and IG[oSb]==6 then
call j5y(d[oSb],"when calling addRandomItem in SelectSkill, line 210")
endif
endif
endif
if SSb==$484D3062 then
set Xcb=tSb
set Ccb=$414D3338
call SelectHeroSkill(Xcb,Ccb)
set Vcb=tSb
set Bcb=$414D3361
call SelectHeroSkill(Vcb,Bcb)
set Ncb=tSb
set Mcb=$414D3362
call SelectHeroSkill(Ncb,Mcb)
set wob=tSb
set uob=$414D3363
call SelectHeroSkill(wob,uob)
endif
if SSb==$484D3039 then
set rob=tSb
set sob=$41303154
call SelectHeroSkill(rob,sob)
set tob=tSb
set iob=$41303446
call SelectHeroSkill(tob,iob)
set Sob=tSb
set cob=$414D3332
call SelectHeroSkill(Sob,cob)
set oob=tSb
set Oob=$414D3331
call SelectHeroSkill(oob,Oob)
endif
if SSb==$484D3061 then
set lob=tSb
set bob=$414D3333
call SelectHeroSkill(lob,bob)
set yob=tSb
set pob=$414D3335
call SelectHeroSkill(yob,pob)
set eob=tSb
set qob=$414D3337
call SelectHeroSkill(eob,qob)
set aob=tSb
set nob=$414D3334
call SelectHeroSkill(aob,nob)
endif
if SSb==$484D3063 then
set dob=tSb
set fob=$414D3364
call SelectHeroSkill(dob,fob)
set Rob=tSb
set Tob=$41303942
call SelectHeroSkill(Rob,Tob)
set Yob=tSb
set Gob=$414F7732
call SelectHeroSkill(Yob,Gob)
set gob=tSb
set hob=$414D3239
call SelectHeroSkill(gob,hob)
endif
if SSb==$484D3036 then
set Fob=tSb
set kob=$41303344
call SelectHeroSkill(Fob,kob)
set job=tSb
set xob=$41303252
call SelectHeroSkill(job,xob)
set vob=tSb
set mob=$414D3268
call SelectHeroSkill(vob,mob)
set Qob=tSb
set Wob=$41303330
call SelectHeroSkill(Qob,Wob)
endif
if SSb==$484D3037 then
set Eob=tSb
set Zob=$41304E35
call SelectHeroSkill(Eob,Zob)
set Uob=tSb
set Iob=$414D3269
call SelectHeroSkill(Uob,Iob)
set Pob=tSb
set Aob=$414D326C
call SelectHeroSkill(Pob,Aob)
set Dob=tSb
set Hob=$414D326A
call SelectHeroSkill(Dob,Hob)
endif
if SSb==$484D3034 then
set Job=tSb
set Kob=$41304748
call SelectHeroSkill(Job,Kob)
set Lob=tSb
set Xob=$414D3262
call SelectHeroSkill(Lob,Xob)
set Cob=tSb
set Vob=$41456576
call SelectHeroSkill(Cob,Vob)
set Bob=tSb
set Nob=$4133304D
call SelectHeroSkill(Bob,Nob)
endif
if SSb==$48303247 then
set Mob=tSb
set wOb=$414D3034
call SelectHeroSkill(Mob,wOb)
set uOb=tSb
set rOb=$414D3035
call SelectHeroSkill(uOb,rOb)
set sOb=tSb
set tOb=$41303938
call SelectHeroSkill(sOb,tOb)
set iOb=tSb
set SOb=$41303446
call SelectHeroSkill(iOb,SOb)
endif
if SSb==$48303248 then
set cOb=tSb
set oOb=$414D3674
call SelectHeroSkill(cOb,oOb)
set OOb=tSb
set lOb=$41303831
call SelectHeroSkill(OOb,lOb)
set bOb=tSb
set yOb=$41303442
call SelectHeroSkill(bOb,yOb)
set pOb=tSb
set eOb=$41305959
call SelectHeroSkill(pOb,eOb)
endif
if SSb==$48303249 then
set qOb=tSb
set aOb=$41303955
call SelectHeroSkill(qOb,aOb)
set nOb=tSb
set dOb=$414D3677
call SelectHeroSkill(nOb,dOb)
set fOb=tSb
set ROb=$41486164
call SelectHeroSkill(fOb,ROb)
set TOb=tSb
set YOb=$414D3678
call SelectHeroSkill(TOb,YOb)
endif
if SSb==$4830324A then
set GOb=tSb
set gOb=$41303943
call SelectHeroSkill(GOb,gOb)
set hOb=tSb
set FOb=$414D3679
call SelectHeroSkill(hOb,FOb)
set kOb=tSb
set jOb=$41303335
call SelectHeroSkill(kOb,jOb)
set xOb=tSb
set vOb=$414D3239
call SelectHeroSkill(xOb,vOb)
endif
if SSb==$4830324B then
set mOb=tSb
set QOb=$414D3138
call SelectHeroSkill(mOb,QOb)
set WOb=tSb
set EOb=$41305850
call SelectHeroSkill(WOb,EOb)
set ZOb=tSb
set UOb=$41305851
call SelectHeroSkill(ZOb,UOb)
set IOb=tSb
set POb=$414D3139
call SelectHeroSkill(IOb,POb)
endif
if SSb==$484D306A then
set AOb=tSb
set DOb=$414D3762
call SelectHeroSkill(AOb,DOb)
set HOb=tSb
set JOb=$414D3763
call SelectHeroSkill(HOb,JOb)
set KOb=tSb
set LOb=$414D3764
call SelectHeroSkill(KOb,LOb)
set XOb=tSb
set COb=$414D3765
call SelectHeroSkill(XOb,COb)
endif
if SSb==$484D306B then
set VOb=tSb
set BOb=$41303444
call SelectHeroSkill(VOb,BOb)
set NOb=tSb
set MOb=$41303446
call SelectHeroSkill(NOb,MOb)
set wlb=tSb
set ulb=$41303459
call SelectHeroSkill(wlb,ulb)
set rlb=tSb
set slb=$414D3769
call SelectHeroSkill(rlb,slb)
endif
if SSb==$484D3068 then
set tlb=tSb
set ilb=$41305551
call SelectHeroSkill(tlb,ilb)
set Slb=tSb
set clb=$414F6877
call SelectHeroSkill(Slb,clb)
set olb=tSb
set Olb=$414F6165
call SelectHeroSkill(olb,Olb)
set llb=tSb
set blb=$41487265
call SelectHeroSkill(llb,blb)
endif
if SSb==$484D3069 then
set ylb=tSb
set plb=$414F7732
call SelectHeroSkill(ylb,plb)
set elb=tSb
set qlb=$41303942
call SelectHeroSkill(elb,qlb)
set alb=tSb
set nlb=$414D3739
call SelectHeroSkill(alb,nlb)
set dlb=tSb
set flb=$414D3761
call SelectHeroSkill(dlb,flb)
endif
if SSb==$484D3033 then
set Rlb=tSb
set Tlb=$4130544A
call SelectHeroSkill(Rlb,Tlb)
set Ylb=tSb
set Glb=$414D317A
call SelectHeroSkill(Ylb,Glb)
set glb=tSb
set hlb=$414E6162
call SelectHeroSkill(glb,hlb)
set Flb=tSb
set klb=$414D317B
call SelectHeroSkill(Flb,klb)
endif
if SSb==$55303041 then
set jlb=tSb
set xlb=$414F7773
call SelectHeroSkill(jlb,xlb)
set vlb=tSb
set mlb=$41303154
call SelectHeroSkill(vlb,mlb)
set Qlb=tSb
set Wlb=$414D3362
call SelectHeroSkill(Qlb,Wlb)
set Elb=tSb
set Zlb=$41303456
call SelectHeroSkill(Elb,Zlb)
endif
if SSb==$55303042 then
set Ulb=tSb
set Ilb=$41313055
call SelectHeroSkill(Ulb,Ilb)
set Plb=tSb
set Alb=$41305655
call SelectHeroSkill(Plb,Alb)
set Dlb=tSb
set Hlb=$41305659
call SelectHeroSkill(Dlb,Hlb)
endif
if SSb==$55303043 then
set Jlb=tSb
set Klb=$41313457
call SelectHeroSkill(Jlb,Klb)
set Llb=tSb
set Xlb=$41305730
call SelectHeroSkill(Llb,Xlb)
set Clb=tSb
set Vlb=$414D3668
call SelectHeroSkill(Clb,Vlb)
set Blb=tSb
set Nlb=$41313130
call SelectHeroSkill(Blb,Nlb)
endif
if SSb==$55303045 then
set Mlb=tSb
set wbb=$41305A31
call SelectHeroSkill(Mlb,wbb)
set ubb=tSb
set rbb=$41313357
call SelectHeroSkill(ubb,rbb)
set sbb=tSb
set tbb=$41303334
call SelectHeroSkill(sbb,tbb)
set ibb=tSb
set Sbb=$41303345
call SelectHeroSkill(ibb,Sbb)
endif
if SSb==$55303046 then
set cbb=tSb
set obb=$41305748
call SelectHeroSkill(cbb,obb)
set Obb=tSb
set lbb=$41305854
call SelectHeroSkill(Obb,lbb)
set bbb=tSb
set ybb=$41303942
call SelectHeroSkill(bbb,ybb)
set pbb=tSb
set ebb=$41305747
call SelectHeroSkill(pbb,ebb)
endif
if SSb==$55303047 then
set qbb=tSb
set abb=$41305A31
call SelectHeroSkill(qbb,abb)
set nbb=tSb
set dbb=$41456576
call SelectHeroSkill(nbb,dbb)
set fbb=tSb
set Rbb=$41303334
call SelectHeroSkill(fbb,Rbb)
set Tbb=tSb
set Ybb=$4130574A
call SelectHeroSkill(Tbb,Ybb)
endif
if SSb==$55303048 then
set Gbb=tSb
set gbb=$4130574D
call SelectHeroSkill(Gbb,gbb)
set hbb=tSb
set Fbb=$41304A47
call SelectHeroSkill(hbb,Fbb)
set kbb=tSb
set jbb=$41456576
call SelectHeroSkill(kbb,jbb)
set xbb=tSb
set vbb=$41305756
call SelectHeroSkill(xbb,vbb)
endif
if SSb==$55303049 then
set mbb=tSb
set Qbb=$414D3261
call SelectHeroSkill(mbb,Qbb)
set Wbb=tSb
set Ebb=$41303546
call SelectHeroSkill(Wbb,Ebb)
set Zbb=tSb
set Ubb=$41305757
call SelectHeroSkill(Zbb,Ubb)
set Ibb=tSb
set Pbb=$41305858
call SelectHeroSkill(Ibb,Pbb)
endif
if SSb==$5530304A then
set Abb=tSb
set Dbb=$414D3239
call SelectHeroSkill(Abb,Dbb)
set Hbb=tSb
set Jbb=$41304E39
call SelectHeroSkill(Hbb,Jbb)
set Kbb=tSb
set Lbb=$41305A41
call SelectHeroSkill(Kbb,Lbb)
set Xbb=tSb
set Cbb=$41305752
call SelectHeroSkill(Xbb,Cbb)
endif
if SSb==$5530304D then
set Vbb=tSb
set Bbb=$41303447
call SelectHeroSkill(Vbb,Bbb)
set Nbb=tSb
set Mbb=$41305946
call SelectHeroSkill(Nbb,Mbb)
set wyb=tSb
set uyb=$41305947
call SelectHeroSkill(wyb,uyb)
set ryb=tSb
set syb=$41305948
call SelectHeroSkill(ryb,syb)
endif
if SSb==$4F303258 then
set tyb=tSb
set iyb=$41313055
call SelectHeroSkill(tyb,iyb)
set Syb=tSb
set cyb=$41304E35
call SelectHeroSkill(Syb,cyb)
set oyb=tSb
set Oyb=$4130344D
call SelectHeroSkill(oyb,Oyb)
set lyb=tSb
set byb=$41313056
call SelectHeroSkill(lyb,byb)
endif
if SSb==$4F303337 then
set yyb=tSb
set pyb=$41313143
call SelectHeroSkill(yyb,pyb)
set eyb=tSb
set qyb=$41313130
call SelectHeroSkill(eyb,qyb)
set ayb=tSb
set nyb=$414F6372
call SelectHeroSkill(ayb,nyb)
set dyb=tSb
set fyb=$4145666B
call SelectHeroSkill(dyb,fyb)
endif
if SSb==$4F303338 then
set Ryb=tSb
set Tyb=$41313134
call SelectHeroSkill(Ryb,Tyb)
set Yyb=tSb
set Gyb=$41486164
call SelectHeroSkill(Yyb,Gyb)
set gyb=tSb
set hyb=$41313135
call SelectHeroSkill(gyb,hyb)
set Fyb=tSb
set kyb=$41487265
call SelectHeroSkill(Fyb,kyb)
endif
if SSb==$4F303339 then
set jyb=tSb
set xyb=$41313138
call SelectHeroSkill(jyb,xyb)
set vyb=tSb
set myb=$41303334
call SelectHeroSkill(vyb,myb)
set Qyb=tSb
set Wyb=$41313149
call SelectHeroSkill(Qyb,Wyb)
set Eyb=tSb
set Zyb=$41313137
call SelectHeroSkill(Eyb,Zyb)
endif
if SSb==$4F303430 then
set Uyb=tSb
set Iyb=$41305847
call SelectHeroSkill(Uyb,Iyb)
set Pyb=tSb
set Ayb=$41304D50
call SelectHeroSkill(Pyb,Ayb)
if mp==false then
set Dyb=tSb
set Hyb=$414F6372
call SelectHeroSkill(Dyb,Hyb)
endif
endif
if SSb==$4F303344 then
set Jyb=tSb
set Kyb=$4131345A
call SelectHeroSkill(Jyb,Kyb)
set Lyb=tSb
set Xyb=$41313531
call SelectHeroSkill(Lyb,Xyb)
set Cyb=tSb
set Vyb=$41303338
call SelectHeroSkill(Cyb,Vyb)
set Byb=tSb
set Nyb=$41313532
call SelectHeroSkill(Byb,Nyb)
endif
if SSb==$4830314A then
set Myb=tSb
set wpb=$41303546
call SelectHeroSkill(Myb,wpb)
set upb=tSb
set rpb=$41303346
call SelectHeroSkill(upb,rpb)
set spb=tSb
set tpb=$41456576
call SelectHeroSkill(spb,tpb)
endif
if SSb==$4E303149 then
set ipb=tSb
set Spb=$414F7732
call SelectHeroSkill(ipb,Spb)
set cpb=tSb
set opb=$41304D32
call SelectHeroSkill(cpb,opb)
set Opb=tSb
set lpb=$41303334
call SelectHeroSkill(Opb,lpb)
set bpb=tSb
set ypb=$41303345
call SelectHeroSkill(bpb,ypb)
endif
if SSb==$4F303259 then
set ppb=tSb
set epb=$41303546
call SelectHeroSkill(ppb,epb)
set qpb=tSb
set apb=$41304B41
call SelectHeroSkill(qpb,apb)
set npb=tSb
set dpb=$41456576
call SelectHeroSkill(npb,dpb)
set fpb=tSb
set Rpb=$41304B38
call SelectHeroSkill(fpb,Rpb)
endif
if SSb==$4870616C then
set Tpb=tSb
set Ypb=$414F7773
call SelectHeroSkill(Tpb,Ypb)
set Gpb=tSb
set gpb=$41304548
call SelectHeroSkill(Gpb,gpb)
set hpb=tSb
set Fpb=$41303144
call SelectHeroSkill(hpb,Fpb)
set kpb=tSb
set jpb=$41487265
call SelectHeroSkill(kpb,jpb)
endif
if SSb==$4861706D then
set xpb=tSb
set vpb=$41487463
call SelectHeroSkill(xpb,vpb)
set mpb=tSb
set Qpb=$414F6372
call SelectHeroSkill(mpb,Qpb)
set Wpb=tSb
set Epb=$41313355
call SelectHeroSkill(Wpb,Epb)
set Zpb=tSb
set Upb=$41323547
call SelectHeroSkill(Zpb,Upb)
endif
if SSb==$48616D67 then
set Ipb=tSb
set Ppb=$414F7368
call SelectHeroSkill(Ipb,Ppb)
set Apb=tSb
set Dpb=$41487765
call SelectHeroSkill(Apb,Dpb)
set Hpb=tSb
set Jpb=$41303831
call SelectHeroSkill(Hpb,Jpb)
set Kpb=tSb
set Lpb=$4148627A
call SelectHeroSkill(Kpb,Lpb)
endif
if SSb==$4867616D then
set Xpb=tSb
set Cpb=$41303546
call SelectHeroSkill(Xpb,Cpb)
set Vpb=tSb
set Bpb=$41303346
call SelectHeroSkill(Vpb,Bpb)
set Npb=tSb
set Mpb=$41456576
call SelectHeroSkill(Npb,Mpb)
endif
if SSb==$486A6169 then
set web=tSb
set ueb=$41304248
call SelectHeroSkill(web,ueb)
set reb=tSb
set seb=$41304246
call SelectHeroSkill(reb,seb)
set teb=tSb
set ieb=$41303232
call SelectHeroSkill(teb,ieb)
set Seb=tSb
set ceb=$41487765
call SelectHeroSkill(Seb,ceb)
endif
if SSb==$4E627374 then
set oeb=tSb
set Oeb=$41303444
call SelectHeroSkill(oeb,Oeb)
set leb=tSb
set beb=$41727371
call SelectHeroSkill(leb,beb)
set yeb=tSb
set peb=$41303459
call SelectHeroSkill(yeb,peb)
set eeb=tSb
set qeb=$41303134
call SelectHeroSkill(eeb,qeb)
endif
if SSb==$4F677268 then
set aeb=tSb
set neb=$414F6372
call SelectHeroSkill(aeb,neb)
set deb=tSb
set feb=$4130354D
call SelectHeroSkill(deb,feb)
set Reb=tSb
set Teb=$414D366B
call SelectHeroSkill(Reb,Teb)
set Yeb=tSb
set Geb=$414F6D69
call SelectHeroSkill(Yeb,Geb)
endif
if SSb==$4F746872 then
set geb=tSb
set heb=$414F636C
call SelectHeroSkill(geb,heb)
set Feb=tSb
set keb=$414F7366
call SelectHeroSkill(Feb,keb)
set jeb=tSb
set xeb=$41303442
call SelectHeroSkill(jeb,xeb)
set veb=tSb
set meb=$41303941
call SelectHeroSkill(veb,meb)
endif
if SSb==$4E736A73 then
set Qeb=tSb
set Web=$414F7732
call SelectHeroSkill(Qeb,Web)
set Eeb=tSb
set Zeb=$41304D32
call SelectHeroSkill(Eeb,Zeb)
set Ueb=tSb
set Ieb=$41313536
call SelectHeroSkill(Ueb,Ieb)
set Peb=tSb
set Aeb=$41303345
call SelectHeroSkill(Peb,Aeb)
endif
if SSb==$5530304C then
set Deb=tSb
set Heb=$41303444
call SelectHeroSkill(Deb,Heb)
set Jeb=tSb
set Keb=$41304838
call SelectHeroSkill(Jeb,Keb)
set Leb=tSb
set Xeb=$4130564D
call SelectHeroSkill(Leb,Xeb)
set Ceb=tSb
set Veb=$41303456
call SelectHeroSkill(Ceb,Veb)
endif
if SSb==$48303144 or SSb==$486D6B67 then
set Beb=tSb
set Neb=$41487463
call SelectHeroSkill(Beb,Neb)
set Meb=tSb
set wqb=$41304E53
call SelectHeroSkill(Meb,wqb)
set uqb=tSb
set rqb=$41304753
call SelectHeroSkill(uqb,rqb)
set sqb=tSb
set tqb=$4145496C
call SelectHeroSkill(sqb,tqb)
endif
if SSb==$486B616C then
set iqb=tSb
set Sqb=$41436262
call SelectHeroSkill(iqb,Sqb)
set cqb=tSb
set oqb=$41303454
call SelectHeroSkill(cqb,oqb)
set Oqb=tSb
set lqb=$41456172
call SelectHeroSkill(Oqb,lqb)
set bqb=tSb
set yqb=$41304645
call SelectHeroSkill(bqb,yqb)
endif
if SSb==$48616E74 then
set pqb=tSb
set eqb=$414E6162
call SelectHeroSkill(pqb,eqb)
set qqb=tSb
set aqb=$41305548
call SelectHeroSkill(qqb,aqb)
set nqb=tSb
set dqb=$41303930
call SelectHeroSkill(nqb,dqb)
set fqb=tSb
set Rqb=$4130334B
call SelectHeroSkill(fqb,Rqb)
endif
if SSb==$48686B6C then
set Tqb=tSb
set Yqb=$41304355
call SelectHeroSkill(Tqb,Yqb)
set Gqb=tSb
set gqb=$41304C53
call SelectHeroSkill(Gqb,gqb)
set hqb=tSb
set Fqb=$41303548
call SelectHeroSkill(hqb,Fqb)
set kqb=tSb
set jqb=$41303547
call SelectHeroSkill(kqb,jqb)
if GetHeroLevel(tSb)>=6 then
set xqb=tSb
set vqb=$4130354B
set Ukb=GetUnitAbilityLevel(xqb,vqb)==0
else
set Ukb=false
endif
if Ukb then
set mqb=tSb
set Qqb=$4130354B
call UnitAddAbility(mqb,Qqb)
endif
if GetHeroLevel(tSb)>=10 then
set Wqb=tSb
set Eqb=$41303539
set Ikb=GetUnitAbilityLevel(Wqb,Eqb)==0
else
set Ikb=false
endif
if Ikb then
set Zqb=tSb
set Uqb=$41303539
call UnitAddAbility(Zqb,Uqb)
endif
if GetHeroLevel(tSb)>=14 then
set Iqb=tSb
set Pqb=$41303541
set Pkb=GetUnitAbilityLevel(Iqb,Pqb)==0
else
set Pkb=false
endif
if Pkb then
set Aqb=tSb
set Dqb=$41303541
call UnitAddAbility(Aqb,Dqb)
endif
if GetHeroLevel(tSb)>=18 then
set Hqb=tSb
set Jqb=$4130354C
set Akb=GetUnitAbilityLevel(Hqb,Jqb)==0
else
set Akb=false
endif
if Akb then
set Kqb=tSb
set Lqb=$4130354C
call UnitAddAbility(Kqb,Lqb)
endif
if GetHeroLevel(tSb)>=22 then
set Xqb=tSb
set Cqb=$41304B43
set Dkb=GetUnitAbilityLevel(Xqb,Cqb)==0
else
set Dkb=false
endif
if Dkb then
set Vqb=tSb
set Bqb=$41304B43
call UnitAddAbility(Vqb,Bqb)
endif
if GetHeroLevel(tSb)>=26 then
set Nqb=tSb
set Mqb=$41304E47
set Hkb=GetUnitAbilityLevel(Nqb,Mqb)==0
else
set Hkb=false
endif
if Hkb then
set wab=tSb
set uab=$41304E47
call UnitAddAbility(wab,uab)
endif
endif
if SSb==$45777264 or SSb==$456B6767 then
set rab=tSb
set sab=$4145666B
call SelectHeroSkill(rab,sab)
set tab=tSb
set iab=$41305957
call SelectHeroSkill(tab,iab)
set Sab=tSb
set cab=$41304E46
call SelectHeroSkill(Sab,cab)
set oab=tSb
set Oab=$41304545
call SelectHeroSkill(oab,Oab)
endif
if SSb==$456D6F6F then
set lab=tSb
set bab=$41313134
call SelectHeroSkill(lab,bab)
set yab=tSb
set pab=$41303454
call SelectHeroSkill(yab,pab)
set eab=tSb
set qab=$41456172
call SelectHeroSkill(eab,qab)
set aab=tSb
set nab=$4130344F
call SelectHeroSkill(aab,nab)
endif
if SSb==$45667572 then
set dab=tSb
set fab=$4155696D
call SelectHeroSkill(dab,fab)
set Rab=tSb
set Tab=$41305248
call SelectHeroSkill(Rab,Tab)
set Yab=tSb
set Gab=$41456168
call SelectHeroSkill(Yab,Gab)
set gab=tSb
set hab=$41457471
call SelectHeroSkill(gab,hab)
endif
if SSb==$4563656E then
set Fab=tSb
set kab=$41303943
call SelectHeroSkill(Fab,kab)
set jab=tSb
set xab=$41303430
call SelectHeroSkill(jab,xab)
set vab=tSb
set mab=$41486268
call SelectHeroSkill(vab,mab)
set Qab=tSb
set Wab=$41303335
call SelectHeroSkill(Qab,Wab)
endif
if SSb==$456B6565 then
set Eab=tSb
set Zab=$41303256
call SelectHeroSkill(Eab,Zab)
set Uab=tSb
set Iab=$41304E41
call SelectHeroSkill(Uab,Iab)
set Pab=tSb
set Aab=$41304E38
call SelectHeroSkill(Pab,Aab)
set Dab=tSb
set Hab=$41305435
call SelectHeroSkill(Dab,Hab)
endif
if SSb==$45303039 then
set Jab=tSb
set Kab=$41305953
call SelectHeroSkill(Jab,Kab)
set Lab=tSb
set Xab=$41305952
call SelectHeroSkill(Lab,Xab)
set Cab=tSb
set Vab=$41304753
call SelectHeroSkill(Cab,Vab)
set Bab=tSb
set Nab=$41305A41
call SelectHeroSkill(Bab,Nab)
endif
if SSb==$4F746368 then
set Mab=tSb
set wnb=$414F7773
call SelectHeroSkill(Mab,wnb)
set unb=tSb
set rnb=$41303446
call SelectHeroSkill(unb,rnb)
set snb=tSb
set tnb=$41486164
call SelectHeroSkill(snb,tnb)
set inb=tSb
set Snb=$41305336
call SelectHeroSkill(inb,Snb)
endif
if SSb==$4F73616D then
set cnb=tSb
set onb=$41303252
call SelectHeroSkill(cnb,onb)
set Onb=tSb
set lnb=$41313130
call SelectHeroSkill(Onb,lnb)
set bnb=tSb
set ynb=$414D366B
call SelectHeroSkill(bnb,ynb)
set pnb=tSb
set enb=$414F6372
call SelectHeroSkill(pnb,enb)
endif
if SSb==$4F676C64 then
set qnb=tSb
set anb=$4155696D
call SelectHeroSkill(qnb,anb)
set nnb=tSb
set dnb=$414F6877
call SelectHeroSkill(nnb,dnb)
set fnb=tSb
set Rnb=$41556175
call SelectHeroSkill(fnb,Rnb)
set Tnb=tSb
set Ynb=$41487265
call SelectHeroSkill(Tnb,Ynb)
endif
if SSb==$4F636232 then
set Gnb=tSb
set gnb=$41304A47
call SelectHeroSkill(Gnb,gnb)
set hnb=tSb
set Fnb=$4130354F
call SelectHeroSkill(hnb,Fnb)
set knb=tSb
set jnb=$41456576
call SelectHeroSkill(knb,jnb)
set xnb=tSb
set vnb=$41304A4A
call SelectHeroSkill(xnb,vnb)
endif
if SSb==$4F636268 then
set mnb=tSb
set Qnb=$41304A4E
call SelectHeroSkill(mnb,Qnb)
set Wnb=tSb
set Enb=$41303430
call SelectHeroSkill(Wnb,Enb)
set Znb=tSb
set Unb=$41303334
call SelectHeroSkill(Znb,Unb)
set Inb=tSb
set Pnb=$41304A4C
call SelectHeroSkill(Inb,Pnb)
endif
if SSb==$4F303443 then
set Anb=tSb
set Dnb=$41323631
call SelectHeroSkill(Anb,Dnb)
set Hnb=tSb
set Jnb=$414F6165
call SelectHeroSkill(Hnb,Jnb)
set Knb=tSb
set Lnb=$41323633
call SelectHeroSkill(Knb,Lnb)
set Xnb=tSb
set Cnb=$41323635
call SelectHeroSkill(Xnb,Cnb)
endif
if SSb==$45696C6C then
set Vnb=tSb
set Bnb=$41305451
call SelectHeroSkill(Vnb,Bnb)
set Nnb=tSb
set Mnb=$4130544E
call SelectHeroSkill(Nnb,Mnb)
set wdb=tSb
set udb=$41304944
call SelectHeroSkill(wdb,udb)
set rdb=tSb
set sdb=$41303456
call SelectHeroSkill(rdb,sdb)
endif
if SSb==$45776172 then
set tdb=tSb
set idb=$41304E50
call SelectHeroSkill(tdb,idb)
set Sdb=tSb
set cdb=$41303446
call SelectHeroSkill(Sdb,cdb)
set odb=tSb
set Odb=$41556176
call SelectHeroSkill(odb,Odb)
set ldb=tSb
set bdb=$41313433
call SelectHeroSkill(ldb,bdb)
endif
if SSb==$48303238 then
set ydb=tSb
set pdb=$41304E54
call SelectHeroSkill(ydb,pdb)
set edb=tSb
set qdb=$414E6963
call SelectHeroSkill(edb,qdb)
set adb=tSb
set ndb=$41313651
call SelectHeroSkill(adb,ndb)
set ddb=tSb
set fdb=$41305452
call SelectHeroSkill(ddb,fdb)
endif
if SSb==$45747972 then
set Rdb=tSb
set Tdb=$41456576
call SelectHeroSkill(Rdb,Tdb)
set Ydb=tSb
set Gdb=$41303250
call SelectHeroSkill(Ydb,Gdb)
set gdb=tSb
set hdb=$414D3679
call SelectHeroSkill(gdb,hdb)
set Fdb=tSb
set kdb=$41304E55
call SelectHeroSkill(Fdb,kdb)
endif
if SSb==$484D3032 then
set jdb=tSb
set xdb=$41313530
call SelectHeroSkill(jdb,xdb)
set vdb=tSb
set mdb=$414D3170
call SelectHeroSkill(vdb,mdb)
set Qdb=tSb
set Wdb=$41304E37
call SelectHeroSkill(Qdb,Wdb)
set Edb=tSb
set Zdb=$414D3171
call SelectHeroSkill(Edb,Zdb)
endif
if SSb==$4F626C61 then
set Udb=tSb
set Idb=$41727377
call SelectHeroSkill(Udb,Idb)
set Pdb=tSb
set Adb=$41303944
call SelectHeroSkill(Pdb,Adb)
set Ddb=tSb
set Hdb=$414F6165
call SelectHeroSkill(Ddb,Hdb)
set Jdb=tSb
set Kdb=$41303233
call SelectHeroSkill(Jdb,Kdb)
endif
if SSb==$4F736864 then
set Ldb=tSb
set Xdb=$414E666C
call SelectHeroSkill(Ldb,Xdb)
set Cdb=tSb
set Vdb=$41303955
call SelectHeroSkill(Cdb,Vdb)
set Bdb=tSb
set Ndb=$414F6C73
call SelectHeroSkill(Bdb,Ndb)
set Mdb=tSb
set wfb=$414F7377
call SelectHeroSkill(Mdb,wfb)
endif
if SSb==$4F647274 then
set ufb=tSb
set rfb=$41303831
call SelectHeroSkill(ufb,rfb)
set sfb=tSb
set tfb=$41304959
call SelectHeroSkill(sfb,tfb)
set ifb=tSb
set Sfb=$41303933
call SelectHeroSkill(ifb,Sfb)
set cfb=tSb
set ofb=$41303449
call SelectHeroSkill(cfb,ofb)
endif
if SSb==$4F726578 then
set Ofb=tSb
set lfb=$41303945
call SelectHeroSkill(Ofb,lfb)
set bfb=tSb
set yfb=$41303557
call SelectHeroSkill(bfb,yfb)
if GetHeroLevel(tSb)>=6 then
set pfb=tSb
set efb=$41303341
set Jkb=GetUnitAbilityLevel(pfb,efb)==0
else
set Jkb=false
endif
if Jkb then
set qfb=tSb
set afb=$41303341
call UnitAddAbility(qfb,afb)
endif
if GetHeroLevel(tSb)>=10 then
set nfb=tSb
set dfb=$41303342
set Kkb=GetUnitAbilityLevel(nfb,dfb)==0
else
set Kkb=false
endif
if Kkb then
set ffb=tSb
set Rfb=$41303342
call UnitAddAbility(ffb,Rfb)
endif
if GetHeroLevel(tSb)>=14 then
set Tfb=tSb
set Yfb=$41303343
set Lkb=GetUnitAbilityLevel(Tfb,Yfb)==0
else
set Lkb=false
endif
if Lkb then
set Gfb=tSb
set gfb=$41303343
call UnitAddAbility(Gfb,gfb)
endif
if GetHeroLevel(tSb)>=18 then
set hfb=tSb
set Ffb=$4130545A
set Xkb=GetUnitAbilityLevel(hfb,Ffb)==0
else
set Xkb=false
endif
if Xkb then
set kfb=tSb
set jfb=$4130545A
call UnitAddAbility(kfb,jfb)
endif
if GetHeroLevel(tSb)>=22 then
set xfb=tSb
set vfb=$41305459
set Ckb=GetUnitAbilityLevel(xfb,vfb)==0
else
set Ckb=false
endif
if Ckb then
set mfb=tSb
set Qfb=$41305459
call UnitAddAbility(mfb,Qfb)
endif
if GetHeroLevel(tSb)>=26 then
set Wfb=tSb
set Efb=$41303347
set Vkb=GetUnitAbilityLevel(Wfb,Efb)==0
else
set Vkb=false
endif
if Vkb then
set Zfb=tSb
set Ufb=$41303347
call UnitAddAbility(Zfb,Ufb)
endif
set Ifb=tSb
set Pfb=$41303334
call SelectHeroSkill(Ifb,Pfb)
set Afb=tSb
set Dfb=$41303345
call SelectHeroSkill(Afb,Dfb)
endif
if SSb==$4F726B6E then
set Hfb=tSb
set Jfb=$41304838
call SelectHeroSkill(Hfb,Jfb)
set Kfb=tSb
set Lfb=$41304D35
call SelectHeroSkill(Kfb,Lfb)
set Xfb=tSb
set Cfb=$4130495A
call SelectHeroSkill(Xfb,Cfb)
set Vfb=tSb
set Bfb=$41303456
call SelectHeroSkill(Vfb,Bfb)
endif
if SSb==$45303037 then
set Nfb=tSb
set Mfb=$41305949
call SelectHeroSkill(Nfb,Mfb)
set wRb=tSb
set uRb=$41304D32
call SelectHeroSkill(wRb,uRb)
set rRb=tSb
set sRb=$414D3261
call SelectHeroSkill(rRb,sRb)
set tRb=tSb
set iRb=$4130594C
call SelectHeroSkill(tRb,iRb)
endif
if SSb==$45303038 then
set SRb=tSb
set cRb=$41303945
call SelectHeroSkill(SRb,cRb)
set oRb=tSb
set ORb=$41304D39
call SelectHeroSkill(oRb,ORb)
set lRb=tSb
set bRb=$41456576
call SelectHeroSkill(lRb,bRb)
set yRb=tSb
set pRb=$4130594C
call SelectHeroSkill(yRb,pRb)
endif
if SSb==$4E726F62 then
set eRb=tSb
set qRb=$41304C54
call SelectHeroSkill(eRb,qRb)
set aRb=tSb
set nRb=$41303446
call SelectHeroSkill(aRb,nRb)
set dRb=tSb
set fRb=$41304837
call SelectHeroSkill(dRb,fRb)
set RRb=tSb
set TRb=$41304C55
call SelectHeroSkill(RRb,TRb)
endif
if SSb==$4E616C63 then
set YRb=tSb
set GRb=$41304C56
call SelectHeroSkill(YRb,GRb)
set gRb=tSb
set hRb=$41436262
call SelectHeroSkill(gRb,hRb)
set FRb=tSb
set kRb=$41313055
call SelectHeroSkill(FRb,kRb)
set jRb=tSb
set xRb=$5472616E
call SelectHeroSkill(jRb,xRb)
endif
if SSb==$4E74696E then
set vRb=tSb
set mRb=$41305830
call SelectHeroSkill(vRb,mRb)
set QRb=tSb
set WRb=$41304C51
call SelectHeroSkill(QRb,WRb)
set ERb=tSb
set ZRb=$41303930
call SelectHeroSkill(ERb,ZRb)
set URb=tSb
set IRb=$41304453
call SelectHeroSkill(URb,IRb)
endif
if SSb==$4864676F then
set PRb=tSb
set ARb=$41304C53
call SelectHeroSkill(PRb,ARb)
set DRb=tSb
set HRb=$41303548
call SelectHeroSkill(DRb,HRb)
set JRb=tSb
set KRb=$41304658
call SelectHeroSkill(JRb,KRb)
set LRb=tSb
set XRb=$41303942
call SelectHeroSkill(LRb,XRb)
endif
if SSb==$484D3035 then
set CRb=tSb
set VRb=$414D3264
call SelectHeroSkill(CRb,VRb)
set BRb=tSb
set NRb=$414D3265
call SelectHeroSkill(BRb,NRb)
set MRb=tSb
set wTb=$41486268
call SelectHeroSkill(MRb,wTb)
set uTb=tSb
set rTb=$414D3266
call SelectHeroSkill(uTb,rTb)
endif
if SSb==$484D3064 then
set sTb=tSb
set tTb=$414F7773
call SelectHeroSkill(sTb,tTb)
set iTb=tSb
set STb=$41303344
call SelectHeroSkill(iTb,STb)
set cTb=tSb
set oTb=$41486164
call SelectHeroSkill(cTb,oTb)
set OTb=tSb
set lTb=$41303456
call SelectHeroSkill(OTb,lTb)
endif
if SSb==$484D3067 then
set bTb=tSb
set yTb=$414D3667
call SelectHeroSkill(bTb,yTb)
set pTb=tSb
set eTb=$414D3668
call SelectHeroSkill(pTb,eTb)
set qTb=tSb
set aTb=$414D366A
call SelectHeroSkill(qTb,aTb)
set nTb=tSb
set dTb=$414D366B
call SelectHeroSkill(nTb,dTb)
endif
if SSb==$484D3066 then
set fTb=tSb
set RTb=$41305750
call SelectHeroSkill(fTb,RTb)
set TTb=tSb
set YTb=$41304548
call SelectHeroSkill(TTb,YTb)
set GTb=tSb
set gTb=$41313651
call SelectHeroSkill(GTb,gTb)
set hTb=tSb
set FTb=$41305751
call SelectHeroSkill(hTb,FTb)
endif
if SSb==$484D3065 then
set kTb=tSb
set jTb=$4131354C
call SelectHeroSkill(kTb,jTb)
set xTb=tSb
set vTb=$41303557
call SelectHeroSkill(xTb,vTb)
if GetHeroLevel(tSb)>=6 then
set mTb=tSb
set QTb=$41303341
set Bkb=GetUnitAbilityLevel(mTb,QTb)==0
else
set Bkb=false
endif
if Bkb then
set WTb=tSb
set ETb=$41303341
call UnitAddAbility(WTb,ETb)
endif
if GetHeroLevel(tSb)>=10 then
set ZTb=tSb
set UTb=$41303342
set Nkb=GetUnitAbilityLevel(ZTb,UTb)==0
else
set Nkb=false
endif
if Nkb then
set ITb=tSb
set PTb=$41303342
call UnitAddAbility(ITb,PTb)
endif
if GetHeroLevel(tSb)>=14 then
set ATb=tSb
set DTb=$41303343
set Mkb=GetUnitAbilityLevel(ATb,DTb)==0
else
set Mkb=false
endif
if Mkb then
set HTb=tSb
set JTb=$41303343
call UnitAddAbility(HTb,JTb)
endif
if GetHeroLevel(tSb)>=18 then
set KTb=tSb
set LTb=$4130545A
set wjb=GetUnitAbilityLevel(KTb,LTb)==0
else
set wjb=false
endif
if wjb then
set XTb=tSb
set CTb=$4130545A
call UnitAddAbility(XTb,CTb)
endif
if GetHeroLevel(tSb)>=22 then
set VTb=tSb
set BTb=$41305459
set ujb=GetUnitAbilityLevel(VTb,BTb)==0
else
set ujb=false
endif
if ujb then
set NTb=tSb
set MTb=$41305459
call UnitAddAbility(NTb,MTb)
endif
if GetHeroLevel(tSb)>=26 then
set wYb=tSb
set uYb=$41303347
set rjb=GetUnitAbilityLevel(wYb,uYb)==0
else
set rjb=false
endif
if rjb then
set rYb=tSb
set sYb=$41303347
call UnitAddAbility(rYb,sYb)
endif
set tYb=tSb
set iYb=$41304658
call SelectHeroSkill(tYb,iYb)
set SYb=tSb
set cYb=$414D3663
call SelectHeroSkill(SYb,cYb)
endif
if SSb==$456D3173 then
set oYb=tSb
set OYb=$41305850
call SelectHeroSkill(oYb,OYb)
set lYb=tSb
set bYb=$41305852
call SelectHeroSkill(lYb,bYb)
set yYb=tSb
set pYb=$41305851
call SelectHeroSkill(yYb,pYb)
set eYb=tSb
set qYb=$4130584F
call SelectHeroSkill(eYb,qYb)
endif
if SSb==$4E706C68 then
set aYb=tSb
set nYb=$414F7773
call SelectHeroSkill(aYb,nYb)
set dYb=tSb
set fYb=$414E6361
call SelectHeroSkill(dYb,fYb)
set RYb=tSb
set TYb=$41303336
call SelectHeroSkill(RYb,TYb)
set YYb=tSb
set GYb=$4155696E
call SelectHeroSkill(YYb,GYb)
endif
if SSb==$55647265 then
set gYb=tSb
set hYb=$41556373
call SelectHeroSkill(gYb,hYb)
set FYb=tSb
set kYb=$41303934
call SelectHeroSkill(FYb,kYb)
set jYb=tSb
set xYb=$41556176
call SelectHeroSkill(jYb,xYb)
set vYb=tSb
set mYb=$414D3035
call SelectHeroSkill(vYb,mYb)
endif
if SSb==$4E666972 then
set QYb=tSb
set WYb=$41303443
call SelectHeroSkill(QYb,WYb)
set EYb=tSb
set ZYb=$41305231
call SelectHeroSkill(EYb,ZYb)
set UYb=tSb
set IYb=$4130364D
call SelectHeroSkill(UYb,IYb)
set PYb=tSb
set AYb=$41303936
call SelectHeroSkill(PYb,AYb)
endif
if SSb==$5563726C then
set DYb=tSb
set HYb=$414F7732
call SelectHeroSkill(DYb,HYb)
set JYb=tSb
set KYb=$41313731
call SelectHeroSkill(JYb,KYb)
set LYb=tSb
set XYb=$41313657
call SelectHeroSkill(LYb,XYb)
set CYb=tSb
set VYb=$414E736F
call SelectHeroSkill(CYb,VYb)
endif
if SSb==$55776172 then
set BYb=tSb
set NYb=$41304351
call SelectHeroSkill(BYb,NYb)
set MYb=tSb
set wGb=$414E6470
call SelectHeroSkill(MYb,wGb)
set uGb=tSb
set rGb=$41304B36
call SelectHeroSkill(uGb,rGb)
set sGb=tSb
set tGb=$414E7263
call SelectHeroSkill(sGb,tGb)
endif
if SSb==$4F706768 then
set iGb=tSb
set SGb=$41303154
call SelectHeroSkill(iGb,SGb)
set cGb=tSb
set oGb=$41303344
call SelectHeroSkill(cGb,oGb)
set OGb=tSb
set lGb=$41303830
call SelectHeroSkill(OGb,lGb)
set bGb=tSb
set yGb=$414F7777
call SelectHeroSkill(bGb,yGb)
endif
if SSb==$4E626263 then
set pGb=tSb
set eGb=$41304D4F
call SelectHeroSkill(pGb,eGb)
set qGb=tSb
set aGb=$41303252
call SelectHeroSkill(qGb,aGb)
set nGb=tSb
set dGb=$41304D50
call SelectHeroSkill(nGb,dGb)
set fGb=tSb
set RGb=$41303153
call SelectHeroSkill(fGb,RGb)
endif
if SSb==$4F666172 then
set TGb=tSb
set YGb=$4130344E
call SelectHeroSkill(TGb,YGb)
set GGb=tSb
set gGb=$41303339
call SelectHeroSkill(GGb,gGb)
set hGb=tSb
set FGb=$414F7368
call SelectHeroSkill(hGb,FGb)
set kGb=tSb
set jGb=$41303645
call SelectHeroSkill(kGb,jGb)
endif
if SSb==$5562616C then
set xGb=tSb
set vGb=$41303450
call SelectHeroSkill(xGb,vGb)
set mGb=tSb
set QGb=$41304E33
call SelectHeroSkill(mGb,QGb)
set WGb=tSb
set EGb=$414D3679
call SelectHeroSkill(WGb,EGb)
set ZGb=tSb
set UGb=$41303335
call SelectHeroSkill(ZGb,UGb)
endif
if SSb==$4E6D616E then
set IGb=tSb
set PGb=$4130344A
call SelectHeroSkill(IGb,PGb)
set AGb=tSb
set DGb=$41303942
call SelectHeroSkill(AGb,DGb)
set HGb=tSb
set JGb=$41304459
call SelectHeroSkill(HGb,JGb)
set KGb=tSb
set LGb=$414E7233
call SelectHeroSkill(KGb,LGb)
endif
if SSb==$4F303431 then
set XGb=tSb
set CGb=$41303444
call SelectHeroSkill(XGb,CGb)
set VGb=tSb
set BGb=$41313854
call SelectHeroSkill(VGb,BGb)
set NGb=tSb
set MGb=$41556176
call SelectHeroSkill(NGb,MGb)
set wgb=tSb
set ugb=$41303456
call SelectHeroSkill(wgb,ugb)
endif
if SSb==$4F303432 then
set rgb=tSb
set sgb=$41323030
call SelectHeroSkill(rgb,sgb)
set tgb=tSb
set igb=$41323031
call SelectHeroSkill(tgb,igb)
set Sgb=tSb
set cgb=$414E6361
call SelectHeroSkill(Sgb,cgb)
set ogb=tSb
set Ogb=$41303456
call SelectHeroSkill(ogb,Ogb)
endif
if SSb==$4F303433 then
set lgb=tSb
set bgb=$414F7368
call SelectHeroSkill(lgb,bgb)
set ygb=tSb
set pgb=$414F6877
call SelectHeroSkill(ygb,pgb)
set egb=tSb
set qgb=$41304944
call SelectHeroSkill(egb,qgb)
set agb=tSb
set ngb=$41323032
call SelectHeroSkill(agb,ngb)
endif
if SSb==$4F303434 then
set dgb=tSb
set fgb=$41303945
call SelectHeroSkill(dgb,fgb)
set Rgb=tSb
set Tgb=$41456576
call SelectHeroSkill(Rgb,Tgb)
set Ygb=tSb
set Ggb=$41323033
call SelectHeroSkill(Ygb,Ggb)
set ggb=tSb
set hgb=$41323034
call SelectHeroSkill(ggb,hgb)
endif
if SSb==$4F303435 then
set Fgb=tSb
set kgb=$41487463
call SelectHeroSkill(Fgb,kgb)
set jgb=tSb
set xgb=$41305659
call SelectHeroSkill(jgb,xgb)
set vgb=tSb
set mgb=$41303938
call SelectHeroSkill(vgb,mgb)
set Qgb=tSb
set Wgb=$41323153
call SelectHeroSkill(Qgb,Wgb)
endif
if SSb==$4F303436 then
set Egb=tSb
set Zgb=$414F7368
call SelectHeroSkill(Egb,Zgb)
set Ugb=tSb
set Igb=$414E6361
call SelectHeroSkill(Ugb,Igb)
set Pgb=tSb
set Agb=$414F6372
call SelectHeroSkill(Pgb,Agb)
set Dgb=tSb
set Hgb=$414D366B
call SelectHeroSkill(Dgb,Hgb)
endif
if SSb==$4F303437 then
set Jgb=tSb
set Kgb=$41304248
call SelectHeroSkill(Jgb,Kgb)
set Lgb=tSb
set Xgb=$41323156
call SelectHeroSkill(Lgb,Xgb)
set Cgb=tSb
set Vgb=$41323158
call SelectHeroSkill(Cgb,Vgb)
set Bgb=tSb
set Ngb=$4132315A
call SelectHeroSkill(Bgb,Ngb)
endif
if SSb==$4F303438 then
set Mgb=tSb
set whb=$41323230
call SelectHeroSkill(Mgb,whb)
set uhb=tSb
set rhb=$41323638
call SelectHeroSkill(uhb,rhb)
set shb=tSb
set thb=$41323232
call SelectHeroSkill(shb,thb)
set ihb=tSb
set Shb=$41323231
call SelectHeroSkill(ihb,Shb)
endif
if SSb==$4F303439 then
set chb=tSb
set ohb=$41304548
call SelectHeroSkill(chb,ohb)
set Ohb=tSb
set lhb=$41303456
call SelectHeroSkill(Ohb,lhb)
set bhb=tSb
set yhb=$41323339
call SelectHeroSkill(bhb,yhb)
set phb=tSb
set ehb=$41323341
call SelectHeroSkill(phb,ehb)
endif
if SSb==$55646561 then
set qhb=tSb
set ahb=$41303257
call SelectHeroSkill(qhb,ahb)
set nhb=tSb
set dhb=$41303934
call SelectHeroSkill(nhb,dhb)
set fhb=tSb
set Rhb=$41556176
call SelectHeroSkill(fhb,Rhb)
set Thb=tSb
set Yhb=$4155616E
call SelectHeroSkill(Thb,Yhb)
endif
if SSb==$4E62726E then
set Ghb=tSb
set ghb=$414E7369
call SelectHeroSkill(Ghb,ghb)
set hhb=tSb
set Fhb=$414D6337
call SelectHeroSkill(hhb,Fhb)
set khb=tSb
set jhb=$41323030
call SelectHeroSkill(khb,jhb)
set xhb=tSb
set vhb=$41323747
call SelectHeroSkill(xhb,vhb)
endif
if SSb==$556C6963 then
set mhb=tSb
set Qhb=$4155666E
call SelectHeroSkill(mhb,Qhb)
set Whb=tSb
set Ehb=$4130344D
call SelectHeroSkill(Whb,Ehb)
set Zhb=tSb
set Uhb=$41303338
call SelectHeroSkill(Zhb,Uhb)
set Ihb=tSb
set Phb=$41303458
call SelectHeroSkill(Ihb,Phb)
endif
if SSb==$556B746C then
set Ahb=tSb
set Dhb=$5A31395A
call SelectHeroSkill(Ahb,Dhb)
set Hhb=tSb
set Jhb=$41304D51
call SelectHeroSkill(Hhb,Jhb)
set Khb=tSb
set Lhb=$41304D53
call SelectHeroSkill(Khb,Lhb)
set Xhb=tSb
set Chb=$41304135
call SelectHeroSkill(Xhb,Chb)
endif
if SSb==$55647468 then
set Vhb=tSb
set Bhb=$41303542
call SelectHeroSkill(Vhb,Bhb)
set Nhb=tSb
set Mhb=$41304748
call SelectHeroSkill(Nhb,Mhb)
set wFb=tSb
set uFb=$41304A4C
call SelectHeroSkill(wFb,uFb)
endif
if SSb==$48617266 then
set rFb=tSb
set sFb=$41436266
call SelectHeroSkill(rFb,sFb)
set tFb=tSb
set iFb=$41304B45
call SelectHeroSkill(tFb,iFb)
set SFb=tSb
set cFb=$41305455
call SelectHeroSkill(SFb,cFb)
set oFb=tSb
set OFb=$41305458
call SelectHeroSkill(oFb,OFb)
endif
if SSb==$55616E62 then
set lFb=tSb
set bFb=$4155696D
call SelectHeroSkill(lFb,bFb)
set yFb=tSb
set pFb=$41304D55
call SelectHeroSkill(yFb,pFb)
set eFb=tSb
set qFb=$4130444D
call SelectHeroSkill(eFb,qFb)
set aFb=tSb
set nFb=$41304D54
call SelectHeroSkill(aFb,nFb)
endif
if SSb==$55303130 then
set dFb=tSb
set fFb=$41303955
call SelectHeroSkill(dFb,fFb)
set RFb=tSb
set TFb=$41323835
call SelectHeroSkill(RFb,TFb)
set YFb=tSb
set GFb=$41323836
call SelectHeroSkill(YFb,GFb)
set gFb=tSb
set hFb=$41323837
call SelectHeroSkill(gFb,hFb)
endif
if SSb==$4564656D then
set FFb=tSb
set kFb=$41303634
call SelectHeroSkill(FFb,kFb)
set jFb=tSb
set xFb=$41304B45
call SelectHeroSkill(jFb,xFb)
set vFb=tSb
set mFb=$41304837
call SelectHeroSkill(vFb,mFb)
set QFb=tSb
set WFb=$41304B44
call SelectHeroSkill(QFb,WFb)
endif
if SSb==$4E6E6773 then
set EFb=tSb
set ZFb=$4155666E
call SelectHeroSkill(EFb,ZFb)
set UFb=tSb
set IFb=$41303452
call SelectHeroSkill(UFb,IFb)
set PFb=tSb
set AFb=$41303338
call SelectHeroSkill(PFb,AFb)
set DFb=tSb
set HFb=$41303533
call SelectHeroSkill(DFb,HFb)
endif
if SSb==$456D6672 then
set JFb=tSb
set KFb=$41303453
call SelectHeroSkill(JFb,KFb)
set LFb=tSb
set XFb=$41303538
call SelectHeroSkill(LFb,XFb)
set CFb=tSb
set VFb=$41333032
call SelectHeroSkill(CFb,VFb)
set BFb=tSb
set NFb=$41304B46
call SelectHeroSkill(BFb,NFb)
endif
if SSb==$456D6E73 then
set MFb=tSb
set wkb=$41303546
call SelectHeroSkill(MFb,wkb)
set ukb=tSb
set rkb=$41304B41
call SelectHeroSkill(ukb,rkb)
set skb=tSb
set tkb=$41456576
call SelectHeroSkill(skb,tkb)
set ikb=tSb
set Skb=$41303346
call SelectHeroSkill(ikb,Skb)
endif
if SSb==$45657669 or SSb==$45646D6D then
set ckb=tSb
set okb=$41304E48
call SelectHeroSkill(ckb,okb)
set Okb=tSb
set lkb=$41333053
call SelectHeroSkill(Okb,lkb)
set bkb=tSb
set ykb=$41305431
call SelectHeroSkill(bkb,ykb)
set pkb=tSb
set ekb=$41456D65
call SelectHeroSkill(pkb,ekb)
endif
set qW=qW-1
set cSb=null
set OSb=null
set lSb=null
set bSb=null
set ySb=null
set eSb=null
set aSb=null
set dSb=null
set RSb=null
set YSb=null
set gSb=null
set FSb=null
set jSb=null
set vSb=null
set QSb=null
set ESb=null
set USb=null
set PSb=null
set DSb=null
set JSb=null
set LSb=null
set CSb=null
set BSb=null
set MSb=null
set ucb=null
set scb=null
set icb=null
set ccb=null
set Ocb=null
set bcb=null
set pcb=null
set qcb=null
set ncb=null
set fcb=null
set Tcb=null
set Gcb=null
set hcb=null
set kcb=null
set xcb=null
set mcb=null
set Wcb=null
set Zcb=null
set Icb=null
set Acb=null
set Hcb=null
set Kcb=null
set Xcb=null
set Vcb=null
set Ncb=null
set wob=null
set rob=null
set tob=null
set Sob=null
set oob=null
set lob=null
set yob=null
set eob=null
set aob=null
set dob=null
set Rob=null
set Yob=null
set gob=null
set Fob=null
set job=null
set vob=null
set Qob=null
set Eob=null
set Uob=null
set Pob=null
set Dob=null
set Job=null
set Lob=null
set Cob=null
set Bob=null
set Mob=null
set uOb=null
set sOb=null
set iOb=null
set cOb=null
set OOb=null
set bOb=null
set pOb=null
set qOb=null
set nOb=null
set fOb=null
set TOb=null
set GOb=null
set hOb=null
set kOb=null
set xOb=null
set mOb=null
set WOb=null
set ZOb=null
set IOb=null
set AOb=null
set HOb=null
set KOb=null
set XOb=null
set VOb=null
set NOb=null
set wlb=null
set rlb=null
set tlb=null
set Slb=null
set olb=null
set llb=null
set ylb=null
set elb=null
set alb=null
set dlb=null
set Rlb=null
set Ylb=null
set glb=null
set Flb=null
set jlb=null
set vlb=null
set Qlb=null
set Elb=null
set Ulb=null
set Plb=null
set Dlb=null
set Jlb=null
set Llb=null
set Clb=null
set Blb=null
set Mlb=null
set ubb=null
set sbb=null
set ibb=null
set cbb=null
set Obb=null
set bbb=null
set pbb=null
set qbb=null
set nbb=null
set fbb=null
set Tbb=null
set Gbb=null
set hbb=null
set kbb=null
set xbb=null
set mbb=null
set Wbb=null
set Zbb=null
set Ibb=null
set Abb=null
set Hbb=null
set Kbb=null
set Xbb=null
set Vbb=null
set Nbb=null
set wyb=null
set ryb=null
set tyb=null
set Syb=null
set oyb=null
set lyb=null
set yyb=null
set eyb=null
set ayb=null
set dyb=null
set Ryb=null
set Yyb=null
set gyb=null
set Fyb=null
set jyb=null
set vyb=null
set Qyb=null
set Eyb=null
set Uyb=null
set Pyb=null
set Dyb=null
set Jyb=null
set Lyb=null
set Cyb=null
set Byb=null
set Myb=null
set upb=null
set spb=null
set ipb=null
set cpb=null
set Opb=null
set bpb=null
set ppb=null
set qpb=null
set npb=null
set fpb=null
set Tpb=null
set Gpb=null
set hpb=null
set kpb=null
set xpb=null
set mpb=null
set Wpb=null
set Zpb=null
set Ipb=null
set Apb=null
set Hpb=null
set Kpb=null
set Xpb=null
set Vpb=null
set Npb=null
set web=null
set reb=null
set teb=null
set Seb=null
set oeb=null
set leb=null
set yeb=null
set eeb=null
set aeb=null
set deb=null
set Reb=null
set Yeb=null
set geb=null
set Feb=null
set jeb=null
set veb=null
set Qeb=null
set Eeb=null
set Ueb=null
set Peb=null
set Deb=null
set Jeb=null
set Leb=null
set Ceb=null
set Beb=null
set Meb=null
set uqb=null
set sqb=null
set iqb=null
set cqb=null
set Oqb=null
set bqb=null
set pqb=null
set qqb=null
set nqb=null
set fqb=null
set Tqb=null
set Gqb=null
set hqb=null
set kqb=null
set xqb=null
set mqb=null
set Wqb=null
set Zqb=null
set Iqb=null
set Aqb=null
set Hqb=null
set Kqb=null
set Xqb=null
set Vqb=null
set Nqb=null
set wab=null
set rab=null
set tab=null
set Sab=null
set oab=null
set lab=null
set yab=null
set eab=null
set aab=null
set dab=null
set Rab=null
set Yab=null
set gab=null
set Fab=null
set jab=null
set vab=null
set Qab=null
set Eab=null
set Uab=null
set Pab=null
set Dab=null
set Jab=null
set Lab=null
set Cab=null
set Bab=null
set Mab=null
set unb=null
set snb=null
set inb=null
set cnb=null
set Onb=null
set bnb=null
set pnb=null
set qnb=null
set nnb=null
set fnb=null
set Tnb=null
set Gnb=null
set hnb=null
set knb=null
set xnb=null
set mnb=null
set Wnb=null
set Znb=null
set Inb=null
set Anb=null
set Hnb=null
set Knb=null
set Xnb=null
set Vnb=null
set Nnb=null
set wdb=null
set rdb=null
set tdb=null
set Sdb=null
set odb=null
set ldb=null
set ydb=null
set edb=null
set adb=null
set ddb=null
set Rdb=null
set Ydb=null
set gdb=null
set Fdb=null
set jdb=null
set vdb=null
set Qdb=null
set Edb=null
set Udb=null
set Pdb=null
set Ddb=null
set Jdb=null
set Ldb=null
set Cdb=null
set Bdb=null
set Mdb=null
set ufb=null
set sfb=null
set ifb=null
set cfb=null
set Ofb=null
set bfb=null
set pfb=null
set qfb=null
set nfb=null
set ffb=null
set Tfb=null
set Gfb=null
set hfb=null
set kfb=null
set xfb=null
set mfb=null
set Wfb=null
set Zfb=null
set Ifb=null
set Afb=null
set Hfb=null
set Kfb=null
set Xfb=null
set Vfb=null
set Nfb=null
set wRb=null
set rRb=null
set tRb=null
set SRb=null
set oRb=null
set lRb=null
set yRb=null
set eRb=null
set aRb=null
set dRb=null
set RRb=null
set YRb=null
set gRb=null
set FRb=null
set jRb=null
set vRb=null
set QRb=null
set ERb=null
set URb=null
set PRb=null
set DRb=null
set JRb=null
set LRb=null
set CRb=null
set BRb=null
set MRb=null
set uTb=null
set sTb=null
set iTb=null
set cTb=null
set OTb=null
set bTb=null
set pTb=null
set qTb=null
set nTb=null
set fTb=null
set TTb=null
set GTb=null
set hTb=null
set kTb=null
set xTb=null
set mTb=null
set WTb=null
set ZTb=null
set ITb=null
set ATb=null
set HTb=null
set KTb=null
set XTb=null
set VTb=null
set NTb=null
set wYb=null
set rYb=null
set tYb=null
set SYb=null
set oYb=null
set lYb=null
set yYb=null
set eYb=null
set aYb=null
set dYb=null
set RYb=null
set YYb=null
set gYb=null
set FYb=null
set jYb=null
set vYb=null
set QYb=null
set EYb=null
set UYb=null
set PYb=null
set DYb=null
set JYb=null
set LYb=null
set CYb=null
set BYb=null
set MYb=null
set uGb=null
set sGb=null
set iGb=null
set cGb=null
set OGb=null
set bGb=null
set pGb=null
set qGb=null
set nGb=null
set fGb=null
set TGb=null
set GGb=null
set hGb=null
set kGb=null
set xGb=null
set mGb=null
set WGb=null
set ZGb=null
set IGb=null
set AGb=null
set HGb=null
set KGb=null
set XGb=null
set VGb=null
set NGb=null
set wgb=null
set rgb=null
set tgb=null
set Sgb=null
set ogb=null
set lgb=null
set ygb=null
set egb=null
set agb=null
set dgb=null
set Rgb=null
set Ygb=null
set ggb=null
set Fgb=null
set jgb=null
set vgb=null
set Qgb=null
set Egb=null
set Ugb=null
set Pgb=null
set Dgb=null
set Jgb=null
set Lgb=null
set Cgb=null
set Bgb=null
set Mgb=null
set uhb=null
set shb=null
set ihb=null
set chb=null
set Ohb=null
set bhb=null
set phb=null
set qhb=null
set nhb=null
set fhb=null
set Thb=null
set Ghb=null
set hhb=null
set khb=null
set xhb=null
set mhb=null
set Whb=null
set Zhb=null
set Ihb=null
set Ahb=null
set Hhb=null
set Khb=null
set Xhb=null
set Vhb=null
set Nhb=null
set wFb=null
set rFb=null
set tFb=null
set SFb=null
set oFb=null
set lFb=null
set yFb=null
set eFb=null
set aFb=null
set dFb=null
set RFb=null
set YFb=null
set gFb=null
set FFb=null
set jFb=null
set vFb=null
set QFb=null
set EFb=null
set UFb=null
set PFb=null
set DFb=null
set JFb=null
set LFb=null
set CFb=null
set BFb=null
set MFb=null
set ukb=null
set skb=null
set ikb=null
set ckb=null
set Okb=null
set bkb=null
set pkb=null
set qkb=null
set akb=null
set nkb=null
set dkb=null
set fkb=null
set Rkb=null
set Tkb=null
set Ykb=null
set Gkb=null
set gkb=null
set hkb=null
set Fkb=null
set kkb=null
set jkb=null
set xkb=null
set vkb=null
set mkb=null
set Qkb=null
set Wkb=null
set Ekb=null
set Zkb=null
endfunction
function hAl takes nothing returns nothing
local string gAl
set qW=0
set gAl="via function reference SelectSkill, line 847"
set aW[qW]=gAl
set qW=qW+1
call sjb(GetTriggerUnit(),"when calling selectSkill in SelectSkill, line 848")
set qW=qW-1
endfunction
function hDy takes nothing returns boolean
local playerunitevent nDy
local code dDy
local playerunitevent fDy
local code RDy
local playerunitevent TDy
local code YDy
local playerunitevent GDy
local code gDy
set rF=null
set nDy=EVENT_PLAYER_UNIT_ATTACKED
set dDy=Msw
call emO(nDy,null,dDy,null)
set fDy=EVENT_PLAYER_HERO_LEVEL
set RDy=wtw
call emO(fDy,null,RDy,null)
set TDy=EVENT_PLAYER_UNIT_SPELL_EFFECT
set YDy=utw
call emO(TDy,null,YDy,null)
set GDy=EVENT_PLAYER_HERO_REVIVE_FINISH
set gDy=rtw
call emO(GDy,null,gDy,null)
set nDy=null
set fDy=null
set TDy=null
set GDy=null
return true
endfunction
function hFi takes nothing returns boolean
local playerunitevent GFi=EVENT_PLAYER_UNIT_SPELL_CAST
local code gFi=Uuw
call emO(GFi,null,gFi,null)
set GFi=null
return true
endfunction
function AQl takes string mml returns boolean
local trigger Qml
local integer Wml
local integer Eml
local string Zml
local integer Uml
local integer Iml
local integer Pml
local integer Aml
local string Dml
local integer Hml
local trigger Jml
local player Kml
local string Lml
local boolean Xml
local trigger Cml
local player Vml
local string Bml
local boolean Nml
local trigger Mml
local player wQl
local string uQl
local boolean rQl
local trigger sQl
local player tQl
local string iQl
local boolean SQl
local trigger cQl
local player oQl
local string OQl
local boolean lQl
local trigger bQl
local player yQl
local string pQl
local boolean eQl
local trigger qQl
local player aQl
local string nQl
local boolean dQl
local trigger fQl
local player RQl
local string TQl
local boolean YQl
local trigger GQl
local player gQl
local string hQl
local boolean FQl
local trigger kQl
local player jQl
local string xQl
local boolean vQl
local trigger mQl
local player QQl
local string WQl
local boolean EQl
local trigger ZQl
local boolexpr UQl
local playerunitevent IQl
local code PQl
set aW[qW]=mml
set qW=qW+1
set Eml=$6F30304E
set Zml="when calling asList in OldMBFunction, line 12"
set aW[qW]=Zml
set qW=qW+1
set Uml=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(Uml,Eml,"when calling add in LinkedList, line 412")
set qW=qW-1
set Iml=$6F30304B
set Pml=$6F303037
set Aml=$6F303243
set Dml="when calling asList in OldMBFunction, line 13"
set aW[qW]=Dml
set qW=qW+1
set Hml=kHw("when calling new_LinkedList in LinkedList, line 410")
call x7s(Hml,Iml,"when calling add in LinkedList, line 412")
call x7s(Hml,Pml,"when calling add in LinkedList, line 412")
call x7s(Hml,Aml,"when calling add in LinkedList, line 412")
set qW=qW-1
set Qml=CreateTrigger()
set Wml=0
loop
exitwhen Wml>3
set Jml=Qml
set Kml=Player(Wml)
set Lml="-tg"
set Xml=true
call TriggerRegisterPlayerChatEvent(Jml,Kml,Lml,Xml)
set Cml=Qml
set Vml=Player(Wml)
set Bml="-gm"
set Nml=true
call TriggerRegisterPlayerChatEvent(Cml,Vml,Bml,Nml)
set Mml=Qml
set wQl=Player(Wml)
set uQl="-gn"
set rQl=true
call TriggerRegisterPlayerChatEvent(Mml,wQl,uQl,rQl)
set sQl=Qml
set tQl=Player(Wml)
set iQl="-gf"
set SQl=true
call TriggerRegisterPlayerChatEvent(sQl,tQl,iQl,SQl)
set cQl=Qml
set oQl=Player(Wml)
set OQl="-re"
set lQl=true
call TriggerRegisterPlayerChatEvent(cQl,oQl,OQl,lQl)
set bQl=Qml
set yQl=Player(Wml)
set pQl="-hk"
set eQl=true
call TriggerRegisterPlayerChatEvent(bQl,yQl,pQl,eQl)
set qQl=Qml
set aQl=Player(Wml)
set nQl="-gh"
set dQl=true
call TriggerRegisterPlayerChatEvent(qQl,aQl,nQl,dQl)
set fQl=Qml
set RQl=Player(Wml)
set TQl="-sk"
set YQl=true
call TriggerRegisterPlayerChatEvent(fQl,RQl,TQl,YQl)
set GQl=Qml
set gQl=Player(Wml)
set hQl="-ng"
set FQl=true
call TriggerRegisterPlayerChatEvent(GQl,gQl,hQl,FQl)
set kQl=Qml
set jQl=Player(Wml)
set xQl="-gs"
set vQl=true
call TriggerRegisterPlayerChatEvent(kQl,jQl,xQl,vQl)
set mQl=Qml
set QQl=Player(Wml)
set WQl="-gpm"
set EQl=true
call TriggerRegisterPlayerChatEvent(mQl,QQl,WQl,EQl)
set Wml=Wml+1
endloop
set ZQl=Qml
set UQl=Condition(W0w)
call TriggerAddCondition(ZQl,UQl)
set IQl=EVENT_PLAYER_UNIT_SELL
set PQl=E0w
call emO(IQl,null,PQl,null)
set qW=qW-1
set Qml=null
set Jml=null
set Kml=null
set Cml=null
set Vml=null
set Mml=null
set wQl=null
set sQl=null
set tQl=null
set cQl=null
set oQl=null
set bQl=null
set yQl=null
set qQl=null
set aQl=null
set fQl=null
set RQl=null
set GQl=null
set gQl=null
set kQl=null
set jQl=null
set mQl=null
set QQl=null
set ZQl=null
set UQl=null
set IQl=null
return true
endfunction
function hGl takes nothing returns boolean
set qW=0
return AQl("via function reference OldMBFunction, line 1")
endfunction
function hGt takes nothing returns nothing
local unit KYt=GetTriggerUnit()
local unit VYt=KYt
local integer LYt=GetUnitTypeId(VYt)
local unit BYt=KYt
local player XYt=GetOwningPlayer(BYt)
local player NYt=XYt
local integer CYt=GetPlayerId(NYt)
local sound MYt
local unit wGt
local real uGt
local real rGt
local real sGt
local unit tGt
local real iGt
local real SGt
local real cGt
local trigger oGt
local unit OGt
local real lGt
local real bGt
local real yGt
local trigger pGt
local trigger eGt
local trigger qGt
local unit aGt
local real nGt
local real dGt
local real fGt
local trigger RGt
local trigger TGt
local unit YGt
local unit GGt
local real gGt
if LYt==$6F667274 then
set MYt=fh
if MYt!=null then
call StartSound(MYt)
endif
set wGt=KYt
set uGt=70.
set rGt=70.
set sGt=70.
call SetUnitScale(wGt,uGt*.01,rGt*.01,sGt*.01)
set r[CYt]=$5530304C
endif
if LYt==$6F626172 then
set tGt=KYt
set iGt=90.
set SGt=90.
set cGt=90.
call SetUnitScale(tGt,iGt*.01,SGt*.01,cGt*.01)
set oGt=fG
call EnableTrigger(oGt)
call SetPlayerTechResearched(XYt,$52303249,1)
call SetPlayerTechResearched(Player(CYt+4),$52303249,1)
endif
if LYt==$6E636231 then
set OGt=KYt
set lGt=90.
set bGt=90.
set yGt=90.
call SetUnitScale(OGt,lGt*.01,bGt*.01,yGt*.01)
call SetPlayerTechResearched(XYt,$5230334B,1)
call SetPlayerTechResearched(Player(CYt+4),$5230334B,1)
set pGt=bT
call EnableTrigger(pGt)
set eGt=yT
call EnableTrigger(eGt)
endif
if LYt==$6E636233 then
call RemoveUnitFromStock(O[CYt],A[CYt])
call RemoveUnitFromStock(b[CYt],A[CYt])
call RemoveUnitFromStock(l[CYt],A[CYt])
set A[CYt]=$6E736B6F
call AddUnitToStock(O[CYt],A[CYt],1,3)
call AddUnitToStock(b[CYt],A[CYt],1,3)
call AddUnitToStock(l[CYt],A[CYt],1,3)
endif
if LYt==$6E303144 then
call RemoveUnitFromStock(O[CYt],D[CYt])
call RemoveUnitFromStock(b[CYt],D[CYt])
call RemoveUnitFromStock(l[CYt],D[CYt])
set D[CYt]=$78303171
call AddUnitToStock(O[CYt],D[CYt],1,3)
call AddUnitToStock(b[CYt],D[CYt],1,3)
call AddUnitToStock(l[CYt],D[CYt],1,3)
endif
if LYt==$6E636232 then
call RemoveUnitFromStock(O[CYt],H[CYt])
call RemoveUnitFromStock(b[CYt],H[CYt])
call RemoveUnitFromStock(l[CYt],H[CYt])
set H[CYt]=$6F646B74
call AddUnitToStock(O[CYt],H[CYt],1,3)
call AddUnitToStock(b[CYt],H[CYt],1,3)
call AddUnitToStock(l[CYt],H[CYt],1,3)
endif
if LYt==$6F616C74 then
set qGt=Jh
call EnableTrigger(qGt)
call RemoveUnitFromStock(O[CYt],H[CYt])
call RemoveUnitFromStock(b[CYt],H[CYt])
call RemoveUnitFromStock(l[CYt],H[CYt])
set H[CYt]=$6E303232
call AddUnitToStock(O[CYt],H[CYt],1,3)
call AddUnitToStock(b[CYt],H[CYt],1,3)
call AddUnitToStock(l[CYt],H[CYt],1,3)
endif
if LYt==$6E636230 then
set J[CYt]=$6F737731
endif
if LYt==$6F626561 then
set L[CYt]=$6F6B6F64
endif
if LYt==$6E706772 then
set aGt=KYt
set nGt=100.
set dGt=100.
set fGt=100.
call SetUnitScale(aGt,nGt*.01,dGt*.01,fGt*.01)
call SetPlayerTechResearched(XYt,$52303437,1)
call SetPlayerTechResearched(Player(CYt+4),$52303437,1)
endif
if LYt==$6E303234 then
set Eh=KYt
set RGt=Zh
call EnableTrigger(RGt)
set TGt=Uh
call EnableTrigger(TGt)
set YGt=Eh
set gGt=GetUnitX(YGt)
set GGt=Eh
set Ah=jVl(gGt,GetUnitY(GGt),0.,"0",13.,255,230,0,255)
endif
set KYt=null
set XYt=null
set VYt=null
set BYt=null
set NYt=null
set MYt=null
set wGt=null
set tGt=null
set oGt=null
set OGt=null
set pGt=null
set eGt=null
set qGt=null
set aGt=null
set RGt=null
set TGt=null
set YGt=null
set GGt=null
endfunction
function hIy takes nothing returns boolean
return true
endfunction
function cxu takes string oju returns nothing
local unit Oju
local integer lju
local integer bju
local integer yju
local integer pju
local integer eju
local integer qju
local unit aju
local unit nju
local unit dju
local unit fju
local unit Rju
local unit Tju
local integer Yju
local string Gju
local integer gju
local string hju
local integer Fju
local integer kju
local unit jju
local integer xju
local integer vju
local string mju
local integer Qju
local string Wju
local integer Eju
local integer Zju
local unit Uju
local integer Iju
local integer Pju
local string Aju
local integer Dju
local string Hju
local integer Jju
local integer Kju
local unit Lju
local integer Xju
local integer Cju
local string Vju
local integer Bju
local string Nju
local integer Mju
local integer wxu
local unit uxu
local integer rxu
local boolean sxu
local boolean txu
local boolean ixu
local boolean Sxu
set aW[qW]=oju
set qW=qW+1
set Oju=GetKillingUnit()
set aju=Oju
if GetUnitTypeId(aju)==$6E30304F then
set sxu=true
else
set nju=Oju
set sxu=GetUnitTypeId(nju)==$6E303050
endif
if sxu then
set txu=true
else
set dju=Oju
set txu=GetUnitTypeId(dju)==$78303177
endif
if txu then
set ixu=true
else
set fju=Oju
set ixu=GetUnitTypeId(fju)==$78303179
endif
if ixu and UnitItemInSlot(Oju,5)==null then
set Rju=Oju
set Sxu=UnitAlive(Rju)==true
else
set Sxu=false
endif
if Sxu then
set Tju=Oju
set lju=GetPlayerTechCount(GetOwningPlayer(Tju),$524D316A,true)
if lju>0 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIsm\\AIsmTarget.mdl",Oju,"origin"))
set bju=lju
if bju==1 then
if jWu(Oju)<6 then
set Yju=al
set Gju="when calling shuffle in BattleTrophies, line 77"
set aW[qW]=Gju
set qW=qW+1
if ok[Yju]==0 then
if Yju==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Yju,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set gju=al
set hju="when calling getFirst in BattleTrophies, line 78"
set aW[qW]=hju
set qW=qW+1
if ok[gju]==0 then
if gju==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set kju=gju
set Fju=Hv[Kv[Vv[kju]]]
set qW=qW-1
set yju=Fju
set jju=Oju
set xju=yju
call UnitAddItemById(jju,xju)
endif
elseif bju==2 then
if jWu(Oju)<6 then
set vju=nl
set mju="when calling shuffle in BattleTrophies, line 82"
set aW[qW]=mju
set qW=qW+1
if ok[vju]==0 then
if vju==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(vju,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Qju=nl
set Wju="when calling getFirst in BattleTrophies, line 83"
set aW[qW]=Wju
set qW=qW+1
if ok[Qju]==0 then
if Qju==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Zju=Qju
set Eju=Hv[Kv[Vv[Zju]]]
set qW=qW-1
set pju=Eju
set Uju=Oju
set Iju=pju
call UnitAddItemById(Uju,Iju)
endif
elseif bju==3 then
if jWu(Oju)<6 then
set Pju=dl
set Aju="when calling shuffle in BattleTrophies, line 87"
set aW[qW]=Aju
set qW=qW+1
if ok[Pju]==0 then
if Pju==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Pju,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Dju=dl
set Hju="when calling getFirst in BattleTrophies, line 88"
set aW[qW]=Hju
set qW=qW+1
if ok[Dju]==0 then
if Dju==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set Kju=Dju
set Jju=Hv[Kv[Vv[Kju]]]
set qW=qW-1
set eju=Jju
set Lju=Oju
set Xju=eju
call UnitAddItemById(Lju,Xju)
endif
elseif bju==4 then
if jWu(Oju)<6 then
set Cju=fl
set Vju="when calling shuffle in BattleTrophies, line 92"
set aW[qW]=Vju
set qW=qW+1
if ok[Cju]==0 then
if Cju==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(Cju,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set Bju=fl
set Nju="when calling getFirst in BattleTrophies, line 93"
set aW[qW]=Nju
set qW=qW+1
if ok[Bju]==0 then
if Bju==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set wxu=Bju
set Mju=Hv[Kv[Vv[wxu]]]
set qW=qW-1
set qju=Mju
set uxu=Oju
set rxu=qju
call UnitAddItemById(uxu,rxu)
endif
endif
endif
endif
set qW=qW-1
set Oju=null
set aju=null
set nju=null
set dju=null
set fju=null
set Rju=null
set Tju=null
set jju=null
set Uju=null
set Lju=null
set uxu=null
endfunction
function hJo takes nothing returns nothing
set qW=0
call cxu("via function reference BattleTrophies, line 103")
endfunction
function hlr takes string gir returns nothing
local trigger hir
local unit Fir
local player kir
local player jir
local integer xir
local real vir
local real mir
local integer Qir
local integer Wir
local integer Eir
local integer Zir
local integer Uir
local integer Iir
local integer Pir
local integer Air
local integer Dir
local integer Hir
local integer Jir
local real Kir
local real Lir
local integer Xir
local integer Cir
local integer Vir
local integer Bir
local integer Nir
local integer Mir
local integer wSr
local integer uSr
local integer rSr
local integer sSr
local integer tSr
local integer iSr
local unit SSr
local player cSr
local player oSr
local trigger OSr
local unit lSr
local sound bSr
local unit ySr
local player pSr
local boolean eSr
local player qSr
local integer aSr
local player nSr
local playerstate dSr
local integer fSr
local player RSr
local playerstate TSr
local string YSr
local real GSr
local string gSr
local real hSr
local unit FSr
local player kSr
local boolean jSr
local unit xSr
local unit vSr
local unit mSr
local unit QSr
local integer WSr
local unit ESr
local integer ZSr
local unit USr
local integer ISr
local integer PSr
local unit ASr
local unit DSr
local integer HSr
local unit JSr
local integer KSr
local unit LSr
local integer XSr
local integer CSr
local unit VSr
local unit BSr
local integer NSr
local unit MSr
local integer wcr
local unit ucr
local integer rcr
local integer scr
local unit tcr
local unit icr
local integer Scr
local unit ccr
local integer ocr
local unit Ocr
local integer lcr
local integer bcr
local unit ycr
local unit pcr
local integer ecr
local unit qcr
local integer acr
local unit ncr
local integer dcr
local unit fcr
local integer Rcr
local integer Tcr
local unit Ycr
local integer Gcr
local unit gcr
local integer hcr
local integer Fcr
local unit kcr
local unit jcr
local integer xcr
local unit vcr
local unit mcr
local integer Qcr
local unit Wcr
local unit Ecr
local integer Zcr
local unit Ucr
local integer Icr
local unit Pcr
local integer Acr
local integer Dcr
local unit Hcr
local unit Jcr
local integer Kcr
local unit Lcr
local integer Xcr
local unit Ccr
local integer Vcr
local integer Bcr
local unit Ncr
local unit Mcr
local integer wor
local unit uor
local integer ror
local unit sor
local integer tor
local integer ior
local unit Sor
local unit cor
local integer oor
local unit Oor
local integer lor
local unit bor
local integer yor
local integer por
local unit eor
local unit qor
local integer aor
local unit nor
local integer dor
local unit Ror
local integer Tor
local integer Yor
local unit Gor
local unit gor
local unit hor
local integer For
local unit kor
local unit jor
local integer xor
local unit vor
local integer mor
local unit Qor
local integer Wor
local integer Eor
local unit Zor
local unit Uor
local integer Ior
local unit Por
local integer Aor
local unit Dor
local integer Hor
local integer Jor
local unit Kor
local unit Lor
local integer Xor
local unit Cor
local integer Vor
local unit Bor
local integer Nor
local integer Mor
local unit wOr
local unit uOr
local integer rOr
local unit sOr
local integer tOr
local unit iOr
local integer SOr
local integer cOr
local unit oOr
local unit OOr
local integer lOr
local unit bOr
local integer yOr
local unit pOr
local integer eOr
local unit qOr
local integer aOr
local integer nOr
local unit dOr
local integer fOr
local unit ROr
local integer TOr
local integer YOr
local unit GOr
local unit gOr
local integer hOr
local unit FOr
local unit kOr
local integer jOr
local unit xOr
local unit vOr
local integer mOr
local unit QOr
local integer WOr
local unit EOr
local integer ZOr
local integer UOr
local unit IOr
local unit POr
local integer AOr
local unit DOr
local integer HOr
local unit JOr
local integer KOr
local integer LOr
local unit XOr
local unit COr
local integer VOr
local unit BOr
local integer NOr
local unit MOr
local integer wlr
local integer ulr
local unit rlr
local unit slr
local integer tlr
local unit ilr
local integer Slr
local unit clr
local integer olr
local integer Olr
local unit llr
local unit blr
local integer ylr
local unit plr
local integer elr
local unit qlr
local integer alr
local integer nlr
local string dlr
local integer flr
local real Rlr
local integer Tlr
local string Ylr
local player Glr
local playerstate glr
set aW[qW]=gir
set qW=qW+1
set hir=GetTriggeringTrigger()
set Fir=GetEnteringUnit()
set SSr=Fir
set kir=GetOwningPlayer(SSr)
set cSr=kir
set jir=Player(GetPlayerId(cSr)-4)
set oSr=jir
set xir=GetPlayerId(oSr)
set OSr=hir
call DisableTrigger(OSr)
set lSr=G[3]
if GetOwningPlayer(lSr)==Player(15) then
set bSr=bj_questUpdatedSound
call StartSound(bSr)
set ySr=G[3]
set pSr=jir
set eSr=false
call SetUnitOwner(ySr,pSr,eSr)
call UuS(G[3],75)
set qSr=jir
set aSr=75
set nSr=qSr
set dSr=PLAYER_STATE_RESOURCE_GOLD
set fSr=aSr
set Glr=nSr
set glr=dSr
set RSr=nSr
set TSr=dSr
call SetPlayerState(Glr,glr,GetPlayerState(RSr,TSr)+fSr)
set YSr=Aw[xir]+GetPlayerName(jir)+"|r"+" has captured neutral building!"
set GSr=10.
set gSr=YSr
set hSr=GSr
call DisplayTimedTextToPlayer(IY,0.,0.,hSr,gSr)
set hr[xir]=hr[xir]+75
set Fr[xir]=Fr[xir]+75
set Vr[xir]=Vr[xir]+75
else
set FSr=G[3]
set kSr=jir
set jSr=false
call SetUnitOwner(FSr,kSr,jSr)
endif
if jir==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set xSr=G[3]
set vir=GetUnitX(xSr)
set vSr=G[3]
set mir=GetUnitY(vSr)
set g[3]=CreateUnit(Ud,$6E303349,vir,mir,0.)
set mSr=G[3]
if GetUnitTypeId(mSr)==$6E676164 then
set QSr=G[3]
set WSr=$41303042
set Qir=GetUnitAbilityLevel(QSr,WSr)
set ESr=g[3]
set ZSr=$41313053
call UnitAddAbility(ESr,ZSr)
set USr=g[3]
set ISr=$41313053
set PSr=Qir
call SetUnitAbilityLevel(USr,ISr,PSr)
endif
set ASr=G[3]
if GetUnitTypeId(ASr)==$6E64727A then
set DSr=G[3]
set HSr=$41303852
set Wir=GetUnitAbilityLevel(DSr,HSr)
set JSr=g[3]
set KSr=$41313049
call UnitAddAbility(JSr,KSr)
set LSr=g[3]
set XSr=$41313049
set CSr=Wir
call SetUnitAbilityLevel(LSr,XSr,CSr)
endif
set VSr=G[3]
if GetUnitTypeId(VSr)==$6E647267 then
set BSr=G[3]
set NSr=$41303856
set Eir=GetUnitAbilityLevel(BSr,NSr)
set MSr=g[3]
set wcr=$41313054
call UnitAddAbility(MSr,wcr)
set ucr=g[3]
set rcr=$41313054
set scr=Eir
call SetUnitAbilityLevel(ucr,rcr,scr)
endif
set tcr=G[3]
if GetUnitTypeId(tcr)==$6E676D65 then
set icr=G[3]
set Scr=$4130384F
set Zir=GetUnitAbilityLevel(icr,Scr)
set ccr=g[3]
set ocr=$4131304A
call UnitAddAbility(ccr,ocr)
set Ocr=g[3]
set lcr=$4131304A
set bcr=Zir
call SetUnitAbilityLevel(Ocr,lcr,bcr)
endif
set ycr=G[3]
if GetUnitTypeId(ycr)==$6E647272 then
set pcr=G[3]
set ecr=$41303858
set Uir=GetUnitAbilityLevel(pcr,ecr)
set qcr=G[3]
set acr=$41303859
set Iir=GetUnitAbilityLevel(qcr,acr)
set ncr=g[3]
set dcr=$4131304B
call UnitAddAbility(ncr,dcr)
set fcr=g[3]
set Rcr=$4131304B
set Tcr=Uir
call SetUnitAbilityLevel(fcr,Rcr,Tcr)
set Ycr=g[3]
set Gcr=$4131304C
call UnitAddAbility(Ycr,Gcr)
set gcr=g[3]
set hcr=$4131304C
set Fcr=Iir
call SetUnitAbilityLevel(gcr,hcr,Fcr)
endif
set kcr=G[3]
if GetUnitTypeId(kcr)==$6E6D7232 then
set jcr=g[3]
set xcr=$41303853
call UnitAddAbility(jcr,xcr)
endif
set vcr=G[3]
if GetUnitTypeId(vcr)==$6E676F6C then
set mcr=g[3]
set Qcr=$41303853
call UnitAddAbility(mcr,Qcr)
endif
set Wcr=G[3]
if GetUnitTypeId(Wcr)==$6E64726F then
set Ecr=G[3]
set Zcr=$41303855
set Pir=GetUnitAbilityLevel(Ecr,Zcr)
set Ucr=g[3]
set Icr=$4131304E
call UnitAddAbility(Ucr,Icr)
set Pcr=g[3]
set Acr=$4131304E
set Dcr=Pir
call SetUnitAbilityLevel(Pcr,Acr,Dcr)
endif
set Hcr=G[3]
if GetUnitTypeId(Hcr)==$6E776774 then
set Jcr=G[3]
set Kcr=$41303850
set Air=GetUnitAbilityLevel(Jcr,Kcr)
set Lcr=g[3]
set Xcr=$4131304F
call UnitAddAbility(Lcr,Xcr)
set Ccr=g[3]
set Vcr=$4131304F
set Bcr=Air
call SetUnitAbilityLevel(Ccr,Vcr,Bcr)
endif
set Ncr=G[3]
if GetUnitTypeId(Ncr)==$6E647275 then
set Mcr=G[3]
set wor=$4130384E
set Dir=GetUnitAbilityLevel(Mcr,wor)
set uor=g[3]
set ror=$41313050
call UnitAddAbility(uor,ror)
set sor=g[3]
set tor=$41313050
set ior=Dir
call SetUnitAbilityLevel(sor,tor,ior)
endif
set Sor=G[3]
if GetUnitTypeId(Sor)==$6E666F68 then
set cor=G[3]
set oor=$4130384D
set Hir=GetUnitAbilityLevel(cor,oor)
set Oor=g[3]
set lor=$41313051
call UnitAddAbility(Oor,lor)
set bor=g[3]
set yor=$41313051
set por=Hir
call SetUnitAbilityLevel(bor,yor,por)
endif
set eor=G[3]
if GetUnitTypeId(eor)==$6E64726B then
set qor=G[3]
set aor=$41303851
set Jir=GetUnitAbilityLevel(qor,aor)
set nor=g[3]
set dor=$41313052
call UnitAddAbility(nor,dor)
set Ror=g[3]
set Tor=$41313052
set Yor=Jir
call SetUnitAbilityLevel(Ror,Tor,Yor)
endif
endif
if jir!=Ud and g[3]!=null then
call RemoveUnit(g[3])
set g[3]=null
endif
if jir==Ud and fq==true then
set Gor=G[3]
set Kir=GetUnitX(Gor)
set gor=G[3]
set Lir=GetUnitY(gor)
set h[3]=CreateUnit(Ud,$6E303349,Kir,Lir,0.)
set hor=h[3]
set For=$4545564F
call UnitAddAbility(hor,For)
set kor=G[3]
if GetUnitTypeId(kor)==$6E676164 then
set jor=G[3]
set xor=$41303042
set Xir=GetUnitAbilityLevel(jor,xor)
set vor=h[3]
set mor=$41313641
call UnitAddAbility(vor,mor)
set Qor=h[3]
set Wor=$41313641
set Eor=Xir
call SetUnitAbilityLevel(Qor,Wor,Eor)
endif
set Zor=G[3]
if GetUnitTypeId(Zor)==$6E64727A then
set Uor=G[3]
set Ior=$41303852
set Cir=GetUnitAbilityLevel(Uor,Ior)
set Por=h[3]
set Aor=$41313630
call UnitAddAbility(Por,Aor)
set Dor=h[3]
set Hor=$41313630
set Jor=Cir
call SetUnitAbilityLevel(Dor,Hor,Jor)
endif
set Kor=G[3]
if GetUnitTypeId(Kor)==$6E647267 then
set Lor=G[3]
set Xor=$41303856
set Vir=GetUnitAbilityLevel(Lor,Xor)
set Cor=h[3]
set Vor=$41313642
call UnitAddAbility(Cor,Vor)
set Bor=h[3]
set Nor=$41313642
set Mor=Vir
call SetUnitAbilityLevel(Bor,Nor,Mor)
endif
set wOr=G[3]
if GetUnitTypeId(wOr)==$6E676D65 then
set uOr=G[3]
set rOr=$4130384F
set Bir=GetUnitAbilityLevel(uOr,rOr)
set sOr=h[3]
set tOr=$41313631
call UnitAddAbility(sOr,tOr)
set iOr=h[3]
set SOr=$41313631
set cOr=Bir
call SetUnitAbilityLevel(iOr,SOr,cOr)
endif
set oOr=G[3]
if GetUnitTypeId(oOr)==$6E647272 then
set OOr=G[3]
set lOr=$41303858
set Nir=GetUnitAbilityLevel(OOr,lOr)
set bOr=G[3]
set yOr=$41303859
set Mir=GetUnitAbilityLevel(bOr,yOr)
set pOr=h[3]
set eOr=$41313632
call UnitAddAbility(pOr,eOr)
set qOr=h[3]
set aOr=$41313633
set nOr=Nir
call SetUnitAbilityLevel(qOr,aOr,nOr)
set dOr=h[3]
set fOr=$41313632
call UnitAddAbility(dOr,fOr)
set ROr=h[3]
set TOr=$41313633
set YOr=Mir
call SetUnitAbilityLevel(ROr,TOr,YOr)
endif
set GOr=G[3]
if GetUnitTypeId(GOr)==$6E6D7232 then
set gOr=h[3]
set hOr=$41303853
call UnitAddAbility(gOr,hOr)
endif
set FOr=G[3]
if GetUnitTypeId(FOr)==$6E676F6C then
set kOr=h[3]
set jOr=$41303853
call UnitAddAbility(kOr,jOr)
endif
set xOr=G[3]
if GetUnitTypeId(xOr)==$6E64726F then
set vOr=G[3]
set mOr=$41303855
set wSr=GetUnitAbilityLevel(vOr,mOr)
set QOr=h[3]
set WOr=$41313635
call UnitAddAbility(QOr,WOr)
set EOr=h[3]
set ZOr=$41313635
set UOr=wSr
call SetUnitAbilityLevel(EOr,ZOr,UOr)
endif
set IOr=G[3]
if GetUnitTypeId(IOr)==$6E776774 then
set POr=G[3]
set AOr=$41303850
set uSr=GetUnitAbilityLevel(POr,AOr)
set DOr=h[3]
set HOr=$41313636
call UnitAddAbility(DOr,HOr)
set JOr=h[3]
set KOr=$41313636
set LOr=uSr
call SetUnitAbilityLevel(JOr,KOr,LOr)
endif
set XOr=G[3]
if GetUnitTypeId(XOr)==$6E647275 then
set COr=G[3]
set VOr=$4130384E
set rSr=GetUnitAbilityLevel(COr,VOr)
set BOr=h[3]
set NOr=$41313637
call UnitAddAbility(BOr,NOr)
set MOr=h[3]
set wlr=$41313637
set ulr=rSr
call SetUnitAbilityLevel(MOr,wlr,ulr)
endif
set rlr=G[3]
if GetUnitTypeId(rlr)==$6E666F68 then
set slr=G[3]
set tlr=$4130384D
set sSr=GetUnitAbilityLevel(slr,tlr)
set ilr=h[3]
set Slr=$41313638
call UnitAddAbility(ilr,Slr)
set clr=h[3]
set olr=$41313638
set Olr=sSr
call SetUnitAbilityLevel(clr,olr,Olr)
endif
set llr=G[3]
if GetUnitTypeId(llr)==$6E64726B then
set blr=G[3]
set ylr=$41303851
set tSr=GetUnitAbilityLevel(blr,ylr)
set plr=h[3]
set elr=$41313639
call UnitAddAbility(plr,elr)
set qlr=h[3]
set alr=$41313639
set nlr=tSr
call SetUnitAbilityLevel(qlr,alr,nlr)
endif
endif
if jir!=Ud and h[3]!=null then
call RemoveUnit(h[3])
set h[3]=null
endif
set dlr="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 488"
set aW[qW]=dlr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set flr=fF
set RF[flr]=737
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 488")
set flr=0
endif
else
set dF=dF-1
set flr=nF[dF]
set RF[flr]=737
endif
set qW=qW-1
set iSr=flr
set Qm[iSr]=hir
set Rlr=2.
set Tlr=iSr
set Ylr="when calling doAfter in NeutralStructures, line 488"
set aW[qW]=Ylr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Rlr,Tlr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set hir=null
set Fir=null
set kir=null
set jir=null
set SSr=null
set cSr=null
set oSr=null
set OSr=null
set lSr=null
set bSr=null
set ySr=null
set pSr=null
set qSr=null
set nSr=null
set dSr=null
set RSr=null
set TSr=null
set FSr=null
set kSr=null
set xSr=null
set vSr=null
set mSr=null
set QSr=null
set ESr=null
set USr=null
set ASr=null
set DSr=null
set JSr=null
set LSr=null
set VSr=null
set BSr=null
set MSr=null
set ucr=null
set tcr=null
set icr=null
set ccr=null
set Ocr=null
set ycr=null
set pcr=null
set qcr=null
set ncr=null
set fcr=null
set Ycr=null
set gcr=null
set kcr=null
set jcr=null
set vcr=null
set mcr=null
set Wcr=null
set Ecr=null
set Ucr=null
set Pcr=null
set Hcr=null
set Jcr=null
set Lcr=null
set Ccr=null
set Ncr=null
set Mcr=null
set uor=null
set sor=null
set Sor=null
set cor=null
set Oor=null
set bor=null
set eor=null
set qor=null
set nor=null
set Ror=null
set Gor=null
set gor=null
set hor=null
set kor=null
set jor=null
set vor=null
set Qor=null
set Zor=null
set Uor=null
set Por=null
set Dor=null
set Kor=null
set Lor=null
set Cor=null
set Bor=null
set wOr=null
set uOr=null
set sOr=null
set iOr=null
set oOr=null
set OOr=null
set bOr=null
set pOr=null
set qOr=null
set dOr=null
set ROr=null
set GOr=null
set gOr=null
set FOr=null
set kOr=null
set xOr=null
set vOr=null
set QOr=null
set EOr=null
set IOr=null
set POr=null
set DOr=null
set JOr=null
set XOr=null
set COr=null
set BOr=null
set MOr=null
set rlr=null
set slr=null
set ilr=null
set clr=null
set llr=null
set blr=null
set plr=null
set qlr=null
set Glr=null
set glr=null
endfunction
function hJy takes nothing returns nothing
set qW=0
call hlr("via function reference NeutralStructures, line 1737")
endfunction
function hLO takes nothing returns boolean
local playerunitevent GLO=EVENT_PLAYER_UNIT_SPELL_CAST
local code gLO=Yuw
call emO(GLO,null,gLO,null)
set GLO=null
return true
endfunction
function hPy takes nothing returns boolean
local trigger dPy
local playerunitevent fPy
local trigger RPy
local playerunitevent TPy
local integer YPy
local trigger GPy
local code gPy
set hl=CreateTrigger()
set dPy=hl
set fPy=EVENT_PLAYER_UNIT_ATTACKED
set RPy=dPy
set TPy=fPy
set YPy=0
loop
call TriggerRegisterPlayerUnitEvent(RPy,Player(YPy),TPy,null)
set YPy=YPy+1
exitwhen YPy==bj_MAX_PLAYER_SLOTS
endloop
set GPy=hl
set gPy=p3
call TriggerAddAction(GPy,gPy)
set dPy=null
set fPy=null
set RPy=null
set TPy=null
set GPy=null
return true
endfunction
function yfe takes string wfe returns nothing
local unit ufe
local integer rfe
local unit sfe
local integer tfe
local unit ife
local integer Sfe
local string cfe
local integer ofe
local real Ofe
local integer lfe
local string bfe
set aW[qW]=wfe
set qW=qW+1
set ufe=GetSpellAbilityUnit()
set sfe=ufe
set tfe=$41313855
call UnitAddAbility(sfe,tfe)
set ife=ufe
set Sfe=$41313856
call UnitRemoveAbility(ife,Sfe)
set cfe="when calling alloc_CallbackSingle_doAfter_Garfang in Garfang, line 185"
set aW[qW]=cfe
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ofe=fF
set RF[ofe]=712
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Garfang.","when calling error in Garfang, line 185")
set ofe=0
endif
else
set dF=dF-1
set ofe=nF[dF]
set RF[ofe]=712
endif
set qW=qW-1
set rfe=ofe
set ex[rfe]=ufe
set Ofe=2.
set lfe=rfe
set bfe="when calling doAfter in Garfang, line 185"
set aW[qW]=bfe
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Ofe,lfe,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set ufe=null
set sfe=null
set ife=null
endfunction
function hRw takes nothing returns nothing
set qW=0
call yfe("via function reference Garfang, line 220")
endfunction
function hSS takes nothing returns boolean
return true
endfunction
function xUl takes integer eUl,integer qUl,integer aUl,integer nUl,integer dUl,integer fUl,string RUl returns nothing
local integer TUl
local integer YUl
local integer GUl
local integer gUl
local integer hUl
local integer FUl
local string kUl
local integer jUl
set aW[qW]=RUl
set qW=qW+1
if ok[eUl]==0 then
if eUl==0 then
call L8c("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call L8c("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
set TUl=eUl
set YUl=qUl
set GUl=aUl
set gUl=nUl
set hUl=dUl
set FUl=fUl
set kUl="when calling add in LinkedList, line 38"
set aW[qW]=kUl
set qW=qW+1
set jUl=jMe(YUl,Jv[Vv[TUl]],Vv[TUl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[TUl]]]=jUl
set Jv[Vv[TUl]]=jUl
set Bv[TUl]=Bv[TUl]+1
set jUl=jMe(GUl,Jv[Vv[TUl]],Vv[TUl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[TUl]]]=jUl
set Jv[Vv[TUl]]=jUl
set Bv[TUl]=Bv[TUl]+1
set jUl=jMe(gUl,Jv[Vv[TUl]],Vv[TUl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[TUl]]]=jUl
set Jv[Vv[TUl]]=jUl
set Bv[TUl]=Bv[TUl]+1
set jUl=jMe(hUl,Jv[Vv[TUl]],Vv[TUl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[TUl]]]=jUl
set Jv[Vv[TUl]]=jUl
set Bv[TUl]=Bv[TUl]+1
set jUl=jMe(FUl,Jv[Vv[TUl]],Vv[TUl],"when calling new_LLEntry in LinkedList, line 40")
set Kv[Jv[Vv[TUl]]]=jUl
set Jv[Vv[TUl]]=jUl
set Bv[TUl]=Bv[TUl]+1
set qW=qW-1
set qW=qW-1
endfunction
function e1o takes string O1o returns boolean
local trigger l1o
local trigger b1o
local playerunitevent y1o
local integer p1o
set aW[qW]=O1o
set qW=qW+1
set ql=CreateTrigger()
set al=kHw("when calling new_LinkedList in BattleTrophies, line 12")
set nl=kHw("when calling new_LinkedList in BattleTrophies, line 13")
set dl=kHw("when calling new_LinkedList in BattleTrophies, line 14")
set fl=kHw("when calling new_LinkedList in BattleTrophies, line 15")
call xUl(al,$4930304C,$4930304D,$4930304E,$4930304F,$49303050,"when calling add in BattleTrophies, line 97")
call xUl(nl,$49303051,$49303052,$49303053,$49303054,$49303055,"when calling add in BattleTrophies, line 98")
call xUl(dl,$49303056,$49303057,$49303058,$49303059,$4930305A,"when calling add in BattleTrophies, line 99")
call xUl(fl,$49303130,$49303131,$49303132,$49303133,$49303134,"when calling add in BattleTrophies, line 100")
set l1o=ql
call DisableTrigger(l1o)
set b1o=ql
set y1o=EVENT_PLAYER_UNIT_DEATH
set p1o=0
loop
call TriggerRegisterPlayerUnitEvent(b1o,Player(p1o),y1o,null)
set p1o=p1o+1
exitwhen p1o==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ql,t3)
set qW=qW-1
set l1o=null
set b1o=null
set y1o=null
return true
endfunction
function hVb takes nothing returns boolean
set qW=0
return e1o("via function reference BattleTrophies, line 1")
endfunction
function RHu takes unit SHu,string cHu returns nothing
local integer oHu
local real OHu
local real lHu
local filterfunc bHu
local unit yHu
local unit pHu
local unit eHu
local string qHu
local integer aHu
local real nHu
local real dHu
local real fHu
set aW[qW]=cHu
set qW=qW+1
set VG=SHu
set yHu=SHu
set pHu=yHu
set nHu=GetUnitX(pHu)
set eHu=yHu
set dHu=nHu
set fHu=GetUnitY(eHu)
set OHu=dHu
set lHu=fHu
set bHu=Filter(Tuw)
set qHu="when calling alloc_ForGroupCallback_forNearestUnit_SpecialUnits in SpecialUnits, line 24"
set aW[qW]=qHu
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set aHu=qF
set aF[aHu]=867
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_SpecialUnits.","when calling error in SpecialUnits, line 24")
set aHu=0
endif
else
set eF=eF-1
set aHu=pF[eF]
set aF[aHu]=867
endif
set qW=qW-1
set oHu=aHu
set SQ[oHu]=SHu
call WXp(4,0,null,null,OHu,lHu,500.,false,0,null,bHu,oHu,"when calling forNearestUnit in SpecialUnits, line 24")
set qW=qW-1
set bHu=null
set yHu=null
set pHu=null
set eHu=null
endfunction
function K4e takes string x4e returns nothing
local unit v4e
local unit m4e
local unittype Q4e
local unit W4e
local unittype E4e
local unit Z4e
local unit U4e
local unittype I4e
local unit P4e
local unittype A4e
local boolean D4e
local boolean H4e
local boolean J4e
set aW[qW]=x4e
set qW=qW+1
set v4e=GetTriggerUnit()
set m4e=v4e
set Q4e=UNIT_TYPE_HERO
if IsUnitType(m4e,Q4e) then
set W4e=v4e
set E4e=UNIT_TYPE_ANCIENT
set D4e=IsUnitType(W4e,E4e)
else
set D4e=false
endif
if not D4e then
set Z4e=GetAttacker()
set U4e=Z4e
set I4e=UNIT_TYPE_HERO
if IsUnitType(U4e,I4e) then
set P4e=Z4e
set A4e=UNIT_TYPE_ANCIENT
set H4e=IsUnitType(P4e,A4e)
else
set H4e=false
endif
set J4e=H4e
else
set J4e=false
endif
if J4e and hOi(GetAttacker())>=4 then
call RHu(GetAttacker(),"when calling launchingAnAttack in SpecialUnits, line 38")
endif
set qW=qW-1
set v4e=null
set m4e=null
set Q4e=null
set W4e=null
set E4e=null
set Z4e=null
set U4e=null
set I4e=null
set P4e=null
set A4e=null
endfunction
function hWb takes nothing returns nothing
set qW=0
call K4e("via function reference SpecialUnits, line 36")
endfunction
function hZl takes nothing returns nothing
local integer NEl=GetSpellAbilityId()
local unit MEl
local unit wZl
local unit uZl
local unit rZl
local unit sZl
local unit tZl
local real iZl
local unit SZl
local integer cZl
local unit oZl
local integer OZl
local integer lZl
local unit bZl
local integer yZl
local unit pZl
local string eZl
local real qZl
local real aZl
local unit nZl
local unit dZl
local unit fZl
local player RZl
local real TZl
local real YZl
local real GZl
local real gZl
if NEl==$41436262 then
set MEl=GetSpellAbilityUnit()
set uZl=MEl
set RZl=GetOwningPlayer(uZl)
set rZl=GetSpellTargetUnit()
set TZl=GetUnitX(rZl)
set sZl=GetSpellTargetUnit()
set wZl=CreateUnit(RZl,$75303030,TZl,GetUnitY(sZl),0.)
set tZl=wZl
set iZl=3.
call UnitApplyTimedLife(tZl,$42544C46,iZl)
set SZl=wZl
set cZl=$41304C52
call UnitAddAbility(SZl,cZl)
set oZl=wZl
set OZl=$41304C52
set bZl=MEl
set yZl=$41436262
set lZl=GetUnitAbilityLevel(bZl,yZl)
call SetUnitAbilityLevel(oZl,OZl,lZl)
set pZl=wZl
set eZl="silence"
set nZl=GetSpellTargetUnit()
set dZl=nZl
set YZl=GetUnitX(dZl)
set fZl=nZl
set GZl=YZl
set gZl=GetUnitY(fZl)
set qZl=GZl
set aZl=gZl
call IssuePointOrder(pZl,eZl,qZl,aZl)
endif
set MEl=null
set wZl=null
set uZl=null
set rZl=null
set sZl=null
set tZl=null
set SZl=null
set oZl=null
set bZl=null
set pZl=null
set nZl=null
set dZl=null
set fZl=null
set RZl=null
endfunction
function h_u takes nothing returns boolean
set fh=CreateSound("Units\\Orc\\Hellscream\\GromPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(fh,5374)
call SetSoundChannel(fh,0)
call SetSoundVolume(fh,250)
call SetSoundPitch(fh,1.)
return true
endfunction
function WEu takes string YEu returns nothing
local unit GEu
local integer gEu
local unit hEu
local unit FEu
local integer kEu
local string jEu
local integer xEu
local real vEu
local integer mEu
local string QEu
set aW[qW]=YEu
set qW=qW+1
set GEu=GetAttacker()
set hEu=GEu
if GetUnitTypeId(hEu)==$6E303357 then
if GetRandomInt(1,100)<=10 then
set FEu=GEu
set kEu=$414D3033
call UnitAddAbility(FEu,kEu)
set jEu="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_DemonMeleeBonus in DemonMeleeBonus, line 72"
set aW[qW]=jEu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set xEu=fF
set RF[xEu]=807
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_DemonMeleeBonus.","when calling error in DemonMeleeBonus, line 72")
set xEu=0
endif
else
set dF=dF-1
set xEu=nF[dF]
set RF[xEu]=807
endif
set qW=qW-1
set gEu=xEu
set gj[gEu]=GEu
set vEu=1.5
set mEu=gEu
set QEu="when calling doAfter in DemonMeleeBonus, line 72"
set aW[qW]=QEu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),vEu,mEu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set GEu=null
set hEu=null
set FEu=null
endfunction
function hbe takes nothing returns nothing
set qW=0
call WEu("via function reference DemonMeleeBonus, line 67")
endfunction
function hcS takes nothing returns nothing
local unit acS=GetTriggerUnit()
local unit RcS=acS
local integer ncS=GetUnitTypeId(RcS)
local unit TcS=acS
local player dcS=GetOwningPlayer(TcS)
local integer fcS=GetPlayerId(dcS)
local sound YcS
local sound GcS
local trigger gcS
if ncS==$6E62736D then
set YcS=wt
call StartSound(YcS)
set i[fcS]=$55647468
endif
if ncS==$757A6731 then
set GcS=Xs
call StartSound(GcS)
set r[fcS]=$48617266
set s[fcS]=$55616E62
set t[fcS]=$55303130
endif
if ncS==$7830326D then
set gcS=ch
call EnableTrigger(gcS)
call RemoveUnitFromStock(O[fcS],A[fcS])
call RemoveUnitFromStock(b[fcS],A[fcS])
call RemoveUnitFromStock(l[fcS],A[fcS])
set A[fcS]=$6E7A6F6D
call AddUnitToStock(O[fcS],A[fcS],2,6)
call AddUnitToStock(b[fcS],A[fcS],2,6)
call AddUnitToStock(l[fcS],A[fcS],2,6)
endif
if ncS==$6E676E69 then
call RemoveUnitFromStock(O[fcS],D[fcS])
call RemoveUnitFromStock(b[fcS],D[fcS])
call RemoveUnitFromStock(l[fcS],D[fcS])
set D[fcS]=$6E6E7772
call AddUnitToStock(O[fcS],D[fcS],1,3)
call AddUnitToStock(b[fcS],D[fcS],1,3)
call AddUnitToStock(l[fcS],D[fcS],1,3)
endif
if ncS==$686F6261 then
call RemoveUnitFromStock(O[fcS],H[fcS])
call RemoveUnitFromStock(b[fcS],H[fcS])
call RemoveUnitFromStock(l[fcS],H[fcS])
set H[fcS]=$7562616E
call AddUnitToStock(O[fcS],H[fcS],1,3)
call AddUnitToStock(b[fcS],H[fcS],1,3)
call AddUnitToStock(l[fcS],H[fcS],1,3)
endif
if ncS==$75746F6D then
set J[fcS]=$6E30335A
endif
if ncS==$6E66726D then
set K[fcS]=$7566726F
endif
if ncS==$756E706C then
set K[fcS]=$6E303430
endif
if ncS==$686F6666 then
set L[fcS]=$6E66676C
endif
set acS=null
set dcS=null
set RcS=null
set TcS=null
set YcS=null
set GcS=null
set gcS=null
endfunction
function hjS takes nothing returns boolean
local trigger njS
local rect djS
local region fjS
local trigger RjS
local boolexpr TjS
local trigger YjS
local playerunitevent GjS
local code gjS
set jn=CreateTrigger()
set njS=jn
set djS=bj_mapInitialPlayableArea
set fjS=CreateRegion()
call RegionAddRect(fjS,djS)
call TriggerRegisterEnterRegion(njS,fjS,null)
set RjS=jn
set TjS=Condition(p6)
call TriggerAddCondition(RjS,TjS)
set YjS=jn
call DisableTrigger(YjS)
set GjS=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gjS=e6
call emO(GjS,null,gjS,null)
set njS=null
set djS=null
set fjS=null
set RjS=null
set TjS=null
set YjS=null
set GjS=null
return true
endfunction
function hku takes nothing returns boolean
set Pd=CreateSound("MalornPick.wav",false,false,false,127,127,"DefaultEAXON")
return true
endfunction
function hmu takes nothing returns nothing
local integer qmu
local player amu
local string nmu
local real dmu
local string fmu
local real Rmu
local player Tmu
local string Ymu
local player Gmu
local string gmu
set rd=GetTriggerPlayer()
set amu=rd
set qmu=GetPlayerId(amu)
if Fw[qmu]==true then
set kw[qmu]=true
elseif Fw[qmu]==false and kw[qmu]==false then
set kw[qmu]=true
set nmu=Aw[qmu]+GetPlayerName(rd)+"|r"+" has left the game!"
set dmu=10.
set fmu=nmu
set Rmu=dmu
call DisplayTimedTextToPlayer(IY,0.,0.,Rmu,fmu)
set Tmu=rd
set Ymu="Leaver"
call SetPlayerName(Tmu,Ymu)
set Gmu=Player(qmu+4)
set gmu="Leaver"
call SetPlayerName(Gmu,gmu)
set rd=null
endif
set amu=null
set Tmu=null
set Gmu=null
endfunction
function hpS takes nothing returns boolean
local trigger fpS
local trigger RpS
local rect TpS
local region YpS
local trigger GpS
local boolexpr gpS
set BG=CreateTrigger()
set fpS=BG
call DisableTrigger(fpS)
set RpS=BG
set TpS=bj_mapInitialPlayableArea
set YpS=CreateRegion()
call RegionAddRect(YpS,TpS)
call TriggerRegisterEnterRegion(RpS,YpS,null)
set GpS=BG
set gpS=Condition(huw)
call TriggerAddCondition(GpS,gpS)
set fpS=null
set RpS=null
set TpS=null
set YpS=null
set GpS=null
set gpS=null
return true
endfunction
function hrl takes nothing returns nothing
local integer Grl=GetSpellAbilityId()
local unit grl
if Grl==$41313439 then
call GetSpellAbilityUnit()
set grl=GetSpellTargetUnit()
call dYr(grl)
endif
set grl=null
endfunction
function hvO takes nothing returns nothing
local unit dvO=GetEnteringUnit()
local unit RvO=dvO
local unittype TvO=UNIT_TYPE_HERO
local filterfunc fvO
local unit YvO
local boolexpr GvO
local unit gvO
if IsUnitType(RvO,TvO)==true then
set fvO=Filter(P3)
call GroupEnumUnitsInRect(Rb,fs,fvO)
if FirstOfGroup(Rb)==null then
call GroupEnumUnitsInRect(Rb,fs,fvO)
set fb=dvO
set gvO=pb
set YvO=fb
call SetUnitOwner(gvO,GetOwningPlayer(YvO),true)
set GvO=fvO
call DestroyBoolExpr(GvO)
endif
endif
set dvO=null
set fvO=null
set RvO=null
set TvO=null
set YvO=null
set GvO=null
set gvO=null
endfunction
function hvs takes nothing returns boolean
return true
endfunction
function hvt takes nothing returns nothing
local unit qvt=GetEnteringUnit()
local unit nvt=qvt
local integer avt=GetUnitTypeId(nvt)
local unit dvt
local integer fvt
local integer Rvt
local unit Tvt
local integer Yvt
local integer Gvt
local player gvt
if avt==$6E656E66 or avt==$6E726967 then
set dvt=qvt
set fvt=$41303349
call UnitAddAbility(dvt,fvt)
set Rvt=$41303349
set Tvt=qvt
set Gvt=$524D316D
set gvt=GetOwningPlayer(qvt)
set Yvt=GetPlayerTechCount(gvt,Gvt,true)
call SetUnitAbilityLevel(Tvt,Rvt,Yvt)
endif
set qvt=null
set nvt=null
set dvt=null
set Tvt=null
set gvt=null
endfunction
function hwi takes nothing returns nothing
local unit swi=GetTriggerUnit()
local unit iwi=swi
local integer twi
local unit Swi
local player cwi
local player owi
local unit Owi
local integer lwi
local unit bwi
local unit ywi
local unit pwi
local unit ewi
local unit qwi
local player awi
local unit nwi
local unit dwi
local unit fwi
local trigger Rwi
local player Twi
local real Ywi
local real Gwi
local real gwi
if GetUnitTypeId(iwi)==$68746F77 then
set KT=swi
set Swi=swi
set CT=GetOwningPlayer(Swi)
set cwi=CT
set VT[GetPlayerId(cwi)]=true
set owi=CT
set XT=Player(GetPlayerId(owi)+4)
set Owi=KT
set lwi=$41313742
call UnitAddAbility(Owi,lwi)
set bwi=KT
set Twi=GetOwningPlayer(bwi)
set ywi=KT
set Ywi=GetUnitX(ywi)
set pwi=KT
set LT=CreateUnit(Twi,$75303038,Ywi,GetUnitY(pwi),0.)
set ET=300-60*UT
set ewi=KT
set Gwi=GetUnitX(ewi)
set qwi=KT
set kT=jVl(Gwi,GetUnitY(qwi),0.,I2S(ET),13.,255,230,0,255)
set nwi=swi
set awi=GetOwningPlayer(nwi)
set twi=GetPlayerId(awi)
set dwi=o[twi]
set gwi=GetUnitX(dwi)
set fwi=o[twi]
set jT=jVl(gwi,GetUnitY(fwi),0.,I2S(ZT),13.,255,230,0,255)
set Rwi=vT
call EnableTrigger(Rwi)
call TimerStart(xT,I2R(300-60*UT),false,cww)
endif
set swi=null
set iwi=null
set Swi=null
set cwi=null
set owi=null
set Owi=null
set bwi=null
set ywi=null
set pwi=null
set ewi=null
set qwi=null
set awi=null
set nwi=null
set dwi=null
set fwi=null
set Rwi=null
set Twi=null
endfunction
function hwl takes nothing returns boolean
local trigger nwl
local trigger dwl
local playerunitevent fwl
local integer Rwl
local trigger Twl
local trigger Ywl
local playerunitevent Gwl
local integer gwl
set BY=CreateTrigger()
set NY=CreateTrigger()
set nwl=BY
call DisableTrigger(nwl)
set dwl=BY
set fwl=EVENT_PLAYER_HERO_LEVEL
set Rwl=0
loop
call TriggerRegisterPlayerUnitEvent(dwl,Player(Rwl),fwl,null)
set Rwl=Rwl+1
exitwhen Rwl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(BY,pww_3024)
set Twl=NY
call DisableTrigger(Twl)
set Ywl=NY
set Gwl=EVENT_PLAYER_UNIT_SPELL_FINISH
set gwl=0
loop
call TriggerRegisterPlayerUnitEvent(Ywl,Player(gwl),Gwl,null)
set gwl=gwl+1
exitwhen gwl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(NY,eww_2280)
set nwl=null
set dwl=null
set fwl=null
set Twl=null
set Ywl=null
set Gwl=null
return true
endfunction
function hxS takes nothing returns boolean
return true
endfunction
function i1u takes nothing returns nothing
local integer s1u=GetResearched()
local trigger t1u
if s1u==$52303451 then
set t1u=Xg
call EnableTrigger(t1u)
endif
set t1u=null
endfunction
function i4p takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1649")
endfunction
function i4u takes nothing returns nothing
local unit S1u=GetTriggerUnit()
local unit l1u=S1u
local integer c1u=GetUnitTypeId(l1u)
local unit b1u=S1u
local player o1u=GetOwningPlayer(b1u)
local player y1u=o1u
local integer O1u=GetPlayerId(y1u)
local sound p1u
local unit e1u
local real q1u
local real a1u
local real n1u
local unit d1u
local real f1u
local real R1u
local real T1u
local unit Y1u
local real G1u
local real g1u
local real h1u
local trigger F1u
local trigger k1u
local unit j1u
local real x1u
local real v1u
local real m1u
local unit Q1u
local real W1u
local real E1u
local real Z1u
local unit U1u
local real I1u
local real P1u
local real A1u
local unit D1u
local real H1u
local real J1u
local real K1u
local unit L1u
local real X1u
local real C1u
local real V1u
local unit B1u
local real N1u
local real M1u
local real w4u
local unit u4u
local real r4u
local real s4u
local real t4u
if c1u==$75736170 then
set p1u=Zs
call StartSound(p1u)
set e1u=S1u
set q1u=70.
set a1u=70.
set n1u=70.
call SetUnitScale(e1u,q1u*.01,a1u*.01,n1u*.01)
set i[O1u]=$55776172
endif
if c1u==$75677276 then
set d1u=S1u
set f1u=90.
set R1u=90.
set T1u=90.
call SetUnitScale(d1u,f1u*.01,R1u*.01,T1u*.01)
call RemoveUnitFromStock(O[O1u],A[O1u])
call RemoveUnitFromStock(b[O1u],A[O1u])
call RemoveUnitFromStock(l[O1u],A[O1u])
set A[O1u]=$6E666775
call AddUnitToStock(O[O1u],A[O1u],1,3)
call AddUnitToStock(b[O1u],A[O1u],1,3)
call AddUnitToStock(l[O1u],A[O1u],1,3)
call RemoveUnitFromStock(O[O1u],D[O1u])
call RemoveUnitFromStock(b[O1u],D[O1u])
call RemoveUnitFromStock(l[O1u],D[O1u])
set D[O1u]=$6E647174
call AddUnitToStock(O[O1u],D[O1u],1,3)
call AddUnitToStock(b[O1u],D[O1u],1,3)
call AddUnitToStock(l[O1u],D[O1u],1,3)
call RemoveUnitFromStock(O[O1u],H[O1u])
call RemoveUnitFromStock(b[O1u],H[O1u])
call RemoveUnitFromStock(l[O1u],H[O1u])
set H[O1u]=$6E657273
call AddUnitToStock(O[O1u],H[O1u],1,3)
call AddUnitToStock(b[O1u],H[O1u],1,3)
call AddUnitToStock(l[O1u],H[O1u],1,3)
set J[O1u]=$6E70666C
endif
if c1u==$6E6D7266 then
set Y1u=S1u
set G1u=90.
set g1u=90.
set h1u=90.
call SetUnitScale(Y1u,G1u*.01,g1u*.01,h1u*.01)
call SetPlayerTechResearched(o1u,$52303347,1)
call SetPlayerTechResearched(Player(O1u+4),$52303347,1)
set F1u=lT
call EnableTrigger(F1u)
endif
if c1u==$62736869 then
set k1u=ah
call EnableTrigger(k1u)
set j1u=S1u
set x1u=90.
set v1u=90.
set m1u=90.
call SetUnitScale(j1u,x1u*.01,v1u*.01,m1u*.01)
call RemoveUnitFromStock(O[O1u],A[O1u])
call RemoveUnitFromStock(b[O1u],A[O1u])
call RemoveUnitFromStock(l[O1u],A[O1u])
set A[O1u]=$6E303357
call AddUnitToStock(O[O1u],A[O1u],1,3)
call AddUnitToStock(b[O1u],A[O1u],1,3)
call AddUnitToStock(l[O1u],A[O1u],1,3)
endif
if c1u==$757A6967 then
set Q1u=S1u
set W1u=90.
set E1u=90.
set Z1u=90.
call SetUnitScale(Q1u,W1u*.01,E1u*.01,Z1u*.01)
call RemoveUnitFromStock(O[O1u],D[O1u])
call RemoveUnitFromStock(b[O1u],D[O1u])
call RemoveUnitFromStock(l[O1u],D[O1u])
set D[O1u]=$6E303137
call AddUnitToStock(O[O1u],D[O1u],1,3)
call AddUnitToStock(b[O1u],D[O1u],1,3)
call AddUnitToStock(l[O1u],D[O1u],1,3)
endif
if c1u==$6E6D7261 then
set U1u=S1u
set I1u=90.
set P1u=90.
set A1u=90.
call SetUnitScale(U1u,I1u*.01,P1u*.01,A1u*.01)
call RemoveUnitFromStock(O[O1u],H[O1u])
call RemoveUnitFromStock(b[O1u],H[O1u])
call RemoveUnitFromStock(l[O1u],H[O1u])
set H[O1u]=$6E657277
call AddUnitToStock(O[O1u],H[O1u],1,3)
call AddUnitToStock(b[O1u],H[O1u],1,3)
call AddUnitToStock(l[O1u],H[O1u],1,3)
endif
if c1u==$75303052 then
set D1u=S1u
set H1u=40.
set J1u=40.
set K1u=40.
call SetUnitScale(D1u,H1u*.01,J1u*.01,K1u*.01)
set J[O1u]=$6E303358
endif
if c1u==$6E6D7262 then
set L1u=S1u
set X1u=40.
set C1u=40.
set V1u=40.
call SetUnitScale(L1u,X1u*.01,C1u*.01,V1u*.01)
set K[O1u]=$6E6E646B
endif
if c1u==$6E636E74 then
set B1u=S1u
set N1u=40.
set M1u=40.
set w4u=40.
call SetUnitScale(B1u,N1u*.01,M1u*.01,w4u*.01)
set L[O1u]=$6E72656C
endif
if c1u==$75616F64 then
set u4u=S1u
set r4u=70.
set s4u=70.
set t4u=70.
call SetUnitScale(u4u,r4u*.01,s4u*.01,t4u*.01)
call SetPlayerTechResearched(o1u,$5230324E,1)
call SetPlayerTechResearched(Player(O1u+4),$5230324E,1)
endif
set S1u=null
set o1u=null
set l1u=null
set b1u=null
set y1u=null
set p1u=null
set e1u=null
set d1u=null
set Y1u=null
set F1u=null
set k1u=null
set j1u=null
set Q1u=null
set U1u=null
set D1u=null
set L1u=null
set B1u=null
set u4u=null
endfunction
function i5b takes nothing returns nothing
local unit i2b=GetTriggerUnit()
local unit c2b=i2b
local player S2b=GetOwningPlayer(c2b)
local unit o2b
local string O2b
local real l2b
local real b2b
local unit y2b
local unittype p2b
local unit e2b
local string q2b
local real a2b
local real n2b
local unit d2b
local unittype f2b
local unit R2b
local string T2b
local real Y2b
local real G2b
local unit g2b
local unittype h2b
local unit F2b
local string k2b
local real j2b
local real x2b
local unit v2b
local unittype m2b
local unit Q2b
local string W2b
local real E2b
local real Z2b
local unit U2b
local unittype I2b
local unit P2b
local string A2b
local real D2b
local real H2b
local unit J2b
local unittype K2b
local real L2b
local real X2b
local real C2b
local real V2b
local real B2b
local real N2b
local real M2b
local real w5b
local real u5b
local real r5b
local real s5b
local real t5b
if S2b==du then
set o2b=i2b
set O2b="attack"
set L2b=Qw[37]
set X2b=Ww[37]
set l2b=L2b
set b2b=X2b
call IssuePointOrder(o2b,O2b,l2b,b2b)
set y2b=i2b
set p2b=UNIT_TYPE_HERO
if IsUnitType(y2b,p2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,37)
endif
endif
if S2b==nu then
if Ew[2]==true then
set e2b=i2b
set q2b="attack"
set C2b=Qw[13]
set V2b=Ww[13]
set a2b=C2b
set n2b=V2b
call IssuePointOrder(e2b,q2b,a2b,n2b)
set d2b=i2b
set f2b=UNIT_TYPE_HERO
if IsUnitType(d2b,f2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,13)
endif
else
set R2b=i2b
set T2b="attack"
set B2b=Qw[37]
set N2b=Ww[37]
set Y2b=B2b
set G2b=N2b
call IssuePointOrder(R2b,T2b,Y2b,G2b)
set g2b=i2b
set h2b=UNIT_TYPE_HERO
if IsUnitType(g2b,h2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,37)
endif
endif
endif
if S2b==fu then
set F2b=i2b
set k2b="attack"
set M2b=Qw[13]
set w5b=Ww[13]
set j2b=M2b
set x2b=w5b
call IssuePointOrder(F2b,k2b,j2b,x2b)
set v2b=i2b
set m2b=UNIT_TYPE_HERO
if IsUnitType(v2b,m2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,13)
endif
endif
if S2b==Ru then
if Ew[0]==true then
set Q2b=i2b
set W2b="attack"
set u5b=Qw[37]
set r5b=Ww[37]
set E2b=u5b
set Z2b=r5b
call IssuePointOrder(Q2b,W2b,E2b,Z2b)
set U2b=i2b
set I2b=UNIT_TYPE_HERO
if IsUnitType(U2b,I2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,37)
endif
else
set P2b=i2b
set A2b="attack"
set s5b=Qw[13]
set t5b=Ww[13]
set D2b=s5b
set H2b=t5b
call IssuePointOrder(P2b,A2b,D2b,H2b)
set J2b=i2b
set K2b=UNIT_TYPE_HERO
if IsUnitType(J2b,K2b) then
call SaveInteger(qu,GetHandleId(i2b),$6D6F7665,13)
endif
endif
endif
set i2b=null
set S2b=null
set c2b=null
set o2b=null
set y2b=null
set p2b=null
set e2b=null
set d2b=null
set f2b=null
set R2b=null
set g2b=null
set h2b=null
set F2b=null
set v2b=null
set m2b=null
set Q2b=null
set U2b=null
set I2b=null
set P2b=null
set J2b=null
set K2b=null
endfunction
function i5w takes nothing returns nothing
local integer I2w
local integer P2w
local player A2w
local player D2w
local player H2w
local player J2w
local playerstate K2w
local player L2w
local player X2w
local playerstate C2w
local player V2w
local integer B2w
local player N2w
local playerstate M2w
local integer w5w
local player u5w
local player r5w
local playerstate s5w
local boolean t5w
if Vn==true then
set I2w=0
loop
exitwhen I2w>7
set A2w=UY[I2w]
set D2w=Cn
if IsPlayerEnemy(A2w,D2w)==true then
set H2w=UY[I2w]
set J2w=H2w
set K2w=PLAYER_STATE_RESOURCE_GOLD
set t5w=GetPlayerState(J2w,K2w)!=0
else
set t5w=false
endif
if t5w then
set L2w=UY[I2w]
set X2w=L2w
set C2w=PLAYER_STATE_RESOURCE_GOLD
set P2w=GetPlayerState(X2w,C2w)-100
set V2w=UY[I2w]
set u5w=UY[I2w]
set r5w=u5w
set s5w=PLAYER_STATE_RESOURCE_GOLD
set B2w=GetPlayerState(r5w,s5w)-P2w
set N2w=V2w
set M2w=PLAYER_STATE_RESOURCE_GOLD
set w5w=B2w
call SetPlayerState(N2w,M2w,w5w)
call SetPlayerState(UY[I2w],PLAYER_STATE_RESOURCE_GOLD,P2w)
endif
set I2w=I2w+1
endloop
call TimerStart(Xn,45.,false,K6)
endif
set A2w=null
set D2w=null
set H2w=null
set J2w=null
set K2w=null
set L2w=null
set X2w=null
set C2w=null
set V2w=null
set N2w=null
set M2w=null
set u5w=null
set r5w=null
set s5w=null
endfunction
function i6S takes nothing returns boolean
local trigger D5S
local trigger H5S
local playerunitevent J5S
local trigger K5S
local playerunitevent L5S
local integer X5S
local trigger C5S
local boolexpr V5S
local trigger B5S
local trigger N5S
local playerunitevent M5S
local trigger w6S
local playerunitevent u6S
local integer r6S
local trigger s6S
local boolexpr t6S
set KO=CreateTrigger()
set LO=CreateTrigger()
set XO=null
set VO=null
set D5S=KO
call DisableTrigger(D5S)
set H5S=KO
set J5S=EVENT_PLAYER_UNIT_SPELL_EFFECT
set K5S=H5S
set L5S=J5S
set X5S=0
loop
call TriggerRegisterPlayerUnitEvent(K5S,Player(X5S),L5S,null)
set X5S=X5S+1
exitwhen X5S==bj_MAX_PLAYER_SLOTS
endloop
set C5S=KO
set V5S=Condition(xM)
call TriggerAddCondition(C5S,V5S)
set B5S=LO
call DisableTrigger(B5S)
set N5S=LO
set M5S=EVENT_PLAYER_UNIT_DEATH
set w6S=N5S
set u6S=M5S
set r6S=0
loop
call TriggerRegisterPlayerUnitEvent(w6S,Player(r6S),u6S,null)
set r6S=r6S+1
exitwhen r6S==bj_MAX_PLAYER_SLOTS
endloop
set s6S=LO
set t6S=Condition(vM)
call TriggerAddCondition(s6S,t6S)
set D5S=null
set H5S=null
set J5S=null
set K5S=null
set L5S=null
set C5S=null
set V5S=null
set B5S=null
set N5S=null
set M5S=null
set w6S=null
set u6S=null
set s6S=null
set t6S=null
return true
endfunction
function i6r takes nothing returns nothing
local integer H4r=GetSpellAbilityId()
local unit J4r=GetSpellAbilityUnit()
local unit w2r=J4r
local player K4r=GetOwningPlayer(w2r)
local integer L4r
local integer X4r
local integer C4r
local integer V4r
local integer B4r
local integer N4r
local real M4r
local player u2r
local integer r2r
local player s2r
local playerstate t2r
local integer i2r
local player S2r
local playerstate c2r
local player o2r
local player O2r
local player l2r
local player b2r
local player y2r
local player p2r
local player e2r
local integer q2r
local player a2r
local playerstate n2r
local integer d2r
local player f2r
local playerstate R2r
local player T2r
local player Y2r
local player G2r
local player g2r
local player h2r
local player F2r
local player k2r
local integer j2r
local player x2r
local playerstate v2r
local integer m2r
local player Q2r
local playerstate W2r
local player E2r
local player Z2r
local player U2r
local player I2r
local player P2r
local player A2r
local player D2r
local integer H2r
local player J2r
local playerstate K2r
local integer L2r
local player X2r
local playerstate C2r
local player V2r
local player B2r
local player N2r
local player M2r
local player w5r
local player u5r
local player r5r
local integer s5r
local player t5r
local playerstate i5r
local integer S5r
local player c5r
local playerstate o5r
local player O5r
local player l5r
local player b5r
local player y5r
local player p5r
local player e5r
local player q5r
local playerstate a5r
local integer n5r
local player d5r
local player f5r
local playerstate R5r
local player T5r
local player Y5r
local player G5r
local player g5r
local player h5r
local player F5r
local playerstate k5r
local player j5r
local playerstate x5r
local integer v5r
local player m5r
local player Q5r
local playerstate W5r
local real E5r
local integer Z5r
local player U5r
local player I5r
local real P5r
local player A5r
local player D5r
local real H5r
local player J5r
local playerstate K5r
local player L5r
local playerstate X5r
local player C5r
local playerstate V5r
local player B5r
local playerstate N5r
local player M5r
local playerstate w6r
local integer u6r
local player r6r
local integer s6r
local integer t6r
if H4r==$414D386B then
set L4r=300
set u2r=K4r
set r2r=L4r
set s2r=u2r
set t2r=PLAYER_STATE_RESOURCE_GOLD
set i2r=r2r
set J5r=s2r
set K5r=t2r
set S2r=s2r
set c2r=t2r
call SetPlayerState(J5r,K5r,GetPlayerState(S2r,c2r)+i2r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Orb of Energy for 300 gold")
call UuS(J4r,L4r)
set o2r=K4r
set O2r=K4r
set hr[GetPlayerId(o2r)]=hr[GetPlayerId(O2r)]+L4r
set l2r=K4r
set b2r=K4r
set Fr[GetPlayerId(l2r)]=Fr[GetPlayerId(b2r)]+L4r
set y2r=K4r
set p2r=K4r
set Cr[GetPlayerId(y2r)]=Cr[GetPlayerId(p2r)]+L4r
endif
if H4r==$414D3772 or H4r==$414D3774 or H4r==$414D3775 or H4r==$414D3773 or H4r==$414D3868 or H4r==$414D386A or H4r==$414D3869 then
set X4r=100
set e2r=K4r
set q2r=X4r
set a2r=e2r
set n2r=PLAYER_STATE_RESOURCE_GOLD
set d2r=q2r
set L5r=a2r
set X5r=n2r
set f2r=a2r
set R2r=n2r
call SetPlayerState(L5r,X5r,GetPlayerState(f2r,R2r)+d2r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Lv1 Item for 100 gold")
call UuS(J4r,X4r)
set T2r=K4r
set Y2r=K4r
set hr[GetPlayerId(T2r)]=hr[GetPlayerId(Y2r)]+X4r
set G2r=K4r
set g2r=K4r
set Fr[GetPlayerId(G2r)]=Fr[GetPlayerId(g2r)]+X4r
set h2r=K4r
set F2r=K4r
set Cr[GetPlayerId(h2r)]=Cr[GetPlayerId(F2r)]+X4r
endif
if H4r==$414D3776 or H4r==$414D3777 or H4r==$414D3778 or H4r==$414D3779 or H4r==$414D377A or H4r==$414D377B then
set C4r=200
set k2r=K4r
set j2r=C4r
set x2r=k2r
set v2r=PLAYER_STATE_RESOURCE_GOLD
set m2r=j2r
set C5r=x2r
set V5r=v2r
set Q2r=x2r
set W2r=v2r
call SetPlayerState(C5r,V5r,GetPlayerState(Q2r,W2r)+m2r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Lv2 Item for 200 gold")
call UuS(J4r,C4r)
set E2r=K4r
set Z2r=K4r
set hr[GetPlayerId(E2r)]=hr[GetPlayerId(Z2r)]+C4r
set U2r=K4r
set I2r=K4r
set Fr[GetPlayerId(U2r)]=Fr[GetPlayerId(I2r)]+C4r
set P2r=K4r
set A2r=K4r
set Cr[GetPlayerId(P2r)]=Cr[GetPlayerId(A2r)]+C4r
endif
if H4r==$414D377C or H4r==$414D377D or H4r==$414D377E or H4r==$414D3821 or H4r==$414D3830 or H4r==$414D3831 or H4r==$414D3832 or H4r==$414D3833 or H4r==$414D3834 or H4r==$414D3835 or H4r==$414D3836 or H4r==$414D3837 or H4r==$414D3838 or H4r==$414D3839 then
set V4r=300
set D2r=K4r
set H2r=V4r
set J2r=D2r
set K2r=PLAYER_STATE_RESOURCE_GOLD
set L2r=H2r
set B5r=J2r
set N5r=K2r
set X2r=J2r
set C2r=K2r
call SetPlayerState(B5r,N5r,GetPlayerState(X2r,C2r)+L2r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Lv3 Item for 300 gold")
call UuS(J4r,V4r)
set V2r=K4r
set B2r=K4r
set hr[GetPlayerId(V2r)]=hr[GetPlayerId(B2r)]+V4r
set N2r=K4r
set M2r=K4r
set Fr[GetPlayerId(N2r)]=Fr[GetPlayerId(M2r)]+V4r
set w5r=K4r
set u5r=K4r
set Cr[GetPlayerId(w5r)]=Cr[GetPlayerId(u5r)]+V4r
endif
if H4r==$414D3861 or H4r==$414D3862 or H4r==$414D3863 or H4r==$414D3864 or H4r==$414D3865 or H4r==$414D3866 or H4r==$414D3867 then
set B4r=400
set r5r=K4r
set s5r=B4r
set t5r=r5r
set i5r=PLAYER_STATE_RESOURCE_GOLD
set S5r=s5r
set M5r=t5r
set w6r=i5r
set c5r=t5r
set o5r=i5r
call SetPlayerState(M5r,w6r,GetPlayerState(c5r,o5r)+S5r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Lv4 Item for 400 gold")
call UuS(J4r,B4r)
set O5r=K4r
set l5r=K4r
set hr[GetPlayerId(O5r)]=hr[GetPlayerId(l5r)]+B4r
set b5r=K4r
set y5r=K4r
set Fr[GetPlayerId(b5r)]=Fr[GetPlayerId(y5r)]+B4r
set p5r=K4r
set e5r=K4r
set Cr[GetPlayerId(p5r)]=Cr[GetPlayerId(e5r)]+B4r
endif
if H4r==$414D386C or H4r==$414D386D or H4r==$414D386E or H4r==$414D386F or H4r==$414D3870 or H4r==$414D3871 then
if rr==false then
set N4r=500
set q5r=K4r
set a5r=PLAYER_STATE_RESOURCE_GOLD
set d5r=K4r
set f5r=d5r
set R5r=PLAYER_STATE_RESOURCE_GOLD
set n5r=GetPlayerState(f5r,R5r)-N4r
call SetPlayerState(q5r,a5r,n5r)
call DisplayTextToPlayer(K4r,0.,0.,"You sold an Shard for -500 gold")
set T5r=K4r
set Y5r=K4r
set Fr[GetPlayerId(T5r)]=Fr[GetPlayerId(Y5r)]-N4r
set G5r=K4r
set g5r=K4r
set Cr[GetPlayerId(G5r)]=Cr[GetPlayerId(g5r)]-N4r
else
set h5r=K4r
set F5r=h5r
set k5r=PLAYER_STATE_RESOURCE_GOLD
set M4r=1000.+GetPlayerState(F5r,k5r)*1./5
set j5r=K4r
set x5r=PLAYER_STATE_RESOURCE_GOLD
set m5r=K4r
set Q5r=m5r
set W5r=PLAYER_STATE_RESOURCE_GOLD
set u6r=GetPlayerState(Q5r,W5r)
set E5r=M4r
set v5r=u6r-R2I(E5r)
call SetPlayerState(j5r,x5r,v5r)
set r6r=K4r
set Z5r=R2I(M4r)
call DisplayTextToPlayer(r6r,0.,0.,"You sold an Shard for "+I2S(Z5r)+" gold")
set U5r=K4r
set I5r=K4r
set s6r=Fr[GetPlayerId(I5r)]
set P5r=M4r
set Fr[GetPlayerId(U5r)]=s6r-R2I(P5r)
set A5r=K4r
set D5r=K4r
set t6r=Cr[GetPlayerId(D5r)]
set H5r=M4r
set Cr[GetPlayerId(A5r)]=t6r-R2I(H5r)
endif
endif
set J4r=null
set K4r=null
set w2r=null
set u2r=null
set s2r=null
set t2r=null
set S2r=null
set c2r=null
set o2r=null
set O2r=null
set l2r=null
set b2r=null
set y2r=null
set p2r=null
set e2r=null
set a2r=null
set n2r=null
set f2r=null
set R2r=null
set T2r=null
set Y2r=null
set G2r=null
set g2r=null
set h2r=null
set F2r=null
set k2r=null
set x2r=null
set v2r=null
set Q2r=null
set W2r=null
set E2r=null
set Z2r=null
set U2r=null
set I2r=null
set P2r=null
set A2r=null
set D2r=null
set J2r=null
set K2r=null
set X2r=null
set C2r=null
set V2r=null
set B2r=null
set N2r=null
set M2r=null
set w5r=null
set u5r=null
set r5r=null
set t5r=null
set i5r=null
set c5r=null
set o5r=null
set O5r=null
set l5r=null
set b5r=null
set y5r=null
set p5r=null
set e5r=null
set q5r=null
set a5r=null
set d5r=null
set f5r=null
set R5r=null
set T5r=null
set Y5r=null
set G5r=null
set g5r=null
set h5r=null
set F5r=null
set k5r=null
set j5r=null
set x5r=null
set m5r=null
set Q5r=null
set W5r=null
set U5r=null
set I5r=null
set A5r=null
set D5r=null
set J5r=null
set K5r=null
set L5r=null
set X5r=null
set C5r=null
set V5r=null
set B5r=null
set N5r=null
set M5r=null
set w6r=null
set r6r=null
endfunction
function i9c takes nothing returns boolean
local playerunitevent u9c
local code r9c
local playerunitevent s9c
local code t9c
set Kn=null
set u9c=EVENT_PLAYER_UNIT_SPELL_EFFECT
set r9c=A6
call emO(u9c,null,r9c,null)
set s9c=EVENT_PLAYER_UNIT_DEATH
set t9c=D6
call emO(s9c,null,t9c,null)
set u9c=null
set s9c=null
return true
endfunction
function iBp takes nothing returns boolean
local trigger CVp
local trigger VVp
local playerunitevent BVp
local integer NVp
local trigger MVp
local rect wBp
local region uBp
local trigger rBp
local boolexpr sBp
local trigger tBp
set ld=CreateTrigger()
set bd=CreateTrigger()
set CVp=bd
call DisableTrigger(CVp)
set VVp=bd
set BVp=EVENT_PLAYER_UNIT_ATTACKED
set NVp=0
loop
call TriggerRegisterPlayerUnitEvent(VVp,Player(NVp),BVp,null)
set NVp=NVp+1
exitwhen NVp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(bd,n7)
set MVp=ld
set wBp=bj_mapInitialPlayableArea
set uBp=CreateRegion()
call RegionAddRect(uBp,wBp)
call TriggerRegisterEnterRegion(MVp,uBp,null)
set rBp=ld
set sBp=Condition(d7)
call TriggerAddCondition(rBp,sBp)
set tBp=ld
call DisableTrigger(tBp)
set CVp=null
set VVp=null
set BVp=null
set MVp=null
set wBp=null
set uBp=null
set rBp=null
set sBp=null
set tBp=null
return true
endfunction
function iHu takes nothing returns boolean
local playerunitevent sHu=EVENT_PLAYER_UNIT_SPELL_CAST
local code tHu=Jrw
call emO(sHu,null,tHu,null)
set sHu=null
return true
endfunction
function iHy takes nothing returns nothing
set qW=0
call Lki("via function reference PickBonusVulpera, line 85")
endfunction
function iKc takes nothing returns boolean
return GetUnitAbilityLevel(GetFilterUnit(),$41303853)>=1
endfunction
function iOe takes nothing returns boolean
local trigger Boe
local rect Noe
local region Moe
local trigger wOe
local boolexpr uOe
local trigger rOe
local playerunitevent sOe
local code tOe
set NG=CreateTrigger()
set Boe=NG
set Noe=bj_mapInitialPlayableArea
set Moe=CreateRegion()
call RegionAddRect(Moe,Noe)
call TriggerRegisterEnterRegion(Boe,Moe,null)
set wOe=NG
set uOe=Condition(kuw)
call TriggerAddCondition(wOe,uOe)
set rOe=NG
call DisableTrigger(rOe)
set sOe=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tOe=juw
call emO(sOe,null,tOe,null)
set Boe=null
set Noe=null
set Moe=null
set wOe=null
set uOe=null
set rOe=null
set sOe=null
return true
endfunction
function iPl takes nothing returns boolean
local playerunitevent sPl=EVENT_PLAYER_UNIT_SPELL_CAST
local code tPl=F7
call emO(sPl,null,tPl,null)
set sPl=null
return true
endfunction
function iRe takes nothing returns boolean
return true
endfunction
function Lwu takes string Awu returns boolean
local playerunitevent Dwu
local code Hwu
local playerunitevent Jwu
local code Kwu
set aW[qW]=Awu
set qW=qW+1
set CG=SRr("when calling new_HashMap in SpecialUnits, line 10")
set Dwu=EVENT_PLAYER_UNIT_ATTACKED
set Hwu=fuw
call emO(Dwu,null,Hwu,null)
set Jwu=EVENT_PLAYER_UNIT_DEATH
set Kwu=Ruw
call emO(Jwu,null,Kwu,null)
set qW=qW-1
set Dwu=null
set Jwu=null
return true
endfunction
function iRl takes nothing returns boolean
set qW=0
return Lwu("via function reference SpecialUnits, line 1")
endfunction
function iTl takes nothing returns boolean
return true
endfunction
function iTw takes nothing returns boolean
local trigger MRw=CreateTrigger()
local trigger wTw=MRw
local real uTw=7200.
local boolean rTw=false
local trigger sTw
local code tTw
call TriggerRegisterTimerEvent(wTw,uTw,rTw)
set sTw=MRw
set tTw=QM
call TriggerAddAction(sTw,tTw)
set MRw=null
set wTw=null
set sTw=null
return true
endfunction
function iVS takes nothing returns nothing
local unit ICS=GetTriggerUnit()
local unit ACS=ICS
local player PCS=GetOwningPlayer(ACS)
local unit DCS
local string HCS
local real JCS
local real KCS
local unit LCS
local unittype XCS
local unit CCS
local string VCS
local real BCS
local real NCS
local unit MCS
local unittype wVS
local real uVS
local real rVS
local real sVS
local real tVS
if PCS==du then
set DCS=ICS
set HCS="attack"
set uVS=Qw[26]
set rVS=Ww[26]
set JCS=uVS
set KCS=rVS
call IssuePointOrder(DCS,HCS,JCS,KCS)
set LCS=ICS
set XCS=UNIT_TYPE_HERO
if IsUnitType(LCS,XCS) then
call SaveInteger(qu,GetHandleId(ICS),$6D6F7665,26)
endif
else
set CCS=ICS
set VCS="attack"
set sVS=Qw[53]
set tVS=Ww[53]
set BCS=sVS
set NCS=tVS
call IssuePointOrder(CCS,VCS,BCS,NCS)
set MCS=ICS
set wVS=UNIT_TYPE_HERO
if IsUnitType(MCS,wVS) then
call SaveInteger(qu,GetHandleId(ICS),$6D6F7665,53)
endif
endif
set ICS=null
set PCS=null
set ACS=null
set DCS=null
set LCS=null
set XCS=null
set CCS=null
set MCS=null
set wVS=null
endfunction
function ieS takes nothing returns boolean
local trigger BpS
local trigger NpS
local playerunitevent MpS
local trigger weS
local playerunitevent ueS
local integer reS
local trigger seS
local code teS
set Wa=CreateTrigger()
set BpS=Wa
call DisableTrigger(BpS)
set NpS=Wa
set MpS=EVENT_PLAYER_UNIT_ATTACKED
set weS=NpS
set ueS=MpS
set reS=0
loop
call TriggerRegisterPlayerUnitEvent(weS,Player(reS),ueS,null)
set reS=reS+1
exitwhen reS==bj_MAX_PLAYER_SLOTS
endloop
set seS=Wa
set teS=n5
call TriggerAddAction(seS,teS)
set BpS=null
set NpS=null
set MpS=null
set weS=null
set ueS=null
set seS=null
return true
endfunction
function ieu takes nothing returns nothing
local unit Jpu=GetTriggerUnit()
local unit Cpu=Jpu
local integer Kpu=GetUnitTypeId(Cpu)
local unit Vpu=Jpu
local player Lpu=GetOwningPlayer(Vpu)
local player Bpu=Lpu
local integer Xpu=GetPlayerId(Bpu)
local sound Npu
local trigger Mpu
local sound weu
local trigger ueu
local trigger reu
local trigger seu
local trigger teu
if Kpu==$6E6E6164 then
set i[Xpu]=$484D3034
set Npu=vq
call StartSound(Npu)
set Mpu=np
call EnableTrigger(Mpu)
endif
if Kpu==$6E736870 then
set s[Xpu]=$45657669
set weu=Js
call StartSound(weu)
endif
if Kpu==$656D6F77 then
call RemoveUnitFromStock(O[Xpu],A[Xpu])
call RemoveUnitFromStock(b[Xpu],A[Xpu])
call RemoveUnitFromStock(l[Xpu],A[Xpu])
set A[Xpu]=$6E6E7375
call AddUnitToStock(O[Xpu],A[Xpu],1,3)
call AddUnitToStock(b[Xpu],A[Xpu],1,3)
call AddUnitToStock(l[Xpu],A[Xpu],1,3)
endif
if Kpu==$6E637431 then
set ueu=np
call EnableTrigger(ueu)
call RemoveUnitFromStock(O[Xpu],D[Xpu])
call RemoveUnitFromStock(b[Xpu],D[Xpu])
call RemoveUnitFromStock(l[Xpu],D[Xpu])
set D[Xpu]=$6E687968
call AddUnitToStock(O[Xpu],D[Xpu],1,3)
call AddUnitToStock(b[Xpu],D[Xpu],1,3)
call AddUnitToStock(l[Xpu],D[Xpu],1,3)
endif
if Kpu==$65746F61 then
call RemoveUnitFromStock(O[Xpu],H[Xpu])
call RemoveUnitFromStock(b[Xpu],H[Xpu])
call RemoveUnitFromStock(l[Xpu],H[Xpu])
set H[Xpu]=$6E30304D
call AddUnitToStock(O[Xpu],H[Xpu],1,3)
call AddUnitToStock(b[Xpu],H[Xpu],1,3)
call AddUnitToStock(l[Xpu],H[Xpu],1,3)
endif
if Kpu==$6E6D726B then
set reu=GG
call EnableTrigger(reu)
set J[Xpu]=$6E6E7273
endif
if Kpu==$65617465 then
set K[Xpu]=$6E303154
endif
if Kpu==$6E667633 then
set K[Xpu]=$6E666F74
endif
if Kpu==$6E303431 then
set L[Xpu]=$6E303432
endif
if Kpu==$6E667630 then
call SetPlayerTechResearched(Lpu,$52303348,1)
call SetPlayerTechResearched(Player(Xpu+4),$52303348,1)
endif
if Kpu==$65746F65 then
set seu=np
call EnableTrigger(seu)
set teu=GG
call EnableTrigger(teu)
endif
set Jpu=null
set Lpu=null
set Cpu=null
set Vpu=null
set Bpu=null
set Npu=null
set Mpu=null
set weu=null
set ueu=null
set reu=null
set seu=null
set teu=null
endfunction
function bMu takes string cMu returns integer
local integer oMu
local string OMu
local integer lMu
set aW[qW]=cMu
set qW=qW+1
set OMu="when calling alloc_Table in Table, line 6"
set aW[qW]=OMu
set qW=qW+1
if HF==0 then
if JF<32768 then
set JF=JF+1
set lMu=JF
set KF[lMu]=2640
else
call L8c("Out of memory: Could not create Table.","when calling error in Table, line 7")
set lMu=0
endif
else
set HF=HF-1
set lMu=DF[HF]
set KF[lMu]=2640
endif
set qW=qW-1
set oMu=lMu
set qW=qW-1
return oMu
endfunction
function Mmi takes string Imi returns boolean
local string Pmi
local integer Ami
local integer Dmi
local string Hmi
local string Jmi
local integer Kmi
local integer Lmi
local string Xmi
local hashtable Cmi
local integer Vmi
local integer Bmi
local string Nmi
set aW[qW]=Imi
set qW=qW+1
set Sh=bMu("when calling new_Table in TypeCasting, line 7")
set Pmi="when calling initTypecastData in TypeCasting, line 15"
set aW[qW]=Pmi
set qW=qW+1
set Ami=Sh
set Dmi=0
set Hmi=""
set Jmi="when calling saveString in TypeCasting, line 12"
set aW[qW]=Jmi
set qW=qW+1
if KF[Ami]==0 then
if Ami==0 then
call L8c("Nullpointer exception when calling Table.saveString","when calling error in Table, line 61")
else
call L8c("Called Table.saveString on invalid object.","when calling error in Table, line 61")
endif
endif
set Kmi=Ami
set Lmi=Dmi
set Xmi=Hmi
set Cmi=Sg
set Vmi=Kmi
set Bmi=Lmi
set Nmi=Xmi
call SaveStr(Cmi,Vmi,Bmi,Nmi)
set qW=qW-1
set qW=qW-1
set qW=qW-1
set Cmi=null
return true
endfunction
function ift takes nothing returns boolean
set qW=0
return Mmi("via function reference TypeCasting, line 1")
endfunction
function FMp takes integer YMp,integer GMp,string gMp returns integer
local integer hMp
set aW[qW]=gMp
set qW=qW+1
set hMp=0
loop
exitwhen hMp>5
if xnS(YMp,hMp,"when reading array Inventory_inventory in  in InventoryClass, line 18")==GMp then
call yUl(YMp,hMp,"when calling removeFromSlot in InventoryClass, line 19")
set qW=qW-1
return hMp
endif
set hMp=hMp+1
endloop
set qW=qW-1
return -1
endfunction
function DEo takes player tEo,integer iEo,string SEo returns nothing
local unit cEo
local integer oEo
local integer OEo
local item lEo
local integer bEo
local integer yEo
local string pEo
local integer eEo
local integer qEo
local player aEo
local integer nEo
local integer dEo
local string fEo
local integer REo
local player TEo
local unit YEo
local integer GEo
local item gEo
local unit hEo
local string FEo
local unit kEo
local unit jEo
local handle xEo
local integer vEo
local unit mEo
local string QEo
local player WEo
local integer EEo
local integer ZEo
local integer UEo
local integer IEo
local integer PEo
local integer AEo
set aW[qW]=SEo
set qW=qW+1
set bEo=mG
set aEo=tEo
set yEo=Zn[GetPlayerId(aEo)+4]
set pEo="when calling getActiveHero in ItemMerchantSell, line 17"
set aW[qW]=pEo
set qW=qW+1
if LF[yEo]==0 then
if yEo==0 then
call L8c("Nullpointer exception when calling HeroIcons.getActiveHero","when calling error in HeroIconsClass, line 30")
else
call L8c("Called HeroIcons.getActiveHero on invalid object.","when calling error in HeroIconsClass, line 30")
endif
endif
set qEo=yEo
set UEo=Px[qEo]
set IEo=Ax[qEo]
set PEo=Dx[qEo]
set eEo=UEo
set qW=qW-1
set AEo=eEo
set oEo=AEo
set cEo=Uqc(gar(bEo,oEo,"when calling get in ItemMerchantSell, line 17"),"when calling unitFromIndex in ItemMerchantSell, line 17")
set TEo=tEo
set nEo=En[GetPlayerId(TEo)+4]
set dEo=iEo
set fEo="when calling removeById in ItemMerchantSell, line 18"
set aW[qW]=fEo
set qW=qW+1
if XF[nEo]==0 then
if nEo==0 then
call L8c("Nullpointer exception when calling Inventory.removeById","when calling error in InventoryClass, line 16")
else
call L8c("Called Inventory.removeById on invalid object.","when calling error in InventoryClass, line 16")
endif
endif
set REo=FMp(nEo,dEo,"when calling removeById in InventoryClass, line 16")
set qW=qW-1
set OEo=REo
if OEo!=-1 then
set YEo=cEo
set GEo=OEo
set lEo=UnitRemoveItemFromSlot(YEo,GEo)
set gEo=lEo
call RemoveItem(gEo)
set hEo=cEo
set FEo="when calling saveHero in ItemMerchantSell, line 22"
set aW[qW]=FEo
set qW=qW+1
set EEo=mG
set kEo=hEo
set ZEo=GetUnitTypeId(kEo)
set jEo=hEo
set xEo=jEo
call TKO(EEo,ZEo,GetHandleId(xEo),"when calling put in SaveHero, line 9")
set qW=qW-1
set WEo=tEo
set vEo=En[GetPlayerId(WEo)+4]
set mEo=cEo
set QEo="when calling renderUnitInventory in ItemMerchantSell, line 23"
set aW[qW]=QEo
set qW=qW+1
if XF[vEo]==0 then
if vEo==0 then
call L8c("Nullpointer exception when calling Inventory.renderUnitInventory","when calling error in InventoryClass, line 35")
else
call L8c("Called Inventory.renderUnitInventory on invalid object.","when calling error in InventoryClass, line 35")
endif
endif
call hjp(vEo,mEo,"when calling renderUnitInventory in InventoryClass, line 35")
set qW=qW-1
endif
set qW=qW-1
set cEo=null
set lEo=null
set aEo=null
set TEo=null
set YEo=null
set gEo=null
set hEo=null
set kEo=null
set jEo=null
set xEo=null
set mEo=null
set WEo=null
endfunction
function iIp takes integer BUp,string NUp returns integer
local integer MUp
local string wIp
local integer uIp
local integer rIp
local integer sIp
local integer tIp
set aW[qW]=NUp
set qW=qW+1
set wIp="when calling alloc_HLIterator in HashList, line 159"
set aW[qW]=wIp
set qW=qW+1
if EF==0 then
if ZF<32768 then
set ZF=ZF+1
set uIp=ZF
else
call L8c("Out of memory: Could not create HLIterator.","when calling error in HashList, line 155")
set uIp=0
endif
else
set EF=EF-1
set uIp=WF[EF]
endif
set qW=qW-1
set MUp=uIp
set rIp=MUp
set sIp=BUp
set tIp=rIp
set mx[tIp]=0
set Qx[rIp]=sIp
set qW=qW-1
return MUp
endfunction
function Fhc takes integer ehc,string qhc returns integer
local integer ahc
local integer nhc
local string dhc
local integer fhc
local integer Rhc
local string Thc
local integer Yhc
local integer Ghc
local string ghc
local integer hhc
set aW[qW]=qhc
set qW=qW+1
if KF[ehc]==0 then
if ehc==0 then
call L8c("Nullpointer exception when calling IterableMap.iterator","when calling error in HashMap, line 83")
else
call L8c("Called IterableMap.iterator on invalid object.","when calling error in HashMap, line 83")
endif
endif
set nhc=ehc
set dhc="when calling iterator in HashMap, line 83"
set aW[qW]=dhc
set qW=qW+1
set Rhc=Zx[nhc]
set Thc="when calling iterator in HashMap, line 84"
set aW[qW]=Thc
set qW=qW+1
if AF[Rhc]==0 then
if Rhc==0 then
call L8c("Nullpointer exception when calling HashList.iterator","when calling error in HashList, line 112")
else
call L8c("Called HashList.iterator on invalid object.","when calling error in HashList, line 112")
endif
endif
set Ghc=Rhc
set ghc="when calling iterator in HashList, line 112"
set aW[qW]=ghc
set qW=qW+1
set hhc=iIp(Ghc,"when calling new_HLIterator in HashList, line 113")
set qW=qW-1
set Yhc=hhc
set qW=qW-1
set fhc=Yhc
set qW=qW-1
set ahc=fhc
set qW=qW-1
return ahc
endfunction
function DWt takes string OWt returns nothing
local player lWt
local integer bWt
local integer yWt
local integer pWt
local player eWt
local player qWt
local player aWt
local player nWt
local integer dWt
local string fWt
local boolean RWt
local integer TWt
local string YWt
local integer GWt
local integer gWt
local integer hWt
local string FWt
local integer kWt
local integer jWt
local integer xWt
local string vWt
local integer mWt
local integer QWt
local integer WWt
local hashtable EWt
local integer ZWt
local integer UWt
local boolean IWt
local boolean PWt
local integer AWt
set aW[qW]=OWt
set qW=qW+1
set lWt=GetTriggerPlayer()
set bWt=GetSpellAbilityId()
set eWt=lWt
if En[GetPlayerId(eWt)+4]!=0 then
set qWt=lWt
set aWt=qWt
if GetPlayerSlotState(aWt)==PLAYER_SLOT_STATE_PLAYING then
set nWt=qWt
set IWt=GetPlayerController(nWt)==MAP_CONTROL_USER
else
set IWt=false
endif
set PWt=IWt
else
set PWt=false
endif
if PWt then
set pWt=Fhc(vn,"when calling iterator in ItemMerchantSell, line 40")
loop
set dWt=pWt
set fWt="when calling hasNext in ItemMerchantSell, line 40"
set aW[qW]=fWt
set qW=qW+1
set AWt=mx[dWt]
set TWt=Qx[dWt]
set YWt="when calling size in HashList, line 163"
set aW[qW]=YWt
set qW=qW+1
if AF[TWt]==0 then
if TWt==0 then
call L8c("Nullpointer exception when calling HashList.size","when calling error in HashList, line 92")
else
call L8c("Called HashList.size on invalid object.","when calling error in HashList, line 92")
endif
endif
set gWt=TWt
set GWt=Wx[gWt]
set qW=qW-1
set RWt=AWt<GWt
set qW=qW-1
exitwhen not RWt
set hWt=pWt
set FWt="when calling next in ItemMerchantSell, line 40"
set aW[qW]=FWt
set qW=qW+1
set mx[hWt]=mx[hWt]+1
set jWt=Qx[hWt]
set xWt=mx[hWt]-1
set vWt="when calling get in HashList, line 171"
set aW[qW]=vWt
set qW=qW+1
if AF[jWt]==0 then
if jWt==0 then
call L8c("Nullpointer exception when calling HashList.get","when calling error in HashList, line 100")
else
call L8c("Called HashList.get on invalid object.","when calling error in HashList, line 100")
endif
endif
set QWt=jWt
set WWt=xWt
set EWt=nq
set ZWt=QWt
set UWt=WWt
set mWt=LoadInteger(EWt,ZWt,UWt)
set qW=qW-1
set kWt=mWt
set qW=qW-1
set yWt=kWt
if gar(vn,yWt,"when calling get in ItemMerchantSell, line 41")==bWt then
call DEo(lWt,gar(vn,yWt,"when calling get in ItemMerchantSell, line 42"),"when calling sellItem in ItemMerchantSell, line 42")
endif
endloop
endif
set qW=qW-1
set lWt=null
set eWt=null
set qWt=null
set aWt=null
set nWt=null
set EWt=null
endfunction
function ihp takes nothing returns nothing
set qW=0
call DWt("via function reference ItemMerchantSell, line 36")
endfunction
function ijy takes nothing returns boolean
return true
endfunction
function inr takes nothing returns boolean
return true
endfunction
function inu takes nothing returns boolean
local trigger Zau
local trigger Uau
local playerunitevent Iau
local trigger Pau
local playerunitevent Aau
local integer Dau
local trigger Hau
local boolexpr Jau
local trigger Kau
local code Lau
local playerunitevent Xau
local code Cau
local playerunitevent Vau
local code Bau
local playerunitevent Nau
local code Mau
local trigger wnu
local real unu
local boolean rnu
local trigger snu
local code tnu
set Vo=CreateTrigger()
set Bo=CreateTrigger()
set No=CreateTrigger()
set Mo=CreateGroup()
set wO=CreateGroup()
set uO=CreateGroup()
set rO=CreateGroup()
set sO=CreateGroup()
set tO=CreateGroup()
set Uau=Vo
set Iau=EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
set Pau=Uau
set Aau=Iau
set Dau=0
loop
call TriggerRegisterPlayerUnitEvent(Pau,Player(Dau),Aau,null)
set Dau=Dau+1
exitwhen Dau==bj_MAX_PLAYER_SLOTS
endloop
set Hau=Vo
set Jau=Condition(lN)
call TriggerAddCondition(Hau,Jau)
set Kau=Vo
set Lau=bN
call TriggerAddAction(Kau,Lau)
set Xau=EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
set Cau=yN
call emO(Xau,null,Cau,null)
set Vau=EVENT_PLAYER_UNIT_ATTACKED
set Bau=pN
call emO(Vau,null,Bau,null)
set Nau=EVENT_PLAYER_UNIT_DEATH
set Mau=eN
call emO(Nau,null,Mau,null)
set Zau=CreateTrigger()
set wnu=Zau
set unu=2.5
set rnu=true
call TriggerRegisterTimerEvent(wnu,unu,rnu)
set snu=Zau
set tnu=qN
call TriggerAddAction(snu,tnu)
set Zau=null
set Uau=null
set Iau=null
set Pau=null
set Aau=null
set Hau=null
set Jau=null
set Kau=null
set Xau=null
set Vau=null
set Nau=null
set wnu=null
set snu=null
return true
endfunction
function ioi takes nothing returns boolean
return GetSpellAbilityId()==$41313530
endfunction
function ipw takes nothing returns boolean
local playerunitevent spw=EVENT_PLAYER_UNIT_DEATH
local code tpw=o2
call emO(spw,null,tpw,null)
set spw=null
return true
endfunction
function ivt takes nothing returns boolean
local trigger Bxt
local trigger Nxt
local playerunitevent Mxt
local trigger wvt
local playerunitevent uvt
local integer rvt
local trigger svt
local code tvt
set FT=CreateTrigger()
set Bxt=FT
call DisableTrigger(Bxt)
set Nxt=FT
set Mxt=EVENT_PLAYER_UNIT_DEATH
set wvt=Nxt
set uvt=Mxt
set rvt=0
loop
call TriggerRegisterPlayerUnitEvent(wvt,Player(rvt),uvt,null)
set rvt=rvt+1
exitwhen rvt==bj_MAX_PLAYER_SLOTS
endloop
set svt=FT
set tvt=N0w
call TriggerAddAction(svt,tvt)
set Bxt=null
set Nxt=null
set Mxt=null
set wvt=null
set uvt=null
set svt=null
return true
endfunction
function iwu takes nothing returns boolean
return true
endfunction
function iyw takes nothing returns nothing
local unit ibw=GetTriggerUnit()
local unit cbw=ibw
local player Sbw=GetOwningPlayer(cbw)
local unit obw
local string Obw
local real lbw
local real bbw
local unit ybw
local unittype pbw
local unit ebw
local string qbw
local real abw
local real nbw
local unit dbw
local unittype fbw
local unit Rbw
local string Tbw
local real Ybw
local real Gbw
local unit gbw
local unittype hbw
local unit Fbw
local string kbw
local real jbw
local real xbw
local unit vbw
local unittype mbw
local unit Qbw
local string Wbw
local real Ebw
local real Zbw
local unit Ubw
local unittype Ibw
local unit Pbw
local string Abw
local real Dbw
local real Hbw
local unit Jbw
local unittype Kbw
local real Lbw
local real Xbw
local real Cbw
local real Vbw
local real Bbw
local real Nbw
local real Mbw
local real wyw
local real uyw
local real ryw
local real syw
local real tyw
if Sbw==du then
set obw=ibw
set Obw="attack"
set Lbw=Qw[27]
set Xbw=Ww[27]
set lbw=Lbw
set bbw=Xbw
call IssuePointOrder(obw,Obw,lbw,bbw)
set ybw=ibw
set pbw=UNIT_TYPE_HERO
if IsUnitType(ybw,pbw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,27)
endif
endif
if Sbw==nu then
if Ew[3]==true then
set ebw=ibw
set qbw="attack"
set Cbw=Qw[53]
set Vbw=Ww[53]
set abw=Cbw
set nbw=Vbw
call IssuePointOrder(ebw,qbw,abw,nbw)
set dbw=ibw
set fbw=UNIT_TYPE_HERO
if IsUnitType(dbw,fbw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,53)
endif
else
set Rbw=ibw
set Tbw="attack"
set Bbw=Qw[27]
set Nbw=Ww[27]
set Ybw=Bbw
set Gbw=Nbw
call IssuePointOrder(Rbw,Tbw,Ybw,Gbw)
set gbw=ibw
set hbw=UNIT_TYPE_HERO
if IsUnitType(gbw,hbw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,27)
endif
endif
endif
if Sbw==fu then
if Ew[0]==true then
set Fbw=ibw
set kbw="attack"
set Mbw=Qw[27]
set wyw=Ww[27]
set jbw=Mbw
set xbw=wyw
call IssuePointOrder(Fbw,kbw,jbw,xbw)
set vbw=ibw
set mbw=UNIT_TYPE_HERO
if IsUnitType(vbw,mbw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,27)
endif
else
set Qbw=ibw
set Wbw="attack"
set uyw=Qw[53]
set ryw=Ww[53]
set Ebw=uyw
set Zbw=ryw
call IssuePointOrder(Qbw,Wbw,Ebw,Zbw)
set Ubw=ibw
set Ibw=UNIT_TYPE_HERO
if IsUnitType(Ubw,Ibw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,53)
endif
endif
endif
if Sbw==Ru then
set Pbw=ibw
set Abw="attack"
set syw=Qw[53]
set tyw=Ww[53]
set Dbw=syw
set Hbw=tyw
call IssuePointOrder(Pbw,Abw,Dbw,Hbw)
set Jbw=ibw
set Kbw=UNIT_TYPE_HERO
if IsUnitType(Jbw,Kbw) then
call SaveInteger(qu,GetHandleId(ibw),$6D6F7665,53)
endif
endif
set ibw=null
set Sbw=null
set cbw=null
set obw=null
set ybw=null
set pbw=null
set ebw=null
set dbw=null
set fbw=null
set Rbw=null
set gbw=null
set hbw=null
set Fbw=null
set vbw=null
set mbw=null
set Qbw=null
set Ubw=null
set Ibw=null
set Pbw=null
set Jbw=null
set Kbw=null
endfunction
function j1y takes nothing returns nothing
local unit j3y=GetTriggerUnit()
local unit v3y=j3y
local player x3y=GetOwningPlayer(v3y)
local unit m3y
local string Q3y
local real W3y
local real E3y
local unit Z3y
local unittype U3y
local unit I3y
local string P3y
local real A3y
local real D3y
local unit H3y
local unittype J3y
local unit K3y
local string L3y
local real X3y
local real C3y
local unit V3y
local unittype B3y
local unit N3y
local string M3y
local real w1y
local real u1y
local unit r1y
local unittype s1y
local unit t1y
local string i1y
local real S1y
local real c1y
local unit o1y
local unittype O1y
local unit l1y
local string b1y
local real y1y
local real p1y
local unit e1y
local unittype q1y
local real a1y
local real n1y
local real d1y
local real f1y
local real R1y
local real T1y
local real Y1y
local real G1y
local real g1y
local real h1y
local real F1y
local real k1y
if x3y==du then
set m3y=j3y
set Q3y="attack"
set a1y=Qw[51]
set n1y=Ww[51]
set W3y=a1y
set E3y=n1y
call IssuePointOrder(m3y,Q3y,W3y,E3y)
set Z3y=j3y
set U3y=UNIT_TYPE_HERO
if IsUnitType(Z3y,U3y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,51)
endif
endif
if x3y==nu then
if Ew[2]==true then
set I3y=j3y
set P3y="attack"
set d1y=Qw[25]
set f1y=Ww[25]
set A3y=d1y
set D3y=f1y
call IssuePointOrder(I3y,P3y,A3y,D3y)
set H3y=j3y
set J3y=UNIT_TYPE_HERO
if IsUnitType(H3y,J3y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,25)
endif
else
set K3y=j3y
set L3y="attack"
set R1y=Qw[51]
set T1y=Ww[51]
set X3y=R1y
set C3y=T1y
call IssuePointOrder(K3y,L3y,X3y,C3y)
set V3y=j3y
set B3y=UNIT_TYPE_HERO
if IsUnitType(V3y,B3y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,51)
endif
endif
endif
if x3y==fu then
set N3y=j3y
set M3y="attack"
set Y1y=Qw[25]
set G1y=Ww[25]
set w1y=Y1y
set u1y=G1y
call IssuePointOrder(N3y,M3y,w1y,u1y)
set r1y=j3y
set s1y=UNIT_TYPE_HERO
if IsUnitType(r1y,s1y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,25)
endif
endif
if x3y==Ru then
if Ew[0]==true then
set t1y=j3y
set i1y="attack"
set g1y=Qw[51]
set h1y=Ww[51]
set S1y=g1y
set c1y=h1y
call IssuePointOrder(t1y,i1y,S1y,c1y)
set o1y=j3y
set O1y=UNIT_TYPE_HERO
if IsUnitType(o1y,O1y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,51)
endif
else
set l1y=j3y
set b1y="attack"
set F1y=Qw[25]
set k1y=Ww[25]
set y1y=F1y
set p1y=k1y
call IssuePointOrder(l1y,b1y,y1y,p1y)
set e1y=j3y
set q1y=UNIT_TYPE_HERO
if IsUnitType(e1y,q1y) then
call SaveInteger(qu,GetHandleId(j3y),$6D6F7665,25)
endif
endif
endif
set j3y=null
set x3y=null
set v3y=null
set m3y=null
set Z3y=null
set U3y=null
set I3y=null
set H3y=null
set J3y=null
set K3y=null
set V3y=null
set B3y=null
set N3y=null
set r1y=null
set s1y=null
set t1y=null
set o1y=null
set O1y=null
set l1y=null
set e1y=null
set q1y=null
endfunction
function j2e takes nothing returns boolean
return true
endfunction
function j4r takes nothing returns boolean
local playerunitevent F4r=EVENT_PLAYER_UNIT_SPELL_CAST
local code k4r=VM
call emO(F4r,null,k4r,null)
set F4r=null
return true
endfunction
function j6w takes nothing returns nothing
local unit c6w=GetKillingUnit()
local unit e6w=c6w
local integer o6w=GetUnitTypeId(e6w)
local unit q6w=c6w
local player O6w=GetOwningPlayer(q6w)
local integer l6w=GetPlayerTechCount(O6w,$52303045,true)
local integer b6w
local player y6w
local integer p6w
local player a6w
local unit n6w
local player d6w
local player f6w
local integer R6w
local player T6w
local playerstate Y6w
local integer G6w
local player g6w
local playerstate h6w
local player F6w
local playerstate k6w
if o6w==$6E777267 or o6w==$6E736767 and l6w>0 then
set b6w=6*l6w
set n6w=c6w
set a6w=GetOwningPlayer(n6w)
set y6w=Player(GetPlayerId(a6w)-4)
set d6w=y6w
set p6w=GetPlayerId(d6w)
set f6w=y6w
set R6w=b6w
set T6w=f6w
set Y6w=PLAYER_STATE_RESOURCE_GOLD
set G6w=R6w
set F6w=T6w
set k6w=Y6w
set g6w=T6w
set h6w=Y6w
call SetPlayerState(F6w,k6w,GetPlayerState(g6w,h6w)+G6w)
call UuS(c6w,b6w)
set hr[p6w]=hr[p6w]+b6w
set Fr[p6w]=Fr[p6w]+b6w
set Cr[p6w]=Cr[p6w]+b6w
endif
set c6w=null
set O6w=null
set y6w=null
set e6w=null
set q6w=null
set a6w=null
set n6w=null
set d6w=null
set f6w=null
set T6w=null
set Y6w=null
set g6w=null
set h6w=null
set F6w=null
set k6w=null
endfunction
function j7c takes nothing returns boolean
local trigger V6c
local trigger B6c
local rect N6c
local region M6c
local trigger w7c
local trigger u7c
local rect r7c
local region s7c
local trigger t7c
local trigger i7c
local rect S7c
local region c7c
local trigger o7c
local trigger O7c
local rect l7c
local region b7c
local trigger y7c
local trigger p7c
local rect e7c
local region q7c
local trigger a7c
local trigger n7c
local rect d7c
local region f7c
local trigger R7c
local trigger T7c
local rect Y7c
local region G7c
local trigger g7c
local trigger h7c
local rect F7c
local region k7c
set qT=CreateTrigger()
set aT=CreateTrigger()
set nT=CreateTrigger()
set dT=CreateTrigger()
set fT=CreateTrigger()
set RT=CreateTrigger()
set TT=CreateTrigger()
set YT=CreateTrigger()
set V6c=qT
call DisableTrigger(V6c)
set B6c=qT
set N6c=bs
set M6c=CreateRegion()
call RegionAddRect(M6c,N6c)
call TriggerRegisterEnterRegion(B6c,M6c,null)
call TriggerAddCondition(qT,Condition(H0w))
call TriggerAddAction(qT,J0w)
set w7c=aT
call DisableTrigger(w7c)
set u7c=aT
set r7c=ys
set s7c=CreateRegion()
call RegionAddRect(s7c,r7c)
call TriggerRegisterEnterRegion(u7c,s7c,null)
call TriggerAddCondition(aT,Condition(H0w))
call TriggerAddAction(aT,J0w)
set t7c=nT
call DisableTrigger(t7c)
set i7c=nT
set S7c=ps
set c7c=CreateRegion()
call RegionAddRect(c7c,S7c)
call TriggerRegisterEnterRegion(i7c,c7c,null)
call TriggerAddCondition(nT,Condition(H0w))
call TriggerAddAction(nT,J0w)
set o7c=dT
call DisableTrigger(o7c)
set O7c=dT
set l7c=es
set b7c=CreateRegion()
call RegionAddRect(b7c,l7c)
call TriggerRegisterEnterRegion(O7c,b7c,null)
call TriggerAddCondition(dT,Condition(H0w))
call TriggerAddAction(dT,J0w)
set y7c=fT
call DisableTrigger(y7c)
set p7c=fT
set e7c=qs
set q7c=CreateRegion()
call RegionAddRect(q7c,e7c)
call TriggerRegisterEnterRegion(p7c,q7c,null)
call TriggerAddCondition(fT,Condition(H0w))
call TriggerAddAction(fT,J0w)
set a7c=RT
call DisableTrigger(a7c)
set n7c=RT
set d7c=as
set f7c=CreateRegion()
call RegionAddRect(f7c,d7c)
call TriggerRegisterEnterRegion(n7c,f7c,null)
call TriggerAddCondition(RT,Condition(H0w))
call TriggerAddAction(RT,J0w)
set R7c=TT
call DisableTrigger(R7c)
set T7c=TT
set Y7c=ns
set G7c=CreateRegion()
call RegionAddRect(G7c,Y7c)
call TriggerRegisterEnterRegion(T7c,G7c,null)
call TriggerAddCondition(TT,Condition(H0w))
call TriggerAddAction(TT,J0w)
set g7c=YT
call DisableTrigger(g7c)
set h7c=YT
set F7c=ds
set k7c=CreateRegion()
call RegionAddRect(k7c,F7c)
call TriggerRegisterEnterRegion(h7c,k7c,null)
call TriggerAddCondition(YT,Condition(H0w))
call TriggerAddAction(YT,J0w)
set V6c=null
set B6c=null
set N6c=null
set M6c=null
set w7c=null
set u7c=null
set r7c=null
set s7c=null
set t7c=null
set i7c=null
set S7c=null
set c7c=null
set o7c=null
set O7c=null
set l7c=null
set b7c=null
set y7c=null
set p7c=null
set e7c=null
set q7c=null
set a7c=null
set n7c=null
set d7c=null
set f7c=null
set R7c=null
set T7c=null
set Y7c=null
set G7c=null
set g7c=null
set h7c=null
set F7c=null
set k7c=null
return true
endfunction
function j7i takes nothing returns boolean
local trigger J6i
local playerunitevent K6i
local trigger L6i
local playerunitevent X6i
local integer C6i
local trigger V6i
local code B6i
local trigger N6i
local trigger M6i
local real w7i
local boolean u7i
local trigger r7i
local code s7i
local trigger t7i
local trigger i7i
local playerunitevent S7i
local trigger c7i
local playerunitevent o7i
local integer O7i
local trigger l7i
local code b7i
local trigger y7i
local trigger p7i
local playerunitevent e7i
local trigger q7i
local playerunitevent a7i
local integer n7i
local trigger d7i
local boolexpr f7i
local trigger R7i
local trigger T7i
local playerunitevent Y7i
local trigger G7i
local playerunitevent g7i
local integer h7i
local trigger F7i
local code k7i
set Zh=CreateTrigger()
set Uh=CreateTrigger()
set Ih=CreateTrigger()
set Ph=CreateTrigger()
set Dh=CreateTrigger()
set Hh=CreateSound("WAGH.mp3",false,false,false,10,10,"DefaultEAXON")
set J6i=Ph
set K6i=EVENT_PLAYER_UNIT_ATTACKED
set L6i=J6i
set X6i=K6i
set C6i=0
loop
call TriggerRegisterPlayerUnitEvent(L6i,Player(C6i),X6i,null)
set C6i=C6i+1
exitwhen C6i==bj_MAX_PLAYER_SLOTS
endloop
set V6i=Ph
set B6i=jsw
call TriggerAddAction(V6i,B6i)
set N6i=Zh
call DisableTrigger(N6i)
set M6i=Zh
set w7i=1.
set u7i=true
call TriggerRegisterTimerEvent(M6i,w7i,u7i)
set r7i=Zh
set s7i=xsw
call TriggerAddAction(r7i,s7i)
set t7i=Uh
call DisableTrigger(t7i)
set i7i=Uh
set S7i=EVENT_PLAYER_UNIT_SPELL_CAST
set c7i=i7i
set o7i=S7i
set O7i=0
loop
call TriggerRegisterPlayerUnitEvent(c7i,Player(O7i),o7i,null)
set O7i=O7i+1
exitwhen O7i==bj_MAX_PLAYER_SLOTS
endloop
set l7i=Uh
set b7i=vsw
call TriggerAddAction(l7i,b7i)
set y7i=Ih
call DisableTrigger(y7i)
set p7i=Ih
set e7i=EVENT_PLAYER_HERO_REVIVE_FINISH
set q7i=p7i
set a7i=e7i
set n7i=0
loop
call TriggerRegisterPlayerUnitEvent(q7i,Player(n7i),a7i,null)
set n7i=n7i+1
exitwhen n7i==bj_MAX_PLAYER_SLOTS
endloop
set d7i=Ih
set f7i=Condition(msw)
call TriggerAddCondition(d7i,f7i)
set R7i=Dh
call DisableTrigger(R7i)
set T7i=Dh
set Y7i=EVENT_PLAYER_UNIT_SPELL_CAST
set G7i=T7i
set g7i=Y7i
set h7i=0
loop
call TriggerRegisterPlayerUnitEvent(G7i,Player(h7i),g7i,null)
set h7i=h7i+1
exitwhen h7i==bj_MAX_PLAYER_SLOTS
endloop
set F7i=Dh
set k7i=Qsw
call TriggerAddAction(F7i,k7i)
set J6i=null
set K6i=null
set L6i=null
set X6i=null
set V6i=null
set N6i=null
set M6i=null
set r7i=null
set t7i=null
set i7i=null
set S7i=null
set c7i=null
set o7i=null
set l7i=null
set y7i=null
set p7i=null
set e7i=null
set q7i=null
set a7i=null
set d7i=null
set f7i=null
set R7i=null
set T7i=null
set Y7i=null
set G7i=null
set g7i=null
set F7i=null
return true
endfunction
function j7l takes nothing returns boolean
return true
endfunction
function j9l takes nothing returns boolean
local string h9l
local string F9l
local string k9l
set qW=0
set h9l="via function reference ChannelAbilityPreset, line 1"
set aW[qW]=h9l
set qW=qW+1
set F9l="when calling new_OrderStringFactory in ChannelAbilityPreset, line 10"
set aW[qW]=F9l
set qW=qW+1
set k9l="when calling alloc_OrderStringFactory in OrderStringFactory, line 9"
set aW[qW]=k9l
set qW=qW+1
if pk==0 then
if ek<32768 then
set ek=ek+1
else
call L8c("Out of memory: Could not create OrderStringFactory.","when calling error in OrderStringFactory, line 9")
endif
else
set pk=pk-1
endif
set qW=qW-1
set qW=qW-1
set qW=qW-1
return true
endfunction
function jAl takes nothing returns boolean
local playerunitevent FAl=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code kAl=TM
call emO(FAl,null,kAl,null)
set FAl=null
return true
endfunction
function jDu takes nothing returns boolean
local trigger RDu
local trigger TDu
local playerunitevent YDu
local trigger GDu
local playerunitevent gDu
local integer hDu
local trigger FDu
local code kDu
set ud=CreateTrigger()
set RDu=ud
call DisableTrigger(RDu)
set TDu=ud
set YDu=EVENT_PLAYER_UNIT_ATTACKED
set GDu=TDu
set gDu=YDu
set hDu=0
loop
call TriggerRegisterPlayerUnitEvent(GDu,Player(hDu),gDu,null)
set hDu=hDu+1
exitwhen hDu==bj_MAX_PLAYER_SLOTS
endloop
set FDu=ud
set kDu=u7
call TriggerAddAction(FDu,kDu)
set RDu=null
set TDu=null
set YDu=null
set GDu=null
set gDu=null
set FDu=null
return true
endfunction
function jGS takes nothing returns nothing
local integer RGS=GetResearched()
local unit TGS=GetResearchingUnit()
local player YGS
local unit GGS
local player gGS
local trigger hGS
local trigger FGS
local trigger kGS
if RGS==$52303155 then
set GGS=TGS
set YGS=GetOwningPlayer(GGS)
set gGS=YGS
set X[GetPlayerId(gGS)]=$6E697477
endif
if RGS==$5230304E then
set hGS=La
call EnableTrigger(hGS)
endif
if RGS==$5230324C then
set FGS=cf
call EnableTrigger(FGS)
endif
if RGS==$5230304C then
set kGS=Tl
call EnableTrigger(kGS)
endif
set TGS=null
set YGS=null
set GGS=null
set gGS=null
set hGS=null
set FGS=null
set kGS=null
endfunction
function jLu takes nothing returns boolean
local trigger RLu
local trigger TLu
local playerunitevent YLu
local trigger GLu
local playerunitevent gLu
local integer hLu
local trigger FLu
local code kLu
set iY=CreateTrigger()
set RLu=iY
call DisableTrigger(RLu)
set TLu=iY
set YLu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GLu=TLu
set gLu=YLu
set hLu=0
loop
call TriggerRegisterPlayerUnitEvent(GLu,Player(hLu),gLu,null)
set hLu=hLu+1
exitwhen hLu==bj_MAX_PLAYER_SLOTS
endloop
set FLu=iY
set kLu=Yww_1782
call TriggerAddAction(FLu,kLu)
set RLu=null
set TLu=null
set YLu=null
set GLu=null
set gLu=null
set FLu=null
return true
endfunction
function jRe takes nothing returns boolean
return true
endfunction
function jRl takes nothing returns nothing
local integer GRl=GetResearched()
local player gRl
local integer hRl
local player FRl
local trigger kRl
if GRl==$52303543 then
set gRl=GetTriggerPlayer()
set hRl=$52303543
set FRl=gRl
if GetPlayerTechCount(FRl,hRl,true)==1 then
set kRl=ee
call EnableTrigger(kRl)
endif
endif
set gRl=null
set FRl=null
set kRl=null
endfunction
function jRt takes nothing returns boolean
return true
endfunction
function jSS takes nothing returns boolean
local playerunitevent FSS=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code kSS=m6
call emO(FSS,null,kSS,null)
set FSS=null
return true
endfunction
function jVp takes nothing returns boolean
local unit RVp=GetFilterUnit()
local unit TVp=RVp
local unit YVp
local unittype GVp
local unit gVp
local boolean hVp
local unit FVp
local boolean kVp
if UnitAlive(TVp)==true then
set YVp=RVp
set GVp=UNIT_TYPE_STRUCTURE
set hVp=IsUnitType(YVp,GVp)==false
else
set hVp=false
endif
if hVp then
set FVp=RVp
set gVp=GetAttacker()
set kVp=IsUnitEnemy(FVp,GetOwningPlayer(gVp))
else
set kVp=false
endif
set RVp=null
set TVp=null
set YVp=null
set GVp=null
set gVp=null
set FVp=null
return kVp
endfunction
function jbp takes nothing returns nothing
local unit N5p=GetResearchingUnit()
local integer M5p=GetResearched()
local unit O8p=N5p
local player w6p=GetOwningPlayer(O8p)
local integer u6p
local integer r6p
local group s6p
local filterfunc t6p
local unit i6p
local group S6p
local real c6p
local real o6p
local integer O6p
local integer l6p
local integer b6p
local integer y6p
local integer p6p
local integer e6p
local integer q6p
local integer a6p
local integer n6p
local integer d6p
local integer f6p
local real R6p
local real T6p
local integer Y6p
local integer G6p
local integer g6p
local integer h6p
local integer F6p
local integer k6p
local integer j6p
local integer x6p
local integer v6p
local integer m6p
local integer Q6p
local real W6p
local real E6p
local integer Z6p
local integer U6p
local integer I6p
local integer P6p
local integer A6p
local integer D6p
local integer H6p
local integer J6p
local integer K6p
local integer L6p
local integer X6p
local real C6p
local real V6p
local integer B6p
local integer N6p
local integer M6p
local integer w7p
local integer u7p
local integer r7p
local integer s7p
local integer t7p
local integer i7p
local integer S7p
local integer c7p
local real o7p
local real O7p
local integer l7p
local integer b7p
local integer y7p
local integer p7p
local integer e7p
local integer q7p
local integer a7p
local integer n7p
local integer d7p
local integer f7p
local integer R7p
local real T7p
local real Y7p
local integer G7p
local integer g7p
local integer h7p
local integer F7p
local integer k7p
local integer j7p
local integer x7p
local integer v7p
local integer m7p
local integer Q7p
local integer W7p
local real E7p
local real Z7p
local integer U7p
local integer I7p
local integer P7p
local integer A7p
local integer D7p
local integer H7p
local integer J7p
local integer K7p
local integer L7p
local integer X7p
local integer C7p
local real V7p
local real B7p
local integer N7p
local integer M7p
local integer w8p
local integer u8p
local integer r8p
local integer s8p
local integer t8p
local integer i8p
local integer S8p
local integer c8p
local integer o8p
local player l8p
local player b8p
local trigger y8p
local trigger p8p
local trigger e8p
local trigger q8p
local trigger a8p
local trigger n8p
local trigger d8p
local trigger f8p
local unit R8p
local trigger T8p
local group Y8p
local group G8p
local unit g8p
local unit h8p
local unit F8p
local unit k8p
local unit j8p
local integer x8p
local unit v8p
local integer m8p
local unit Q8p
local integer W8p
local integer E8p
local unit Z8p
local unit U8p
local integer I8p
local unit P8p
local integer A8p
local unit D8p
local integer H8p
local integer J8p
local unit K8p
local unit L8p
local integer X8p
local unit C8p
local integer V8p
local unit B8p
local integer N8p
local integer M8p
local unit w9p
local unit u9p
local integer r9p
local unit s9p
local integer t9p
local unit i9p
local integer S9p
local integer c9p
local unit o9p
local unit O9p
local integer l9p
local unit b9p
local integer y9p
local unit p9p
local integer e9p
local unit q9p
local integer a9p
local integer n9p
local unit d9p
local integer f9p
local unit R9p
local integer T9p
local integer Y9p
local unit G9p
local unit g9p
local integer h9p
local unit F9p
local unit k9p
local integer j9p
local unit x9p
local unit v9p
local integer m9p
local unit Q9p
local integer W9p
local unit E9p
local integer Z9p
local integer U9p
local unit I9p
local unit P9p
local integer A9p
local unit D9p
local integer H9p
local unit J9p
local integer K9p
local integer L9p
local unit X9p
local unit C9p
local integer V9p
local unit B9p
local integer N9p
local unit M9p
local integer w0p
local integer u0p
local unit r0p
local unit s0p
local integer t0p
local unit i0p
local integer S0p
local unit c0p
local integer o0p
local integer O0p
local unit l0p
local unit b0p
local integer y0p
local unit p0p
local integer e0p
local unit q0p
local integer a0p
local integer n0p
local unit d0p
local unit f0p
local unit R0p
local unit T0p
local integer Y0p
local unit G0p
local integer g0p
local unit h0p
local integer F0p
local integer k0p
local unit j0p
local unit x0p
local integer v0p
local unit m0p
local integer Q0p
local unit W0p
local integer E0p
local integer Z0p
local unit U0p
local unit I0p
local integer P0p
local unit A0p
local integer D0p
local unit H0p
local integer J0p
local integer K0p
local unit L0p
local unit X0p
local integer C0p
local unit V0p
local integer B0p
local unit N0p
local integer M0p
local integer w_p
local unit u_p
local unit r_p
local integer s_p
local unit t_p
local integer i_p
local unit S_p
local integer c_p
local unit o_p
local integer O_p
local integer l_p
local unit b_p
local integer y_p
local unit p_p
local integer e_p
local integer q_p
local unit a_p
local unit n_p
local integer d_p
local unit f_p
local unit R_p
local integer T_p
local unit Y_p
local unit G_p
local integer g_p
local unit h_p
local integer F_p
local unit k_p
local integer j_p
local integer x_p
local unit v_p
local unit m_p
local integer Q_p
local unit W_p
local integer E_p
local unit Z_p
local integer U_p
local integer I_p
local unit P_p
local unit A_p
local integer D_p
local unit H_p
local integer J_p
local unit K_p
local integer L_p
local integer X_p
local unit C_p
local unit V_p
local integer B_p
local unit N_p
local integer M_p
local unit wwp
local integer uwp
local integer rwp
local unit swp
local unit twp
local integer iwp
local unit Swp
local integer cwp
local unit owp
local integer Owp
local integer lwp
local unit bwp
local unit ywp
local unit pwp
local unit ewp
local integer qwp
local unit awp
local integer nwp
local unit dwp
local integer fwp
local integer Rwp
local unit Twp
local unit Ywp
local integer Gwp
local unit gwp
local integer hwp
local unit Fwp
local integer kwp
local integer jwp
local unit xwp
local unit vwp
local integer mwp
local unit Qwp
local integer Wwp
local unit Ewp
local integer Zwp
local integer Uwp
local unit Iwp
local unit Pwp
local integer Awp
local unit Dwp
local integer Hwp
local unit Jwp
local integer Kwp
local integer Lwp
local unit Xwp
local unit Cwp
local integer Vwp
local unit Bwp
local integer Nwp
local unit Mwp
local integer wup
local unit uup
local integer rup
local integer sup
local unit tup
local integer iup
local unit Sup
local integer cup
local integer oup
local unit Oup
local unit lup
local integer bup
local unit yup
local unit pup
local integer eup
local unit qup
local unit aup
local integer nup
local unit dup
local integer fup
local unit Rup
local integer Tup
local integer Yup
local unit Gup
local unit gup
local integer hup
local unit Fup
local integer kup
local unit jup
local integer xup
local integer vup
local unit mup
local unit Qup
local integer Wup
local unit Eup
local integer Zup
local unit Uup
local integer Iup
local integer Pup
local unit Aup
local unit Dup
local integer Hup
local unit Jup
local integer Kup
local unit Lup
local integer Xup
local integer Cup
local unit Vup
local unit Bup
local integer Nup
local unit Mup
local integer wrp
local unit urp
local integer rrp
local integer srp
local unit trp
local unit irp
local unit Srp
local unit crp
local integer orp
local unit Orp
local integer lrp
local unit brp
local integer yrp
local integer prp
local unit erp
local unit qrp
local integer arp
local unit nrp
local integer drp
local unit frp
local integer Rrp
local integer Trp
local unit Yrp
local unit Grp
local integer grp
local unit hrp
local integer Frp
local unit krp
local integer jrp
local integer xrp
local unit vrp
local unit mrp
local integer Qrp
local unit Wrp
local integer Erp
local unit Zrp
local integer Urp
local integer Irp
local unit Prp
local unit Arp
local integer Drp
local unit Hrp
local integer Jrp
local unit Krp
local integer Lrp
local unit Xrp
local integer Crp
local integer Vrp
local unit Brp
local integer Nrp
local unit Mrp
local integer wsp
local integer usp
local unit rsp
local unit ssp
local integer tsp
local unit isp
local unit Ssp
local integer csp
local unit osp
local unit Osp
local integer lsp
local unit bsp
local integer ysp
local unit psp
local integer esp
local integer qsp
local unit asp
local unit nsp
local integer dsp
local unit fsp
local integer Rsp
local unit Tsp
local integer Ysp
local integer Gsp
local unit gsp
local unit hsp
local integer Fsp
local unit ksp
local integer jsp
local unit xsp
local integer vsp
local integer msp
local unit Qsp
local unit Wsp
local integer Esp
local unit Zsp
local integer Usp
local unit Isp
local integer Psp
local integer Asp
local unit Dsp
local unit Hsp
local integer Jsp
local unit Ksp
local integer Lsp
local unit Xsp
local integer Csp
local integer Vsp
local unit Bsp
local unit Nsp
local unit Msp
local unit wtp
local integer utp
local unit rtp
local integer stp
local unit ttp
local integer itp
local integer Stp
local unit ctp
local unit otp
local integer Otp
local unit ltp
local integer btp
local unit ytp
local integer ptp
local integer etp
local unit qtp
local unit atp
local integer ntp
local unit dtp
local integer ftp
local unit Rtp
local integer Ttp
local integer Ytp
local unit Gtp
local unit gtp
local integer htp
local unit Ftp
local integer ktp
local unit jtp
local integer xtp
local integer vtp
local unit mtp
local unit Qtp
local integer Wtp
local unit Etp
local integer Ztp
local unit Utp
local integer Itp
local unit Ptp
local integer Atp
local integer Dtp
local unit Htp
local integer Jtp
local unit Ktp
local integer Ltp
local integer Xtp
local unit Ctp
local unit Vtp
local integer Btp
local unit Ntp
local unit Mtp
local integer wip
local unit uip
local unit rip
local integer sip
local unit tip
local integer iip
local unit Sip
local integer cip
local integer oip
local unit Oip
local unit lip
local integer bip
local unit yip
local integer pip
local unit eip
local integer qip
local integer aip
local unit nip
local unit dip
local integer fip
local unit Rip
local integer Tip
local unit Yip
local integer Gip
local integer gip
local unit hip
local unit Fip
local integer kip
local unit jip
local integer xip
local unit vip
local integer mip
local integer Qip
local unit Wip
local unit Eip
local integer Zip
local unit Uip
local integer Iip
local unit Pip
local integer Aip
local integer Dip
local unit Hip
local unit Jip
local unit Kip
local unit Lip
local integer Xip
local unit Cip
local integer Vip
local unit Bip
local integer Nip
local integer Mip
local unit wSp
local unit uSp
local integer rSp
local unit sSp
local integer tSp
local unit iSp
local integer SSp
local integer cSp
local unit oSp
local unit OSp
local integer lSp
local unit bSp
local integer ySp
local unit pSp
local integer eSp
local integer qSp
local unit aSp
local unit nSp
local integer dSp
local unit fSp
local integer RSp
local unit TSp
local integer YSp
local integer GSp
local unit gSp
local unit hSp
local integer FSp
local unit kSp
local integer jSp
local unit xSp
local integer vSp
local unit mSp
local integer QSp
local integer WSp
local unit ESp
local integer ZSp
local unit USp
local integer ISp
local integer PSp
local unit ASp
local unit DSp
local integer HSp
local unit JSp
local unit KSp
local integer LSp
local unit XSp
local unit CSp
local integer VSp
local unit BSp
local integer NSp
local unit MSp
local integer wcp
local integer ucp
local unit rcp
local unit scp
local integer tcp
local unit icp
local integer Scp
local unit ccp
local integer ocp
local integer Ocp
local unit lcp
local unit bcp
local integer ycp
local unit pcp
local integer ecp
local unit qcp
local integer acp
local integer ncp
local unit dcp
local unit fcp
local integer Rcp
local unit Tcp
local integer Ycp
local unit Gcp
local integer gcp
local integer hcp
local unit Fcp
local unit kcp
local integer jcp
local unit xcp
local integer vcp
local unit mcp
local integer Qcp
local integer Wcp
local unit Ecp
local unit Zcp
local unit Ucp
local unit Icp
local integer Pcp
local unit Acp
local integer Dcp
local unit Hcp
local integer Jcp
local integer Kcp
local unit Lcp
local unit Xcp
local integer Ccp
local unit Vcp
local integer Bcp
local unit Ncp
local integer Mcp
local integer wop
local unit uop
local unit rop
local integer sop
local unit top
local integer iop
local unit Sop
local integer cop
local integer oop
local unit Oop
local unit lop
local integer bop
local unit yop
local integer pop
local unit eop
local integer qop
local integer aop
local unit nop
local unit dop
local integer fop
local unit Rop
local integer Top
local unit Yop
local integer Gop
local unit gop
local integer hop
local integer Fop
local unit kop
local integer jop
local unit xop
local integer vop
local integer mop
local unit Qop
local unit Wop
local integer Eop
local unit Zop
local unit Uop
local integer Iop
local unit Pop
local unit Aop
local integer Dop
local unit Hop
local integer Jop
local unit Kop
local integer Lop
local integer Xop
local unit Cop
local unit Vop
local integer Bop
local unit Nop
local integer Mop
local unit wOp
local integer uOp
local integer rOp
local unit sOp
local unit tOp
local integer iOp
local unit SOp
local integer cOp
local unit oOp
local integer OOp
local integer lOp
local unit bOp
local unit yOp
local integer pOp
local unit eOp
local integer qOp
local unit aOp
local integer nOp
local integer dOp
local unit fOp
local unit ROp
local integer TOp
local unit YOp
local integer GOp
local unit gOp
local integer hOp
local integer FOp
local unit kOp
local unit jOp
local unit xOp
local unit vOp
local integer mOp
local unit QOp
local integer WOp
local unit EOp
local integer ZOp
local integer UOp
local unit IOp
local unit POp
local integer AOp
local unit DOp
local integer HOp
local unit JOp
local integer KOp
local integer LOp
local unit XOp
local unit COp
local integer VOp
local unit BOp
local integer NOp
local unit MOp
local integer wlp
local integer ulp
local unit rlp
local unit slp
local integer tlp
local unit ilp
local integer Slp
local unit clp
local integer olp
local integer Olp
local unit llp
local unit blp
local integer ylp
local unit plp
local integer elp
local unit qlp
local integer alp
local unit nlp
local integer dlp
local integer flp
local unit Rlp
local integer Tlp
local unit Ylp
local integer Glp
local integer glp
local unit hlp
local unit Flp
local integer klp
local unit jlp
local unit xlp
local integer vlp
local unit mlp
local unit Qlp
local integer Wlp
local unit Elp
local integer Zlp
local unit Ulp
local integer Ilp
local integer Plp
local unit Alp
local unit Dlp
local integer Hlp
local unit Jlp
local integer Klp
local unit Llp
local integer Xlp
local integer Clp
local unit Vlp
local unit Blp
local integer Nlp
local unit Mlp
local integer wbp
local unit ubp
local integer rbp
local integer sbp
local unit tbp
local unit ibp
local integer Sbp
local unit cbp
local integer obp
local unit Obp
local integer lbp
local integer bbp
local unit ybp
local unit pbp
local integer ebp
local unit qbp
local integer abp
local unit nbp
local integer dbp
local integer fbp
local group Rbp
local boolexpr Tbp
local trigger Ybp
local trigger Gbp
local trigger gbp
local trigger hbp
local trigger Fbp
local trigger kbp
if M5p==$52303631 then
set u6p=GetPlayerTechCount(w6p,$52303631,true)
set l8p=w6p
set b8p=w6p
set rs[GetPlayerId(l8p)]=rs[GetPlayerId(b8p)]+1
if u6p==2 then
call SetPlayerTechResearched(w6p,$52303633,1)
endif
if u6p==3 then
call SetPlayerTechResearched(w6p,$52303634,1)
endif
if u6p==4 then
call SetPlayerTechResearched(w6p,$52303637,1)
endif
endif
if M5p==$52303559 then
set y8p=qT
call EnableTrigger(y8p)
set p8p=aT
call EnableTrigger(p8p)
set e8p=nT
call EnableTrigger(e8p)
set q8p=dT
call EnableTrigger(q8p)
set a8p=fT
call EnableTrigger(a8p)
set n8p=RT
call EnableTrigger(n8p)
set d8p=TT
call EnableTrigger(d8p)
set f8p=YT
call EnableTrigger(f8p)
endif
if M5p==$52303644 then
set R8p=N5p
set r6p=GetPlayerTechCount(GetOwningPlayer(R8p),$52303644,true)
if r6p==1 then
set T8p=KR
call EnableTrigger(T8p)
set s6p=CreateGroup()
set t6p=Filter(o6)
call GroupEnumUnitsInRect(s6p,bj_mapInitialPlayableArea,t6p)
set S6p=s6p
loop
set Y8p=S6p
exitwhen not (FirstOfGroup(Y8p)!=null)
set G8p=S6p
set g8p=FirstOfGroup(G8p)
call GroupRemoveUnit(G8p,g8p)
set i6p=g8p
if i6p==G[1] then
set h8p=G[1]
set c6p=GetUnitX(h8p)
set F8p=G[1]
set o6p=GetUnitY(F8p)
set g[1]=CreateUnit(Ud,$6E303349,c6p,o6p,0.)
set k8p=G[1]
if GetUnitTypeId(k8p)==$6E676164 then
set j8p=G[1]
set x8p=$41303042
set O6p=GetUnitAbilityLevel(j8p,x8p)
set v8p=g[1]
set m8p=$41313053
call UnitAddAbility(v8p,m8p)
set Q8p=g[1]
set W8p=$41313053
set E8p=O6p
call SetUnitAbilityLevel(Q8p,W8p,E8p)
endif
set Z8p=G[1]
if GetUnitTypeId(Z8p)==$6E64727A then
set U8p=G[1]
set I8p=$41303852
set l6p=GetUnitAbilityLevel(U8p,I8p)
set P8p=g[1]
set A8p=$41313049
call UnitAddAbility(P8p,A8p)
set D8p=g[1]
set H8p=$41313049
set J8p=l6p
call SetUnitAbilityLevel(D8p,H8p,J8p)
endif
set K8p=G[1]
if GetUnitTypeId(K8p)==$6E647267 then
set L8p=G[1]
set X8p=$41303856
set b6p=GetUnitAbilityLevel(L8p,X8p)
set C8p=g[1]
set V8p=$41313054
call UnitAddAbility(C8p,V8p)
set B8p=g[1]
set N8p=$41313054
set M8p=b6p
call SetUnitAbilityLevel(B8p,N8p,M8p)
endif
set w9p=G[1]
if GetUnitTypeId(w9p)==$6E676D65 then
set u9p=G[1]
set r9p=$4130384F
set y6p=GetUnitAbilityLevel(u9p,r9p)
set s9p=g[1]
set t9p=$4131304A
call UnitAddAbility(s9p,t9p)
set i9p=g[1]
set S9p=$4131304A
set c9p=y6p
call SetUnitAbilityLevel(i9p,S9p,c9p)
endif
set o9p=G[1]
if GetUnitTypeId(o9p)==$6E647272 then
set O9p=G[1]
set l9p=$41303858
set p6p=GetUnitAbilityLevel(O9p,l9p)
set b9p=G[1]
set y9p=$41303859
set e6p=GetUnitAbilityLevel(b9p,y9p)
set p9p=g[1]
set e9p=$4131304B
call UnitAddAbility(p9p,e9p)
set q9p=g[1]
set a9p=$4131304B
set n9p=p6p
call SetUnitAbilityLevel(q9p,a9p,n9p)
set d9p=g[1]
set f9p=$4131304C
call UnitAddAbility(d9p,f9p)
set R9p=g[1]
set T9p=$4131304C
set Y9p=e6p
call SetUnitAbilityLevel(R9p,T9p,Y9p)
endif
set G9p=G[1]
if GetUnitTypeId(G9p)==$6E6D7232 then
set g9p=g[1]
set h9p=$41303853
call UnitAddAbility(g9p,h9p)
endif
set F9p=G[1]
if GetUnitTypeId(F9p)==$6E676F6C then
set k9p=g[1]
set j9p=$41303853
call UnitAddAbility(k9p,j9p)
endif
set x9p=G[1]
if GetUnitTypeId(x9p)==$6E64726F then
set v9p=G[1]
set m9p=$41303855
set q6p=GetUnitAbilityLevel(v9p,m9p)
set Q9p=g[1]
set W9p=$4131304E
call UnitAddAbility(Q9p,W9p)
set E9p=g[1]
set Z9p=$4131304E
set U9p=q6p
call SetUnitAbilityLevel(E9p,Z9p,U9p)
endif
set I9p=G[1]
if GetUnitTypeId(I9p)==$6E776774 then
set P9p=G[1]
set A9p=$41303850
set a6p=GetUnitAbilityLevel(P9p,A9p)
set D9p=g[1]
set H9p=$4131304F
call UnitAddAbility(D9p,H9p)
set J9p=g[1]
set K9p=$4131304F
set L9p=a6p
call SetUnitAbilityLevel(J9p,K9p,L9p)
endif
set X9p=G[1]
if GetUnitTypeId(X9p)==$6E647275 then
set C9p=G[1]
set V9p=$4130384E
set n6p=GetUnitAbilityLevel(C9p,V9p)
set B9p=g[1]
set N9p=$41313050
call UnitAddAbility(B9p,N9p)
set M9p=g[1]
set w0p=$41313050
set u0p=n6p
call SetUnitAbilityLevel(M9p,w0p,u0p)
endif
set r0p=G[1]
if GetUnitTypeId(r0p)==$6E666F68 then
set s0p=G[1]
set t0p=$4130384D
set d6p=GetUnitAbilityLevel(s0p,t0p)
set i0p=g[1]
set S0p=$41313051
call UnitAddAbility(i0p,S0p)
set c0p=g[1]
set o0p=$41313051
set O0p=d6p
call SetUnitAbilityLevel(c0p,o0p,O0p)
endif
set l0p=G[1]
if GetUnitTypeId(l0p)==$6E64726B then
set b0p=G[1]
set y0p=$41303851
set f6p=GetUnitAbilityLevel(b0p,y0p)
set p0p=g[1]
set e0p=$41313052
call UnitAddAbility(p0p,e0p)
set q0p=g[1]
set a0p=$41313052
set n0p=f6p
call SetUnitAbilityLevel(q0p,a0p,n0p)
endif
endif
if i6p==G[2] then
set d0p=G[2]
set R6p=GetUnitX(d0p)
set f0p=G[2]
set T6p=GetUnitY(f0p)
set g[2]=CreateUnit(Ud,$6E303349,R6p,T6p,0.)
set R0p=G[1]
if GetUnitTypeId(R0p)==$6E676164 then
set T0p=G[1]
set Y0p=$41303042
set Y6p=GetUnitAbilityLevel(T0p,Y0p)
set G0p=g[2]
set g0p=$41313053
call UnitAddAbility(G0p,g0p)
set h0p=g[2]
set F0p=$41313053
set k0p=Y6p
call SetUnitAbilityLevel(h0p,F0p,k0p)
endif
set j0p=G[2]
if GetUnitTypeId(j0p)==$6E64727A then
set x0p=G[2]
set v0p=$41303852
set G6p=GetUnitAbilityLevel(x0p,v0p)
set m0p=g[2]
set Q0p=$41313049
call UnitAddAbility(m0p,Q0p)
set W0p=g[2]
set E0p=$41313049
set Z0p=G6p
call SetUnitAbilityLevel(W0p,E0p,Z0p)
endif
set U0p=G[2]
if GetUnitTypeId(U0p)==$6E647267 then
set I0p=G[2]
set P0p=$41303856
set g6p=GetUnitAbilityLevel(I0p,P0p)
set A0p=g[2]
set D0p=$41313054
call UnitAddAbility(A0p,D0p)
set H0p=g[2]
set J0p=$41313054
set K0p=g6p
call SetUnitAbilityLevel(H0p,J0p,K0p)
endif
set L0p=G[2]
if GetUnitTypeId(L0p)==$6E676D65 then
set X0p=G[2]
set C0p=$4130384F
set h6p=GetUnitAbilityLevel(X0p,C0p)
set V0p=g[2]
set B0p=$4131304A
call UnitAddAbility(V0p,B0p)
set N0p=g[2]
set M0p=$4131304A
set w_p=h6p
call SetUnitAbilityLevel(N0p,M0p,w_p)
endif
set u_p=G[2]
if GetUnitTypeId(u_p)==$6E647272 then
set r_p=G[2]
set s_p=$41303858
set F6p=GetUnitAbilityLevel(r_p,s_p)
set t_p=G[2]
set i_p=$41303859
set k6p=GetUnitAbilityLevel(t_p,i_p)
set S_p=g[2]
set c_p=$4131304B
call UnitAddAbility(S_p,c_p)
set o_p=g[2]
set O_p=$4131304B
set l_p=F6p
call SetUnitAbilityLevel(o_p,O_p,l_p)
set b_p=g[2]
set y_p=$4131304C
call UnitAddAbility(b_p,y_p)
set p_p=g[2]
set e_p=$4131304C
set q_p=k6p
call SetUnitAbilityLevel(p_p,e_p,q_p)
endif
set a_p=G[2]
if GetUnitTypeId(a_p)==$6E6D7232 then
set n_p=g[2]
set d_p=$41303853
call UnitAddAbility(n_p,d_p)
endif
set f_p=G[2]
if GetUnitTypeId(f_p)==$6E676F6C then
set R_p=g[2]
set T_p=$41303853
call UnitAddAbility(R_p,T_p)
endif
set Y_p=G[2]
if GetUnitTypeId(Y_p)==$6E64726F then
set G_p=G[2]
set g_p=$41303855
set j6p=GetUnitAbilityLevel(G_p,g_p)
set h_p=g[2]
set F_p=$4131304E
call UnitAddAbility(h_p,F_p)
set k_p=g[2]
set j_p=$4131304E
set x_p=j6p
call SetUnitAbilityLevel(k_p,j_p,x_p)
endif
set v_p=G[2]
if GetUnitTypeId(v_p)==$6E776774 then
set m_p=G[2]
set Q_p=$41303850
set x6p=GetUnitAbilityLevel(m_p,Q_p)
set W_p=g[2]
set E_p=$4131304F
call UnitAddAbility(W_p,E_p)
set Z_p=g[2]
set U_p=$4131304F
set I_p=x6p
call SetUnitAbilityLevel(Z_p,U_p,I_p)
endif
set P_p=G[2]
if GetUnitTypeId(P_p)==$6E647275 then
set A_p=G[2]
set D_p=$4130384E
set v6p=GetUnitAbilityLevel(A_p,D_p)
set H_p=g[2]
set J_p=$41313050
call UnitAddAbility(H_p,J_p)
set K_p=g[2]
set L_p=$41313050
set X_p=v6p
call SetUnitAbilityLevel(K_p,L_p,X_p)
endif
set C_p=G[2]
if GetUnitTypeId(C_p)==$6E666F68 then
set V_p=G[2]
set B_p=$4130384D
set m6p=GetUnitAbilityLevel(V_p,B_p)
set N_p=g[2]
set M_p=$41313051
call UnitAddAbility(N_p,M_p)
set wwp=g[2]
set uwp=$41313051
set rwp=m6p
call SetUnitAbilityLevel(wwp,uwp,rwp)
endif
set swp=G[2]
if GetUnitTypeId(swp)==$6E64726B then
set twp=G[2]
set iwp=$41303851
set Q6p=GetUnitAbilityLevel(twp,iwp)
set Swp=g[2]
set cwp=$41313052
call UnitAddAbility(Swp,cwp)
set owp=g[2]
set Owp=$41313052
set lwp=Q6p
call SetUnitAbilityLevel(owp,Owp,lwp)
endif
endif
if i6p==G[3] then
set bwp=G[3]
set W6p=GetUnitX(bwp)
set ywp=G[3]
set E6p=GetUnitY(ywp)
set g[3]=CreateUnit(Ud,$6E303349,W6p,E6p,0.)
set pwp=G[3]
if GetUnitTypeId(pwp)==$6E676164 then
set ewp=G[3]
set qwp=$41303042
set Z6p=GetUnitAbilityLevel(ewp,qwp)
set awp=g[3]
set nwp=$41313053
call UnitAddAbility(awp,nwp)
set dwp=g[3]
set fwp=$41313053
set Rwp=Z6p
call SetUnitAbilityLevel(dwp,fwp,Rwp)
endif
set Twp=G[3]
if GetUnitTypeId(Twp)==$6E64727A then
set Ywp=G[3]
set Gwp=$41303852
set U6p=GetUnitAbilityLevel(Ywp,Gwp)
set gwp=g[3]
set hwp=$41313049
call UnitAddAbility(gwp,hwp)
set Fwp=g[3]
set kwp=$41313049
set jwp=U6p
call SetUnitAbilityLevel(Fwp,kwp,jwp)
endif
set xwp=G[3]
if GetUnitTypeId(xwp)==$6E647267 then
set vwp=G[3]
set mwp=$41303856
set I6p=GetUnitAbilityLevel(vwp,mwp)
set Qwp=g[3]
set Wwp=$41313054
call UnitAddAbility(Qwp,Wwp)
set Ewp=g[3]
set Zwp=$41313054
set Uwp=I6p
call SetUnitAbilityLevel(Ewp,Zwp,Uwp)
endif
set Iwp=G[3]
if GetUnitTypeId(Iwp)==$6E676D65 then
set Pwp=G[3]
set Awp=$4130384F
set P6p=GetUnitAbilityLevel(Pwp,Awp)
set Dwp=g[3]
set Hwp=$4131304A
call UnitAddAbility(Dwp,Hwp)
set Jwp=g[3]
set Kwp=$4131304A
set Lwp=P6p
call SetUnitAbilityLevel(Jwp,Kwp,Lwp)
endif
set Xwp=G[3]
if GetUnitTypeId(Xwp)==$6E647272 then
set Cwp=G[3]
set Vwp=$41303858
set A6p=GetUnitAbilityLevel(Cwp,Vwp)
set Bwp=G[3]
set Nwp=$41303859
set D6p=GetUnitAbilityLevel(Bwp,Nwp)
set Mwp=g[3]
set wup=$4131304B
call UnitAddAbility(Mwp,wup)
set uup=g[3]
set rup=$4131304B
set sup=A6p
call SetUnitAbilityLevel(uup,rup,sup)
set tup=g[3]
set iup=$4131304C
call UnitAddAbility(tup,iup)
set Sup=g[3]
set cup=$4131304C
set oup=D6p
call SetUnitAbilityLevel(Sup,cup,oup)
endif
set Oup=G[3]
if GetUnitTypeId(Oup)==$6E6D7232 then
set lup=g[3]
set bup=$41303853
call UnitAddAbility(lup,bup)
endif
set yup=G[3]
if GetUnitTypeId(yup)==$6E676F6C then
set pup=g[3]
set eup=$41303853
call UnitAddAbility(pup,eup)
endif
set qup=G[3]
if GetUnitTypeId(qup)==$6E64726F then
set aup=G[3]
set nup=$41303855
set H6p=GetUnitAbilityLevel(aup,nup)
set dup=g[3]
set fup=$4131304E
call UnitAddAbility(dup,fup)
set Rup=g[3]
set Tup=$4131304E
set Yup=H6p
call SetUnitAbilityLevel(Rup,Tup,Yup)
endif
set Gup=G[3]
if GetUnitTypeId(Gup)==$6E776774 then
set gup=G[3]
set hup=$41303850
set J6p=GetUnitAbilityLevel(gup,hup)
set Fup=g[3]
set kup=$4131304F
call UnitAddAbility(Fup,kup)
set jup=g[3]
set xup=$4131304F
set vup=J6p
call SetUnitAbilityLevel(jup,xup,vup)
endif
set mup=G[3]
if GetUnitTypeId(mup)==$6E647275 then
set Qup=G[3]
set Wup=$4130384E
set K6p=GetUnitAbilityLevel(Qup,Wup)
set Eup=g[3]
set Zup=$41313050
call UnitAddAbility(Eup,Zup)
set Uup=g[3]
set Iup=$41313050
set Pup=K6p
call SetUnitAbilityLevel(Uup,Iup,Pup)
endif
set Aup=G[3]
if GetUnitTypeId(Aup)==$6E666F68 then
set Dup=G[3]
set Hup=$4130384D
set L6p=GetUnitAbilityLevel(Dup,Hup)
set Jup=g[3]
set Kup=$41313051
call UnitAddAbility(Jup,Kup)
set Lup=g[3]
set Xup=$41313051
set Cup=L6p
call SetUnitAbilityLevel(Lup,Xup,Cup)
endif
set Vup=G[3]
if GetUnitTypeId(Vup)==$6E64726B then
set Bup=G[3]
set Nup=$41303851
set X6p=GetUnitAbilityLevel(Bup,Nup)
set Mup=g[3]
set wrp=$41313052
call UnitAddAbility(Mup,wrp)
set urp=g[3]
set rrp=$41313052
set srp=X6p
call SetUnitAbilityLevel(urp,rrp,srp)
endif
endif
if i6p==G[4] then
set trp=G[4]
set C6p=GetUnitX(trp)
set irp=G[4]
set V6p=GetUnitY(irp)
set g[4]=CreateUnit(Ud,$6E303349,C6p,V6p,0.)
set Srp=G[4]
if GetUnitTypeId(Srp)==$6E676164 then
set crp=G[4]
set orp=$41303042
set B6p=GetUnitAbilityLevel(crp,orp)
set Orp=g[4]
set lrp=$41313053
call UnitAddAbility(Orp,lrp)
set brp=g[4]
set yrp=$41313053
set prp=B6p
call SetUnitAbilityLevel(brp,yrp,prp)
endif
set erp=G[4]
if GetUnitTypeId(erp)==$6E64727A then
set qrp=G[4]
set arp=$41303852
set N6p=GetUnitAbilityLevel(qrp,arp)
set nrp=g[4]
set drp=$41313049
call UnitAddAbility(nrp,drp)
set frp=g[4]
set Rrp=$41313049
set Trp=N6p
call SetUnitAbilityLevel(frp,Rrp,Trp)
endif
set Yrp=G[4]
if GetUnitTypeId(Yrp)==$6E647267 then
set Grp=G[4]
set grp=$41303856
set M6p=GetUnitAbilityLevel(Grp,grp)
set hrp=g[4]
set Frp=$41313054
call UnitAddAbility(hrp,Frp)
set krp=g[4]
set jrp=$41313054
set xrp=M6p
call SetUnitAbilityLevel(krp,jrp,xrp)
endif
set vrp=G[4]
if GetUnitTypeId(vrp)==$6E676D65 then
set mrp=G[4]
set Qrp=$4130384F
set w7p=GetUnitAbilityLevel(mrp,Qrp)
set Wrp=g[4]
set Erp=$4131304A
call UnitAddAbility(Wrp,Erp)
set Zrp=g[4]
set Urp=$4131304A
set Irp=w7p
call SetUnitAbilityLevel(Zrp,Urp,Irp)
endif
set Prp=G[4]
if GetUnitTypeId(Prp)==$6E647272 then
set Arp=G[4]
set Drp=$41303858
set u7p=GetUnitAbilityLevel(Arp,Drp)
set Hrp=G[4]
set Jrp=$41303859
set r7p=GetUnitAbilityLevel(Hrp,Jrp)
set Krp=g[4]
set Lrp=$4131304B
call UnitAddAbility(Krp,Lrp)
set Xrp=g[4]
set Crp=$4131304B
set Vrp=u7p
call SetUnitAbilityLevel(Xrp,Crp,Vrp)
set Brp=g[4]
set Nrp=$4131304C
call UnitAddAbility(Brp,Nrp)
set Mrp=g[4]
set wsp=$4131304C
set usp=r7p
call SetUnitAbilityLevel(Mrp,wsp,usp)
endif
set rsp=G[4]
if GetUnitTypeId(rsp)==$6E6D7232 then
set ssp=g[4]
set tsp=$41303853
call UnitAddAbility(ssp,tsp)
endif
set isp=G[4]
if GetUnitTypeId(isp)==$6E676F6C then
set Ssp=g[4]
set csp=$41303853
call UnitAddAbility(Ssp,csp)
endif
set osp=G[4]
if GetUnitTypeId(osp)==$6E64726F then
set Osp=G[4]
set lsp=$41303855
set s7p=GetUnitAbilityLevel(Osp,lsp)
set bsp=g[4]
set ysp=$4131304E
call UnitAddAbility(bsp,ysp)
set psp=g[4]
set esp=$4131304E
set qsp=s7p
call SetUnitAbilityLevel(psp,esp,qsp)
endif
set asp=G[4]
if GetUnitTypeId(asp)==$6E776774 then
set nsp=G[4]
set dsp=$41303850
set t7p=GetUnitAbilityLevel(nsp,dsp)
set fsp=g[4]
set Rsp=$4131304F
call UnitAddAbility(fsp,Rsp)
set Tsp=g[4]
set Ysp=$4131304F
set Gsp=t7p
call SetUnitAbilityLevel(Tsp,Ysp,Gsp)
endif
set gsp=G[4]
if GetUnitTypeId(gsp)==$6E647275 then
set hsp=G[4]
set Fsp=$4130384E
set i7p=GetUnitAbilityLevel(hsp,Fsp)
set ksp=g[4]
set jsp=$41313050
call UnitAddAbility(ksp,jsp)
set xsp=g[4]
set vsp=$41313050
set msp=i7p
call SetUnitAbilityLevel(xsp,vsp,msp)
endif
set Qsp=G[4]
if GetUnitTypeId(Qsp)==$6E666F68 then
set Wsp=G[4]
set Esp=$4130384D
set S7p=GetUnitAbilityLevel(Wsp,Esp)
set Zsp=g[4]
set Usp=$41313051
call UnitAddAbility(Zsp,Usp)
set Isp=g[4]
set Psp=$41313051
set Asp=S7p
call SetUnitAbilityLevel(Isp,Psp,Asp)
endif
set Dsp=G[4]
if GetUnitTypeId(Dsp)==$6E64726B then
set Hsp=G[4]
set Jsp=$41303851
set c7p=GetUnitAbilityLevel(Hsp,Jsp)
set Ksp=g[4]
set Lsp=$41313052
call UnitAddAbility(Ksp,Lsp)
set Xsp=g[4]
set Csp=$41313052
set Vsp=c7p
call SetUnitAbilityLevel(Xsp,Csp,Vsp)
endif
endif
if i6p==G[5] then
set Bsp=G[5]
set o7p=GetUnitX(Bsp)
set Nsp=G[5]
set O7p=GetUnitY(Nsp)
set g[5]=CreateUnit(Ud,$6E303349,o7p,O7p,0.)
set Msp=G[5]
if GetUnitTypeId(Msp)==$6E676164 then
set wtp=G[5]
set utp=$41303042
set l7p=GetUnitAbilityLevel(wtp,utp)
set rtp=g[5]
set stp=$41313053
call UnitAddAbility(rtp,stp)
set ttp=g[5]
set itp=$41313053
set Stp=l7p
call SetUnitAbilityLevel(ttp,itp,Stp)
endif
set ctp=G[5]
if GetUnitTypeId(ctp)==$6E64727A then
set otp=G[5]
set Otp=$41303852
set b7p=GetUnitAbilityLevel(otp,Otp)
set ltp=g[5]
set btp=$41313049
call UnitAddAbility(ltp,btp)
set ytp=g[5]
set ptp=$41313049
set etp=b7p
call SetUnitAbilityLevel(ytp,ptp,etp)
endif
set qtp=G[5]
if GetUnitTypeId(qtp)==$6E647267 then
set atp=G[5]
set ntp=$41303856
set y7p=GetUnitAbilityLevel(atp,ntp)
set dtp=g[5]
set ftp=$41313054
call UnitAddAbility(dtp,ftp)
set Rtp=g[5]
set Ttp=$41313054
set Ytp=y7p
call SetUnitAbilityLevel(Rtp,Ttp,Ytp)
endif
set Gtp=G[5]
if GetUnitTypeId(Gtp)==$6E676D65 then
set gtp=G[5]
set htp=$4130384F
set p7p=GetUnitAbilityLevel(gtp,htp)
set Ftp=g[5]
set ktp=$4131304A
call UnitAddAbility(Ftp,ktp)
set jtp=g[5]
set xtp=$4131304A
set vtp=p7p
call SetUnitAbilityLevel(jtp,xtp,vtp)
endif
set mtp=G[5]
if GetUnitTypeId(mtp)==$6E647272 then
set Qtp=G[5]
set Wtp=$41303858
set e7p=GetUnitAbilityLevel(Qtp,Wtp)
set Etp=G[5]
set Ztp=$41303859
set q7p=GetUnitAbilityLevel(Etp,Ztp)
set Utp=g[5]
set Itp=$4131304B
call UnitAddAbility(Utp,Itp)
set Ptp=g[5]
set Atp=$4131304B
set Dtp=e7p
call SetUnitAbilityLevel(Ptp,Atp,Dtp)
set Htp=g[5]
set Jtp=$4131304C
call UnitAddAbility(Htp,Jtp)
set Ktp=g[5]
set Ltp=$4131304C
set Xtp=q7p
call SetUnitAbilityLevel(Ktp,Ltp,Xtp)
endif
set Ctp=G[5]
if GetUnitTypeId(Ctp)==$6E6D7232 then
set Vtp=g[5]
set Btp=$41303853
call UnitAddAbility(Vtp,Btp)
endif
set Ntp=G[5]
if GetUnitTypeId(Ntp)==$6E676F6C then
set Mtp=g[5]
set wip=$41303853
call UnitAddAbility(Mtp,wip)
endif
set uip=G[5]
if GetUnitTypeId(uip)==$6E64726F then
set rip=G[5]
set sip=$41303855
set a7p=GetUnitAbilityLevel(rip,sip)
set tip=g[5]
set iip=$4131304E
call UnitAddAbility(tip,iip)
set Sip=g[5]
set cip=$4131304E
set oip=a7p
call SetUnitAbilityLevel(Sip,cip,oip)
endif
set Oip=G[5]
if GetUnitTypeId(Oip)==$6E776774 then
set lip=G[5]
set bip=$41303850
set n7p=GetUnitAbilityLevel(lip,bip)
set yip=g[5]
set pip=$4131304F
call UnitAddAbility(yip,pip)
set eip=g[5]
set qip=$4131304F
set aip=n7p
call SetUnitAbilityLevel(eip,qip,aip)
endif
set nip=G[5]
if GetUnitTypeId(nip)==$6E647275 then
set dip=G[5]
set fip=$4130384E
set d7p=GetUnitAbilityLevel(dip,fip)
set Rip=g[5]
set Tip=$41313050
call UnitAddAbility(Rip,Tip)
set Yip=g[5]
set Gip=$41313050
set gip=d7p
call SetUnitAbilityLevel(Yip,Gip,gip)
endif
set hip=G[5]
if GetUnitTypeId(hip)==$6E666F68 then
set Fip=G[5]
set kip=$4130384D
set f7p=GetUnitAbilityLevel(Fip,kip)
set jip=g[5]
set xip=$41313051
call UnitAddAbility(jip,xip)
set vip=g[5]
set mip=$41313051
set Qip=f7p
call SetUnitAbilityLevel(vip,mip,Qip)
endif
set Wip=G[5]
if GetUnitTypeId(Wip)==$6E64726B then
set Eip=G[5]
set Zip=$41303851
set R7p=GetUnitAbilityLevel(Eip,Zip)
set Uip=g[5]
set Iip=$41313052
call UnitAddAbility(Uip,Iip)
set Pip=g[5]
set Aip=$41313052
set Dip=R7p
call SetUnitAbilityLevel(Pip,Aip,Dip)
endif
endif
if i6p==G[6] then
set Hip=G[6]
set T7p=GetUnitX(Hip)
set Jip=G[6]
set Y7p=GetUnitY(Jip)
set g[6]=CreateUnit(Ud,$6E303349,T7p,Y7p,0.)
set Kip=G[6]
if GetUnitTypeId(Kip)==$6E676164 then
set Lip=G[6]
set Xip=$41303042
set G7p=GetUnitAbilityLevel(Lip,Xip)
set Cip=g[6]
set Vip=$41313053
call UnitAddAbility(Cip,Vip)
set Bip=g[6]
set Nip=$41313053
set Mip=G7p
call SetUnitAbilityLevel(Bip,Nip,Mip)
endif
set wSp=G[6]
if GetUnitTypeId(wSp)==$6E64727A then
set uSp=G[6]
set rSp=$41303852
set g7p=GetUnitAbilityLevel(uSp,rSp)
set sSp=g[6]
set tSp=$41313049
call UnitAddAbility(sSp,tSp)
set iSp=g[6]
set SSp=$41313049
set cSp=g7p
call SetUnitAbilityLevel(iSp,SSp,cSp)
endif
set oSp=G[6]
if GetUnitTypeId(oSp)==$6E647267 then
set OSp=G[6]
set lSp=$41303856
set h7p=GetUnitAbilityLevel(OSp,lSp)
set bSp=g[6]
set ySp=$41313054
call UnitAddAbility(bSp,ySp)
set pSp=g[6]
set eSp=$41313054
set qSp=h7p
call SetUnitAbilityLevel(pSp,eSp,qSp)
endif
set aSp=G[6]
if GetUnitTypeId(aSp)==$6E676D65 then
set nSp=G[6]
set dSp=$4130384F
set F7p=GetUnitAbilityLevel(nSp,dSp)
set fSp=g[6]
set RSp=$4131304A
call UnitAddAbility(fSp,RSp)
set TSp=g[6]
set YSp=$4131304A
set GSp=F7p
call SetUnitAbilityLevel(TSp,YSp,GSp)
endif
set gSp=G[6]
if GetUnitTypeId(gSp)==$6E647272 then
set hSp=G[6]
set FSp=$41303858
set k7p=GetUnitAbilityLevel(hSp,FSp)
set kSp=G[6]
set jSp=$41303859
set j7p=GetUnitAbilityLevel(kSp,jSp)
set xSp=g[6]
set vSp=$4131304B
call UnitAddAbility(xSp,vSp)
set mSp=g[6]
set QSp=$4131304B
set WSp=k7p
call SetUnitAbilityLevel(mSp,QSp,WSp)
set ESp=g[6]
set ZSp=$4131304C
call UnitAddAbility(ESp,ZSp)
set USp=g[6]
set ISp=$4131304C
set PSp=j7p
call SetUnitAbilityLevel(USp,ISp,PSp)
endif
set ASp=G[6]
if GetUnitTypeId(ASp)==$6E6D7232 then
set DSp=g[6]
set HSp=$41303853
call UnitAddAbility(DSp,HSp)
endif
set JSp=G[6]
if GetUnitTypeId(JSp)==$6E676F6C then
set KSp=g[6]
set LSp=$41303853
call UnitAddAbility(KSp,LSp)
endif
set XSp=G[6]
if GetUnitTypeId(XSp)==$6E64726F then
set CSp=G[6]
set VSp=$41303855
set x7p=GetUnitAbilityLevel(CSp,VSp)
set BSp=g[6]
set NSp=$4131304E
call UnitAddAbility(BSp,NSp)
set MSp=g[6]
set wcp=$4131304E
set ucp=x7p
call SetUnitAbilityLevel(MSp,wcp,ucp)
endif
set rcp=G[6]
if GetUnitTypeId(rcp)==$6E776774 then
set scp=G[6]
set tcp=$41303850
set v7p=GetUnitAbilityLevel(scp,tcp)
set icp=g[6]
set Scp=$4131304F
call UnitAddAbility(icp,Scp)
set ccp=g[6]
set ocp=$4131304F
set Ocp=v7p
call SetUnitAbilityLevel(ccp,ocp,Ocp)
endif
set lcp=G[6]
if GetUnitTypeId(lcp)==$6E647275 then
set bcp=G[6]
set ycp=$4130384E
set m7p=GetUnitAbilityLevel(bcp,ycp)
set pcp=g[6]
set ecp=$41313050
call UnitAddAbility(pcp,ecp)
set qcp=g[6]
set acp=$41313050
set ncp=m7p
call SetUnitAbilityLevel(qcp,acp,ncp)
endif
set dcp=G[6]
if GetUnitTypeId(dcp)==$6E666F68 then
set fcp=G[6]
set Rcp=$4130384D
set Q7p=GetUnitAbilityLevel(fcp,Rcp)
set Tcp=g[6]
set Ycp=$41313051
call UnitAddAbility(Tcp,Ycp)
set Gcp=g[6]
set gcp=$41313051
set hcp=Q7p
call SetUnitAbilityLevel(Gcp,gcp,hcp)
endif
set Fcp=G[6]
if GetUnitTypeId(Fcp)==$6E64726B then
set kcp=G[6]
set jcp=$41303851
set W7p=GetUnitAbilityLevel(kcp,jcp)
set xcp=g[6]
set vcp=$41313052
call UnitAddAbility(xcp,vcp)
set mcp=g[6]
set Qcp=$41313052
set Wcp=W7p
call SetUnitAbilityLevel(mcp,Qcp,Wcp)
endif
endif
if i6p==G[7] then
set Ecp=G[7]
set E7p=GetUnitX(Ecp)
set Zcp=G[7]
set Z7p=GetUnitY(Zcp)
set g[7]=CreateUnit(Ud,$6E303349,E7p,Z7p,0.)
set Ucp=G[7]
if GetUnitTypeId(Ucp)==$6E676164 then
set Icp=G[7]
set Pcp=$41303042
set U7p=GetUnitAbilityLevel(Icp,Pcp)
set Acp=g[7]
set Dcp=$41313053
call UnitAddAbility(Acp,Dcp)
set Hcp=g[7]
set Jcp=$41313053
set Kcp=U7p
call SetUnitAbilityLevel(Hcp,Jcp,Kcp)
endif
set Lcp=G[7]
if GetUnitTypeId(Lcp)==$6E64727A then
set Xcp=G[7]
set Ccp=$41303852
set I7p=GetUnitAbilityLevel(Xcp,Ccp)
set Vcp=g[7]
set Bcp=$41313049
call UnitAddAbility(Vcp,Bcp)
set Ncp=g[7]
set Mcp=$41313049
set wop=I7p
call SetUnitAbilityLevel(Ncp,Mcp,wop)
endif
set uop=G[7]
if GetUnitTypeId(uop)==$6E647267 then
set rop=G[7]
set sop=$41303856
set P7p=GetUnitAbilityLevel(rop,sop)
set top=g[7]
set iop=$41313054
call UnitAddAbility(top,iop)
set Sop=g[7]
set cop=$41313054
set oop=P7p
call SetUnitAbilityLevel(Sop,cop,oop)
endif
set Oop=G[7]
if GetUnitTypeId(Oop)==$6E676D65 then
set lop=G[7]
set bop=$4130384F
set A7p=GetUnitAbilityLevel(lop,bop)
set yop=g[7]
set pop=$4131304A
call UnitAddAbility(yop,pop)
set eop=g[7]
set qop=$4131304A
set aop=A7p
call SetUnitAbilityLevel(eop,qop,aop)
endif
set nop=G[7]
if GetUnitTypeId(nop)==$6E647272 then
set dop=G[7]
set fop=$41303858
set D7p=GetUnitAbilityLevel(dop,fop)
set Rop=G[7]
set Top=$41303859
set H7p=GetUnitAbilityLevel(Rop,Top)
set Yop=g[7]
set Gop=$4131304B
call UnitAddAbility(Yop,Gop)
set gop=g[7]
set hop=$4131304B
set Fop=D7p
call SetUnitAbilityLevel(gop,hop,Fop)
set kop=g[7]
set jop=$4131304C
call UnitAddAbility(kop,jop)
set xop=g[7]
set vop=$4131304C
set mop=H7p
call SetUnitAbilityLevel(xop,vop,mop)
endif
set Qop=G[7]
if GetUnitTypeId(Qop)==$6E6D7232 then
set Wop=g[7]
set Eop=$41303853
call UnitAddAbility(Wop,Eop)
endif
set Zop=G[7]
if GetUnitTypeId(Zop)==$6E676F6C then
set Uop=g[7]
set Iop=$41303853
call UnitAddAbility(Uop,Iop)
endif
set Pop=G[7]
if GetUnitTypeId(Pop)==$6E64726F then
set Aop=G[7]
set Dop=$41303855
set J7p=GetUnitAbilityLevel(Aop,Dop)
set Hop=g[7]
set Jop=$4131304E
call UnitAddAbility(Hop,Jop)
set Kop=g[7]
set Lop=$4131304E
set Xop=J7p
call SetUnitAbilityLevel(Kop,Lop,Xop)
endif
set Cop=G[7]
if GetUnitTypeId(Cop)==$6E776774 then
set Vop=G[7]
set Bop=$41303850
set K7p=GetUnitAbilityLevel(Vop,Bop)
set Nop=g[7]
set Mop=$4131304F
call UnitAddAbility(Nop,Mop)
set wOp=g[7]
set uOp=$4131304F
set rOp=K7p
call SetUnitAbilityLevel(wOp,uOp,rOp)
endif
set sOp=G[7]
if GetUnitTypeId(sOp)==$6E647275 then
set tOp=G[7]
set iOp=$4130384E
set L7p=GetUnitAbilityLevel(tOp,iOp)
set SOp=g[7]
set cOp=$41313050
call UnitAddAbility(SOp,cOp)
set oOp=g[7]
set OOp=$41313050
set lOp=L7p
call SetUnitAbilityLevel(oOp,OOp,lOp)
endif
set bOp=G[7]
if GetUnitTypeId(bOp)==$6E666F68 then
set yOp=G[7]
set pOp=$4130384D
set X7p=GetUnitAbilityLevel(yOp,pOp)
set eOp=g[7]
set qOp=$41313051
call UnitAddAbility(eOp,qOp)
set aOp=g[7]
set nOp=$41313051
set dOp=X7p
call SetUnitAbilityLevel(aOp,nOp,dOp)
endif
set fOp=G[7]
if GetUnitTypeId(fOp)==$6E64726B then
set ROp=G[7]
set TOp=$41303851
set C7p=GetUnitAbilityLevel(ROp,TOp)
set YOp=g[7]
set GOp=$41313052
call UnitAddAbility(YOp,GOp)
set gOp=g[7]
set hOp=$41313052
set FOp=C7p
call SetUnitAbilityLevel(gOp,hOp,FOp)
endif
endif
if i6p==G[8] then
set kOp=G[8]
set V7p=GetUnitX(kOp)
set jOp=G[8]
set B7p=GetUnitY(jOp)
set g[8]=CreateUnit(Ud,$6E303349,V7p,B7p,0.)
set xOp=G[8]
if GetUnitTypeId(xOp)==$6E676164 then
set vOp=G[8]
set mOp=$41303042
set N7p=GetUnitAbilityLevel(vOp,mOp)
set QOp=g[8]
set WOp=$41313053
call UnitAddAbility(QOp,WOp)
set EOp=g[8]
set ZOp=$41313053
set UOp=N7p
call SetUnitAbilityLevel(EOp,ZOp,UOp)
endif
set IOp=G[8]
if GetUnitTypeId(IOp)==$6E64727A then
set POp=G[8]
set AOp=$41303852
set M7p=GetUnitAbilityLevel(POp,AOp)
set DOp=g[8]
set HOp=$41313049
call UnitAddAbility(DOp,HOp)
set JOp=g[8]
set KOp=$41313049
set LOp=M7p
call SetUnitAbilityLevel(JOp,KOp,LOp)
endif
set XOp=G[8]
if GetUnitTypeId(XOp)==$6E647267 then
set COp=G[8]
set VOp=$41303856
set w8p=GetUnitAbilityLevel(COp,VOp)
set BOp=g[8]
set NOp=$41313054
call UnitAddAbility(BOp,NOp)
set MOp=g[8]
set wlp=$41313054
set ulp=w8p
call SetUnitAbilityLevel(MOp,wlp,ulp)
endif
set rlp=G[8]
if GetUnitTypeId(rlp)==$6E676D65 then
set slp=G[8]
set tlp=$4130384F
set u8p=GetUnitAbilityLevel(slp,tlp)
set ilp=g[8]
set Slp=$4131304A
call UnitAddAbility(ilp,Slp)
set clp=g[8]
set olp=$4131304A
set Olp=u8p
call SetUnitAbilityLevel(clp,olp,Olp)
endif
set llp=G[8]
if GetUnitTypeId(llp)==$6E647272 then
set blp=G[8]
set ylp=$41303858
set r8p=GetUnitAbilityLevel(blp,ylp)
set plp=G[8]
set elp=$41303859
set s8p=GetUnitAbilityLevel(plp,elp)
set qlp=g[8]
set alp=$4131304B
call UnitAddAbility(qlp,alp)
set nlp=g[8]
set dlp=$4131304B
set flp=r8p
call SetUnitAbilityLevel(nlp,dlp,flp)
set Rlp=g[8]
set Tlp=$4131304C
call UnitAddAbility(Rlp,Tlp)
set Ylp=g[8]
set Glp=$4131304C
set glp=s8p
call SetUnitAbilityLevel(Ylp,Glp,glp)
endif
set hlp=G[8]
if GetUnitTypeId(hlp)==$6E6D7232 then
set Flp=g[8]
set klp=$41303853
call UnitAddAbility(Flp,klp)
endif
set jlp=G[8]
if GetUnitTypeId(jlp)==$6E676F6C then
set xlp=g[8]
set vlp=$41303853
call UnitAddAbility(xlp,vlp)
endif
set mlp=G[8]
if GetUnitTypeId(mlp)==$6E64726F then
set Qlp=G[8]
set Wlp=$41303855
set t8p=GetUnitAbilityLevel(Qlp,Wlp)
set Elp=g[8]
set Zlp=$4131304E
call UnitAddAbility(Elp,Zlp)
set Ulp=g[8]
set Ilp=$4131304E
set Plp=t8p
call SetUnitAbilityLevel(Ulp,Ilp,Plp)
endif
set Alp=G[8]
if GetUnitTypeId(Alp)==$6E776774 then
set Dlp=G[8]
set Hlp=$41303850
set i8p=GetUnitAbilityLevel(Dlp,Hlp)
set Jlp=g[8]
set Klp=$4131304F
call UnitAddAbility(Jlp,Klp)
set Llp=g[8]
set Xlp=$4131304F
set Clp=i8p
call SetUnitAbilityLevel(Llp,Xlp,Clp)
endif
set Vlp=G[8]
if GetUnitTypeId(Vlp)==$6E647275 then
set Blp=G[8]
set Nlp=$4130384E
set S8p=GetUnitAbilityLevel(Blp,Nlp)
set Mlp=g[8]
set wbp=$41313050
call UnitAddAbility(Mlp,wbp)
set ubp=g[8]
set rbp=$41313050
set sbp=S8p
call SetUnitAbilityLevel(ubp,rbp,sbp)
endif
set tbp=G[8]
if GetUnitTypeId(tbp)==$6E666F68 then
set ibp=G[8]
set Sbp=$4130384D
set c8p=GetUnitAbilityLevel(ibp,Sbp)
set cbp=g[8]
set obp=$41313051
call UnitAddAbility(cbp,obp)
set Obp=g[8]
set lbp=$41313051
set bbp=c8p
call SetUnitAbilityLevel(Obp,lbp,bbp)
endif
set ybp=G[8]
if GetUnitTypeId(ybp)==$6E64726B then
set pbp=G[8]
set ebp=$41303851
set o8p=GetUnitAbilityLevel(pbp,ebp)
set qbp=g[8]
set abp=$41313052
call UnitAddAbility(qbp,abp)
set nbp=g[8]
set dbp=$41313052
set fbp=o8p
call SetUnitAbilityLevel(nbp,dbp,fbp)
endif
endif
endloop
set Rbp=s6p
call DestroyGroup(Rbp)
set Tbp=t6p
call DestroyBoolExpr(Tbp)
endif
if r6p==2 then
set Ybp=KR
call DisableTrigger(Ybp)
set Gbp=LR
call EnableTrigger(Gbp)
endif
if r6p==3 then
set gbp=LR
call DisableTrigger(gbp)
set hbp=XR
call EnableTrigger(hbp)
endif
if r6p==4 then
set Fbp=XR
call DisableTrigger(Fbp)
set kbp=CR
call EnableTrigger(kbp)
endif
endif
set N5p=null
set w6p=null
set s6p=null
set t6p=null
set i6p=null
set S6p=null
set O8p=null
set l8p=null
set b8p=null
set y8p=null
set p8p=null
set e8p=null
set q8p=null
set a8p=null
set n8p=null
set d8p=null
set f8p=null
set R8p=null
set T8p=null
set Y8p=null
set G8p=null
set g8p=null
set h8p=null
set F8p=null
set k8p=null
set j8p=null
set v8p=null
set Q8p=null
set Z8p=null
set U8p=null
set P8p=null
set D8p=null
set K8p=null
set L8p=null
set C8p=null
set B8p=null
set w9p=null
set u9p=null
set s9p=null
set i9p=null
set o9p=null
set O9p=null
set b9p=null
set p9p=null
set q9p=null
set d9p=null
set R9p=null
set G9p=null
set g9p=null
set F9p=null
set k9p=null
set x9p=null
set v9p=null
set Q9p=null
set E9p=null
set I9p=null
set P9p=null
set D9p=null
set J9p=null
set X9p=null
set C9p=null
set B9p=null
set M9p=null
set r0p=null
set s0p=null
set i0p=null
set c0p=null
set l0p=null
set b0p=null
set p0p=null
set q0p=null
set d0p=null
set f0p=null
set R0p=null
set T0p=null
set G0p=null
set h0p=null
set j0p=null
set x0p=null
set m0p=null
set W0p=null
set U0p=null
set I0p=null
set A0p=null
set H0p=null
set L0p=null
set X0p=null
set V0p=null
set N0p=null
set u_p=null
set r_p=null
set t_p=null
set S_p=null
set o_p=null
set b_p=null
set p_p=null
set a_p=null
set n_p=null
set f_p=null
set R_p=null
set Y_p=null
set G_p=null
set h_p=null
set k_p=null
set v_p=null
set m_p=null
set W_p=null
set Z_p=null
set P_p=null
set A_p=null
set H_p=null
set K_p=null
set C_p=null
set V_p=null
set N_p=null
set wwp=null
set swp=null
set twp=null
set Swp=null
set owp=null
set bwp=null
set ywp=null
set pwp=null
set ewp=null
set awp=null
set dwp=null
set Twp=null
set Ywp=null
set gwp=null
set Fwp=null
set xwp=null
set vwp=null
set Qwp=null
set Ewp=null
set Iwp=null
set Pwp=null
set Dwp=null
set Jwp=null
set Xwp=null
set Cwp=null
set Bwp=null
set Mwp=null
set uup=null
set tup=null
set Sup=null
set Oup=null
set lup=null
set yup=null
set pup=null
set qup=null
set aup=null
set dup=null
set Rup=null
set Gup=null
set gup=null
set Fup=null
set jup=null
set mup=null
set Qup=null
set Eup=null
set Uup=null
set Aup=null
set Dup=null
set Jup=null
set Lup=null
set Vup=null
set Bup=null
set Mup=null
set urp=null
set trp=null
set irp=null
set Srp=null
set crp=null
set Orp=null
set brp=null
set erp=null
set qrp=null
set nrp=null
set frp=null
set Yrp=null
set Grp=null
set hrp=null
set krp=null
set vrp=null
set mrp=null
set Wrp=null
set Zrp=null
set Prp=null
set Arp=null
set Hrp=null
set Krp=null
set Xrp=null
set Brp=null
set Mrp=null
set rsp=null
set ssp=null
set isp=null
set Ssp=null
set osp=null
set Osp=null
set bsp=null
set psp=null
set asp=null
set nsp=null
set fsp=null
set Tsp=null
set gsp=null
set hsp=null
set ksp=null
set xsp=null
set Qsp=null
set Wsp=null
set Zsp=null
set Isp=null
set Dsp=null
set Hsp=null
set Ksp=null
set Xsp=null
set Bsp=null
set Nsp=null
set Msp=null
set wtp=null
set rtp=null
set ttp=null
set ctp=null
set otp=null
set ltp=null
set ytp=null
set qtp=null
set atp=null
set dtp=null
set Rtp=null
set Gtp=null
set gtp=null
set Ftp=null
set jtp=null
set mtp=null
set Qtp=null
set Etp=null
set Utp=null
set Ptp=null
set Htp=null
set Ktp=null
set Ctp=null
set Vtp=null
set Ntp=null
set Mtp=null
set uip=null
set rip=null
set tip=null
set Sip=null
set Oip=null
set lip=null
set yip=null
set eip=null
set nip=null
set dip=null
set Rip=null
set Yip=null
set hip=null
set Fip=null
set jip=null
set vip=null
set Wip=null
set Eip=null
set Uip=null
set Pip=null
set Hip=null
set Jip=null
set Kip=null
set Lip=null
set Cip=null
set Bip=null
set wSp=null
set uSp=null
set sSp=null
set iSp=null
set oSp=null
set OSp=null
set bSp=null
set pSp=null
set aSp=null
set nSp=null
set fSp=null
set TSp=null
set gSp=null
set hSp=null
set kSp=null
set xSp=null
set mSp=null
set ESp=null
set USp=null
set ASp=null
set DSp=null
set JSp=null
set KSp=null
set XSp=null
set CSp=null
set BSp=null
set MSp=null
set rcp=null
set scp=null
set icp=null
set ccp=null
set lcp=null
set bcp=null
set pcp=null
set qcp=null
set dcp=null
set fcp=null
set Tcp=null
set Gcp=null
set Fcp=null
set kcp=null
set xcp=null
set mcp=null
set Ecp=null
set Zcp=null
set Ucp=null
set Icp=null
set Acp=null
set Hcp=null
set Lcp=null
set Xcp=null
set Vcp=null
set Ncp=null
set uop=null
set rop=null
set top=null
set Sop=null
set Oop=null
set lop=null
set yop=null
set eop=null
set nop=null
set dop=null
set Rop=null
set Yop=null
set gop=null
set kop=null
set xop=null
set Qop=null
set Wop=null
set Zop=null
set Uop=null
set Pop=null
set Aop=null
set Hop=null
set Kop=null
set Cop=null
set Vop=null
set Nop=null
set wOp=null
set sOp=null
set tOp=null
set SOp=null
set oOp=null
set bOp=null
set yOp=null
set eOp=null
set aOp=null
set fOp=null
set ROp=null
set YOp=null
set gOp=null
set kOp=null
set jOp=null
set xOp=null
set vOp=null
set QOp=null
set EOp=null
set IOp=null
set POp=null
set DOp=null
set JOp=null
set XOp=null
set COp=null
set BOp=null
set MOp=null
set rlp=null
set slp=null
set ilp=null
set clp=null
set llp=null
set blp=null
set plp=null
set qlp=null
set nlp=null
set Rlp=null
set Ylp=null
set hlp=null
set Flp=null
set jlp=null
set xlp=null
set mlp=null
set Qlp=null
set Elp=null
set Ulp=null
set Alp=null
set Dlp=null
set Jlp=null
set Llp=null
set Vlp=null
set Blp=null
set Mlp=null
set ubp=null
set tbp=null
set ibp=null
set cbp=null
set Obp=null
set ybp=null
set pbp=null
set qbp=null
set nbp=null
set Rbp=null
set Tbp=null
set Ybp=null
set Gbp=null
set gbp=null
set hbp=null
set Fbp=null
set kbp=null
endfunction
function jht takes nothing returns nothing
local unit wht=GetDyingUnit()
local unit tht=wht
local integer uht=GetPlayerTechCount(GetOwningPlayer(tht),$524D3063,true)
local integer rht
local unit sht
local unit iht
local unit Sht
local unit cht
local unittype oht
local unit Oht
local unittype lht
local unit bht
local unittype yht
local unit pht
local unit eht
local unit qht
local unit aht
local integer nht
local integer dht
local unit fht
local integer Rht
local integer Tht
local boolean Yht
local boolean Ght
local boolean ght
local boolean hht
local player Fht
local real kht
if uht>0 then
set iht=wht
if GetUnitTypeId(iht)!=$75303030 then
set Sht=wht
set Yht=GetUnitTypeId(Sht)!=$78303037
else
set Yht=false
endif
if Yht then
set cht=wht
set oht=UNIT_TYPE_HERO
set Ght=IsUnitType(cht,oht)==false
else
set Ght=false
endif
if Ght then
set Oht=wht
set lht=UNIT_TYPE_STRUCTURE
set ght=IsUnitType(Oht,lht)==false
else
set ght=false
endif
if ght then
set bht=wht
set yht=UNIT_TYPE_ANCIENT
set hht=IsUnitType(bht,yht)==false
else
set hht=false
endif
if hht then
set rht=GetRandomInt(1,100)
if rht<=8+2*uht then
set pht=wht
set Fht=GetOwningPlayer(pht)
set eht=wht
set kht=GetUnitX(eht)
set qht=wht
set sht=CreateUnit(Fht,$78303037,kht,GetUnitY(qht),270.)
call dYr(sht)
if uht>=2 then
set aht=sht
set nht=$414D3077
set dht=uht-1
call SetUnitAbilityLevel(aht,nht,dht)
endif
if uht>=3 then
set fht=sht
set Rht=$414D3078
set Tht=uht-2
call SetUnitAbilityLevel(fht,Rht,Tht)
endif
endif
endif
endif
set wht=null
set sht=null
set tht=null
set iht=null
set Sht=null
set cht=null
set oht=null
set Oht=null
set lht=null
set bht=null
set yht=null
set pht=null
set eht=null
set qht=null
set aht=null
set fht=null
set Fht=null
endfunction
function jjO takes nothing returns nothing
local unit mkO=GetDyingUnit()
local unit QkO=GetKillingUnit()
local unit rjO=mkO
local integer WkO
local real EkO
local real ZkO
local real UkO
local integer IkO
local unit PkO
local integer AkO
local unit DkO
local integer HkO
local unit JkO
local unit KkO
local real LkO
local real XkO
local real CkO
local integer VkO
local unit BkO
local real NkO
local real MkO
local real wjO
local unit ujO
local unit sjO
local integer tjO
local unit ijO
local integer SjO
local unit cjO
local unit ojO
local unit OjO
local unit ljO
local unit bjO
local unit yjO
local unit pjO
local unit ejO
local integer qjO
local unit ajO
local unittype njO
local unit djO
local unit fjO
local unit RjO
local unit TjO
local unit YjO
local unit GjO
local unit gjO
local boolean hjO
local boolean FjO
local boolean kjO
if GetUnitTypeId(rjO)==$484D3034 then
set sjO=mkO
set tjO=$4133304D
set hjO=GetUnitAbilityLevel(sjO,tjO)>0
else
set hjO=false
endif
if hjO then
set ijO=mkO
set SjO=$4133304D
set WkO=GetUnitAbilityLevel(ijO,SjO)
set cjO=mkO
set EkO=GetUnitX(cjO)
set ojO=mkO
set ZkO=GetUnitY(ojO)
set UkO=GetUnitFacing(mkO)
if WkO<3 then
set IkO=0
loop
exitwhen IkO>1
set OjO=mkO
set PkO=CreateUnit(GetOwningPlayer(OjO),$6E303439,EkO,ZkO,UkO)
call dYr(PkO)
set IkO=IkO+1
endloop
elseif WkO>=3 and WkO<5 then
set AkO=0
loop
exitwhen AkO>2
set ljO=mkO
set DkO=CreateUnit(GetOwningPlayer(ljO),$6E303441,EkO,ZkO,UkO)
call dYr(DkO)
set AkO=AkO+1
endloop
else
set HkO=0
loop
exitwhen HkO>3
if WkO!=7 then
set bjO=mkO
set JkO=CreateUnit(GetOwningPlayer(bjO),$6E303441,EkO,ZkO,UkO)
call dYr(JkO)
else
set yjO=mkO
set KkO=CreateUnit(GetOwningPlayer(yjO),$6E303437,EkO,ZkO,UkO)
call dYr(KkO)
endif
set HkO=HkO+1
endloop
endif
endif
set pjO=QkO
if GetUnitTypeId(pjO)==$484D3034 then
set ejO=QkO
set qjO=$4930324E
set FjO=RTS(ejO,qjO)!=null
else
set FjO=false
endif
if FjO then
set ajO=mkO
set njO=UNIT_TYPE_HERO
set kjO=IsUnitType(ajO,njO)
else
set kjO=false
endif
if kjO then
set djO=mkO
set LkO=GetUnitX(djO)
set fjO=mkO
set XkO=GetUnitY(fjO)
set CkO=GetUnitFacing(mkO)
set VkO=0
loop
exitwhen VkO>2
set RjO=QkO
set BkO=CreateUnit(GetOwningPlayer(RjO),$6E303432,LkO,XkO,CkO)
call dYr(BkO)
set VkO=VkO+1
endloop
endif
set TjO=mkO
if GetUnitTypeId(TjO)==$6E303438 then
set YjO=mkO
set NkO=GetUnitX(YjO)
set GjO=mkO
set MkO=GetUnitY(GjO)
set wjO=GetUnitFacing(mkO)
set gjO=mkO
set ujO=CreateUnit(GetOwningPlayer(gjO),$6E687968,NkO,MkO,wjO)
call dYr(ujO)
endif
set mkO=null
set QkO=null
set PkO=null
set DkO=null
set JkO=null
set KkO=null
set BkO=null
set ujO=null
set rjO=null
set sjO=null
set ijO=null
set cjO=null
set ojO=null
set OjO=null
set ljO=null
set bjO=null
set yjO=null
set pjO=null
set ejO=null
set ajO=null
set njO=null
set djO=null
set fjO=null
set RjO=null
set TjO=null
set YjO=null
set GjO=null
set gjO=null
endfunction
function jky takes nothing returns boolean
local trigger Gky
local playerunitevent gky
local trigger hky
local playerunitevent Fky
local integer kky
set WG=CreateTrigger()
set Gky=WG
set gky=EVENT_PLAYER_UNIT_ATTACKED
set hky=Gky
set Fky=gky
set kky=0
loop
call TriggerRegisterPlayerUnitEvent(hky,Player(kky),Fky,null)
set kky=kky+1
exitwhen kky==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(WG,tuw)
set Gky=null
set gky=null
set hky=null
set Fky=null
return true
endfunction
function jmw takes nothing returns boolean
local unit hmw=GetTriggerUnit()
local unit kmw=hmw
local integer Fmw=GetUnitTypeId(kmw)
set hmw=null
set kmw=null
return Fmw!=$75303031 and Fmw!=$75303030 and Fmw!=$75303032 and Fmw!=$75303033 and Fmw!=$75303034 and Fmw!=$75303035 and Fmw!=$75303036 and Fmw!=$75303037 and Fmw!=$75303131
endfunction
function jnt takes nothing returns nothing
local rect knt=kc
set Xo[3]=Location(GetRectCenterX(knt),GetRectCenterY(knt))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set knt=null
endfunction
function jqu takes nothing returns nothing
local integer qqu=GetSpellAbilityId()
local unit aqu
local real nqu
local real dqu
local integer fqu
local unit Rqu
local unit Tqu
local unit Yqu
local unit Gqu
local unit gqu
local integer hqu
local unit Fqu
local real kqu
if qqu==$41304B59 then
set aqu=GetSpellAbilityUnit()
set Tqu=aqu
set nqu=GetUnitX(Tqu)
set Yqu=aqu
set dqu=GetUnitY(Yqu)
set fqu=1
loop
exitwhen fqu>16
set Gqu=aqu
set Rqu=CreateUnit(GetOwningPlayer(Gqu),$75303030,nqu,dqu,0.)
set gqu=Rqu
set hqu=$41303656
call UnitAddAbility(gqu,hqu)
call IssuePointOrder(Rqu,"carrionswarm",nqu+100.*Cos(67.5+I2R(fqu)*22.5*bj_DEGTORAD),dqu+100.*Sin(67.5+I2R(fqu)*22.5*bj_DEGTORAD))
set Fqu=Rqu
set kqu=3.
call UnitApplyTimedLife(Fqu,$42544C46,kqu)
set fqu=fqu+1
endloop
endif
set aqu=null
set Rqu=null
set Tqu=null
set Yqu=null
set Gqu=null
set gqu=null
set Fqu=null
endfunction
function jsO takes nothing returns boolean
return true
endfunction
function jwl takes nothing returns boolean
local trigger Fwl=dr
local boolexpr kwl=Condition(jww_2617)
call TriggerAddCondition(Fwl,kwl)
set Fwl=null
set kwl=null
return true
endfunction
function jxS takes nothing returns boolean
local playerunitevent FxS=EVENT_PLAYER_UNIT_SPELL_CAST
local code kxS=X6
call emO(FxS,null,kxS,null)
set FxS=null
return true
endfunction
function jyu takes nothing returns boolean
return true
endfunction
function k1b takes nothing returns boolean
local trigger f1b
local trigger R1b
local playerunitevent T1b
local trigger Y1b
local playerunitevent G1b
local integer g1b
local trigger h1b
local code F1b
set Jh=CreateTrigger()
set f1b=Jh
call DisableTrigger(f1b)
set R1b=Jh
set T1b=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Y1b=R1b
set G1b=T1b
set g1b=0
loop
call TriggerRegisterPlayerUnitEvent(Y1b,Player(g1b),G1b,null)
set g1b=g1b+1
exitwhen g1b==bj_MAX_PLAYER_SLOTS
endloop
set h1b=Jh
set F1b=Isw
call TriggerAddAction(h1b,F1b)
set f1b=null
set R1b=null
set T1b=null
set Y1b=null
set G1b=null
set h1b=null
return true
endfunction
function k1w takes nothing returns nothing
local unit k3w=GetTriggerUnit()
local unit x3w=k3w
local player j3w=GetOwningPlayer(x3w)
local unit v3w
local string m3w
local real Q3w
local real W3w
local unit E3w
local unittype Z3w
local unit U3w
local string I3w
local real P3w
local real A3w
local unit D3w
local unittype H3w
local unit J3w
local string K3w
local real L3w
local real X3w
local unit C3w
local unittype V3w
local unit B3w
local string N3w
local real M3w
local real w1w
local unit u1w
local unittype r1w
local unit s1w
local string t1w
local real i1w
local real S1w
local unit c1w
local unittype o1w
local unit O1w
local string l1w
local real b1w
local real y1w
local unit p1w
local unittype e1w
local real q1w
local real a1w
local real n1w
local real d1w
local real f1w
local real R1w
local real T1w
local real Y1w
local real G1w
local real g1w
local real h1w
local real F1w
if j3w==du then
if Ew[3]==true then
set v3w=k3w
set m3w="attack"
set q1w=Qw[54]
set a1w=Ww[54]
set Q3w=q1w
set W3w=a1w
call IssuePointOrder(v3w,m3w,Q3w,W3w)
set E3w=k3w
set Z3w=UNIT_TYPE_HERO
if IsUnitType(E3w,Z3w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,54)
endif
else
set U3w=k3w
set I3w="attack"
set n1w=Qw[30]
set d1w=Ww[30]
set P3w=n1w
set A3w=d1w
call IssuePointOrder(U3w,I3w,P3w,A3w)
set D3w=k3w
set H3w=UNIT_TYPE_HERO
if IsUnitType(D3w,H3w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,30)
endif
endif
endif
if j3w==nu then
set J3w=k3w
set K3w="attack"
set f1w=Qw[30]
set R1w=Ww[30]
set L3w=f1w
set X3w=R1w
call IssuePointOrder(J3w,K3w,L3w,X3w)
set C3w=k3w
set V3w=UNIT_TYPE_HERO
if IsUnitType(C3w,V3w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,30)
endif
endif
if j3w==fu then
if Ew[1]==true then
set B3w=k3w
set N3w="attack"
set T1w=Qw[30]
set Y1w=Ww[30]
set M3w=T1w
set w1w=Y1w
call IssuePointOrder(B3w,N3w,M3w,w1w)
set u1w=k3w
set r1w=UNIT_TYPE_HERO
if IsUnitType(u1w,r1w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,30)
endif
else
set s1w=k3w
set t1w="attack"
set G1w=Qw[54]
set g1w=Ww[54]
set i1w=G1w
set S1w=g1w
call IssuePointOrder(s1w,t1w,i1w,S1w)
set c1w=k3w
set o1w=UNIT_TYPE_HERO
if IsUnitType(c1w,o1w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,54)
endif
endif
endif
if j3w==Ru then
set O1w=k3w
set l1w="attack"
set h1w=Qw[54]
set F1w=Ww[54]
set b1w=h1w
set y1w=F1w
call IssuePointOrder(O1w,l1w,b1w,y1w)
set p1w=k3w
set e1w=UNIT_TYPE_HERO
if IsUnitType(p1w,e1w) then
call SaveInteger(qu,GetHandleId(k3w),$6D6F7665,54)
endif
endif
set k3w=null
set j3w=null
set x3w=null
set v3w=null
set E3w=null
set Z3w=null
set U3w=null
set D3w=null
set H3w=null
set J3w=null
set C3w=null
set V3w=null
set B3w=null
set u1w=null
set r1w=null
set s1w=null
set c1w=null
set o1w=null
set O1w=null
set p1w=null
set e1w=null
endfunction
function oWo takes string BQo returns nothing
local unit NQo
local integer MQo
local unit wWo
local unit uWo
local integer rWo
local string sWo
local integer tWo
local real iWo
local integer SWo
local string cWo
set aW[qW]=BQo
set qW=qW+1
set NQo=GetAttacker()
set wWo=NQo
if GetUnitTypeId(wWo)==$78303069 then
if GetRandomInt(1,100)<=15 then
set uWo=NQo
set rWo=$414D3135
call UnitAddAbility(uWo,rWo)
set sWo="when calling alloc_CallbackSingle_doAfter_HighbornRavens in HighbornRavens, line 114"
set aW[qW]=sWo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set tWo=fF
set RF[tWo]=715
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_HighbornRavens.","when calling error in HighbornRavens, line 114")
set tWo=0
endif
else
set dF=dF-1
set tWo=nF[dF]
set RF[tWo]=715
endif
set qW=qW-1
set MQo=tWo
set Jx[MQo]=NQo
set iWo=1.8
set SWo=MQo
set cWo="when calling doAfter in HighbornRavens, line 114"
set aW[qW]=cWo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),iWo,SWo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set NQo=null
set wWo=null
set uWo=null
endfunction
function k2e takes nothing returns nothing
set qW=0
call oWo("via function reference HighbornRavens, line 120")
endfunction
function k2y takes nothing returns boolean
return true
endfunction
function k3y takes nothing returns nothing
local integer VMy=GetSpellAbilityId()
local unit BMy
local unit NMy
local unit MMy
local unit w3y
local unit u3y
local unit r3y
local real s3y
local unit t3y
local integer i3y
local unit S3y
local string c3y
local unit o3y
local unit O3y
local unit l3y
local unit b3y
local real y3y
local unit p3y
local integer e3y
local unit q3y
local string a3y
local real n3y
local real d3y
local unit f3y
local unit R3y
local unit T3y
local player Y3y
local real G3y
local real g3y
local real h3y
local real F3y
if VMy==$41303355 then
set BMy=GetSpellAbilityUnit()
set u3y=BMy
set NMy=CreateUnit(GetOwningPlayer(u3y),$75303030,GetSpellTargetX(),GetSpellTargetY(),0.)
set r3y=NMy
set s3y=3.
call UnitApplyTimedLife(r3y,$42544C46,s3y)
set t3y=NMy
set i3y=$41303359
call UnitAddAbility(t3y,i3y)
set S3y=NMy
set c3y="stomp"
call IssueImmediateOrder(S3y,c3y)
endif
if VMy==$41304C36 then
set MMy=GetSpellAbilityUnit()
set o3y=MMy
set Y3y=GetOwningPlayer(o3y)
set O3y=MMy
set G3y=GetUnitX(O3y)
set l3y=MMy
set w3y=CreateUnit(Y3y,$75303030,G3y,GetUnitY(l3y),0.)
set b3y=w3y
set y3y=22.
call UnitApplyTimedLife(b3y,$42544C46,y3y)
set p3y=w3y
set e3y=$41303657
call UnitAddAbility(p3y,e3y)
set q3y=w3y
set a3y="monsoon"
set f3y=MMy
set R3y=f3y
set g3y=GetUnitX(R3y)
set T3y=f3y
set h3y=g3y
set F3y=GetUnitY(T3y)
set n3y=h3y
set d3y=F3y
call IssuePointOrder(q3y,a3y,n3y,d3y)
endif
set BMy=null
set NMy=null
set MMy=null
set w3y=null
set u3y=null
set r3y=null
set t3y=null
set S3y=null
set o3y=null
set O3y=null
set l3y=null
set b3y=null
set p3y=null
set q3y=null
set f3y=null
set R3y=null
set T3y=null
set Y3y=null
endfunction
function k5i takes nothing returns boolean
local trigger n5i
local trigger d5i
local playerunitevent f5i
local trigger R5i
local playerunitevent T5i
local integer Y5i
local trigger G5i
local boolexpr g5i
local trigger h5i
local code F5i
set Od=null
set cd=CreateTrigger()
set n5i=cd
call DisableTrigger(n5i)
set d5i=cd
set f5i=EVENT_PLAYER_UNIT_DEATH
set R5i=d5i
set T5i=f5i
set Y5i=0
loop
call TriggerRegisterPlayerUnitEvent(R5i,Player(Y5i),T5i,null)
set Y5i=Y5i+1
exitwhen Y5i==bj_MAX_PLAYER_SLOTS
endloop
set G5i=cd
set g5i=Condition(y7)
call TriggerAddCondition(G5i,g5i)
set h5i=cd
set F5i=p7
call TriggerAddAction(h5i,F5i)
set n5i=null
set d5i=null
set f5i=null
set R5i=null
set T5i=null
set G5i=null
set g5i=null
set h5i=null
return true
endfunction
function k7l takes nothing returns boolean
local trigger f7l
local real R7l
local playerunitevent T7l
local code Y7l
local playerunitevent G7l
local code g7l
local playerunitevent h7l
local code F7l
set Ud=null
set Id=CreateTrigger()
set f7l=Id
set R7l=300.
call TriggerRegisterTimerEvent(f7l,R7l,true)
call TriggerAddAction(Id,X7)
set T7l=EVENT_PLAYER_UNIT_SPELL_EFFECT
set Y7l=C7
call emO(T7l,null,Y7l,null)
set G7l=EVENT_PLAYER_UNIT_SPELL_CAST
set g7l=V7
call emO(G7l,null,g7l,null)
set h7l=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set F7l=B7
call emO(h7l,null,F7l,null)
set f7l=null
set T7l=null
set G7l=null
set h7l=null
return true
endfunction
function kIy takes nothing returns nothing
local rect FIy=Ic
set Xo[3]=Location(GetRectCenterX(FIy),GetRectCenterY(FIy))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set FIy=null
endfunction
function kLi takes nothing returns nothing
local unit RLi=GetDyingUnit()
local unit YLi=RLi
local integer TLi=GetUnitTypeId(YLi)
local unit GLi
local integer gLi
local unit hLi
local integer FLi
if TLi==$6E656E66 or TLi==$6E616E6F then
set GLi=RLi
set gLi=$41305845
call UnitRemoveAbility(GLi,gLi)
endif
if TLi==$6E627267 then
set hLi=RLi
set FLi=$41305846
call UnitRemoveAbility(hLi,FLi)
endif
set RLi=null
set YLi=null
set GLi=null
set hLi=null
endfunction
function kMu takes nothing returns nothing
local integer pMu=GetSpellAbilityId()
local unit eMu
local integer qMu
local player aMu
local unit nMu
local unit dMu
local real fMu
local unit RMu
local unitstate TMu
local real YMu
local unit GMu
local unitstate gMu
local unit hMu
local unitstate FMu
if pMu==$414D307A or pMu==$414D3079 then
set eMu=GetSpellAbilityUnit()
set nMu=eMu
set aMu=GetOwningPlayer(nMu)
set qMu=GetPlayerId(aMu)-4
set dMu=o[qMu]
set fMu=.5
set RMu=dMu
set TMu=UNIT_STATE_MANA
set YMu=fMu
set hMu=RMu
set FMu=TMu
set GMu=RMu
set gMu=TMu
call SetUnitState(hMu,FMu,GetUnitState(GMu,gMu)+YMu)
endif
set eMu=null
set aMu=null
set nMu=null
set dMu=null
set RMu=null
set TMu=null
set GMu=null
set gMu=null
set hMu=null
set FMu=null
endfunction
function tGi takes string tdi returns nothing
local trigger idi
local unit Sdi
local player cdi
local player odi
local integer Odi
local real ldi
local real bdi
local integer ydi
local integer pdi
local integer edi
local integer qdi
local integer adi
local integer ndi
local integer ddi
local integer fdi
local integer Rdi
local integer Tdi
local integer Ydi
local real Gdi
local real gdi
local integer hdi
local integer Fdi
local integer kdi
local integer jdi
local integer xdi
local integer vdi
local integer mdi
local integer Qdi
local integer Wdi
local integer Edi
local integer Zdi
local integer Udi
local unit Idi
local player Pdi
local player Adi
local trigger Ddi
local unit Hdi
local sound Jdi
local unit Kdi
local player Ldi
local boolean Xdi
local player Cdi
local integer Vdi
local player Bdi
local playerstate Ndi
local integer Mdi
local player wfi
local playerstate ufi
local string rfi
local real sfi
local string tfi
local real ifi
local unit Sfi
local player cfi
local boolean ofi
local unit Ofi
local unit lfi
local unit bfi
local unit yfi
local integer pfi
local unit efi
local integer qfi
local unit afi
local integer nfi
local integer dfi
local unit ffi
local unit Rfi
local integer Tfi
local unit Yfi
local integer Gfi
local unit gfi
local integer hfi
local integer Ffi
local unit kfi
local unit jfi
local integer xfi
local unit vfi
local integer mfi
local unit Qfi
local integer Wfi
local integer Efi
local unit Zfi
local unit Ufi
local integer Ifi
local unit Pfi
local integer Afi
local unit Dfi
local integer Hfi
local integer Jfi
local unit Kfi
local unit Lfi
local integer Xfi
local unit Cfi
local integer Vfi
local unit Bfi
local integer Nfi
local unit Mfi
local integer wRi
local integer uRi
local unit rRi
local integer sRi
local unit tRi
local integer iRi
local integer SRi
local unit cRi
local unit oRi
local integer ORi
local unit lRi
local unit bRi
local integer yRi
local unit pRi
local unit eRi
local integer qRi
local unit aRi
local integer nRi
local unit dRi
local integer fRi
local integer RRi
local unit TRi
local unit YRi
local integer GRi
local unit gRi
local integer hRi
local unit FRi
local integer kRi
local integer jRi
local unit xRi
local unit vRi
local integer mRi
local unit QRi
local integer WRi
local unit ERi
local integer ZRi
local integer URi
local unit IRi
local unit PRi
local integer ARi
local unit DRi
local integer HRi
local unit JRi
local integer KRi
local integer LRi
local unit XRi
local unit CRi
local integer VRi
local unit BRi
local integer NRi
local unit MRi
local integer wTi
local integer uTi
local unit rTi
local unit sTi
local unit tTi
local integer iTi
local unit STi
local unit cTi
local integer oTi
local unit OTi
local integer lTi
local unit bTi
local integer yTi
local integer pTi
local unit eTi
local unit qTi
local integer aTi
local unit nTi
local integer dTi
local unit fTi
local integer RTi
local integer TTi
local unit YTi
local unit GTi
local integer gTi
local unit hTi
local integer FTi
local unit kTi
local integer jTi
local integer xTi
local unit vTi
local unit mTi
local integer QTi
local unit WTi
local integer ETi
local unit ZTi
local integer UTi
local integer ITi
local unit PTi
local unit ATi
local integer DTi
local unit HTi
local integer JTi
local unit KTi
local integer LTi
local unit XTi
local integer CTi
local integer VTi
local unit BTi
local integer NTi
local unit MTi
local integer wYi
local integer uYi
local unit rYi
local unit sYi
local integer tYi
local unit iYi
local unit SYi
local integer cYi
local unit oYi
local unit OYi
local integer lYi
local unit bYi
local integer yYi
local unit pYi
local integer eYi
local integer qYi
local unit aYi
local unit nYi
local integer dYi
local unit fYi
local integer RYi
local unit TYi
local integer YYi
local integer GYi
local unit gYi
local unit hYi
local integer FYi
local unit kYi
local integer jYi
local unit xYi
local integer vYi
local integer mYi
local unit QYi
local unit WYi
local integer EYi
local unit ZYi
local integer UYi
local unit IYi
local integer PYi
local integer AYi
local unit DYi
local unit HYi
local integer JYi
local unit KYi
local integer LYi
local unit XYi
local integer CYi
local integer VYi
local string BYi
local integer NYi
local real MYi
local integer wGi
local string uGi
local player rGi
local playerstate sGi
set aW[qW]=tdi
set qW=qW+1
set idi=GetTriggeringTrigger()
set Sdi=GetEnteringUnit()
set Idi=Sdi
set cdi=GetOwningPlayer(Idi)
set Pdi=cdi
set odi=Player(GetPlayerId(Pdi)-4)
set Adi=odi
set Odi=GetPlayerId(Adi)
set Ddi=idi
call DisableTrigger(Ddi)
set Hdi=G[1]
if GetOwningPlayer(Hdi)==Player(15) then
set Jdi=bj_questUpdatedSound
call StartSound(Jdi)
set Kdi=G[1]
set Ldi=odi
set Xdi=false
call SetUnitOwner(Kdi,Ldi,Xdi)
call UuS(G[1],75)
set Cdi=odi
set Vdi=75
set Bdi=Cdi
set Ndi=PLAYER_STATE_RESOURCE_GOLD
set Mdi=Vdi
set rGi=Bdi
set sGi=Ndi
set wfi=Bdi
set ufi=Ndi
call SetPlayerState(rGi,sGi,GetPlayerState(wfi,ufi)+Mdi)
set rfi=Aw[Odi]+GetPlayerName(odi)+"|r"+" has captured neutral building!"
set sfi=10.
set tfi=rfi
set ifi=sfi
call DisplayTimedTextToPlayer(IY,0.,0.,ifi,tfi)
set hr[Odi]=hr[Odi]+75
set Fr[Odi]=Fr[Odi]+75
set Vr[Odi]=Vr[Odi]+75
else
set Sfi=G[1]
set cfi=odi
set ofi=false
call SetUnitOwner(Sfi,cfi,ofi)
endif
if odi==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set Ofi=G[1]
set ldi=GetUnitX(Ofi)
set lfi=G[1]
set bdi=GetUnitY(lfi)
set g[1]=CreateUnit(Ud,$6E303349,ldi,bdi,0.)
set bfi=G[1]
if GetUnitTypeId(bfi)==$6E676164 then
set yfi=G[1]
set pfi=$41303042
set ydi=GetUnitAbilityLevel(yfi,pfi)
set efi=g[1]
set qfi=$41313053
call UnitAddAbility(efi,qfi)
set afi=g[1]
set nfi=$41313053
set dfi=ydi
call SetUnitAbilityLevel(afi,nfi,dfi)
endif
set ffi=G[1]
if GetUnitTypeId(ffi)==$6E64727A then
set Rfi=G[1]
set Tfi=$41303852
set pdi=GetUnitAbilityLevel(Rfi,Tfi)
set Yfi=g[1]
set Gfi=$41313049
call UnitAddAbility(Yfi,Gfi)
set gfi=g[1]
set hfi=$41313049
set Ffi=pdi
call SetUnitAbilityLevel(gfi,hfi,Ffi)
endif
set kfi=G[1]
if GetUnitTypeId(kfi)==$6E647267 then
set jfi=G[1]
set xfi=$41303856
set edi=GetUnitAbilityLevel(jfi,xfi)
set vfi=g[1]
set mfi=$41313054
call UnitAddAbility(vfi,mfi)
set Qfi=g[1]
set Wfi=$41313054
set Efi=edi
call SetUnitAbilityLevel(Qfi,Wfi,Efi)
endif
set Zfi=G[1]
if GetUnitTypeId(Zfi)==$6E676D65 then
set Ufi=G[1]
set Ifi=$4130384F
set qdi=GetUnitAbilityLevel(Ufi,Ifi)
set Pfi=g[1]
set Afi=$4131304A
call UnitAddAbility(Pfi,Afi)
set Dfi=g[1]
set Hfi=$4131304A
set Jfi=qdi
call SetUnitAbilityLevel(Dfi,Hfi,Jfi)
endif
set Kfi=G[1]
if GetUnitTypeId(Kfi)==$6E647272 then
set Lfi=G[1]
set Xfi=$41303858
set adi=GetUnitAbilityLevel(Lfi,Xfi)
set Cfi=G[1]
set Vfi=$41303859
set ndi=GetUnitAbilityLevel(Cfi,Vfi)
set Bfi=g[1]
set Nfi=$4131304B
call UnitAddAbility(Bfi,Nfi)
set Mfi=g[1]
set wRi=$4131304B
set uRi=adi
call SetUnitAbilityLevel(Mfi,wRi,uRi)
set rRi=g[1]
set sRi=$4131304C
call UnitAddAbility(rRi,sRi)
set tRi=g[1]
set iRi=$4131304C
set SRi=ndi
call SetUnitAbilityLevel(tRi,iRi,SRi)
endif
set cRi=G[1]
if GetUnitTypeId(cRi)==$6E6D7232 then
set oRi=g[1]
set ORi=$41303853
call UnitAddAbility(oRi,ORi)
endif
set lRi=G[1]
if GetUnitTypeId(lRi)==$6E676F6C then
set bRi=g[1]
set yRi=$41303853
call UnitAddAbility(bRi,yRi)
endif
set pRi=G[1]
if GetUnitTypeId(pRi)==$6E64726F then
set eRi=G[1]
set qRi=$41303855
set ddi=GetUnitAbilityLevel(eRi,qRi)
set aRi=g[1]
set nRi=$4131304E
call UnitAddAbility(aRi,nRi)
set dRi=g[1]
set fRi=$4131304E
set RRi=ddi
call SetUnitAbilityLevel(dRi,fRi,RRi)
endif
set TRi=G[1]
if GetUnitTypeId(TRi)==$6E776774 then
set YRi=G[1]
set GRi=$41303850
set fdi=GetUnitAbilityLevel(YRi,GRi)
set gRi=g[1]
set hRi=$4131304F
call UnitAddAbility(gRi,hRi)
set FRi=g[1]
set kRi=$4131304F
set jRi=fdi
call SetUnitAbilityLevel(FRi,kRi,jRi)
endif
set xRi=G[1]
if GetUnitTypeId(xRi)==$6E647275 then
set vRi=G[1]
set mRi=$4130384E
set Rdi=GetUnitAbilityLevel(vRi,mRi)
set QRi=g[1]
set WRi=$41313050
call UnitAddAbility(QRi,WRi)
set ERi=g[1]
set ZRi=$41313050
set URi=Rdi
call SetUnitAbilityLevel(ERi,ZRi,URi)
endif
set IRi=G[1]
if GetUnitTypeId(IRi)==$6E666F68 then
set PRi=G[1]
set ARi=$4130384D
set Tdi=GetUnitAbilityLevel(PRi,ARi)
set DRi=g[1]
set HRi=$41313051
call UnitAddAbility(DRi,HRi)
set JRi=g[1]
set KRi=$41313051
set LRi=Tdi
call SetUnitAbilityLevel(JRi,KRi,LRi)
endif
set XRi=G[1]
if GetUnitTypeId(XRi)==$6E64726B then
set CRi=G[1]
set VRi=$41303851
set Ydi=GetUnitAbilityLevel(CRi,VRi)
set BRi=g[1]
set NRi=$41313052
call UnitAddAbility(BRi,NRi)
set MRi=g[1]
set wTi=$41313052
set uTi=Ydi
call SetUnitAbilityLevel(MRi,wTi,uTi)
endif
endif
if odi!=Ud and g[1]!=null then
call RemoveUnit(g[1])
set g[1]=null
endif
if odi==Ud and fq==true then
set rTi=G[1]
set Gdi=GetUnitX(rTi)
set sTi=G[1]
set gdi=GetUnitY(sTi)
set h[1]=CreateUnit(Ud,$6E303349,Gdi,gdi,0.)
set tTi=h[1]
set iTi=$4545564F
call UnitAddAbility(tTi,iTi)
set STi=G[1]
if GetUnitTypeId(STi)==$6E676164 then
set cTi=G[1]
set oTi=$41303042
set hdi=GetUnitAbilityLevel(cTi,oTi)
set OTi=h[1]
set lTi=$41313641
call UnitAddAbility(OTi,lTi)
set bTi=h[1]
set yTi=$41313641
set pTi=hdi
call SetUnitAbilityLevel(bTi,yTi,pTi)
endif
set eTi=G[1]
if GetUnitTypeId(eTi)==$6E64727A then
set qTi=G[1]
set aTi=$41303852
set Fdi=GetUnitAbilityLevel(qTi,aTi)
set nTi=h[1]
set dTi=$41313630
call UnitAddAbility(nTi,dTi)
set fTi=h[1]
set RTi=$41313630
set TTi=Fdi
call SetUnitAbilityLevel(fTi,RTi,TTi)
endif
set YTi=G[1]
if GetUnitTypeId(YTi)==$6E647267 then
set GTi=G[1]
set gTi=$41303856
set kdi=GetUnitAbilityLevel(GTi,gTi)
set hTi=h[1]
set FTi=$41313642
call UnitAddAbility(hTi,FTi)
set kTi=h[1]
set jTi=$41313642
set xTi=kdi
call SetUnitAbilityLevel(kTi,jTi,xTi)
endif
set vTi=G[1]
if GetUnitTypeId(vTi)==$6E676D65 then
set mTi=G[1]
set QTi=$4130384F
set jdi=GetUnitAbilityLevel(mTi,QTi)
set WTi=h[1]
set ETi=$41313631
call UnitAddAbility(WTi,ETi)
set ZTi=h[1]
set UTi=$41313631
set ITi=jdi
call SetUnitAbilityLevel(ZTi,UTi,ITi)
endif
set PTi=G[1]
if GetUnitTypeId(PTi)==$6E647272 then
set ATi=G[1]
set DTi=$41303858
set xdi=GetUnitAbilityLevel(ATi,DTi)
set HTi=G[1]
set JTi=$41303859
set vdi=GetUnitAbilityLevel(HTi,JTi)
set KTi=h[1]
set LTi=$41313632
call UnitAddAbility(KTi,LTi)
set XTi=h[1]
set CTi=$41313633
set VTi=xdi
call SetUnitAbilityLevel(XTi,CTi,VTi)
set BTi=h[1]
set NTi=$41313632
call UnitAddAbility(BTi,NTi)
set MTi=h[1]
set wYi=$41313633
set uYi=vdi
call SetUnitAbilityLevel(MTi,wYi,uYi)
endif
set rYi=G[1]
if GetUnitTypeId(rYi)==$6E6D7232 then
set sYi=h[1]
set tYi=$41303853
call UnitAddAbility(sYi,tYi)
endif
set iYi=G[1]
if GetUnitTypeId(iYi)==$6E676F6C then
set SYi=h[1]
set cYi=$41303853
call UnitAddAbility(SYi,cYi)
endif
set oYi=G[1]
if GetUnitTypeId(oYi)==$6E64726F then
set OYi=G[1]
set lYi=$41303855
set mdi=GetUnitAbilityLevel(OYi,lYi)
set bYi=h[1]
set yYi=$41313635
call UnitAddAbility(bYi,yYi)
set pYi=h[1]
set eYi=$41313635
set qYi=mdi
call SetUnitAbilityLevel(pYi,eYi,qYi)
endif
set aYi=G[1]
if GetUnitTypeId(aYi)==$6E776774 then
set nYi=G[1]
set dYi=$41303850
set Qdi=GetUnitAbilityLevel(nYi,dYi)
set fYi=h[1]
set RYi=$41313636
call UnitAddAbility(fYi,RYi)
set TYi=h[1]
set YYi=$41313636
set GYi=Qdi
call SetUnitAbilityLevel(TYi,YYi,GYi)
endif
set gYi=G[1]
if GetUnitTypeId(gYi)==$6E647275 then
set hYi=G[1]
set FYi=$4130384E
set Wdi=GetUnitAbilityLevel(hYi,FYi)
set kYi=h[1]
set jYi=$41313637
call UnitAddAbility(kYi,jYi)
set xYi=h[1]
set vYi=$41313637
set mYi=Wdi
call SetUnitAbilityLevel(xYi,vYi,mYi)
endif
set QYi=G[1]
if GetUnitTypeId(QYi)==$6E666F68 then
set WYi=G[1]
set EYi=$4130384D
set Edi=GetUnitAbilityLevel(WYi,EYi)
set ZYi=h[1]
set UYi=$41313638
call UnitAddAbility(ZYi,UYi)
set IYi=h[1]
set PYi=$41313638
set AYi=Edi
call SetUnitAbilityLevel(IYi,PYi,AYi)
endif
set DYi=G[1]
if GetUnitTypeId(DYi)==$6E64726B then
set HYi=G[1]
set JYi=$41303851
set Zdi=GetUnitAbilityLevel(HYi,JYi)
set KYi=h[1]
set LYi=$41313639
call UnitAddAbility(KYi,LYi)
set XYi=h[1]
set CYi=$41313639
set VYi=Zdi
call SetUnitAbilityLevel(XYi,CYi,VYi)
endif
endif
if odi!=Ud and h[1]!=null then
call RemoveUnit(h[1])
set h[1]=null
endif
set BYi="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 217"
set aW[qW]=BYi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set NYi=fF
set RF[NYi]=735
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 217")
set NYi=0
endif
else
set dF=dF-1
set NYi=nF[dF]
set RF[NYi]=735
endif
set qW=qW-1
set Udi=NYi
set vm[Udi]=idi
set MYi=2.
set wGi=Udi
set uGi="when calling doAfter in NeutralStructures, line 217"
set aW[qW]=uGi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),MYi,wGi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set idi=null
set Sdi=null
set cdi=null
set odi=null
set Idi=null
set Pdi=null
set Adi=null
set Ddi=null
set Hdi=null
set Jdi=null
set Kdi=null
set Ldi=null
set Cdi=null
set Bdi=null
set Ndi=null
set wfi=null
set ufi=null
set Sfi=null
set cfi=null
set Ofi=null
set lfi=null
set bfi=null
set yfi=null
set efi=null
set afi=null
set ffi=null
set Rfi=null
set Yfi=null
set gfi=null
set kfi=null
set jfi=null
set vfi=null
set Qfi=null
set Zfi=null
set Ufi=null
set Pfi=null
set Dfi=null
set Kfi=null
set Lfi=null
set Cfi=null
set Bfi=null
set Mfi=null
set rRi=null
set tRi=null
set cRi=null
set oRi=null
set lRi=null
set bRi=null
set pRi=null
set eRi=null
set aRi=null
set dRi=null
set TRi=null
set YRi=null
set gRi=null
set FRi=null
set xRi=null
set vRi=null
set QRi=null
set ERi=null
set IRi=null
set PRi=null
set DRi=null
set JRi=null
set XRi=null
set CRi=null
set BRi=null
set MRi=null
set rTi=null
set sTi=null
set tTi=null
set STi=null
set cTi=null
set OTi=null
set bTi=null
set eTi=null
set qTi=null
set nTi=null
set fTi=null
set YTi=null
set GTi=null
set hTi=null
set kTi=null
set vTi=null
set mTi=null
set WTi=null
set ZTi=null
set PTi=null
set ATi=null
set HTi=null
set KTi=null
set XTi=null
set BTi=null
set MTi=null
set rYi=null
set sYi=null
set iYi=null
set SYi=null
set oYi=null
set OYi=null
set bYi=null
set pYi=null
set aYi=null
set nYi=null
set fYi=null
set TYi=null
set gYi=null
set hYi=null
set kYi=null
set xYi=null
set QYi=null
set WYi=null
set ZYi=null
set IYi=null
set DYi=null
set HYi=null
set KYi=null
set XYi=null
set rGi=null
set sGi=null
endfunction
function kNb takes nothing returns nothing
set qW=0
call tGi("via function reference NeutralStructures, line 1729")
endfunction
function kOt takes nothing returns boolean
local trigger YOt
local rect GOt
local region gOt
local trigger hOt
local boolexpr FOt
set hT=CreateTrigger()
set YOt=hT
set GOt=bj_mapInitialPlayableArea
set gOt=CreateRegion()
call RegionAddRect(gOt,GOt)
call TriggerRegisterEnterRegion(YOt,gOt,null)
set hOt=hT
set FOt=Condition(B0w)
call TriggerAddCondition(hOt,FOt)
set YOt=null
set GOt=null
set gOt=null
set hOt=null
set FOt=null
return true
endfunction
function kRr takes nothing returns boolean
return true
endfunction
function kRt takes nothing returns boolean
local trigger pRt
local trigger eRt
local playerunitevent qRt
local code aRt
local trigger nRt
local boolexpr dRt
local trigger fRt
local playerunitevent RRt
local integer TRt
local trigger YRt
local boolexpr GRt
local trigger gRt
local playerunitevent hRt
local integer FRt
set rf=CreateSound("Sound\\Dialogue\\NightElfCampaign\\NightElf06Interlude\\N06Medivh38.mp3",false,false,false,10,10,"DefaultEAXON")
call CreateTrigger()
set qRt=EVENT_PLAYER_UNIT_SPELL_CAST
set aRt=c8
call emO(qRt,null,aRt,null)
set pRt=CreateTrigger()
set nRt=pRt
set dRt=Condition(o8)
call TriggerAddCondition(nRt,dRt)
set fRt=pRt
set RRt=EVENT_PLAYER_UNIT_SPELL_EFFECT
set TRt=0
loop
call TriggerRegisterPlayerUnitEvent(fRt,Player(TRt),RRt,null)
set TRt=TRt+1
exitwhen TRt==bj_MAX_PLAYER_SLOTS
endloop
set eRt=CreateTrigger()
set YRt=eRt
set GRt=Condition(O8)
call TriggerAddCondition(YRt,GRt)
set gRt=eRt
set hRt=EVENT_PLAYER_UNIT_ATTACKED
set FRt=0
loop
call TriggerRegisterPlayerUnitEvent(gRt,Player(FRt),hRt,null)
set FRt=FRt+1
exitwhen FRt==bj_MAX_PLAYER_SLOTS
endloop
call SetSoundParamsFromLabel(rf,"N06Medivh38")
call SetSoundDuration(rf,9057)
call SetSoundChannel(rf,0)
call SetSoundVolume(rf,127)
call SetSoundPitch(rf,1.)
set pRt=null
set eRt=null
set qRt=null
set nRt=null
set dRt=null
set fRt=null
set RRt=null
set YRt=null
set GRt=null
set gRt=null
set hRt=null
return true
endfunction
function kVt takes nothing returns boolean
return GetSpellAbilityId()==$41313854
endfunction
function EMy takes string TMy returns nothing
local unit YMy
local integer GMy
local unit gMy
local unit hMy
local unit FMy
local string kMy
local integer jMy
local real xMy
local integer vMy
local string mMy
local boolean QMy
local boolean WMy
set aW[qW]=TMy
set qW=qW+1
set YMy=GetEnteringUnit()
set gMy=YMy
if GetUnitTypeId(gMy)==$55303041 then
set QMy=true
else
set hMy=YMy
set QMy=GetUnitTypeId(hMy)==$55303042
endif
if QMy then
set WMy=true
else
set FMy=YMy
set WMy=GetUnitTypeId(FMy)==$55303043
endif
if WMy then
set kMy="when calling alloc_CallbackSingle_doAfter_DragonForge in DragonForge, line 704"
set aW[qW]=kMy
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set jMy=fF
set RF[jMy]=705
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DragonForge.","when calling error in DragonForge, line 704")
set jMy=0
endif
else
set dF=dF-1
set jMy=nF[dF]
set RF[jMy]=705
endif
set qW=qW-1
set GMy=jMy
set xj[GMy]=YMy
set xMy=1.
set vMy=GMy
set mMy="when calling doAfter in DragonForge, line 704"
set aW[qW]=mMy
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),xMy,vMy,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set YMy=null
set gMy=null
set hMy=null
set FMy=null
endfunction
function kWi takes nothing returns nothing
set qW=0
call EMy("via function reference DragonForge, line 964")
endfunction
function kYS takes nothing returns boolean
local trigger TYS
local trigger YYS
local rect GYS
local region gYS
local trigger hYS
local boolexpr FYS
set Rp=CreateTrigger()
set TYS=Rp
call DisableTrigger(TYS)
set YYS=Rp
set GYS=bj_mapInitialPlayableArea
set gYS=CreateRegion()
call RegionAddRect(gYS,GYS)
call TriggerRegisterEnterRegion(YYS,gYS,null)
set hYS=Rp
set FYS=Condition(g4)
call TriggerAddCondition(hYS,FYS)
set TYS=null
set YYS=null
set GYS=null
set gYS=null
set hYS=null
set FYS=null
return true
endfunction
function kYr takes nothing returns boolean
return true
endfunction
function k_u takes nothing returns boolean
return true
endfunction
function kas takes nothing returns nothing
local integer gas=GetResearched()
local player has
local trigger Fas
if gas==$52303041 then
set has=GetTriggerPlayer()
if GetPlayerTechCount(has,$52303041,true)==1 then
set Fas=td
call EnableTrigger(Fas)
endif
endif
set has=null
set Fas=null
endfunction
function kbe takes nothing returns boolean
return true
endfunction
function kjS takes nothing returns nothing
local rect FjS=gc
set Xo[3]=Location(GetRectCenterX(FjS),GetRectCenterY(FjS))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set FjS=null
endfunction
function kkl takes nothing returns nothing
local unit pFl=GetKillingUnit()
local unit YFl=pFl
local integer GFl=$4230374B
local player eFl
local integer qFl
local player aFl
local integer nFl
local player dFl
local integer fFl
local player RFl
local integer TFl
local player gFl
local unit hFl
local player FFl
local player kFl
local integer jFl
local player xFl
local playerstate vFl
local integer mFl
local player QFl
local playerstate WFl
local unit EFl
local integer ZFl
local player UFl
local unit IFl
local player PFl
local player AFl
local integer DFl
local player HFl
local playerstate JFl
local integer KFl
local player LFl
local playerstate XFl
local unit CFl
local integer VFl
local player BFl
local unit NFl
local player MFl
local player wkl
local integer ukl
local player rkl
local playerstate skl
local integer tkl
local player ikl
local playerstate Skl
local unit ckl
local integer okl
local player Okl
local unit lkl
local player bkl
local player ykl
local integer pkl
local player ekl
local playerstate qkl
local integer akl
local player nkl
local playerstate dkl
local player fkl
local playerstate Rkl
local player Tkl
local playerstate Ykl
local player Gkl
local playerstate gkl
local player hkl
local playerstate Fkl
if GetUnitAbilityLevel(YFl,GFl)==1 then
set hFl=pFl
set gFl=GetOwningPlayer(hFl)
set eFl=Player(GetPlayerId(gFl)-4)
set FFl=eFl
set qFl=GetPlayerId(FFl)
call UuS(pFl,1)
set kFl=eFl
set jFl=1
set xFl=kFl
set vFl=PLAYER_STATE_RESOURCE_GOLD
set mFl=jFl
set fkl=xFl
set Rkl=vFl
set QFl=xFl
set WFl=vFl
call SetPlayerState(fkl,Rkl,GetPlayerState(QFl,WFl)+mFl)
set hr[qFl]=hr[qFl]+1
set Fr[qFl]=Fr[qFl]+1
set Cr[qFl]=Cr[qFl]+1
endif
set EFl=pFl
set ZFl=$4230374C
if GetUnitAbilityLevel(EFl,ZFl)==1 then
set IFl=pFl
set UFl=GetOwningPlayer(IFl)
set aFl=Player(GetPlayerId(UFl)-4)
set PFl=aFl
set nFl=GetPlayerId(PFl)
call UuS(pFl,2)
set AFl=aFl
set DFl=2
set HFl=AFl
set JFl=PLAYER_STATE_RESOURCE_GOLD
set KFl=DFl
set Tkl=HFl
set Ykl=JFl
set LFl=HFl
set XFl=JFl
call SetPlayerState(Tkl,Ykl,GetPlayerState(LFl,XFl)+KFl)
set hr[nFl]=hr[nFl]+2
set Fr[nFl]=Fr[nFl]+2
set Cr[nFl]=Cr[nFl]+2
endif
set CFl=pFl
set VFl=$4230374D
if GetUnitAbilityLevel(CFl,VFl)==1 then
set NFl=pFl
set BFl=GetOwningPlayer(NFl)
set dFl=Player(GetPlayerId(BFl)-4)
set MFl=dFl
set fFl=GetPlayerId(MFl)
call UuS(pFl,3)
set wkl=dFl
set ukl=3
set rkl=wkl
set skl=PLAYER_STATE_RESOURCE_GOLD
set tkl=ukl
set Gkl=rkl
set gkl=skl
set ikl=rkl
set Skl=skl
call SetPlayerState(Gkl,gkl,GetPlayerState(ikl,Skl)+tkl)
set hr[fFl]=hr[fFl]+3
set Fr[fFl]=Fr[fFl]+3
set Cr[fFl]=Cr[fFl]+3
endif
set ckl=pFl
set okl=$4230374E
if GetUnitAbilityLevel(ckl,okl)==1 then
set lkl=pFl
set Okl=GetOwningPlayer(lkl)
set RFl=Player(GetPlayerId(Okl)-4)
set bkl=RFl
set TFl=GetPlayerId(bkl)
call UuS(pFl,4)
set ykl=RFl
set pkl=4
set ekl=ykl
set qkl=PLAYER_STATE_RESOURCE_GOLD
set akl=pkl
set hkl=ekl
set Fkl=qkl
set nkl=ekl
set dkl=qkl
call SetPlayerState(hkl,Fkl,GetPlayerState(nkl,dkl)+akl)
set hr[TFl]=hr[TFl]+4
set Fr[TFl]=Fr[TFl]+4
set Cr[TFl]=Cr[TFl]+4
endif
set pFl=null
set eFl=null
set aFl=null
set dFl=null
set RFl=null
set YFl=null
set gFl=null
set hFl=null
set FFl=null
set kFl=null
set xFl=null
set vFl=null
set QFl=null
set WFl=null
set EFl=null
set UFl=null
set IFl=null
set PFl=null
set AFl=null
set HFl=null
set JFl=null
set LFl=null
set XFl=null
set CFl=null
set BFl=null
set NFl=null
set MFl=null
set wkl=null
set rkl=null
set skl=null
set ikl=null
set Skl=null
set ckl=null
set Okl=null
set lkl=null
set bkl=null
set ykl=null
set ekl=null
set qkl=null
set nkl=null
set dkl=null
set fkl=null
set Rkl=null
set Tkl=null
set Ykl=null
set Gkl=null
set gkl=null
set hkl=null
set Fkl=null
endfunction
function kkp takes nothing returns boolean
local trigger fkp
local trigger Rkp
local playerunitevent Tkp
local trigger Ykp
local playerunitevent Gkp
local integer gkp
local trigger hkp
local code Fkp
set On=CreateTrigger()
set fkp=On
call DisableTrigger(fkp)
set Rkp=On
set Tkp=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ykp=Rkp
set Gkp=Tkp
set gkp=0
loop
call TriggerRegisterPlayerUnitEvent(Ykp,Player(gkp),Gkp,null)
set gkp=gkp+1
exitwhen gkp==bj_MAX_PLAYER_SLOTS
endloop
set hkp=On
set Fkp=L5
call TriggerAddAction(hkp,Fkp)
set fkp=null
set Rkp=null
set Tkp=null
set Ykp=null
set Gkp=null
set hkp=null
return true
endfunction
function kpw takes nothing returns boolean
local unit apw=GetFilterUnit()
local unit npw=apw
local unit dpw
local unittype fpw
local unit Rpw
local player Tpw
local unit Ypw
local unittype Gpw
local boolean gpw
local boolean hpw
local boolean Fpw
if UnitAlive(npw)==true then
set dpw=apw
set fpw=UNIT_TYPE_ANCIENT
set gpw=IsUnitType(dpw,fpw)==false
else
set gpw=false
endif
if gpw then
set Rpw=apw
set Tpw=Pe
set hpw=IsUnitEnemy(Rpw,Tpw)==true
else
set hpw=false
endif
if hpw then
set Ypw=apw
set Gpw=UNIT_TYPE_STRUCTURE
set Fpw=IsUnitType(Ypw,Gpw)==false
else
set Fpw=false
endif
set apw=null
set npw=null
set dpw=null
set fpw=null
set Rpw=null
set Tpw=null
set Ypw=null
set Gpw=null
return Fpw
endfunction
function kwt takes nothing returns nothing
local unit hwt=GetRevivingUnit()
local unit Fwt=hwt
if GetUnitTypeId(Fwt)==$45303037 then
set tF=true
endif
set hwt=null
set Fwt=null
endfunction
function kwu takes nothing returns nothing
local unit Swu=GetDyingUnit()
local unit ywu=Swu
local integer cwu
local group owu
local filterfunc Owu
local unit lwu
local group bwu
local unit pwu
local unit ewu
local unit qwu
local unit awu
local group nwu
local group dwu
local unit fwu
local unit Rwu
local unit Twu
local group Ywu
local boolexpr Gwu
local group gwu
local real hwu
local real Fwu
if GetUnitTypeId(ywu)==$6E303355 then
set pwu=Swu
set xl=GetOwningPlayer(pwu)
set ewu=Swu
set cwu=15+10*GetPlayerTechCount(GetOwningPlayer(ewu),$52686673,true)
set owu=CreateGroup()
set Owu=Filter(f3)
set gwu=owu
set qwu=Swu
set hwu=GetUnitX(qwu)
set awu=Swu
call GroupEnumUnitsInRange(gwu,hwu,GetUnitY(awu),200.,Owu)
set bwu=owu
loop
set nwu=bwu
exitwhen not (FirstOfGroup(nwu)!=null)
set dwu=bwu
set fwu=FirstOfGroup(dwu)
call GroupRemoveUnit(dwu,fwu)
set lwu=fwu
call UnitDamageTarget(Swu,lwu,I2R(cwu),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set Rwu=Swu
set Fwu=GetUnitX(Rwu)
set Twu=Swu
call DestroyEffect(AddSpecialEffect("Pillar of Flame Orange.mdx",Fwu,GetUnitY(Twu)))
set Ywu=owu
call DestroyGroup(Ywu)
set Gwu=Owu
call DestroyBoolExpr(Gwu)
set xl=null
endif
set Swu=null
set owu=null
set Owu=null
set lwu=null
set bwu=null
set ywu=null
set pwu=null
set ewu=null
set qwu=null
set awu=null
set nwu=null
set dwu=null
set fwu=null
set Rwu=null
set Twu=null
set Ywu=null
set Gwu=null
set gwu=null
endfunction
function kxi takes nothing returns boolean
local playerunitevent hxi=EVENT_PLAYER_UNIT_ATTACKED
local code Fxi=r5
call emO(hxi,null,Fxi,null)
set hxi=null
return true
endfunction
function kyu takes nothing returns nothing
local unit oyu=GetKillingUnit()
local unit Oyu=oyu
local unit lyu
local unit byu
local unit yyu
local unit pyu
local unit eyu
local unit qyu
local unit ayu
local unit nyu
local string dyu
local widget fyu
local boolean Ryu
local boolean Tyu
local boolean Yyu
local boolean Gyu
local boolean gyu
local boolean hyu
local boolean Fyu
if GetUnitTypeId(Oyu)==$6E686566 then
set Ryu=true
else
set lyu=oyu
set Ryu=GetUnitTypeId(lyu)==$6E6B6F67
endif
if Ryu then
set Tyu=true
else
set byu=oyu
set Tyu=GetUnitTypeId(byu)==$6E6E7472
endif
if Tyu then
set Yyu=true
else
set yyu=oyu
set Yyu=GetUnitTypeId(yyu)==$6F30354E
endif
if Yyu then
set Gyu=true
else
set pyu=oyu
set Gyu=GetUnitTypeId(pyu)==$6E303345
endif
if Gyu then
set gyu=true
else
set eyu=oyu
set gyu=GetUnitTypeId(eyu)==$6F303533
endif
if gyu then
set hyu=true
else
set qyu=oyu
set hyu=GetUnitTypeId(qyu)==$6E726967
endif
if hyu then
set Fyu=true
else
set ayu=oyu
set Fyu=GetUnitTypeId(ayu)==$6E303357
endif
if Fyu then
set nyu=oyu
set dyu="innerfire"
set fyu=oyu
call IssueTargetOrder(nyu,dyu,fyu)
endif
set oyu=null
set Oyu=null
set lyu=null
set byu=null
set yyu=null
set pyu=null
set eyu=null
set qyu=null
set ayu=null
set nyu=null
set fyu=null
endfunction
function l2c takes nothing returns boolean
set mn=CreateSound("HeroSelect.mp3",false,false,false,127,127,"DefaultEAXON")
call SetSoundDuration(mn,5374)
call SetSoundChannel(mn,0)
call SetSoundVolume(mn,250)
call SetSoundPitch(mn,1.)
return true
endfunction
function l4c takes nothing returns boolean
local playerunitevent t4c=EVENT_PLAYER_UNIT_SPELL_FINISH
local code i4c=T6
local playerunitevent S4c
local code c4c
local playerunitevent o4c
local code O4c
call emO(t4c,null,i4c,null)
set S4c=EVENT_PLAYER_UNIT_SPELL_FINISH
set c4c=Y6
call emO(S4c,null,c4c,null)
set o4c=EVENT_PLAYER_UNIT_SPELL_EFFECT
set O4c=G6
call emO(o4c,null,O4c,null)
set t4c=null
set S4c=null
set o4c=null
return true
endfunction
function PGu takes string bGu returns nothing
local unit yGu
local integer pGu
local trigger eGu
local real qGu
local real aGu
local group nGu
local integer dGu
local filterfunc fGu
local unit RGu
local group TGu
local integer YGu
local unit GGu
local integer gGu
local trigger hGu
local unit FGu
local unit kGu
local group jGu
local group xGu
local unit vGu
local group mGu
local boolexpr QGu
local string WGu
local integer EGu
local real ZGu
local integer UGu
local string IGu
set aW[qW]=bGu
set qW=qW+1
set yGu=GetTriggerUnit()
set GGu=yGu
set gGu=$41313657
set pGu=GetUnitAbilityLevel(GGu,gGu)
set eGu=GetTriggeringTrigger()
set hGu=eGu
call DisableTrigger(hGu)
set FGu=yGu
set qGu=GetUnitX(FGu)
set kGu=yGu
set aGu=GetUnitY(kGu)
set nGu=CreateGroup()
set dGu=50+10*pGu
set fGu=Filter(P6)
call GroupEnumUnitsInRange(nGu,qGu,aGu,400.,fGu)
set TGu=nGu
loop
set jGu=TGu
exitwhen not (FirstOfGroup(jGu)!=null)
set xGu=TGu
set vGu=FirstOfGroup(xGu)
call GroupRemoveUnit(xGu,vGu)
set RGu=vGu
call UnitDamageTarget(yGu,RGu,I2R(dGu),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_ENHANCED,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GlaiveMissile\\GlaiveMissileTarget.mdl",RGu,"origin"))
endloop
set mGu=nGu
call DestroyGroup(mGu)
set QGu=fGu
call DestroyBoolExpr(QGu)
set WGu="when calling alloc_CallbackSingle_doAfter_Kazzak in Kazzak, line 379"
set aW[qW]=WGu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set EGu=fF
set RF[EGu]=724
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Kazzak.","when calling error in Kazzak, line 379")
set EGu=0
endif
else
set dF=dF-1
set EGu=nF[dF]
set RF[EGu]=724
endif
set qW=qW-1
set YGu=EGu
set hv[YGu]=eGu
set ZGu=2.
set UGu=YGu
set IGu="when calling doAfter in Kazzak, line 379"
set aW[qW]=IGu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),ZGu,UGu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set yGu=null
set eGu=null
set nGu=null
set fGu=null
set RGu=null
set TGu=null
set GGu=null
set hGu=null
set FGu=null
set kGu=null
set jGu=null
set xGu=null
set vGu=null
set mGu=null
set QGu=null
endfunction
function l7t takes nothing returns nothing
set qW=0
call PGu("via function reference Kazzak, line 387")
endfunction
function lAS takes nothing returns boolean
local trigger vPS
local trigger mPS
local trigger QPS
local trigger WPS
local boolexpr EPS
local trigger ZPS
local dialog UPS
local trigger IPS
local boolexpr PPS
local trigger APS
local dialog DPS
local trigger HPS
local boolexpr JPS
local trigger KPS
local dialog LPS
local trigger XPS
local trigger CPS
local playerunitevent VPS
local trigger BPS
local playerunitevent NPS
local integer MPS
local trigger wAS
local code uAS
local trigger rAS
local trigger sAS
local playerunitevent tAS
local trigger iAS
local playerunitevent SAS
local integer cAS
local trigger oAS
local code OAS
set Bg=CreateTrigger()
set sh=4
set vPS=CreateTrigger()
set WPS=vPS
set EPS=Condition(Frw)
call TriggerAddCondition(WPS,EPS)
set ZPS=vPS
set UPS=sr
call TriggerRegisterDialogEvent(ZPS,UPS)
set mPS=CreateTrigger()
set IPS=mPS
set PPS=Condition(krw)
call TriggerAddCondition(IPS,PPS)
set APS=mPS
set DPS=sr
call TriggerRegisterDialogEvent(APS,DPS)
set QPS=CreateTrigger()
set HPS=QPS
set JPS=Condition(jrw)
call TriggerAddCondition(HPS,JPS)
set KPS=QPS
set LPS=sr
call TriggerRegisterDialogEvent(KPS,LPS)
set XPS=Bg
call DisableTrigger(XPS)
set CPS=Bg
set VPS=EVENT_PLAYER_UNIT_SPELL_CAST
set BPS=CPS
set NPS=VPS
set MPS=0
loop
call TriggerRegisterPlayerUnitEvent(BPS,Player(MPS),NPS,null)
set MPS=MPS+1
exitwhen MPS==bj_MAX_PLAYER_SLOTS
endloop
set wAS=Bg
set uAS=xrw
call TriggerAddAction(wAS,uAS)
set rAS=GY
call DisableTrigger(rAS)
set sAS=GY
set tAS=EVENT_PLAYER_UNIT_ISSUED_ORDER
set iAS=sAS
set SAS=tAS
set cAS=0
loop
call TriggerRegisterPlayerUnitEvent(iAS,Player(cAS),SAS,null)
set cAS=cAS+1
exitwhen cAS==bj_MAX_PLAYER_SLOTS
endloop
set oAS=GY
set OAS=vrw
call TriggerAddAction(oAS,OAS)
set vPS=null
set mPS=null
set QPS=null
set WPS=null
set EPS=null
set ZPS=null
set UPS=null
set IPS=null
set PPS=null
set APS=null
set DPS=null
set HPS=null
set JPS=null
set KPS=null
set LPS=null
set XPS=null
set CPS=null
set VPS=null
set BPS=null
set NPS=null
set wAS=null
set rAS=null
set sAS=null
set tAS=null
set iAS=null
set SAS=null
set oAS=null
return true
endfunction
function lBp takes nothing returns boolean
local trigger SBp
local trigger cBp
local playerunitevent oBp
local integer OBp
set uq=CreateTrigger()
set SBp=uq
call DisableTrigger(SBp)
set cBp=uq
set oBp=EVENT_PLAYER_UNIT_SPELL_EFFECT
set OBp=0
loop
call TriggerRegisterPlayerUnitEvent(cBp,Player(OBp),oBp,null)
set OBp=OBp+1
exitwhen OBp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(uq,W2)
set SBp=null
set cBp=null
set oBp=null
return true
endfunction
function lFc takes nothing returns boolean
local trigger rFc
local trigger sFc
local playerunitevent tFc
local trigger iFc
local playerunitevent SFc
local integer cFc
local trigger oFc
local code OFc
set rY=CreateTrigger()
set rFc=rY
call DisableTrigger(rFc)
set sFc=rY
set tFc=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set iFc=sFc
set SFc=tFc
set cFc=0
loop
call TriggerRegisterPlayerUnitEvent(iFc,Player(cFc),SFc,null)
set cFc=cFc+1
exitwhen cFc==bj_MAX_PLAYER_SLOTS
endloop
set oFc=rY
set OFc=aww
call TriggerAddAction(oFc,OFc)
set rFc=null
set sFc=null
set tFc=null
set iFc=null
set SFc=null
set oFc=null
return true
endfunction
function lFt takes nothing returns boolean
return true
endfunction
function lFw takes nothing returns boolean
return true
endfunction
function lIo takes nothing returns nothing
local unit NUo=GetTriggerUnit()
local unit MUo=NUo
local unit wIo
local unit uIo
local unitstate rIo
local unit sIo
local integer tIo
local unit iIo
local integer SIo
local widget cIo
local boolean oIo
local boolean OIo
if GetUnitTypeId(MUo)==$48617266 then
set wIo=NUo
set uIo=wIo
set rIo=UNIT_STATE_LIFE
set oIo=GetUnitState(uIo,rIo)<=2000.
else
set oIo=false
endif
if oIo then
set sIo=NUo
set tIo=$41305455
set OIo=GetUnitAbilityLevel(sIo,tIo)>0
else
set OIo=false
endif
if OIo then
set iIo=NUo
set SIo=852066
set cIo=NUo
call IssueTargetOrderById(iIo,SIo,cIo)
endif
set NUo=null
set MUo=null
set wIo=null
set uIo=null
set rIo=null
set sIo=null
set iIo=null
set cIo=null
endfunction
function lJu takes nothing returns nothing
local unit BHu=GetTriggerUnit()
local unit NHu=BHu
local unit MHu
local unit wJu
local unitstate uJu
local unit rJu
local unit sJu
local unitstate tJu
local unit iJu
local string SJu
local widget cJu
local real oJu
local boolean OJu
if GetUnitTypeId(NHu)==$65303048 then
set MHu=BHu
set wJu=MHu
set uJu=UNIT_STATE_LIFE
set oJu=GetUnitState(wJu,uJu)
set rJu=BHu
set sJu=rJu
set tJu=UNIT_STATE_MAX_LIFE
set OJu=oJu<=GetUnitState(sJu,tJu)*.65
else
set OJu=false
endif
if OJu then
if GetUnitAbilityLevel(BHu,$42303735)==0 then
set iJu=BHu
set SJu="innerfire"
set cJu=BHu
call IssueTargetOrder(iJu,SJu,cJu)
endif
endif
set BHu=null
set NHu=null
set MHu=null
set wJu=null
set uJu=null
set rJu=null
set sJu=null
set tJu=null
set iJu=null
set cJu=null
endfunction
function lLu takes nothing returns boolean
local trigger NKu
local playerunitevent MKu
local integer wLu
local trigger uLu
local playerunitevent rLu
local trigger sLu
local playerunitevent tLu
local integer iLu
local trigger SLu
local boolexpr cLu
local trigger oLu
local code OLu
set Oh=CreateTrigger()
set lh=CreateTrigger()
set NKu=Oh
set MKu=EVENT_PLAYER_UNIT_ATTACKED
set wLu=0
loop
call TriggerRegisterPlayerUnitEvent(NKu,Player(wLu),MKu,null)
set wLu=wLu+1
exitwhen wLu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oh,Condition(Brw))
call TriggerAddAction(Oh,Nrw)
set uLu=lh
set rLu=EVENT_PLAYER_UNIT_ATTACKED
set sLu=uLu
set tLu=rLu
set iLu=0
loop
call TriggerRegisterPlayerUnitEvent(sLu,Player(iLu),tLu,null)
set iLu=iLu+1
exitwhen iLu==bj_MAX_PLAYER_SLOTS
endloop
set SLu=lh
set cLu=Condition(Mrw)
call TriggerAddCondition(SLu,cLu)
set oLu=lh
set OLu=wsw
call TriggerAddAction(oLu,OLu)
set NKu=null
set MKu=null
set uLu=null
set rLu=null
set sLu=null
set tLu=null
set SLu=null
set cLu=null
set oLu=null
return true
endfunction
function lMl takes nothing returns boolean
local unit sMl=GetAttacker()
local unit tMl=GetTriggerUnit()
local unit iMl
local unit SMl
local boolean cMl
local boolean oMl
local boolean OMl
if GetUnitAbilityLevel(sMl,$416C6F63)==0 and GetUnitAbilityLevel(tMl,$416C6F63)==0 then
set iMl=sMl
set cMl=UnitAlive(iMl)
else
set cMl=false
endif
if cMl then
set SMl=tMl
set oMl=UnitAlive(SMl)
else
set oMl=false
endif
set OMl=oMl and IsUnitType(sMl,UNIT_TYPE_HERO)==true
set sMl=null
set tMl=null
set iMl=null
set SMl=null
return OMl
endfunction
function lNb takes nothing returns boolean
local unit iNb=GetFilterUnit()
local unit SNb=iNb
local unit cNb
local integer oNb
local boolean ONb
if GetOwningPlayer(SNb)==Ud then
set cNb=iNb
set oNb=$41303853
set ONb=GetUnitAbilityLevel(cNb,oNb)>0
else
set ONb=false
endif
set iNb=null
set SNb=null
set cNb=null
return ONb
endfunction
function lOe takes nothing returns boolean
local trigger SOe
local trigger cOe
local playerunitevent oOe
local integer OOe
set Bn=CreateTrigger()
set SOe=Bn
call DisableTrigger(SOe)
set cOe=Bn
set oOe=EVENT_PLAYER_UNIT_DEATH
set OOe=0
loop
call TriggerRegisterPlayerUnitEvent(cOe,Player(OOe),oOe,null)
set OOe=OOe+1
exitwhen OOe==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Bn,L6)
set SOe=null
set cOe=null
set oOe=null
return true
endfunction
function lPy takes nothing returns boolean
return true
endfunction
function lat takes nothing returns boolean
return IsUnitIllusion(GetDyingUnit())==true or GetUnitAbilityLevel(GetDyingUnit(),$416C6F63)==1 or GetUnitAbilityLevel(GetDyingUnit(),$4176756C)==1
endfunction
function lfo takes nothing returns nothing
local timer ufo=GetExpiredTimer()
local integer rfo=GetHandleId(ufo)
local unit sfo=LoadUnitHandle(qu,rfo,$556E6974)
local unit tfo=LoadUnitHandle(qu,rfo,$54617267)
local integer ifo=GetHandleId(sfo)
local group Sfo=Mo
local unit cfo=tfo
local group ofo
local unit Ofo
if IsUnitInGroup(cfo,Sfo)==true then
set ofo=Mo
set Ofo=tfo
call GroupRemoveUnit(ofo,Ofo)
endif
if LoadInteger(qu,$41544344,ifo)!=1 then
call SaveInteger(qu,$41544344,ifo,1)
call IssueImmediateOrder(sfo,"stop")
call IssueImmediateOrder(tfo,"stop")
call DestroyEffect(LoadEffectHandle(qu,rfo,$45666631))
call DestroyEffect(LoadEffectHandle(qu,rfo,$45666632))
call PauseTimer(ufo)
call DestroyTimer(ufo)
call FlushChildHashtable(qu,rfo)
endif
set ufo=null
set sfo=null
set tfo=null
set Sfo=null
set cfo=null
set ofo=null
set Ofo=null
endfunction
function lft takes nothing returns boolean
local trigger Sft
local trigger cft
local playerunitevent oft
local integer Oft
set Ln=CreateTrigger()
set Xn=CreateTimer()
set Sft=Ln
call DisableTrigger(Sft)
set cft=Ln
set oft=EVENT_PLAYER_HERO_LEVEL
set Oft=0
loop
call TriggerRegisterPlayerUnitEvent(cft,Player(Oft),oft,null)
set Oft=Oft+1
exitwhen Oft==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ln,J6)
set Sft=null
set cft=null
set oft=null
return true
endfunction
function lkO takes nothing returns boolean
return true
endfunction
function lkp takes nothing returns boolean
return true
endfunction
function lpy takes nothing returns nothing
local unit Rry=GetDyingUnit()
local unit Zry=Rry
local unittype Ury=UNIT_TYPE_HERO
local unit Try
local integer Yry
local texttag Gry
local texttag gry
local texttag hry
local texttag Fry
local texttag kry
local texttag jry
local texttag xry
local texttag vry
local texttag mry
local texttag Qry
local texttag Wry
local texttag Ery
local unit Iry
local unit Pry
local unittype Ary
local unit Dry
local unit Hry
local real Jry
local unit Kry
local unitstate Lry
local real Xry
local unit Cry
local unitstate Vry
local unit Bry
local unit Nry
local unitstate Mry
local unit wsy
local real usy
local unit rsy
local unitstate ssy
local real tsy
local unit isy
local unitstate Ssy
local unit csy
local unit osy
local unitstate Osy
local unit lsy
local real bsy
local unit ysy
local unitstate psy
local real esy
local unit qsy
local unitstate asy
local unit nsy
local unit dsy
local unitstate fsy
local effect Rsy
local widget Tsy
local string Ysy
local string Gsy
local unit gsy
local unit hsy
local integer Fsy
local unit ksy
local boolean jsy
local texttag xsy
local real vsy
local real msy
local real Qsy
local unit Wsy
local unit Esy
local texttag Zsy
local integer Usy
local integer Isy
local integer Psy
local integer Asy
local texttag Dsy
local real Hsy
local texttag Jsy
local real Ksy
local texttag Lsy
local boolean Xsy
local texttag Csy
local boolean Vsy
local texttag Bsy
local string Nsy
local real Msy
local texttag wty
local real uty
local real rty
local unit sty
local unit tty
local integer ity
local unit Sty
local boolean cty
local texttag oty
local real Oty
local real lty
local real bty
local unit yty
local unit pty
local texttag ety
local integer qty
local integer aty
local integer nty
local integer dty
local texttag fty
local real Rty
local texttag Tty
local real Yty
local texttag Gty
local boolean gty
local texttag hty
local boolean Fty
local texttag kty
local string jty
local real xty
local texttag vty
local real mty
local real Qty
local unit Wty
local unit Ety
local integer Zty
local unit Uty
local boolean Ity
local texttag Pty
local real Aty
local real Dty
local real Hty
local unit Jty
local unit Kty
local texttag Lty
local integer Xty
local integer Cty
local integer Vty
local integer Bty
local texttag Nty
local real Mty
local texttag wiy
local real uiy
local texttag riy
local boolean siy
local texttag tiy
local boolean iiy
local texttag Siy
local string ciy
local real oiy
local texttag Oiy
local real liy
local real biy
local unit yiy
local unit piy
local unit eiy
local unit qiy
local unit aiy
local unit niy
local unit diy
local unit fiy
local integer Riy
local unit Tiy
local boolean Yiy
local texttag Giy
local real giy
local real hiy
local real Fiy
local unit kiy
local unit jiy
local texttag xiy
local integer viy
local integer miy
local integer Qiy
local integer Wiy
local texttag Eiy
local real Ziy
local texttag Uiy
local real Iiy
local texttag Piy
local boolean Aiy
local texttag Diy
local boolean Hiy
local texttag Jiy
local string Kiy
local real Liy
local texttag Xiy
local real Ciy
local real Viy
local unit Biy
local unit Niy
local integer Miy
local unit wSy
local boolean uSy
local unit rSy
local integer sSy
local unit tSy
local boolean iSy
local unit SSy
local integer cSy
local unit oSy
local boolean OSy
local texttag lSy
local real bSy
local real ySy
local real pSy
local unit eSy
local unit qSy
local texttag aSy
local integer nSy
local integer dSy
local integer fSy
local integer RSy
local texttag TSy
local real YSy
local texttag GSy
local real gSy
local texttag hSy
local boolean FSy
local texttag kSy
local boolean jSy
local texttag xSy
local string vSy
local real mSy
local texttag QSy
local real WSy
local real ESy
local unit ZSy
local unit USy
local integer ISy
local unit PSy
local boolean ASy
local unit DSy
local integer HSy
local unit JSy
local boolean KSy
local unit LSy
local integer XSy
local unit CSy
local boolean VSy
local texttag BSy
local real NSy
local real MSy
local real wcy
local unit ucy
local unit rcy
local texttag scy
local integer tcy
local integer icy
local integer Scy
local integer ccy
local texttag ocy
local real Ocy
local texttag lcy
local real bcy
local texttag ycy
local boolean pcy
local texttag ecy
local boolean qcy
local texttag acy
local string ncy
local real dcy
local texttag fcy
local real Rcy
local real Tcy
local unit Ycy
local unit Gcy
local integer gcy
local unit hcy
local boolean Fcy
local unit kcy
local integer jcy
local unit xcy
local boolean vcy
local unit mcy
local integer Qcy
local unit Wcy
local boolean Ecy
local texttag Zcy
local real Ucy
local real Icy
local real Pcy
local unit Acy
local unit Dcy
local texttag Hcy
local integer Jcy
local integer Kcy
local integer Lcy
local integer Xcy
local texttag Ccy
local real Vcy
local texttag Bcy
local real Ncy
local texttag Mcy
local boolean woy
local texttag uoy
local boolean roy
local texttag soy
local string toy
local real ioy
local texttag Soy
local real coy
local real ooy
local unit Ooy
local unit loy
local unit boy
local unit yoy
local unit poy
local unit eoy
local unit qoy
local unit aoy
local integer noy
local unit doy
local boolean foy
local unit Roy
local integer Toy
local unit Yoy
local boolean Goy
local unit goy
local integer hoy
local unit Foy
local boolean koy
local texttag joy
local real xoy
local real voy
local real moy
local unit Qoy
local unit Woy
local texttag Eoy
local integer Zoy
local integer Uoy
local integer Ioy
local integer Poy
local texttag Aoy
local real Doy
local texttag Hoy
local real Joy
local texttag Koy
local boolean Loy
local texttag Xoy
local boolean Coy
local texttag Voy
local string Boy
local real Noy
local texttag Moy
local real wOy
local real uOy
local unit rOy
local unit sOy
local integer tOy
local unit iOy
local boolean SOy
local unit cOy
local integer oOy
local unit OOy
local boolean lOy
local unit bOy
local integer yOy
local unit pOy
local boolean eOy
local texttag qOy
local real aOy
local real nOy
local real dOy
local unit fOy
local unit ROy
local texttag TOy
local integer YOy
local integer GOy
local integer gOy
local integer hOy
local texttag FOy
local real kOy
local texttag jOy
local real xOy
local texttag vOy
local boolean mOy
local texttag QOy
local boolean WOy
local texttag EOy
local string ZOy
local real UOy
local texttag IOy
local real POy
local real AOy
local unit DOy
local unit HOy
local integer JOy
local unit KOy
local boolean LOy
local unit XOy
local integer COy
local unit VOy
local boolean BOy
local unit NOy
local integer MOy
local unit wly
local boolean uly
local texttag rly
local real sly
local real tly
local real ily
local unit Sly
local unit cly
local texttag oly
local integer Oly
local integer lly
local integer bly
local integer yly
local texttag ply
local real ely
local texttag qly
local real aly
local texttag nly
local boolean dly
local texttag fly
local boolean Rly
local texttag Tly
local string Yly
local real Gly
local texttag gly
local real hly
local real Fly
local unit kly
local unit jly
local integer xly
local unit vly
local boolean mly
local unit Qly
local integer Wly
local unit Ely
local boolean Zly
local unit Uly
local integer Ily
local unit Ply
local boolean Aly
local texttag Dly
local real Hly
local real Jly
local real Kly
local unit Lly
local unit Xly
local texttag Cly
local integer Vly
local integer Bly
local integer Nly
local integer Mly
local texttag wby
local real uby
local texttag rby
local real sby
local texttag tby
local boolean iby
local texttag Sby
local boolean cby
local texttag oby
local string Oby
local real lby
local texttag bby
local real yby
local real pby
local unit eby
local unit qby
local unit aby
local unit nby
local unit dby
local unit fby
local unit Rby
local unit Tby
local integer Yby
local unit Gby
local boolean gby
local unit hby
local integer Fby
local unit kby
local boolean jby
local unit xby
local integer vby
local unit mby
local boolean Qby
local texttag Wby
local real Eby
local real Zby
local real Uby
local unit Iby
local unit Pby
local texttag Aby
local integer Dby
local integer Hby
local integer Jby
local integer Kby
local texttag Lby
local real Xby
local texttag Cby
local real Vby
local texttag Bby
local boolean Nby
local texttag Mby
local boolean wyy
local texttag uyy
local string ryy
local real syy
local texttag tyy
local real iyy
local real Syy
local boolean cyy
local boolean oyy
local unit Oyy
local unitstate lyy
local unit byy
local unitstate yyy
local unit pyy
local unitstate eyy
local unit qyy
local unit ayy
local unit nyy
local boolean dyy
local boolean fyy
local boolean Ryy
local boolean Tyy
local boolean Yyy
local boolean Gyy
local unit gyy
local unit hyy
local unit Fyy
local unit kyy
local unit jyy
local unit xyy
local unit vyy
local unit myy
local unit Qyy
local unit Wyy
local boolean Eyy
local boolean Zyy
local boolean Uyy
local boolean Iyy
local boolean Pyy
local boolean Ayy
local unit Dyy
local unit Hyy
local unit Jyy
local unit Kyy
local unit Lyy
local unit Xyy
local unit Cyy
local unit Vyy
local unit Byy
local unit Nyy
local unit Myy
local unit wpy
local boolean upy
local boolean rpy
local boolean spy
local boolean tpy
local boolean ipy
local boolean Spy
local unit cpy
local unit opy
local unit Opy
if IsUnitType(Zry,Ury)==true then
set Try=GetKillingUnit()
set Iry=Try
set Yry=GetPlayerTechCount(GetOwningPlayer(Iry),$5230354E,true)
if Yry>0 then
set Pry=Try
set Ary=UNIT_TYPE_HERO
set cyy=IsUnitType(Pry,Ary)==true
else
set cyy=false
endif
if cyy then
set Dry=Try
set oyy=UnitAlive(Dry)==true
else
set oyy=false
endif
if oyy then
if Yry==1 then
set Hry=Try
set Bry=Try
set Nry=Bry
set Mry=UNIT_STATE_MAX_LIFE
set Jry=GetUnitState(Nry,Mry)*.05
set Kry=Hry
set Lry=UNIT_STATE_LIFE
set Xry=Jry
set Oyy=Kry
set lyy=Lry
set Cry=Kry
set Vry=Lry
call SetUnitState(Oyy,lyy,GetUnitState(Cry,Vry)+Xry)
elseif Yry<4 then
set wsy=Try
set csy=Try
set osy=csy
set Osy=UNIT_STATE_MAX_LIFE
set usy=GetUnitState(osy,Osy)*.1
set rsy=wsy
set ssy=UNIT_STATE_LIFE
set tsy=usy
set byy=rsy
set yyy=ssy
set isy=rsy
set Ssy=ssy
call SetUnitState(byy,yyy,GetUnitState(isy,Ssy)+tsy)
else
set lsy=Try
set nsy=Try
set dsy=nsy
set fsy=UNIT_STATE_MAX_LIFE
set bsy=GetUnitState(dsy,fsy)*.15
set ysy=lsy
set psy=UNIT_STATE_LIFE
set esy=bsy
set pyy=ysy
set eyy=psy
set qsy=ysy
set asy=psy
call SetUnitState(pyy,eyy,GetUnitState(qsy,asy)+esy)
endif
set Tsy=Try
set Ysy="Call of Dread Green.mdl"
set Gsy="chest"
set Rsy=AddSpecialEffectTarget(Ysy,Tsy,Gsy)
call DestroyEffect(Rsy)
if Yry==2 then
set gsy=Try
if GetUnitTypeId(gsy)==$55303041 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set hsy=Try
set Fsy=1
set qyy=hsy
set ksy=hsy
set jsy=false
call SetHeroStr(qyy,GetHeroStr(ksy,jsy)+Fsy,true)
set Gry=CreateTextTag()
set xsy=Gry
set Wsy=Try
set vsy=GetUnitX(Wsy)
set Esy=Try
set msy=GetUnitY(Esy)
set Qsy=50.
call SetTextTagPos(xsy,vsy,msy,Qsy)
set Zsy=Gry
set Usy=255
set Isy=0
set Psy=0
set Asy=255
call SetTextTagColor(Zsy,Usy,Isy,Psy,Asy)
set Dsy=Gry
set Hsy=6.
call SetTextTagLifespan(Dsy,Hsy)
set Jsy=Gry
set Ksy=4.
call SetTextTagFadepoint(Jsy,Ksy)
set Lsy=Gry
set Xsy=true
call SetTextTagVisibility(Lsy,Xsy)
set Csy=Gry
set Vsy=false
call SetTextTagPermanent(Csy,Vsy)
set Bsy=Gry
set Nsy="+1"
set Msy=10.
call SetTextTagText(Bsy,Nsy,Msy*.0023)
set wty=Gry
set uty=0.
set rty=.03
call SetTextTagVelocity(wty,uty,rty)
endif
set sty=Try
if GetUnitTypeId(sty)==$55303042 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set tty=Try
set ity=1
set ayy=tty
set Sty=tty
set cty=false
call SetHeroAgi(ayy,GetHeroAgi(Sty,cty)+ity,true)
set gry=CreateTextTag()
set oty=gry
set yty=Try
set Oty=GetUnitX(yty)
set pty=Try
set lty=GetUnitY(pty)
set bty=50.
call SetTextTagPos(oty,Oty,lty,bty)
set ety=gry
set qty=0
set aty=255
set nty=0
set dty=255
call SetTextTagColor(ety,qty,aty,nty,dty)
set fty=gry
set Rty=6.
call SetTextTagLifespan(fty,Rty)
set Tty=gry
set Yty=4.
call SetTextTagFadepoint(Tty,Yty)
set Gty=gry
set gty=true
call SetTextTagVisibility(Gty,gty)
set hty=gry
set Fty=false
call SetTextTagPermanent(hty,Fty)
set kty=gry
set jty="+1"
set xty=10.
call SetTextTagText(kty,jty,xty*.0023)
set vty=gry
set mty=0.
set Qty=.03
call SetTextTagVelocity(vty,mty,Qty)
endif
set Wty=Try
if GetUnitTypeId(Wty)==$55303043 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set Ety=Try
set Zty=1
set nyy=Ety
set Uty=Ety
set Ity=false
call SetHeroAgi(nyy,GetHeroAgi(Uty,Ity)+Zty,true)
set hry=CreateTextTag()
set Pty=hry
set Jty=Try
set Aty=GetUnitX(Jty)
set Kty=Try
set Dty=GetUnitY(Kty)
set Hty=50.
call SetTextTagPos(Pty,Aty,Dty,Hty)
set Lty=hry
set Xty=0
set Cty=255
set Vty=0
set Bty=255
call SetTextTagColor(Lty,Xty,Cty,Vty,Bty)
set Nty=hry
set Mty=6.
call SetTextTagLifespan(Nty,Mty)
set wiy=hry
set uiy=4.
call SetTextTagFadepoint(wiy,uiy)
set riy=hry
set siy=true
call SetTextTagVisibility(riy,siy)
set tiy=hry
set iiy=false
call SetTextTagPermanent(tiy,iiy)
set Siy=hry
set ciy="+1"
set oiy=10.
call SetTextTagText(Siy,ciy,oiy*.0023)
set Oiy=hry
set liy=0.
set biy=.03
call SetTextTagVelocity(Oiy,liy,biy)
endif
set yiy=Try
if GetUnitTypeId(yiy)==$55303045 then
set dyy=true
else
set piy=Try
set dyy=GetUnitTypeId(piy)==$55303046
endif
if dyy then
set fyy=true
else
set eiy=Try
set fyy=GetUnitTypeId(eiy)==$55303047
endif
if fyy then
set Ryy=true
else
set qiy=Try
set Ryy=GetUnitTypeId(qiy)==$55303048
endif
if Ryy then
set Tyy=true
else
set aiy=Try
set Tyy=GetUnitTypeId(aiy)==$55303049
endif
if Tyy then
set Yyy=true
else
set niy=Try
set Yyy=GetUnitTypeId(niy)==$5530304A
endif
if Yyy then
set Gyy=true
else
set diy=Try
set Gyy=GetUnitTypeId(diy)==$5530304D
endif
if Gyy then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set fiy=Try
set Riy=1
set gyy=fiy
set Tiy=fiy
set Yiy=false
call SetHeroStr(gyy,GetHeroStr(Tiy,Yiy)+Riy,true)
set Fry=CreateTextTag()
set Giy=Fry
set kiy=Try
set giy=GetUnitX(kiy)
set jiy=Try
set hiy=GetUnitY(jiy)
set Fiy=50.
call SetTextTagPos(Giy,giy,hiy,Fiy)
set xiy=Fry
set viy=255
set miy=0
set Qiy=0
set Wiy=255
call SetTextTagColor(xiy,viy,miy,Qiy,Wiy)
set Eiy=Fry
set Ziy=6.
call SetTextTagLifespan(Eiy,Ziy)
set Uiy=Fry
set Iiy=4.
call SetTextTagFadepoint(Uiy,Iiy)
set Piy=Fry
set Aiy=true
call SetTextTagVisibility(Piy,Aiy)
set Diy=Fry
set Hiy=false
call SetTextTagPermanent(Diy,Hiy)
set Jiy=Fry
set Kiy="+1"
set Liy=10.
call SetTextTagText(Jiy,Kiy,Liy*.0023)
set Xiy=Fry
set Ciy=0.
set Viy=.03
call SetTextTagVelocity(Xiy,Ciy,Viy)
endif
endif
if Yry==3 then
set Biy=Try
if GetUnitTypeId(Biy)==$55303041 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set Niy=Try
set Miy=1
set hyy=Niy
set wSy=Niy
set uSy=false
call SetHeroStr(hyy,GetHeroStr(wSy,uSy)+Miy,true)
set rSy=Try
set sSy=1
set Fyy=rSy
set tSy=rSy
set iSy=false
call SetHeroAgi(Fyy,GetHeroAgi(tSy,iSy)+sSy,true)
set SSy=Try
set cSy=1
set kyy=SSy
set oSy=SSy
set OSy=false
call SetHeroInt(kyy,GetHeroInt(oSy,OSy)+cSy,true)
set kry=CreateTextTag()
set lSy=kry
set eSy=Try
set bSy=GetUnitX(eSy)
set qSy=Try
set ySy=GetUnitY(qSy)
set pSy=50.
call SetTextTagPos(lSy,bSy,ySy,pSy)
set aSy=kry
set nSy=255
set dSy=0
set fSy=0
set RSy=255
call SetTextTagColor(aSy,nSy,dSy,fSy,RSy)
set TSy=kry
set YSy=6.
call SetTextTagLifespan(TSy,YSy)
set GSy=kry
set gSy=4.
call SetTextTagFadepoint(GSy,gSy)
set hSy=kry
set FSy=true
call SetTextTagVisibility(hSy,FSy)
set kSy=kry
set jSy=false
call SetTextTagPermanent(kSy,jSy)
set xSy=kry
set vSy="+1 all"
set mSy=10.
call SetTextTagText(xSy,vSy,mSy*.0023)
set QSy=kry
set WSy=0.
set ESy=.03
call SetTextTagVelocity(QSy,WSy,ESy)
endif
set ZSy=Try
if GetUnitTypeId(ZSy)==$55303042 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set USy=Try
set ISy=1
set jyy=USy
set PSy=USy
set ASy=false
call SetHeroStr(jyy,GetHeroStr(PSy,ASy)+ISy,true)
set DSy=Try
set HSy=1
set xyy=DSy
set JSy=DSy
set KSy=false
call SetHeroAgi(xyy,GetHeroAgi(JSy,KSy)+HSy,true)
set LSy=Try
set XSy=1
set vyy=LSy
set CSy=LSy
set VSy=false
call SetHeroInt(vyy,GetHeroInt(CSy,VSy)+XSy,true)
set jry=CreateTextTag()
set BSy=jry
set ucy=Try
set NSy=GetUnitX(ucy)
set rcy=Try
set MSy=GetUnitY(rcy)
set wcy=50.
call SetTextTagPos(BSy,NSy,MSy,wcy)
set scy=jry
set tcy=0
set icy=255
set Scy=0
set ccy=255
call SetTextTagColor(scy,tcy,icy,Scy,ccy)
set ocy=jry
set Ocy=6.
call SetTextTagLifespan(ocy,Ocy)
set lcy=jry
set bcy=4.
call SetTextTagFadepoint(lcy,bcy)
set ycy=jry
set pcy=true
call SetTextTagVisibility(ycy,pcy)
set ecy=jry
set qcy=false
call SetTextTagPermanent(ecy,qcy)
set acy=jry
set ncy="+1 all"
set dcy=10.
call SetTextTagText(acy,ncy,dcy*.0023)
set fcy=jry
set Rcy=0.
set Tcy=.03
call SetTextTagVelocity(fcy,Rcy,Tcy)
endif
set Ycy=Try
if GetUnitTypeId(Ycy)==$55303043 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set Gcy=Try
set gcy=1
set myy=Gcy
set hcy=Gcy
set Fcy=false
call SetHeroStr(myy,GetHeroStr(hcy,Fcy)+gcy,true)
set kcy=Try
set jcy=1
set Qyy=kcy
set xcy=kcy
set vcy=false
call SetHeroAgi(Qyy,GetHeroAgi(xcy,vcy)+jcy,true)
set mcy=Try
set Qcy=1
set Wyy=mcy
set Wcy=mcy
set Ecy=false
call SetHeroInt(Wyy,GetHeroInt(Wcy,Ecy)+Qcy,true)
set xry=CreateTextTag()
set Zcy=xry
set Acy=Try
set Ucy=GetUnitX(Acy)
set Dcy=Try
set Icy=GetUnitY(Dcy)
set Pcy=50.
call SetTextTagPos(Zcy,Ucy,Icy,Pcy)
set Hcy=xry
set Jcy=0
set Kcy=255
set Lcy=0
set Xcy=255
call SetTextTagColor(Hcy,Jcy,Kcy,Lcy,Xcy)
set Ccy=xry
set Vcy=6.
call SetTextTagLifespan(Ccy,Vcy)
set Bcy=xry
set Ncy=4.
call SetTextTagFadepoint(Bcy,Ncy)
set Mcy=xry
set woy=true
call SetTextTagVisibility(Mcy,woy)
set uoy=xry
set roy=false
call SetTextTagPermanent(uoy,roy)
set soy=xry
set toy="+1 all"
set ioy=10.
call SetTextTagText(soy,toy,ioy*.0023)
set Soy=xry
set coy=0.
set ooy=.03
call SetTextTagVelocity(Soy,coy,ooy)
endif
set Ooy=Try
if GetUnitTypeId(Ooy)==$55303045 then
set Eyy=true
else
set loy=Try
set Eyy=GetUnitTypeId(loy)==$55303046
endif
if Eyy then
set Zyy=true
else
set boy=Try
set Zyy=GetUnitTypeId(boy)==$55303047
endif
if Zyy then
set Uyy=true
else
set yoy=Try
set Uyy=GetUnitTypeId(yoy)==$55303048
endif
if Uyy then
set Iyy=true
else
set poy=Try
set Iyy=GetUnitTypeId(poy)==$55303049
endif
if Iyy then
set Pyy=true
else
set eoy=Try
set Pyy=GetUnitTypeId(eoy)==$5530304A
endif
if Pyy then
set Ayy=true
else
set qoy=Try
set Ayy=GetUnitTypeId(qoy)==$5530304D
endif
if Ayy then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set aoy=Try
set noy=1
set Dyy=aoy
set doy=aoy
set foy=false
call SetHeroStr(Dyy,GetHeroStr(doy,foy)+noy,true)
set Roy=Try
set Toy=1
set Hyy=Roy
set Yoy=Roy
set Goy=false
call SetHeroAgi(Hyy,GetHeroAgi(Yoy,Goy)+Toy,true)
set goy=Try
set hoy=1
set Jyy=goy
set Foy=goy
set koy=false
call SetHeroInt(Jyy,GetHeroInt(Foy,koy)+hoy,true)
set vry=CreateTextTag()
set joy=vry
set Qoy=Try
set xoy=GetUnitX(Qoy)
set Woy=Try
set voy=GetUnitY(Woy)
set moy=50.
call SetTextTagPos(joy,xoy,voy,moy)
set Eoy=vry
set Zoy=255
set Uoy=0
set Ioy=0
set Poy=255
call SetTextTagColor(Eoy,Zoy,Uoy,Ioy,Poy)
set Aoy=vry
set Doy=6.
call SetTextTagLifespan(Aoy,Doy)
set Hoy=vry
set Joy=4.
call SetTextTagFadepoint(Hoy,Joy)
set Koy=vry
set Loy=true
call SetTextTagVisibility(Koy,Loy)
set Xoy=vry
set Coy=false
call SetTextTagPermanent(Xoy,Coy)
set Voy=vry
set Boy="+1 all"
set Noy=10.
call SetTextTagText(Voy,Boy,Noy*.0023)
set Moy=vry
set wOy=0.
set uOy=.03
call SetTextTagVelocity(Moy,wOy,uOy)
endif
endif
if Yry==4 then
set rOy=Try
if GetUnitTypeId(rOy)==$55303041 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set sOy=Try
set tOy=2
set Kyy=sOy
set iOy=sOy
set SOy=false
call SetHeroStr(Kyy,GetHeroStr(iOy,SOy)+tOy,true)
set cOy=Try
set oOy=1
set Lyy=cOy
set OOy=cOy
set lOy=false
call SetHeroAgi(Lyy,GetHeroAgi(OOy,lOy)+oOy,true)
set bOy=Try
set yOy=1
set Xyy=bOy
set pOy=bOy
set eOy=false
call SetHeroInt(Xyy,GetHeroInt(pOy,eOy)+yOy,true)
set mry=CreateTextTag()
set qOy=mry
set fOy=Try
set aOy=GetUnitX(fOy)
set ROy=Try
set nOy=GetUnitY(ROy)
set dOy=50.
call SetTextTagPos(qOy,aOy,nOy,dOy)
set TOy=mry
set YOy=255
set GOy=0
set gOy=0
set hOy=255
call SetTextTagColor(TOy,YOy,GOy,gOy,hOy)
set FOy=mry
set kOy=6.
call SetTextTagLifespan(FOy,kOy)
set jOy=mry
set xOy=4.
call SetTextTagFadepoint(jOy,xOy)
set vOy=mry
set mOy=true
call SetTextTagVisibility(vOy,mOy)
set QOy=mry
set WOy=false
call SetTextTagPermanent(QOy,WOy)
set EOy=mry
set ZOy="+1 all,+1 main"
set UOy=10.
call SetTextTagText(EOy,ZOy,UOy*.0023)
set IOy=mry
set POy=0.
set AOy=.03
call SetTextTagVelocity(IOy,POy,AOy)
endif
set DOy=Try
if GetUnitTypeId(DOy)==$55303042 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set HOy=Try
set JOy=1
set Cyy=HOy
set KOy=HOy
set LOy=false
call SetHeroStr(Cyy,GetHeroStr(KOy,LOy)+JOy,true)
set XOy=Try
set COy=2
set Vyy=XOy
set VOy=XOy
set BOy=false
call SetHeroAgi(Vyy,GetHeroAgi(VOy,BOy)+COy,true)
set NOy=Try
set MOy=1
set Byy=NOy
set wly=NOy
set uly=false
call SetHeroInt(Byy,GetHeroInt(wly,uly)+MOy,true)
set Qry=CreateTextTag()
set rly=Qry
set Sly=Try
set sly=GetUnitX(Sly)
set cly=Try
set tly=GetUnitY(cly)
set ily=50.
call SetTextTagPos(rly,sly,tly,ily)
set oly=Qry
set Oly=0
set lly=255
set bly=0
set yly=255
call SetTextTagColor(oly,Oly,lly,bly,yly)
set ply=Qry
set ely=6.
call SetTextTagLifespan(ply,ely)
set qly=Qry
set aly=4.
call SetTextTagFadepoint(qly,aly)
set nly=Qry
set dly=true
call SetTextTagVisibility(nly,dly)
set fly=Qry
set Rly=false
call SetTextTagPermanent(fly,Rly)
set Tly=Qry
set Yly="+1 all,+1 main"
set Gly=10.
call SetTextTagText(Tly,Yly,Gly*.0023)
set gly=Qry
set hly=0.
set Fly=.03
call SetTextTagVelocity(gly,hly,Fly)
endif
set kly=Try
if GetUnitTypeId(kly)==$55303043 then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set jly=Try
set xly=1
set Nyy=jly
set vly=jly
set mly=false
call SetHeroStr(Nyy,GetHeroStr(vly,mly)+xly,true)
set Qly=Try
set Wly=2
set Myy=Qly
set Ely=Qly
set Zly=false
call SetHeroAgi(Myy,GetHeroAgi(Ely,Zly)+Wly,true)
set Uly=Try
set Ily=1
set wpy=Uly
set Ply=Uly
set Aly=false
call SetHeroInt(wpy,GetHeroInt(Ply,Aly)+Ily,true)
set Wry=CreateTextTag()
set Dly=Wry
set Lly=Try
set Hly=GetUnitX(Lly)
set Xly=Try
set Jly=GetUnitY(Xly)
set Kly=50.
call SetTextTagPos(Dly,Hly,Jly,Kly)
set Cly=Wry
set Vly=0
set Bly=255
set Nly=0
set Mly=255
call SetTextTagColor(Cly,Vly,Bly,Nly,Mly)
set wby=Wry
set uby=6.
call SetTextTagLifespan(wby,uby)
set rby=Wry
set sby=4.
call SetTextTagFadepoint(rby,sby)
set tby=Wry
set iby=true
call SetTextTagVisibility(tby,iby)
set Sby=Wry
set cby=false
call SetTextTagPermanent(Sby,cby)
set oby=Wry
set Oby="+1 all,+1 main"
set lby=10.
call SetTextTagText(oby,Oby,lby*.0023)
set bby=Wry
set yby=0.
set pby=.03
call SetTextTagVelocity(bby,yby,pby)
endif
set eby=Try
if GetUnitTypeId(eby)==$55303045 then
set upy=true
else
set qby=Try
set upy=GetUnitTypeId(qby)==$55303046
endif
if upy then
set rpy=true
else
set aby=Try
set rpy=GetUnitTypeId(aby)==$55303047
endif
if rpy then
set spy=true
else
set nby=Try
set spy=GetUnitTypeId(nby)==$55303048
endif
if spy then
set tpy=true
else
set dby=Try
set tpy=GetUnitTypeId(dby)==$55303049
endif
if tpy then
set ipy=true
else
set fby=Try
set ipy=GetUnitTypeId(fby)==$5530304A
endif
if ipy then
set Spy=true
else
set Rby=Try
set Spy=GetUnitTypeId(Rby)==$5530304D
endif
if Spy then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl",Try,"chest"))
set Tby=Try
set Yby=2
set cpy=Tby
set Gby=Tby
set gby=false
call SetHeroStr(cpy,GetHeroStr(Gby,gby)+Yby,true)
set hby=Try
set Fby=1
set opy=hby
set kby=hby
set jby=false
call SetHeroAgi(opy,GetHeroAgi(kby,jby)+Fby,true)
set xby=Try
set vby=1
set Opy=xby
set mby=xby
set Qby=false
call SetHeroInt(Opy,GetHeroInt(mby,Qby)+vby,true)
set Ery=CreateTextTag()
set Wby=Ery
set Iby=Try
set Eby=GetUnitX(Iby)
set Pby=Try
set Zby=GetUnitY(Pby)
set Uby=50.
call SetTextTagPos(Wby,Eby,Zby,Uby)
set Aby=Ery
set Dby=255
set Hby=0
set Jby=0
set Kby=255
call SetTextTagColor(Aby,Dby,Hby,Jby,Kby)
set Lby=Ery
set Xby=6.
call SetTextTagLifespan(Lby,Xby)
set Cby=Ery
set Vby=4.
call SetTextTagFadepoint(Cby,Vby)
set Bby=Ery
set Nby=true
call SetTextTagVisibility(Bby,Nby)
set Mby=Ery
set wyy=false
call SetTextTagPermanent(Mby,wyy)
set uyy=Ery
set ryy="+1 all,+1 main"
set syy=10.
call SetTextTagText(uyy,ryy,syy*.0023)
set tyy=Ery
set iyy=0.
set Syy=.03
call SetTextTagVelocity(tyy,iyy,Syy)
endif
endif
endif
endif
set Rry=null
set Try=null
set Gry=null
set gry=null
set hry=null
set Fry=null
set kry=null
set jry=null
set xry=null
set vry=null
set mry=null
set Qry=null
set Wry=null
set Ery=null
set Zry=null
set Ury=null
set Iry=null
set Pry=null
set Ary=null
set Dry=null
set Hry=null
set Kry=null
set Lry=null
set Cry=null
set Vry=null
set Bry=null
set Nry=null
set Mry=null
set wsy=null
set rsy=null
set ssy=null
set isy=null
set Ssy=null
set csy=null
set osy=null
set Osy=null
set lsy=null
set ysy=null
set psy=null
set qsy=null
set asy=null
set nsy=null
set dsy=null
set fsy=null
set Rsy=null
set Tsy=null
set gsy=null
set hsy=null
set ksy=null
set xsy=null
set Wsy=null
set Esy=null
set Zsy=null
set Dsy=null
set Jsy=null
set Lsy=null
set Csy=null
set Bsy=null
set wty=null
set sty=null
set tty=null
set Sty=null
set oty=null
set yty=null
set pty=null
set ety=null
set fty=null
set Tty=null
set Gty=null
set hty=null
set kty=null
set vty=null
set Wty=null
set Ety=null
set Uty=null
set Pty=null
set Jty=null
set Kty=null
set Lty=null
set Nty=null
set wiy=null
set riy=null
set tiy=null
set Siy=null
set Oiy=null
set yiy=null
set piy=null
set eiy=null
set qiy=null
set aiy=null
set niy=null
set diy=null
set fiy=null
set Tiy=null
set Giy=null
set kiy=null
set jiy=null
set xiy=null
set Eiy=null
set Uiy=null
set Piy=null
set Diy=null
set Jiy=null
set Xiy=null
set Biy=null
set Niy=null
set wSy=null
set rSy=null
set tSy=null
set SSy=null
set oSy=null
set lSy=null
set eSy=null
set qSy=null
set aSy=null
set TSy=null
set GSy=null
set hSy=null
set kSy=null
set xSy=null
set QSy=null
set ZSy=null
set USy=null
set PSy=null
set DSy=null
set JSy=null
set LSy=null
set CSy=null
set BSy=null
set ucy=null
set rcy=null
set scy=null
set ocy=null
set lcy=null
set ycy=null
set ecy=null
set acy=null
set fcy=null
set Ycy=null
set Gcy=null
set hcy=null
set kcy=null
set xcy=null
set mcy=null
set Wcy=null
set Zcy=null
set Acy=null
set Dcy=null
set Hcy=null
set Ccy=null
set Bcy=null
set Mcy=null
set uoy=null
set soy=null
set Soy=null
set Ooy=null
set loy=null
set boy=null
set yoy=null
set poy=null
set eoy=null
set qoy=null
set aoy=null
set doy=null
set Roy=null
set Yoy=null
set goy=null
set Foy=null
set joy=null
set Qoy=null
set Woy=null
set Eoy=null
set Aoy=null
set Hoy=null
set Koy=null
set Xoy=null
set Voy=null
set Moy=null
set rOy=null
set sOy=null
set iOy=null
set cOy=null
set OOy=null
set bOy=null
set pOy=null
set qOy=null
set fOy=null
set ROy=null
set TOy=null
set FOy=null
set jOy=null
set vOy=null
set QOy=null
set EOy=null
set IOy=null
set DOy=null
set HOy=null
set KOy=null
set XOy=null
set VOy=null
set NOy=null
set wly=null
set rly=null
set Sly=null
set cly=null
set oly=null
set ply=null
set qly=null
set nly=null
set fly=null
set Tly=null
set gly=null
set kly=null
set jly=null
set vly=null
set Qly=null
set Ely=null
set Uly=null
set Ply=null
set Dly=null
set Lly=null
set Xly=null
set Cly=null
set wby=null
set rby=null
set tby=null
set Sby=null
set oby=null
set bby=null
set eby=null
set qby=null
set aby=null
set nby=null
set dby=null
set fby=null
set Rby=null
set Tby=null
set Gby=null
set hby=null
set kby=null
set xby=null
set mby=null
set Wby=null
set Iby=null
set Pby=null
set Aby=null
set Lby=null
set Cby=null
set Bby=null
set Mby=null
set uyy=null
set tyy=null
set Oyy=null
set lyy=null
set byy=null
set yyy=null
set pyy=null
set eyy=null
set qyy=null
set ayy=null
set nyy=null
set gyy=null
set hyy=null
set Fyy=null
set kyy=null
set jyy=null
set xyy=null
set vyy=null
set myy=null
set Qyy=null
set Wyy=null
set Dyy=null
set Hyy=null
set Jyy=null
set Kyy=null
set Lyy=null
set Xyy=null
set Cyy=null
set Vyy=null
set Byy=null
set Nyy=null
set Myy=null
set wpy=null
set cpy=null
set opy=null
set Opy=null
endfunction
function lqe takes nothing returns nothing
local group Zee
local filterfunc Uee
local unit Iee
local group Pee
local unit Aee
local unit Dee
local unit Hee
local unit Jee
local unit Kee
local unit Lee
local unit Xee
local unit Cee
local unit Vee
local unit Bee
local unit Nee
local unit Mee
local unit wqe
local unit uqe
local unit rqe
local group sqe
local group tqe
local unit iqe
local unit Sqe
local unit cqe
local group oqe
local boolexpr Oqe
if sF==true and tF==true then
set Zee=CreateGroup()
set Uee=Filter(Stw)
call GroupEnumUnitsInRect(Zee,bj_mapInitialPlayableArea,Uee)
set Pee=Zee
loop
set sqe=Pee
exitwhen not (FirstOfGroup(sqe)!=null)
set tqe=Pee
set iqe=FirstOfGroup(tqe)
call GroupRemoveUnit(tqe,iqe)
set Iee=iqe
set Sqe=Iee
set cF=GetUnitX(Sqe)
set cqe=Iee
set oF=GetUnitY(cqe)
endloop
set oqe=Zee
call DestroyGroup(oqe)
set Oqe=Uee
call DestroyBoolExpr(Oqe)
set Aee=CreateUnit(SF,$6E667474,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Aee,"origin"))
set Dee=CreateUnit(SF,$6E667474,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Dee,"origin"))
set Hee=CreateUnit(SF,$6E667474,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Hee,"origin"))
set Jee=CreateUnit(SF,$6E667474,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Jee,"origin"))
set Kee=CreateUnit(SF,$6E697468,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Kee,"origin"))
set Lee=CreateUnit(SF,$6E697468,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Lee,"origin"))
set Xee=CreateUnit(SF,$6E667462,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Xee,"origin"))
set Cee=CreateUnit(SF,$6E667462,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Cee,"origin"))
set Vee=CreateUnit(SF,$6F317A67,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Vee,"origin"))
set Bee=CreateUnit(SF,$6F317A67,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Bee,"origin"))
set Nee=CreateUnit(SF,$6F317A67,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Nee,"origin"))
set Mee=CreateUnit(SF,$6E697477,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",Mee,"origin"))
set wqe=CreateUnit(SF,$6F303444,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",wqe,"origin"))
set uqe=CreateUnit(SF,$6F303352,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",uqe,"origin"))
set rqe=CreateUnit(SF,$6E706C67,cF,oF,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",rqe,"origin"))
call TimerStart(iF,90.,true,ctw)
endif
set Zee=null
set Uee=null
set Iee=null
set Pee=null
set Aee=null
set Dee=null
set Hee=null
set Jee=null
set Kee=null
set Lee=null
set Xee=null
set Cee=null
set Vee=null
set Bee=null
set Nee=null
set Mee=null
set wqe=null
set uqe=null
set rqe=null
set sqe=null
set tqe=null
set iqe=null
set Sqe=null
set cqe=null
set oqe=null
set Oqe=null
endfunction
function lqu takes nothing returns boolean
local playerunitevent oqu=EVENT_PLAYER_UNIT_SPELL_CAST
local code Oqu=bww_2076
call emO(oqu,null,Oqu,null)
set oqu=null
return true
endfunction
function lrO takes nothing returns boolean
call CreateTrigger()
return true
endfunction
function ltO takes nothing returns boolean
return true
endfunction
function lvi takes nothing returns boolean
return true
endfunction
function lvt takes nothing returns boolean
local trigger Svt
local trigger cvt
local playerunitevent ovt
local integer Ovt
set vy=CreateTrigger()
set Svt=vy
call DisableTrigger(Svt)
set cvt=vy
set ovt=EVENT_PLAYER_UNIT_DEATH
set Ovt=0
loop
call TriggerRegisterPlayerUnitEvent(cvt,Player(Ovt),ovt,null)
set Ovt=Ovt+1
exitwhen Ovt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(vy,H1)
set Svt=null
set cvt=null
set ovt=null
return true
endfunction
function m1b takes nothing returns boolean
return true
endfunction
function m1o takes nothing returns nothing
local unit Y1o=GetTriggerUnit()
local unit G1o=Y1o
local string g1o="attack"
local real x1o=Qw[23]
local real v1o=Ww[23]
local real h1o=x1o
local real F1o=v1o
local unit k1o
local unittype j1o
call IssuePointOrder(G1o,g1o,h1o,F1o)
set k1o=Y1o
set j1o=UNIT_TYPE_HERO
if IsUnitType(k1o,j1o) then
call SaveInteger(qu,GetHandleId(Y1o),$6D6F7665,23)
endif
set Y1o=null
set G1o=null
set k1o=null
set j1o=null
endfunction
function m3u takes nothing returns nothing
local integer NMu=GetSpellAbilityId()
local unit MMu
local group w3u
local integer u3u
local filterfunc r3u
local unit s3u
local group t3u
local unit i3u
local unit S3u
local unit c3u
local unit o3u
local group O3u
local group l3u
local unit b3u
local unit y3u
local unit p3u
local unit e3u
local unit q3u
local real a3u
local unit n3u
local integer d3u
local unit f3u
local integer R3u
local integer T3u
local unit Y3u
local string G3u
local widget g3u
local group h3u
local boolexpr F3u
local group k3u
local real j3u
local player x3u
local real v3u
if NMu==$41304B4A then
set MMu=GetSpellAbilityUnit()
set w3u=CreateGroup()
set S3u=MMu
set u3u=GetPlayerTechCount(GetOwningPlayer(S3u),$52303144,true)
set r3u=Filter(c2)
set k3u=w3u
set c3u=MMu
set j3u=GetUnitX(c3u)
set o3u=MMu
call GroupEnumUnitsInRange(k3u,j3u,GetUnitY(o3u),350.,r3u)
set t3u=w3u
loop
set O3u=t3u
exitwhen not (FirstOfGroup(O3u)!=null)
set l3u=t3u
set b3u=FirstOfGroup(l3u)
call GroupRemoveUnit(l3u,b3u)
set s3u=b3u
set y3u=s3u
set x3u=GetOwningPlayer(y3u)
set p3u=s3u
set v3u=GetUnitX(p3u)
set e3u=s3u
set i3u=CreateUnit(x3u,$75303030,v3u,GetUnitY(e3u),0.)
set q3u=i3u
set a3u=3.
call UnitApplyTimedLife(q3u,$42544C46,a3u)
set n3u=i3u
set d3u=$41323748
call UnitAddAbility(n3u,d3u)
set f3u=i3u
set R3u=$41323748
set T3u=u3u
call SetUnitAbilityLevel(f3u,R3u,T3u)
set Y3u=i3u
set G3u="antimagicshell"
set g3u=s3u
call IssueTargetOrder(Y3u,G3u,g3u)
endloop
set h3u=w3u
call DestroyGroup(h3u)
set F3u=r3u
call DestroyBoolExpr(F3u)
endif
set MMu=null
set w3u=null
set r3u=null
set s3u=null
set t3u=null
set i3u=null
set S3u=null
set c3u=null
set o3u=null
set O3u=null
set l3u=null
set b3u=null
set y3u=null
set p3u=null
set e3u=null
set q3u=null
set n3u=null
set f3u=null
set Y3u=null
set g3u=null
set h3u=null
set F3u=null
set k3u=null
set x3u=null
endfunction
function m4p takes nothing returns boolean
local trigger F4p
local playerunitevent k4p
local trigger j4p
local playerunitevent x4p
local integer v4p
set gG=CreateTrigger()
set hG=null
set F4p=gG
set k4p=EVENT_PLAYER_UNIT_ATTACKED
set j4p=F4p
set x4p=k4p
set v4p=0
loop
call TriggerRegisterPlayerUnitEvent(j4p,Player(v4p),x4p,null)
set v4p=v4p+1
exitwhen v4p==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(gG,Aww)
set F4p=null
set k4p=null
set j4p=null
set x4p=null
return true
endfunction
function m4r takes nothing returns boolean
local unit x4r
local boolean v4r
if IsPlayerAlly(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(LoadUnitHandle(qu,$556E6974,$556E6974)))==false and GetUnitAbilityLevel(GetFilterUnit(),$416C6F63)==0 and GetUnitAbilityLevel(GetFilterUnit(),$4176756C)==0 and GetUnitAbilityLevel(GetFilterUnit(),$42637963)==0 and IsUnitType(GetFilterUnit(),UNIT_TYPE_FLYING)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==false then
set x4r=GetFilterUnit()
set v4r=(GetWidgetLife(x4r)<.405 or IsUnitType(x4r,UNIT_TYPE_DEAD))==false
else
set v4r=false
endif
set x4r=null
return v4r
endfunction
function m8r takes nothing returns nothing
local integer q8r=GetSpellAbilityId()
local unit a8r
local unit n8r
local unit d8r
local unit f8r
local unit R8r
local unit T8r
local unit Y8r
local real G8r
local unit g8r
local integer h8r
local unit F8r
local string k8r
local widget j8r
local player x8r
local real v8r
if q8r==$4132364E then
set a8r=GetSpellAbilityUnit()
set n8r=GetSpellTargetUnit()
set f8r=a8r
set x8r=GetOwningPlayer(f8r)
set R8r=a8r
set v8r=GetUnitX(R8r)
set T8r=a8r
set d8r=CreateUnit(x8r,$75303030,v8r,GetUnitY(T8r),0.)
set Y8r=d8r
set G8r=7.
call UnitApplyTimedLife(Y8r,$42544C46,G8r)
set g8r=d8r
set h8r=$4132364F
call UnitAddAbility(g8r,h8r)
set F8r=d8r
set k8r="magicleash"
set j8r=n8r
call IssueTargetOrder(F8r,k8r,j8r)
endif
set a8r=null
set n8r=null
set d8r=null
set f8r=null
set R8r=null
set T8r=null
set Y8r=null
set g8r=null
set F8r=null
set j8r=null
set x8r=null
endfunction
function m8w takes nothing returns boolean
local playerunitevent T8w
local code Y8w
local playerunitevent G8w
local code g8w
local playerunitevent h8w
local code F8w
local playerunitevent k8w
local code j8w
local playerunitevent x8w
local code v8w
set MY=null
set wG=null
set T8w=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Y8w=qww_3092
call emO(T8w,null,Y8w,null)
set G8w=EVENT_PLAYER_UNIT_DEATH
set g8w=aww_1918
call emO(G8w,null,g8w,null)
set h8w=EVENT_PLAYER_UNIT_SPELL_EFFECT
set F8w=nww_2889
call emO(h8w,null,F8w,null)
set k8w=EVENT_PLAYER_UNIT_SPELL_CAST
set j8w=dww_2212
call emO(k8w,null,j8w,null)
set x8w=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set v8w=fww_2348
call emO(x8w,null,v8w,null)
set T8w=null
set G8w=null
set h8w=null
set k8w=null
set x8w=null
return true
endfunction
function m9u takes nothing returns boolean
return true
endfunction
function mAo takes nothing returns nothing
local unit tAo=GetKillingUnit()
local unit bAo=tAo
local integer iAo=GetPlayerTechCount(GetOwningPlayer(bAo),$524D306B,true)
local unit yAo=tAo
local unit SAo
local group cAo
local filterfunc oAo
local unit OAo
local group lAo
local unit pAo
local unit eAo
local unit qAo
local unit aAo
local unit nAo
local group dAo
local group fAo
local unit RAo
local unit TAo
local unit YAo
local group GAo
local boolexpr gAo
local boolean hAo
local boolean FAo
local boolean kAo
local group jAo
local real xAo
local real vAo
if GetUnitTypeId(yAo)==$78303039 then
set hAo=true
else
set pAo=tAo
set hAo=GetUnitTypeId(pAo)==$78303061
endif
if hAo then
set FAo=true
else
set eAo=tAo
set FAo=GetUnitTypeId(eAo)==$78303062
endif
if FAo then
set kAo=true
else
set qAo=tAo
set kAo=GetUnitTypeId(qAo)==$78303063
endif
if kAo then
if iAo>0 then
set SAo=GetDyingUnit()
set cAo=CreateGroup()
set oAo=Filter(A0w)
set jAo=cAo
set aAo=SAo
set xAo=GetUnitX(aAo)
set nAo=SAo
call GroupEnumUnitsInRange(jAo,xAo,GetUnitY(nAo),150.,oAo)
set lAo=cAo
loop
set dAo=lAo
exitwhen not (FirstOfGroup(dAo)!=null)
set fAo=lAo
set RAo=FirstOfGroup(fAo)
call GroupRemoveUnit(fAo,RAo)
set OAo=RAo
call UnitDamageTarget(tAo,OAo,I2R(20+5*iAo),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set TAo=SAo
set vAo=GetUnitX(TAo)
set YAo=SAo
call DestroyEffect(AddSpecialEffect("ArcaneExplosion.mdl",vAo,GetUnitY(YAo)))
set GAo=cAo
call DestroyGroup(GAo)
set gAo=oAo
call DestroyBoolExpr(gAo)
endif
endif
set tAo=null
set SAo=null
set cAo=null
set oAo=null
set OAo=null
set lAo=null
set bAo=null
set yAo=null
set pAo=null
set eAo=null
set qAo=null
set aAo=null
set nAo=null
set dAo=null
set fAo=null
set RAo=null
set TAo=null
set YAo=null
set GAo=null
set gAo=null
set jAo=null
endfunction
function mBl takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1673")
endfunction
function mFu takes nothing returns boolean
local unit fFu=GetFilterUnit()
local unit RFu=fFu
local unit TFu
local integer YFu
local unit GFu
local integer gFu
local unit hFu
local integer FFu
local boolean kFu
local boolean jFu
local boolean xFu
local boolean vFu
if UnitAlive(RFu) and LoadUnitHandle(qu,$556E6974,$556E6974)!=fFu and IsPlayerAlly(GetOwningPlayer(LoadUnitHandle(qu,$556E6974,$556E6974)),GetOwningPlayer(fFu))==true then
set TFu=fFu
set YFu=$416C6F63
set kFu=GetUnitAbilityLevel(TFu,YFu)==0
else
set kFu=false
endif
if kFu then
set GFu=fFu
set gFu=$4176756C
set jFu=GetUnitAbilityLevel(GFu,gFu)==0
else
set jFu=false
endif
if jFu then
set hFu=fFu
set FFu=$42637963
set xFu=GetUnitAbilityLevel(hFu,FFu)==0
else
set xFu=false
endif
set vFu=xFu and GetUnitState(fFu,UNIT_STATE_LIFE)<GetUnitState(GetFilterUnit(),UNIT_STATE_MAX_LIFE)*.85 and IsUnitType(fFu,UNIT_TYPE_STRUCTURE)==false
set fFu=null
set RFu=null
set TFu=null
set GFu=null
set hFu=null
return vFu
endfunction
function mHw takes nothing returns boolean
local unit jHw=GetTriggerUnit()
local integer xHw=0
local integer vHw=0
loop
if UnitItemInSlot(jHw,xHw)!=null then
set vHw=vHw+1
endif
set xHw=xHw+1
exitwhen xHw>=bj_MAX_INVENTORY
endloop
set jHw=null
return vHw>1 and GetItemLevel(GetManipulatedItem())==3
endfunction
function mHy takes nothing returns boolean
return true
endfunction
function mNO takes nothing returns nothing
local unit fNO=GetEnteringUnit()
local unit RNO=fNO
local unittype TNO=UNIT_TYPE_HERO
local player YNO
local unit GNO
local integer gNO
local unit hNO
local integer FNO
local unit kNO
local integer jNO
local unit xNO
local integer vNO
if IsUnitType(RNO,TNO) then
set YNO=CT
if wY[GetPlayerId(YNO)]==true then
set GNO=fNO
set gNO=$41313831
if GetUnitAbilityLevel(GNO,gNO)==0 then
set hNO=fNO
set FNO=$41313831
call UnitAddAbility(hNO,FNO)
endif
else
set kNO=fNO
set jNO=$41313831
if GetUnitAbilityLevel(kNO,jNO)==1 then
set xNO=fNO
set vNO=$41313831
call UnitRemoveAbility(xNO,vNO)
endif
endif
endif
set fNO=null
set RNO=null
set TNO=null
set YNO=null
set GNO=null
set hNO=null
set kNO=null
set xNO=null
endfunction
function mPi takes nothing returns boolean
local unit GPi=GetFilterUnit()
local unit gPi=GPi
local unit hPi
local player FPi
local unit kPi
local unittype jPi
local boolean xPi
local boolean vPi
if UnitAlive(gPi)==true then
set hPi=GPi
set FPi=xl
set xPi=IsUnitEnemy(hPi,FPi)==true
else
set xPi=false
endif
if xPi then
set kPi=GPi
set jPi=UNIT_TYPE_STRUCTURE
set vPi=IsUnitType(kPi,jPi)==false
else
set vPi=false
endif
set GPi=null
set gPi=null
set hPi=null
set FPi=null
set kPi=null
set jPi=null
return vPi
endfunction
function mRr takes nothing returns boolean
return true
endfunction
function kdr takes string Jnr returns nothing
local unit Knr
local trigger Lnr
local integer Xnr
local group Cnr
local filterfunc Vnr
local unit Bnr
local group Nnr
local integer Mnr
local unit wdr
local integer udr
local unit rdr
local integer sdr
local unit tdr
local unit idr
local unit Sdr
local string cdr
local group odr
local group Odr
local unit ldr
local integer bdr
local effect ydr
local widget pdr
local string edr
local string qdr
local group adr
local boolexpr ndr
local string ddr
local integer fdr
local real Rdr
local integer Tdr
local string Ydr
local group Gdr
local real gdr
local unit hdr
local unit Fdr
set aW[qW]=Jnr
set qW=qW+1
set Knr=GetTriggerUnit()
set wdr=Knr
set udr=$41304B44
if GetUnitAbilityLevel(wdr,udr)>0 then
if GetRandomInt(1,100)<=15 then
set Lnr=GetTriggeringTrigger()
set rdr=Knr
set sdr=$41304B44
set Xnr=GetUnitAbilityLevel(rdr,sdr)
set Cnr=CreateGroup()
set Vnr=Filter(Bsw)
set Gdr=Cnr
set tdr=Knr
set gdr=GetUnitX(tdr)
set idr=Knr
call GroupEnumUnitsInRange(Gdr,gdr,GetUnitY(idr),350.,Vnr)
set Sdr=Knr
set cdr="spin"
call SetUnitAnimation(Sdr,cdr)
set Nnr=Cnr
loop
set odr=Nnr
exitwhen not (FirstOfGroup(odr)!=null)
set Odr=Nnr
set ldr=FirstOfGroup(Odr)
call GroupRemoveUnit(Odr,ldr)
set Bnr=ldr
set hdr=Knr
set Fdr=Bnr
set bdr=80+10*Xnr
call UnitDamageTarget(hdr,Fdr,bdr*1.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
set pdr=Bnr
set edr="Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
set qdr="origin"
set ydr=AddSpecialEffectTarget(edr,pdr,qdr)
call DestroyEffect(ydr)
endloop
set adr=Cnr
call DestroyGroup(adr)
set ndr=Vnr
call DestroyBoolExpr(ndr)
set ddr="when calling alloc_CallbackSingle_doAfter_Zalashyr in Zalashyr, line 281"
set aW[qW]=ddr
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set fdr=fF
set RF[fdr]=768
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Zalashyr.","when calling error in Zalashyr, line 281")
set fdr=0
endif
else
set dF=dF-1
set fdr=nF[dF]
set RF[fdr]=768
endif
set qW=qW-1
set Mnr=fdr
set yW[Mnr]=Lnr
set Rdr=2.
set Tdr=Mnr
set Ydr="when calling doAfter in Zalashyr, line 281"
set aW[qW]=Ydr
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Rdr,Tdr,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set Knr=null
set Lnr=null
set Cnr=null
set Vnr=null
set Bnr=null
set Nnr=null
set wdr=null
set rdr=null
set tdr=null
set idr=null
set Sdr=null
set odr=null
set Odr=null
set ldr=null
set ydr=null
set pdr=null
set adr=null
set ndr=null
set Gdr=null
set hdr=null
set Fdr=null
endfunction
function mUi takes nothing returns nothing
set qW=0
call kdr("via function reference Zalashyr, line 288")
endfunction
function mVp takes nothing returns boolean
local playerunitevent xVp=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code vVp=Fuw
call emO(xVp,null,vVp,null)
set xVp=null
return true
endfunction
function mVr takes nothing returns boolean
local unit RVr=GetSpellAbilityUnit()
local unit TVr=RVr
local unit YVr
local unit GVr
local unit gVr
local unit hVr
local unittype FVr
local boolean kVr
local boolean jVr
local boolean xVr
local boolean vVr
if GetOwningPlayer(TVr)==du then
set kVr=true
else
set YVr=RVr
set kVr=GetOwningPlayer(YVr)==nu
endif
if kVr then
set jVr=true
else
set GVr=RVr
set jVr=GetOwningPlayer(GVr)==fu
endif
if jVr then
set xVr=true
else
set gVr=RVr
set xVr=GetOwningPlayer(gVr)==Ru
endif
if xVr then
set hVr=RVr
set FVr=UNIT_TYPE_HERO
set vVr=IsUnitType(hVr,FVr)==true
else
set vVr=false
endif
set RVr=null
set TVr=null
set YVr=null
set GVr=null
set gVr=null
set hVr=null
set FVr=null
return vVr
endfunction
function mXt takes nothing returns boolean
return true
endfunction
function mau takes nothing returns boolean
return true
endfunction
function mbO takes nothing returns boolean
return true
endfunction
function rdi takes unit Vni returns nothing
local unit wdi=Vni
local integer Bni=GetUnitTypeId(wdi)
local player Nni
local integer Mni
local unit udi
if Bni==$6E30324F then
set udi=Vni
set Nni=GetOwningPlayer(udi)
set Mni=GetPlayerId(Nni)
call RemoveUnitFromStock(O[Mni],D[Mni])
call RemoveUnitFromStock(b[Mni],D[Mni])
call RemoveUnitFromStock(l[Mni],D[Mni])
set D[Mni]=$6E6E7472
call AddUnitToStock(O[Mni],D[Mni],1,3)
call AddUnitToStock(b[Mni],D[Mni],1,3)
call AddUnitToStock(l[Mni],D[Mni],1,3)
endif
set Nni=null
set wdi=null
set udi=null
endfunction
function mbS takes nothing returns nothing
call rdi(GetTriggerUnit())
endfunction
function mco takes nothing returns nothing
local unit Rco=GetEnteringUnit()
local unit gco=Rco
local integer Tco=GetUnitTypeId(gco)
local unit hco=Rco
local player Yco=GetOwningPlayer(hco)
local integer Gco
local unit Fco
local integer kco
local unit jco
local integer xco
local integer vco
if Tco==$6E636867 or Tco==$6F776172 and GetPlayerTechCount(Yco,$52303138,true)>0 then
set Gco=GetPlayerTechCount(Yco,$52303138,true)
set Fco=Rco
set kco=$41303155
call UnitAddAbility(Fco,kco)
set jco=Rco
set xco=$41303155
set vco=Gco
call SetUnitAbilityLevel(jco,xco,vco)
endif
set Rco=null
set Yco=null
set gco=null
set hco=null
set Fco=null
set jco=null
endfunction
function mhp takes nothing returns nothing
local unit nhp=GetEnteringUnit()
local unit Thp=nhp
local integer dhp=GetUnitTypeId(Thp)
local unit Yhp=nhp
local player fhp=GetOwningPlayer(Yhp)
local integer Rhp
local unit Ghp
local integer ghp
local unit hhp
local integer Fhp
local unit khp
local integer jhp
local unit xhp
local integer vhp
if dhp==$6E66656C or dhp==$6E70666C or dhp==$6E303358 and GetPlayerTechCount(fhp,$5230305A,true)>0 then
set Rhp=GetPlayerTechCount(fhp,$5230305A,true)
if Rhp==1 then
set Ghp=nhp
set ghp=$41303554
call UnitAddAbility(Ghp,ghp)
elseif Rhp==2 then
set hhp=nhp
set Fhp=$4130314C
call UnitAddAbility(hhp,Fhp)
elseif Rhp==3 then
set khp=nhp
set jhp=$41303555
call UnitAddAbility(khp,jhp)
else
set xhp=nhp
set vhp=$41303959
call UnitAddAbility(xhp,vhp)
endif
endif
set nhp=null
set fhp=null
set Thp=null
set Yhp=null
set Ghp=null
set hhp=null
set khp=null
set xhp=null
endfunction
function mlS takes nothing returns boolean
return true
endfunction
function fmb takes nothing returns nothing
local real hxb
local boolean Fxb
local player kxb
local camerafield jxb
local real xxb
local real vxb
local player mxb
local camerafield Qxb
local real Wxb
local real Exb
local player Zxb
local camerafield Uxb
local real Ixb
local real Pxb
local player Axb
local camerafield Dxb
local real Hxb
local real Jxb
local player Kxb
local camerafield Lxb
local real Xxb
local real Cxb
local player Vxb
local camerafield Bxb
local real Nxb
local real Mxb
local player wvb
local camerafield uvb
local real rvb
local real svb
local player tvb
local camerafield ivb
local real Svb
local real cvb
local trigger ovb
local real Ovb
local trigger lvb
local rect bvb
local region yvb
local trigger pvb
local rect evb
local region qvb
local trigger avb
local rect nvb
local region dvb
local trigger fvb
local rect Rvb
local region Tvb
local trigger Yvb
local rect Gvb
local region gvb
local trigger hvb
local rect Fvb
local region kvb
local trigger jvb
local rect xvb
local region vvb
local trigger mvb
local rect Qvb
local region Wvb
local trigger Evb
local rect Zvb
local region Uvb
local trigger Ivb
local rect Pvb
local region Avb
local trigger Dvb
local rect Hvb
local region Jvb
local trigger Kvb
local rect Lvb
local region Xvb
local trigger Cvb
local rect Vvb
local region Bvb
local trigger Nvb
local rect Mvb
local region wmb
local trigger umb
local rect rmb
local region smb
local trigger tmb
local rect imb
local region Smb
local trigger cmb
local playerunitevent omb
local integer Omb
local trigger lmb
local playerunitevent bmb
local integer ymb
local trigger pmb
local playerunitevent emb
local integer qmb
local trigger amb
local playerunitevent nmb
local integer dmb
set Ew[0]=false
set Ew[1]=false
set Ew[2]=false
set Ew[3]=false
set Tw[0]=8
set Tw[1]=8
set Tw[2]=8
set Tw[3]=8
set mw[1]=bo
set mw[2]=yo
set mw[3]=po
set mw[4]=Yo
set mw[5]=To
set mw[6]=Ro
set mw[7]=ao
set mw[8]=qo
set mw[9]=eo
set mw[10]=no
set mw[11]=do
set mw[12]=fo
set mw[13]=fc
set mw[14]=Fc
set mw[15]=xc
set mw[16]=Jc
set mw[17]=Nc
set mw[18]=uo
set mw[19]=Bc
set mw[20]=Uc
set mw[21]=hc
set mw[22]=Zc
set mw[23]=Ac
set mw[24]=oo
set mw[25]=Rc
set mw[26]=kc
set mw[27]=vc
set mw[28]=Kc
set mw[29]=Mc
set mw[30]=ro
set mw[31]=Vc
set mw[32]=Ic
set mw[33]=gc
set mw[34]=Ec
set mw[35]=Dc
set mw[36]=co
set mw[37]=Tc
set mw[38]=jc
set mw[39]=mc
set mw[40]=Lc
set mw[41]=wo
set mw[42]=so
set mw[43]=Cc
set mw[44]=Pc
set mw[45]=Gc
set mw[46]=Wc
set mw[47]=Hc
set mw[48]=So
set mw[49]=Xc
set mw[50]=io
set mw[51]=Yc
set mw[52]=Qc
set mw[53]=qc
set mw[54]=dc
set mw[55]=ac
set mw[56]=nc
set mw[57]=Ys
set mw[58]=hs
set mw[59]=js
set mw[60]=ms
set mw[61]=yc
set Qw[1]=GetRectCenterX(mw[1])
set Qw[2]=GetRectCenterX(mw[2])
set Qw[3]=GetRectCenterX(mw[3])
set Qw[4]=GetRectCenterX(mw[4])
set Qw[5]=GetRectCenterX(mw[5])
set Qw[6]=GetRectCenterX(mw[6])
set Qw[7]=GetRectCenterX(mw[7])
set Qw[8]=GetRectCenterX(mw[8])
set Qw[9]=GetRectCenterX(mw[9])
set Qw[10]=GetRectCenterX(mw[10])
set Qw[11]=GetRectCenterX(mw[11])
set Qw[12]=GetRectCenterX(mw[12])
set Qw[13]=GetRectCenterX(mw[13])
set Qw[14]=GetRectCenterX(mw[14])
set Qw[15]=GetRectCenterX(mw[15])
set Qw[16]=GetRectCenterX(mw[16])
set Qw[17]=GetRectCenterX(mw[17])
set Qw[18]=GetRectCenterX(mw[18])
set Qw[19]=GetRectCenterX(mw[19])
set Qw[20]=GetRectCenterX(mw[20])
set Qw[21]=GetRectCenterX(mw[21])
set Qw[22]=GetRectCenterX(mw[22])
set Qw[23]=GetRectCenterX(mw[23])
set Qw[24]=GetRectCenterX(mw[24])
set Qw[25]=GetRectCenterX(mw[25])
set Qw[26]=GetRectCenterX(mw[26])
set Qw[27]=GetRectCenterX(mw[27])
set Qw[28]=GetRectCenterX(mw[28])
set Qw[29]=GetRectCenterX(mw[29])
set Qw[30]=GetRectCenterX(mw[30])
set Qw[31]=GetRectCenterX(mw[31])
set Qw[32]=GetRectCenterX(mw[32])
set Qw[33]=GetRectCenterX(mw[33])
set Qw[34]=GetRectCenterX(mw[34])
set Qw[35]=GetRectCenterX(mw[35])
set Qw[36]=GetRectCenterX(mw[36])
set Qw[37]=GetRectCenterX(mw[37])
set Qw[38]=GetRectCenterX(mw[38])
set Qw[39]=GetRectCenterX(mw[39])
set Qw[40]=GetRectCenterX(mw[40])
set Qw[41]=GetRectCenterX(mw[41])
set Qw[42]=GetRectCenterX(mw[42])
set Qw[43]=GetRectCenterX(mw[43])
set Qw[44]=GetRectCenterX(mw[44])
set Qw[45]=GetRectCenterX(mw[45])
set Qw[46]=GetRectCenterX(mw[46])
set Qw[47]=GetRectCenterX(mw[47])
set Qw[48]=GetRectCenterX(mw[48])
set Qw[49]=GetRectCenterX(mw[49])
set Qw[50]=GetRectCenterX(mw[50])
set Qw[51]=GetRectCenterX(mw[51])
set Qw[52]=GetRectCenterX(mw[52])
set Qw[53]=GetRectCenterX(mw[53])
set Qw[54]=GetRectCenterX(mw[54])
set Qw[55]=GetRectCenterX(mw[55])
set Qw[56]=GetRectCenterX(mw[56])
set Qw[57]=GetRectCenterX(mw[57])
set Qw[58]=GetRectCenterX(mw[58])
set Qw[59]=GetRectCenterX(mw[59])
set Qw[60]=GetRectCenterX(mw[60])
set Qw[61]=GetRectCenterX(mw[61])
set Ww[1]=GetRectCenterY(mw[1])
set Ww[2]=GetRectCenterY(mw[2])
set Ww[3]=GetRectCenterY(mw[3])
set Ww[4]=GetRectCenterY(mw[4])
set Ww[5]=GetRectCenterY(mw[5])
set Ww[6]=GetRectCenterY(mw[6])
set Ww[7]=GetRectCenterY(mw[7])
set Ww[8]=GetRectCenterY(mw[8])
set Ww[9]=GetRectCenterY(mw[9])
set Ww[10]=GetRectCenterY(mw[10])
set Ww[11]=GetRectCenterY(mw[11])
set Ww[12]=GetRectCenterY(mw[12])
set Ww[13]=GetRectCenterY(mw[13])
set Ww[14]=GetRectCenterY(mw[14])
set Ww[15]=GetRectCenterY(mw[15])
set Ww[16]=GetRectCenterY(mw[16])
set Ww[17]=GetRectCenterY(mw[17])
set Ww[18]=GetRectCenterY(mw[18])
set Ww[19]=GetRectCenterY(mw[19])
set Ww[20]=GetRectCenterY(mw[20])
set Ww[21]=GetRectCenterY(mw[21])
set Ww[22]=GetRectCenterY(mw[22])
set Ww[23]=GetRectCenterY(mw[23])
set Ww[24]=GetRectCenterY(mw[24])
set Ww[25]=GetRectCenterY(mw[25])
set Ww[26]=GetRectCenterY(mw[26])
set Ww[27]=GetRectCenterY(mw[27])
set Ww[28]=GetRectCenterY(mw[28])
set Ww[29]=GetRectCenterY(mw[29])
set Ww[30]=GetRectCenterY(mw[30])
set Ww[31]=GetRectCenterY(mw[31])
set Ww[32]=GetRectCenterY(mw[32])
set Ww[33]=GetRectCenterY(mw[33])
set Ww[34]=GetRectCenterY(mw[34])
set Ww[35]=GetRectCenterY(mw[35])
set Ww[36]=GetRectCenterY(mw[36])
set Ww[37]=GetRectCenterY(mw[37])
set Ww[38]=GetRectCenterY(mw[38])
set Ww[39]=GetRectCenterY(mw[39])
set Ww[40]=GetRectCenterY(mw[40])
set Ww[41]=GetRectCenterY(mw[41])
set Ww[42]=GetRectCenterY(mw[42])
set Ww[43]=GetRectCenterY(mw[43])
set Ww[44]=GetRectCenterY(mw[44])
set Ww[45]=GetRectCenterY(mw[45])
set Ww[46]=GetRectCenterY(mw[46])
set Ww[47]=GetRectCenterY(mw[47])
set Ww[48]=GetRectCenterY(mw[48])
set Ww[49]=GetRectCenterY(mw[49])
set Ww[50]=GetRectCenterY(mw[50])
set Ww[51]=GetRectCenterY(mw[51])
set Ww[52]=GetRectCenterY(mw[52])
set Ww[53]=GetRectCenterY(mw[53])
set Ww[54]=GetRectCenterY(mw[54])
set Ww[55]=GetRectCenterY(mw[55])
set Ww[56]=GetRectCenterY(mw[56])
set Ww[57]=GetRectCenterY(mw[57])
set Ww[58]=GetRectCenterY(mw[58])
set Ww[59]=GetRectCenterY(mw[59])
set Ww[60]=GetRectCenterY(mw[60])
set Ww[61]=GetRectCenterY(mw[61])
set os[1]=$49303048
set os[2]=$49303049
set os[3]=$4930304A
set os[4]=$4930304B
set hxb=12.
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,hxb)
set Fxb=false
call SuspendTimeOfDay(not Fxb)
call SetPlayerAllianceStateBJ(Player(0),Player(4),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(4),Player(0),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(1),Player(5),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(5),Player(1),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(2),Player(6),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(6),Player(2),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(3),Player(7),bj_ALLIANCE_ALLIED_VISION)
call SetPlayerAllianceStateBJ(Player(7),Player(3),bj_ALLIANCE_ALLIED_VISION)
set kxb=Player(0)
set jxb=CAMERA_FIELD_TARGET_DISTANCE
set xxb=2900.
set vxb=0.
if GetLocalPlayer()==kxb then
call SetCameraField(jxb,xxb,vxb)
endif
set mxb=Player(1)
set Qxb=CAMERA_FIELD_TARGET_DISTANCE
set Wxb=2900.
set Exb=0.
if GetLocalPlayer()==mxb then
call SetCameraField(Qxb,Wxb,Exb)
endif
set Zxb=Player(2)
set Uxb=CAMERA_FIELD_TARGET_DISTANCE
set Ixb=2900.
set Pxb=0.
if GetLocalPlayer()==Zxb then
call SetCameraField(Uxb,Ixb,Pxb)
endif
set Axb=Player(3)
set Dxb=CAMERA_FIELD_TARGET_DISTANCE
set Hxb=2900.
set Jxb=0.
if GetLocalPlayer()==Axb then
call SetCameraField(Dxb,Hxb,Jxb)
endif
set Kxb=Player(8)
set Lxb=CAMERA_FIELD_TARGET_DISTANCE
set Xxb=3500.
set Cxb=0.
if GetLocalPlayer()==Kxb then
call SetCameraField(Lxb,Xxb,Cxb)
endif
set Vxb=Player(9)
set Bxb=CAMERA_FIELD_TARGET_DISTANCE
set Nxb=3500.
set Mxb=0.
if GetLocalPlayer()==Vxb then
call SetCameraField(Bxb,Nxb,Mxb)
endif
set wvb=Player(10)
set uvb=CAMERA_FIELD_TARGET_DISTANCE
set rvb=3500.
set svb=0.
if GetLocalPlayer()==wvb then
call SetCameraField(uvb,rvb,svb)
endif
set tvb=Player(11)
set ivb=CAMERA_FIELD_TARGET_DISTANCE
set Svb=3500.
set cvb=0.
if GetLocalPlayer()==tvb then
call SetCameraField(ivb,Svb,cvb)
endif
call FogModifierStart(CreateFogModifierRect(Player(8),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
call FogModifierStart(CreateFogModifierRect(Player(9),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
call FogModifierStart(CreateFogModifierRect(Player(10),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
call FogModifierStart(CreateFogModifierRect(Player(11),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
call SetGameSpeed(MAP_SPEED_FAST)
call SetMapFlag(MAP_LOCK_SPEED,true)
call SetPlayerOnScoreScreen(Player(4),false)
call SetPlayerOnScoreScreen(Player(5),false)
call SetPlayerOnScoreScreen(Player(6),false)
call SetPlayerOnScoreScreen(Player(7),false)
call SetPlayerState(Player(0),PLAYER_STATE_RESOURCE_FOOD_CAP,60)
call SetPlayerState(Player(1),PLAYER_STATE_RESOURCE_FOOD_CAP,60)
call SetPlayerState(Player(2),PLAYER_STATE_RESOURCE_FOOD_CAP,60)
call SetPlayerState(Player(3),PLAYER_STATE_RESOURCE_FOOD_CAP,60)
set Go=CreateTrigger()
set ovb=Go
set Ovb=5.
call TriggerRegisterTimerEvent(ovb,Ovb,true)
call TriggerAddAction(Go,BW)
set go=CreateTrigger()
set lvb=go
set bvb=VS
set yvb=CreateRegion()
call RegionAddRect(yvb,bvb)
call TriggerRegisterEnterRegion(lvb,yvb,null)
call TriggerAddCondition(go,Condition(NW))
call TriggerAddAction(go,MW)
set ho=CreateTrigger()
set pvb=ho
set evb=tc
set qvb=CreateRegion()
call RegionAddRect(qvb,evb)
call TriggerRegisterEnterRegion(pvb,qvb,null)
call TriggerAddCondition(ho,Condition(wE))
call TriggerAddAction(ho,uE)
set Fo=CreateTrigger()
set avb=Fo
set nvb=ic
set dvb=CreateRegion()
call RegionAddRect(dvb,nvb)
call TriggerRegisterEnterRegion(avb,dvb,null)
call TriggerAddCondition(Fo,Condition(rE))
call TriggerAddAction(Fo,sE)
set ko=CreateTrigger()
set fvb=ko
set Rvb=Sc
set Tvb=CreateRegion()
call RegionAddRect(Tvb,Rvb)
call TriggerRegisterEnterRegion(fvb,Tvb,null)
call TriggerAddCondition(ko,Condition(tE))
call TriggerAddAction(ko,iE)
set jo=CreateTrigger()
set Yvb=jo
set Gvb=cc
set gvb=CreateRegion()
call RegionAddRect(gvb,Gvb)
call TriggerRegisterEnterRegion(Yvb,gvb,null)
call TriggerAddCondition(jo,Condition(SE))
call TriggerAddAction(jo,cE)
set xo=CreateTrigger()
set hvb=xo
set Fvb=oc
set kvb=CreateRegion()
call RegionAddRect(kvb,Fvb)
call TriggerRegisterEnterRegion(hvb,kvb,null)
call TriggerAddCondition(xo,Condition(oE))
call TriggerAddAction(xo,OE)
set vo=CreateTrigger()
set jvb=vo
set xvb=Oc
set vvb=CreateRegion()
call RegionAddRect(vvb,xvb)
call TriggerRegisterEnterRegion(jvb,vvb,null)
call TriggerAddCondition(vo,Condition(lE))
call TriggerAddAction(vo,bE)
set mo=CreateTrigger()
set mvb=mo
set Qvb=lc
set Wvb=CreateRegion()
call RegionAddRect(Wvb,Qvb)
call TriggerRegisterEnterRegion(mvb,Wvb,null)
call TriggerAddCondition(mo,Condition(yE))
call TriggerAddAction(mo,pE)
set Qo=CreateTrigger()
set Evb=Qo
set Zvb=bc
set Uvb=CreateRegion()
call RegionAddRect(Uvb,Zvb)
call TriggerRegisterEnterRegion(Evb,Uvb,null)
call TriggerAddCondition(Qo,Condition(eE))
call TriggerAddAction(Qo,qE)
set Wo=CreateTrigger()
set Ivb=Wo
set Pvb=BS
set Avb=CreateRegion()
call RegionAddRect(Avb,Pvb)
call TriggerRegisterEnterRegion(Ivb,Avb,null)
call TriggerAddCondition(Wo,Condition(aE))
call TriggerAddAction(Wo,nE)
set Eo=CreateTrigger()
set Dvb=Eo
set Hvb=NS
set Jvb=CreateRegion()
call RegionAddRect(Jvb,Hvb)
call TriggerRegisterEnterRegion(Dvb,Jvb,null)
call TriggerAddCondition(Eo,Condition(dE))
call TriggerAddAction(Eo,fE)
set Zo=CreateTrigger()
set Kvb=Zo
set Lvb=MS
set Xvb=CreateRegion()
call RegionAddRect(Xvb,Lvb)
call TriggerRegisterEnterRegion(Kvb,Xvb,null)
call TriggerAddCondition(Zo,Condition(RE))
call TriggerAddAction(Zo,TE)
set Uo=CreateTrigger()
set Cvb=Uo
set Vvb=wc
set Bvb=CreateRegion()
call RegionAddRect(Bvb,Vvb)
call TriggerRegisterEnterRegion(Cvb,Bvb,null)
call TriggerAddCondition(Uo,Condition(YE))
call TriggerAddAction(Uo,GE)
set Io=CreateTrigger()
set Nvb=Io
set Mvb=uc
set wmb=CreateRegion()
call RegionAddRect(wmb,Mvb)
call TriggerRegisterEnterRegion(Nvb,wmb,null)
call TriggerAddCondition(Io,Condition(gE))
call TriggerAddAction(Io,hE)
set Po=CreateTrigger()
set umb=Po
set rmb=rc
set smb=CreateRegion()
call RegionAddRect(smb,rmb)
call TriggerRegisterEnterRegion(umb,smb,null)
call TriggerAddCondition(Po,Condition(FE))
call TriggerAddAction(Po,kE)
set Ao=CreateTrigger()
set tmb=Ao
set imb=sc
set Smb=CreateRegion()
call RegionAddRect(Smb,imb)
call TriggerRegisterEnterRegion(tmb,Smb,null)
call TriggerAddCondition(Ao,Condition(jE))
call TriggerAddAction(Ao,xE)
set Do=CreateTrigger()
set cmb=Do
set omb=EVENT_PLAYER_UNIT_PICKUP_ITEM
set Omb=0
loop
call TriggerRegisterPlayerUnitEvent(cmb,Player(Omb),omb,null)
set Omb=Omb+1
exitwhen Omb==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Do,Condition(vE))
call TriggerAddAction(Do,mE)
set Ho=CreateTrigger()
set lmb=Ho
set bmb=EVENT_PLAYER_UNIT_PICKUP_ITEM
set ymb=0
loop
call TriggerRegisterPlayerUnitEvent(lmb,Player(ymb),bmb,null)
set ymb=ymb+1
exitwhen ymb==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ho,Condition(QE))
call TriggerAddAction(Ho,WE)
set Jo=CreateTrigger()
set pmb=Jo
set emb=EVENT_PLAYER_UNIT_PICKUP_ITEM
set qmb=0
loop
call TriggerRegisterPlayerUnitEvent(pmb,Player(qmb),emb,null)
set qmb=qmb+1
exitwhen qmb==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jo,Condition(EE))
call TriggerAddAction(Jo,ZE)
set Ko=CreateTrigger()
set amb=Ko
set nmb=EVENT_PLAYER_UNIT_PICKUP_ITEM
set dmb=0
loop
call TriggerRegisterPlayerUnitEvent(amb,Player(dmb),nmb,null)
set dmb=dmb+1
exitwhen dmb==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ko,Condition(UE))
call TriggerAddAction(Ko,IE)
set kxb=null
set jxb=null
set mxb=null
set Qxb=null
set Zxb=null
set Uxb=null
set Axb=null
set Dxb=null
set Kxb=null
set Lxb=null
set Vxb=null
set Bxb=null
set wvb=null
set uvb=null
set tvb=null
set ivb=null
set ovb=null
set lvb=null
set bvb=null
set yvb=null
set pvb=null
set evb=null
set qvb=null
set avb=null
set nvb=null
set dvb=null
set fvb=null
set Rvb=null
set Tvb=null
set Yvb=null
set Gvb=null
set gvb=null
set hvb=null
set Fvb=null
set kvb=null
set jvb=null
set xvb=null
set vvb=null
set mvb=null
set Qvb=null
set Wvb=null
set Evb=null
set Zvb=null
set Uvb=null
set Ivb=null
set Pvb=null
set Avb=null
set Dvb=null
set Hvb=null
set Jvb=null
set Kvb=null
set Lvb=null
set Xvb=null
set Cvb=null
set Vvb=null
set Bvb=null
set Nvb=null
set Mvb=null
set wmb=null
set umb=null
set rmb=null
set smb=null
set tmb=null
set imb=null
set Smb=null
set cmb=null
set omb=null
set lmb=null
set bmb=null
set pmb=null
set emb=null
set amb=null
set nmb=null
endfunction
function j7w takes integer Z6w,player U6w,integer I6w,string P6w returns nothing
local player A6w
local player D6w
local playercolor H6w
local player J6w
local playercolor K6w
local player L6w
local player X6w
local playercolor C6w
local player V6w
local playercolor B6w
local player N6w
local player M6w
local playercolor w7w
local player u7w
local playercolor r7w
local player s7w
local player t7w
local playercolor i7w
local player S7w
local playercolor c7w
local player o7w
local player O7w
local playercolor l7w
local player b7w
local playercolor y7w
local player p7w
local player e7w
local playercolor q7w
local player a7w
local playercolor n7w
local player d7w
local player f7w
local playercolor R7w
local player T7w
local playercolor Y7w
local player G7w
local player g7w
local playercolor h7w
local player F7w
local playercolor k7w
set aW[qW]=P6w
set qW=qW+1
if Z6w==1 then
set A6w=U6w
set Aw[GetPlayerId(A6w)]="|cffff0000"
set D6w=U6w
set H6w=PLAYER_COLOR_RED
call SetPlayerColor(D6w,H6w)
set J6w=Player(I6w)
set K6w=PLAYER_COLOR_RED
call SetPlayerColor(J6w,K6w)
call eWp(Fn,1,"when calling remove in Initialization, line 114")
elseif Z6w==2 then
set L6w=U6w
set Aw[GetPlayerId(L6w)]="|cff0000ff"
set X6w=U6w
set C6w=PLAYER_COLOR_BLUE
call SetPlayerColor(X6w,C6w)
set V6w=Player(I6w)
set B6w=PLAYER_COLOR_BLUE
call SetPlayerColor(V6w,B6w)
call eWp(Fn,2,"when calling remove in Initialization, line 119")
elseif Z6w==3 then
set N6w=U6w
set Aw[GetPlayerId(N6w)]="|cffffff00"
set M6w=U6w
set w7w=PLAYER_COLOR_YELLOW
call SetPlayerColor(M6w,w7w)
set u7w=Player(I6w)
set r7w=PLAYER_COLOR_YELLOW
call SetPlayerColor(u7w,r7w)
call eWp(Fn,3,"when calling remove in Initialization, line 124")
elseif Z6w==4 then
set s7w=U6w
set Aw[GetPlayerId(s7w)]="|cff00ff00"
set t7w=U6w
set i7w=PLAYER_COLOR_GREEN
call SetPlayerColor(t7w,i7w)
set S7w=Player(I6w)
set c7w=PLAYER_COLOR_GREEN
call SetPlayerColor(S7w,c7w)
call eWp(Fn,4,"when calling remove in Initialization, line 129")
elseif Z6w==5 then
set o7w=U6w
set Aw[GetPlayerId(o7w)]="|cff800080"
set O7w=U6w
set l7w=PLAYER_COLOR_PURPLE
call SetPlayerColor(O7w,l7w)
set b7w=Player(I6w)
set y7w=PLAYER_COLOR_PURPLE
call SetPlayerColor(b7w,y7w)
call eWp(Fn,5,"when calling remove in Initialization, line 134")
elseif Z6w==6 then
set p7w=U6w
set Aw[GetPlayerId(p7w)]="|cffFF4500"
set e7w=U6w
set q7w=PLAYER_COLOR_ORANGE
call SetPlayerColor(e7w,q7w)
set a7w=Player(I6w)
set n7w=PLAYER_COLOR_ORANGE
call SetPlayerColor(a7w,n7w)
call eWp(Fn,6,"when calling remove in Initialization, line 139")
elseif Z6w==7 then
set d7w=U6w
set Aw[GetPlayerId(d7w)]="|cff00fff2"
set f7w=U6w
set R7w=PLAYER_COLOR_CYAN
call SetPlayerColor(f7w,R7w)
set T7w=Player(I6w)
set Y7w=PLAYER_COLOR_CYAN
call SetPlayerColor(T7w,Y7w)
call eWp(Fn,7,"when calling remove in Initialization, line 144")
else
set G7w=U6w
set Aw[GetPlayerId(G7w)]="|cffFF1493"
set g7w=U6w
set h7w=PLAYER_COLOR_PINK
call SetPlayerColor(g7w,h7w)
set F7w=Player(I6w)
set k7w=PLAYER_COLOR_PINK
call SetPlayerColor(F7w,k7w)
call eWp(Fn,8,"when calling remove in Initialization, line 149")
endif
set qW=qW-1
set A6w=null
set D6w=null
set H6w=null
set J6w=null
set K6w=null
set L6w=null
set X6w=null
set C6w=null
set V6w=null
set B6w=null
set N6w=null
set M6w=null
set w7w=null
set u7w=null
set r7w=null
set s7w=null
set t7w=null
set i7w=null
set S7w=null
set c7w=null
set o7w=null
set O7w=null
set l7w=null
set b7w=null
set y7w=null
set p7w=null
set e7w=null
set q7w=null
set a7w=null
set n7w=null
set d7w=null
set f7w=null
set R7w=null
set T7w=null
set Y7w=null
set G7w=null
set g7w=null
set h7w=null
set F7w=null
set k7w=null
endfunction
function wAt takes string uPt returns nothing
local integer rPt
local integer sPt
local string tPt
local integer iPt
local string SPt
local integer cPt
local integer oPt
local player OPt
local integer lPt
local string bPt
local integer yPt
local string pPt
local integer ePt
local integer qPt
local player aPt
local integer nPt
local string dPt
local integer fPt
local string RPt
local integer TPt
local integer YPt
local player GPt
local integer gPt
local string hPt
local integer FPt
local string kPt
local integer jPt
local integer xPt
local player vPt
local player mPt
local string QPt
local player WPt
local player EPt
local string ZPt
local player UPt
local player IPt
local string PPt
local player APt
local player DPt
local string HPt
local player JPt
local integer KPt
local player LPt
local integer XPt
local player CPt
local integer VPt
local player BPt
local integer NPt
local player MPt
set aW[qW]=uPt
set qW=qW+1
set hn=GetRandomInt(0,3)
set Yu=Player(hn)
set du=Player(hn+4)
set Rw[hn]=270
set sPt=Fn
set tPt="when calling shuffle in Initialization, line 213"
set aW[qW]=tPt
set qW=qW+1
if ok[sPt]==0 then
if sPt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(sPt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set iPt=Fn
set SPt="when calling getFirst in Initialization, line 214"
set aW[qW]=SPt
set qW=qW+1
if ok[iPt]==0 then
if iPt==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set oPt=iPt
set cPt=Hv[Kv[Vv[oPt]]]
set qW=qW-1
set KPt=cPt
set LPt=Yu
set OPt=du
call j7w(KPt,LPt,GetPlayerId(OPt),"when calling color in Initialization, line 214")
set hn=hn+1
if hn>3 then
set hn=0
endif
set Tu=Player(hn)
set nu=Player(hn+4)
set Rw[hn]=90
set lPt=Fn
set bPt="when calling shuffle in Initialization, line 221"
set aW[qW]=bPt
set qW=qW+1
if ok[lPt]==0 then
if lPt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(lPt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set yPt=Fn
set pPt="when calling getFirst in Initialization, line 222"
set aW[qW]=pPt
set qW=qW+1
if ok[yPt]==0 then
if yPt==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set qPt=yPt
set ePt=Hv[Kv[Vv[qPt]]]
set qW=qW-1
set XPt=ePt
set CPt=Tu
set aPt=nu
call j7w(XPt,CPt,GetPlayerId(aPt),"when calling color in Initialization, line 222")
set hn=hn+1
if hn>3 then
set hn=0
endif
set Gu=Player(hn)
set fu=Player(hn+4)
set Rw[hn]=180
set nPt=Fn
set dPt="when calling shuffle in Initialization, line 229"
set aW[qW]=dPt
set qW=qW+1
if ok[nPt]==0 then
if nPt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(nPt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set fPt=Fn
set RPt="when calling getFirst in Initialization, line 230"
set aW[qW]=RPt
set qW=qW+1
if ok[fPt]==0 then
if fPt==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set YPt=fPt
set TPt=Hv[Kv[Vv[YPt]]]
set qW=qW-1
set VPt=TPt
set BPt=Gu
set GPt=fu
call j7w(VPt,BPt,GetPlayerId(GPt),"when calling color in Initialization, line 230")
set hn=hn+1
if hn>3 then
set hn=0
endif
set gu=Player(hn)
set Ru=Player(hn+4)
set Rw[hn]=0
set gPt=Fn
set hPt="when calling shuffle in Initialization, line 237"
set aW[qW]=hPt
set qW=qW+1
if ok[gPt]==0 then
if gPt==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(gPt,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set FPt=Fn
set kPt="when calling getFirst in Initialization, line 238"
set aW[qW]=kPt
set qW=qW+1
if ok[FPt]==0 then
if FPt==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set xPt=FPt
set jPt=Hv[Kv[Vv[xPt]]]
set qW=qW-1
set NPt=jPt
set MPt=gu
set vPt=Ru
call j7w(NPt,MPt,GetPlayerId(vPt),"when calling color in Initialization, line 238")
set mPt=Player(4)
set WPt=Player(0)
set QPt=GetPlayerName(WPt)
call SetPlayerName(mPt,QPt)
set EPt=Player(5)
set UPt=Player(1)
set ZPt=GetPlayerName(UPt)
call SetPlayerName(EPt,ZPt)
set IPt=Player(6)
set APt=Player(2)
set PPt=GetPlayerName(APt)
call SetPlayerName(IPt,PPt)
set DPt=Player(7)
set JPt=Player(3)
set HPt=GetPlayerName(JPt)
call SetPlayerName(DPt,HPt)
set rPt=0
loop
exitwhen rPt>3
set Kw[rPt]=1
set Lw[rPt]=1
set Xw[rPt]=1
set rPt=rPt+1
endloop
set qW=qW-1
set OPt=null
set aPt=null
set GPt=null
set vPt=null
set mPt=null
set WPt=null
set EPt=null
set UPt=null
set IPt=null
set APt=null
set DPt=null
set JPt=null
set LPt=null
set CPt=null
set BPt=null
set MPt=null
endfunction
function sat takes string Zqt returns boolean
local group Uqt
local unit Iqt
local group Pqt
local integer Aqt
local group Dqt
local group Hqt
local unit Jqt
local unit Kqt
local unittype Lqt
local unit Xqt
local group Cqt
local trigger Vqt
local code Bqt
local string Nqt
local integer Mqt
local real wat
local integer uat
local string rat
set aW[qW]=Zqt
set qW=qW+1
call CreateTrigger()
set Fn=kHw("when calling new_LinkedList in Initialization, line 10")
call nye(Fn,1,2,3,4,5,6,7,8,"when calling add in Initialization, line 256")
call CreateUnit(Player(11),$4F666172,0.,0.,0.)
set Uqt=CreateGroup()
call GroupEnumUnitsInRect(Uqt,yc,null)
set Pqt=Uqt
loop
set Dqt=Pqt
exitwhen not (FirstOfGroup(Dqt)!=null)
set Hqt=Pqt
set Jqt=FirstOfGroup(Hqt)
call GroupRemoveUnit(Hqt,Jqt)
set Iqt=Jqt
set Kqt=Iqt
set Lqt=UNIT_TYPE_HERO
if IsUnitType(Kqt,Lqt) then
set Xqt=Iqt
call RemoveUnit(Xqt)
endif
endloop
set Cqt=Uqt
call DestroyGroup(Cqt)
call fmb()
call wAt("when calling randomPos in Initialization, line 265")
call TriggerRegisterTimerEvent(dr,1.,false)
call TriggerRegisterTimerEvent(Qs,1.,false)
set Vqt=Qs
set Bqt=b6
call TriggerAddAction(Vqt,Bqt)
set Nqt="when calling alloc_CallbackSingle_doAfter_Initialization in Initialization, line 269"
set aW[qW]=Nqt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Mqt=fF
set RF[Mqt]=720
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Initialization.","when calling error in Initialization, line 269")
set Mqt=0
endif
else
set dF=dF-1
set Mqt=nF[dF]
set RF[Mqt]=720
endif
set qW=qW-1
set Aqt=Mqt
set wat=3.
set uat=Aqt
set rat="when calling doAfter in Initialization, line 269"
set aW[qW]=rat
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),wat,uat,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set Uqt=null
set Iqt=null
set Pqt=null
set Dqt=null
set Hqt=null
set Jqt=null
set Kqt=null
set Lqt=null
set Xqt=null
set Cqt=null
set Vqt=null
return true
endfunction
function mle takes nothing returns boolean
set qW=0
return sat("via function reference Initialization, line 1")
endfunction
function mmi takes nothing returns nothing
local integer Ymi=GetSpellAbilityId()
local unit Gmi
local unit gmi
local unit hmi
local real Fmi
local unit kmi
local integer jmi
local unit xmi
local string vmi
if Ymi==$41303350 then
set gmi=GetSpellAbilityUnit()
set Gmi=CreateUnit(GetOwningPlayer(gmi),$75303030,GetSpellTargetX(),GetSpellTargetY(),0.)
set hmi=Gmi
set Fmi=3.
call UnitApplyTimedLife(hmi,$42544C46,Fmi)
set kmi=Gmi
set jmi=$41303358
call UnitAddAbility(kmi,jmi)
set xmi=Gmi
set vmi="stomp"
call IssueImmediateOrder(xmi,vmi)
endif
set Gmi=null
set gmi=null
set hmi=null
set kmi=null
set xmi=null
endfunction
function mnt takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function mol takes nothing returns boolean
return true
endfunction
function mpS takes nothing returns boolean
local unit FpS=GetTriggerUnit()
local unit kpS=FpS
local unit jpS
local integer xpS
local boolean vpS
if GetUnitTypeId(kpS)==$5563726C then
set jpS=FpS
set xpS=$41313657
set vpS=GetUnitAbilityLevel(jpS,xpS)>0
else
set vpS=false
endif
set FpS=null
set kpS=null
set jpS=null
return vpS
endfunction
function mpc takes nothing returns boolean
local unit Rpc=GetFilterUnit()
local unit Tpc=GetTriggerUnit()
local unit Ypc
local player Gpc
local unit gpc
local unit hpc
local unit Fpc
local unittype kpc
local boolean jpc
local boolean xpc
local boolean vpc
if Rpc!=null and Tpc!=null then
set Ypc=Rpc
set gpc=Tpc
set Gpc=GetOwningPlayer(gpc)
set jpc=IsUnitEnemy(Ypc,Gpc)
else
set jpc=false
endif
if jpc==true then
set hpc=GetFilterUnit()
set xpc=UnitAlive(hpc)==true
else
set xpc=false
endif
if xpc then
set Fpc=GetFilterUnit()
set kpc=UNIT_TYPE_STRUCTURE
set vpc=IsUnitType(Fpc,kpc)==false
else
set vpc=false
endif
set Rpc=null
set Tpc=null
set Ypc=null
set Gpc=null
set gpc=null
set hpc=null
set Fpc=null
set kpc=null
return vpc
endfunction
function mvt takes nothing returns nothing
local unit Fvt=GetTriggerUnit()
local unit kvt=Fvt
local unit jvt
local integer xvt
local unit vvt
if GetUnitTypeId(kvt)==$78303221 then
set iy=Fvt
set jvt=iy
set xvt=$41374358
call UnitAddAbility(jvt,xvt)
set vvt=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(vvt),$52313339,0)
endif
set Fvt=null
set kvt=null
set jvt=null
set vvt=null
endfunction
function QKi takes string QPi returns nothing
local trigger WPi
local unit EPi
local player ZPi
local player UPi
local integer IPi
local real PPi
local real APi
local integer DPi
local integer HPi
local integer JPi
local integer KPi
local integer LPi
local integer XPi
local integer CPi
local integer VPi
local integer BPi
local integer NPi
local integer MPi
local real wAi
local real uAi
local integer rAi
local integer sAi
local integer tAi
local integer iAi
local integer SAi
local integer cAi
local integer oAi
local integer OAi
local integer lAi
local integer bAi
local integer yAi
local integer pAi
local unit eAi
local player qAi
local player aAi
local trigger nAi
local unit dAi
local sound fAi
local unit RAi
local player TAi
local boolean YAi
local player GAi
local integer gAi
local player hAi
local playerstate FAi
local integer kAi
local player jAi
local playerstate xAi
local string vAi
local real mAi
local string QAi
local real WAi
local unit EAi
local player ZAi
local boolean UAi
local unit IAi
local unit PAi
local unit AAi
local unit DAi
local integer HAi
local unit JAi
local integer KAi
local unit LAi
local integer XAi
local integer CAi
local unit VAi
local unit BAi
local integer NAi
local unit MAi
local integer wDi
local unit uDi
local integer rDi
local integer sDi
local unit tDi
local unit iDi
local integer SDi
local unit cDi
local integer oDi
local unit ODi
local integer lDi
local integer bDi
local unit yDi
local unit pDi
local integer eDi
local unit qDi
local integer aDi
local unit nDi
local integer dDi
local integer fDi
local unit RDi
local unit TDi
local integer YDi
local unit GDi
local integer gDi
local unit hDi
local integer FDi
local unit kDi
local integer jDi
local integer xDi
local unit vDi
local integer mDi
local unit QDi
local integer WDi
local integer EDi
local unit ZDi
local unit UDi
local integer IDi
local unit PDi
local unit ADi
local integer DDi
local unit HDi
local unit JDi
local integer KDi
local unit LDi
local integer XDi
local unit CDi
local integer VDi
local integer BDi
local unit NDi
local unit MDi
local integer wHi
local unit uHi
local integer rHi
local unit sHi
local integer tHi
local integer iHi
local unit SHi
local unit cHi
local integer oHi
local unit OHi
local integer lHi
local unit bHi
local integer yHi
local integer pHi
local unit eHi
local unit qHi
local integer aHi
local unit nHi
local integer dHi
local unit fHi
local integer RHi
local integer THi
local unit YHi
local unit GHi
local integer gHi
local unit hHi
local integer FHi
local unit kHi
local integer jHi
local integer xHi
local unit vHi
local unit mHi
local unit QHi
local integer WHi
local unit EHi
local unit ZHi
local integer UHi
local unit IHi
local integer PHi
local unit AHi
local integer DHi
local integer HHi
local unit JHi
local unit KHi
local integer LHi
local unit XHi
local integer CHi
local unit VHi
local integer BHi
local integer NHi
local unit MHi
local unit wJi
local integer uJi
local unit rJi
local integer sJi
local unit tJi
local integer iJi
local integer SJi
local unit cJi
local unit oJi
local integer OJi
local unit lJi
local integer bJi
local unit yJi
local integer pJi
local integer eJi
local unit qJi
local unit aJi
local integer nJi
local unit dJi
local integer fJi
local unit RJi
local integer TJi
local unit YJi
local integer GJi
local integer gJi
local unit hJi
local integer FJi
local unit kJi
local integer jJi
local integer xJi
local unit vJi
local unit mJi
local integer QJi
local unit WJi
local unit EJi
local integer ZJi
local unit UJi
local unit IJi
local integer PJi
local unit AJi
local integer DJi
local unit HJi
local integer JJi
local integer KJi
local unit LJi
local unit XJi
local integer CJi
local unit VJi
local integer BJi
local unit NJi
local integer MJi
local integer wKi
local unit uKi
local unit rKi
local integer sKi
local unit tKi
local integer iKi
local unit SKi
local integer cKi
local integer oKi
local unit OKi
local unit lKi
local integer bKi
local unit yKi
local integer pKi
local unit eKi
local integer qKi
local integer aKi
local unit nKi
local unit dKi
local integer fKi
local unit RKi
local integer TKi
local unit YKi
local integer GKi
local integer gKi
local string hKi
local integer FKi
local real kKi
local integer jKi
local string xKi
local player vKi
local playerstate mKi
set aW[qW]=QPi
set qW=qW+1
set WPi=GetTriggeringTrigger()
set EPi=GetEnteringUnit()
set eAi=EPi
set ZPi=GetOwningPlayer(eAi)
set qAi=ZPi
set UPi=Player(GetPlayerId(qAi)-4)
set aAi=UPi
set IPi=GetPlayerId(aAi)
set nAi=WPi
call DisableTrigger(nAi)
set dAi=G[8]
if GetOwningPlayer(dAi)==Player(15) then
set fAi=bj_questUpdatedSound
call StartSound(fAi)
set RAi=G[8]
set TAi=UPi
set YAi=false
call SetUnitOwner(RAi,TAi,YAi)
call UuS(G[8],75)
set GAi=UPi
set gAi=75
set hAi=GAi
set FAi=PLAYER_STATE_RESOURCE_GOLD
set kAi=gAi
set vKi=hAi
set mKi=FAi
set jAi=hAi
set xAi=FAi
call SetPlayerState(vKi,mKi,GetPlayerState(jAi,xAi)+kAi)
set vAi=Aw[IPi]+GetPlayerName(UPi)+"|r"+" has captured neutral building!"
set mAi=10.
set QAi=vAi
set WAi=mAi
call DisplayTimedTextToPlayer(IY,0.,0.,WAi,QAi)
set hr[IPi]=hr[IPi]+75
set Fr[IPi]=Fr[IPi]+75
set Vr[IPi]=Vr[IPi]+75
else
set EAi=G[8]
set ZAi=UPi
set UAi=false
call SetUnitOwner(EAi,ZAi,UAi)
endif
if UPi==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set IAi=G[8]
set PPi=GetUnitX(IAi)
set PAi=G[8]
set APi=GetUnitY(PAi)
set g[8]=CreateUnit(Ud,$6E303349,PPi,APi,0.)
set AAi=G[8]
if GetUnitTypeId(AAi)==$6E676164 then
set DAi=G[8]
set HAi=$41303042
set DPi=GetUnitAbilityLevel(DAi,HAi)
set JAi=g[8]
set KAi=$41313053
call UnitAddAbility(JAi,KAi)
set LAi=g[8]
set XAi=$41313053
set CAi=DPi
call SetUnitAbilityLevel(LAi,XAi,CAi)
endif
set VAi=G[8]
if GetUnitTypeId(VAi)==$6E64727A then
set BAi=G[8]
set NAi=$41303852
set HPi=GetUnitAbilityLevel(BAi,NAi)
set MAi=g[8]
set wDi=$41313049
call UnitAddAbility(MAi,wDi)
set uDi=g[8]
set rDi=$41313049
set sDi=HPi
call SetUnitAbilityLevel(uDi,rDi,sDi)
endif
set tDi=G[8]
if GetUnitTypeId(tDi)==$6E647267 then
set iDi=G[8]
set SDi=$41303856
set JPi=GetUnitAbilityLevel(iDi,SDi)
set cDi=g[8]
set oDi=$41313054
call UnitAddAbility(cDi,oDi)
set ODi=g[8]
set lDi=$41313054
set bDi=JPi
call SetUnitAbilityLevel(ODi,lDi,bDi)
endif
set yDi=G[8]
if GetUnitTypeId(yDi)==$6E676D65 then
set pDi=G[8]
set eDi=$4130384F
set KPi=GetUnitAbilityLevel(pDi,eDi)
set qDi=g[8]
set aDi=$4131304A
call UnitAddAbility(qDi,aDi)
set nDi=g[8]
set dDi=$4131304A
set fDi=KPi
call SetUnitAbilityLevel(nDi,dDi,fDi)
endif
set RDi=G[8]
if GetUnitTypeId(RDi)==$6E647272 then
set TDi=G[8]
set YDi=$41303858
set LPi=GetUnitAbilityLevel(TDi,YDi)
set GDi=G[8]
set gDi=$41303859
set XPi=GetUnitAbilityLevel(GDi,gDi)
set hDi=g[8]
set FDi=$4131304B
call UnitAddAbility(hDi,FDi)
set kDi=g[8]
set jDi=$4131304B
set xDi=LPi
call SetUnitAbilityLevel(kDi,jDi,xDi)
set vDi=g[8]
set mDi=$4131304C
call UnitAddAbility(vDi,mDi)
set QDi=g[8]
set WDi=$4131304C
set EDi=XPi
call SetUnitAbilityLevel(QDi,WDi,EDi)
endif
set ZDi=G[8]
if GetUnitTypeId(ZDi)==$6E6D7232 then
set UDi=g[8]
set IDi=$41303853
call UnitAddAbility(UDi,IDi)
endif
set PDi=G[8]
if GetUnitTypeId(PDi)==$6E676F6C then
set ADi=g[8]
set DDi=$41303853
call UnitAddAbility(ADi,DDi)
endif
set HDi=G[8]
if GetUnitTypeId(HDi)==$6E64726F then
set JDi=G[8]
set KDi=$41303855
set CPi=GetUnitAbilityLevel(JDi,KDi)
set LDi=g[8]
set XDi=$4131304E
call UnitAddAbility(LDi,XDi)
set CDi=g[8]
set VDi=$4131304E
set BDi=CPi
call SetUnitAbilityLevel(CDi,VDi,BDi)
endif
set NDi=G[8]
if GetUnitTypeId(NDi)==$6E776774 then
set MDi=G[8]
set wHi=$41303850
set VPi=GetUnitAbilityLevel(MDi,wHi)
set uHi=g[8]
set rHi=$4131304F
call UnitAddAbility(uHi,rHi)
set sHi=g[8]
set tHi=$4131304F
set iHi=VPi
call SetUnitAbilityLevel(sHi,tHi,iHi)
endif
set SHi=G[8]
if GetUnitTypeId(SHi)==$6E647275 then
set cHi=G[8]
set oHi=$4130384E
set BPi=GetUnitAbilityLevel(cHi,oHi)
set OHi=g[8]
set lHi=$41313050
call UnitAddAbility(OHi,lHi)
set bHi=g[8]
set yHi=$41313050
set pHi=BPi
call SetUnitAbilityLevel(bHi,yHi,pHi)
endif
set eHi=G[8]
if GetUnitTypeId(eHi)==$6E666F68 then
set qHi=G[8]
set aHi=$4130384D
set NPi=GetUnitAbilityLevel(qHi,aHi)
set nHi=g[8]
set dHi=$41313051
call UnitAddAbility(nHi,dHi)
set fHi=g[8]
set RHi=$41313051
set THi=NPi
call SetUnitAbilityLevel(fHi,RHi,THi)
endif
set YHi=G[8]
if GetUnitTypeId(YHi)==$6E64726B then
set GHi=G[8]
set gHi=$41303851
set MPi=GetUnitAbilityLevel(GHi,gHi)
set hHi=g[8]
set FHi=$41313052
call UnitAddAbility(hHi,FHi)
set kHi=g[8]
set jHi=$41313052
set xHi=MPi
call SetUnitAbilityLevel(kHi,jHi,xHi)
endif
endif
if UPi!=Ud and g[8]!=null then
call RemoveUnit(g[8])
set g[8]=null
endif
if UPi==Ud and fq==true then
set vHi=G[8]
set wAi=GetUnitX(vHi)
set mHi=G[8]
set uAi=GetUnitY(mHi)
set h[8]=CreateUnit(Ud,$6E303349,wAi,uAi,0.)
set QHi=h[8]
set WHi=$4545564F
call UnitAddAbility(QHi,WHi)
set EHi=G[8]
if GetUnitTypeId(EHi)==$6E676164 then
set ZHi=G[8]
set UHi=$41303042
set rAi=GetUnitAbilityLevel(ZHi,UHi)
set IHi=h[8]
set PHi=$41313641
call UnitAddAbility(IHi,PHi)
set AHi=h[8]
set DHi=$41313641
set HHi=rAi
call SetUnitAbilityLevel(AHi,DHi,HHi)
endif
set JHi=G[8]
if GetUnitTypeId(JHi)==$6E64727A then
set KHi=G[8]
set LHi=$41303852
set sAi=GetUnitAbilityLevel(KHi,LHi)
set XHi=h[8]
set CHi=$41313630
call UnitAddAbility(XHi,CHi)
set VHi=h[8]
set BHi=$41313630
set NHi=sAi
call SetUnitAbilityLevel(VHi,BHi,NHi)
endif
set MHi=G[8]
if GetUnitTypeId(MHi)==$6E647267 then
set wJi=G[8]
set uJi=$41303856
set tAi=GetUnitAbilityLevel(wJi,uJi)
set rJi=h[8]
set sJi=$41313642
call UnitAddAbility(rJi,sJi)
set tJi=h[8]
set iJi=$41313642
set SJi=tAi
call SetUnitAbilityLevel(tJi,iJi,SJi)
endif
set cJi=G[8]
if GetUnitTypeId(cJi)==$6E676D65 then
set oJi=G[8]
set OJi=$4130384F
set iAi=GetUnitAbilityLevel(oJi,OJi)
set lJi=h[8]
set bJi=$41313631
call UnitAddAbility(lJi,bJi)
set yJi=h[8]
set pJi=$41313631
set eJi=iAi
call SetUnitAbilityLevel(yJi,pJi,eJi)
endif
set qJi=G[8]
if GetUnitTypeId(qJi)==$6E647272 then
set aJi=G[8]
set nJi=$41303858
set SAi=GetUnitAbilityLevel(aJi,nJi)
set dJi=G[8]
set fJi=$41303859
set cAi=GetUnitAbilityLevel(dJi,fJi)
set RJi=h[8]
set TJi=$41313632
call UnitAddAbility(RJi,TJi)
set YJi=h[8]
set GJi=$41313633
set gJi=SAi
call SetUnitAbilityLevel(YJi,GJi,gJi)
set hJi=h[8]
set FJi=$41313632
call UnitAddAbility(hJi,FJi)
set kJi=h[8]
set jJi=$41313633
set xJi=cAi
call SetUnitAbilityLevel(kJi,jJi,xJi)
endif
set vJi=G[8]
if GetUnitTypeId(vJi)==$6E6D7232 then
set mJi=h[8]
set QJi=$41303853
call UnitAddAbility(mJi,QJi)
endif
set WJi=G[8]
if GetUnitTypeId(WJi)==$6E676F6C then
set EJi=h[8]
set ZJi=$41303853
call UnitAddAbility(EJi,ZJi)
endif
set UJi=G[8]
if GetUnitTypeId(UJi)==$6E64726F then
set IJi=G[8]
set PJi=$41303855
set oAi=GetUnitAbilityLevel(IJi,PJi)
set AJi=h[8]
set DJi=$41313635
call UnitAddAbility(AJi,DJi)
set HJi=h[8]
set JJi=$41313635
set KJi=oAi
call SetUnitAbilityLevel(HJi,JJi,KJi)
endif
set LJi=G[8]
if GetUnitTypeId(LJi)==$6E776774 then
set XJi=G[8]
set CJi=$41303850
set OAi=GetUnitAbilityLevel(XJi,CJi)
set VJi=h[8]
set BJi=$41313636
call UnitAddAbility(VJi,BJi)
set NJi=h[8]
set MJi=$41313636
set wKi=OAi
call SetUnitAbilityLevel(NJi,MJi,wKi)
endif
set uKi=G[8]
if GetUnitTypeId(uKi)==$6E647275 then
set rKi=G[8]
set sKi=$4130384E
set lAi=GetUnitAbilityLevel(rKi,sKi)
set tKi=h[8]
set iKi=$41313637
call UnitAddAbility(tKi,iKi)
set SKi=h[8]
set cKi=$41313637
set oKi=lAi
call SetUnitAbilityLevel(SKi,cKi,oKi)
endif
set OKi=G[8]
if GetUnitTypeId(OKi)==$6E666F68 then
set lKi=G[8]
set bKi=$4130384D
set bAi=GetUnitAbilityLevel(lKi,bKi)
set yKi=h[8]
set pKi=$41313638
call UnitAddAbility(yKi,pKi)
set eKi=h[8]
set qKi=$41313638
set aKi=bAi
call SetUnitAbilityLevel(eKi,qKi,aKi)
endif
set nKi=G[8]
if GetUnitTypeId(nKi)==$6E64726B then
set dKi=G[8]
set fKi=$41303851
set yAi=GetUnitAbilityLevel(dKi,fKi)
set RKi=h[8]
set TKi=$41313639
call UnitAddAbility(RKi,TKi)
set YKi=h[8]
set GKi=$41313639
set gKi=yAi
call SetUnitAbilityLevel(YKi,GKi,gKi)
endif
endif
if UPi!=Ud and h[8]!=null then
call RemoveUnit(h[8])
set h[8]=null
endif
set hKi="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 1163"
set aW[qW]=hKi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set FKi=fF
set RF[FKi]=742
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 1163")
set FKi=0
endif
else
set dF=dF-1
set FKi=nF[dF]
set RF[FKi]=742
endif
set qW=qW-1
set pAi=FKi
set Im[pAi]=WPi
set kKi=2.
set jKi=pAi
set xKi="when calling doAfter in NeutralStructures, line 1163"
set aW[qW]=xKi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),kKi,jKi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set WPi=null
set EPi=null
set ZPi=null
set UPi=null
set eAi=null
set qAi=null
set aAi=null
set nAi=null
set dAi=null
set fAi=null
set RAi=null
set TAi=null
set GAi=null
set hAi=null
set FAi=null
set jAi=null
set xAi=null
set EAi=null
set ZAi=null
set IAi=null
set PAi=null
set AAi=null
set DAi=null
set JAi=null
set LAi=null
set VAi=null
set BAi=null
set MAi=null
set uDi=null
set tDi=null
set iDi=null
set cDi=null
set ODi=null
set yDi=null
set pDi=null
set qDi=null
set nDi=null
set RDi=null
set TDi=null
set GDi=null
set hDi=null
set kDi=null
set vDi=null
set QDi=null
set ZDi=null
set UDi=null
set PDi=null
set ADi=null
set HDi=null
set JDi=null
set LDi=null
set CDi=null
set NDi=null
set MDi=null
set uHi=null
set sHi=null
set SHi=null
set cHi=null
set OHi=null
set bHi=null
set eHi=null
set qHi=null
set nHi=null
set fHi=null
set YHi=null
set GHi=null
set hHi=null
set kHi=null
set vHi=null
set mHi=null
set QHi=null
set EHi=null
set ZHi=null
set IHi=null
set AHi=null
set JHi=null
set KHi=null
set XHi=null
set VHi=null
set MHi=null
set wJi=null
set rJi=null
set tJi=null
set cJi=null
set oJi=null
set lJi=null
set yJi=null
set qJi=null
set aJi=null
set dJi=null
set RJi=null
set YJi=null
set hJi=null
set kJi=null
set vJi=null
set mJi=null
set WJi=null
set EJi=null
set UJi=null
set IJi=null
set AJi=null
set HJi=null
set LJi=null
set XJi=null
set VJi=null
set NJi=null
set uKi=null
set rKi=null
set tKi=null
set SKi=null
set OKi=null
set lKi=null
set yKi=null
set eKi=null
set nKi=null
set dKi=null
set RKi=null
set YKi=null
set vKi=null
set mKi=null
endfunction
function mwO takes nothing returns nothing
set qW=0
call QKi("via function reference NeutralStructures, line 1757")
endfunction
function mxS takes nothing returns boolean
return true
endfunction
function myc takes nothing returns nothing
local unit Hbc=GetDyingUnit()
local unit Lbc=Hbc
local texttag Jbc
local unit Kbc
local texttag Xbc
local real Cbc
local real Vbc
local real Bbc
local unit Nbc
local unit Mbc
local texttag wyc
local integer uyc
local integer ryc
local integer syc
local integer tyc
local texttag iyc
local real Syc
local texttag cyc
local real oyc
local texttag Oyc
local boolean lyc
local texttag byc
local boolean yyc
local texttag pyc
local string eyc
local real qyc
local texttag ayc
local real nyc
local real dyc
local unit fyc
local unit Ryc
local unit Tyc
local unit Yyc
local integer Gyc
local unit gyc
local integer hyc
local integer Fyc
local unit kyc
local real jyc
local player xyc
local real vyc
if GetUnitTypeId(Lbc)==$4830324B and GetHeroLevel(Hbc)>=8 then
set Jbc=CreateTextTag()
set Xbc=Jbc
set Nbc=Hbc
set Cbc=GetUnitX(Nbc)
set Mbc=Hbc
set Vbc=GetUnitY(Mbc)
set Bbc=50.
call SetTextTagPos(Xbc,Cbc,Vbc,Bbc)
set wyc=Jbc
set uyc=128
set ryc=0
set syc=128
set tyc=255
call SetTextTagColor(wyc,uyc,ryc,syc,tyc)
set iyc=Jbc
set Syc=6.
call SetTextTagLifespan(iyc,Syc)
set cyc=Jbc
set oyc=4.
call SetTextTagFadepoint(cyc,oyc)
set Oyc=Jbc
set lyc=true
call SetTextTagVisibility(Oyc,lyc)
set byc=Jbc
set yyc=false
call SetTextTagPermanent(byc,yyc)
set pyc=Jbc
set eyc="Soul Echo"
set qyc=10.
call SetTextTagText(pyc,eyc,qyc*.0023)
set ayc=Jbc
set nyc=0.
set dyc=.03
call SetTextTagVelocity(ayc,nyc,dyc)
set fyc=Hbc
set xyc=GetOwningPlayer(fyc)
set Ryc=Hbc
set vyc=GetUnitX(Ryc)
set Tyc=Hbc
set Kbc=CreateUnit(xyc,$75303030,vyc,GetUnitY(Tyc),0.)
set Yyc=Kbc
set Gyc=$41777273
call UnitAddAbility(Yyc,Gyc)
set gyc=Kbc
set hyc=$41777273
set Fyc=3
call SetUnitAbilityLevel(gyc,hyc,Fyc)
call IssueImmediateOrder(Kbc,"stomp")
set kyc=Kbc
set jyc=5.
call UnitApplyTimedLife(kyc,$42544C46,jyc)
endif
set Hbc=null
set Jbc=null
set Kbc=null
set Lbc=null
set Xbc=null
set Nbc=null
set Mbc=null
set wyc=null
set iyc=null
set cyc=null
set Oyc=null
set byc=null
set pyc=null
set ayc=null
set fyc=null
set Ryc=null
set Tyc=null
set Yyc=null
set gyc=null
set kyc=null
set xyc=null
endfunction
function n1b takes nothing returns boolean
return true
endfunction
function n2S takes nothing returns boolean
local trigger M4i
local rect w2S
local region u2S
local trigger r2S
local boolexpr s2S
local trigger t2S
local trigger i2S
local trigger S2S
local playerunitevent c2S
local integer o2S
local trigger O2S
local trigger l2S
local playerunitevent b2S
local integer y2S
local trigger p2S
local trigger e2S
local playerunitevent q2S
local integer a2S
set De=CreateTrigger()
set He=CreateTrigger()
set Je=CreateTrigger()
set Ke=CreateTrigger()
set M4i=De
set w2S=bj_mapInitialPlayableArea
set u2S=CreateRegion()
call RegionAddRect(u2S,w2S)
call TriggerRegisterEnterRegion(M4i,u2S,null)
set r2S=De
set s2S=Condition(Y2)
call TriggerAddCondition(r2S,s2S)
set t2S=De
call DisableTrigger(t2S)
set i2S=He
call DisableTrigger(i2S)
set S2S=He
set c2S=EVENT_PLAYER_HERO_LEVEL
set o2S=0
loop
call TriggerRegisterPlayerUnitEvent(S2S,Player(o2S),c2S,null)
set o2S=o2S+1
exitwhen o2S==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(He,G2)
set O2S=Je
call DisableTrigger(O2S)
set l2S=Je
set b2S=EVENT_PLAYER_UNIT_ATTACKED
set y2S=0
loop
call TriggerRegisterPlayerUnitEvent(l2S,Player(y2S),b2S,null)
set y2S=y2S+1
exitwhen y2S==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Je,g2)
set p2S=Ke
call DisableTrigger(p2S)
set e2S=Ke
set q2S=EVENT_PLAYER_HERO_REVIVE_FINISH
set a2S=0
loop
call TriggerRegisterPlayerUnitEvent(e2S,Player(a2S),q2S,null)
set a2S=a2S+1
exitwhen a2S==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ke,h2)
set M4i=null
set w2S=null
set u2S=null
set r2S=null
set s2S=null
set t2S=null
set i2S=null
set S2S=null
set c2S=null
set O2S=null
set l2S=null
set b2S=null
set p2S=null
set e2S=null
set q2S=null
return true
endfunction
function YCl takes string cCl returns nothing
local integer oCl
local unit OCl
local integer lCl
local unit bCl
local string yCl
local unit pCl
local integer eCl
local unit qCl
local integer aCl
local string nCl
local integer dCl
local real fCl
local integer RCl
local string TCl
set aW[qW]=cCl
set qW=qW+1
set oCl=GetSpellAbilityId()
if oCl==$41313355 then
set OCl=GetSpellAbilityUnit()
set bCl=OCl
set yCl="Spell"
call SetUnitAnimation(bCl,yCl)
set pCl=OCl
set eCl=$41303136
call UnitRemoveAbility(pCl,eCl)
set qCl=OCl
set aCl=$414D6335
call UnitAddAbility(qCl,aCl)
set nCl="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_WarianWrynn in WarianWrynn, line 404"
set aW[qW]=nCl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set dCl=fF
set RF[dCl]=845
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_WarianWrynn.","when calling error in WarianWrynn, line 404")
set dCl=0
endif
else
set dF=dF-1
set dCl=nF[dF]
set RF[dCl]=845
endif
set qW=qW-1
set lCl=dCl
set rW[lCl]=OCl
set fCl=2.
set RCl=lCl
set TCl="when calling doAfter in WarianWrynn, line 404"
set aW[qW]=TCl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),fCl,RCl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set OCl=null
set bCl=null
set pCl=null
set qCl=null
endfunction
function n8S takes nothing returns nothing
set qW=0
call YCl("via function reference WarianWrynn, line 397")
endfunction
function n8b takes nothing returns boolean
return true
endfunction
function nGi takes nothing returns boolean
local trigger iGi
local trigger SGi
local playerunitevent cGi
local integer oGi
local trigger OGi
local trigger lGi
local playerunitevent bGi
local integer yGi
local trigger pGi
local trigger eGi
local playerunitevent qGi
local integer aGi
set Vh=CreateTrigger()
set Bh=CreateTrigger()
set Nh=CreateTrigger()
set iGi=Vh
call DisableTrigger(iGi)
set SGi=Vh
set cGi=EVENT_PLAYER_UNIT_SPELL_EFFECT
set oGi=0
loop
call TriggerRegisterPlayerUnitEvent(SGi,Player(oGi),cGi,null)
set oGi=oGi+1
exitwhen oGi==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Vh,Lsw)
set OGi=Nh
call DisableTrigger(OGi)
set lGi=Nh
set bGi=EVENT_PLAYER_HERO_LEVEL
set yGi=0
loop
call TriggerRegisterPlayerUnitEvent(lGi,Player(yGi),bGi,null)
set yGi=yGi+1
exitwhen yGi==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Nh,Xsw)
set pGi=Bh
call DisableTrigger(pGi)
set eGi=Bh
set qGi=EVENT_PLAYER_UNIT_DEATH
set aGi=0
loop
call TriggerRegisterPlayerUnitEvent(eGi,Player(aGi),qGi,null)
set aGi=aGi+1
exitwhen aGi==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Bh,Csw)
set iGi=null
set SGi=null
set cGi=null
set OGi=null
set lGi=null
set bGi=null
set pGi=null
set eGi=null
set qGi=null
return true
endfunction
function dBe takes string tBe returns nothing
local unit iBe
local integer SBe
local real cBe
local real oBe
local filterfunc OBe
local unit lBe
local unit bBe
local unit yBe
local string pBe
local integer eBe
local real qBe
local real aBe
local real nBe
set aW[qW]=tBe
set qW=qW+1
set iBe=GetEnumUnit()
set lBe=iBe
set bBe=lBe
set qBe=GetUnitX(bBe)
set yBe=lBe
set aBe=qBe
set nBe=GetUnitY(yBe)
set cBe=aBe
set oBe=nBe
set OBe=Filter(aN)
set pBe="when calling alloc_ForGroupCallback_forNearestUnit_AgroBaza in AgroBaza, line 44"
set aW[qW]=pBe
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set eBe=qF
set aF[eBe]=862
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_AgroBaza.","when calling error in AgroBaza, line 44")
set eBe=0
endif
else
set eF=eF-1
set eBe=pF[eF]
set aF[eBe]=862
endif
set qW=qW-1
set SBe=eBe
set qk[SBe]=iBe
call WXp(4,0,null,null,cBe,oBe,400.,false,0,null,OBe,SBe,"when calling forNearestUnit in AgroBaza, line 44")
set qW=qW-1
set iBe=null
set OBe=null
set lBe=null
set bBe=null
set yBe=null
endfunction
function nHw takes nothing returns nothing
set qW=0
call dBe("via function reference AgroBaza, line 60")
endfunction
function nMy takes nothing returns boolean
return true
endfunction
function nPy takes nothing returns nothing
set qW=0
call LZs("via function reference ThreeRacePick, line 353")
endfunction
function nRl takes nothing returns nothing
local unit qRl=GetAttacker()
local unit aRl=qRl
if GetUnitTypeId(aRl)==$484D3065 then
call IssueTargetOrderById(qRl,852209,qRl)
endif
set qRl=null
set aRl=null
endfunction
function nUb takes nothing returns nothing
local unit nZb=GetTriggerUnit()
local unit fZb=nZb
local player dZb=GetOwningPlayer(fZb)
local unit RZb
local string TZb
local real YZb
local real GZb
local unit gZb
local unittype hZb
local unit FZb
local string kZb
local real jZb
local real xZb
local unit vZb
local unittype mZb
local unit QZb
local string WZb
local real EZb
local real ZZb
local unit UZb
local unittype IZb
local unit PZb
local string AZb
local real DZb
local real HZb
local unit JZb
local unittype KZb
local unit LZb
local string XZb
local real CZb
local real VZb
local unit BZb
local unittype NZb
local unit MZb
local string wUb
local real uUb
local real rUb
local unit sUb
local unittype tUb
local real iUb
local real SUb
local real cUb
local real oUb
local real OUb
local real lUb
local real bUb
local real yUb
local real pUb
local real eUb
local real qUb
local real aUb
if dZb==du then
if Ew[2]==true then
set RZb=nZb
set TZb="attack"
set iUb=Qw[54]
set SUb=Ww[54]
set YZb=iUb
set GZb=SUb
call IssuePointOrder(RZb,TZb,YZb,GZb)
set gZb=nZb
set hZb=UNIT_TYPE_HERO
if IsUnitType(gZb,hZb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,54)
endif
else
set FZb=nZb
set kZb="attack"
set cUb=Qw[28]
set oUb=Ww[28]
set jZb=cUb
set xZb=oUb
call IssuePointOrder(FZb,kZb,jZb,xZb)
set vZb=nZb
set mZb=UNIT_TYPE_HERO
if IsUnitType(vZb,mZb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,28)
endif
endif
endif
if dZb==nu then
set QZb=nZb
set WZb="attack"
set OUb=Qw[28]
set lUb=Ww[28]
set EZb=OUb
set ZZb=lUb
call IssuePointOrder(QZb,WZb,EZb,ZZb)
set UZb=nZb
set IZb=UNIT_TYPE_HERO
if IsUnitType(UZb,IZb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,28)
endif
endif
if dZb==fu then
set PZb=nZb
set AZb="attack"
set bUb=Qw[54]
set yUb=Ww[54]
set DZb=bUb
set HZb=yUb
call IssuePointOrder(PZb,AZb,DZb,HZb)
set JZb=nZb
set KZb=UNIT_TYPE_HERO
if IsUnitType(JZb,KZb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,54)
endif
endif
if dZb==Ru then
if Ew[1]==true then
set LZb=nZb
set XZb="attack"
set pUb=Qw[28]
set eUb=Ww[28]
set CZb=pUb
set VZb=eUb
call IssuePointOrder(LZb,XZb,CZb,VZb)
set BZb=nZb
set NZb=UNIT_TYPE_HERO
if IsUnitType(BZb,NZb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,28)
endif
else
set MZb=nZb
set wUb="attack"
set qUb=Qw[54]
set aUb=Ww[54]
set uUb=qUb
set rUb=aUb
call IssuePointOrder(MZb,wUb,uUb,rUb)
set sUb=nZb
set tUb=UNIT_TYPE_HERO
if IsUnitType(sUb,tUb) then
call SaveInteger(qu,GetHandleId(nZb),$6D6F7665,54)
endif
endif
endif
set nZb=null
set dZb=null
set fZb=null
set RZb=null
set gZb=null
set hZb=null
set FZb=null
set vZb=null
set mZb=null
set QZb=null
set UZb=null
set IZb=null
set PZb=null
set JZb=null
set KZb=null
set LZb=null
set BZb=null
set NZb=null
set MZb=null
set sUb=null
set tUb=null
endfunction
function OOu takes string aiu returns nothing
local integer niu
local integer diu
local unit fiu
local real Riu
local real Tiu
local player Yiu
local integer Giu
local integer giu
local unit hiu
local real Fiu
local real kiu
local player jiu
local integer xiu
local integer viu
local unit miu
local real Qiu
local real Wiu
local player Eiu
local integer Ziu
local unit Uiu
local unit Iiu
local unit Piu
local integer Aiu
local real Diu
local real Hiu
local integer Jiu
local unit Kiu
local unit Liu
local integer Xiu
local unit Ciu
local integer Viu
local unit Biu
local integer Niu
local unit Miu
local integer wSu
local string uSu
local real rSu
local player sSu
local unit tSu
local unit iSu
local integer SSu
local unit cSu
local integer oSu
local unit OSu
local integer lSu
local unit bSu
local integer ySu
local string pSu
local real eSu
local player qSu
local unit aSu
local unit nSu
local integer dSu
local unit fSu
local integer RSu
local unit TSu
local integer YSu
local unit GSu
local integer gSu
local string hSu
local real FSu
local player kSu
local unit jSu
local player xSu
local player vSu
local playerstate mSu
local unit QSu
local player WSu
local integer ESu
local player ZSu
local playerstate USu
local integer ISu
local unit PSu
local player ASu
local player DSu
local playerstate HSu
local unit JSu
local player KSu
local unit LSu
local unit XSu
local unit CSu
local player VSu
local unit BSu
local player NSu
local real MSu
local real wcu
local real ucu
local unit rcu
local string scu
local integer tcu
local real icu
local integer Scu
local string ccu
local unit ocu
local player Ocu
local player lcu
local playerstate bcu
local unit ycu
local player pcu
local integer ecu
local player qcu
local playerstate acu
local integer ncu
local unit dcu
local player fcu
local player Rcu
local playerstate Tcu
local unit Ycu
local player Gcu
local unit gcu
local unit hcu
local unit Fcu
local player kcu
local unit jcu
local player xcu
local real vcu
local real mcu
local real Qcu
local unit Wcu
local string Ecu
local integer Zcu
local real Ucu
local integer Icu
local string Pcu
local unit Acu
local player Dcu
local player Hcu
local playerstate Jcu
local unit Kcu
local player Lcu
local integer Xcu
local player Ccu
local playerstate Vcu
local integer Bcu
local unit Ncu
local player Mcu
local player wou
local playerstate uou
local unit rou
local player sou
local unit tou
local unit iou
local unit Sou
local player cou
local unit oou
local player Oou
local real lou
local real bou
local real you
local unit pou
local string eou
local integer qou
local real aou
local integer nou
local string dou
local unit fou
local unit Rou
local unit Tou
local unit You
local unit Gou
local real gou
local unit hou
local integer Fou
local unit kou
local integer jou
local integer xou
local unit vou
local integer mou
local unit Qou
local string Wou
local real Eou
local real Zou
local unit Uou
local unit Iou
local unit Pou
local unit Aou
local integer Dou
local unit Hou
local unit Jou
local unit Kou
local unit Lou
local unit Xou
local unit Cou
local integer Vou
local unit Bou
local integer Nou
local integer Mou
local unit wOu
local real uOu
local player rOu
local real sOu
local real tOu
local player iOu
local real SOu
local real cOu
local real oOu
set aW[qW]=aiu
set qW=qW+1
set niu=GetSpellAbilityId()
if niu==$41323843 then
set Liu=wl
set Xiu=$41323843
call UnitRemoveAbility(Liu,Xiu)
set Ciu=wl
set Viu=$41323844
call UnitRemoveAbility(Ciu,Viu)
set Biu=wl
set Niu=$41323845
call UnitRemoveAbility(Biu,Niu)
set Miu=wl
set wSu=$41323846
call UnitAddAbility(Miu,wSu)
set uSu="You Picked |cffFF4500Cult of the Cold Steel|r"
set rSu=10.
set tSu=wl
set sSu=GetOwningPlayer(tSu)
call DisplayTimedTextToPlayer(sSu,0.,0.,rSu,uSu)
endif
if niu==$41323844 then
set iSu=wl
set SSu=$41323843
call UnitRemoveAbility(iSu,SSu)
set cSu=wl
set oSu=$41323844
call UnitRemoveAbility(cSu,oSu)
set OSu=wl
set lSu=$41323845
call UnitRemoveAbility(OSu,lSu)
set bSu=wl
set ySu=$41323847
call UnitAddAbility(bSu,ySu)
set pSu="You Picked |cffFF0000Cult of the Dreadful Strength|r"
set eSu=10.
set aSu=wl
set qSu=GetOwningPlayer(aSu)
call DisplayTimedTextToPlayer(qSu,0.,0.,eSu,pSu)
endif
if niu==$41323845 then
set nSu=wl
set dSu=$41323843
call UnitRemoveAbility(nSu,dSu)
set fSu=wl
set RSu=$41323844
call UnitRemoveAbility(fSu,RSu)
set TSu=wl
set YSu=$41323845
call UnitRemoveAbility(TSu,YSu)
set GSu=wl
set gSu=$41323848
call UnitAddAbility(GSu,gSu)
set hSu="You Picked |cff9932CCCult of the Accursed Knowledge|r"
set FSu=10.
set jSu=wl
set kSu=GetOwningPlayer(jSu)
call DisplayTimedTextToPlayer(kSu,0.,0.,FSu,hSu)
endif
if niu==$41323934 then
set QSu=wl
set xSu=GetOwningPlayer(QSu)
set vSu=xSu
set mSu=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(vSu,mSu)>=5000 and ul==null then
set PSu=wl
set WSu=GetOwningPlayer(PSu)
set JSu=wl
set ASu=GetOwningPlayer(JSu)
set DSu=ASu
set HSu=PLAYER_STATE_RESOURCE_GOLD
set ESu=GetPlayerState(DSu,HSu)-5000
set ZSu=WSu
set USu=PLAYER_STATE_RESOURCE_GOLD
set ISu=ESu
call SetPlayerState(ZSu,USu,ISu)
set LSu=wl
set KSu=GetOwningPlayer(LSu)
set diu=GetPlayerId(KSu)
set hr[diu]=hr[diu]-5000
set Fr[diu]=Fr[diu]-5000
set fiu=GetSpellTargetUnit()
set XSu=fiu
set Riu=GetUnitX(XSu)
set CSu=fiu
set Tiu=GetUnitY(CSu)
set BSu=wl
set VSu=GetOwningPlayer(BSu)
set Yiu=Player(GetPlayerId(VSu)+4)
set rcu=wl
set NSu=GetOwningPlayer(rcu)
set MSu=Riu
set wcu=Tiu
set ucu=10.
if GetLocalPlayer()==NSu then
call PingMinimap(MSu,wcu,ucu)
endif
set scu="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 2975"
set aW[qW]=scu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set tcu=fF
set RF[tcu]=800
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 2975")
set tcu=0
endif
else
set dF=dF-1
set tcu=nF[dF]
set RF[tcu]=800
endif
set qW=qW-1
set Giu=tcu
set Wk[Giu]=Yiu
set Ek[Giu]=Riu
set Zk[Giu]=Tiu
set Uk[Giu]=fiu
set icu=5.
set Scu=Giu
set ccu="when calling doAfter in ArmyOfSkeletons, line 2975"
set aW[qW]=ccu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),icu,Scu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set ocu=wl
call DisplayTextToPlayer(GetOwningPlayer(ocu),0.,0.,"Not enough Gold or Bonelord is alive")
endif
endif
if niu==$41323935 then
set ycu=wl
set Ocu=GetOwningPlayer(ycu)
set lcu=Ocu
set bcu=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(lcu,bcu)>=5000 and ul==null then
set dcu=wl
set pcu=GetOwningPlayer(dcu)
set Ycu=wl
set fcu=GetOwningPlayer(Ycu)
set Rcu=fcu
set Tcu=PLAYER_STATE_RESOURCE_GOLD
set ecu=GetPlayerState(Rcu,Tcu)-5000
set qcu=pcu
set acu=PLAYER_STATE_RESOURCE_GOLD
set ncu=ecu
call SetPlayerState(qcu,acu,ncu)
set gcu=wl
set Gcu=GetOwningPlayer(gcu)
set giu=GetPlayerId(Gcu)
set hr[giu]=hr[giu]-5000
set Fr[giu]=Fr[giu]-5000
set hiu=GetSpellTargetUnit()
set hcu=hiu
set Fiu=GetUnitX(hcu)
set Fcu=hiu
set kiu=GetUnitY(Fcu)
set jcu=wl
set kcu=GetOwningPlayer(jcu)
set jiu=Player(GetPlayerId(kcu)+4)
set Wcu=wl
set xcu=GetOwningPlayer(Wcu)
set vcu=Fiu
set mcu=kiu
set Qcu=10.
if GetLocalPlayer()==xcu then
call PingMinimap(vcu,mcu,Qcu)
endif
set Ecu="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 3005"
set aW[qW]=Ecu
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Zcu=fF
set RF[Zcu]=801
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 3005")
set Zcu=0
endif
else
set dF=dF-1
set Zcu=nF[dF]
set RF[Zcu]=801
endif
set qW=qW-1
set xiu=Zcu
set Ik[xiu]=jiu
set Pk[xiu]=Fiu
set Ak[xiu]=kiu
set Dk[xiu]=hiu
set Ucu=5.
set Icu=xiu
set Pcu="when calling doAfter in ArmyOfSkeletons, line 3005"
set aW[qW]=Pcu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Ucu,Icu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set Acu=wl
call DisplayTextToPlayer(GetOwningPlayer(Acu),0.,0.,"Not enough Gold or Bonelord is alive")
endif
endif
if niu==$41323855 then
set Kcu=wl
set Dcu=GetOwningPlayer(Kcu)
set Hcu=Dcu
set Jcu=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(Hcu,Jcu)>=5000 and ul==null then
set Ncu=wl
set Lcu=GetOwningPlayer(Ncu)
set rou=wl
set Mcu=GetOwningPlayer(rou)
set wou=Mcu
set uou=PLAYER_STATE_RESOURCE_GOLD
set Xcu=GetPlayerState(wou,uou)-5000
set Ccu=Lcu
set Vcu=PLAYER_STATE_RESOURCE_GOLD
set Bcu=Xcu
call SetPlayerState(Ccu,Vcu,Bcu)
set tou=wl
set sou=GetOwningPlayer(tou)
set viu=GetPlayerId(sou)
set hr[viu]=hr[viu]-5000
set Fr[viu]=Fr[viu]-5000
set miu=GetSpellTargetUnit()
set iou=miu
set Qiu=GetUnitX(iou)
set Sou=miu
set Wiu=GetUnitY(Sou)
set oou=wl
set cou=GetOwningPlayer(oou)
set Eiu=Player(GetPlayerId(cou)+4)
set pou=wl
set Oou=GetOwningPlayer(pou)
set lou=Qiu
set bou=Wiu
set you=10.
if GetLocalPlayer()==Oou then
call PingMinimap(lou,bou,you)
endif
set eou="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons in ArmyOfSkeletons, line 3037"
set aW[qW]=eou
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set qou=fF
set RF[qou]=802
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 3037")
set qou=0
endif
else
set dF=dF-1
set qou=nF[dF]
set RF[qou]=802
endif
set qW=qW-1
set Ziu=qou
set Hk[Ziu]=Eiu
set Jk[Ziu]=Qiu
set Kk[Ziu]=Wiu
set Lk[Ziu]=miu
set aou=5.
set nou=Ziu
set dou="when calling doAfter in ArmyOfSkeletons, line 3037"
set aW[qW]=dou
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),aou,nou,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set fou=wl
call DisplayTextToPlayer(GetOwningPlayer(fou),0.,0.,"Not enough Gold or Bonelord is alive")
endif
endif
if niu==$41323947 then
set Uiu=GetSpellAbilityUnit()
set Rou=Uiu
set rOu=GetOwningPlayer(Rou)
set Tou=GetSpellTargetUnit()
set sOu=GetUnitX(Tou)
set You=GetSpellTargetUnit()
set Iiu=CreateUnit(rOu,$75303030,sOu,GetUnitY(You),0.)
set Gou=Iiu
set gou=3.
call UnitApplyTimedLife(Gou,$42544C46,gou)
set hou=Iiu
set Fou=$41323948
call UnitAddAbility(hou,Fou)
set kou=Iiu
set jou=$41323948
set vou=Uiu
set mou=$41323947
set xou=GetUnitAbilityLevel(vou,mou)
call SetUnitAbilityLevel(kou,jou,xou)
set Qou=Iiu
set Wou="silence"
set Uou=GetSpellTargetUnit()
set Iou=Uou
set tOu=GetUnitX(Iou)
set Pou=Uou
set cOu=tOu
set oOu=GetUnitY(Pou)
set Eou=cOu
set Zou=oOu
call IssuePointOrder(Qou,Wou,Eou,Zou)
endif
if niu==$41323952 then
set Piu=GetSpellAbilityUnit()
set Aou=Piu
set Dou=$41323952
set Aiu=GetUnitAbilityLevel(Aou,Dou)
set Hou=Piu
set Diu=GetUnitX(Hou)
set Jou=Piu
set Hiu=GetUnitY(Jou)
set Jiu=1
loop
exitwhen Jiu>8
set Kou=Piu
set iOu=GetOwningPlayer(Kou)
set Lou=Piu
set SOu=GetUnitX(Lou)
set Xou=Piu
set Kiu=CreateUnit(iOu,$75303030,SOu,GetUnitY(Xou),270.)
set Cou=Kiu
set Vou=$41323951
call UnitAddAbility(Cou,Vou)
set Bou=Kiu
set Nou=$41323951
set Mou=Aiu
call SetUnitAbilityLevel(Bou,Nou,Mou)
call IssuePointOrder(Kiu,"impale",Diu+100.*Cos(45.+I2R(Jiu)*45.*bj_DEGTORAD),Hiu+100.*Sin(45.+I2R(Jiu)*45.*bj_DEGTORAD))
set wOu=Kiu
set uOu=3.
call UnitApplyTimedLife(wOu,$42544C46,uOu)
set Jiu=Jiu+1
endloop
endif
set qW=qW-1
set fiu=null
set Yiu=null
set hiu=null
set jiu=null
set miu=null
set Eiu=null
set Uiu=null
set Iiu=null
set Piu=null
set Kiu=null
set Liu=null
set Ciu=null
set Biu=null
set Miu=null
set sSu=null
set tSu=null
set iSu=null
set cSu=null
set OSu=null
set bSu=null
set qSu=null
set aSu=null
set nSu=null
set fSu=null
set TSu=null
set GSu=null
set kSu=null
set jSu=null
set xSu=null
set vSu=null
set mSu=null
set QSu=null
set WSu=null
set ZSu=null
set USu=null
set PSu=null
set ASu=null
set DSu=null
set HSu=null
set JSu=null
set KSu=null
set LSu=null
set XSu=null
set CSu=null
set VSu=null
set BSu=null
set NSu=null
set rcu=null
set ocu=null
set Ocu=null
set lcu=null
set bcu=null
set ycu=null
set pcu=null
set qcu=null
set acu=null
set dcu=null
set fcu=null
set Rcu=null
set Tcu=null
set Ycu=null
set Gcu=null
set gcu=null
set hcu=null
set Fcu=null
set kcu=null
set jcu=null
set xcu=null
set Wcu=null
set Acu=null
set Dcu=null
set Hcu=null
set Jcu=null
set Kcu=null
set Lcu=null
set Ccu=null
set Vcu=null
set Ncu=null
set Mcu=null
set wou=null
set uou=null
set rou=null
set sou=null
set tou=null
set iou=null
set Sou=null
set cou=null
set oou=null
set Oou=null
set pou=null
set fou=null
set Rou=null
set Tou=null
set You=null
set Gou=null
set hou=null
set kou=null
set vou=null
set Qou=null
set Uou=null
set Iou=null
set Pou=null
set Aou=null
set Hou=null
set Jou=null
set Kou=null
set Lou=null
set Xou=null
set Cou=null
set Bou=null
set wOu=null
set rOu=null
set iOu=null
endfunction
function nVc takes nothing returns nothing
set qW=0
call OOu("via function reference ArmyOfSkeletons, line 2943")
endfunction
function nWo takes nothing returns boolean
local playerunitevent pWo
local code eWo
local playerunitevent qWo
local code aWo
set sg=CreateGroup()
set pWo=EVENT_PLAYER_UNIT_ISSUED_ORDER
set eWo=vuw
call emO(pWo,null,eWo,null)
set qWo=EVENT_PLAYER_UNIT_ATTACKED
set aWo=muw
call emO(qWo,null,aWo,null)
set pWo=null
set qWo=null
return true
endfunction
function nWp takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function n_O takes nothing returns nothing
local integer l_O=GetResearched()
local unit b_O
local unit y_O
local integer p_O
local integer e_O
local integer q_O
local player a_O
if l_O==$52303339 then
set b_O=GetTriggerUnit()
set y_O=b_O
set p_O=$414D3173
set q_O=$52303339
set a_O=tG
set e_O=GetPlayerTechCount(a_O,q_O,true)+1
call SetUnitAbilityLevel(y_O,p_O,e_O)
endif
if l_O==$52303341 then
set SG=SG+1
endif
set b_O=null
set y_O=null
set a_O=null
endfunction
function n_t takes nothing returns nothing
set qW=0
call K_i("via function reference PickBonusArakkoa, line 149")
endfunction
function nas takes nothing returns nothing
local unit I0s=GetTriggerUnit()
local unit Xws=I0s
local player P0s
local group A0s
local filterfunc D0s
local unit H0s
local group J0s
local real K0s
local real L0s
local integer X0s
local integer C0s
local integer V0s
local integer B0s
local integer N0s
local integer M0s
local integer w_s
local integer u_s
local integer r_s
local integer s_s
local integer t_s
local real i_s
local real S_s
local integer c_s
local integer o_s
local integer O_s
local integer l_s
local integer b_s
local integer y_s
local integer p_s
local integer e_s
local integer q_s
local integer a_s
local integer n_s
local real d_s
local real f_s
local integer R_s
local integer T_s
local integer Y_s
local integer G_s
local integer g_s
local integer h_s
local integer F_s
local integer k_s
local integer j_s
local integer x_s
local integer v_s
local real m_s
local real Q_s
local integer W_s
local integer E_s
local integer Z_s
local integer U_s
local integer I_s
local integer P_s
local integer A_s
local integer D_s
local integer H_s
local integer J_s
local integer K_s
local real L_s
local real X_s
local integer C_s
local integer V_s
local integer B_s
local integer N_s
local integer M_s
local integer wws
local integer uws
local integer rws
local integer sws
local integer tws
local integer iws
local real Sws
local real cws
local integer ows
local integer Ows
local integer lws
local integer bws
local integer yws
local integer pws
local integer ews
local integer qws
local integer aws
local integer nws
local integer dws
local real fws
local real Rws
local integer Tws
local integer Yws
local integer Gws
local integer gws
local integer hws
local integer Fws
local integer kws
local integer jws
local integer xws
local integer vws
local integer mws
local real Qws
local real Wws
local integer Ews
local integer Zws
local integer Uws
local integer Iws
local integer Pws
local integer Aws
local integer Dws
local integer Hws
local integer Jws
local integer Kws
local integer Lws
local unit Cws
local integer Vws
local player Bws
local unit Nws
local group Mws
local group wus
local unit uus
local unit rus
local unit sus
local unit tus
local integer ius
local unit Sus
local unit cus
local integer ous
local unit Ous
local integer lus
local unit bus
local integer yus
local integer pus
local unit eus
local unit qus
local integer aus
local unit nus
local integer dus
local unit fus
local integer Rus
local integer Tus
local unit Yus
local unit Gus
local integer gus
local unit hus
local integer Fus
local unit kus
local integer jus
local integer xus
local unit vus
local unit mus
local integer Qus
local unit Wus
local integer Eus
local unit Zus
local integer Uus
local integer Ius
local unit Pus
local unit Aus
local integer Dus
local unit Hus
local integer Jus
local unit Kus
local integer Lus
local unit Xus
local integer Cus
local integer Vus
local unit Bus
local integer Nus
local unit Mus
local integer wrs
local integer urs
local unit rrs
local unit srs
local integer trs
local unit irs
local unit Srs
local integer crs
local unit ors
local unit Ors
local integer lrs
local unit brs
local integer yrs
local unit prs
local integer ers
local integer qrs
local unit ars
local unit nrs
local integer drs
local unit frs
local integer Rrs
local unit Trs
local integer Yrs
local integer Grs
local unit grs
local unit hrs
local integer Frs
local unit krs
local integer jrs
local unit xrs
local integer vrs
local integer mrs
local unit Qrs
local unit Wrs
local integer Ers
local unit Zrs
local integer Urs
local unit Irs
local integer Prs
local integer Ars
local unit Drs
local unit Hrs
local integer Jrs
local unit Krs
local integer Lrs
local unit Xrs
local integer Crs
local integer Vrs
local unit Brs
local unit Nrs
local unit Mrs
local integer wss
local unit uss
local unit rss
local integer sss
local unit tss
local integer iss
local unit Sss
local integer css
local integer oss
local unit Oss
local unit lss
local integer bss
local unit yss
local integer pss
local unit ess
local integer qss
local integer ass
local unit nss
local unit dss
local integer fss
local unit Rss
local integer Tss
local unit Yss
local integer Gss
local integer gss
local unit hss
local unit Fss
local integer kss
local unit jss
local integer xss
local unit vss
local integer mss
local integer Qss
local unit Wss
local unit Ess
local integer Zss
local unit Uss
local integer Iss
local unit Pss
local integer Ass
local unit Dss
local integer Hss
local integer Jss
local unit Kss
local integer Lss
local unit Xss
local integer Css
local integer Vss
local unit Bss
local unit Nss
local integer Mss
local unit wts
local unit uts
local integer rts
local unit sts
local unit tts
local integer its
local unit Sts
local integer cts
local unit ots
local integer Ots
local integer lts
local unit bts
local unit yts
local integer pts
local unit ets
local integer qts
local unit ats
local integer nts
local integer dts
local unit fts
local unit Rts
local integer Tts
local unit Yts
local integer Gts
local unit gts
local integer hts
local integer Fts
local unit kts
local unit jts
local integer xts
local unit vts
local integer mts
local unit Qts
local integer Wts
local integer Ets
local unit Zts
local unit Uts
local integer Its
local unit Pts
local integer Ats
local unit Dts
local integer Hts
local integer Jts
local unit Kts
local unit Lts
local unit Xts
local integer Cts
local unit Vts
local unit Bts
local integer Nts
local unit Mts
local integer wis
local unit uis
local integer ris
local integer sis
local unit tis
local unit iis
local integer Sis
local unit cis
local integer ois
local unit Ois
local integer lis
local integer bis
local unit yis
local unit pis
local integer eis
local unit qis
local integer ais
local unit nis
local integer dis
local integer fis
local unit Ris
local unit Tis
local integer Yis
local unit Gis
local integer gis
local unit his
local integer Fis
local integer kis
local unit jis
local unit xis
local integer vis
local unit mis
local integer Qis
local unit Wis
local integer Eis
local unit Zis
local integer Uis
local integer Iis
local unit Pis
local integer Ais
local unit Dis
local integer His
local integer Jis
local unit Kis
local unit Lis
local integer Xis
local unit Cis
local unit Vis
local integer Bis
local unit Nis
local unit Mis
local integer wSs
local unit uSs
local integer rSs
local unit sSs
local integer tSs
local integer iSs
local unit SSs
local unit cSs
local integer oSs
local unit OSs
local integer lSs
local unit bSs
local integer ySs
local integer pSs
local unit eSs
local unit qSs
local integer aSs
local unit nSs
local integer dSs
local unit fSs
local integer RSs
local integer TSs
local unit YSs
local unit GSs
local integer gSs
local unit hSs
local integer FSs
local unit kSs
local integer jSs
local integer xSs
local unit vSs
local unit mSs
local integer QSs
local unit WSs
local integer ESs
local unit ZSs
local integer USs
local integer ISs
local unit PSs
local unit ASs
local unit DSs
local integer HSs
local unit JSs
local unit KSs
local integer LSs
local unit XSs
local integer CSs
local unit VSs
local integer BSs
local integer NSs
local unit MSs
local unit wcs
local integer ucs
local unit rcs
local integer scs
local unit tcs
local integer ics
local integer Scs
local unit ccs
local unit ocs
local integer Ocs
local unit lcs
local integer bcs
local unit ycs
local integer pcs
local integer ecs
local unit qcs
local unit acs
local integer ncs
local unit dcs
local integer fcs
local unit Rcs
local integer Tcs
local integer Ycs
local unit Gcs
local unit gcs
local integer hcs
local unit Fcs
local integer kcs
local unit jcs
local integer xcs
local unit vcs
local integer mcs
local integer Qcs
local unit Wcs
local integer Ecs
local unit Zcs
local integer Ucs
local integer Ics
local unit Pcs
local unit Acs
local integer Dcs
local unit Hcs
local unit Jcs
local integer Kcs
local unit Lcs
local unit Xcs
local integer Ccs
local unit Vcs
local integer Bcs
local unit Ncs
local integer Mcs
local integer wos
local unit uos
local unit ros
local integer sos
local unit tos
local integer ios
local unit Sos
local integer cos
local integer oos
local unit Oos
local unit los
local integer bos
local unit yos
local integer pos
local unit eos
local integer qos
local integer aos
local unit nos
local unit dos
local integer fos
local unit Ros
local integer Tos
local unit Yos
local integer Gos
local integer gos
local unit hos
local unit Fos
local integer kos
local unit jos
local integer xos
local unit vos
local integer mos
local integer Qos
local unit Wos
local unit Eos
local unit Zos
local integer Uos
local unit Ios
local unit Pos
local integer Aos
local unit Dos
local integer Hos
local unit Jos
local integer Kos
local integer Los
local unit Xos
local unit Vos
local integer Bos
local unit Nos
local integer Mos
local unit wOs
local integer uOs
local integer rOs
local unit sOs
local unit tOs
local integer iOs
local unit SOs
local integer cOs
local unit oOs
local integer OOs
local integer lOs
local unit bOs
local unit yOs
local integer pOs
local unit eOs
local integer qOs
local unit aOs
local integer nOs
local integer dOs
local unit fOs
local unit ROs
local integer TOs
local unit YOs
local integer GOs
local unit gOs
local integer hOs
local unit FOs
local integer kOs
local integer jOs
local unit xOs
local integer vOs
local unit mOs
local integer QOs
local integer WOs
local unit EOs
local unit ZOs
local integer UOs
local unit IOs
local unit POs
local integer AOs
local unit DOs
local unit HOs
local integer JOs
local unit KOs
local integer LOs
local unit XOs
local integer COs
local integer VOs
local unit BOs
local unit NOs
local integer MOs
local unit wls
local integer uls
local unit rls
local integer sls
local integer tls
local unit ils
local unit Sls
local integer cls
local unit ols
local integer Ols
local unit lls
local integer bls
local integer yls
local unit pls
local unit els
local integer qls
local unit als
local integer nls
local unit dls
local integer fls
local integer Rls
local unit Tls
local unit Yls
local integer Gls
local unit gls
local integer hls
local unit Fls
local integer kls
local integer jls
local unit xls
local unit vls
local unit mls
local integer Qls
local unit Wls
local unit Els
local integer Zls
local unit Uls
local integer Ils
local unit Pls
local integer Als
local integer Dls
local unit Hls
local unit Jls
local integer Kls
local unit Lls
local integer Xls
local unit Cls
local integer Vls
local integer Bls
local unit Nls
local unit Mls
local integer wbs
local unit ubs
local integer rbs
local unit sbs
local integer tbs
local integer ibs
local unit Sbs
local unit cbs
local integer obs
local unit Obs
local integer lbs
local unit bbs
local integer ybs
local integer pbs
local unit ebs
local unit qbs
local integer abs
local unit nbs
local integer dbs
local unit fbs
local integer Rbs
local unit Tbs
local integer Ybs
local integer Gbs
local unit gbs
local integer hbs
local unit Fbs
local integer kbs
local integer jbs
local unit xbs
local unit vbs
local integer mbs
local unit Qbs
local unit Wbs
local integer Ebs
local unit Zbs
local unit Ubs
local integer Ibs
local unit Pbs
local integer Abs
local unit Dbs
local integer Hbs
local integer Jbs
local unit Kbs
local unit Lbs
local integer Xbs
local unit Cbs
local integer Vbs
local unit Bbs
local integer Nbs
local integer Mbs
local unit wys
local unit uys
local integer rys
local unit sys
local integer tys
local unit iys
local integer Sys
local integer cys
local unit oys
local unit Oys
local integer lys
local unit bys
local integer yys
local unit pys
local integer eys
local integer qys
local unit ays
local unit nys
local integer dys
local unit fys
local integer Rys
local unit Tys
local integer Yys
local integer Gys
local unit gys
local unit hys
local unit Fys
local integer kys
local unit jys
local unit xys
local integer vys
local unit mys
local integer Qys
local unit Wys
local integer Eys
local integer Zys
local unit Uys
local unit Iys
local integer Pys
local unit Ays
local integer Dys
local unit Hys
local integer Jys
local integer Kys
local unit Lys
local unit Xys
local integer Cys
local unit Vys
local integer Bys
local unit Nys
local integer Mys
local integer wps
local unit ups
local unit rps
local integer sps
local unit tps
local integer ips
local unit Sps
local integer cps
local integer ops
local unit Ops
local unit lps
local integer bps
local unit yps
local integer pps
local unit eps
local integer qps
local unit aps
local integer nps
local integer dps
local unit fps
local integer Rps
local unit Tps
local integer Yps
local integer Gps
local unit gps
local unit hps
local integer Fps
local unit kps
local unit jps
local integer xps
local unit vps
local unit mps
local integer Qps
local unit Wps
local integer Eps
local unit Zps
local integer Ups
local integer Ips
local unit Pps
local unit Aps
local integer Dps
local unit Hps
local integer Jps
local unit Kps
local integer Lps
local integer Xps
local unit Cps
local unit Vps
local integer Bps
local unit Nps
local integer Mps
local unit wes
local integer ues
local integer res
local unit ses
local unit tes
local integer ies
local unit Ses
local integer ces
local unit oes
local integer Oes
local integer les
local unit bes
local unit yes
local integer pes
local unit ees
local integer qes
local unit aes
local integer nes
local integer des
local unit fes
local unit Res
local unit Tes
local integer Yes
local unit Ges
local unit ges
local integer hes
local unit Fes
local integer kes
local unit jes
local integer xes
local integer ves
local unit mes
local unit Qes
local integer Wes
local unit Ees
local integer Zes
local unit Ues
local integer Ies
local integer Pes
local unit Aes
local unit Des
local integer Hes
local unit Jes
local integer Kes
local unit Les
local integer Xes
local integer Ces
local unit Ves
local unit Bes
local integer Nes
local unit Mes
local integer wqs
local unit uqs
local integer rqs
local integer sqs
local unit tqs
local unit iqs
local integer Sqs
local unit cqs
local integer oqs
local unit Oqs
local integer lqs
local unit bqs
local integer yqs
local integer pqs
local unit eqs
local integer qqs
local unit aqs
local integer nqs
local integer dqs
local unit fqs
local unit Rqs
local integer Tqs
local unit Yqs
local unit Gqs
local integer gqs
local unit hqs
local unit Fqs
local integer kqs
local unit jqs
local integer xqs
local unit vqs
local integer mqs
local integer Qqs
local unit Wqs
local unit Eqs
local integer Zqs
local unit Uqs
local integer Iqs
local unit Pqs
local integer Aqs
local integer Dqs
local unit Hqs
local unit Jqs
local integer Kqs
local unit Lqs
local integer Xqs
local unit Cqs
local integer Vqs
local integer Bqs
local unit Nqs
local unit Mqs
local integer was
local unit uas
local integer ras
local unit sas
local integer tas
local integer ias
local unit Sas
local unit cas
local integer oas
local unit Oas
local integer las
local unit bas
local integer yas
local integer pas
local group eas
local boolexpr qas
local boolean aas
if GetUnitTypeId(Xws)==$4F303344 then
set Cws=I0s
set Vws=$49303138
set aas=RTS(Cws,Vws)!=null==true
else
set aas=false
endif
if aas then
set fq=true
set Nws=I0s
set Bws=GetOwningPlayer(Nws)
set P0s=Player(GetPlayerId(Bws)-4)
set A0s=CreateGroup()
set D0s=Filter(i5)
call GroupEnumUnitsInRect(A0s,bj_mapInitialPlayableArea,D0s)
set J0s=A0s
loop
set Mws=J0s
exitwhen not (FirstOfGroup(Mws)!=null)
set wus=J0s
set uus=FirstOfGroup(wus)
call GroupRemoveUnit(wus,uus)
set H0s=uus
if H0s==G[1] then
set rus=G[1]
set K0s=GetUnitX(rus)
set sus=G[1]
set L0s=GetUnitY(sus)
set h[1]=CreateUnit(P0s,$6E303349,K0s,L0s,0.)
set tus=h[1]
set ius=$4545564F
call UnitAddAbility(tus,ius)
set Sus=G[1]
if GetUnitTypeId(Sus)==$6E676164 then
set cus=G[1]
set ous=$41303042
set X0s=GetUnitAbilityLevel(cus,ous)
set Ous=h[1]
set lus=$41313641
call UnitAddAbility(Ous,lus)
set bus=h[1]
set yus=$41313641
set pus=X0s
call SetUnitAbilityLevel(bus,yus,pus)
endif
set eus=G[1]
if GetUnitTypeId(eus)==$6E64727A then
set qus=G[1]
set aus=$41303852
set C0s=GetUnitAbilityLevel(qus,aus)
set nus=h[1]
set dus=$41313630
call UnitAddAbility(nus,dus)
set fus=h[1]
set Rus=$41313630
set Tus=C0s
call SetUnitAbilityLevel(fus,Rus,Tus)
endif
set Yus=G[1]
if GetUnitTypeId(Yus)==$6E647267 then
set Gus=G[1]
set gus=$41303856
set V0s=GetUnitAbilityLevel(Gus,gus)
set hus=h[1]
set Fus=$41313642
call UnitAddAbility(hus,Fus)
set kus=h[1]
set jus=$41313642
set xus=V0s
call SetUnitAbilityLevel(kus,jus,xus)
endif
set vus=G[1]
if GetUnitTypeId(vus)==$6E676D65 then
set mus=G[1]
set Qus=$4130384F
set B0s=GetUnitAbilityLevel(mus,Qus)
set Wus=h[1]
set Eus=$41313631
call UnitAddAbility(Wus,Eus)
set Zus=h[1]
set Uus=$41313631
set Ius=B0s
call SetUnitAbilityLevel(Zus,Uus,Ius)
endif
set Pus=G[1]
if GetUnitTypeId(Pus)==$6E647272 then
set Aus=G[1]
set Dus=$41303858
set N0s=GetUnitAbilityLevel(Aus,Dus)
set Hus=G[1]
set Jus=$41303859
set M0s=GetUnitAbilityLevel(Hus,Jus)
set Kus=h[1]
set Lus=$41313632
call UnitAddAbility(Kus,Lus)
set Xus=h[1]
set Cus=$41313633
set Vus=N0s
call SetUnitAbilityLevel(Xus,Cus,Vus)
set Bus=h[1]
set Nus=$41313632
call UnitAddAbility(Bus,Nus)
set Mus=h[1]
set wrs=$41313633
set urs=M0s
call SetUnitAbilityLevel(Mus,wrs,urs)
endif
set rrs=G[1]
if GetUnitTypeId(rrs)==$6E6D7232 then
set srs=h[1]
set trs=$41303853
call UnitAddAbility(srs,trs)
endif
set irs=G[1]
if GetUnitTypeId(irs)==$6E676F6C then
set Srs=h[1]
set crs=$41303853
call UnitAddAbility(Srs,crs)
endif
set ors=G[1]
if GetUnitTypeId(ors)==$6E64726F then
set Ors=G[1]
set lrs=$41303855
set w_s=GetUnitAbilityLevel(Ors,lrs)
set brs=h[1]
set yrs=$41313635
call UnitAddAbility(brs,yrs)
set prs=h[1]
set ers=$41313635
set qrs=w_s
call SetUnitAbilityLevel(prs,ers,qrs)
endif
set ars=G[1]
if GetUnitTypeId(ars)==$6E776774 then
set nrs=G[1]
set drs=$41303850
set u_s=GetUnitAbilityLevel(nrs,drs)
set frs=h[1]
set Rrs=$41313636
call UnitAddAbility(frs,Rrs)
set Trs=h[1]
set Yrs=$41313636
set Grs=u_s
call SetUnitAbilityLevel(Trs,Yrs,Grs)
endif
set grs=G[1]
if GetUnitTypeId(grs)==$6E647275 then
set hrs=G[1]
set Frs=$4130384E
set r_s=GetUnitAbilityLevel(hrs,Frs)
set krs=h[1]
set jrs=$41313637
call UnitAddAbility(krs,jrs)
set xrs=h[1]
set vrs=$41313637
set mrs=r_s
call SetUnitAbilityLevel(xrs,vrs,mrs)
endif
set Qrs=G[1]
if GetUnitTypeId(Qrs)==$6E666F68 then
set Wrs=G[1]
set Ers=$4130384D
set s_s=GetUnitAbilityLevel(Wrs,Ers)
set Zrs=h[1]
set Urs=$41313638
call UnitAddAbility(Zrs,Urs)
set Irs=h[1]
set Prs=$41313638
set Ars=s_s
call SetUnitAbilityLevel(Irs,Prs,Ars)
endif
set Drs=G[1]
if GetUnitTypeId(Drs)==$6E64726B then
set Hrs=G[1]
set Jrs=$41303851
set t_s=GetUnitAbilityLevel(Hrs,Jrs)
set Krs=h[1]
set Lrs=$41313639
call UnitAddAbility(Krs,Lrs)
set Xrs=h[1]
set Crs=$41313639
set Vrs=t_s
call SetUnitAbilityLevel(Xrs,Crs,Vrs)
endif
endif
if H0s==G[2] then
set Brs=G[2]
set i_s=GetUnitX(Brs)
set Nrs=G[2]
set S_s=GetUnitY(Nrs)
set h[2]=CreateUnit(P0s,$6E303349,i_s,S_s,0.)
set Mrs=h[2]
set wss=$4545564F
call UnitAddAbility(Mrs,wss)
set uss=G[2]
if GetUnitTypeId(uss)==$6E676164 then
set rss=G[2]
set sss=$41303042
set c_s=GetUnitAbilityLevel(rss,sss)
set tss=h[2]
set iss=$41313641
call UnitAddAbility(tss,iss)
set Sss=h[2]
set css=$41313641
set oss=c_s
call SetUnitAbilityLevel(Sss,css,oss)
endif
set Oss=G[2]
if GetUnitTypeId(Oss)==$6E64727A then
set lss=G[2]
set bss=$41303852
set o_s=GetUnitAbilityLevel(lss,bss)
set yss=h[2]
set pss=$41313630
call UnitAddAbility(yss,pss)
set ess=h[2]
set qss=$41313630
set ass=o_s
call SetUnitAbilityLevel(ess,qss,ass)
endif
set nss=G[2]
if GetUnitTypeId(nss)==$6E647267 then
set dss=G[2]
set fss=$41303856
set O_s=GetUnitAbilityLevel(dss,fss)
set Rss=h[2]
set Tss=$41313642
call UnitAddAbility(Rss,Tss)
set Yss=h[2]
set Gss=$41313642
set gss=O_s
call SetUnitAbilityLevel(Yss,Gss,gss)
endif
set hss=G[2]
if GetUnitTypeId(hss)==$6E676D65 then
set Fss=G[2]
set kss=$4130384F
set l_s=GetUnitAbilityLevel(Fss,kss)
set jss=h[2]
set xss=$41313631
call UnitAddAbility(jss,xss)
set vss=h[2]
set mss=$41313631
set Qss=l_s
call SetUnitAbilityLevel(vss,mss,Qss)
endif
set Wss=G[2]
if GetUnitTypeId(Wss)==$6E647272 then
set Ess=G[2]
set Zss=$41303858
set b_s=GetUnitAbilityLevel(Ess,Zss)
set Uss=G[2]
set Iss=$41303859
set y_s=GetUnitAbilityLevel(Uss,Iss)
set Pss=h[2]
set Ass=$41313632
call UnitAddAbility(Pss,Ass)
set Dss=h[2]
set Hss=$41313633
set Jss=b_s
call SetUnitAbilityLevel(Dss,Hss,Jss)
set Kss=h[2]
set Lss=$41313632
call UnitAddAbility(Kss,Lss)
set Xss=h[2]
set Css=$41313633
set Vss=y_s
call SetUnitAbilityLevel(Xss,Css,Vss)
endif
set Bss=G[2]
if GetUnitTypeId(Bss)==$6E6D7232 then
set Nss=h[2]
set Mss=$41303853
call UnitAddAbility(Nss,Mss)
endif
set wts=G[2]
if GetUnitTypeId(wts)==$6E676F6C then
set uts=h[2]
set rts=$41303853
call UnitAddAbility(uts,rts)
endif
set sts=G[2]
if GetUnitTypeId(sts)==$6E64726F then
set tts=G[2]
set its=$41303855
set p_s=GetUnitAbilityLevel(tts,its)
set Sts=h[2]
set cts=$41313635
call UnitAddAbility(Sts,cts)
set ots=h[2]
set Ots=$41313635
set lts=p_s
call SetUnitAbilityLevel(ots,Ots,lts)
endif
set bts=G[2]
if GetUnitTypeId(bts)==$6E776774 then
set yts=G[2]
set pts=$41303850
set e_s=GetUnitAbilityLevel(yts,pts)
set ets=h[2]
set qts=$41313636
call UnitAddAbility(ets,qts)
set ats=h[2]
set nts=$41313636
set dts=e_s
call SetUnitAbilityLevel(ats,nts,dts)
endif
set fts=G[2]
if GetUnitTypeId(fts)==$6E647275 then
set Rts=G[2]
set Tts=$4130384E
set q_s=GetUnitAbilityLevel(Rts,Tts)
set Yts=h[2]
set Gts=$41313637
call UnitAddAbility(Yts,Gts)
set gts=h[2]
set hts=$41313637
set Fts=q_s
call SetUnitAbilityLevel(gts,hts,Fts)
endif
set kts=G[2]
if GetUnitTypeId(kts)==$6E666F68 then
set jts=G[2]
set xts=$4130384D
set a_s=GetUnitAbilityLevel(jts,xts)
set vts=h[2]
set mts=$41313638
call UnitAddAbility(vts,mts)
set Qts=h[2]
set Wts=$41313638
set Ets=a_s
call SetUnitAbilityLevel(Qts,Wts,Ets)
endif
set Zts=G[2]
if GetUnitTypeId(Zts)==$6E64726B then
set Uts=G[2]
set Its=$41303851
set n_s=GetUnitAbilityLevel(Uts,Its)
set Pts=h[2]
set Ats=$41313639
call UnitAddAbility(Pts,Ats)
set Dts=h[2]
set Hts=$41313639
set Jts=n_s
call SetUnitAbilityLevel(Dts,Hts,Jts)
endif
endif
if H0s==G[3] then
set Kts=G[3]
set d_s=GetUnitX(Kts)
set Lts=G[3]
set f_s=GetUnitY(Lts)
set h[3]=CreateUnit(P0s,$6E303349,d_s,f_s,0.)
set Xts=h[3]
set Cts=$4545564F
call UnitAddAbility(Xts,Cts)
set Vts=G[3]
if GetUnitTypeId(Vts)==$6E676164 then
set Bts=G[3]
set Nts=$41303042
set R_s=GetUnitAbilityLevel(Bts,Nts)
set Mts=h[3]
set wis=$41313641
call UnitAddAbility(Mts,wis)
set uis=h[3]
set ris=$41313641
set sis=R_s
call SetUnitAbilityLevel(uis,ris,sis)
endif
set tis=G[3]
if GetUnitTypeId(tis)==$6E64727A then
set iis=G[3]
set Sis=$41303852
set T_s=GetUnitAbilityLevel(iis,Sis)
set cis=h[3]
set ois=$41313630
call UnitAddAbility(cis,ois)
set Ois=h[3]
set lis=$41313630
set bis=T_s
call SetUnitAbilityLevel(Ois,lis,bis)
endif
set yis=G[3]
if GetUnitTypeId(yis)==$6E647267 then
set pis=G[3]
set eis=$41303856
set Y_s=GetUnitAbilityLevel(pis,eis)
set qis=h[3]
set ais=$41313642
call UnitAddAbility(qis,ais)
set nis=h[3]
set dis=$41313642
set fis=Y_s
call SetUnitAbilityLevel(nis,dis,fis)
endif
set Ris=G[3]
if GetUnitTypeId(Ris)==$6E676D65 then
set Tis=G[3]
set Yis=$4130384F
set G_s=GetUnitAbilityLevel(Tis,Yis)
set Gis=h[3]
set gis=$41313631
call UnitAddAbility(Gis,gis)
set his=h[3]
set Fis=$41313631
set kis=G_s
call SetUnitAbilityLevel(his,Fis,kis)
endif
set jis=G[3]
if GetUnitTypeId(jis)==$6E647272 then
set xis=G[3]
set vis=$41303858
set g_s=GetUnitAbilityLevel(xis,vis)
set mis=G[3]
set Qis=$41303859
set h_s=GetUnitAbilityLevel(mis,Qis)
set Wis=h[3]
set Eis=$41313632
call UnitAddAbility(Wis,Eis)
set Zis=h[3]
set Uis=$41313633
set Iis=g_s
call SetUnitAbilityLevel(Zis,Uis,Iis)
set Pis=h[3]
set Ais=$41313632
call UnitAddAbility(Pis,Ais)
set Dis=h[3]
set His=$41313633
set Jis=h_s
call SetUnitAbilityLevel(Dis,His,Jis)
endif
set Kis=G[3]
if GetUnitTypeId(Kis)==$6E6D7232 then
set Lis=h[3]
set Xis=$41303853
call UnitAddAbility(Lis,Xis)
endif
set Cis=G[3]
if GetUnitTypeId(Cis)==$6E676F6C then
set Vis=h[3]
set Bis=$41303853
call UnitAddAbility(Vis,Bis)
endif
set Nis=G[3]
if GetUnitTypeId(Nis)==$6E64726F then
set Mis=G[3]
set wSs=$41303855
set F_s=GetUnitAbilityLevel(Mis,wSs)
set uSs=h[3]
set rSs=$41313635
call UnitAddAbility(uSs,rSs)
set sSs=h[3]
set tSs=$41313635
set iSs=F_s
call SetUnitAbilityLevel(sSs,tSs,iSs)
endif
set SSs=G[3]
if GetUnitTypeId(SSs)==$6E776774 then
set cSs=G[3]
set oSs=$41303850
set k_s=GetUnitAbilityLevel(cSs,oSs)
set OSs=h[3]
set lSs=$41313636
call UnitAddAbility(OSs,lSs)
set bSs=h[3]
set ySs=$41313636
set pSs=k_s
call SetUnitAbilityLevel(bSs,ySs,pSs)
endif
set eSs=G[3]
if GetUnitTypeId(eSs)==$6E647275 then
set qSs=G[3]
set aSs=$4130384E
set j_s=GetUnitAbilityLevel(qSs,aSs)
set nSs=h[3]
set dSs=$41313637
call UnitAddAbility(nSs,dSs)
set fSs=h[3]
set RSs=$41313637
set TSs=j_s
call SetUnitAbilityLevel(fSs,RSs,TSs)
endif
set YSs=G[3]
if GetUnitTypeId(YSs)==$6E666F68 then
set GSs=G[3]
set gSs=$4130384D
set x_s=GetUnitAbilityLevel(GSs,gSs)
set hSs=h[3]
set FSs=$41313638
call UnitAddAbility(hSs,FSs)
set kSs=h[3]
set jSs=$41313638
set xSs=x_s
call SetUnitAbilityLevel(kSs,jSs,xSs)
endif
set vSs=G[3]
if GetUnitTypeId(vSs)==$6E64726B then
set mSs=G[3]
set QSs=$41303851
set v_s=GetUnitAbilityLevel(mSs,QSs)
set WSs=h[3]
set ESs=$41313639
call UnitAddAbility(WSs,ESs)
set ZSs=h[3]
set USs=$41313639
set ISs=v_s
call SetUnitAbilityLevel(ZSs,USs,ISs)
endif
endif
if H0s==G[4] then
set PSs=G[4]
set m_s=GetUnitX(PSs)
set ASs=G[4]
set Q_s=GetUnitY(ASs)
set h[4]=CreateUnit(P0s,$6E303349,m_s,Q_s,0.)
set DSs=h[4]
set HSs=$4545564F
call UnitAddAbility(DSs,HSs)
set JSs=G[4]
if GetUnitTypeId(JSs)==$6E676164 then
set KSs=G[4]
set LSs=$41303042
set W_s=GetUnitAbilityLevel(KSs,LSs)
set XSs=h[4]
set CSs=$41313641
call UnitAddAbility(XSs,CSs)
set VSs=h[4]
set BSs=$41313641
set NSs=W_s
call SetUnitAbilityLevel(VSs,BSs,NSs)
endif
set MSs=G[4]
if GetUnitTypeId(MSs)==$6E64727A then
set wcs=G[4]
set ucs=$41303852
set E_s=GetUnitAbilityLevel(wcs,ucs)
set rcs=h[4]
set scs=$41313630
call UnitAddAbility(rcs,scs)
set tcs=h[4]
set ics=$41313630
set Scs=E_s
call SetUnitAbilityLevel(tcs,ics,Scs)
endif
set ccs=G[4]
if GetUnitTypeId(ccs)==$6E647267 then
set ocs=G[4]
set Ocs=$41303856
set Z_s=GetUnitAbilityLevel(ocs,Ocs)
set lcs=h[4]
set bcs=$41313642
call UnitAddAbility(lcs,bcs)
set ycs=h[4]
set pcs=$41313642
set ecs=Z_s
call SetUnitAbilityLevel(ycs,pcs,ecs)
endif
set qcs=G[4]
if GetUnitTypeId(qcs)==$6E676D65 then
set acs=G[4]
set ncs=$4130384F
set U_s=GetUnitAbilityLevel(acs,ncs)
set dcs=h[4]
set fcs=$41313631
call UnitAddAbility(dcs,fcs)
set Rcs=h[4]
set Tcs=$41313631
set Ycs=U_s
call SetUnitAbilityLevel(Rcs,Tcs,Ycs)
endif
set Gcs=G[4]
if GetUnitTypeId(Gcs)==$6E647272 then
set gcs=G[4]
set hcs=$41303858
set I_s=GetUnitAbilityLevel(gcs,hcs)
set Fcs=G[4]
set kcs=$41303859
set P_s=GetUnitAbilityLevel(Fcs,kcs)
set jcs=h[4]
set xcs=$41313632
call UnitAddAbility(jcs,xcs)
set vcs=h[4]
set mcs=$41313633
set Qcs=I_s
call SetUnitAbilityLevel(vcs,mcs,Qcs)
set Wcs=h[4]
set Ecs=$41313632
call UnitAddAbility(Wcs,Ecs)
set Zcs=h[4]
set Ucs=$41313633
set Ics=P_s
call SetUnitAbilityLevel(Zcs,Ucs,Ics)
endif
set Pcs=G[4]
if GetUnitTypeId(Pcs)==$6E6D7232 then
set Acs=h[4]
set Dcs=$41303853
call UnitAddAbility(Acs,Dcs)
endif
set Hcs=G[4]
if GetUnitTypeId(Hcs)==$6E676F6C then
set Jcs=h[4]
set Kcs=$41303853
call UnitAddAbility(Jcs,Kcs)
endif
set Lcs=G[4]
if GetUnitTypeId(Lcs)==$6E64726F then
set Xcs=G[4]
set Ccs=$41303855
set A_s=GetUnitAbilityLevel(Xcs,Ccs)
set Vcs=h[4]
set Bcs=$41313635
call UnitAddAbility(Vcs,Bcs)
set Ncs=h[4]
set Mcs=$41313635
set wos=A_s
call SetUnitAbilityLevel(Ncs,Mcs,wos)
endif
set uos=G[4]
if GetUnitTypeId(uos)==$6E776774 then
set ros=G[4]
set sos=$41303850
set D_s=GetUnitAbilityLevel(ros,sos)
set tos=h[4]
set ios=$41313636
call UnitAddAbility(tos,ios)
set Sos=h[4]
set cos=$41313636
set oos=D_s
call SetUnitAbilityLevel(Sos,cos,oos)
endif
set Oos=G[4]
if GetUnitTypeId(Oos)==$6E647275 then
set los=G[4]
set bos=$4130384E
set H_s=GetUnitAbilityLevel(los,bos)
set yos=h[4]
set pos=$41313637
call UnitAddAbility(yos,pos)
set eos=h[4]
set qos=$41313637
set aos=H_s
call SetUnitAbilityLevel(eos,qos,aos)
endif
set nos=G[4]
if GetUnitTypeId(nos)==$6E666F68 then
set dos=G[4]
set fos=$4130384D
set J_s=GetUnitAbilityLevel(dos,fos)
set Ros=h[4]
set Tos=$41313638
call UnitAddAbility(Ros,Tos)
set Yos=h[4]
set Gos=$41313638
set gos=J_s
call SetUnitAbilityLevel(Yos,Gos,gos)
endif
set hos=G[4]
if GetUnitTypeId(hos)==$6E64726B then
set Fos=G[4]
set kos=$41303851
set K_s=GetUnitAbilityLevel(Fos,kos)
set jos=h[4]
set xos=$41313639
call UnitAddAbility(jos,xos)
set vos=h[4]
set mos=$41313639
set Qos=K_s
call SetUnitAbilityLevel(vos,mos,Qos)
endif
endif
if H0s==G[5] then
set Wos=G[5]
set L_s=GetUnitX(Wos)
set Eos=G[5]
set X_s=GetUnitY(Eos)
set h[5]=CreateUnit(P0s,$6E303349,L_s,X_s,0.)
set Zos=h[5]
set Uos=$4545564F
call UnitAddAbility(Zos,Uos)
set Ios=G[5]
if GetUnitTypeId(Ios)==$6E676164 then
set Pos=G[5]
set Aos=$41303042
set C_s=GetUnitAbilityLevel(Pos,Aos)
set Dos=h[5]
set Hos=$41313641
call UnitAddAbility(Dos,Hos)
set Jos=h[5]
set Kos=$41313641
set Los=C_s
call SetUnitAbilityLevel(Jos,Kos,Los)
endif
set Xos=G[5]
if GetUnitTypeId(Xos)==$6E64727A then
set Vos=G[5]
set Bos=$41303852
set V_s=GetUnitAbilityLevel(Vos,Bos)
set Nos=h[5]
set Mos=$41313630
call UnitAddAbility(Nos,Mos)
set wOs=h[5]
set uOs=$41313630
set rOs=V_s
call SetUnitAbilityLevel(wOs,uOs,rOs)
endif
set sOs=G[5]
if GetUnitTypeId(sOs)==$6E647267 then
set tOs=G[5]
set iOs=$41303856
set B_s=GetUnitAbilityLevel(tOs,iOs)
set SOs=h[5]
set cOs=$41313642
call UnitAddAbility(SOs,cOs)
set oOs=h[5]
set OOs=$41313642
set lOs=B_s
call SetUnitAbilityLevel(oOs,OOs,lOs)
endif
set bOs=G[5]
if GetUnitTypeId(bOs)==$6E676D65 then
set yOs=G[5]
set pOs=$4130384F
set N_s=GetUnitAbilityLevel(yOs,pOs)
set eOs=h[5]
set qOs=$41313631
call UnitAddAbility(eOs,qOs)
set aOs=h[5]
set nOs=$41313631
set dOs=N_s
call SetUnitAbilityLevel(aOs,nOs,dOs)
endif
set fOs=G[5]
if GetUnitTypeId(fOs)==$6E647272 then
set ROs=G[5]
set TOs=$41303858
set M_s=GetUnitAbilityLevel(ROs,TOs)
set YOs=G[5]
set GOs=$41303859
set wws=GetUnitAbilityLevel(YOs,GOs)
set gOs=h[5]
set hOs=$41313632
call UnitAddAbility(gOs,hOs)
set FOs=h[5]
set kOs=$41313633
set jOs=M_s
call SetUnitAbilityLevel(FOs,kOs,jOs)
set xOs=h[5]
set vOs=$41313632
call UnitAddAbility(xOs,vOs)
set mOs=h[5]
set QOs=$41313633
set WOs=wws
call SetUnitAbilityLevel(mOs,QOs,WOs)
endif
set EOs=G[5]
if GetUnitTypeId(EOs)==$6E6D7232 then
set ZOs=h[5]
set UOs=$41303853
call UnitAddAbility(ZOs,UOs)
endif
set IOs=G[5]
if GetUnitTypeId(IOs)==$6E676F6C then
set POs=h[5]
set AOs=$41303853
call UnitAddAbility(POs,AOs)
endif
set DOs=G[5]
if GetUnitTypeId(DOs)==$6E64726F then
set HOs=G[5]
set JOs=$41303855
set uws=GetUnitAbilityLevel(HOs,JOs)
set KOs=h[5]
set LOs=$41313635
call UnitAddAbility(KOs,LOs)
set XOs=h[5]
set COs=$41313635
set VOs=uws
call SetUnitAbilityLevel(XOs,COs,VOs)
endif
set BOs=G[5]
if GetUnitTypeId(BOs)==$6E776774 then
set NOs=G[5]
set MOs=$41303850
set rws=GetUnitAbilityLevel(NOs,MOs)
set wls=h[5]
set uls=$41313636
call UnitAddAbility(wls,uls)
set rls=h[5]
set sls=$41313636
set tls=rws
call SetUnitAbilityLevel(rls,sls,tls)
endif
set ils=G[5]
if GetUnitTypeId(ils)==$6E647275 then
set Sls=G[5]
set cls=$4130384E
set sws=GetUnitAbilityLevel(Sls,cls)
set ols=h[5]
set Ols=$41313637
call UnitAddAbility(ols,Ols)
set lls=h[5]
set bls=$41313637
set yls=sws
call SetUnitAbilityLevel(lls,bls,yls)
endif
set pls=G[5]
if GetUnitTypeId(pls)==$6E666F68 then
set els=G[5]
set qls=$4130384D
set tws=GetUnitAbilityLevel(els,qls)
set als=h[5]
set nls=$41313638
call UnitAddAbility(als,nls)
set dls=h[5]
set fls=$41313638
set Rls=tws
call SetUnitAbilityLevel(dls,fls,Rls)
endif
set Tls=G[5]
if GetUnitTypeId(Tls)==$6E64726B then
set Yls=G[5]
set Gls=$41303851
set iws=GetUnitAbilityLevel(Yls,Gls)
set gls=h[5]
set hls=$41313639
call UnitAddAbility(gls,hls)
set Fls=h[5]
set kls=$41313639
set jls=iws
call SetUnitAbilityLevel(Fls,kls,jls)
endif
endif
if H0s==G[6] then
set xls=G[6]
set Sws=GetUnitX(xls)
set vls=G[6]
set cws=GetUnitY(vls)
set h[6]=CreateUnit(P0s,$6E303349,Sws,cws,0.)
set mls=h[6]
set Qls=$4545564F
call UnitAddAbility(mls,Qls)
set Wls=G[6]
if GetUnitTypeId(Wls)==$6E676164 then
set Els=G[6]
set Zls=$41303042
set ows=GetUnitAbilityLevel(Els,Zls)
set Uls=h[6]
set Ils=$41313641
call UnitAddAbility(Uls,Ils)
set Pls=h[6]
set Als=$41313641
set Dls=ows
call SetUnitAbilityLevel(Pls,Als,Dls)
endif
set Hls=G[6]
if GetUnitTypeId(Hls)==$6E64727A then
set Jls=G[6]
set Kls=$41303852
set Ows=GetUnitAbilityLevel(Jls,Kls)
set Lls=h[6]
set Xls=$41313630
call UnitAddAbility(Lls,Xls)
set Cls=h[6]
set Vls=$41313630
set Bls=Ows
call SetUnitAbilityLevel(Cls,Vls,Bls)
endif
set Nls=G[6]
if GetUnitTypeId(Nls)==$6E647267 then
set Mls=G[6]
set wbs=$41303856
set lws=GetUnitAbilityLevel(Mls,wbs)
set ubs=h[6]
set rbs=$41313642
call UnitAddAbility(ubs,rbs)
set sbs=h[6]
set tbs=$41313642
set ibs=lws
call SetUnitAbilityLevel(sbs,tbs,ibs)
endif
set Sbs=G[6]
if GetUnitTypeId(Sbs)==$6E676D65 then
set cbs=G[6]
set obs=$4130384F
set bws=GetUnitAbilityLevel(cbs,obs)
set Obs=h[6]
set lbs=$41313631
call UnitAddAbility(Obs,lbs)
set bbs=h[6]
set ybs=$41313631
set pbs=bws
call SetUnitAbilityLevel(bbs,ybs,pbs)
endif
set ebs=G[6]
if GetUnitTypeId(ebs)==$6E647272 then
set qbs=G[6]
set abs=$41303858
set yws=GetUnitAbilityLevel(qbs,abs)
set nbs=G[6]
set dbs=$41303859
set pws=GetUnitAbilityLevel(nbs,dbs)
set fbs=h[6]
set Rbs=$41313632
call UnitAddAbility(fbs,Rbs)
set Tbs=h[6]
set Ybs=$41313633
set Gbs=yws
call SetUnitAbilityLevel(Tbs,Ybs,Gbs)
set gbs=h[6]
set hbs=$41313632
call UnitAddAbility(gbs,hbs)
set Fbs=h[6]
set kbs=$41313633
set jbs=pws
call SetUnitAbilityLevel(Fbs,kbs,jbs)
endif
set xbs=G[6]
if GetUnitTypeId(xbs)==$6E6D7232 then
set vbs=h[6]
set mbs=$41303853
call UnitAddAbility(vbs,mbs)
endif
set Qbs=G[6]
if GetUnitTypeId(Qbs)==$6E676F6C then
set Wbs=h[6]
set Ebs=$41303853
call UnitAddAbility(Wbs,Ebs)
endif
set Zbs=G[6]
if GetUnitTypeId(Zbs)==$6E64726F then
set Ubs=G[6]
set Ibs=$41303855
set ews=GetUnitAbilityLevel(Ubs,Ibs)
set Pbs=h[6]
set Abs=$41313635
call UnitAddAbility(Pbs,Abs)
set Dbs=h[6]
set Hbs=$41313635
set Jbs=ews
call SetUnitAbilityLevel(Dbs,Hbs,Jbs)
endif
set Kbs=G[6]
if GetUnitTypeId(Kbs)==$6E776774 then
set Lbs=G[6]
set Xbs=$41303850
set qws=GetUnitAbilityLevel(Lbs,Xbs)
set Cbs=h[6]
set Vbs=$41313636
call UnitAddAbility(Cbs,Vbs)
set Bbs=h[6]
set Nbs=$41313636
set Mbs=qws
call SetUnitAbilityLevel(Bbs,Nbs,Mbs)
endif
set wys=G[6]
if GetUnitTypeId(wys)==$6E647275 then
set uys=G[6]
set rys=$4130384E
set aws=GetUnitAbilityLevel(uys,rys)
set sys=h[6]
set tys=$41313637
call UnitAddAbility(sys,tys)
set iys=h[6]
set Sys=$41313637
set cys=aws
call SetUnitAbilityLevel(iys,Sys,cys)
endif
set oys=G[6]
if GetUnitTypeId(oys)==$6E666F68 then
set Oys=G[6]
set lys=$4130384D
set nws=GetUnitAbilityLevel(Oys,lys)
set bys=h[6]
set yys=$41313638
call UnitAddAbility(bys,yys)
set pys=h[6]
set eys=$41313638
set qys=nws
call SetUnitAbilityLevel(pys,eys,qys)
endif
set ays=G[6]
if GetUnitTypeId(ays)==$6E64726B then
set nys=G[6]
set dys=$41303851
set dws=GetUnitAbilityLevel(nys,dys)
set fys=h[6]
set Rys=$41313639
call UnitAddAbility(fys,Rys)
set Tys=h[6]
set Yys=$41313639
set Gys=dws
call SetUnitAbilityLevel(Tys,Yys,Gys)
endif
endif
if H0s==G[7] then
set gys=G[7]
set fws=GetUnitX(gys)
set hys=G[7]
set Rws=GetUnitY(hys)
set h[7]=CreateUnit(P0s,$6E303349,fws,Rws,0.)
set Fys=h[7]
set kys=$4545564F
call UnitAddAbility(Fys,kys)
set jys=G[7]
if GetUnitTypeId(jys)==$6E676164 then
set xys=G[7]
set vys=$41303042
set Tws=GetUnitAbilityLevel(xys,vys)
set mys=h[7]
set Qys=$41313641
call UnitAddAbility(mys,Qys)
set Wys=h[7]
set Eys=$41313641
set Zys=Tws
call SetUnitAbilityLevel(Wys,Eys,Zys)
endif
set Uys=G[7]
if GetUnitTypeId(Uys)==$6E64727A then
set Iys=G[7]
set Pys=$41303852
set Yws=GetUnitAbilityLevel(Iys,Pys)
set Ays=h[7]
set Dys=$41313630
call UnitAddAbility(Ays,Dys)
set Hys=h[7]
set Jys=$41313630
set Kys=Yws
call SetUnitAbilityLevel(Hys,Jys,Kys)
endif
set Lys=G[7]
if GetUnitTypeId(Lys)==$6E647267 then
set Xys=G[7]
set Cys=$41303856
set Gws=GetUnitAbilityLevel(Xys,Cys)
set Vys=h[7]
set Bys=$41313642
call UnitAddAbility(Vys,Bys)
set Nys=h[7]
set Mys=$41313642
set wps=Gws
call SetUnitAbilityLevel(Nys,Mys,wps)
endif
set ups=G[7]
if GetUnitTypeId(ups)==$6E676D65 then
set rps=G[7]
set sps=$4130384F
set gws=GetUnitAbilityLevel(rps,sps)
set tps=h[7]
set ips=$41313631
call UnitAddAbility(tps,ips)
set Sps=h[7]
set cps=$41313631
set ops=gws
call SetUnitAbilityLevel(Sps,cps,ops)
endif
set Ops=G[7]
if GetUnitTypeId(Ops)==$6E647272 then
set lps=G[7]
set bps=$41303858
set hws=GetUnitAbilityLevel(lps,bps)
set yps=G[7]
set pps=$41303859
set Fws=GetUnitAbilityLevel(yps,pps)
set eps=h[7]
set qps=$41313632
call UnitAddAbility(eps,qps)
set aps=h[7]
set nps=$41313633
set dps=hws
call SetUnitAbilityLevel(aps,nps,dps)
set fps=h[7]
set Rps=$41313632
call UnitAddAbility(fps,Rps)
set Tps=h[7]
set Yps=$41313633
set Gps=Fws
call SetUnitAbilityLevel(Tps,Yps,Gps)
endif
set gps=G[7]
if GetUnitTypeId(gps)==$6E6D7232 then
set hps=h[7]
set Fps=$41303853
call UnitAddAbility(hps,Fps)
endif
set kps=G[7]
if GetUnitTypeId(kps)==$6E676F6C then
set jps=h[7]
set xps=$41303853
call UnitAddAbility(jps,xps)
endif
set vps=G[7]
if GetUnitTypeId(vps)==$6E64726F then
set mps=G[7]
set Qps=$41303855
set kws=GetUnitAbilityLevel(mps,Qps)
set Wps=h[7]
set Eps=$41313635
call UnitAddAbility(Wps,Eps)
set Zps=h[7]
set Ups=$41313635
set Ips=kws
call SetUnitAbilityLevel(Zps,Ups,Ips)
endif
set Pps=G[7]
if GetUnitTypeId(Pps)==$6E776774 then
set Aps=G[7]
set Dps=$41303850
set jws=GetUnitAbilityLevel(Aps,Dps)
set Hps=h[7]
set Jps=$41313636
call UnitAddAbility(Hps,Jps)
set Kps=h[7]
set Lps=$41313636
set Xps=jws
call SetUnitAbilityLevel(Kps,Lps,Xps)
endif
set Cps=G[7]
if GetUnitTypeId(Cps)==$6E647275 then
set Vps=G[7]
set Bps=$4130384E
set xws=GetUnitAbilityLevel(Vps,Bps)
set Nps=h[7]
set Mps=$41313637
call UnitAddAbility(Nps,Mps)
set wes=h[7]
set ues=$41313637
set res=xws
call SetUnitAbilityLevel(wes,ues,res)
endif
set ses=G[7]
if GetUnitTypeId(ses)==$6E666F68 then
set tes=G[7]
set ies=$4130384D
set vws=GetUnitAbilityLevel(tes,ies)
set Ses=h[7]
set ces=$41313638
call UnitAddAbility(Ses,ces)
set oes=h[7]
set Oes=$41313638
set les=vws
call SetUnitAbilityLevel(oes,Oes,les)
endif
set bes=G[7]
if GetUnitTypeId(bes)==$6E64726B then
set yes=G[7]
set pes=$41303851
set mws=GetUnitAbilityLevel(yes,pes)
set ees=h[7]
set qes=$41313639
call UnitAddAbility(ees,qes)
set aes=h[7]
set nes=$41313639
set des=mws
call SetUnitAbilityLevel(aes,nes,des)
endif
endif
if H0s==G[8] then
set fes=G[8]
set Qws=GetUnitX(fes)
set Res=G[8]
set Wws=GetUnitY(Res)
set h[8]=CreateUnit(P0s,$6E303349,Qws,Wws,0.)
set Tes=h[8]
set Yes=$4545564F
call UnitAddAbility(Tes,Yes)
set Ges=G[8]
if GetUnitTypeId(Ges)==$6E676164 then
set ges=G[8]
set hes=$41303042
set Ews=GetUnitAbilityLevel(ges,hes)
set Fes=h[8]
set kes=$41313641
call UnitAddAbility(Fes,kes)
set jes=h[8]
set xes=$41313641
set ves=Ews
call SetUnitAbilityLevel(jes,xes,ves)
endif
set mes=G[8]
if GetUnitTypeId(mes)==$6E64727A then
set Qes=G[8]
set Wes=$41303852
set Zws=GetUnitAbilityLevel(Qes,Wes)
set Ees=h[8]
set Zes=$41313630
call UnitAddAbility(Ees,Zes)
set Ues=h[8]
set Ies=$41313630
set Pes=Zws
call SetUnitAbilityLevel(Ues,Ies,Pes)
endif
set Aes=G[8]
if GetUnitTypeId(Aes)==$6E647267 then
set Des=G[8]
set Hes=$41303856
set Uws=GetUnitAbilityLevel(Des,Hes)
set Jes=h[8]
set Kes=$41313642
call UnitAddAbility(Jes,Kes)
set Les=h[8]
set Xes=$41313642
set Ces=Uws
call SetUnitAbilityLevel(Les,Xes,Ces)
endif
set Ves=G[8]
if GetUnitTypeId(Ves)==$6E676D65 then
set Bes=G[8]
set Nes=$4130384F
set Iws=GetUnitAbilityLevel(Bes,Nes)
set Mes=h[8]
set wqs=$41313631
call UnitAddAbility(Mes,wqs)
set uqs=h[8]
set rqs=$41313631
set sqs=Iws
call SetUnitAbilityLevel(uqs,rqs,sqs)
endif
set tqs=G[8]
if GetUnitTypeId(tqs)==$6E647272 then
set iqs=G[8]
set Sqs=$41303858
set Pws=GetUnitAbilityLevel(iqs,Sqs)
set cqs=G[8]
set oqs=$41303859
set Aws=GetUnitAbilityLevel(cqs,oqs)
set Oqs=h[8]
set lqs=$41313632
call UnitAddAbility(Oqs,lqs)
set bqs=h[8]
set yqs=$41313633
set pqs=Pws
call SetUnitAbilityLevel(bqs,yqs,pqs)
set eqs=h[8]
set qqs=$41313632
call UnitAddAbility(eqs,qqs)
set aqs=h[8]
set nqs=$41313633
set dqs=Aws
call SetUnitAbilityLevel(aqs,nqs,dqs)
endif
set fqs=G[8]
if GetUnitTypeId(fqs)==$6E6D7232 then
set Rqs=h[8]
set Tqs=$41303853
call UnitAddAbility(Rqs,Tqs)
endif
set Yqs=G[8]
if GetUnitTypeId(Yqs)==$6E676F6C then
set Gqs=h[8]
set gqs=$41303853
call UnitAddAbility(Gqs,gqs)
endif
set hqs=G[8]
if GetUnitTypeId(hqs)==$6E64726F then
set Fqs=G[8]
set kqs=$41303855
set Dws=GetUnitAbilityLevel(Fqs,kqs)
set jqs=h[8]
set xqs=$41313635
call UnitAddAbility(jqs,xqs)
set vqs=h[8]
set mqs=$41313635
set Qqs=Dws
call SetUnitAbilityLevel(vqs,mqs,Qqs)
endif
set Wqs=G[8]
if GetUnitTypeId(Wqs)==$6E776774 then
set Eqs=G[8]
set Zqs=$41303850
set Hws=GetUnitAbilityLevel(Eqs,Zqs)
set Uqs=h[8]
set Iqs=$41313636
call UnitAddAbility(Uqs,Iqs)
set Pqs=h[8]
set Aqs=$41313636
set Dqs=Hws
call SetUnitAbilityLevel(Pqs,Aqs,Dqs)
endif
set Hqs=G[8]
if GetUnitTypeId(Hqs)==$6E647275 then
set Jqs=G[8]
set Kqs=$4130384E
set Jws=GetUnitAbilityLevel(Jqs,Kqs)
set Lqs=h[8]
set Xqs=$41313637
call UnitAddAbility(Lqs,Xqs)
set Cqs=h[8]
set Vqs=$41313637
set Bqs=Jws
call SetUnitAbilityLevel(Cqs,Vqs,Bqs)
endif
set Nqs=G[8]
if GetUnitTypeId(Nqs)==$6E666F68 then
set Mqs=G[8]
set was=$4130384D
set Kws=GetUnitAbilityLevel(Mqs,was)
set uas=h[8]
set ras=$41313638
call UnitAddAbility(uas,ras)
set sas=h[8]
set tas=$41313638
set ias=Kws
call SetUnitAbilityLevel(sas,tas,ias)
endif
set Sas=G[8]
if GetUnitTypeId(Sas)==$6E64726B then
set cas=G[8]
set oas=$41303851
set Lws=GetUnitAbilityLevel(cas,oas)
set Oas=h[8]
set las=$41313639
call UnitAddAbility(Oas,las)
set bas=h[8]
set yas=$41313639
set pas=Lws
call SetUnitAbilityLevel(bas,yas,pas)
endif
endif
endloop
set eas=A0s
call DestroyGroup(eas)
set qas=D0s
call DestroyBoolExpr(qas)
endif
set I0s=null
set P0s=null
set A0s=null
set D0s=null
set H0s=null
set J0s=null
set Xws=null
set Cws=null
set Bws=null
set Nws=null
set Mws=null
set wus=null
set uus=null
set rus=null
set sus=null
set tus=null
set Sus=null
set cus=null
set Ous=null
set bus=null
set eus=null
set qus=null
set nus=null
set fus=null
set Yus=null
set Gus=null
set hus=null
set kus=null
set vus=null
set mus=null
set Wus=null
set Zus=null
set Pus=null
set Aus=null
set Hus=null
set Kus=null
set Xus=null
set Bus=null
set Mus=null
set rrs=null
set srs=null
set irs=null
set Srs=null
set ors=null
set Ors=null
set brs=null
set prs=null
set ars=null
set nrs=null
set frs=null
set Trs=null
set grs=null
set hrs=null
set krs=null
set xrs=null
set Qrs=null
set Wrs=null
set Zrs=null
set Irs=null
set Drs=null
set Hrs=null
set Krs=null
set Xrs=null
set Brs=null
set Nrs=null
set Mrs=null
set uss=null
set rss=null
set tss=null
set Sss=null
set Oss=null
set lss=null
set yss=null
set ess=null
set nss=null
set dss=null
set Rss=null
set Yss=null
set hss=null
set Fss=null
set jss=null
set vss=null
set Wss=null
set Ess=null
set Uss=null
set Pss=null
set Dss=null
set Kss=null
set Xss=null
set Bss=null
set Nss=null
set wts=null
set uts=null
set sts=null
set tts=null
set Sts=null
set ots=null
set bts=null
set yts=null
set ets=null
set ats=null
set fts=null
set Rts=null
set Yts=null
set gts=null
set kts=null
set jts=null
set vts=null
set Qts=null
set Zts=null
set Uts=null
set Pts=null
set Dts=null
set Kts=null
set Lts=null
set Xts=null
set Vts=null
set Bts=null
set Mts=null
set uis=null
set tis=null
set iis=null
set cis=null
set Ois=null
set yis=null
set pis=null
set qis=null
set nis=null
set Ris=null
set Tis=null
set Gis=null
set his=null
set jis=null
set xis=null
set mis=null
set Wis=null
set Zis=null
set Pis=null
set Dis=null
set Kis=null
set Lis=null
set Cis=null
set Vis=null
set Nis=null
set Mis=null
set uSs=null
set sSs=null
set SSs=null
set cSs=null
set OSs=null
set bSs=null
set eSs=null
set qSs=null
set nSs=null
set fSs=null
set YSs=null
set GSs=null
set hSs=null
set kSs=null
set vSs=null
set mSs=null
set WSs=null
set ZSs=null
set PSs=null
set ASs=null
set DSs=null
set JSs=null
set KSs=null
set XSs=null
set VSs=null
set MSs=null
set wcs=null
set rcs=null
set tcs=null
set ccs=null
set ocs=null
set lcs=null
set ycs=null
set qcs=null
set acs=null
set dcs=null
set Rcs=null
set Gcs=null
set gcs=null
set Fcs=null
set jcs=null
set vcs=null
set Wcs=null
set Zcs=null
set Pcs=null
set Acs=null
set Hcs=null
set Jcs=null
set Lcs=null
set Xcs=null
set Vcs=null
set Ncs=null
set uos=null
set ros=null
set tos=null
set Sos=null
set Oos=null
set los=null
set yos=null
set eos=null
set nos=null
set dos=null
set Ros=null
set Yos=null
set hos=null
set Fos=null
set jos=null
set vos=null
set Wos=null
set Eos=null
set Zos=null
set Ios=null
set Pos=null
set Dos=null
set Jos=null
set Xos=null
set Vos=null
set Nos=null
set wOs=null
set sOs=null
set tOs=null
set SOs=null
set oOs=null
set bOs=null
set yOs=null
set eOs=null
set aOs=null
set fOs=null
set ROs=null
set YOs=null
set gOs=null
set FOs=null
set xOs=null
set mOs=null
set EOs=null
set ZOs=null
set IOs=null
set POs=null
set DOs=null
set HOs=null
set KOs=null
set XOs=null
set BOs=null
set NOs=null
set wls=null
set rls=null
set ils=null
set Sls=null
set ols=null
set lls=null
set pls=null
set els=null
set als=null
set dls=null
set Tls=null
set Yls=null
set gls=null
set Fls=null
set xls=null
set vls=null
set mls=null
set Wls=null
set Els=null
set Uls=null
set Pls=null
set Hls=null
set Jls=null
set Lls=null
set Cls=null
set Nls=null
set Mls=null
set ubs=null
set sbs=null
set Sbs=null
set cbs=null
set Obs=null
set bbs=null
set ebs=null
set qbs=null
set nbs=null
set fbs=null
set Tbs=null
set gbs=null
set Fbs=null
set xbs=null
set vbs=null
set Qbs=null
set Wbs=null
set Zbs=null
set Ubs=null
set Pbs=null
set Dbs=null
set Kbs=null
set Lbs=null
set Cbs=null
set Bbs=null
set wys=null
set uys=null
set sys=null
set iys=null
set oys=null
set Oys=null
set bys=null
set pys=null
set ays=null
set nys=null
set fys=null
set Tys=null
set gys=null
set hys=null
set Fys=null
set jys=null
set xys=null
set mys=null
set Wys=null
set Uys=null
set Iys=null
set Ays=null
set Hys=null
set Lys=null
set Xys=null
set Vys=null
set Nys=null
set ups=null
set rps=null
set tps=null
set Sps=null
set Ops=null
set lps=null
set yps=null
set eps=null
set aps=null
set fps=null
set Tps=null
set gps=null
set hps=null
set kps=null
set jps=null
set vps=null
set mps=null
set Wps=null
set Zps=null
set Pps=null
set Aps=null
set Hps=null
set Kps=null
set Cps=null
set Vps=null
set Nps=null
set wes=null
set ses=null
set tes=null
set Ses=null
set oes=null
set bes=null
set yes=null
set ees=null
set aes=null
set fes=null
set Res=null
set Tes=null
set Ges=null
set ges=null
set Fes=null
set jes=null
set mes=null
set Qes=null
set Ees=null
set Ues=null
set Aes=null
set Des=null
set Jes=null
set Les=null
set Ves=null
set Bes=null
set Mes=null
set uqs=null
set tqs=null
set iqs=null
set cqs=null
set Oqs=null
set bqs=null
set eqs=null
set aqs=null
set fqs=null
set Rqs=null
set Yqs=null
set Gqs=null
set hqs=null
set Fqs=null
set jqs=null
set vqs=null
set Wqs=null
set Eqs=null
set Uqs=null
set Pqs=null
set Hqs=null
set Jqs=null
set Lqs=null
set Cqs=null
set Nqs=null
set Mqs=null
set uas=null
set sas=null
set Sas=null
set cas=null
set Oas=null
set bas=null
set eas=null
set qas=null
endfunction
function Z6l takes string C2l returns nothing
local integer V2l
local unit B2l
local integer N2l
local unit M2l
local unittype w5l
local unit u5l
local integer r5l
local unit s5l
local integer t5l
local unit i5l
local unit S5l
local unitstate c5l
local unit o5l
local unit O5l
local unitstate l5l
local unit b5l
local unit y5l
local unit p5l
local unit e5l
local unit q5l
local unit a5l
local unit n5l
local unit d5l
local unit f5l
local unit R5l
local unit T5l
local unit Y5l
local unit G5l
local unit g5l
local unit h5l
local unit F5l
local unit k5l
local unit j5l
local unit x5l
local unit v5l
local unit m5l
local unit Q5l
local unit W5l
local unit E5l
local unit Z5l
local unit U5l
local unit I5l
local unit P5l
local unit A5l
local unit D5l
local unit H5l
local integer J5l
local string K5l
local integer L5l
local string X5l
local integer C5l
local integer V5l
local unit B5l
local integer N5l
local unit M5l
local integer w6l
local boolean u6l
local boolean r6l
local real s6l
local boolean t6l
local boolean i6l
local boolean S6l
local boolean c6l
local boolean o6l
local boolean O6l
local boolean l6l
local boolean b6l
local boolean y6l
local boolean p6l
local boolean e6l
local boolean q6l
local boolean a6l
local boolean n6l
local boolean d6l
local boolean f6l
local boolean R6l
local boolean T6l
local boolean Y6l
local boolean G6l
local boolean g6l
local boolean h6l
local boolean F6l
local boolean k6l
local boolean j6l
local boolean x6l
local boolean v6l
local boolean m6l
local boolean Q6l
local boolean W6l
local boolean E6l
set aW[qW]=C2l
set qW=qW+1
set V2l=GetSpellAbilityId()
if V2l==$41305858 then
set B2l=GetSpellTargetUnit()
set M2l=B2l
set w5l=UNIT_TYPE_HERO
if IsUnitType(M2l,w5l)==true then
set u5l=B2l
set r5l=$42303637
set u6l=GetUnitAbilityLevel(u5l,r5l)==1
else
set u6l=false
endif
if u6l then
set s5l=B2l
set t5l=$41305934
set r6l=GetUnitAbilityLevel(s5l,t5l)==0
else
set r6l=false
endif
if r6l then
set i5l=B2l
set S5l=i5l
set c5l=UNIT_STATE_LIFE
set s6l=GetUnitState(S5l,c5l)
set o5l=B2l
set O5l=o5l
set l5l=UNIT_STATE_MAX_LIFE
set t6l=s6l<=GetUnitState(O5l,l5l)*.1
else
set t6l=false
endif
if t6l then
set b5l=B2l
set i6l=UnitAlive(b5l)==true
else
set i6l=false
endif
if i6l then
set y5l=B2l
set p5l=y5l
if GetUnitTypeId(p5l)==$4830324B then
set S6l=true
else
set e5l=y5l
set S6l=GetUnitTypeId(e5l)==$484D3032
endif
if S6l then
set c6l=true
else
set q5l=y5l
set c6l=GetUnitTypeId(q5l)==$55776172
endif
if c6l then
set o6l=true
else
set a5l=y5l
set o6l=GetUnitTypeId(a5l)==$4E6D616E
endif
if o6l then
set O6l=true
else
set n5l=y5l
set O6l=GetUnitTypeId(n5l)==$484D3035
endif
if O6l then
set l6l=true
else
set d5l=y5l
set l6l=GetUnitTypeId(d5l)==$486A6169
endif
if l6l then
set b6l=true
else
set f5l=y5l
set b6l=GetUnitTypeId(f5l)==$45657669
endif
if b6l then
set y6l=true
else
set R5l=y5l
set y6l=GetUnitTypeId(R5l)==$45646D6D
endif
if y6l then
set p6l=true
else
set T5l=y5l
set p6l=GetUnitTypeId(T5l)==$456B6565
endif
if p6l then
set e6l=true
else
set Y5l=y5l
set e6l=GetUnitTypeId(Y5l)==$45303039
endif
if e6l then
set q6l=true
else
set G5l=y5l
set q6l=GetUnitTypeId(G5l)==$5530304C
endif
if q6l then
set a6l=true
else
set g5l=y5l
set a6l=GetUnitTypeId(g5l)==$484D3033
endif
if a6l then
set n6l=true
else
set h5l=y5l
set n6l=GetUnitTypeId(h5l)==$456D3173
endif
if n6l then
set d6l=true
else
set F5l=y5l
set d6l=GetUnitTypeId(F5l)==$484D3036
endif
if d6l then
set f6l=true
else
set k5l=y5l
set f6l=GetUnitTypeId(k5l)==$484D3037
endif
if f6l then
set R6l=true
else
set j5l=y5l
set R6l=GetUnitTypeId(j5l)==$4F636268
endif
if R6l then
set T6l=true
else
set x5l=y5l
set T6l=GetUnitTypeId(x5l)==$4F726B6E
endif
if T6l then
set Y6l=true
else
set v5l=y5l
set Y6l=GetUnitTypeId(v5l)==$45303037
endif
if Y6l then
set G6l=true
else
set m5l=y5l
set G6l=GetUnitTypeId(m5l)==$45303038
endif
if G6l then
set g6l=true
else
set Q5l=y5l
set g6l=GetUnitTypeId(Q5l)==$55616E62
endif
if g6l then
set h6l=true
else
set W5l=y5l
set h6l=GetUnitTypeId(W5l)==$48617266
endif
if h6l then
set F6l=true
else
set E5l=y5l
set F6l=GetUnitTypeId(E5l)==$55647468
endif
if F6l then
set k6l=true
else
set Z5l=y5l
set k6l=GetUnitTypeId(Z5l)==$484D3038
endif
if k6l then
set j6l=true
else
set U5l=y5l
set j6l=GetUnitTypeId(U5l)==$55303048
endif
if j6l then
set x6l=true
else
set I5l=y5l
set x6l=GetUnitTypeId(I5l)==$55303046
endif
if x6l then
set v6l=true
else
set P5l=y5l
set v6l=GetUnitTypeId(P5l)==$5530304A
endif
if v6l then
set m6l=true
else
set A5l=y5l
set m6l=GetUnitTypeId(A5l)==$5530304D
endif
if m6l then
set Q6l=true
else
set D5l=y5l
set Q6l=GetUnitTypeId(D5l)==$55303047
endif
if Q6l then
set W6l=true
else
set H5l=y5l
set W6l=GetUnitTypeId(H5l)==$4F303344
endif
set E6l=W6l==false
else
set E6l=false
endif
if E6l then
if jWu(B2l)<6 then
call aWi(Ne,$49303030,$49303037,$49303032,$49303033,$49303036,$49303035,"when calling add in GalagrondPurple, line 459")
set J5l=Ne
set K5l="when calling shuffle in GalagrondPurple, line 460"
set aW[qW]=K5l
set qW=qW+1
if ok[J5l]==0 then
if J5l==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(J5l,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set L5l=Ne
set X5l="when calling getFirst in GalagrondPurple, line 461"
set aW[qW]=X5l
set qW=qW+1
if ok[L5l]==0 then
if L5l==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set V5l=L5l
set C5l=Hv[Kv[Vv[V5l]]]
set qW=qW-1
set N2l=C5l
set B5l=B2l
set N5l=N2l
call UnitAddItemById(B5l,N5l)
endif
set M5l=B2l
set w6l=$41305934
call UnitAddAbility(M5l,w6l)
endif
endif
set qW=qW-1
set B2l=null
set M2l=null
set w5l=null
set u5l=null
set s5l=null
set i5l=null
set S5l=null
set c5l=null
set o5l=null
set O5l=null
set l5l=null
set b5l=null
set y5l=null
set p5l=null
set e5l=null
set q5l=null
set a5l=null
set n5l=null
set d5l=null
set f5l=null
set R5l=null
set T5l=null
set Y5l=null
set G5l=null
set g5l=null
set h5l=null
set F5l=null
set k5l=null
set j5l=null
set x5l=null
set v5l=null
set m5l=null
set Q5l=null
set W5l=null
set E5l=null
set Z5l=null
set U5l=null
set I5l=null
set P5l=null
set A5l=null
set D5l=null
set H5l=null
set B5l=null
set M5l=null
endfunction
function ndS takes nothing returns nothing
set qW=0
call Z6l("via function reference GalagrondPurple, line 499")
endfunction
function nhi takes nothing returns nothing
local unit Hgi=GetKillingUnit()
local unit uhi=Hgi
local integer Jgi=GetPlayerTechCount(GetOwningPlayer(uhi),$5230324D,true)
local unit rhi=Hgi
local unit Kgi
local real Lgi
local real Xgi
local unit Cgi
local unit Vgi
local unit Bgi
local unit Ngi
local unit Mgi
local unit whi
local unit shi
local unit thi
local unit ihi
local unit Shi
local unit chi
local unit ohi
local unit Ohi
local unit lhi
local unit bhi
local unit yhi
local unit phi
local boolean ehi
local boolean qhi
local boolean ahi
if GetUnitTypeId(rhi)==$6F303249 then
set ehi=true
else
set shi=Hgi
set ehi=GetUnitTypeId(shi)==$6F30324A
endif
if ehi then
set qhi=true
else
set thi=Hgi
set qhi=GetUnitTypeId(thi)==$6F30324B
endif
if qhi then
set ahi=true
else
set ihi=Hgi
set ahi=GetUnitTypeId(ihi)==$6F30324C
endif
if ahi then
if GetRandomInt(1,100)<=3*Jgi then
set Kgi=GetDyingUnit()
set Shi=Kgi
set Lgi=GetUnitX(Shi)
set chi=Kgi
set Xgi=GetUnitY(chi)
if Jgi<3 then
set ohi=Hgi
set Cgi=CreateUnit(GetOwningPlayer(ohi),$6F303249,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",Cgi,"origin"))
call dYr(Cgi)
endif
if Jgi==3 then
if GetRandomInt(1,2)==1 then
set Ohi=Hgi
set Vgi=CreateUnit(GetOwningPlayer(Ohi),$6F303249,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",Vgi,"origin"))
call dYr(Vgi)
else
set lhi=Hgi
set Bgi=CreateUnit(GetOwningPlayer(lhi),$6F30324C,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",Bgi,"origin"))
call dYr(Bgi)
endif
endif
if Jgi==4 then
if GetRandomInt(1,3)==1 then
set bhi=Hgi
set Ngi=CreateUnit(GetOwningPlayer(bhi),$6F303249,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",Ngi,"origin"))
call dYr(Ngi)
elseif GetRandomInt(1,2)==1 then
set yhi=Hgi
set Mgi=CreateUnit(GetOwningPlayer(yhi),$6F30324C,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",Mgi,"origin"))
call dYr(Mgi)
else
set phi=Hgi
set whi=CreateUnit(GetOwningPlayer(phi),$6F30324D,Lgi,Xgi,0.)
call DestroyEffect(AddSpecialEffectTarget("Pillar of Flame Orange.mdl",whi,"origin"))
call dYr(whi)
endif
endif
endif
endif
set Hgi=null
set Kgi=null
set Cgi=null
set Vgi=null
set Bgi=null
set Ngi=null
set Mgi=null
set whi=null
set uhi=null
set rhi=null
set shi=null
set thi=null
set ihi=null
set Shi=null
set chi=null
set ohi=null
set Ohi=null
set lhi=null
set bhi=null
set yhi=null
set phi=null
endfunction
function nni takes nothing returns nothing
local rect ani=Kc
set Xo[3]=Location(GetRectCenterX(ani),GetRectCenterY(ani))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set ani=null
endfunction
function noi takes nothing returns boolean
local trigger ooi
local playerunitevent Ooi
local trigger loi
local playerunitevent boi
local integer yoi
local trigger poi
local boolexpr eoi
local trigger qoi
local code aoi
set hy=CreateTrigger()
set ooi=hy
set Ooi=EVENT_PLAYER_UNIT_SPELL_EFFECT
set loi=ooi
set boi=Ooi
set yoi=0
loop
call TriggerRegisterPlayerUnitEvent(loi,Player(yoi),boi,null)
set yoi=yoi+1
exitwhen yoi==bj_MAX_PLAYER_SLOTS
endloop
set poi=hy
set eoi=Condition(Z1)
call TriggerAddCondition(poi,eoi)
set qoi=hy
set aoi=U1
call TriggerAddAction(qoi,aoi)
set ooi=null
set Ooi=null
set loi=null
set boi=null
set poi=null
set eoi=null
set qoi=null
return true
endfunction
function npu takes nothing returns boolean
local playerunitevent qpu=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code apu=Ksw
call emO(qpu,null,apu,null)
set qpu=null
return true
endfunction
function W1l takes string w1l returns nothing
local integer u1l
local unit r1l
local integer s1l
local integer t1l
local real i1l
local real S1l
local player c1l
local unit o1l
local unit O1l
local unit l1l
local unit b1l
local unit y1l
local unit p1l
local unit e1l
local unit q1l
local integer a1l
local unit n1l
local unit d1l
local unit f1l
local unit R1l
local integer T1l
local string Y1l
local integer G1l
local real g1l
local integer h1l
local string F1l
local unit k1l
local integer j1l
local unit x1l
local unit v1l
local unit m1l
local boolean Q1l
set aW[qW]=w1l
set qW=qW+1
set u1l=GetSpellAbilityId()
set r1l=GetSpellAbilityUnit()
if u1l==$41304658 then
set f1l=r1l
set Q1l=GetUnitTypeId(f1l)==$484D3065
else
set Q1l=false
endif
if Q1l then
set R1l=r1l
set T1l=$4131354D
call UnitAddAbility(R1l,T1l)
set Y1l="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_FloorElevatorConnector in FloorElevatorConnector, line 19"
set aW[qW]=Y1l
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set G1l=fF
set RF[G1l]=813
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_FloorElevatorConnector.","when calling error in FloorElevatorConnector, line 19")
set G1l=0
endif
else
set dF=dF-1
set G1l=nF[dF]
set RF[G1l]=813
endif
set qW=qW-1
set s1l=G1l
set Ox[s1l]=r1l
set g1l=20.
set h1l=s1l
set F1l="when calling doAfter in FloorElevatorConnector, line 19"
set aW[qW]=F1l
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),g1l,h1l,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if u1l==$4131354C then
set k1l=r1l
set j1l=$4131354C
set t1l=GetUnitAbilityLevel(k1l,j1l)
set x1l=r1l
set i1l=GetUnitX(x1l)
set v1l=r1l
set S1l=GetUnitY(v1l)
set m1l=r1l
set c1l=GetOwningPlayer(m1l)
set o1l=CreateUnit(c1l,$6E726967,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",o1l,"origin"))
call dYr(o1l)
set O1l=CreateUnit(c1l,$6E726967,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",O1l,"origin"))
call dYr(O1l)
set l1l=CreateUnit(c1l,$6E6E7472,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",l1l,"origin"))
call dYr(l1l)
set b1l=CreateUnit(c1l,$6E79796D,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",b1l,"origin"))
call dYr(b1l)
if t1l>=3 then
set y1l=CreateUnit(c1l,$6E726967,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",y1l,"origin"))
call dYr(y1l)
set p1l=CreateUnit(c1l,$6E6C6C64,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",p1l,"origin"))
call dYr(p1l)
if t1l>=5 then
set e1l=CreateUnit(c1l,$6E6E7472,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",e1l,"origin"))
call dYr(e1l)
set q1l=CreateUnit(c1l,$6E79796D,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",q1l,"origin"))
call dYr(q1l)
endif
endif
if t1l>=7 then
set a1l=GetRandomInt(1,2)
if a1l==1 then
set n1l=CreateUnit(c1l,$6E303237,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",n1l,"origin"))
call dYr(n1l)
else
set d1l=CreateUnit(c1l,$78303238,i1l,S1l,0.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",d1l,"origin"))
call dYr(d1l)
endif
endif
endif
set qW=qW-1
set r1l=null
set c1l=null
set o1l=null
set O1l=null
set l1l=null
set b1l=null
set y1l=null
set p1l=null
set e1l=null
set q1l=null
set n1l=null
set d1l=null
set f1l=null
set R1l=null
set k1l=null
set x1l=null
set v1l=null
set m1l=null
endfunction
function nrl takes nothing returns nothing
set qW=0
call W1l("via function reference FloorElevatorConnector, line 14")
endfunction
function ntt takes nothing returns boolean
local trigger ltt
local playerunitevent btt
local code ytt
local playerunitevent ptt
local code ett
local playerunitevent qtt
local code att
set tG=null
set iG=null
set SG=1
set oG=null
set OG=CreateTextTag()
set lG=CreateTimer()
set bG=CreateTrigger()
set ltt=bG
call DisableTrigger(ltt)
call TriggerRegisterTimerEvent(bG,1.,true)
call TriggerAddAction(bG,Tww)
set btt=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set ytt=Yww
call emO(btt,null,ytt,null)
set ptt=EVENT_PLAYER_UNIT_SPELL_CAST
set ett=Gww
call emO(ptt,null,ett,null)
set qtt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set att=gww
call emO(qtt,null,att,null)
set ltt=null
set btt=null
set ptt=null
set qtt=null
return true
endfunction
function nvO takes nothing returns boolean
local player LxO=yl
local integer XxO=$78303079
local real pvO=Vd
local real evO=Bd
local real CxO=pvO
local real VxO=evO
local real qvO=0.
local real BxO=qvO
local player OvO=LxO
local integer lvO=XxO
local real bvO=CxO
local real yvO=VxO
local real avO=BxO
local real NxO=avO
local unit AxO=CreateUnit(OvO,lvO,bvO,yvO,NxO*57.295779513)
local unit MxO=AxO
local boolean wvO=false
local unit DxO
local unit HxO
local unit JxO
local unit KxO
local unit uvO
local integer rvO
local unit svO
local integer tvO
local unit ivO
local integer SvO
local unit cvO
local integer ovO
call SetUnitPathing(MxO,wvO)
set DxO=AxO
set uvO=DxO
set rvO=$416D7266
call UnitAddAbility(uvO,rvO)
set HxO=DxO
set svO=HxO
set tvO=$416D7266
call UnitRemoveAbility(svO,tvO)
set JxO=HxO
set ivO=JxO
set SvO=$414D3230
call UnitAddAbility(ivO,SvO)
set KxO=JxO
set cvO=KxO
set ovO=$414D3230
call UnitRemoveAbility(cvO,ovO)
set xn=KxO
set AxO=null
set DxO=null
set HxO=null
set JxO=null
set KxO=null
set LxO=null
set MxO=null
set uvO=null
set svO=null
set ivO=null
set cvO=null
set OvO=null
return true
endfunction
function k0s takes string E9s returns nothing
local unit Z9s
local integer U9s
local trigger I9s
local real P9s
local real A9s
local integer D9s
local unit H9s
local integer J9s
local unit K9s
local integer L9s
local unit X9s
local unit C9s
local unitstate V9s
local trigger B9s
local unit N9s
local unit M9s
local unit w0s
local unit u0s
local unit r0s
local unit s0s
local integer t0s
local unit i0s
local integer S0s
local integer c0s
local unit o0s
local real O0s
local unit l0s
local real b0s
local unit y0s
local unitstate p0s
local real e0s
local unit q0s
local unitstate a0s
local string n0s
local integer d0s
local real f0s
local integer R0s
local string T0s
local boolean Y0s
local player G0s
local real g0s
local unit h0s
local unitstate F0s
set aW[qW]=E9s
set qW=qW+1
set Z9s=GetTriggerUnit()
set K9s=Z9s
set L9s=$41323231
set U9s=GetUnitAbilityLevel(K9s,L9s)
if U9s!=0 then
set X9s=Z9s
set C9s=X9s
set V9s=UNIT_STATE_MANA
set Y0s=GetUnitState(C9s,V9s)>=250.
else
set Y0s=false
endif
if Y0s then
set I9s=GetTriggeringTrigger()
set B9s=I9s
call DisableTrigger(B9s)
set N9s=Z9s
set P9s=GetUnitX(N9s)
set M9s=Z9s
set A9s=GetUnitY(M9s)
set D9s=1
loop
exitwhen D9s>8
set w0s=Z9s
set G0s=GetOwningPlayer(w0s)
set u0s=Z9s
set g0s=GetUnitX(u0s)
set r0s=Z9s
set H9s=CreateUnit(G0s,$75303030,g0s,GetUnitY(r0s),270.)
set s0s=H9s
set t0s=$41323234
call UnitAddAbility(s0s,t0s)
set i0s=H9s
set S0s=$41323234
set c0s=U9s
call SetUnitAbilityLevel(i0s,S0s,c0s)
call IssuePointOrder(H9s,"impale",P9s+100.*Cos(45.+I2R(D9s)*45.*bj_DEGTORAD),A9s+100.*Sin(45.+I2R(D9s)*45.*bj_DEGTORAD))
set o0s=H9s
set O0s=3.
call UnitApplyTimedLife(o0s,$42544C46,O0s)
set D9s=D9s+1
endloop
set l0s=Z9s
set b0s=-250.
set y0s=l0s
set p0s=UNIT_STATE_MANA
set e0s=b0s
set h0s=y0s
set F0s=p0s
set q0s=y0s
set a0s=p0s
call SetUnitState(h0s,F0s,GetUnitState(q0s,a0s)+e0s)
set n0s="when calling alloc_CallbackSingle_doAfter_BlackPearl in BlackPearl, line 461"
set aW[qW]=n0s
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set d0s=fF
set RF[d0s]=683
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BlackPearl.","when calling error in BlackPearl, line 461")
set d0s=0
endif
else
set dF=dF-1
set d0s=nF[dF]
set RF[d0s]=683
endif
set qW=qW-1
set J9s=d0s
set rj[J9s]=I9s
set f0s=1.
set R0s=J9s
set T0s="when calling doAfter in BlackPearl, line 461"
set aW[qW]=T0s
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),f0s,R0s,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Z9s=null
set I9s=null
set H9s=null
set K9s=null
set X9s=null
set C9s=null
set V9s=null
set B9s=null
set N9s=null
set M9s=null
set w0s=null
set u0s=null
set r0s=null
set s0s=null
set i0s=null
set o0s=null
set l0s=null
set y0s=null
set p0s=null
set q0s=null
set a0s=null
set G0s=null
set h0s=null
set F0s=null
endfunction
function nvS takes nothing returns nothing
set qW=0
call k0s("via function reference BlackPearl, line 504")
endfunction
function o0S takes nothing returns boolean
local trigger K9S
local rect L9S
local region X9S
local trigger C9S
local boolexpr V9S
local trigger B9S
local trigger N9S
local trigger M9S
local playerunitevent w0S
local trigger u0S
local playerunitevent r0S
local integer s0S
local trigger t0S
local boolexpr i0S
local trigger S0S
local code c0S
set kl=CreateTrigger()
set jl=CreateTrigger()
set K9S=kl
set L9S=bj_mapInitialPlayableArea
set X9S=CreateRegion()
call RegionAddRect(X9S,L9S)
call TriggerRegisterEnterRegion(K9S,X9S,null)
set C9S=kl
set V9S=Condition(q3)
call TriggerAddCondition(C9S,V9S)
set B9S=kl
call DisableTrigger(B9S)
set N9S=jl
call DisableTrigger(N9S)
set M9S=jl
set w0S=EVENT_PLAYER_UNIT_DEATH
set u0S=M9S
set r0S=w0S
set s0S=0
loop
call TriggerRegisterPlayerUnitEvent(u0S,Player(s0S),r0S,null)
set s0S=s0S+1
exitwhen s0S==bj_MAX_PLAYER_SLOTS
endloop
set t0S=jl
set i0S=Condition(a3)
call TriggerAddCondition(t0S,i0S)
set S0S=jl
set c0S=n3
call TriggerAddAction(S0S,c0S)
set K9S=null
set L9S=null
set X9S=null
set C9S=null
set V9S=null
set B9S=null
set N9S=null
set M9S=null
set w0S=null
set u0S=null
set r0S=null
set t0S=null
set i0S=null
set S0S=null
return true
endfunction
function HXp takes unit EXp returns nothing
local unit PXp=EXp
local integer ZXp=GetUnitTypeId(PXp)
local player UXp
local integer IXp
local trigger AXp
local unit DXp
if ZXp==$78303231 then
set AXp=ah
call EnableTrigger(AXp)
set DXp=EXp
set UXp=GetOwningPlayer(DXp)
set IXp=GetPlayerId(UXp)
call RemoveUnitFromStock(O[IXp],A[IXp])
call RemoveUnitFromStock(b[IXp],A[IXp])
call RemoveUnitFromStock(l[IXp],A[IXp])
set A[IXp]=$6E726967
call AddUnitToStock(O[IXp],A[IXp],1,3)
call AddUnitToStock(b[IXp],A[IXp],1,3)
call AddUnitToStock(l[IXp],A[IXp],1,3)
endif
set UXp=null
set PXp=null
set AXp=null
set DXp=null
endfunction
function o1b takes nothing returns nothing
call HXp(GetTriggerUnit())
endfunction
function o4p takes nothing returns nothing
local rect c4p=Mc
set Xo[3]=Location(GetRectCenterX(c4p),GetRectCenterY(c4p))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set c4p=null
endfunction
function o5b takes nothing returns boolean
return true
endfunction
function initializeTable takes string w__wurst_stackPos returns nothing
local integer i_1
local integer this
local integer parentKey
local integer value
local string w__wurst_stackPos_1
local integer this_1
local integer parentKey_1
local integer value_1
local hashtable this_2
local integer parentKey_2
local integer childKey
local integer value_2
local string this_3
set aW[qW]=w__wurst_stackPos
set qW=qW+1
set i_1=0
loop
exitwhen i_1>15
set this=Lb
set this_3=Kb[i_1]
set parentKey=StringHash(this_3)
set value=i_1
set w__wurst_stackPos_1="when calling saveInt in Colors, line 281"
set aW[qW]=w__wurst_stackPos_1
set qW=qW+1
if KF[this]==0 then
if this==0 then
call L8c("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 43")
else
call L8c("Called Table.saveInt on invalid object.","when calling error in Table, line 43")
endif
endif
set this_1=this
set parentKey_1=parentKey
set value_1=value
set this_2=Sg
set parentKey_2=this_1
set childKey=parentKey_1
set value_2=value_1
call SaveInteger(this_2,parentKey_2,childKey,value_2)
set qW=qW-1
set i_1=i_1+1
endloop
set qW=qW-1
endfunction
function H5c takes string b2c returns boolean
local integer y2c
local integer p2c
local integer e2c
local integer q2c
local integer a2c
local integer n2c
local integer d2c
local integer f2c
local integer R2c
local integer T2c
local integer Y2c
local integer G2c
local integer g2c
local integer h2c
local integer F2c
local integer k2c
local integer j2c
local integer x2c
local integer v2c
local integer m2c
local integer Q2c
local integer W2c
local integer E2c
local integer Z2c
local integer U2c
local integer I2c
local integer P2c
local integer A2c
local integer D2c
local integer H2c
local integer J2c
local integer K2c
local integer L2c
local integer X2c
local integer C2c
local integer V2c
local integer B2c
local integer N2c
local integer M2c
local integer w5c
local integer u5c
local integer r5c
local integer s5c
local integer t5c
local integer i5c
local integer S5c
local integer c5c
local integer o5c
local integer O5c
local integer l5c
local integer b5c
local integer y5c
local integer p5c
local integer e5c
local integer q5c
local integer a5c
local integer n5c
local integer d5c
local integer f5c
local integer R5c
local integer T5c
local integer Y5c
local integer G5c
local integer g5c
local integer h5c
local integer F5c
local integer k5c
local integer j5c
local integer x5c
local integer v5c
local integer m5c
local integer Q5c
local integer W5c
local integer E5c
local integer Z5c
local integer U5c
local integer I5c
local integer P5c
local integer A5c
local integer D5c
set aW[qW]=b2c
set qW=qW+1
set y2c=255
set p2c=255
set e2c=255
set q2c=255
set Wb=y2c
set Eb=p2c
set Zb=e2c
set Ub=q2c
set a2c=0
set n2c=0
set d2c=0
set f2c=0
set Ib=a2c
set Pb=n2c
set Ab=d2c
set R2c=255
set T2c=2
set Y2c=2
set Db[0]=R2c
set Hb[0]=T2c
set Jb[0]=Y2c
set G2c=0
set g2c=65
set h2c=255
set Db[1]=G2c
set Hb[1]=g2c
set Jb[1]=h2c
set F2c=27
set k2c=229
set j2c=184
set Db[2]=F2c
set Hb[2]=k2c
set Jb[2]=j2c
set x2c=83
set v2c=0
set m2c=128
set Db[3]=x2c
set Hb[3]=v2c
set Jb[3]=m2c
set Q2c=255
set W2c=252
set E2c=0
set Db[4]=Q2c
set Hb[4]=W2c
set Jb[4]=E2c
set Z2c=254
set U2c=137
set I2c=13
set Db[5]=Z2c
set Hb[5]=U2c
set Jb[5]=I2c
set P2c=31
set A2c=191
set D2c=0
set Db[6]=P2c
set Hb[6]=A2c
set Jb[6]=D2c
set H2c=228
set J2c=90
set K2c=175
set Db[7]=H2c
set Hb[7]=J2c
set Jb[7]=K2c
set L2c=148
set X2c=149
set C2c=150
set Db[8]=L2c
set Hb[8]=X2c
set Jb[8]=C2c
set V2c=125
set B2c=190
set N2c=241
set Db[9]=V2c
set Hb[9]=B2c
set Jb[9]=N2c
set M2c=15
set w5c=97
set u5c=69
set Db[10]=M2c
set Hb[10]=w5c
set Jb[10]=u5c
set r5c=77
set s5c=41
set t5c=3
set Db[11]=r5c
set Hb[11]=s5c
set Jb[11]=t5c
set i5c=155
set S5c=0
set c5c=0
set Db[12]=i5c
set Hb[12]=S5c
set Jb[12]=c5c
set o5c=0
set O5c=0
set l5c=195
set Db[13]=o5c
set Hb[13]=O5c
set Jb[13]=l5c
set b5c=0
set y5c=234
set p5c=255
set Db[14]=b5c
set Hb[14]=y5c
set Jb[14]=p5c
set e5c=190
set q5c=0
set a5c=254
set Db[15]=e5c
set Hb[15]=q5c
set Jb[15]=a5c
set n5c=235
set d5c=205
set f5c=135
set Db[16]=n5c
set Hb[16]=d5c
set Jb[16]=f5c
set R5c=248
set T5c=164
set Y5c=139
set Db[17]=R5c
set Hb[17]=T5c
set Jb[17]=Y5c
set G5c=191
set g5c=255
set h5c=128
set Db[18]=G5c
set Hb[18]=g5c
set Jb[18]=h5c
set F5c=220
set k5c=185
set j5c=235
set Db[19]=F5c
set Hb[19]=k5c
set Jb[19]=j5c
set x5c=40
set v5c=40
set m5c=40
set Db[20]=x5c
set Hb[20]=v5c
set Jb[20]=m5c
set Q5c=235
set W5c=240
set E5c=255
set Db[21]=Q5c
set Hb[21]=W5c
set Jb[21]=E5c
set Z5c=0
set U5c=120
set I5c=30
set Db[22]=Z5c
set Hb[22]=U5c
set Jb[22]=I5c
set P5c=164
set A5c=111
set D5c=51
set Db[23]=P5c
set Hb[23]=A5c
set Jb[23]=D5c
set Kb[0]="0"
set Kb[1]="1"
set Kb[2]="2"
set Kb[3]="3"
set Kb[4]="4"
set Kb[5]="5"
set Kb[6]="6"
set Kb[7]="7"
set Kb[8]="8"
set Kb[9]="9"
set Kb[10]="A"
set Kb[11]="B"
set Kb[12]="C"
set Kb[13]="D"
set Kb[14]="E"
set Kb[15]="F"
set Lb=bMu("when calling new_Table in Colors, line 222")
call initializeTable("when calling initializeTable in Colors, line 284")
set qW=qW-1
return true
endfunction
function o5p takes nothing returns boolean
set qW=0
return H5c("via function reference Colors, line 1")
endfunction
function o5s takes nothing returns boolean
local trigger N2s
local trigger M2s
local playerunitevent w5s
local trigger u5s
local playerunitevent r5s
local integer s5s
local trigger t5s
local boolexpr i5s
local trigger S5s
local code c5s
set AG=CreateTrigger()
set N2s=AG
call DisableTrigger(N2s)
set M2s=AG
set w5s=EVENT_PLAYER_UNIT_ATTACKED
set u5s=M2s
set r5s=w5s
set s5s=0
loop
call TriggerRegisterPlayerUnitEvent(u5s,Player(s5s),r5s,null)
set s5s=s5s+1
exitwhen s5s==bj_MAX_PLAYER_SLOTS
endloop
set t5s=AG
set i5s=Condition(ouw)
call TriggerAddCondition(t5s,i5s)
set S5s=AG
set c5s=Ouw
call TriggerAddAction(S5s,c5s)
set N2s=null
set M2s=null
set w5s=null
set u5s=null
set r5s=null
set t5s=null
set i5s=null
set S5s=null
return true
endfunction
function o6r takes nothing returns boolean
local playerunitevent S6r=EVENT_PLAYER_UNIT_SPELL_CAST
local code c6r=P7
call emO(S6r,null,c6r,null)
set S6r=null
return true
endfunction
function o7t takes nothing returns nothing
local unit o6t=GetTriggerUnit()
local unit l6t=o6t
local player O6t=GetOwningPlayer(l6t)
local unit b6t
local string y6t
local real p6t
local real e6t
local unit q6t
local unittype a6t
local unit n6t
local string d6t
local real f6t
local real R6t
local unit T6t
local unittype Y6t
local unit G6t
local string g6t
local real h6t
local real F6t
local unit k6t
local unittype j6t
local unit x6t
local string v6t
local real m6t
local real Q6t
local unit W6t
local unittype E6t
local unit Z6t
local string U6t
local real I6t
local real P6t
local unit A6t
local unittype D6t
local unit H6t
local string J6t
local real K6t
local real L6t
local unit X6t
local unittype C6t
local real V6t
local real B6t
local real N6t
local real M6t
local real w7t
local real u7t
local real r7t
local real s7t
local real t7t
local real i7t
local real S7t
local real c7t
if O6t==du then
set b6t=o6t
set y6t="attack"
set V6t=Qw[21]
set B6t=Ww[21]
set p6t=V6t
set e6t=B6t
call IssuePointOrder(b6t,y6t,p6t,e6t)
set q6t=o6t
set a6t=UNIT_TYPE_HERO
if IsUnitType(q6t,a6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,21)
endif
endif
if O6t==nu then
if Ew[2]==true then
set n6t=o6t
set d6t="attack"
set N6t=Qw[45]
set M6t=Ww[45]
set f6t=N6t
set R6t=M6t
call IssuePointOrder(n6t,d6t,f6t,R6t)
set T6t=o6t
set Y6t=UNIT_TYPE_HERO
if IsUnitType(T6t,Y6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,45)
endif
else
set G6t=o6t
set g6t="attack"
set w7t=Qw[21]
set u7t=Ww[21]
set h6t=w7t
set F6t=u7t
call IssuePointOrder(G6t,g6t,h6t,F6t)
set k6t=o6t
set j6t=UNIT_TYPE_HERO
if IsUnitType(k6t,j6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,21)
endif
endif
endif
if O6t==fu then
set x6t=o6t
set v6t="attack"
set r7t=Qw[45]
set s7t=Ww[45]
set m6t=r7t
set Q6t=s7t
call IssuePointOrder(x6t,v6t,m6t,Q6t)
set W6t=o6t
set E6t=UNIT_TYPE_HERO
if IsUnitType(W6t,E6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,45)
endif
endif
if O6t==Ru then
if Ew[0]==true then
set Z6t=o6t
set U6t="attack"
set t7t=Qw[21]
set i7t=Ww[21]
set I6t=t7t
set P6t=i7t
call IssuePointOrder(Z6t,U6t,I6t,P6t)
set A6t=o6t
set D6t=UNIT_TYPE_HERO
if IsUnitType(A6t,D6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,21)
endif
else
set H6t=o6t
set J6t="attack"
set S7t=Qw[45]
set c7t=Ww[45]
set K6t=S7t
set L6t=c7t
call IssuePointOrder(H6t,J6t,K6t,L6t)
set X6t=o6t
set C6t=UNIT_TYPE_HERO
if IsUnitType(X6t,C6t) then
call SaveInteger(qu,GetHandleId(o6t),$6D6F7665,45)
endif
endif
endif
set o6t=null
set O6t=null
set l6t=null
set b6t=null
set q6t=null
set a6t=null
set n6t=null
set T6t=null
set Y6t=null
set G6t=null
set k6t=null
set j6t=null
set x6t=null
set W6t=null
set E6t=null
set Z6t=null
set A6t=null
set D6t=null
set H6t=null
set X6t=null
set C6t=null
endfunction
function o7u takes nothing returns boolean
return true
endfunction
function o9b takes nothing returns boolean
return true
endfunction
function oAu takes nothing returns boolean
local trigger NPu
local trigger MPu
local playerunitevent wAu
local integer uAu
local trigger rAu
local rect sAu
local region tAu
local trigger iAu
local boolexpr SAu
local trigger cAu
set Jy=CreateTrigger()
set Ky=CreateTrigger()
set NPu=Jy
call DisableTrigger(NPu)
set MPu=Jy
set wAu=EVENT_PLAYER_HERO_LEVEL
set uAu=0
loop
call TriggerRegisterPlayerUnitEvent(MPu,Player(uAu),wAu,null)
set uAu=uAu+1
exitwhen uAu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Jy,t4)
set rAu=Ky
set sAu=bj_mapInitialPlayableArea
set tAu=CreateRegion()
call RegionAddRect(tAu,sAu)
call TriggerRegisterEnterRegion(rAu,tAu,null)
set iAu=Ky
set SAu=Condition(i4)
call TriggerAddCondition(iAu,SAu)
set cAu=Ky
call DisableTrigger(cAu)
set NPu=null
set MPu=null
set wAu=null
set rAu=null
set sAu=null
set tAu=null
set iAu=null
set SAu=null
set cAu=null
return true
endfunction
function oBS takes nothing returns nothing
local unit MVS=GetTriggerUnit()
local unit wBS=MVS
local string uBS="attack"
local real SBS=Qw[14]
local real cBS=Ww[14]
local real rBS=SBS
local real sBS=cBS
local unit tBS
local unittype iBS
call IssuePointOrder(wBS,uBS,rBS,sBS)
set tBS=MVS
set iBS=UNIT_TYPE_HERO
if IsUnitType(tBS,iBS) then
call SaveInteger(qu,GetHandleId(MVS),$6D6F7665,14)
endif
set MVS=null
set wBS=null
set tBS=null
set iBS=null
endfunction
function PJo takes string kJo returns nothing
local unit jJo
local integer xJo
local unit vJo
local unit mJo
local integer QJo
local unit WJo
local integer EJo
local string ZJo
local integer UJo
local boolean IJo
set aW[qW]=kJo
set qW=qW+1
set jJo=GetTriggerUnit()
set vJo=jJo
if GetUnitTypeId(vJo)==$484D3034 then
if GetHeroLevel(jJo)>=8 then
set mJo=jJo
set QJo=$4930324D
set IJo=RTS(mJo,QJo)!=null==false
else
set IJo=false
endif
if IJo then
set WJo=jJo
set EJo=$4930324D
call UnitAddItemById(WJo,EJo)
set ZJo="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Himeron in Himeron, line 478"
set aW[qW]=ZJo
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set UJo=GF
set gF[UJo]=672
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Himeron.","when calling error in Himeron, line 478")
set UJo=0
endif
else
set YF=YF-1
set UJo=TF[YF]
set gF[UJo]=672
endif
set qW=qW-1
set xJo=UJo
set Xx[xJo]=jJo
call GtO(30.,xJo,"when calling doPeriodically in Himeron, line 478")
endif
endif
set qW=qW-1
set jJo=null
set vJo=null
set mJo=null
set WJo=null
endfunction
function oBr takes nothing returns nothing
set qW=0
call PJo("via function reference Himeron, line 473")
endfunction
function oEi takes nothing returns nothing
local group SEi=qq
local unit cEi=GetEnumUnit()
call GroupAddUnit(SEi,cEi)
set SEi=null
set cEi=null
endfunction
function oGp takes nothing returns boolean
local trigger wGp
local trigger uGp
local playerunitevent rGp
local trigger sGp
local playerunitevent tGp
local integer iGp
local trigger SGp
local code cGp
set yp=CreateTrigger()
set wGp=yp
call DisableTrigger(wGp)
set uGp=yp
set rGp=EVENT_PLAYER_UNIT_DEATH
set sGp=uGp
set tGp=rGp
set iGp=0
loop
call TriggerRegisterPlayerUnitEvent(sGp,Player(iGp),tGp,null)
set iGp=iGp+1
exitwhen iGp==bj_MAX_PLAYER_SLOTS
endloop
set SGp=yp
set cGp=a4
call TriggerAddAction(SGp,cGp)
set wGp=null
set uGp=null
set rGp=null
set sGp=null
set tGp=null
set SGp=null
return true
endfunction
function XcS takes string FcS returns nothing
local unit kcS
local unit jcS
local unit xcS
local handle vcS
local unit mcS
local handle QcS
local unit WcS
local unit EcS
local unittype ZcS
local unit UcS
local unittype IcS
local unit PcS
local handle AcS
local integer DcS
local unit HcS
local integer JcS
local boolean KcS
local integer LcS
set aW[qW]=FcS
set qW=qW+1
set kcS=GetKillingUnit()
set jcS=GetTriggerUnit()
set HcS=jcS
set DcS=CG
set xcS=kcS
set vcS=xcS
if HcS==Uqc(gar(DcS,GetHandleId(vcS),"when calling get in SpecialUnits, line 43"),"when calling unitFromIndex in SpecialUnits, line 43") then
set JcS=CG
set mcS=kcS
set QcS=mcS
call plc(JcS,GetHandleId(QcS),"when calling remove in SpecialUnits, line 44")
else
set WcS=kcS
set EcS=WcS
set ZcS=UNIT_TYPE_HERO
if IsUnitType(EcS,ZcS) then
set UcS=WcS
set IcS=UNIT_TYPE_ANCIENT
set KcS=IsUnitType(UcS,IcS)
else
set KcS=false
endif
if KcS then
set LcS=CG
set PcS=kcS
set AcS=PcS
call plc(LcS,GetHandleId(AcS),"when calling remove in SpecialUnits, line 46")
endif
endif
set qW=qW-1
set kcS=null
set jcS=null
set xcS=null
set vcS=null
set mcS=null
set QcS=null
set WcS=null
set EcS=null
set ZcS=null
set UcS=null
set IcS=null
set PcS=null
set AcS=null
set HcS=null
endfunction
function oHl takes nothing returns nothing
set qW=0
call XcS("via function reference SpecialUnits, line 40")
endfunction
function oIp takes nothing returns boolean
return true
endfunction
function Spc takes nothing returns nothing
local group Cyc
local filterfunc Vyc
local unit Byc
local group Nyc
local group Myc
local group wpc
local unit upc
local unit rpc
local integer spc
local group tpc
local boolexpr ipc
set cp=true
set Cyc=CreateGroup()
set Vyc=Filter(q4)
call GroupEnumUnitsInRect(Cyc,bj_mapInitialPlayableArea,Vyc)
set Nyc=Cyc
loop
set Myc=Nyc
exitwhen not (FirstOfGroup(Myc)!=null)
set wpc=Nyc
set upc=FirstOfGroup(wpc)
call GroupRemoveUnit(wpc,upc)
set Byc=upc
set rpc=Byc
set spc=$41706976
call UnitAddAbility(rpc,spc)
call SetUnitVertexColorBJ(Byc,100.,100.,100.,45.)
endloop
set tpc=Cyc
call DestroyGroup(tpc)
set ipc=Vyc
call DestroyBoolExpr(ipc)
set Cyc=null
set Vyc=null
set Byc=null
set Nyc=null
set Myc=null
set wpc=null
set upc=null
set rpc=null
set tpc=null
set ipc=null
endfunction
function a6r takes nothing returns nothing
local unit O6r=Ly
local player e6r=GetOwningPlayer(O6r)
local unit l6r=Ly
local real q6r=GetUnitX(l6r)
local unit b6r=Ly
local unit y6r
local integer p6r
set op=CreateUnit(e6r,$75303038,q6r,GetUnitY(b6r),0.)
set y6r=op
set p6r=$41413031
call UnitAddAbility(y6r,p6r)
set O6r=null
set l6r=null
set b6r=null
set y6r=null
set e6r=null
endfunction
function c6t takes nothing returns nothing
local unit w6t=Ly
local player i6t=GetOwningPlayer(w6t)
local unit u6t=Ly
local real S6t=GetUnitX(u6t)
local unit r6t=Ly
local unit M5s=CreateUnit(i6t,$75303038,S6t,GetUnitY(r6t),0.)
local unit s6t=M5s
local integer t6t=$41413032
call UnitAddAbility(s6t,t6t)
set M5s=null
set w6t=null
set u6t=null
set r6t=null
set s6t=null
set i6t=null
endfunction
function tLl takes player UKl,string IKl returns nothing
local integer PKl
local integer AKl
local integer DKl
local string HKl
local integer JKl
local string KKl
local integer LKl
local integer XKl
local string CKl
local real VKl
local player BKl
local unit NKl
local string MKl
local integer wLl
local real uLl
local integer rLl
local string sLl
set aW[qW]=IKl
set qW=qW+1
call cdS(lp,$5230355A,$52303633,$52303630,$52303634,$52303558,$52303632,$52303631,"when calling add in DragonForge, line 720")
set DKl=lp
set HKl="when calling shuffle in DragonForge, line 721"
set aW[qW]=HKl
set qW=qW+1
if ok[DKl]==0 then
if DKl==0 then
call L8c("Nullpointer exception when calling LinkedList.shuffle","when calling error in LinkedList, line 242")
else
call L8c("Called LinkedList.shuffle on invalid object.","when calling error in LinkedList, line 242")
endif
endif
call eAl(DKl,"when calling shuffle in LinkedList, line 242")
set qW=qW-1
set JKl=lp
set KKl="when calling getFirst in DragonForge, line 722"
set aW[qW]=KKl
set qW=qW+1
if ok[JKl]==0 then
if JKl==0 then
call L8c("Nullpointer exception when calling LinkedList.getFirst","when calling error in LinkedList, line 88")
else
call L8c("Called LinkedList.getFirst on invalid object.","when calling error in LinkedList, line 88")
endif
endif
set XKl=JKl
set LKl=Hv[Kv[Vv[XKl]]]
set qW=qW-1
set PKl=LKl
if PKl==$5230355A then
set bp="4 lvls Melting Armour"
endif
if PKl==$52303633 then
set bp="4 lvls Enkindling"
endif
if PKl==$52303630 then
set bp="4 lvls Pride"
endif
if PKl==$52303634 then
set bp="4 lvls Dragon's Blood"
endif
if PKl==$52303558 then
set bp="4 lvls Stalker"
endif
if PKl==$52303632 then
set bp="4 lvls Dancing Fire"
endif
if PKl==$52303631 then
set bp="4 lvls Devour/4 lvls Powerful Blow"
endif
call SetPlayerTechResearched(UKl,PKl,1)
call eWp(lp,PKl,"when calling remove in DragonForge, line 738")
set CKl=bp
set VKl=10.
set NKl=Ly
set BKl=GetOwningPlayer(NKl)
call DisplayTimedTextToPlayer(BKl,0.,0.,VKl,CKl)
set MKl="when calling alloc_CallbackSingle_doAfter_DragonForge in DragonForge, line 740"
set aW[qW]=MKl
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set wLl=fF
set RF[wLl]=707
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DragonForge.","when calling error in DragonForge, line 740")
set wLl=0
endif
else
set dF=dF-1
set wLl=nF[dF]
set RF[wLl]=707
endif
set qW=qW-1
set AKl=wLl
set mj[AKl]=PKl
set Qj[AKl]=UKl
set uLl=1.
set rLl=AKl
set sLl="when calling doAfter in DragonForge, line 740"
set aW[qW]=sLl
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),uLl,rLl,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set BKl=null
set NKl=null
endfunction
function RXt takes string pJt returns nothing
local integer eJt
local unit qJt
local player aJt
local integer nJt
local integer dJt
local unit fJt
local unit RJt
local player TJt
local integer YJt
local player GJt
local playerstate gJt
local integer hJt
local player FJt
local playerstate kJt
local unit jJt
local integer xJt
local unit vJt
local integer mJt
local unit QJt
local integer WJt
local unit EJt
local integer ZJt
local unit UJt
local integer IJt
local unit PJt
local integer AJt
local unit DJt
local integer HJt
local unit JJt
local integer KJt
local unit LJt
local integer XJt
local unit CJt
local integer VJt
local unit BJt
local integer NJt
local unit MJt
local integer wKt
local unit uKt
local integer rKt
local unit sKt
local integer tKt
local unit iKt
local integer SKt
local unit cKt
local integer oKt
local player OKt
local unit lKt
local unit bKt
local integer yKt
local unit pKt
local integer eKt
local unit qKt
local integer aKt
local unit nKt
local integer dKt
local player fKt
local unit RKt
local unit TKt
local integer YKt
local unit GKt
local integer gKt
local unit hKt
local integer FKt
local unit kKt
local integer jKt
local unit xKt
local integer vKt
local unit mKt
local integer QKt
local unit WKt
local integer EKt
local unit ZKt
local integer UKt
local unit IKt
local integer PKt
local unit AKt
local integer DKt
local unit HKt
local integer JKt
local unit KKt
local integer LKt
local trigger XKt
local trigger CKt
local unit VKt
local integer BKt
local unit NKt
local integer MKt
local unit wLt
local integer uLt
local unit rLt
local integer sLt
local unit tLt
local unit iLt
local integer SLt
local unit cLt
local integer oLt
local unit OLt
local integer lLt
local unit bLt
local integer yLt
local unit pLt
local integer eLt
local unit qLt
local integer aLt
local unit nLt
local integer dLt
local unit fLt
local integer RLt
local trigger TLt
local unit YLt
local integer GLt
local unit gLt
local integer hLt
local unit FLt
local integer kLt
local unit jLt
local integer xLt
local trigger vLt
local unit mLt
local integer QLt
local unit WLt
local integer ELt
local unit ZLt
local integer ULt
local unit ILt
local integer PLt
local trigger ALt
local unit DLt
local integer HLt
local unit JLt
local integer KLt
local unit LLt
local integer XLt
local unit CLt
local integer VLt
local player BLt
local unit NLt
local unit MLt
local integer wXt
local unit uXt
local integer rXt
local unit sXt
local integer tXt
local unit iXt
local integer SXt
local player cXt
local unit oXt
local unit OXt
local integer lXt
local unit bXt
local integer yXt
local unit pXt
local integer eXt
local unit qXt
local integer aXt
local player nXt
local player dXt
local playerstate fXt
set aW[qW]=pJt
set qW=qW+1
set eJt=GetSpellAbilityId()
set qJt=GetSpellAbilityUnit()
set fJt=qJt
set aJt=GetOwningPlayer(fJt)
if eJt==$41305648 then
set nJt=750
call UuS(qJt,nJt)
set dJt=0
loop
exitwhen dJt>3
set nXt=UY[dJt]
set RJt=Ly
if nXt==GetOwningPlayer(RJt) then
set TJt=UY[dJt]
set YJt=nJt
set GJt=TJt
set gJt=PLAYER_STATE_RESOURCE_GOLD
set hJt=YJt
set dXt=GJt
set fXt=gJt
set FJt=GJt
set kJt=gJt
call SetPlayerState(dXt,fXt,GetPlayerState(FJt,kJt)+hJt)
set Fr[dJt]=Fr[dJt]+nJt
set hr[dJt]=hr[dJt]+nJt
set Cr[dJt]=Cr[dJt]+nJt
endif
set dJt=dJt+1
endloop
endif
if eJt==$41305A4C then
if Cy==false and Cy==false and Vy==false and Ny==false then
set jJt=Ly
set xJt=$41305A4D
call UnitAddAbility(jJt,xJt)
set vJt=Ly
set mJt=$41305A4E
call UnitAddAbility(vJt,mJt)
set QJt=Ly
set WJt=$41305A4F
call UnitAddAbility(QJt,WJt)
set EJt=Ly
set ZJt=$41305A4C
call IncUnitAbilityLevel(EJt,ZJt)
endif
if Vy==false and Cy==true and By==false and Ny==false then
set UJt=Ly
set IJt=$41305A50
call UnitAddAbility(UJt,IJt)
set PJt=Ly
set AJt=$41305A52
call UnitAddAbility(PJt,AJt)
set DJt=Ly
set HJt=$41305A53
call UnitAddAbility(DJt,HJt)
set JJt=Ly
set KJt=$41305A4C
call IncUnitAbilityLevel(JJt,KJt)
endif
if By==false and Cy==true and Vy==true and Ny==false then
set LJt=Ly
set XJt=$41305A54
call UnitAddAbility(LJt,XJt)
set CJt=Ly
set VJt=$41305A55
call UnitAddAbility(CJt,VJt)
set BJt=Ly
set NJt=$41305A56
call UnitAddAbility(BJt,NJt)
set MJt=Ly
set wKt=$41305A4C
call IncUnitAbilityLevel(MJt,wKt)
endif
if Ny==false and Cy==true and Vy==true and By==true then
set uKt=Ly
set rKt=$41305A57
call UnitAddAbility(uKt,rKt)
set sKt=Ly
set tKt=$41305A58
call UnitAddAbility(sKt,tKt)
set iKt=Ly
set SKt=$41305A59
call UnitAddAbility(iKt,SKt)
set cKt=Ly
set oKt=$41305A4C
call IncUnitAbilityLevel(cKt,oKt)
endif
endif
if eJt==$41305A4D then
call SetPlayerTechResearched(aJt,$52303551,1)
set lKt=Ly
set OKt=GetOwningPlayer(lKt)
call SetPlayerTechResearched(Player(GetPlayerId(OKt)+4),$52303551,1)
set bKt=Ly
set yKt=$41305A4E
call UnitRemoveAbility(bKt,yKt)
set pKt=Ly
set eKt=$41305A4F
call UnitRemoveAbility(pKt,eKt)
set qKt=Ly
set aKt=$41305A4D
call UnitRemoveAbility(qKt,aKt)
set nKt=Ly
set dKt=$41413034
call UnitAddAbility(nKt,dKt)
set Cy=true
endif
if eJt==$41305A4E then
call SetPlayerTechResearched(aJt,$52303557,1)
set RKt=Ly
set fKt=GetOwningPlayer(RKt)
call SetPlayerTechResearched(Player(GetPlayerId(fKt)+4),$52303557,1)
set TKt=Ly
set YKt=$41305A4D
call UnitRemoveAbility(TKt,YKt)
set GKt=Ly
set gKt=$41305A4F
call UnitRemoveAbility(GKt,gKt)
set hKt=Ly
set FKt=$41305A4E
call UnitRemoveAbility(hKt,FKt)
set kKt=Ly
set jKt=$41413035
call UnitAddAbility(kKt,jKt)
set Cy=true
endif
if eJt==$41305A4F then
set xKt=Ly
set vKt=$41305A4D
call UnitRemoveAbility(xKt,vKt)
set mKt=Ly
set QKt=$41305A4E
call UnitRemoveAbility(mKt,QKt)
set WKt=Ly
set EKt=$41305A4F
call UnitRemoveAbility(WKt,EKt)
set ZKt=Ly
set UKt=$41413036
call UnitAddAbility(ZKt,UKt)
set Cy=true
endif
if eJt==$41305A50 then
call SetPlayerTechResearched(aJt,$52303335,1)
set IKt=Ly
set PKt=$41305A50
call UnitRemoveAbility(IKt,PKt)
set AKt=Ly
set DKt=$41305A52
call UnitRemoveAbility(AKt,DKt)
set HKt=Ly
set JKt=$41305A53
call UnitRemoveAbility(HKt,JKt)
set KKt=Ly
set LKt=$41413037
call UnitAddAbility(KKt,LKt)
set Vy=true
endif
if eJt==$41305A52 then
set XKt=wp
call EnableTrigger(XKt)
set CKt=sp
call EnableTrigger(CKt)
set VKt=Ly
set BKt=$41305A50
call UnitRemoveAbility(VKt,BKt)
set NKt=Ly
set MKt=$41305A52
call UnitRemoveAbility(NKt,MKt)
set wLt=Ly
set uLt=$41305A53
call UnitRemoveAbility(wLt,uLt)
set rLt=Ly
set sLt=$41413038
call UnitAddAbility(rLt,sLt)
set Vy=true
endif
if eJt==$41305A53 then
set tLt=Ly
call tLl(GetOwningPlayer(tLt),"when calling randomResearch in DragonForge, line 883")
set iLt=Ly
set SLt=$41305A50
call UnitRemoveAbility(iLt,SLt)
set cLt=Ly
set oLt=$41305A52
call UnitRemoveAbility(cLt,oLt)
set OLt=Ly
set lLt=$41305A53
call UnitRemoveAbility(OLt,lLt)
set bLt=Ly
set yLt=$41413039
call UnitAddAbility(bLt,yLt)
set Vy=true
endif
if eJt==$41305A54 then
call c6t()
set pLt=Ly
set eLt=$41305A54
call UnitRemoveAbility(pLt,eLt)
set qLt=Ly
set aLt=$41305A55
call UnitRemoveAbility(qLt,aLt)
set nLt=Ly
set dLt=$41305A56
call UnitRemoveAbility(nLt,dLt)
set fLt=Ly
set RLt=$41414130
call UnitAddAbility(fLt,RLt)
set By=true
endif
if eJt==$41305A55 then
set TLt=rp
call EnableTrigger(TLt)
set YLt=Ly
set GLt=$41305A54
call UnitRemoveAbility(YLt,GLt)
set gLt=Ly
set hLt=$41305A55
call UnitRemoveAbility(gLt,hLt)
set FLt=Ly
set kLt=$41305A56
call UnitRemoveAbility(FLt,kLt)
set jLt=Ly
set xLt=$41414131
call UnitAddAbility(jLt,xLt)
set By=true
endif
if eJt==$41305A56 then
call Spc()
set vLt=Sp
call EnableTrigger(vLt)
set mLt=Ly
set QLt=$41305A54
call UnitRemoveAbility(mLt,QLt)
set WLt=Ly
set ELt=$41305A55
call UnitRemoveAbility(WLt,ELt)
set ZLt=Ly
set ULt=$41305A56
call UnitRemoveAbility(ZLt,ULt)
set ILt=Ly
set PLt=$41414132
call UnitAddAbility(ILt,PLt)
set By=true
endif
if eJt==$41305A57 then
set ALt=up
call EnableTrigger(ALt)
set DLt=Ly
set HLt=$41305A57
call UnitRemoveAbility(DLt,HLt)
set JLt=Ly
set KLt=$41305A58
call UnitRemoveAbility(JLt,KLt)
set LLt=Ly
set XLt=$41305A59
call UnitRemoveAbility(LLt,XLt)
set CLt=Ly
set VLt=$41414133
call UnitAddAbility(CLt,VLt)
set Ny=true
call SetPlayerTechResearched(aJt,$52303554,1)
set NLt=Ly
set BLt=GetOwningPlayer(NLt)
call SetPlayerTechResearched(Player(GetPlayerId(BLt)+4),$52303554,1)
endif
if eJt==$41305A58 then
call a6r()
set MLt=Ly
set wXt=$41305A57
call UnitRemoveAbility(MLt,wXt)
set uXt=Ly
set rXt=$41305A58
call UnitRemoveAbility(uXt,rXt)
set sXt=Ly
set tXt=$41305A59
call UnitRemoveAbility(sXt,tXt)
set iXt=Ly
set SXt=$41414134
call UnitAddAbility(iXt,SXt)
set Ny=true
endif
if eJt==$41305A59 then
call SetPlayerTechResearched(aJt,$52303635,1)
set oXt=Ly
set cXt=GetOwningPlayer(oXt)
call SetPlayerTechResearched(Player(GetPlayerId(cXt)+4),$52303635,1)
set OXt=Ly
set lXt=$41305A57
call UnitRemoveAbility(OXt,lXt)
set bXt=Ly
set yXt=$41305A58
call UnitRemoveAbility(bXt,yXt)
set pXt=Ly
set eXt=$41305A59
call UnitRemoveAbility(pXt,eXt)
set qXt=Ly
set aXt=$41414135
call UnitAddAbility(qXt,aXt)
set Ny=true
endif
set qW=qW-1
set qJt=null
set aJt=null
set fJt=null
set RJt=null
set TJt=null
set GJt=null
set gJt=null
set FJt=null
set kJt=null
set jJt=null
set vJt=null
set QJt=null
set EJt=null
set UJt=null
set PJt=null
set DJt=null
set JJt=null
set LJt=null
set CJt=null
set BJt=null
set MJt=null
set uKt=null
set sKt=null
set iKt=null
set cKt=null
set OKt=null
set lKt=null
set bKt=null
set pKt=null
set qKt=null
set nKt=null
set fKt=null
set RKt=null
set TKt=null
set GKt=null
set hKt=null
set kKt=null
set xKt=null
set mKt=null
set WKt=null
set ZKt=null
set IKt=null
set AKt=null
set HKt=null
set KKt=null
set XKt=null
set CKt=null
set VKt=null
set NKt=null
set wLt=null
set rLt=null
set tLt=null
set iLt=null
set cLt=null
set OLt=null
set bLt=null
set pLt=null
set qLt=null
set nLt=null
set fLt=null
set TLt=null
set YLt=null
set gLt=null
set FLt=null
set jLt=null
set vLt=null
set mLt=null
set WLt=null
set ZLt=null
set ILt=null
set ALt=null
set DLt=null
set JLt=null
set LLt=null
set CLt=null
set BLt=null
set NLt=null
set MLt=null
set uXt=null
set sXt=null
set iXt=null
set cXt=null
set oXt=null
set OXt=null
set bXt=null
set pXt=null
set qXt=null
set nXt=null
set dXt=null
set fXt=null
endfunction
function oMS takes nothing returns nothing
set qW=0
call RXt("via function reference DragonForge, line 973")
endfunction
function oNe takes nothing returns nothing
local player WBe=GetTriggerPlayer()
local integer EBe=0
local integer ZBe
local integer UBe
local integer IBe
local integer PBe
local player ABe
local unit DBe
local unit HBe
local integer JBe
local player KBe
local unit LBe
local unit XBe
local integer CBe
local unit VBe
local integer BBe
local player NBe
local unit MBe
local unit wNe
local integer uNe
local player rNe
local unit sNe
local unit tNe
local integer iNe
local unit SNe
local integer cNe
loop
exitwhen EBe>3
if ju==true then
set ABe=WBe
set ZBe=QY[GetPlayerId(ABe)]
set DBe=o[EBe]
if GetOwningPlayer(DBe)==WBe and ZBe!=0 then
set HBe=o[EBe]
set JBe=ZBe
call UnitAddAbility(HBe,JBe)
endif
set KBe=WBe
set UBe=x[GetPlayerId(KBe)]
set LBe=o[EBe]
if GetOwningPlayer(LBe)==WBe and UBe!=0 then
set XBe=o[EBe]
set CBe=j[EBe]
call UnitRemoveAbility(XBe,CBe)
set VBe=o[EBe]
set BBe=UBe
call UnitAddAbility(VBe,BBe)
endif
else
set NBe=WBe
set IBe=mY[GetPlayerId(NBe)]
set MBe=o[EBe]
if GetOwningPlayer(MBe)==WBe and IBe!=0 then
set wNe=o[EBe]
set uNe=IBe
call UnitAddAbility(wNe,uNe)
endif
set rNe=WBe
set PBe=x[GetPlayerId(rNe)]
set sNe=o[EBe]
if GetOwningPlayer(sNe)==WBe and PBe!=0 then
set tNe=o[EBe]
set iNe=j[EBe]
call UnitRemoveAbility(tNe,iNe)
set SNe=o[EBe]
set cNe=PBe
call UnitAddAbility(SNe,cNe)
endif
endif
set EBe=EBe+1
endloop
set WBe=null
set ABe=null
set DBe=null
set HBe=null
set KBe=null
set LBe=null
set XBe=null
set VBe=null
set NBe=null
set MBe=null
set wNe=null
set rNe=null
set sNe=null
set tNe=null
set SNe=null
endfunction
function oTS takes nothing returns boolean
local playerunitevent NRS
local code MRS
local playerunitevent wTS
local code uTS
local playerunitevent rTS
local code sTS
local playerunitevent tTS
local code iTS
local playerunitevent STS
local code cTS
set wl=null
set ul=null
set tl=null
set Sl=null
set NRS=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set MRS=WM
call emO(NRS,null,MRS,null)
set wTS=EVENT_PLAYER_UNIT_SPELL_CAST
set uTS=EM
call emO(wTS,null,uTS,null)
set rTS=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sTS=ZM
call emO(rTS,null,sTS,null)
set tTS=EVENT_PLAYER_UNIT_ATTACKED
set iTS=UM
call emO(tTS,null,iTS,null)
set STS=EVENT_PLAYER_UNIT_DEATH
set cTS=IM
call emO(STS,null,cTS,null)
set NRS=null
set wTS=null
set rTS=null
set tTS=null
set STS=null
return true
endfunction
function oVw takes nothing returns boolean
local playerunitevent SVw=EVENT_PLAYER_HERO_LEVEL
local code cVw=u5
call emO(SVw,null,cVw,null)
set SVw=null
return true
endfunction
function oap takes nothing returns boolean
local unit Lqp=GetFilterUnit()
local unit Xqp=Lqp
local unit Cqp
local unit Vqp
local unit Bqp
local player Nqp
local unit Mqp
local unit wap
local integer uap
local unit rap
local integer sap
local boolean tap
local boolean iap
local boolean Sap
local boolean cap
if UnitAlive(Xqp)==true then
set Cqp=Lqp
set Vqp=GetSpellAbilityUnit()
if Cqp!=null and Vqp!=null then
set Bqp=Cqp
set Mqp=Vqp
set Nqp=GetOwningPlayer(Mqp)
set tap=Bqp!=null and IsUnitAlly(Bqp,Nqp)
else
set tap=false
endif
set iap=tap==true
else
set iap=false
endif
if iap then
set wap=Lqp
set uap=$42303555
set Sap=GetUnitAbilityLevel(wap,uap)==0
else
set Sap=false
endif
if Sap then
set rap=Lqp
set sap=$42303633
set cap=GetUnitAbilityLevel(rap,sap)==0
else
set cap=false
endif
set Lqp=null
set Xqp=null
set Cqp=null
set Vqp=null
set Bqp=null
set Nqp=null
set Mqp=null
set wap=null
set rap=null
return cap
endfunction
function odl takes nothing returns nothing
local unit Unl=GetTriggerUnit()
local unit Dnl=Unl
local integer Inl=GetUnitTypeId(Dnl)
local unit Hnl=Unl
local player Pnl=GetOwningPlayer(Hnl)
local integer Anl=GetPlayerId(Pnl)
local sound Jnl
local trigger Knl
local trigger Lnl
local trigger Xnl
local trigger Cnl
local trigger Vnl
local trigger Bnl
local trigger Nnl
local trigger Mnl
local trigger wdl
local trigger udl
local sound rdl
local unit sdl
local unit tdl
local trigger idl
local trigger Sdl
local real cdl
if Inl==$6E303250 then
set Jnl=mn
if Jnl!=null then
call StartSound(Jnl)
endif
set Knl=Ua
call EnableTrigger(Knl)
set Lnl=Ia
call EnableTrigger(Lnl)
set Xnl=Pa
call EnableTrigger(Xnl)
set Cnl=Aa
call EnableTrigger(Cnl)
set Vnl=ed
call EnableTrigger(Vnl)
set t[Anl]=$4830324B
endif
if Inl==$78313131 then
call RemoveUnitFromStock(O[Anl],A[Anl])
call RemoveUnitFromStock(b[Anl],A[Anl])
call RemoveUnitFromStock(l[Anl],A[Anl])
set A[Anl]=$78303065
call AddUnitToStock(O[Anl],A[Anl],1,3)
call AddUnitToStock(b[Anl],A[Anl],1,3)
call AddUnitToStock(l[Anl],A[Anl],1,3)
endif
if Inl==$6E303043 then
call RemoveUnitFromStock(O[Anl],D[Anl])
call RemoveUnitFromStock(b[Anl],D[Anl])
call RemoveUnitFromStock(l[Anl],D[Anl])
set D[Anl]=$78303069
call AddUnitToStock(O[Anl],D[Anl],1,3)
call AddUnitToStock(b[Anl],D[Anl],1,3)
call AddUnitToStock(l[Anl],D[Anl],1,3)
endif
if Inl==$6E303044 then
call RemoveUnitFromStock(O[Anl],H[Anl])
call RemoveUnitFromStock(b[Anl],H[Anl])
call RemoveUnitFromStock(l[Anl],H[Anl])
set H[Anl]=$7830306A
call AddUnitToStock(O[Anl],H[Anl],1,3)
call AddUnitToStock(b[Anl],H[Anl],1,3)
call AddUnitToStock(l[Anl],H[Anl],1,3)
endif
if Inl==$6E303041 then
set J[Anl]=$7830306B
endif
if Inl==$6E303042 then
set Bnl=ph
call EnableTrigger(Bnl)
set K[Anl]=$7830306C
endif
if Inl==$6E30324C then
set L[Anl]=$6E303257
endif
if Inl==$78303036 then
set Nnl=Ll
call EnableTrigger(Nnl)
set Mnl=Pl
call EnableTrigger(Mnl)
set wdl=Al
call EnableTrigger(wdl)
set udl=Dl
call EnableTrigger(udl)
set Xl=Unl
set rdl=vl
if rdl!=null then
call StartSound(rdl)
endif
set Jl=90
set sdl=Xl
set cdl=GetUnitX(sdl)
set tdl=Xl
set Hl=jVl(cdl,GetUnitY(tdl),0.,I2S(Jl),13.,255,230,0,255)
call TimerStart(Kl,90.,false,qww)
endif
if Inl==$78303064 then
call SetPlayerTechResearched(Pnl,$524D306B,1)
call SetPlayerTechResearched(Pnl,$52303245,1)
call SetPlayerTechResearched(Player(Anl+4),$524D306B,1)
call SetPlayerTechResearched(Player(Anl+4),$52303245,1)
set idl=pT
call EnableTrigger(idl)
endif
if Inl==$78303038 then
call SetPlayerTechResearched(Player(Anl),$524D3062,1)
call SetPlayerTechResearched(Player(Anl+4),$524D3062,1)
call SetPlayerTechResearched(Pnl,$524D3062,1)
set Sdl=XG
call EnableTrigger(Sdl)
endif
set Unl=null
set Pnl=null
set Dnl=null
set Hnl=null
set Jnl=null
set Knl=null
set Lnl=null
set Xnl=null
set Cnl=null
set Vnl=null
set Bnl=null
set Nnl=null
set Mnl=null
set wdl=null
set udl=null
set rdl=null
set sdl=null
set tdl=null
set idl=null
set Sdl=null
endfunction
function oec takes nothing returns nothing
local unit Qpc=GetKillingUnit()
local unit Ipc=Qpc
local player Wpc=GetOwningPlayer(Ipc)
local integer Epc=GetPlayerTechCount(Wpc,$52303542,true)
local integer Zpc=10*Epc
local unit Ppc=Qpc
local integer Upc
local string Apc
local real Dpc
local real Hpc
local unit Jpc
local unit Kpc
local unit Lpc
local player Xpc
local player Cpc
local integer Vpc
local player Bpc
local playerstate Npc
local integer Mpc
local player wec
local playerstate uec
local real rec
local player sec
local player tec
local playerstate iec
local real Sec
local real cec
if GetUnitTypeId(Ppc)==$6E303141 and Epc>0 then
call UuS(Qpc,Zpc)
set Apc="UI\\Feedback\\GoldCredit\\GoldCredit.mdl"
set Jpc=Qpc
set Kpc=Jpc
set rec=GetUnitX(Kpc)
set Lpc=Jpc
set Sec=rec
set cec=GetUnitY(Lpc)
set Dpc=Sec
set Hpc=cec
call AddSpecialEffect(Apc,Dpc,Hpc)
set Upc=0
loop
exitwhen Upc>3
set sec=Player(Upc)
set Xpc=Wpc
if sec==Player(GetPlayerId(Xpc)-4) then
set Cpc=Player(Upc)
set Vpc=Zpc
set Bpc=Cpc
set Npc=PLAYER_STATE_RESOURCE_GOLD
set Mpc=Vpc
set tec=Bpc
set iec=Npc
set wec=Bpc
set uec=Npc
call SetPlayerState(tec,iec,GetPlayerState(wec,uec)+Mpc)
set Fr[Upc]=Fr[Upc]+Zpc
set hr[Upc]=hr[Upc]+Zpc
set Cr[Upc]=Cr[Upc]+Zpc
endif
set Upc=Upc+1
endloop
endif
set Qpc=null
set Wpc=null
set Ipc=null
set Ppc=null
set Jpc=null
set Kpc=null
set Lpc=null
set Xpc=null
set Cpc=null
set Bpc=null
set Npc=null
set wec=null
set uec=null
set sec=null
set tec=null
set iec=null
endfunction
function ohu takes nothing returns boolean
local trigger Mgu
local playerunitevent whu
local trigger uhu
local playerunitevent rhu
local integer shu
local trigger thu
local boolexpr ihu
local trigger Shu
local code chu
set Vl=CreateTrigger()
set Mgu=Vl
set whu=EVENT_PLAYER_UNIT_SELL
set uhu=Mgu
set rhu=whu
set shu=0
loop
call TriggerRegisterPlayerUnitEvent(uhu,Player(shu),rhu,null)
set shu=shu+1
exitwhen shu==bj_MAX_PLAYER_SLOTS
endloop
set thu=Vl
set ihu=Condition(j3)
call TriggerAddCondition(thu,ihu)
set Shu=Vl
set chu=x3
call TriggerAddAction(Shu,chu)
set Mgu=null
set whu=null
set uhu=null
set rhu=null
set thu=null
set ihu=null
set Shu=null
return true
endfunction
function ont takes nothing returns boolean
local trigger wnt=CreateTrigger()
local trigger unt=wnt
local boolexpr rnt=Condition(Y1)
local trigger snt
local playerunitevent tnt
local trigger int
local playerunitevent Snt
local integer cnt
call TriggerAddCondition(unt,rnt)
set snt=wnt
set tnt=EVENT_PLAYER_UNIT_SPELL_CAST
set int=snt
set Snt=tnt
set cnt=0
loop
call TriggerRegisterPlayerUnitEvent(int,Player(cnt),Snt,null)
set cnt=cnt+1
exitwhen cnt==bj_MAX_PLAYER_SLOTS
endloop
set wnt=null
set unt=null
set rnt=null
set snt=null
set tnt=null
set int=null
set Snt=null
return true
endfunction
function orO takes nothing returns nothing
local unit srO=GetDyingUnit()
local unit trO=srO
local integer irO=$41323047
local unit SrO
local integer crO
if GetUnitAbilityLevel(trO,irO)==1 then
set SrO=srO
set crO=$41323047
call UnitRemoveAbility(SrO,crO)
endif
set srO=null
set trO=null
set SrO=null
endfunction
function oxl takes nothing returns nothing
local unit Zkl=GetTriggerUnit()
local unit Ikl=Zkl
local player Ukl=GetOwningPlayer(Ikl)
local unit Pkl
local string Akl
local real Dkl
local real Hkl
local unit Jkl
local unittype Kkl
local unit Lkl
local string Xkl
local real Ckl
local real Vkl
local unit Bkl
local unittype Nkl
local unit Mkl
local string wjl
local real ujl
local real rjl
local unit sjl
local unittype tjl
local unit ijl
local string Sjl
local real cjl
local real ojl
local unit Ojl
local unittype ljl
local unit bjl
local string yjl
local real pjl
local real ejl
local unit qjl
local unittype ajl
local unit njl
local string djl
local real fjl
local real Rjl
local unit Tjl
local unittype Yjl
local unit Gjl
local string gjl
local real hjl
local real Fjl
local unit kjl
local unittype jjl
local unit xjl
local string vjl
local real mjl
local real Qjl
local unit Wjl
local unittype Ejl
local unit Zjl
local string Ujl
local real Ijl
local real Pjl
local unit Ajl
local unittype Djl
local real Hjl
local real Jjl
local real Kjl
local real Ljl
local real Xjl
local real Cjl
local real Vjl
local real Bjl
local real Njl
local real Mjl
local real wxl
local real uxl
local real rxl
local real sxl
local real txl
local real ixl
local real Sxl
local real cxl
if Ukl==nu then
set Pkl=Zkl
set Akl="attack"
set Hjl=Qw[61]
set Jjl=Ww[61]
set Dkl=Hjl
set Hkl=Jjl
call IssuePointOrder(Pkl,Akl,Dkl,Hkl)
set Jkl=Zkl
set Kkl=UNIT_TYPE_HERO
if IsUnitType(Jkl,Kkl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,61)
endif
endif
if Ukl==du then
if Ew[1]==false then
set Lkl=Zkl
set Xkl="attack"
set Kjl=Qw[29]
set Ljl=Ww[29]
set Ckl=Kjl
set Vkl=Ljl
call IssuePointOrder(Lkl,Xkl,Ckl,Vkl)
set Bkl=Zkl
set Nkl=UNIT_TYPE_HERO
if IsUnitType(Bkl,Nkl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,29)
endif
else
set Mkl=Zkl
set wjl="attack"
set Xjl=Qw[61]
set Cjl=Ww[61]
set ujl=Xjl
set rjl=Cjl
call IssuePointOrder(Mkl,wjl,ujl,rjl)
set sjl=Zkl
set tjl=UNIT_TYPE_HERO
if IsUnitType(sjl,tjl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,61)
endif
endif
endif
if Ukl==Ru then
if Ew[2]==false then
set ijl=Zkl
set Sjl="attack"
set Vjl=Qw[44]
set Bjl=Ww[44]
set cjl=Vjl
set ojl=Bjl
call IssuePointOrder(ijl,Sjl,cjl,ojl)
set Ojl=Zkl
set ljl=UNIT_TYPE_HERO
if IsUnitType(Ojl,ljl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,44)
endif
elseif Ew[0]==false then
set bjl=Zkl
set yjl="attack"
set Njl=Qw[38]
set Mjl=Ww[38]
set pjl=Njl
set ejl=Mjl
call IssuePointOrder(bjl,yjl,pjl,ejl)
set qjl=Zkl
set ajl=UNIT_TYPE_HERO
if IsUnitType(qjl,ajl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,38)
endif
elseif Ew[1]==false then
set njl=Zkl
set djl="attack"
set wxl=Qw[29]
set uxl=Ww[29]
set fjl=wxl
set Rjl=uxl
call IssuePointOrder(njl,djl,fjl,Rjl)
set Tjl=Zkl
set Yjl=UNIT_TYPE_HERO
if IsUnitType(Tjl,Yjl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,29)
endif
endif
endif
if Ukl==fu then
if Ew[3]==false then
set Gjl=Zkl
set gjl="attack"
set rxl=Qw[38]
set sxl=Ww[38]
set hjl=rxl
set Fjl=sxl
call IssuePointOrder(Gjl,gjl,hjl,Fjl)
set kjl=Zkl
set jjl=UNIT_TYPE_HERO
if IsUnitType(kjl,jjl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,38)
endif
elseif Ew[1]==false then
set xjl=Zkl
set vjl="attack"
set txl=Qw[29]
set ixl=Ww[29]
set mjl=txl
set Qjl=ixl
call IssuePointOrder(xjl,vjl,mjl,Qjl)
set Wjl=Zkl
set Ejl=UNIT_TYPE_HERO
if IsUnitType(Wjl,Ejl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,29)
endif
elseif Ew[0]==false then
set Zjl=Zkl
set Ujl="attack"
set Sxl=Qw[47]
set cxl=Ww[47]
set Ijl=Sxl
set Pjl=cxl
call IssuePointOrder(Zjl,Ujl,Ijl,Pjl)
set Ajl=Zkl
set Djl=UNIT_TYPE_HERO
if IsUnitType(Ajl,Djl) then
call SaveInteger(qu,GetHandleId(Zkl),$6D6F7665,47)
endif
endif
endif
set Zkl=null
set Ukl=null
set Ikl=null
set Pkl=null
set Jkl=null
set Kkl=null
set Lkl=null
set Bkl=null
set Nkl=null
set Mkl=null
set sjl=null
set tjl=null
set ijl=null
set Ojl=null
set ljl=null
set bjl=null
set qjl=null
set ajl=null
set njl=null
set Tjl=null
set Yjl=null
set Gjl=null
set kjl=null
set jjl=null
set xjl=null
set Wjl=null
set Ejl=null
set Zjl=null
set Ajl=null
set Djl=null
endfunction
function rSw takes integer Liw returns nothing
local unit Xiw
local player Ciw
local integer Viw
local integer Biw
local integer Niw
local player Miw
local player wSw
local player uSw
if Liw==$524D3138 then
set Xiw=GetTriggerUnit()
set Ciw=GetOwningPlayer(Xiw)
set Niw=$524D3138
set Miw=Ciw
set Viw=GetPlayerTechCount(Miw,Niw,true)
set Biw=0
loop
exitwhen Biw>12
set wSw=UY[Biw]
set uSw=Ciw
if IsPlayerAlly(wSw,uSw) and UY[Biw]!=Ciw then
call SetPlayerTechResearched(UY[Biw],$524D3138,Viw)
endif
set Biw=Biw+1
endloop
endif
set Xiw=null
set Ciw=null
set Miw=null
set wSw=null
set uSw=null
endfunction
function oxu takes nothing returns nothing
call rSw(GetResearched())
endfunction
function p0e takes nothing returns boolean
local unit X9e=GetEnteringUnit()
local unit V9e=X9e
local player C9e=GetOwningPlayer(V9e)
local player B9e=C9e
local unit M9e=G[4]
local player N9e=GetOwningPlayer(M9e)
local unit w0e
local unit u0e
local unittype r0e
local unit s0e
local unit t0e
local unit i0e
local unit S0e
local boolean c0e
local boolean o0e
local boolean O0e
local boolean l0e
local boolean b0e
local boolean y0e
if IsPlayerEnemy(B9e,N9e) then
set c0e=true
else
set w0e=G[4]
set c0e=GetOwningPlayer(w0e)==Player(15)
endif
if c0e then
set u0e=X9e
set r0e=UNIT_TYPE_HERO
set o0e=IsUnitType(u0e,r0e)==true or GetUnitLevel(X9e)>=7
else
set o0e=false
endif
if o0e then
set s0e=X9e
set O0e=GetUnitTypeId(s0e)!=$6830324C
else
set O0e=false
endif
if O0e then
set t0e=X9e
set l0e=GetUnitTypeId(t0e)!=$6830324D
else
set l0e=false
endif
if l0e then
set i0e=X9e
set b0e=GetUnitTypeId(i0e)!=$68303254
else
set b0e=false
endif
if b0e then
set S0e=X9e
set y0e=GetUnitTypeId(S0e)!=$6830324F
else
set y0e=false
endif
set X9e=null
set C9e=null
set V9e=null
set B9e=null
set N9e=null
set M9e=null
set w0e=null
set u0e=null
set r0e=null
set s0e=null
set t0e=null
set i0e=null
set S0e=null
return y0e
endfunction
function p0l takes nothing returns nothing
local integer C9l=GetSpellAbilityId()
local unit V9l
local unit B9l
local unit N9l
local unit M9l
local unit w0l
local unit u0l
local real r0l
local unit s0l
local integer t0l
local unit i0l
local integer S0l
local integer c0l
local unit o0l
local string O0l
local widget l0l
local player b0l
local real y0l
if C9l==$41323652 then
set V9l=GetSpellAbilityUnit()
set N9l=V9l
set b0l=GetOwningPlayer(N9l)
set M9l=V9l
set y0l=GetUnitX(M9l)
set w0l=V9l
set B9l=CreateUnit(b0l,$75303030,y0l,GetUnitY(w0l),0.)
set u0l=B9l
set r0l=3.
call UnitApplyTimedLife(u0l,$42544C46,r0l)
set s0l=B9l
set t0l=$4131384E
call UnitAddAbility(s0l,t0l)
set i0l=B9l
set S0l=$4131384E
set c0l=3
call SetUnitAbilityLevel(i0l,S0l,c0l)
set o0l=B9l
set O0l="innerfire"
set l0l=V9l
call IssueTargetOrder(o0l,O0l,l0l)
endif
set V9l=null
set B9l=null
set N9l=null
set M9l=null
set w0l=null
set u0l=null
set s0l=null
set i0l=null
set o0l=null
set l0l=null
set b0l=null
endfunction
function pAt takes nothing returns nothing
local integer oAt=GetResearched()
local string OAt
local real lAt
local player bAt
local unit yAt
if oAt==$52303345 then
set UT=UT+1
set OAt="You have decreased the timer by 60 sec"
set lAt=10.
set yAt=KT
set bAt=GetOwningPlayer(yAt)
call DisplayTimedTextToPlayer(bAt,0.,0.,lAt,OAt)
endif
set bAt=null
set yAt=null
endfunction
function pBp takes nothing returns boolean
local unit bBp=GetFilterUnit()
local boolean yBp=GetUnitTypeId(bBp)==$7530305A
set bBp=null
return yBp
endfunction
function pFu takes nothing returns boolean
local string yFu
set qW=0
set yFu="via function reference TimerUtils, line 1"
set aW[qW]=yFu
set qW=qW+1
set Lg=bMu("when calling new_Table in TimerUtils, line 13")
call SRr("when calling new_HashMap in TimerUtils, line 59")
set qW=qW-1
return true
endfunction
function pGl takes nothing returns boolean
local trigger MYl
local rect wGl
local region uGl
local trigger rGl
local boolexpr sGl
local trigger tGl
local trigger iGl
local trigger SGl
local playerunitevent cGl
local trigger oGl
local playerunitevent OGl
local integer lGl
local trigger bGl
local code yGl
set oq=CreateTrigger()
set Oq=CreateTrigger()
set MYl=oq
set wGl=GetWorldBounds()
set uGl=CreateRegion()
call RegionAddRect(uGl,wGl)
call TriggerRegisterEnterRegion(MYl,uGl,null)
set rGl=oq
set sGl=Condition(K2)
call TriggerAddCondition(rGl,sGl)
set tGl=oq
call DisableTrigger(tGl)
set iGl=Oq
call DisableTrigger(iGl)
set SGl=Oq
set cGl=EVENT_PLAYER_UNIT_DEATH
set oGl=SGl
set OGl=cGl
set lGl=0
loop
call TriggerRegisterPlayerUnitEvent(oGl,Player(lGl),OGl,null)
set lGl=lGl+1
exitwhen lGl==bj_MAX_PLAYER_SLOTS
endloop
set bGl=Oq
set yGl=L2
call TriggerAddAction(bGl,yGl)
set MYl=null
set wGl=null
set uGl=null
set rGl=null
set sGl=null
set tGl=null
set iGl=null
set SGl=null
set cGl=null
set oGl=null
set OGl=null
set bGl=null
return true
endfunction
function pLc takes nothing returns nothing
local timer iLc=GetExpiredTimer()
local unit SLc=LoadUnitHandle(qu,GetHandleId(iLc),$556E6974)
local unit cLc=SLc
local integer oLc=$41313857
local unit OLc
local integer lLc
local timer bLc
local timer yLc
call UnitRemoveAbility(cLc,oLc)
set OLc=SLc
set lLc=$41313858
call UnitRemoveAbility(OLc,lLc)
set bLc=iLc
call PauseTimer(bLc)
set yLc=iLc
call DestroyTimer(yLc)
call FlushChildHashtable(qu,GetHandleId(iLc))
set iLc=null
set SLc=null
set cLc=null
set OLc=null
set bLc=null
set yLc=null
endfunction
function pNO takes nothing returns nothing
local unit pBO=GetTriggerUnit()
local unit qBO=pBO
local player eBO=GetOwningPlayer(qBO)
local unit aBO
local string nBO
local real dBO
local real fBO
local unit RBO
local unittype TBO
local unit YBO
local string GBO
local real gBO
local real hBO
local unit FBO
local unittype kBO
local unit jBO
local string xBO
local real vBO
local real mBO
local unit QBO
local unittype WBO
local unit EBO
local string ZBO
local real UBO
local real IBO
local unit PBO
local unittype ABO
local unit DBO
local string HBO
local real JBO
local real KBO
local unit LBO
local unittype XBO
local unit CBO
local string VBO
local real BBO
local real NBO
local unit MBO
local unittype wNO
local real uNO
local real rNO
local real sNO
local real tNO
local real iNO
local real SNO
local real cNO
local real oNO
local real ONO
local real lNO
local real bNO
local real yNO
if eBO==du then
if Ew[3]==true then
set aBO=pBO
set nBO="attack"
set uNO=Qw[48]
set rNO=Ww[48]
set dBO=uNO
set fBO=rNO
call IssuePointOrder(aBO,nBO,dBO,fBO)
set RBO=pBO
set TBO=UNIT_TYPE_HERO
if IsUnitType(RBO,TBO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,48)
endif
else
set YBO=pBO
set GBO="attack"
set sNO=Qw[24]
set tNO=Ww[24]
set gBO=sNO
set hBO=tNO
call IssuePointOrder(YBO,GBO,gBO,hBO)
set FBO=pBO
set kBO=UNIT_TYPE_HERO
if IsUnitType(FBO,kBO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,24)
endif
endif
endif
if eBO==nu then
set jBO=pBO
set xBO="attack"
set iNO=Qw[24]
set SNO=Ww[24]
set vBO=iNO
set mBO=SNO
call IssuePointOrder(jBO,xBO,vBO,mBO)
set QBO=pBO
set WBO=UNIT_TYPE_HERO
if IsUnitType(QBO,WBO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,24)
endif
endif
if eBO==fu then
if Ew[1]==true then
set EBO=pBO
set ZBO="attack"
set cNO=Qw[24]
set oNO=Ww[24]
set UBO=cNO
set IBO=oNO
call IssuePointOrder(EBO,ZBO,UBO,IBO)
set PBO=pBO
set ABO=UNIT_TYPE_HERO
if IsUnitType(PBO,ABO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,24)
endif
else
set DBO=pBO
set HBO="attack"
set ONO=Qw[48]
set lNO=Ww[48]
set JBO=ONO
set KBO=lNO
call IssuePointOrder(DBO,HBO,JBO,KBO)
set LBO=pBO
set XBO=UNIT_TYPE_HERO
if IsUnitType(LBO,XBO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,48)
endif
endif
endif
if eBO==Ru then
set CBO=pBO
set VBO="attack"
set bNO=Qw[48]
set yNO=Ww[48]
set BBO=bNO
set NBO=yNO
call IssuePointOrder(CBO,VBO,BBO,NBO)
set MBO=pBO
set wNO=UNIT_TYPE_HERO
if IsUnitType(MBO,wNO) then
call SaveInteger(qu,GetHandleId(pBO),$6D6F7665,48)
endif
endif
set pBO=null
set eBO=null
set qBO=null
set aBO=null
set RBO=null
set TBO=null
set YBO=null
set FBO=null
set kBO=null
set jBO=null
set QBO=null
set WBO=null
set EBO=null
set PBO=null
set ABO=null
set DBO=null
set LBO=null
set XBO=null
set CBO=null
set MBO=null
set wNO=null
endfunction
function pPp takes nothing returns boolean
return true
endfunction
function pQu takes nothing returns boolean
local trigger cQu
local trigger oQu
local rect OQu
local region lQu
local trigger bQu
local boolexpr yQu
set be=CreateTrigger()
set cQu=be
call DisableTrigger(cQu)
set oQu=be
set OQu=bj_mapInitialPlayableArea
set lQu=CreateRegion()
call RegionAddRect(lQu,OQu)
call TriggerRegisterEnterRegion(oQu,lQu,null)
set bQu=be
set yQu=Condition(i2)
call TriggerAddCondition(bQu,yQu)
set cQu=null
set oQu=null
set OQu=null
set lQu=null
set bQu=null
set yQu=null
return true
endfunction
function pUl takes nothing returns boolean
return true
endfunction
function pVb takes nothing returns boolean
local trigger iVb
local trigger SVb
local playerunitevent cVb
local trigger oVb
local playerunitevent OVb
local integer lVb
local trigger bVb
local code yVb
set en=CreateTrigger()
set iVb=en
call DisableTrigger(iVb)
set SVb=en
set cVb=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oVb=SVb
set OVb=cVb
set lVb=0
loop
call TriggerRegisterPlayerUnitEvent(oVb,Player(lVb),OVb,null)
set lVb=lVb+1
exitwhen lVb==bj_MAX_PLAYER_SLOTS
endloop
set bVb=en
set yVb=N5
call TriggerAddAction(bVb,yVb)
set iVb=null
set SVb=null
set cVb=null
set oVb=null
set OVb=null
set bVb=null
return true
endfunction
function pVp takes nothing returns nothing
local unit ICy
local player PCy
local player ACy
local unit DCy
local unit HCy
local unit JCy
local unittype KCy
local player LCy
local player XCy
local unit CCy
local unit VCy
local unit BCy
local unitstate NCy
local unit MCy
local unit wVp
local unitstate uVp
local unit rVp
local real sVp
local unit tVp
local unitstate iVp
local real SVp
local unit cVp
local unit oVp
local unitstate OVp
local boolean lVp
local boolean bVp
local real yVp
if MY!=null then
set ICy=GetDyingUnit()
set DCy=MY
set PCy=GetOwningPlayer(DCy)
set HCy=ICy
set ACy=GetOwningPlayer(HCy)
set JCy=ICy
set KCy=UNIT_TYPE_MECHANICAL
if IsUnitType(JCy,KCy) then
set LCy=ACy
set XCy=PCy
set lVp=IsPlayerAlly(LCy,XCy) or ACy==PCy
else
set lVp=false
endif
if lVp then
set CCy=ICy
set bVp=GetUnitTypeId(CCy)!=$75303030
else
set bVp=false
endif
if bVp then
set VCy=MY
set BCy=VCy
set NCy=UNIT_STATE_MAX_MANA
set yVp=GetUnitState(BCy,NCy)
set MCy=MY
set wVp=MCy
set uVp=UNIT_STATE_MANA
if yVp!=GetUnitState(wVp,uVp) then
set rVp=MY
set cVp=MY
set oVp=cVp
set OVp=UNIT_STATE_MANA
set sVp=GetUnitState(oVp,OVp)+1.
set tVp=rVp
set iVp=UNIT_STATE_MANA
set SVp=sVp
call SetUnitState(tVp,iVp,SVp)
endif
endif
endif
set ICy=null
set PCy=null
set ACy=null
set DCy=null
set HCy=null
set JCy=null
set KCy=null
set LCy=null
set XCy=null
set CCy=null
set VCy=null
set BCy=null
set NCy=null
set MCy=null
set wVp=null
set uVp=null
set rVp=null
set tVp=null
set iVp=null
set cVp=null
set oVp=null
set OVp=null
endfunction
function pWy takes nothing returns nothing
local timerdialog iQy
local player SQy
local unit cQy
local unit oQy
local unit OQy
local player lQy
local integer bQy
local real yQy
local real pQy
local real eQy
local real qQy
local unit aQy
local player nQy
local player dQy
local integer fQy
local real RQy
local real TQy
local real YQy
local real GQy
local unit gQy
local player hQy
local player FQy
local integer kQy
local real jQy
local real xQy
local real vQy
local real mQy
local unit QQy
local player WQy
local player EQy
local real ZQy
local real UQy
local unit IQy
local unit PQy
local timerdialog AQy
local player DQy
local integer HQy
local real JQy
local real KQy
local player LQy
local integer XQy
local real CQy
local real VQy
local player BQy
local integer NQy
local real MQy
local real wWy
local real uWy
local real rWy
local real sWy
local real tWy
local real iWy
local real SWy
local real cWy
local real oWy
local real OWy
local real lWy
local real bWy
local real yWy
if Du==false and Bu<3 then
set Du=true
set iQy=tr
call DestroyTimerDialog(iQy)
call TimerStart(ir,60.,false,Bww_144)
set tr=CreateTimerDialog(ir)
set AQy=tr
set SQy=Gu
call TimerDialogSetTitle(AQy,GetPlayerName(SQy)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set cQy=Zu
call RemoveUnit(cQy)
set oQy=Uu
call RemoveUnit(oQy)
set OQy=Iu
call RemoveUnit(OQy)
set lQy=Gu
set nQy=Yu
set aQy=F[GetPlayerId(nQy)]
set bQy=GetUnitTypeId(aQy)
set uWy=0.
set rWy=-400.
set yQy=uWy
set pQy=rWy
set sWy=bj_UNIT_FACING
set eQy=sWy
set DQy=lQy
set HQy=bQy
set JQy=yQy
set KQy=pQy
set tWy=eQy
set qQy=tWy
set Zu=CreateUnit(DQy,HQy,JQy,KQy,qQy*57.295779513)
set dQy=Gu
set hQy=Tu
set gQy=F[GetPlayerId(hQy)]
set fQy=GetUnitTypeId(gQy)
set iWy=0.
set SWy=400.
set RQy=iWy
set TQy=SWy
set cWy=bj_UNIT_FACING
set YQy=cWy
set LQy=dQy
set XQy=fQy
set CQy=RQy
set VQy=TQy
set oWy=YQy
set GQy=oWy
set Uu=CreateUnit(LQy,XQy,CQy,VQy,GQy*57.295779513)
set FQy=Gu
set WQy=gu
set QQy=F[GetPlayerId(WQy)]
set kQy=GetUnitTypeId(QQy)
set OWy=400.
set lWy=0.
set jQy=OWy
set xQy=lWy
set bWy=bj_UNIT_FACING
set vQy=bWy
set BQy=FQy
set NQy=kQy
set MQy=jQy
set wWy=xQy
set yWy=vQy
set mQy=yWy
set Iu=CreateUnit(BQy,NQy,MQy,wWy,mQy*57.295779513)
set EQy=Gu
set IQy=Zu
set ZQy=GetUnitX(IQy)
set PQy=Zu
set UQy=GetUnitY(PQy)
if GetLocalPlayer()==EQy then
call SetCameraPosition(ZQy,UQy)
endif
endif
set iQy=null
set SQy=null
set cQy=null
set oQy=null
set OQy=null
set lQy=null
set aQy=null
set nQy=null
set dQy=null
set gQy=null
set hQy=null
set FQy=null
set QQy=null
set WQy=null
set EQy=null
set IQy=null
set PQy=null
set AQy=null
set DQy=null
set LQy=null
set BQy=null
endfunction
function pZp takes nothing returns nothing
set qW=0
call dKu("via function reference TournamentMode, line 1009")
endfunction
function pZu takes nothing returns boolean
call CreateTimer()
return true
endfunction
function p_c takes nothing returns boolean
local trigger i_c
local trigger S_c
local playerunitevent c_c
local trigger o_c
local playerunitevent O_c
local integer l_c
local trigger b_c
local code y_c
set KG=CreateTrigger()
set i_c=KG
call DisableTrigger(i_c)
set S_c=KG
set c_c=EVENT_PLAYER_UNIT_DEATH
set o_c=S_c
set O_c=c_c
set l_c=0
loop
call TriggerRegisterPlayerUnitEvent(o_c,Player(l_c),O_c,null)
set l_c=l_c+1
exitwhen l_c==bj_MAX_PLAYER_SLOTS
endloop
set b_c=KG
set y_c=euw
call TriggerAddAction(b_c,y_c)
set i_c=null
set S_c=null
set c_c=null
set o_c=null
set O_c=null
set b_c=null
return true
endfunction
function pbO takes nothing returns boolean
local trigger sbO=CreateTrigger()
local integer tbO=0
local trigger ibO
local player SbO
local string cbO
local boolean obO
local trigger ObO
local boolexpr lbO
local playerunitevent bbO
local code ybO
loop
exitwhen tbO>3
set ibO=sbO
set SbO=Player(tbO)
set cbO="-rob"
set obO=true
call TriggerRegisterPlayerChatEvent(ibO,SbO,cbO,obO)
set tbO=tbO+1
endloop
set ObO=sbO
set lbO=Condition(e2)
call TriggerAddCondition(ObO,lbO)
set bbO=EVENT_PLAYER_UNIT_DEATH
set ybO=q2
call emO(bbO,null,ybO,null)
set sbO=null
set ibO=null
set SbO=null
set ObO=null
set lbO=null
set bbO=null
return true
endfunction
function pfe takes nothing returns boolean
return true
endfunction
function phc takes nothing returns nothing
local unit Mgc=GetEnteringUnit()
local unit shc=Mgc
local integer whc=GetUnitTypeId(shc)
local unit thc=Mgc
local player uhc=GetOwningPlayer(thc)
local integer rhc
local unit ihc
local integer Shc
local unit chc
local integer ohc
local unit Ohc
local integer lhc
local unit bhc
local integer yhc
if whc==$7561626F or whc==$7567686F or whc==$6E7A6F6D or whc==$6E30335A then
set rhc=GetPlayerTechCount(uhc,$52757063,true)
if rhc==1 then
set ihc=Mgc
set Shc=$41303745
call UnitAddAbility(ihc,Shc)
elseif rhc==2 then
set chc=Mgc
set ohc=$41303746
call UnitAddAbility(chc,ohc)
elseif rhc==3 then
set Ohc=Mgc
set lhc=$4130314F
call UnitAddAbility(Ohc,lhc)
else
set bhc=Mgc
set yhc=$41304C44
call UnitAddAbility(bhc,yhc)
endif
endif
set Mgc=null
set uhc=null
set shc=null
set thc=null
set ihc=null
set chc=null
set Ohc=null
set bhc=null
endfunction
function piw takes nothing returns nothing
local integer Btw=GetSpellAbilityId()
local unit Ntw
local integer Mtw
local unit wiw
local unit uiw
local integer riw
local unit siw
local unit tiw
local integer iiw
local unit Siw
local integer ciw
local integer oiw
local unit Oiw
local string liw
local unit biw
local real yiw
if Btw==$4130544A then
set Ntw=GetSpellAbilityUnit()
set uiw=Ntw
set riw=$4130544A
set Mtw=GetUnitAbilityLevel(uiw,riw)
set siw=Ntw
set wiw=CreateUnit(GetOwningPlayer(siw),$75303030,GetSpellTargetX(),GetSpellTargetY(),0.)
set tiw=wiw
set iiw=$41305350
call UnitAddAbility(tiw,iiw)
set Siw=wiw
set ciw=$41305350
set oiw=Mtw
call SetUnitAbilityLevel(Siw,ciw,oiw)
set Oiw=wiw
set liw="stomp"
call IssueImmediateOrder(Oiw,liw)
set biw=wiw
set yiw=3.
call UnitApplyTimedLife(biw,$42544C46,yiw)
endif
set Ntw=null
set wiw=null
set uiw=null
set siw=null
set tiw=null
set Siw=null
set Oiw=null
set biw=null
endfunction
function pmi takes nothing returns nothing
local integer Cvi=GetSpellAbilityId()
local unit Vvi
local integer Bvi
local unit Nvi
local unit Mvi
local integer wmi
local unit umi
local unit rmi
local unit smi
local unit tmi
local integer imi
local unit Smi
local integer cmi
local integer omi
local unit Omi
local real lmi
local player bmi
local real ymi
if Cvi==$41313038 then
set Vvi=GetSpellAbilityUnit()
set Mvi=Vvi
set wmi=$41313038
set Bvi=GetUnitAbilityLevel(Mvi,wmi)
set umi=Vvi
set bmi=GetOwningPlayer(umi)
set rmi=Vvi
set ymi=GetUnitX(rmi)
set smi=Vvi
set Nvi=CreateUnit(bmi,$75303030,ymi,GetUnitY(smi),0.)
set tmi=Nvi
set imi=$41305849
call UnitAddAbility(tmi,imi)
if Bvi>=3 then
set Smi=Nvi
set cmi=$41305849
set omi=Bvi-1
call SetUnitAbilityLevel(Smi,cmi,omi)
endif
set Omi=Nvi
set lmi=18.
call UnitApplyTimedLife(Omi,$42544C46,lmi)
endif
set Vvi=null
set Nvi=null
set Mvi=null
set umi=null
set rmi=null
set smi=null
set tmi=null
set Smi=null
set Omi=null
set bmi=null
endfunction
function pnt takes nothing returns nothing
local unit lnt=GetSpellAbilityUnit()
local player bnt
local unit ynt
call Pwu(lnt)
set ynt=lnt
set bnt=GetOwningPlayer(ynt)
call G2S(GetPlayerId(bnt),lnt)
set lnt=null
set bnt=null
set ynt=null
endfunction
function ppc takes nothing returns boolean
local trigger cpc
local trigger opc
local playerunitevent Opc
local trigger lpc
local playerunitevent bpc
local integer ypc
set xG=CreateTrigger()
set vG=null
set cpc=xG
call DisableTrigger(cpc)
set opc=xG
set Opc=EVENT_PLAYER_UNIT_ATTACKED
set lpc=opc
set bpc=Opc
set ypc=0
loop
call TriggerRegisterPlayerUnitEvent(lpc,Player(ypc),bpc,null)
set ypc=ypc+1
exitwhen ypc==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(xG,Mww)
set cpc=null
set opc=null
set Opc=null
set lpc=null
set bpc=null
return true
endfunction
function pqu takes nothing returns boolean
local playerunitevent bqu=EVENT_PLAYER_UNIT_SPELL_CAST
local code yqu=u2
call emO(bqu,null,yqu,null)
set bqu=null
return true
endfunction
function prb takes nothing returns nothing
local texttag lrb
local string brb
local real yrb
if mR!=null then
if GR>0 then
set GR=GR-1
set lrb=hR
set brb=I2S(GR)
set yrb=13.
call SetTextTagText(lrb,brb,yrb*.0023)
endif
endif
set lrb=null
endfunction
function ptS takes nothing returns nothing
local unit wsS=GetDyingUnit()
local unit SsS=wsS
local integer usS=GetPlayerTechCount(GetOwningPlayer(SsS),$524D3177,true)
local integer rsS
local integer ssS
local unit tsS
local unit isS
local unit csS
local player osS
local unit OsS
local unit lsS
local unittype bsS
local unit ysS
local unittype psS
local unit esS
local unit qsS
local unit asS
local unit nsS
local integer dsS
local unit fsS
local integer RsS
local unit TsS
local integer YsS
local integer GsS
local unit gsS
local integer hsS
local unit FsS
local integer ksS
local unit jsS
local integer xsS
local integer vsS
local unit msS
local integer QsS
local unit WsS
local integer EsS
local integer ZsS
local unit UsS
local integer IsS
local unit PsS
local integer AsS
local unit DsS
local integer HsS
local integer JsS
local unit KsS
local integer LsS
local unit XsS
local integer CsS
local integer VsS
local unit BsS
local integer NsS
local unit MsS
local integer wtS
local integer utS
local unit rtS
local unit stS
local unit ttS
local unit itS
local boolean StS
local boolean ctS
local player otS
local real OtS
local boolean ltS
local player btS
local real ytS
if usS>0 then
set csS=wsS
set rsS=GetUnitTypeId(csS)
set OsS=wsS
set osS=GetOwningPlayer(OsS)
if GetPlayerController(osS)!=MAP_CONTROL_USER and (rsS==$75303030 or rsS==$7864756D or rsS==$6E303137)==false then
set lsS=wsS
set bsS=UNIT_TYPE_HERO
set StS=not IsUnitType(lsS,bsS)
else
set StS=false
endif
if StS and rsS!=$78303277 then
set ysS=wsS
set psS=UNIT_TYPE_STRUCTURE
set ctS=IsUnitType(ysS,psS)==false
else
set ctS=false
endif
if ctS then
set ssS=GetRandomInt(1,100)
if ssS<=8+2*usS then
set esS=wsS
set otS=GetOwningPlayer(esS)
set qsS=wsS
set OtS=GetUnitX(qsS)
set asS=wsS
set tsS=CreateUnit(otS,$78303277,OtS,GetUnitY(asS),0.)
call dYr(tsS)
if usS==1 then
set nsS=tsS
set dsS=$414D6369
call UnitAddAbility(nsS,dsS)
endif
if usS==2 then
set fsS=tsS
set RsS=$414D6369
call UnitAddAbility(fsS,RsS)
set TsS=tsS
set YsS=$414D6369
set GsS=2
call SetUnitAbilityLevel(TsS,YsS,GsS)
set gsS=tsS
set hsS=$414D636A
call UnitAddAbility(gsS,hsS)
endif
if usS==3 then
set FsS=tsS
set ksS=$414D6369
call UnitAddAbility(FsS,ksS)
set jsS=tsS
set xsS=$414D6369
set vsS=3
call SetUnitAbilityLevel(jsS,xsS,vsS)
set msS=tsS
set QsS=$414D636A
call UnitAddAbility(msS,QsS)
set WsS=tsS
set EsS=$414D636A
set ZsS=2
call SetUnitAbilityLevel(WsS,EsS,ZsS)
set UsS=tsS
set IsS=$414D636B
call UnitAddAbility(UsS,IsS)
endif
if usS==4 then
set PsS=tsS
set AsS=$414D6369
call UnitAddAbility(PsS,AsS)
set DsS=tsS
set HsS=$414D6369
set JsS=4
call SetUnitAbilityLevel(DsS,HsS,JsS)
set KsS=tsS
set LsS=$414D636A
call UnitAddAbility(KsS,LsS)
set XsS=tsS
set CsS=$414D636A
set VsS=3
call SetUnitAbilityLevel(XsS,CsS,VsS)
set BsS=tsS
set NsS=$414D636B
call UnitAddAbility(BsS,NsS)
set MsS=tsS
set wtS=$414D636B
set utS=2
call SetUnitAbilityLevel(MsS,wtS,utS)
endif
endif
if usS==4 and ssS<=10 then
set rtS=wsS
set ltS=GetUnitTypeId(rtS)==$78303277
else
set ltS=false
endif
if ltS then
set stS=wsS
set btS=GetOwningPlayer(stS)
set ttS=wsS
set ytS=GetUnitX(ttS)
set itS=wsS
set isS=CreateUnit(btS,$78303266,ytS,GetUnitY(itS),0.)
call dYr(isS)
endif
endif
endif
set wsS=null
set tsS=null
set isS=null
set SsS=null
set csS=null
set osS=null
set OsS=null
set lsS=null
set bsS=null
set ysS=null
set psS=null
set esS=null
set qsS=null
set asS=null
set nsS=null
set fsS=null
set TsS=null
set gsS=null
set FsS=null
set jsS=null
set msS=null
set WsS=null
set UsS=null
set PsS=null
set DsS=null
set KsS=null
set XsS=null
set BsS=null
set MsS=null
set rtS=null
set stS=null
set ttS=null
set itS=null
set otS=null
set btS=null
endfunction
function ptu takes nothing returns nothing
local unit Rsu=GetDyingUnit()
local unit gsu=Rsu
local integer Tsu=GetPlayerTechCount(GetOwningPlayer(gsu),$524D3070,true)
local unit Ysu
local real Gsu
local unit hsu
local unit Fsu
local unit ksu
local integer jsu
local unit xsu
local unit vsu
local unit msu
local unit Qsu
local unit Wsu
local unit Esu
local unitstate Zsu
local unit Usu
local integer Isu
local unit Psu
local integer Asu
local integer Dsu
local unit Hsu
local integer Jsu
local unit Ksu
local integer Lsu
local integer Xsu
local unit Csu
local integer Vsu
local unit Bsu
local real Nsu
local unit Msu
local real wtu
local unit utu
local unitstate rtu
local real stu
local unit ttu
local unit itu
local unitstate Stu
local boolean ctu
local boolean otu
local player Otu
local integer ltu
local real btu
local real ytu
if Tsu>0 then
set hsu=Rsu
if GetUnitTypeId(hsu)==$78303039 then
set ctu=true
else
set Fsu=Rsu
set ctu=GetUnitTypeId(Fsu)==$78303065
endif
if ctu then
set ksu=Rsu
set jsu=$414D3164
set otu=GetUnitAbilityLevel(ksu,jsu)==0
else
set otu=false
endif
if otu then
set xsu=Rsu
set Otu=GetOwningPlayer(xsu)
set vsu=Rsu
set ltu=GetUnitTypeId(vsu)
set msu=Rsu
set btu=GetUnitX(msu)
set Qsu=Rsu
set Ysu=CreateUnit(Otu,ltu,btu,GetUnitY(Qsu),270.)
call dYr(Ysu)
set Wsu=Ysu
set Esu=Wsu
set Zsu=UNIT_STATE_LIFE
set Gsu=GetUnitState(Esu,Zsu)
set Usu=Ysu
set Isu=$414D3163
call UnitAddAbility(Usu,Isu)
set Psu=Ysu
set Asu=$414D3163
set Dsu=Tsu
call SetUnitAbilityLevel(Psu,Asu,Dsu)
set Hsu=Ysu
set Jsu=$414D3162
call UnitAddAbility(Hsu,Jsu)
set Ksu=Ysu
set Lsu=$414D3162
set Xsu=Tsu
call SetUnitAbilityLevel(Ksu,Lsu,Xsu)
set Csu=Ysu
set Vsu=$414D3164
call UnitAddAbility(Csu,Vsu)
set Bsu=Ysu
set Nsu=I2R(4+1*Tsu)
call UnitApplyTimedLife(Bsu,$42544C46,Nsu)
set Msu=Ysu
set ytu=Gsu
set ttu=Ysu
set itu=ttu
set Stu=UNIT_STATE_MAX_LIFE
set wtu=ytu-GetUnitState(itu,Stu)*.5
set utu=Msu
set rtu=UNIT_STATE_LIFE
set stu=wtu
call SetUnitState(utu,rtu,stu)
call SetUnitVertexColor(Ysu,55,55,55,150)
call UnitAddType(Ysu,UNIT_TYPE_SAPPER)
endif
endif
set Rsu=null
set Ysu=null
set gsu=null
set hsu=null
set Fsu=null
set ksu=null
set xsu=null
set vsu=null
set msu=null
set Qsu=null
set Wsu=null
set Esu=null
set Zsu=null
set Usu=null
set Psu=null
set Hsu=null
set Ksu=null
set Csu=null
set Bsu=null
set Msu=null
set utu=null
set rtu=null
set ttu=null
set itu=null
set Stu=null
set Otu=null
endfunction
function pvt takes nothing returns boolean
return true
endfunction
function pvw takes nothing returns boolean
return true
endfunction
function pwS takes nothing returns boolean
return true
endfunction
function pxs takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1294")
endfunction
function pxt takes nothing returns nothing
local unit gkt=Eh
local player Gkt=GetOwningPlayer(gkt)
local integer Ykt=jr[GetPlayerId(Gkt)]
local texttag hkt=Ah
local integer jkt=Ykt
local string Fkt=I2S(jkt)
local real kkt=13.
local unit xkt
local integer vkt
local unit mkt
local integer Qkt
local string Wkt
local real Ekt
local player Zkt
local unit Ukt
local player Ikt
local real Pkt
local real Akt
local real Dkt
local unit Hkt
local unit Jkt
local unit Kkt
local unit Lkt
local integer Xkt
local unit Ckt
local integer Vkt
local integer Bkt
local string Nkt
local real Mkt
local player wjt
local unit ujt
local player rjt
local real sjt
local real tjt
local real ijt
local unit Sjt
local unit cjt
local unit ojt
local unit Ojt
local integer ljt
local unit bjt
local integer yjt
local integer pjt
local string ejt
local real qjt
local player ajt
local unit njt
local player djt
local real fjt
local real Rjt
local real Tjt
local unit Yjt
local unit Gjt
local unit gjt
local unit hjt
local integer Fjt
local unit kjt
local integer jjt
local integer xjt
local string vjt
local real mjt
local player Qjt
local unit Wjt
local player Ejt
local real Zjt
local real Ujt
local real Ijt
local unit Pjt
local unit Ajt
local unit Djt
local unit Hjt
local integer Jjt
local trigger Kjt
local unit Ljt
local integer Xjt
local integer Cjt
local string Vjt
local real Bjt
local player Njt
local unit Mjt
local player wxt
local real uxt
local real rxt
local real sxt
local unit txt
local unit ixt
local unit Sxt
local trigger cxt
local boolean oxt
local boolean Oxt
local boolean lxt
local boolean bxt
local boolean yxt
call SetTextTagText(hkt,Fkt,kkt*.0023)
if Ykt>=250 and Ykt<500 then
set xkt=Eh
set vkt=$41313542
set oxt=GetUnitAbilityLevel(xkt,vkt)!=1
else
set oxt=false
endif
if oxt then
set mkt=Eh
set Qkt=$41313542
call UnitAddAbility(mkt,Qkt)
set Wkt="We killed enough enemies! The WAAAAAAGH grew stronger!"
set Ekt=10.
set Ukt=Eh
set Zkt=GetOwningPlayer(Ukt)
call DisplayTimedTextToPlayer(Zkt,0.,0.,Ekt,Wkt)
set Hkt=Eh
set Ikt=GetOwningPlayer(Hkt)
set Jkt=Eh
set Pkt=GetUnitX(Jkt)
set Kkt=Eh
set Akt=GetUnitY(Kkt)
set Dkt=10.
if GetLocalPlayer()==Ikt then
call PingMinimap(Pkt,Akt,Dkt)
endif
endif
if Ykt>=500 and Ykt<1000 then
set Lkt=Eh
set Xkt=$41313542
set Oxt=GetUnitAbilityLevel(Lkt,Xkt)!=2
else
set Oxt=false
endif
if Oxt then
set Ckt=Eh
set Vkt=$41313542
set Bkt=2
call SetUnitAbilityLevel(Ckt,Vkt,Bkt)
set Nkt="We killed enough enemies! The WAAAAAAGH grew stronger!"
set Mkt=10.
set ujt=Eh
set wjt=GetOwningPlayer(ujt)
call DisplayTimedTextToPlayer(wjt,0.,0.,Mkt,Nkt)
set Sjt=Eh
set rjt=GetOwningPlayer(Sjt)
set cjt=Eh
set sjt=GetUnitX(cjt)
set ojt=Eh
set tjt=GetUnitY(ojt)
set ijt=10.
if GetLocalPlayer()==rjt then
call PingMinimap(sjt,tjt,ijt)
endif
endif
if Ykt>=1000 and Ykt<2000 then
set Ojt=Eh
set ljt=$41313542
set lxt=GetUnitAbilityLevel(Ojt,ljt)!=3
else
set lxt=false
endif
if lxt then
set bjt=Eh
set yjt=$41313542
set pjt=3
call SetUnitAbilityLevel(bjt,yjt,pjt)
set ejt="We killed enough enemies! The WAAAAAAGH grew stronger!"
set qjt=10.
set njt=Eh
set ajt=GetOwningPlayer(njt)
call DisplayTimedTextToPlayer(ajt,0.,0.,qjt,ejt)
set Yjt=Eh
set djt=GetOwningPlayer(Yjt)
set Gjt=Eh
set fjt=GetUnitX(Gjt)
set gjt=Eh
set Rjt=GetUnitY(gjt)
set Tjt=10.
if GetLocalPlayer()==djt then
call PingMinimap(fjt,Rjt,Tjt)
endif
endif
if Ykt>=2000 and Ykt<4000 then
set hjt=Eh
set Fjt=$41313542
set bxt=GetUnitAbilityLevel(hjt,Fjt)!=4
else
set bxt=false
endif
if bxt then
set kjt=Eh
set jjt=$41313542
set xjt=4
call SetUnitAbilityLevel(kjt,jjt,xjt)
set vjt="We killed enough enemies! The WAAAAAAGH grew stronger!"
set mjt=10.
set Wjt=Eh
set Qjt=GetOwningPlayer(Wjt)
call DisplayTimedTextToPlayer(Qjt,0.,0.,mjt,vjt)
set Pjt=Eh
set Ejt=GetOwningPlayer(Pjt)
set Ajt=Eh
set Zjt=GetUnitX(Ajt)
set Djt=Eh
set Ujt=GetUnitY(Djt)
set Ijt=10.
if GetLocalPlayer()==Ejt then
call PingMinimap(Zjt,Ujt,Ijt)
endif
endif
if Ykt>=3000 then
set Hjt=Eh
set Jjt=$41313542
set yxt=GetUnitAbilityLevel(Hjt,Jjt)!=5
else
set yxt=false
endif
if yxt then
set Kjt=Ih
call EnableTrigger(Kjt)
set Ljt=Eh
set Xjt=$41313542
set Cjt=5
call SetUnitAbilityLevel(Ljt,Xjt,Cjt)
set Vjt="We killed enough enemies! The WAAAAAAGH grew stronger!"
set Bjt=10.
set Mjt=Eh
set Njt=GetOwningPlayer(Mjt)
call DisplayTimedTextToPlayer(Njt,0.,0.,Bjt,Vjt)
set txt=Eh
set wxt=GetOwningPlayer(txt)
set ixt=Eh
set uxt=GetUnitX(ixt)
set Sxt=Eh
set rxt=GetUnitY(Sxt)
set sxt=10.
if GetLocalPlayer()==wxt then
call PingMinimap(uxt,rxt,sxt)
endif
set cxt=Zh
call DestroyTrigger(cxt)
endif
set Gkt=null
set gkt=null
set hkt=null
set xkt=null
set mkt=null
set Zkt=null
set Ukt=null
set Ikt=null
set Hkt=null
set Jkt=null
set Kkt=null
set Lkt=null
set Ckt=null
set wjt=null
set ujt=null
set rjt=null
set Sjt=null
set cjt=null
set ojt=null
set Ojt=null
set bjt=null
set ajt=null
set njt=null
set djt=null
set Yjt=null
set Gjt=null
set gjt=null
set hjt=null
set kjt=null
set Qjt=null
set Wjt=null
set Ejt=null
set Pjt=null
set Ajt=null
set Djt=null
set Hjt=null
set Kjt=null
set Ljt=null
set Njt=null
set Mjt=null
set wxt=null
set txt=null
set ixt=null
set Sxt=null
set cxt=null
endfunction
function pxu takes nothing returns boolean
local trigger Oxu
local trigger lxu
local playerunitevent bxu
local integer yxu
set nY=CreateTrigger()
set Oxu=nY
call DisableTrigger(Oxu)
set lxu=nY
set bxu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set yxu=0
loop
call TriggerRegisterPlayerUnitEvent(lxu,Player(yxu),bxu,null)
set yxu=yxu+1
exitwhen yxu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(nY,Qww_1223)
set Oxu=null
set lxu=null
set bxu=null
return true
endfunction
function q2e takes nothing returns nothing
local unit V4e=GetTriggerUnit()
local unit N4e=V4e
local player B4e=GetOwningPlayer(N4e)
local unit M4e
local string w2e
local real u2e
local real r2e
local unit s2e
local unittype t2e
local unit i2e
local string S2e
local real c2e
local real o2e
local unit O2e
local unittype l2e
local real b2e
local real y2e
local real p2e
local real e2e
if B4e==Ru then
set M4e=V4e
set w2e="attack"
set b2e=Qw[47]
set y2e=Ww[47]
set u2e=b2e
set r2e=y2e
call IssuePointOrder(M4e,w2e,u2e,r2e)
set s2e=V4e
set t2e=UNIT_TYPE_HERO
if IsUnitType(s2e,t2e) then
call SaveInteger(qu,GetHandleId(V4e),$6D6F7665,47)
endif
else
set i2e=V4e
set S2e="attack"
set p2e=Qw[23]
set e2e=Ww[23]
set c2e=p2e
set o2e=e2e
call IssuePointOrder(i2e,S2e,c2e,o2e)
set O2e=V4e
set l2e=UNIT_TYPE_HERO
if IsUnitType(O2e,l2e) then
call SaveInteger(qu,GetHandleId(V4e),$6D6F7665,23)
endif
endif
set V4e=null
set B4e=null
set N4e=null
set M4e=null
set s2e=null
set t2e=null
set i2e=null
set O2e=null
set l2e=null
endfunction
function q3b takes nothing returns nothing
local timer t3b=CreateTimer()
local integer i3b=GetHandleId(t3b)
local unit S3b=GetSpellAbilityUnit()
local real c3b=GetSpellTargetX()
local real o3b=GetSpellTargetY()
local real O3b=Atan2(o3b-GetUnitY(S3b),c3b-GetUnitX(S3b))*57.295828
local real b3b=c3b
local real y3b=o3b
local real p3b=GetUnitX(S3b)
local real e3b=GetUnitY(S3b)
local real l3b=SquareRoot((p3b-b3b)*(p3b-b3b)+(e3b-y3b)*(e3b-y3b))+50.
call PauseUnit(S3b,true)
call SetUnitPathing(S3b,false)
call SetUnitAnimation(S3b,"Spell Throw")
call QueueUnitAnimation(S3b,"stand")
call SaveEffectHandle(qu,i3b,$65666665,AddSpecialEffectTarget("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl",S3b,"chest"))
call SaveReal(qu,i3b,$47535458,GetUnitX(S3b))
call SaveReal(qu,i3b,$47535459,GetUnitY(S3b))
call SaveReal(qu,i3b,$44697374,l3b)
call SaveReal(qu,i3b,$616E676C,O3b)
call SaveUnitHandle(qu,i3b,$556E6974,S3b)
call TimerStart(t3b,.03,true,osw)
set t3b=null
set S3b=null
endfunction
function q7s takes nothing returns nothing
local texttag y7s
local string p7s
local real e7s
if pr>0 then
set pr=pr-1
set y7s=yr
set p7s=I2S(pr)
set e7s=13.
call SetTextTagText(y7s,p7s,e7s*.0023)
endif
set y7s=null
endfunction
function q8S takes nothing returns boolean
local trigger c8S
local trigger o8S
local playerunitevent O8S
local trigger l8S
local playerunitevent b8S
local integer y8S
local trigger p8S
local boolexpr e8S
set th=CreateTrigger()
set c8S=th
call DisableTrigger(c8S)
set o8S=th
set O8S=EVENT_PLAYER_UNIT_DEATH
set l8S=o8S
set b8S=O8S
set y8S=0
loop
call TriggerRegisterPlayerUnitEvent(l8S,Player(y8S),b8S,null)
set y8S=y8S+1
exitwhen y8S==bj_MAX_PLAYER_SLOTS
endloop
set p8S=th
set e8S=Condition(Irw)
call TriggerAddCondition(p8S,e8S)
set c8S=null
set o8S=null
set O8S=null
set l8S=null
set b8S=null
set p8S=null
set e8S=null
return true
endfunction
function qCe takes nothing returns boolean
return IsUnitType(GetTriggerUnit(),UNIT_TYPE_STRUCTURE)==true and GetPlayerController(GetOwningPlayer(GetTriggerUnit()))==MAP_CONTROL_COMPUTER
endfunction
function qGw takes nothing returns boolean
local trigger yGw=cq
local playerunitevent pGw=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer eGw=0
loop
call TriggerRegisterPlayerUnitEvent(yGw,Player(eGw),pGw,null)
set eGw=eGw+1
exitwhen eGw==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(cq,Condition(Ssw))
call TriggerAddAction(cq,csw)
set yGw=null
set pGw=null
return true
endfunction
function qNS takes nothing returns boolean
local unit oNS=GetFilterUnit()
local integer ONS=GetUnitCurrentOrder(oNS)
local unit lNS
local unit bNS
local unittype yNS
local boolean pNS
local boolean eNS
if ONS==String2OrderIdBJ("stop") or ONS==String2OrderIdBJ("hold") or ONS==String2OrderIdBJ("move") or ONS==String2OrderIdBJ("idle") or ONS==0 then
set lNS=oNS
set pNS=UnitAlive(lNS)
else
set pNS=false
endif
if pNS then
set bNS=oNS
set yNS=UNIT_TYPE_HERO
set eNS=IsUnitType(bNS,yNS)==true
else
set eNS=false
endif
set oNS=null
set lNS=null
set bNS=null
set yNS=null
return eNS
endfunction
function qPl takes nothing returns nothing
local texttag SPl=OG
local timer cPl
local timer oPl
local trigger OPl
local unit lPl
local integer bPl
local string yPl
local real pPl
local player ePl
call DestroyTextTag(SPl)
set OG=null
set yG=0
set cPl=lG
call PauseTimer(cPl)
set oPl=lG
call DestroyTimer(oPl)
set lG=null
set OPl=bG
call DisableTrigger(OPl)
set lPl=oG
set bPl=$414D3173
call UnitAddAbility(lPl,bPl)
call SetPlayerTechMaxAllowed(tG,$52303342,3)
call SetPlayerTechMaxAllowed(tG,$52303341,3)
call SetPlayerTechMaxAllowed(tG,$52303339,3)
set yPl="You can use your |cffffcc00Infernals|r now!"
set pPl=6.
set ePl=tG
call DisplayTimedTextToPlayer(ePl,0.,0.,pPl,yPl)
set SPl=null
set cPl=null
set oPl=null
set OPl=null
set lPl=null
set ePl=null
endfunction
function qRo takes nothing returns boolean
local unit sRo=GetFilterUnit()
local unit tRo=sRo
local unit iRo
local unit SRo
local unit cRo
local player oRo
local unit ORo
local unit lRo
local unittype bRo
local boolean yRo
local boolean pRo
local boolean eRo
if UnitAlive(tRo) then
set iRo=sRo
set SRo=ul
if iRo!=null and SRo!=null then
set cRo=iRo
set ORo=SRo
set oRo=GetOwningPlayer(ORo)
set yRo=cRo!=null and IsUnitAlly(cRo,oRo)
else
set yRo=false
endif
set pRo=yRo
else
set pRo=false
endif
if pRo then
set lRo=sRo
set bRo=UNIT_TYPE_HERO
set eRo=IsUnitType(lRo,bRo)
else
set eRo=false
endif
set sRo=null
set tRo=null
set iRo=null
set SRo=null
set cRo=null
set oRo=null
set ORo=null
set lRo=null
set bRo=null
return eRo
endfunction
function qUO takes nothing returns nothing
local group wUO=CreateGroup()
local filterfunc uUO=Filter(J3)
local unit rUO
local group sUO
local group tUO
local group iUO
local unit SUO
local string cUO
local real oUO
local player OUO
local unit lUO
local integer bUO
local group yUO
local boolexpr pUO
local string eUO
call GroupEnumUnitsInRect(wUO,bj_mapInitialPlayableArea,uUO)
set sUO=wUO
loop
set tUO=sUO
exitwhen not (FirstOfGroup(tUO)!=null)
set iUO=sUO
set SUO=FirstOfGroup(iUO)
call GroupRemoveUnit(iUO,SUO)
set rUO=SUO
if rUO!=null then
set lUO=rUO
set eUO=GetHeroProperName(lUO)+" id: "
set bUO=LoadInteger(qu,GetHandleId(rUO),$6D6F7665)
set cUO=eUO+I2S(bUO)
set oUO=10.
set OUO=GetTriggerPlayer()
call DisplayTimedTextToPlayer(OUO,0.,0.,oUO,cUO)
endif
endloop
set yUO=wUO
call DestroyGroup(yUO)
set pUO=uUO
call DestroyBoolExpr(pUO)
set wUO=null
set uUO=null
set rUO=null
set sUO=null
set tUO=null
set iUO=null
set SUO=null
set OUO=null
set lUO=null
set yUO=null
set pUO=null
endfunction
function qVe takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1339")
endfunction
function vde takes unit yde returns nothing
local unit ade=yde
local player pde=GetOwningPlayer(ade)
local unit nde=yde
local integer ede=GetUnitTypeId(nde)
local trigger qde
local sound dde
local trigger fde
local rect Rde
local region Tde
local trigger Yde
local boolexpr Gde
local unit gde
local real hde
local real Fde
local real kde
local player jde
local player xde
if ede==$7830326E then
set dde=cg
if dde!=null then
call StartSound(dde)
endif
set qde=CreateTrigger()
set fde=qde
set Rde=bj_mapInitialPlayableArea
set Tde=CreateRegion()
call RegionAddRect(Tde,Rde)
call TriggerRegisterEnterRegion(fde,Tde,null)
set Yde=qde
set Gde=Condition(urw)
call TriggerAddCondition(Yde,Gde)
set gde=GetTriggerUnit()
set hde=70.
set Fde=70.
set kde=70.
call SetUnitScale(gde,hde*.01,Fde*.01,kde*.01)
set fg=yde
set jde=pde
set t[GetPlayerId(jde)]=$484D3038
set xde=pde
set Rg=n[GetPlayerId(xde)]
endif
set pde=null
set qde=null
set ade=null
set nde=null
set dde=null
set fde=null
set Rde=null
set Tde=null
set Yde=null
set Gde=null
set gde=null
set jde=null
set xde=null
endfunction
function qVp takes nothing returns nothing
call vde(GetTriggerUnit())
endfunction
function qWp takes nothing returns boolean
return true
endfunction
function qXc takes nothing returns boolean
local trigger cXc
local trigger oXc
local playerunitevent OXc
local trigger lXc
local playerunitevent bXc
local integer yXc
local trigger pXc
local code eXc
set bY=CreateTrigger()
set cXc=bY
call DisableTrigger(cXc)
set oXc=bY
set OXc=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set lXc=oXc
set bXc=OXc
set yXc=0
loop
call TriggerRegisterPlayerUnitEvent(lXc,Player(yXc),bXc,null)
set yXc=yXc+1
exitwhen yXc==bj_MAX_PLAYER_SLOTS
endloop
set pXc=bY
set eXc=kww
call TriggerAddAction(pXc,eXc)
set cXc=null
set oXc=null
set OXc=null
set lXc=null
set bXc=null
set pXc=null
return true
endfunction
function qZO takes nothing returns nothing
local unit sZO=GetDyingUnit()
local unit tZO=GetKillingUnit()
local unit iZO
local unit SZO
local unit cZO
local unit oZO
local integer OZO
local unit lZO
local real bZO
local unit yZO
local string pZO
local boolean eZO
if IsUnitType(sZO,UNIT_TYPE_HERO)==true and IsUnitIllusion(sZO)==false then
set SZO=tZO
set eZO=GetUnitTypeId(SZO)==$4F303430
else
set eZO=false
endif
if eZO then
set cZO=tZO
set iZO=CreateUnit(GetOwningPlayer(cZO),$75303030,0.,0.,0.)
set oZO=iZO
set OZO=$41313255
call UnitAddAbility(oZO,OZO)
set lZO=iZO
set bZO=5.
call UnitApplyTimedLife(lZO,$42544C46,bZO)
set yZO=iZO
set pZO="roar"
call IssueImmediateOrder(yZO,pZO)
endif
set sZO=null
set tZO=null
set iZO=null
set SZO=null
set cZO=null
set oZO=null
set lZO=null
set yZO=null
endfunction
function qZy takes nothing returns boolean
local trigger cZy
local trigger oZy
local playerunitevent OZy
local trigger lZy
local playerunitevent bZy
local integer yZy
local trigger pZy
local code eZy
set OY=CreateTrigger()
set lY=CreateSound("AnduinPick.wav",false,false,false,10,10,"DefaultEAXON")
set cZy=OY
call DisableTrigger(cZy)
set oZy=OY
set OZy=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set lZy=oZy
set bZy=OZy
set yZy=0
loop
call TriggerRegisterPlayerUnitEvent(lZy,Player(yZy),bZy,null)
set yZy=yZy+1
exitwhen yZy==bj_MAX_PLAYER_SLOTS
endloop
set pZy=OY
set eZy=Fww_445
call TriggerAddAction(pZy,eZy)
set cZy=null
set oZy=null
set OZy=null
set lZy=null
set bZy=null
set pZy=null
return true
endfunction
function q_t takes nothing returns boolean
local unit l_t=GetFilterUnit()
local unittype b_t=UNIT_TYPE_STRUCTURE
local unit y_t
local integer p_t
local boolean e_t
if IsUnitType(l_t,b_t)==true then
set y_t=GetFilterUnit()
set p_t=$4176756C
set e_t=GetUnitAbilityLevel(y_t,p_t)==0
else
set e_t=false
endif
set l_t=null
set b_t=null
set y_t=null
return e_t
endfunction
function qcS takes nothing returns boolean
return true
endfunction
function qci takes nothing returns nothing
local unit VSi=GetAttacker()
local unit uci=VSi
local group BSi
local filterfunc NSi
local unit MSi
local group wci
local unit rci
local unit sci
local unit tci
local group ici
local group Sci
local unit cci
local unit oci
local unit Oci
local group lci
local boolexpr bci
local group yci
local real pci
local real eci
if GetUnitTypeId(uci)==$7830306B then
if GetRandomInt(1,100)<=25 then
set BSi=CreateGroup()
set rci=VSi
set hG=GetOwningPlayer(rci)
call SetUnitAnimation(VSi,"Spin")
set NSi=Filter(Hww)
set yci=BSi
set sci=VSi
set pci=GetUnitX(sci)
set tci=VSi
call GroupEnumUnitsInRange(yci,pci,GetUnitY(tci),175.,NSi)
set wci=BSi
loop
set ici=wci
exitwhen not (FirstOfGroup(ici)!=null)
set Sci=wci
set cci=FirstOfGroup(Sci)
call GroupRemoveUnit(Sci,cci)
set MSi=cci
call UnitDamageTarget(VSi,MSi,25.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_ENHANCED,WEAPON_TYPE_WHOKNOWS)
endloop
set oci=VSi
set eci=GetUnitX(oci)
set Oci=VSi
call DestroyEffect(AddSpecialEffect("Ephemeral Slash Purple.mdl",eci,GetUnitY(Oci)))
set lci=BSi
call DestroyGroup(lci)
set bci=NSi
call DestroyBoolExpr(bci)
set hG=null
endif
endif
set VSi=null
set BSi=null
set NSi=null
set MSi=null
set wci=null
set uci=null
set rci=null
set sci=null
set tci=null
set ici=null
set Sci=null
set cci=null
set oci=null
set Oci=null
set lci=null
set bci=null
set yci=null
endfunction
function TUs takes string oUs returns nothing
local unit OUs
local unit lUs
local unittype bUs
local unit yUs
local unittype pUs
local unit eUs
local unittype qUs
local unit aUs
local unittype nUs
local boolean dUs
local boolean fUs
local boolean RUs
set aW[qW]=oUs
set qW=qW+1
set OUs=GetTriggerUnit()
set lUs=OUs
set bUs=UNIT_TYPE_HERO
if not IsUnitType(lUs,bUs) then
set yUs=OUs
set pUs=UNIT_TYPE_STUNNED
set dUs=not IsUnitType(yUs,pUs)
else
set dUs=false
endif
if dUs then
set eUs=OUs
set qUs=UNIT_TYPE_DEAD
set fUs=not IsUnitType(eUs,qUs)
else
set fUs=false
endif
if fUs then
set RUs=true
else
set aUs=OUs
set nUs=UNIT_TYPE_ANCIENT
set RUs=IsUnitType(aUs,nUs)
endif
if RUs then
call Dgl(GetAttacker(),"when calling handleUnit in AsassinsBehavior, line 21")
endif
set qW=qW-1
set OUs=null
set lUs=null
set bUs=null
set yUs=null
set pUs=null
set eUs=null
set qUs=null
set aUs=null
set nUs=null
endfunction
function qdl takes nothing returns nothing
set qW=0
call TUs("via function reference AsassinsBehavior, line 18")
endfunction
function qfo takes nothing returns nothing
local unit bfo=GetTriggerUnit()
local unit yfo=bfo
local unit pfo
local trigger efo
if GetUnitTypeId(yfo)==$5530304A and GetHeroLevel(bfo)>=14 then
set pfo=bfo
set Py=GetOwningPlayer(pfo)
set efo=Iy
call EnableTrigger(efo)
endif
set bfo=null
set yfo=null
set pfo=null
set efo=null
endfunction
function qgc takes nothing returns boolean
local playerunitevent pgc=EVENT_PLAYER_UNIT_SPELL_CAST
local code egc=A7
call emO(pgc,null,egc,null)
set pgc=null
return true
endfunction
function qiu takes nothing returns boolean
local unit siu=GetFilterUnit()
local unit tiu=siu
local unit iiu
local integer Siu
local unit ciu
local integer oiu
local unit Oiu
local integer liu
local boolean biu
local boolean yiu
local boolean piu
local boolean eiu
if UnitAlive(tiu) and IsPlayerAlly(GetOwningPlayer(LoadUnitHandle(qu,$556E6974,$556E6974)),GetOwningPlayer(siu))==true then
set iiu=siu
set Siu=$416C6F63
set biu=GetUnitAbilityLevel(iiu,Siu)==0
else
set biu=false
endif
if biu then
set ciu=siu
set oiu=$4176756C
set yiu=GetUnitAbilityLevel(ciu,oiu)==0
else
set yiu=false
endif
if yiu then
set Oiu=siu
set liu=$42637963
set piu=GetUnitAbilityLevel(Oiu,liu)==0
else
set piu=false
endif
set eiu=piu and IsUnitType(siu,UNIT_TYPE_HERO)==true and IsUnitType(siu,UNIT_TYPE_ANCIENT)==false and IsUnitType(siu,UNIT_TYPE_STRUCTURE)==false
set siu=null
set tiu=null
set iiu=null
set ciu=null
set Oiu=null
return eiu
endfunction
function qki takes nothing returns nothing
local unit MFi=GetKillingUnit()
local unit uki=MFi
local integer wki
local unit rki
local unit ski
local real tki
local unit iki
local unitstate Ski
local real cki
local unit oki
local unitstate Oki
local unit lki
local unit bki
local unit yki
local unitstate pki
local real eki
if GetUnitTypeId(uki)==$6E736767 then
set rki=MFi
set wki=GetPlayerTechCount(GetOwningPlayer(rki),$52303045,true)
set ski=MFi
set tki=I2R(25+25*wki)
set iki=ski
set Ski=UNIT_STATE_LIFE
set cki=tki
set yki=iki
set pki=Ski
set oki=iki
set Oki=Ski
call SetUnitState(yki,pki,GetUnitState(oki,Oki)+cki)
set lki=MFi
set eki=GetUnitX(lki)
set bki=MFi
call DestroyEffect(AddSpecialEffect("Heal Orange.mdx",eki,GetUnitY(bki)))
endif
set MFi=null
set uki=null
set rki=null
set ski=null
set iki=null
set Ski=null
set oki=null
set Oki=null
set lki=null
set bki=null
set yki=null
set pki=null
endfunction
function qni takes nothing returns boolean
return true
endfunction
function qpS takes nothing returns nothing
local unit upS=GetEnteringUnit()
local unit ipS=upS
local integer rpS=GetUnitTypeId(ipS)
local unit SpS=upS
local player spS=GetOwningPlayer(SpS)
local integer tpS
local unit cpS
local integer opS
local unit OpS
local integer lpS
local unit bpS
local integer ypS
local unit ppS
local integer epS
if rpS==$7561626F or rpS==$6E66676C or rpS==$6E30335A then
set tpS=GetPlayerTechCount(spS,$52303135,true)
if tpS==1 then
set cpS=upS
set opS=$41303632
call UnitAddAbility(cpS,opS)
elseif tpS==2 then
set OpS=upS
set lpS=$41303747
call UnitAddAbility(OpS,lpS)
elseif tpS==3 then
set bpS=upS
set ypS=$41303635
call UnitAddAbility(bpS,ypS)
else
set ppS=upS
set epS=$41304C45
call UnitAddAbility(ppS,epS)
endif
endif
set upS=null
set spS=null
set ipS=null
set SpS=null
set cpS=null
set OpS=null
set bpS=null
set ppS=null
endfunction
function qpc takes nothing returns boolean
return true
endfunction
function qpw takes nothing returns boolean
return true
endfunction
function qrb takes nothing returns boolean
return true
endfunction
function qxl takes nothing returns boolean
local playerunitevent Oxl
local code lxl
local playerunitevent bxl
local code yxl
local playerunitevent pxl
local code exl
set Uy=CreateTrigger()
set Oxl=EVENT_PLAYER_HERO_LEVEL
set lxl=L1
call emO(Oxl,null,lxl,null)
set bxl=EVENT_PLAYER_HERO_REVIVE_FINISH
set yxl=X1
call emO(bxl,null,yxl,null)
set pxl=EVENT_PLAYER_UNIT_DEATH
set exl=C1
call emO(pxl,null,exl,null)
set Oxl=null
set bxl=null
set pxl=null
return true
endfunction
function qyl takes nothing returns boolean
local unit yyl=GetFilterUnit()
local unit pyl=yyl
local boolean eyl=UnitAlive(pyl) and GetUnitAbilityLevel(yyl,$416C6F63)==0 and GetUnitAbilityLevel(yyl,$4176756C)==0 and GetUnitAbilityLevel(yyl,$42637963)==0 and IsUnitType(yyl,UNIT_TYPE_HERO)==false and IsPlayerAlly(GetOwningPlayer(yyl),GetOwningPlayer(LoadUnitHandle(qu,$54416772,$556E6974)))==true
set yyl=null
set pyl=null
return eyl
endfunction
function r1u takes nothing returns boolean
return true
endfunction
function VjS takes group ZjS,integer UjS,string IjS returns nothing
local group PjS
local unit AjS
local group DjS
local group HjS
local group JjS
local unit KjS
local group LjS
local group XjS
local group CjS
set aW[qW]=IjS
set qW=qW+1
set DjS=ZjS
set qq=CreateGroup()
call ForGroup(DjS,X3)
set PjS=qq
loop
set HjS=PjS
exitwhen not (FirstOfGroup(HjS)!=null)
set JjS=PjS
set KjS=FirstOfGroup(JjS)
call GroupRemoveUnit(JjS,KjS)
set AjS=KjS
call WXp(3,UjS,AjS,"when calling callback in ClosureForGroups, line 47",0.,0.,0.,false,0,null,null,0,null)
endloop
set LjS=PjS
set XjS=LjS
call GroupClear(XjS)
set CjS=LjS
call DestroyGroup(CjS)
call epi(UjS,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 48")
set qW=qW-1
set PjS=null
set AjS=null
set DjS=null
set HjS=null
set JjS=null
set KjS=null
set LjS=null
set XjS=null
set CjS=null
endfunction
function Ant takes string Qnt returns nothing
local integer Wnt
local group Ent
local string Znt
local integer Unt
local group Int
local boolean Pnt
set aW[qW]=Qnt
set qW=qW+1
set Ent=Tg
set Znt="when calling alloc_ForGroupCallback_forEachIn_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 710"
set aW[qW]=Znt
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set Unt=qF
set aF[Unt]=861
else
call L8c("Out of memory: Could not create ForGroupCallback_forEachIn_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 710")
set Unt=0
endif
else
set eF=eF-1
set Unt=pF[eF]
set aF[Unt]=861
endif
set qW=qW-1
set Wnt=Unt
call VjS(Ent,Wnt,"when calling forEachIn in TheEpiphanyOfDeath, line 710")
set Int=Tg
set Pnt=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
set bj_groupCountUnits=0
call ForGroup(Int,function CountUnitsInGroupEnum)
if Pnt then
call DestroyGroup(Int)
endif
if bj_groupCountUnits==0 then
call DestroyTrigger(GetTriggeringTrigger())
endif
set qW=qW-1
set Ent=null
set Int=null
endfunction
function r2b takes nothing returns nothing
set qW=0
call Ant("via function reference TheEpiphanyOfDeath, line 923")
endfunction
function r8b takes nothing returns boolean
return GetUnitCurrentOrder(GetFilterUnit())==String2OrderIdBJ("idle") and IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_HERO)==false
endfunction
function rBe takes nothing returns boolean
return true
endfunction
function rBt takes nothing returns nothing
local unit jVt=GetTriggerUnit()
local unit QVt=jVt
local integer xVt=GetUnitTypeId(QVt)
local unit WVt=jVt
local player vVt=GetOwningPlayer(WVt)
local integer mVt=GetPlayerId(vVt)
local sound EVt
local unit ZVt
local real UVt
local real IVt
local real PVt
local unit AVt
local real DVt
local real HVt
local real JVt
local trigger KVt
local unit LVt
local real XVt
local real CVt
local real VVt
local trigger BVt
local unit NVt
local real MVt
local real wBt
local real uBt
if xVt==$6E30324B then
set EVt=xg
if EVt!=null then
call StartSound(EVt)
endif
set ZVt=jVt
set UVt=70.
set IVt=70.
set PVt=70.
call SetUnitScale(ZVt,UVt*.01,IVt*.01,PVt*.01)
set s[mVt]=$484D3032
endif
if xVt==$6E667632 then
set AVt=jVt
set DVt=140.
set HVt=140.
set JVt=140.
call SetUnitScale(AVt,DVt*.01,HVt*.01,JVt*.01)
call SetPlayerTechResearched(vVt,$52303455,1)
call SetPlayerTechResearched(Player(mVt+4),$52303455,1)
set KVt=JO
call EnableTrigger(KVt)
endif
if xVt==$6E767232 then
set LVt=jVt
set XVt=140.
set CVt=140.
set VVt=140.
call SetUnitScale(LVt,XVt*.01,CVt*.01,VVt*.01)
call SetPlayerTechResearched(vVt,$52303255,1)
call SetPlayerTechResearched(Player(mVt+4),$52303255,1)
set BVt=eT
call EnableTrigger(BVt)
endif
if xVt==$6E636234 then
call RemoveUnitFromStock(O[mVt],A[mVt])
call RemoveUnitFromStock(b[mVt],A[mVt])
call RemoveUnitFromStock(l[mVt],A[mVt])
set A[mVt]=$656E6563
call AddUnitToStock(O[mVt],A[mVt],1,3)
call AddUnitToStock(b[mVt],A[mVt],1,3)
call AddUnitToStock(l[mVt],A[mVt],1,3)
endif
if xVt==$6E767231 then
call RemoveUnitFromStock(O[mVt],D[mVt])
call RemoveUnitFromStock(b[mVt],D[mVt])
call RemoveUnitFromStock(l[mVt],D[mVt])
set D[mVt]=$68303235
call AddUnitToStock(O[mVt],D[mVt],1,3)
call AddUnitToStock(b[mVt],D[mVt],1,3)
call AddUnitToStock(l[mVt],D[mVt],1,3)
endif
if xVt==$6E667634 then
call RemoveUnitFromStock(O[mVt],H[mVt])
call RemoveUnitFromStock(b[mVt],H[mVt])
call RemoveUnitFromStock(l[mVt],H[mVt])
set H[mVt]=$6E636870
call AddUnitToStock(O[mVt],H[mVt],1,3)
call AddUnitToStock(b[mVt],H[mVt],1,3)
call AddUnitToStock(l[mVt],H[mVt],1,3)
endif
if xVt==$6E30324A then
set J[mVt]=$6E303244
endif
if xVt==$6E767230 then
set K[mVt]=$6E746872
endif
if xVt==$6E636237 then
set L[mVt]=$6E73736E
endif
if xVt==$6E303236 then
set L[mVt]=$68303237
endif
if xVt==$6E636236 then
set NVt=jVt
set MVt=90.
set wBt=90.
set uBt=90.
call SetUnitScale(NVt,MVt*.01,wBt*.01,uBt*.01)
call SetPlayerTechResearched(vVt,$5230334F,1)
call SetPlayerTechResearched(Player(mVt+4),$5230334F,1)
endif
set jVt=null
set vVt=null
set QVt=null
set WVt=null
set EVt=null
set ZVt=null
set AVt=null
set KVt=null
set LVt=null
set BVt=null
set NVt=null
endfunction
function rHu takes nothing returns nothing
local integer XDu=GetResearched()
local player CDu
local trigger VDu
local trigger BDu
local unit NDu
local player MDu
local trigger wHu
local trigger uHu
if XDu==$5230305A then
set VDu=Oe
call EnableTrigger(VDu)
endif
if XDu==$52303057 then
set BDu=nh
call EnableTrigger(BDu)
endif
if XDu==$52303130 then
set NDu=GetTriggerUnit()
set CDu=GetOwningPlayer(NDu)
set MDu=CDu
call SetPlayerTechResearched(Player(GetPlayerId(MDu)+4),$5230385A,GetPlayerTechCount(CDu,$52303130,true))
set wHu=BG
call EnableTrigger(wHu)
endif
if XDu==$5230344A then
set uHu=KG
call EnableTrigger(uHu)
endif
set CDu=null
set VDu=null
set BDu=null
set NDu=null
set MDu=null
set wHu=null
set uHu=null
endfunction
function rKw takes nothing returns nothing
local unit VHw=GetDyingUnit()
local unit MHw=VHw
local unittype wJw=UNIT_TYPE_HERO
local texttag BHw
local unit NHw
local unit uJw
local effect rJw
local string sJw
local real tJw
local real iJw
local unit SJw
local unit cJw
local unit oJw
local texttag OJw
local real lJw
local real bJw
local real yJw
local unit pJw
local unit eJw
local texttag qJw
local integer aJw
local integer nJw
local integer dJw
local integer fJw
local texttag RJw
local real TJw
local texttag YJw
local real GJw
local texttag gJw
local boolean hJw
local texttag FJw
local boolean kJw
local texttag jJw
local string xJw
local real vJw
local texttag mJw
local real QJw
local real WJw
local unit EJw
local unit ZJw
local unit UJw
local unit IJw
local real PJw
local unit AJw
local integer DJw
local unit HJw
local integer JJw
local integer KJw
local unit LJw
local unit XJw
local string CJw
local boolean VJw
local real BJw
local player NJw
local real MJw
local real wKw
local real uKw
if IsUnitType(MHw,wJw)==true then
set uJw=VHw
set VJw=GetPlayerTechCount(GetOwningPlayer(uJw),$5230344A,true)>0
else
set VJw=false
endif
if VJw then
set sJw="DarkNova.mdx"
set SJw=VHw
set cJw=SJw
set BJw=GetUnitX(cJw)
set oJw=SJw
set wKw=BJw
set uKw=GetUnitY(oJw)
set tJw=wKw
set iJw=uKw
set rJw=AddSpecialEffect(sJw,tJw,iJw)
call DestroyEffect(rJw)
set BHw=CreateTextTag()
set OJw=BHw
set pJw=VHw
set lJw=GetUnitX(pJw)
set eJw=VHw
set bJw=GetUnitY(eJw)
set yJw=50.
call SetTextTagPos(OJw,lJw,bJw,yJw)
set qJw=BHw
set aJw=70
set nJw=0
set dJw=70
set fJw=255
call SetTextTagColor(qJw,aJw,nJw,dJw,fJw)
set RJw=BHw
set TJw=6.
call SetTextTagLifespan(RJw,TJw)
set YJw=BHw
set GJw=4.
call SetTextTagFadepoint(YJw,GJw)
set gJw=BHw
set hJw=true
call SetTextTagVisibility(gJw,hJw)
set FJw=BHw
set kJw=false
call SetTextTagPermanent(FJw,kJw)
set jJw=BHw
set xJw="Soul Echo"
set vJw=10.
call SetTextTagText(jJw,xJw,vJw*.0023)
set mJw=BHw
set QJw=0.
set WJw=.03
call SetTextTagVelocity(mJw,QJw,WJw)
set EJw=VHw
set NJw=GetOwningPlayer(EJw)
set ZJw=VHw
set MJw=GetUnitX(ZJw)
set UJw=VHw
set NHw=CreateUnit(NJw,$75303030,MJw,GetUnitY(UJw),0.)
set IJw=NHw
set PJw=3.
call UnitApplyTimedLife(IJw,$42544C46,PJw)
set AJw=NHw
set DJw=$41777273
call UnitAddAbility(AJw,DJw)
set HJw=NHw
set JJw=$41777273
set LJw=VHw
set KJw=GetPlayerTechCount(GetOwningPlayer(LJw),$5230344A,true)
call SetUnitAbilityLevel(HJw,JJw,KJw)
set XJw=NHw
set CJw="stomp"
call IssueImmediateOrder(XJw,CJw)
endif
set VHw=null
set BHw=null
set NHw=null
set MHw=null
set wJw=null
set uJw=null
set rJw=null
set SJw=null
set cJw=null
set oJw=null
set OJw=null
set pJw=null
set eJw=null
set qJw=null
set RJw=null
set YJw=null
set gJw=null
set FJw=null
set jJw=null
set mJw=null
set EJw=null
set ZJw=null
set UJw=null
set IJw=null
set AJw=null
set HJw=null
set LJw=null
set XJw=null
set NJw=null
endfunction
function rLi takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function rMl takes nothing returns nothing
local integer WNO=GetSpellAbilityId()
local unit ENO
local unit ZNO
local integer UNO
local unit INO
local unit PNO
local unit ANO
local player DNO
local unit HNO
local unit JNO
local integer KNO
local unit LNO
local widget XNO
local real CNO
local boolean VNO
local boolean BNO
local attacktype NNO
local damagetype MNO
local weapontype wMl
local boolean uMl
if WNO==$41323753 then
set ENO=GetSpellAbilityUnit()
set ZNO=GetSpellTargetUnit()
set INO=ZNO
set PNO=ENO
if INO!=null and PNO!=null then
set ANO=INO
set HNO=PNO
set DNO=GetOwningPlayer(HNO)
set uMl=IsUnitEnemy(ANO,DNO)
else
set uMl=false
endif
if uMl then
set JNO=ENO
set KNO=WNO
set UNO=GetUnitAbilityLevel(JNO,KNO)
set LNO=ENO
set XNO=ZNO
set CNO=12.5+12.5*UNO
set VNO=true
set BNO=false
set NNO=ATTACK_TYPE_NORMAL
set MNO=DAMAGE_TYPE_MAGIC
set wMl=WEAPON_TYPE_WHOKNOWS
call UnitDamageTarget(LNO,XNO,CNO,VNO,BNO,NNO,MNO,wMl)
endif
endif
set ENO=null
set ZNO=null
set INO=null
set PNO=null
set ANO=null
set DNO=null
set HNO=null
set JNO=null
set LNO=null
set XNO=null
set NNO=null
set MNO=null
set wMl=null
endfunction
function rOc takes nothing returns nothing
local rect Toc
local rect Yoc
local rect Goc
local rect goc
local rect hoc
local unit Foc
local rect koc
local rect joc
local rect xoc
local unit voc
local rect moc
local rect Qoc
local rect Woc
local unit Eoc
local rect Zoc
local rect Uoc
local rect Ioc
local unit Poc
local rect Aoc
local rect Doc
local rect Hoc
local rect Joc
local rect Koc
local rect Loc
local rect Xoc
local rect Coc
local rect Voc
local rect Boc
local rect Noc
local rect Moc
local rect wOc
local rect uOc
call IssueImmediateOrderById(GetEnumUnit(),852056)
if GetOwningPlayer(GetEnumUnit())==Player(11) then
if GetRandomInt(1,4)==1 then
set Toc=dc
set Xo[244]=Location(GetRectCenterX(Toc),GetRectCenterY(Toc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,3)==1 then
set Yoc=nc
set Xo[244]=Location(GetRectCenterX(Yoc),GetRectCenterY(Yoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,2)==1 then
set Goc=qc
set Xo[244]=Location(GetRectCenterX(Goc),GetRectCenterY(Goc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set goc=ac
set Xo[244]=Location(GetRectCenterX(goc),GetRectCenterY(goc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set hoc=Oo
set Foc=GetEnumUnit()
if RectContainsCoords(hoc,GetUnitX(Foc),GetUnitY(Foc)) then
if GetRandomInt(1,2)==1 then
set koc=Cc
set Xo[244]=Location(GetRectCenterX(koc),GetRectCenterY(koc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set joc=Lc
set Xo[244]=Location(GetRectCenterX(joc),GetRectCenterY(joc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set xoc=lo
set voc=GetEnumUnit()
if RectContainsCoords(xoc,GetUnitX(voc),GetUnitY(voc)) then
if GetRandomInt(1,2)==1 then
set moc=so
set Xo[244]=Location(GetRectCenterX(moc),GetRectCenterY(moc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Qoc=So
set Xo[244]=Location(GetRectCenterX(Qoc),GetRectCenterY(Qoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set Woc=ec
set Eoc=GetEnumUnit()
if RectContainsCoords(Woc,GetUnitX(Eoc),GetUnitY(Eoc)) then
if GetRandomInt(1,2)==1 then
set Zoc=Wc
set Xo[244]=Location(GetRectCenterX(Zoc),GetRectCenterY(Zoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Uoc=mc
set Xo[244]=Location(GetRectCenterX(Uoc),GetRectCenterY(Uoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
else
set Ioc=pc
set Poc=GetEnumUnit()
if RectContainsCoords(Ioc,GetUnitX(Poc),GetUnitY(Poc)) then
if GetRandomInt(1,2)==1 then
set Aoc=Tc
set Xo[244]=Location(GetRectCenterX(Aoc),GetRectCenterY(Aoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Doc=Gc
set Xo[244]=Location(GetRectCenterX(Doc),GetRectCenterY(Doc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(GetEnumUnit())==1 then
if GetRandomInt(1,2)==1 then
set Hoc=Cc
set Xo[244]=Location(GetRectCenterX(Hoc),GetRectCenterY(Hoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Joc=Lc
set Xo[244]=Location(GetRectCenterX(Joc),GetRectCenterY(Joc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(GetEnumUnit())==2 then
if GetRandomInt(1,2)==1 then
set Koc=so
set Xo[244]=Location(GetRectCenterX(Koc),GetRectCenterY(Koc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Loc=So
set Xo[244]=Location(GetRectCenterX(Loc),GetRectCenterY(Loc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(GetEnumUnit())==3 then
if GetRandomInt(1,2)==1 then
set Xoc=Wc
set Xo[244]=Location(GetRectCenterX(Xoc),GetRectCenterY(Xoc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Coc=mc
set Xo[244]=Location(GetRectCenterX(Coc),GetRectCenterY(Coc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetUnitUserData(GetEnumUnit())==4 then
if GetRandomInt(1,2)==1 then
set Voc=Tc
set Xo[244]=Location(GetRectCenterX(Voc),GetRectCenterY(Voc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set Boc=Gc
set Xo[244]=Location(GetRectCenterX(Boc),GetRectCenterY(Boc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
elseif GetRandomInt(1,4)==1 then
set Noc=Pc
set Xo[244]=Location(GetRectCenterX(Noc),GetRectCenterY(Noc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,3)==1 then
set Moc=wo
set Xo[244]=Location(GetRectCenterX(Moc),GetRectCenterY(Moc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
elseif GetRandomInt(1,2)==1 then
set wOc=Hc
set Xo[244]=Location(GetRectCenterX(wOc),GetRectCenterY(wOc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
else
set uOc=jc
set Xo[244]=Location(GetRectCenterX(uOc),GetRectCenterY(uOc))
call IssuePointOrderByIdLoc(GetEnumUnit(),851983,Xo[244])
call RemoveLocation(Xo[244])
endif
endif
endif
endif
endif
set Toc=null
set Yoc=null
set Goc=null
set goc=null
set hoc=null
set Foc=null
set koc=null
set joc=null
set xoc=null
set voc=null
set moc=null
set Qoc=null
set Woc=null
set Eoc=null
set Zoc=null
set Uoc=null
set Ioc=null
set Poc=null
set Aoc=null
set Doc=null
set Hoc=null
set Joc=null
set Koc=null
set Loc=null
set Xoc=null
set Coc=null
set Voc=null
set Boc=null
set Noc=null
set Moc=null
set wOc=null
set uOc=null
endfunction
function rPl takes nothing returns boolean
local trigger NIl
local trigger MIl
local playerunitevent wPl
local integer uPl
set gn=CreateTrigger()
set NIl=gn
call DisableTrigger(NIl)
set MIl=gn
set wPl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uPl=0
loop
call TriggerRegisterPlayerUnitEvent(MIl,Player(uPl),wPl,null)
set uPl=uPl+1
exitwhen uPl==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(gn,l6)
set NIl=null
set MIl=null
set wPl=null
return true
endfunction
function rPs takes nothing returns boolean
local unit NIs=GetFilterUnit()
local unit MIs=NIs
local unittype wPs=UNIT_TYPE_HERO
local boolean uPs=IsUnitType(MIs,wPs)==true
set NIs=null
set MIs=null
set wPs=null
return uPs
endfunction
function o7b takes player g6b,integer h6b,integer F6b,integer k6b,real j6b,real x6b,real v6b,real m6b,real Q6b returns boolean
local boolean W6b
local unit E6b
local real Z6b
local real U6b
local real I6b
local real P6b
local real A6b
local real D6b
local real H6b
local unit J6b
local unit K6b
local unit L6b
local unit X6b
local integer C6b
local real V6b
local real B6b
local real N6b
local unit M6b
local real w7b
local real u7b
local real r7b
local real s7b
local real t7b
local real i7b
local real S7b
local real c7b
call Y2u(g6b,h6b,F6b,v6b,m6b,Q6b)
set E6b=xn
set J6b=xn
set K6b=J6b
set N6b=GetUnitX(K6b)
set L6b=J6b
set w7b=N6b
set u7b=GetUnitY(L6b)
set I6b=w7b
set P6b=u7b
set r7b=j6b
set s7b=x6b
set A6b=r7b
set D6b=s7b
set H6b=Atan2(D6b-P6b,A6b-I6b)
set t7b=H6b
set Z6b=t7b
set M6b=E6b
set i7b=Z6b
set U6b=i7b
call SetUnitFacing(M6b,U6b*57.295779513)
set X6b=xn
set C6b=k6b
set S7b=j6b
set c7b=x6b
set V6b=S7b
set B6b=c7b
set W6b=IssuePointOrderById(X6b,C6b,V6b,B6b)
call UCS(h6b)
set E6b=null
set J6b=null
set K6b=null
set L6b=null
set X6b=null
set M6b=null
return W6b
endfunction
function rQp takes nothing returns nothing
local unit qvp
local integer avp
local integer nvp
local integer dvp
local integer fvp
local unit Rvp
local player Tvp
local integer Yvp
local integer Gvp
local integer gvp
local real hvp
local real Fvp
local real kvp
local real jvp
local unit xvp
local player vvp
local integer mvp
local integer Qvp
local integer Wvp
local real Evp
local real Zvp
local real Uvp
local real Ivp
local unit Pvp
local player Avp
local integer Dvp
local integer Hvp
local integer Jvp
local real Kvp
local real Lvp
local real Xvp
local real Cvp
local unit Vvp
local player Bvp
local integer Nvp
local integer Mvp
local integer wmp
local real ump
local real rmp
local real smp
local real tmp
local player imp
local integer Smp
local integer cmp
local integer omp
local real Omp
local real lmp
local player bmp
local integer ymp
local integer pmp
local integer emp
local real qmp
local real amp
local player nmp
local integer dmp
local integer fmp
local integer Rmp
local real Tmp
local real Ymp
local player Gmp
local integer gmp
local integer hmp
local integer Fmp
local real kmp
local real jmp
local real xmp
local real vmp
local real mmp
local real Qmp
local real Wmp
local real Emp
local real Zmp
local real Ump
local real Imp
local real Pmp
local real Amp
local real Dmp
local real Hmp
local real Jmp
local real Kmp
local real Lmp
local real Xmp
local real Cmp
local real Vmp
local real Bmp
local real Nmp
local real Mmp
local real wQp
local real uQp
if GetSpellAbilityId()==$41304C35 then
set qvp=GetSpellAbilityUnit()
set Rvp=qvp
if GetOwningPlayer(Rvp)==Tu then
set avp=0
loop
exitwhen avp>5
set Tvp=nu
set Yvp=$41303736
set Gvp=1
set gvp=852224
set xmp=ib[avp]
set vmp=Ob[avp]
set hvp=xmp
set Fvp=vmp
set imp=Tvp
set Smp=Yvp
set cmp=Gvp
set omp=gvp
set mmp=hvp
set Qmp=Fvp
set Omp=mmp
set lmp=Qmp
set Wmp=hvp
set Emp=Fvp
set kvp=Wmp
set jvp=Emp
call o7b(imp,Smp,cmp,omp,Omp,lmp,kvp,jvp,0.)
set avp=avp+1
endloop
endif
set xvp=qvp
if GetOwningPlayer(xvp)==gu then
set nvp=0
loop
exitwhen nvp>5
set vvp=Ru
set mvp=$41303736
set Qvp=1
set Wvp=852224
set Zmp=Sb[nvp]
set Ump=lb[nvp]
set Evp=Zmp
set Zvp=Ump
set bmp=vvp
set ymp=mvp
set pmp=Qvp
set emp=Wvp
set Imp=Evp
set Pmp=Zvp
set qmp=Imp
set amp=Pmp
set Amp=Evp
set Dmp=Zvp
set Uvp=Amp
set Ivp=Dmp
call o7b(bmp,ymp,pmp,emp,qmp,amp,Uvp,Ivp,0.)
set nvp=nvp+1
endloop
endif
set Pvp=qvp
if GetOwningPlayer(Pvp)==Yu then
set dvp=0
loop
exitwhen dvp>5
set Avp=du
set Dvp=$41303736
set Hvp=1
set Jvp=852224
set Hmp=cb[dvp]
set Jmp=bb[dvp]
set Kvp=Hmp
set Lvp=Jmp
set nmp=Avp
set dmp=Dvp
set fmp=Hvp
set Rmp=Jvp
set Kmp=Kvp
set Lmp=Lvp
set Tmp=Kmp
set Ymp=Lmp
set Xmp=Kvp
set Cmp=Lvp
set Xvp=Xmp
set Cvp=Cmp
call o7b(nmp,dmp,fmp,Rmp,Tmp,Ymp,Xvp,Cvp,0.)
set dvp=dvp+1
endloop
endif
set Vvp=qvp
if GetOwningPlayer(Vvp)==Gu then
set fvp=0
loop
exitwhen fvp>5
set Bvp=fu
set Nvp=$41303736
set Mvp=1
set wmp=852224
set Vmp=ob[fvp]
set Bmp=yb[fvp]
set ump=Vmp
set rmp=Bmp
set Gmp=Bvp
set gmp=Nvp
set hmp=Mvp
set Fmp=wmp
set Nmp=ump
set Mmp=rmp
set kmp=Nmp
set jmp=Mmp
set wQp=ump
set uQp=rmp
set smp=wQp
set tmp=uQp
call o7b(Gmp,gmp,hmp,Fmp,kmp,jmp,smp,tmp,0.)
set fvp=fvp+1
endloop
endif
endif
set qvp=null
set Rvp=null
set Tvp=null
set xvp=null
set vvp=null
set Pvp=null
set Avp=null
set Vvp=null
set Bvp=null
set imp=null
set bmp=null
set nmp=null
set Gmp=null
endfunction
function rRo takes nothing returns boolean
local playerunitevent wRo=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code uRo=Vrw
call emO(wRo,null,uRo,null)
set wRo=null
return true
endfunction
function rSS takes nothing returns boolean
local trigger JiS
local playerunitevent KiS
local trigger LiS
local playerunitevent XiS
local integer CiS
local trigger ViS
local code BiS
local playerunitevent NiS
local code MiS
local playerunitevent wSS
local code uSS
call CreateTrigger()
set Un=CreateTrigger()
set JiS=Un
set KiS=EVENT_PLAYER_UNIT_ATTACKED
set LiS=JiS
set XiS=KiS
set CiS=0
loop
call TriggerRegisterPlayerUnitEvent(LiS,Player(CiS),XiS,null)
set CiS=CiS+1
exitwhen CiS==bj_MAX_PLAYER_SLOTS
endloop
set ViS=Un
set BiS=g6
call TriggerAddAction(ViS,BiS)
set NiS=EVENT_PLAYER_UNIT_SPELL_EFFECT
set MiS=h6
call emO(NiS,null,MiS,null)
set wSS=EVENT_PLAYER_UNIT_DEATH
set uSS=F6
call emO(wSS,null,uSS,null)
set JiS=null
set KiS=null
set LiS=null
set XiS=null
set ViS=null
set NiS=null
set wSS=null
return true
endfunction
function sDb takes string tPb returns nothing
local integer iPb
local unit SPb
local unit cPb
local integer oPb
local integer OPb
local integer lPb
local real bPb
local real yPb
local unit pPb
local group ePb
local real qPb
local real aPb
local filterfunc nPb
local unit dPb
local unit fPb
local unit RPb
local unit TPb
local integer YPb
local integer GPb
local integer gPb
local unit hPb
local integer FPb
local unit kPb
local effect jPb
local integer xPb
local unit vPb
local integer mPb
local player QPb
local player WPb
local integer EPb
local player ZPb
local playerstate UPb
local integer IPb
local player PPb
local playerstate APb
local unit DPb
local unit HPb
local unit JPb
local unit KPb
local real LPb
local unit XPb
local integer CPb
local unit VPb
local string BPb
local unit NPb
local unit MPb
local unit wAb
local unit uAb
local integer rAb
local unit sAb
local integer tAb
local integer iAb
local unit SAb
local real cAb
local unit oAb
local string OAb
local widget lAb
local unit bAb
local unit yAb
local integer pAb
local unit eAb
local integer qAb
local integer aAb
local unit nAb
local real dAb
local unit fAb
local string RAb
local widget TAb
local group YAb
local boolexpr GAb
local unit gAb
local real hAb
local unit FAb
local unitstate kAb
local real jAb
local unit xAb
local unitstate vAb
local unit mAb
local integer QAb
local player WAb
local player EAb
local integer ZAb
local player UAb
local playerstate IAb
local integer PAb
local player AAb
local playerstate DAb
local string HAb
local integer JAb
local real KAb
local integer LAb
local string XAb
local string CAb
local integer VAb
local player BAb
local playerstate NAb
local unit MAb
local unitstate wDb
local player uDb
local playerstate rDb
set aW[qW]=tPb
set qW=qW+1
set iPb=GetSpellAbilityId()
if iPb==$41305847 then
set SPb=GetSpellTargetUnit()
set cPb=GetSpellAbilityUnit()
call SetUnitAnimation(cPb,"Spell Shot")
set vPb=cPb
set mPb=$41305847
set oPb=GetUnitAbilityLevel(vPb,mPb)
set OPb=5+15*oPb
call UuS(SPb,OPb)
set QPb=Ud
set lPb=GetPlayerId(QPb)
set WPb=Player(lPb)
set EPb=OPb
set ZPb=WPb
set UPb=PLAYER_STATE_RESOURCE_GOLD
set IPb=EPb
set BAb=ZPb
set NAb=UPb
set PPb=ZPb
set APb=UPb
call SetPlayerState(BAb,NAb,GetPlayerState(PPb,APb)+IPb)
set hr[lPb]=hr[lPb]+OPb
set Fr[lPb]=Fr[lPb]+OPb
set Cr[lPb]=Cr[lPb]+OPb
if jp==true then
set DPb=cPb
set bPb=GetUnitX(DPb)
set HPb=cPb
set yPb=GetUnitY(HPb)
set JPb=cPb
set pPb=CreateUnit(GetOwningPlayer(JPb),$75303030,bPb,yPb,0.)
set KPb=pPb
set LPb=5.
call UnitApplyTimedLife(KPb,$42544C46,LPb)
set XPb=pPb
set CPb=$41313252
call UnitAddAbility(XPb,CPb)
set VPb=pPb
set BPb="roar"
call IssueImmediateOrder(VPb,BPb)
endif
if xp==true then
set ePb=CreateGroup()
set NPb=cPb
set qPb=GetUnitX(NPb)
set MPb=cPb
set aPb=GetUnitY(MPb)
set nPb=Filter(I4)
call GroupEnumUnitsInRange(ePb,qPb,aPb,600.,nPb)
set wAb=cPb
set dPb=CreateUnit(GetOwningPlayer(wAb),$75303030,qPb,aPb,0.)
set uAb=dPb
set rAb=$41313330
call UnitAddAbility(uAb,rAb)
set sAb=dPb
set tAb=$41313330
set iAb=oPb
call SetUnitAbilityLevel(sAb,tAb,iAb)
set SAb=dPb
set cAb=3.
call UnitApplyTimedLife(SAb,$42544C46,cAb)
set oAb=dPb
set OAb="shadowstrike"
set lAb=GroupPickRandomUnit(ePb)
call IssueTargetOrder(oAb,OAb,lAb)
set bAb=cPb
set fPb=CreateUnit(GetOwningPlayer(bAb),$75303030,qPb,aPb,0.)
set yAb=fPb
set pAb=$41313330
call UnitAddAbility(yAb,pAb)
set eAb=fPb
set qAb=$41313330
set aAb=oPb
call SetUnitAbilityLevel(eAb,qAb,aAb)
set nAb=fPb
set dAb=3.
call UnitApplyTimedLife(nAb,$42544C46,dAb)
set fAb=fPb
set RAb="shadowstrike"
set TAb=GroupPickRandomUnit(ePb)
call IssueTargetOrder(fAb,RAb,TAb)
set YAb=ePb
call DestroyGroup(YAb)
set GAb=nPb
call DestroyBoolExpr(GAb)
endif
if vp==true then
set gAb=cPb
set hAb=1500.
set FAb=gAb
set kAb=UNIT_STATE_LIFE
set jAb=hAb
set MAb=FAb
set wDb=kAb
set xAb=FAb
set vAb=kAb
call SetUnitState(MAb,wDb,GetUnitState(xAb,vAb)+jAb)
call DestroyEffect(AddSpecialEffectTarget("Call of Dread Green.mdl",cPb,"chest"))
endif
endif
if iPb==$41313330 then
set RPb=GetSpellAbilityUnit()
set TPb=GetSpellTargetUnit()
set mAb=RPb
set QAb=$41313330
set YPb=GetUnitAbilityLevel(mAb,QAb)
set GPb=5+15*YPb
call UuS(TPb,GPb)
set WAb=Ud
set gPb=GetPlayerId(WAb)
set EAb=Player(gPb)
set ZAb=GPb
set UAb=EAb
set IAb=PLAYER_STATE_RESOURCE_GOLD
set PAb=ZAb
set uDb=UAb
set rDb=IAb
set AAb=UAb
set DAb=IAb
call SetPlayerState(uDb,rDb,GetPlayerState(AAb,DAb)+PAb)
set hr[gPb]=hr[gPb]+GPb
set Fr[gPb]=Fr[gPb]+GPb
set Cr[gPb]=Cr[gPb]+GPb
endif
if iPb==$41313231 then
set hPb=GetSpellAbilityUnit()
call SetUnitAnimation(hPb,"Spell Mine")
set HAb="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_Eudora in Eudora, line 1254"
set aW[qW]=HAb
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set JAb=fF
set RF[JAb]=809
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_Eudora.","when calling error in Eudora, line 1254")
set JAb=0
endif
else
set dF=dF-1
set JAb=nF[dF]
set RF[JAb]=809
endif
set qW=qW-1
set FPb=JAb
set Lj[FPb]=hPb
set KAb=1.
set LAb=FPb
set XAb="when calling doAfter in Eudora, line 1254"
set aW[qW]=XAb
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),KAb,LAb,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if iPb==$41305336 then
set kPb=GetSpellAbilityUnit()
set jPb=AddSpecialEffectTarget("Stone Shield.mdx",kPb,"origin")
call SetUnitInvulnerable(kPb,true)
call PauseUnit(kPb,true)
call SetUnitAnimation(kPb,"stand, channel")
set Gp=0
set CAb="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Eudora in Eudora, line 1271"
set aW[qW]=CAb
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set VAb=GF
set gF[VAb]=670
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_Eudora.","when calling error in Eudora, line 1271")
set VAb=0
endif
else
set YF=YF-1
set VAb=TF[YF]
set gF[VAb]=670
endif
set qW=qW-1
set xPb=VAb
set Xj[xPb]=jPb
set Cj[xPb]=kPb
call GtO(1.,xPb,"when calling doPeriodically in Eudora, line 1271")
endif
set qW=qW-1
set SPb=null
set cPb=null
set pPb=null
set ePb=null
set nPb=null
set dPb=null
set fPb=null
set RPb=null
set TPb=null
set hPb=null
set kPb=null
set jPb=null
set vPb=null
set QPb=null
set WPb=null
set ZPb=null
set UPb=null
set PPb=null
set APb=null
set DPb=null
set HPb=null
set JPb=null
set KPb=null
set XPb=null
set VPb=null
set NPb=null
set MPb=null
set wAb=null
set uAb=null
set sAb=null
set SAb=null
set oAb=null
set lAb=null
set bAb=null
set yAb=null
set eAb=null
set nAb=null
set fAb=null
set TAb=null
set YAb=null
set GAb=null
set gAb=null
set FAb=null
set kAb=null
set xAb=null
set vAb=null
set mAb=null
set WAb=null
set EAb=null
set UAb=null
set IAb=null
set AAb=null
set DAb=null
set BAb=null
set NAb=null
set MAb=null
set wDb=null
set uDb=null
set rDb=null
endfunction
function rVc takes nothing returns nothing
set qW=0
call sDb("via function reference Eudora, line 1198")
endfunction
function rYS takes nothing returns nothing
local unit KTS
local unit LTS
local player XTS
local real CTS
local real VTS
local unit BTS
local unit NTS
local timerdialog MTS
local player wYS
local timerdialog uYS
if Mg==false then
set Mg=true
set KTS=k[1]
call ShowUnit(KTS,false)
set LTS=k[3]
call ShowUnit(LTS,true)
set XTS=gu
set BTS=k[3]
set CTS=GetUnitX(BTS)
set NTS=k[3]
set VTS=GetUnitY(NTS)
if GetLocalPlayer()==XTS then
call SetCameraPosition(CTS,VTS)
endif
set MTS=tr
call DestroyTimerDialog(MTS)
call TimerStart(ir,30.,false,Qrw)
set tr=CreateTimerDialog(ir)
set uYS=tr
set wYS=gu
call TimerDialogSetTitle(uYS,GetPlayerName(wYS)+" ban race")
call TimerDialogDisplay(tr,true)
endif
set KTS=null
set LTS=null
set XTS=null
set BTS=null
set NTS=null
set MTS=null
set wYS=null
set uYS=null
endfunction
function rbl takes nothing returns boolean
return true
endfunction
function rde takes nothing returns nothing
local unit ude=GetTriggerUnit()
local integer wde
if GetUnitTypeId(ude)==$5530304A then
set wde=R2I(GetHeroLevel(GetTriggerUnit())*1./4)
set Ae=wde
endif
set ude=null
endfunction
function rft takes nothing returns boolean
local unit Bdt=GetFilterUnit()
local unit Ndt=Bdt
local unit Mdt
local integer wft
local boolean uft
if GetOwningPlayer(Ndt)==Ud then
set Mdt=Bdt
set wft=$41303853
set uft=GetUnitAbilityLevel(Mdt,wft)>0
else
set uft=false
endif
set Bdt=null
set Ndt=null
set Mdt=null
return uft
endfunction
function riO takes nothing returns nothing
local unit KtO
local unit LtO
local player XtO
local real CtO
local real VtO
local unit BtO
local unit NtO
local timerdialog MtO
local player wiO
local timerdialog uiO
if wh==false then
set wh=true
set KtO=k[3]
call ShowUnit(KtO,false)
set LtO=k[0]
call ShowUnit(LtO,true)
set XtO=Yu
set BtO=k[0]
set CtO=GetUnitX(BtO)
set NtO=k[0]
set VtO=GetUnitY(NtO)
if GetLocalPlayer()==XtO then
call SetCameraPosition(CtO,VtO)
endif
set MtO=tr
call DestroyTimerDialog(MtO)
call TimerStart(ir,30.,false,Wrw)
set tr=CreateTimerDialog(ir)
set uiO=tr
set wiO=Yu
call TimerDialogSetTitle(uiO,GetPlayerName(wiO)+" ban race")
call TimerDialogDisplay(tr,true)
endif
set KtO=null
set LtO=null
set XtO=null
set BtO=null
set NtO=null
set MtO=null
set wiO=null
set uiO=null
endfunction
function riu takes nothing returns boolean
return true
endfunction
function rkp takes nothing returns boolean
return true
endfunction
function rkt takes nothing returns nothing
local unit BFt=GetEnteringUnit()
local unit MFt=BFt
local integer NFt=GetUnitTypeId(MFt)
local unit wkt
local integer ukt
if NFt==$6F677275 or NFt==$6F73686D or NFt==$6F726169 then
set wkt=BFt
set ukt=$41304353
call UnitAddAbility(wkt,ukt)
endif
set BFt=null
set MFt=null
set wkt=null
endfunction
function rmS takes nothing returns nothing
local unit IvS=GetTriggerUnit()
local unit PvS=IvS
local unit AvS
local real DvS
local real HvS
local real JvS
local unit KvS
local unit LvS
local trigger XvS
local trigger CvS
local trigger VvS
local unit BvS
local unit NvS
local unit MvS
local real wmS
local boolean umS
if GetUnitTypeId(PvS)==$65746F65 then
set AvS=IvS
set DvS=100.
set HvS=100.
set JvS=100.
call SetUnitScale(AvS,DvS*.01,HvS*.01,JvS*.01)
set mR=IvS
set GR=300
set KvS=mR
set wmS=GetUnitX(KvS)
set LvS=mR
set hR=jVl(wmS,GetUnitY(LvS),0.,I2S(GR),13.,255,230,0,255)
set XvS=kR
call EnableTrigger(XvS)
set CvS=jR
call EnableTrigger(CvS)
set VvS=xR
call EnableTrigger(VvS)
call TimerStart(FR,I2R(300-30*TR),false,H9)
call SetPlayerTechResearched(QR,$52303947,1)
call SetPlayerTechResearched(QR,$52303948,1)
endif
set BvS=IvS
if GetUnitTypeId(BvS)==$6F303055 then
set umS=true
else
set NvS=IvS
set umS=GetUnitTypeId(NvS)==$6F303053
endif
if umS then
set YR=YR+1
set MvS=mR
call DisplayTextToPlayer(GetOwningPlayer(MvS),0.,0.,"Increase the amount of mana by 1")
endif
set IvS=null
set PvS=null
set AvS=null
set KvS=null
set LvS=null
set XvS=null
set CvS=null
set VvS=null
set BvS=null
set NvS=null
set MvS=null
endfunction
function rne takes nothing returns boolean
return true
endfunction
function brt takes string Cwt returns nothing
local unit Vwt
local unit Bwt
local unit Nwt
local texttag Mwt
local integer wut
local unit uut
local unit rut
local unit sut
local unit tut
local unit iut
local unittype Sut
local unit cut
local unittype out
local unit Out
local unittype lut
local unit but
local unittype yut
local trigger put
local unit eut
local unit qut
local unit aut
local unit nut
local integer dut
local unit fut
local integer Rut
local widget Tut
local unit Yut
local real Gut
local texttag gut
local real hut
local real Fut
local real kut
local unit jut
local unit xut
local texttag vut
local integer mut
local integer Qut
local integer Wut
local integer Eut
local texttag Zut
local real Uut
local texttag Iut
local real Put
local texttag Aut
local boolean Dut
local texttag Hut
local boolean Jut
local texttag Kut
local string Lut
local real Xut
local texttag Cut
local real Vut
local real But
local string Nut
local integer Mut
local real wrt
local integer urt
local string rrt
local boolean srt
local boolean trt
local integer irt
local boolean Srt
local boolean crt
local boolean ort
local player Ort
local real lrt
set aW[qW]=Cwt
set qW=qW+1
set Vwt=GetAttacker()
set uut=Vwt
if GetUnitTypeId(uut)==$6F646F63 then
set srt=true
else
set rut=Vwt
set srt=GetUnitTypeId(rut)==$6E697468
endif
if srt then
set sut=Vwt
set trt=GetPlayerTechCount(GetOwningPlayer(sut),$5230324C,true)>0
else
set trt=false
endif
if trt then
set irt=GetRandomInt(1,100)
set tut=Vwt
if irt<=2*GetPlayerTechCount(GetOwningPlayer(tut),$5230324C,true) then
set Bwt=GetTriggerUnit()
set iut=Bwt
set Sut=UNIT_TYPE_STRUCTURE
if IsUnitType(iut,Sut)==false then
set cut=Bwt
set out=UNIT_TYPE_MECHANICAL
set Srt=IsUnitType(cut,out)==false
else
set Srt=false
endif
if Srt then
set Out=Bwt
set lut=UNIT_TYPE_HERO
set crt=IsUnitType(Out,lut)==false
else
set crt=false
endif
if crt then
set but=Bwt
set yut=UNIT_TYPE_ANCIENT
set ort=IsUnitType(but,yut)==false
else
set ort=false
endif
if ort then
set put=cf
call DisableTrigger(put)
set eut=Vwt
set Ort=GetOwningPlayer(eut)
set qut=Bwt
set lrt=GetUnitX(qut)
set aut=Bwt
set Nwt=CreateUnit(Ort,$75303030,lrt,GetUnitY(aut),0.)
set nut=Nwt
set dut=$41304643
call UnitAddAbility(nut,dut)
set fut=Nwt
set Rut=852581
set Tut=Bwt
call IssueTargetOrderById(fut,Rut,Tut)
set Yut=Nwt
set Gut=3.
call UnitApplyTimedLife(Yut,$42544C46,Gut)
set Mwt=CreateTextTag()
set gut=Mwt
set jut=Bwt
set hut=GetUnitX(jut)
set xut=Bwt
set Fut=GetUnitY(xut)
set kut=50.
call SetTextTagPos(gut,hut,Fut,kut)
set vut=Mwt
set mut=128
set Qut=0
set Wut=128
set Eut=255
call SetTextTagColor(vut,mut,Qut,Wut,Eut)
set Zut=Mwt
set Uut=6.
call SetTextTagLifespan(Zut,Uut)
set Iut=Mwt
set Put=4.
call SetTextTagFadepoint(Iut,Put)
set Aut=Mwt
set Dut=true
call SetTextTagVisibility(Aut,Dut)
set Hut=Mwt
set Jut=false
call SetTextTagPermanent(Hut,Jut)
set Kut=Mwt
set Lut="Voodoo!"
set Xut=10.
call SetTextTagText(Kut,Lut,Xut*.0023)
set Cut=Mwt
set Vut=0.
set But=.03
call SetTextTagVelocity(Cut,Vut,But)
set Nut="when calling alloc_CallbackSingle_doAfter_MindControl in MindControl, line 73"
set aW[qW]=Nut
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Mut=fF
set RF[Mut]=733
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_MindControl.","when calling error in MindControl, line 73")
set Mut=0
endif
else
set dF=dF-1
set Mut=nF[dF]
set RF[Mut]=733
endif
set qW=qW-1
set wut=Mut
set wrt=.3
set urt=wut
set rrt="when calling doAfter in MindControl, line 73"
set aW[qW]=rrt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),wrt,urt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
endif
set qW=qW-1
set Vwt=null
set Bwt=null
set Nwt=null
set Mwt=null
set uut=null
set rut=null
set sut=null
set tut=null
set iut=null
set Sut=null
set cut=null
set out=null
set Out=null
set lut=null
set but=null
set yut=null
set put=null
set eut=null
set qut=null
set aut=null
set nut=null
set fut=null
set Tut=null
set Yut=null
set gut=null
set jut=null
set xut=null
set vut=null
set Zut=null
set Iut=null
set Aut=null
set Hut=null
set Kut=null
set Cut=null
set Ort=null
endfunction
function row takes nothing returns nothing
set qW=0
call brt("via function reference MindControl, line 80")
endfunction
function UJy takes integer kJy,unit jJy,player xJy returns nothing
local player vJy
local player mJy
local player QJy
local unit WJy
local unit EJy
local real ZJy
if kJy==$68766C74 then
set Ng="Jaina"
endif
if kJy==$68777477 then
set Ng="Resist"
endif
if kJy==$68677477 then
set Ng="T3"
endif
if kJy==$6E6D7237 then
set Ng="T1 melee"
endif
if kJy==$6E636238 then
set Ng="T1 ranged"
endif
if kJy==$6E636239 then
set Ng="T1 mage"
endif
if kJy==$68626172 then
set Ng="T2 (koni)"
endif
if kJy==$6E636261 then
set Ng="T4Art"
endif
if kJy==$68617273 then
set Ng="Source of Magic"
endif
if kJy==$6E656630 then
set Ng="Item Merchant"
endif
if kJy==$68686F75 then
set Ng="T2 (Splesh)"
endif
if kJy==$68626C61 then
set Ng="Resist"
endif
if kJy==$68746F77 then
set Ng="Unique"
endif
if kJy==$6E666830 then
set Ng="Source of Magic"
endif
if kJy==$6E6D7233 then
set Ng="T1 ranged"
endif
if kJy==$6E637432 then
set Ng="T1 mage"
endif
if kJy==$6861726D then
set Ng="T2"
endif
if kJy==$68677261 then
set Ng="T3"
endif
if kJy==$6E646368 then
set Ng="T4Art"
endif
if kJy==$6E6D6572 then
set Ng="T3 Ground"
endif
if kJy==$68637477 then
set Ng="T1 trans"
endif
if kJy==$65303049 then
set Ng="T1 melee"
endif
if kJy==$6E6D7234 then
set Ng="Invisibility"
endif
if kJy==$6E65666D then
set Ng="Dopi"
endif
if kJy==$68636173 then
set Ng="T1 melee"
endif
if kJy==$6E6D7235 then
set Ng="Source of Magic"
endif
if kJy==$6E646831 then
set Ng="T2"
endif
if kJy==$68616C74 then
set Ng="T3"
endif
if kJy==$6E646830 then
set Ng="Zavod"
endif
if kJy==$686C756D then
set Ng="T1 range"
endif
if kJy==$68303253 then
set Ng="T3 Melee"
endif
if kJy==$78303135 then
set Ng="Robot (Zamena SG)"
endif
if kJy==$6E677772 then
set Ng="T4Art"
endif
if kJy==$6F626172 then
set Ng="Resist"
endif
if kJy==$6E636231 then
set Ng="Sphere"
endif
if kJy==$6F667274 then
set Ng="Voltrak"
endif
if kJy==$6E636233 then
set Ng="T1 melee"
endif
if kJy==$6E636232 then
set Ng="T1 mage"
endif
if kJy==$6E636230 then
set Ng="T2"
endif
if kJy==$6F626561 then
set Ng="T4Art"
endif
if kJy==$6E706772 then
set Ng="Source of Magic"
endif
if kJy==$6F616C74 then
set Ng="T1 Mage (Summon)"
endif
if kJy==$6E303144 then
set Ng="T1 ranged"
endif
if kJy==$6E303234 then
set Ng="Unique"
endif
if kJy==$6F736879 then
set Ng="Zamena SG"
endif
if kJy==$6E647262 then
set Ng="T1 melee"
endif
if kJy==$6F747262 then
set Ng="Hesper's Toy"
endif
if kJy==$6F636277 then
set Ng="T1 ranged"
endif
if kJy==$6F766C6E then
set Ng="T1 mage"
endif
if kJy==$6E636262 then
set Ng="T4Art"
endif
if kJy==$6E776331 then
set Ng="Source of Magic"
endif
if kJy==$6E776332 then
set Ng="T3 Melee"
endif
if kJy==$6E303159 then
set Ng="T3 Air"
endif
if kJy==$6E706766 then
set Ng="Kulgan"
endif
if kJy==$7830326C then
set Ng="T2"
endif
if kJy==$6E667431 then
set Ng="Rock"
endif
if kJy==$6E636263 then
set Ng="Resist"
endif
if kJy==$6E636264 then
set Ng="T1 melee"
endif
if kJy==$6F74746F then
set Ng="T1 mage"
endif
if kJy==$6E6D7239 then
set Ng="T2"
endif
if kJy==$6F737472 then
set Ng="T3"
endif
if kJy==$6F677265 then
set Ng="Jopotrahi (T4Art)"
endif
if kJy==$6F666F72 then
set Ng="Source of Magic"
endif
if kJy==$6E6D7230 then
set Ng="T1 ranged"
endif
if kJy==$6F303245 then
set Ng="T4 range"
endif
if kJy==$6F303442 then
set Ng="Guff Alive"
endif
if kJy==$75736170 then
set Ng="Archimonde"
endif
if kJy==$75677276 then
set Ng="Resist"
endif
if kJy==$6E6D7266 then
set Ng="Sphere"
endif
if kJy==$6E6D7261 then
set Ng="T1 mage"
endif
if kJy==$6E6D7262 then
set Ng="T3"
endif
if kJy==$6E636E74 then
set Ng="T4Art"
endif
if kJy==$6E6D7263 then
set Ng="Golem's"
endif
if kJy==$75616F64 then
set Ng="Source of Magic"
endif
if kJy==$757A6967 then
set Ng="T1 Range"
endif
if kJy==$62736869 then
set Ng="T1 Melee"
endif
if kJy==$75303052 then
set Ng="T2"
endif
if kJy==$6E62736D then
set Ng="Scorpion"
endif
if kJy==$757A6731 then
set Ng="Unique Hero"
endif
if kJy==$757A6733 then
set Ng="Unique Skelet"
endif
if kJy==$75746F6D then
set Ng="T2"
endif
if kJy==$6E676E69 then
set Ng="T1 ranged"
endif
if kJy==$686F6261 then
set Ng="T1 mage"
endif
if kJy==$686F6666 then
set Ng="T4 Art"
endif
if kJy==$6E66726D then
set Ng="T3"
endif
if kJy==$756E706C then
set Ng="T3 Sphinx"
endif
if kJy==$7830326E then
set Ng="Talnos"
endif
if kJy==$7830326D then
set Ng="T1 melee"
endif
if kJy==$6E656634 then
set Ng="T1 range"
endif
if kJy==$6E65676D then
set Ng="T1 melee"
endif
if kJy==$6E656635 then
set Ng="T1 mage"
endif
if kJy==$6E656636 then
set Ng="T2"
endif
if kJy==$6E656632 then
set Ng="T3 Sup"
endif
if kJy==$75676F6C then
set Ng="T4Art"
endif
if kJy==$756E7032 then
set Ng="Source of Magic"
endif
if kJy==$75736870 then
set Ng="Portal"
endif
if kJy==$756E7031 then
set Ng="T3 Dis"
endif
if kJy==$6E6D7236 then
set Ng="Cenarius"
endif
if kJy==$65616F77 then
set Ng="Maiev"
endif
if kJy==$65616F6D then
set Ng="Invisibility"
endif
if kJy==$65646F62 then
set Ng="Dopi"
endif
if kJy==$65616F65 then
set Ng="Dryad"
endif
if kJy==$65747270 then
set Ng="T2 (koni)"
endif
if kJy==$65646F73 then
set Ng="T3"
endif
if kJy==$65746F6C then
set Ng="Source of Magic"
endif
if kJy==$6564656E then
set Ng="T2"
endif
if kJy==$6E303354 then
set Ng="T4 Art"
endif
if kJy==$78303170 then
set Ng="T1 mage"
endif
if kJy==$65746F65 then
set Ng="Unique"
endif
if kJy==$6E736870 then
set Ng="Illidan"
endif
if kJy==$65746F61 then
set Ng="Mage"
endif
if kJy==$65617465 then
set Ng="T3"
endif
if kJy==$656D6F77 then
set Ng="T1 melee"
endif
if kJy==$6E637431 then
set Ng="T1 ranged"
endif
if kJy==$6E6D726B then
set Ng="T2"
endif
if kJy==$6E667633 then
set Ng="T3 Ground"
endif
if kJy==$6E303431 then
set Ng="T4"
endif
if kJy==$6E667630 then
set Ng="Source of Magic"
endif
if kJy==$6E6E6164 then
set Ng="Zamena SG"
endif
if kJy==$6E667632 then
set Ng="Resist"
endif
if kJy==$6E767232 then
set Ng="Sphere"
endif
if kJy==$6E636234 then
set Ng="T1 melee"
endif
if kJy==$6E636237 then
set Ng="T4Art Range"
endif
if kJy==$6E667634 then
set Ng="T1 mage"
endif
if kJy==$6E767230 then
set Ng="T3"
endif
if kJy==$6E636236 then
set Ng="Source of Magic"
endif
if kJy==$6E767231 then
set Ng="T1 Range"
endif
if kJy==$6E303236 then
set Ng="T4 Mech"
endif
if kJy==$6E30324B then
set Ng="Valeera"
endif
if kJy==$6E30324A then
set Ng="T2"
endif
if kJy==$7830307A then
set Ng="Beton"
endif
if kJy==$78303269 then
set Ng="Source of Magic"
endif
if kJy==$78303265 then
set Ng="T4Art"
endif
if kJy==$78303263 then
set Ng="Iglarion"
endif
if kJy==$7830316C then
set Ng="Ysera"
endif
if kJy==$6E303138 then
set Ng="T1 melee"
endif
if kJy==$6E303053 then
set Ng="T2"
endif
if kJy==$6F303256 then
set Ng="T1 ranged"
endif
if kJy==$7830326A then
set Ng="T3"
endif
if kJy==$78303261 then
set Ng="T1 mage"
endif
if kJy==$6E393931 then
set Ng="Invisibility"
endif
if kJy==$6E30324F then
set Ng="T1 ranged"
endif
if kJy==$78303230 then
set Ng="T1 mage"
endif
if kJy==$78303221 then
set Ng="Relic"
endif
if kJy==$78303232 then
set Ng="T2"
endif
if kJy==$65646162 then
set Ng="T3"
endif
if kJy==$6E303245 then
set Ng="Poison"
endif
if kJy==$6E747474 then
set Ng="T4"
endif
if kJy==$68303242 then
set Ng="T3 Ground"
endif
if kJy==$78303239 then
set Ng="Medivh"
endif
if kJy==$78303231 then
set Ng="T1 melee"
endif
if kJy==$6E303044 then
set Ng="T1 mage"
endif
if kJy==$6E303043 then
set Ng="T1 ranged"
endif
if kJy==$6E303041 then
set Ng="T2"
endif
if kJy==$6E303042 then
set Ng="T3"
endif
if kJy==$78313131 then
set Ng="T1 melee"
endif
if kJy==$78303064 then
set Ng="Sphere"
endif
if kJy==$78303038 then
set Ng="Source of Magic"
endif
if kJy==$6E30324C then
set Ng="T4"
endif
if kJy==$6E303250 then
set Ng="Iskar"
endif
if kJy==$78303036 then
set Ng="Mystery Box"
endif
if kJy==$6E303049 then
set Ng="Rezist"
endif
if kJy==$6E30304A then
set Ng="T1 melee"
endif
if kJy==$6E303045 then
set Ng="T1 range"
endif
if kJy==$68303143 then
set Ng="Mage"
endif
if kJy==$6E303047 then
set Ng="T2"
endif
if kJy==$6E303048 then
set Ng="T3"
endif
if kJy==$6E30304B then
set Ng="T4Art"
endif
if kJy==$6E30324E then
set Ng="Xiang"
endif
if kJy==$68303246 then
set Ng="T4 Melee"
endif
if kJy==$68303245 then
set Ng="T3 Ground"
endif
if kJy==$6E30324D then
set Ng="Source of Magic"
endif
if kJy==$6E303136 then
set Ng="Galakrond"
endif
if kJy==$6E303248 then
set Ng="Forge"
endif
if kJy==$6E303059 then
set Ng="T1 melee"
endif
if kJy==$6E30305A then
set Ng="T1 range"
endif
if kJy==$6E303134 then
set Ng="Mage"
endif
if kJy==$6E303131 then
set Ng="T2"
endif
if kJy==$6E303133 then
set Ng="T3"
endif
if kJy==$6E303242 then
set Ng="Dragon Nest"
endif
if kJy==$6E303246 then
set Ng="Source of Fire"
endif
if kJy==$6E303243 then
set Ng="Sphera"
endif
if kJy==$68303157 then
set Ng="Eudora"
endif
if kJy==$68303155 then
set Ng="Rezist"
endif
if kJy==$68303152 then
set Ng="T1 melee"
endif
if kJy==$6E30314B then
set Ng="T1 range"
endif
if kJy==$68303156 then
set Ng="T3"
endif
if kJy==$68303154 then
set Ng="T4"
endif
if kJy==$6E303150 then
set Ng="Caravan"
endif
if kJy==$6E303151 then
set Ng="Altar of Gold"
endif
if kJy==$6E30314D then
set Ng="Source of Magic"
endif
if kJy==$6E303231 then
set Ng="Ksay"
endif
if kJy==$6E30314E then
set Ng="T2"
endif
if kJy==$6F303556 then
set Ng="Anduin"
endif
if kJy==$6F30354D then
set Ng="T3"
endif
if kJy==$6F30354F then
set Ng="T4"
endif
if kJy==$6F303559 then
set Ng="Unique"
endif
if kJy==$6F303551 then
set Ng="T1 range (melee)"
endif
if kJy==$6F303553 then
set Ng="T1 mage"
endif
if kJy==$6F30354A then
set Ng="T1 melee"
endif
if kJy==$6F303546 then
set Ng="T2"
endif
if kJy==$6F303555 then
set Ng="Source of Magic"
endif
if kJy==$6F303548 then
set Ng="T1 range"
endif
if kJy==$6F30354C then
set Ng="Rezist"
endif
if kJy==$6E303333 then
set Ng="T1 melee"
endif
if kJy==$6E303334 then
set Ng="T1 range"
endif
if kJy==$6E303339 then
set Ng="T4 melee"
endif
if kJy==$6E303336 then
set Ng="T2"
endif
if kJy==$6E303335 then
set Ng="T1 mage"
endif
if kJy==$6E303341 then
set Ng="T4 range"
endif
if kJy==$6E303343 then
set Ng="Unique"
endif
if kJy==$6E303332 then
set Ng="Rezist"
endif
if kJy==$6E303338 then
set Ng="T3"
endif
if kJy==$6E303342 then
set Ng="Sphere (Unique)"
endif
if kJy==$6E303337 then
set Ng="T2 (koni)"
endif
set vJy=xJy
if wr[GetPlayerId(vJy)]==1 then
set Cg=75
endif
set mJy=xJy
if wr[GetPlayerId(mJy)]==2 then
set Cg=0
endif
set QJy=xJy
if wr[GetPlayerId(QJy)]==3 then
set Cg=-75
endif
set WJy=jJy
set ZJy=GetUnitX(WJy)+100.
set EJy=jJy
set Mu=L5u(ZJy,GetUnitY(EJy)+Cg,50.,Ng,10.)
set vJy=null
set mJy=null
set QJy=null
set WJy=null
set EJy=null
endfunction
function ZIy takes integer EIy returns boolean
if EIy==$6F30314D or EIy==$6F30314E or EIy==$6F30314F or EIy==$6F303150 or EIy==$6F303151 or EIy==$6F303152 or EIy==$6F303153 or EIy==$6F303154 or EIy==$6F303155 or EIy==$6F303156 or EIy==$6F303157 or EIy==$6F303158 or EIy==$7830327B or EIy==$78303276 or EIy==$78303270 or EIy==$78303275 or EIy==$6E303054 or EIy==$6830314D or EIy==$6E303331 or EIy==$6F303545 then
return true
else
return false
endif
endfunction
function AYp takes string Oap returns nothing
local unit lap
local integer bap
local player yap
local integer pap
local integer eap
local integer qap
local integer aap
local integer nap
local integer dap
local integer fap
local integer Rap
local integer Tap
local integer Yap
local unit Gap
local unit gap
local unit hap
local player Fap
local player kap
local player jap
local player xap
local unit vap
local unit map
local unit Qap
local timerdialog Wap
local player Eap
local player Zap
local integer Uap
local real Iap
local real Pap
local real Aap
local real Dap
local unit Hap
local player Jap
local player Kap
local integer Lap
local real Xap
local real Cap
local real Vap
local real Bap
local unit Nap
local player Map
local player wnp
local integer unp
local real rnp
local real snp
local real tnp
local real inp
local unit Snp
local player cnp
local player onp
local real Onp
local real lnp
local unit bnp
local unit ynp
local unit pnp
local unit enp
local unit qnp
local timerdialog anp
local player nnp
local player dnp
local integer fnp
local real Rnp
local real Tnp
local real Ynp
local real Gnp
local unit gnp
local player hnp
local player Fnp
local integer knp
local real jnp
local real xnp
local real vnp
local real mnp
local unit Qnp
local player Wnp
local player Enp
local integer Znp
local real Unp
local real Inp
local real Pnp
local real Anp
local unit Dnp
local player Hnp
local player Jnp
local real Knp
local real Lnp
local unit Xnp
local unit Cnp
local unit Vnp
local unit Bnp
local unit Nnp
local timerdialog Mnp
local player wdp
local player udp
local integer rdp
local real sdp
local real tdp
local real idp
local real Sdp
local unit cdp
local player odp
local player Odp
local integer ldp
local real bdp
local real ydp
local real pdp
local real edp
local unit qdp
local player adp
local player ndp
local integer ddp
local real fdp
local real Rdp
local real Tdp
local real Ydp
local unit Gdp
local player gdp
local player hdp
local real Fdp
local real kdp
local unit jdp
local unit xdp
local unit vdp
local unit mdp
local unit Qdp
local timerdialog Wdp
local trigger Edp
local trigger Zdp
local trigger Udp
local trigger Idp
local integer Pdp
local boolean Adp
local player Ddp
local integer Hdp
local boolean Jdp
local player Kdp
local integer Ldp
local boolean Xdp
local player Cdp
local integer Vdp
local boolean Bdp
local player Ndp
local unit Mdp
local player wfp
local integer ufp
local real rfp
local real sfp
local real tfp
local real ifp
local unit Sfp
local unit cfp
local unit ofp
local unit Ofp
local unit lfp
local player bfp
local player yfp
local player pfp
local player efp
local unit qfp
local string afp
local integer nfp
local real dfp
local integer ffp
local string Rfp
local string Tfp
local real Yfp
local player Gfp
local player gfp
local player hfp
local player Ffp
local player kfp
local unit jfp
local string xfp
local integer vfp
local real mfp
local integer Qfp
local string Wfp
local string Efp
local real Zfp
local player Ufp
local player Ifp
local player Pfp
local player Afp
local player Dfp
local unit Hfp
local string Jfp
local integer Kfp
local real Lfp
local integer Xfp
local string Cfp
local string Vfp
local real Bfp
local player Nfp
local player Mfp
local player wRp
local player uRp
local player rRp
local unit sRp
local string tRp
local integer iRp
local real SRp
local integer cRp
local string oRp
local string ORp
local real lRp
local player bRp
local player yRp
local player pRp
local player eRp
local player qRp
local integer aRp
local boolean nRp
local player dRp
local player fRp
local player RRp
local player TRp
local player YRp
local integer GRp
local boolean gRp
local player hRp
local player FRp
local player kRp
local player jRp
local player xRp
local integer vRp
local boolean mRp
local player QRp
local player WRp
local player ERp
local player ZRp
local player URp
local integer IRp
local boolean PRp
local player ARp
local unit DRp
local unit HRp
local boolean JRp
local unit KRp
local boolean LRp
local unit XRp
local boolean CRp
local unit VRp
local boolean BRp
local timerdialog NRp
local player MRp
local integer wTp
local real uTp
local real rTp
local player sTp
local integer tTp
local real iTp
local real STp
local player cTp
local integer oTp
local real OTp
local real lTp
local timerdialog bTp
local player yTp
local integer pTp
local real eTp
local real qTp
local player aTp
local integer nTp
local real dTp
local real fTp
local player RTp
local integer TTp
local real YTp
local real GTp
local timerdialog gTp
local player hTp
local integer FTp
local real kTp
local real jTp
local player xTp
local integer vTp
local real mTp
local real QTp
local player WTp
local integer ETp
local real ZTp
local real UTp
local real ITp
local player PTp
local integer ATp
local real DTp
local real HTp
local integer JTp
local integer KTp
local integer LTp
local integer XTp
local integer CTp
local integer VTp
local integer BTp
local integer NTp
local real MTp
local real wYp
local real uYp
local real rYp
local real sYp
local real tYp
local real iYp
local real SYp
local real cYp
local real oYp
local real OYp
local real lYp
local real bYp
local real yYp
local real pYp
local real eYp
local real qYp
local real aYp
local real nYp
local real dYp
local real fYp
local real RYp
local real TYp
local real YYp
local real GYp
local real gYp
local real hYp
local real FYp
local real kYp
local real jYp
local real xYp
local real vYp
local real mYp
local real QYp
local real WYp
local real EYp
local real ZYp
local real UYp
local real IYp
local real PYp
set aW[qW]=Oap
set qW=qW+1
set lap=GetTriggerUnit()
set bap=GetIssuedOrderId()
set Gap=lap
set yap=GetOwningPlayer(Gap)
set gap=lap
set pap=GetUnitTypeId(gap)
if xu==true then
set hap=lap
if ZIy(GetUnitTypeId(hap)) then
set HRp=lap
set Fap=Yu
set JRp=HRp!=F[GetPlayerId(Fap)]
else
set JRp=false
endif
if JRp then
set KRp=lap
set kap=gu
set LRp=KRp!=F[GetPlayerId(kap)]
else
set LRp=false
endif
if LRp then
set XRp=lap
set jap=Tu
set CRp=XRp!=F[GetPlayerId(jap)]
else
set CRp=false
endif
if CRp then
set VRp=lap
set xap=Gu
set BRp=VRp!=F[GetPlayerId(xap)]
else
set BRp=false
endif
if BRp and bap!=851972 and bap!=851974 then
if GetTriggerPlayer()==Tu and Pu==false then
set Cu=Cu+1
if Cu==3 then
set Pu=true
set vap=Zu
call RemoveUnit(vap)
set map=Uu
call RemoveUnit(map)
set Qap=Iu
call RemoveUnit(Qap)
set Wap=tr
call DestroyTimerDialog(Wap)
call TimerStart(ir,60.,false,Xww_1714)
set tr=CreateTimerDialog(ir)
set NRp=tr
set Eap=gu
call TimerDialogSetTitle(NRp,GetPlayerName(Eap)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set Zap=gu
set Jap=Gu
set Hap=F[GetPlayerId(Jap)]
set Uap=GetUnitTypeId(Hap)
set MTp=-400.
set wYp=0.
set Iap=MTp
set Pap=wYp
set uYp=bj_UNIT_FACING
set Aap=uYp
set MRp=Zap
set wTp=Uap
set uTp=Iap
set rTp=Pap
set rYp=Aap
set Dap=rYp
set Zu=CreateUnit(MRp,wTp,uTp,rTp,Dap*57.295779513)
set Kap=gu
set Map=Tu
set Nap=F[GetPlayerId(Map)]
set Lap=GetUnitTypeId(Nap)
set sYp=0.
set tYp=400.
set Xap=sYp
set Cap=tYp
set iYp=bj_UNIT_FACING
set Vap=iYp
set sTp=Kap
set tTp=Lap
set iTp=Xap
set STp=Cap
set SYp=Vap
set Bap=SYp
set Uu=CreateUnit(sTp,tTp,iTp,STp,Bap*57.295779513)
set wnp=gu
set cnp=Yu
set Snp=F[GetPlayerId(cnp)]
set unp=GetUnitTypeId(Snp)
set cYp=0.
set oYp=-400.
set rnp=cYp
set snp=oYp
set OYp=bj_UNIT_FACING
set tnp=OYp
set cTp=wnp
set oTp=unp
set OTp=rnp
set lTp=snp
set lYp=tnp
set inp=lYp
set Iu=CreateUnit(cTp,oTp,OTp,lTp,inp*57.295779513)
set onp=gu
set bnp=Zu
set Onp=GetUnitX(bnp)
set ynp=Zu
set lnp=GetUnitY(ynp)
if GetLocalPlayer()==onp then
call SetCameraPosition(Onp,lnp)
endif
endif
endif
if GetTriggerPlayer()==gu and Au==false then
set Vu=Vu+1
if Vu==3 then
set Au=true
set pnp=Zu
call RemoveUnit(pnp)
set enp=Uu
call RemoveUnit(enp)
set qnp=Iu
call RemoveUnit(qnp)
set anp=tr
call DestroyTimerDialog(anp)
call TimerStart(ir,60.,false,Vww_1578)
set tr=CreateTimerDialog(ir)
set bTp=tr
set nnp=Yu
call TimerDialogSetTitle(bTp,GetPlayerName(nnp)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set dnp=Yu
set hnp=Tu
set gnp=F[GetPlayerId(hnp)]
set fnp=GetUnitTypeId(gnp)
set bYp=0.
set yYp=400.
set Rnp=bYp
set Tnp=yYp
set pYp=bj_UNIT_FACING
set Ynp=pYp
set yTp=dnp
set pTp=fnp
set eTp=Rnp
set qTp=Tnp
set eYp=Ynp
set Gnp=eYp
set Zu=CreateUnit(yTp,pTp,eTp,qTp,Gnp*57.295779513)
set Fnp=Yu
set Wnp=gu
set Qnp=F[GetPlayerId(Wnp)]
set knp=GetUnitTypeId(Qnp)
set qYp=400.
set aYp=0.
set jnp=qYp
set xnp=aYp
set nYp=bj_UNIT_FACING
set vnp=nYp
set aTp=Fnp
set nTp=knp
set dTp=jnp
set fTp=xnp
set dYp=vnp
set mnp=dYp
set Uu=CreateUnit(aTp,nTp,dTp,fTp,mnp*57.295779513)
set Enp=Yu
set Hnp=Gu
set Dnp=F[GetPlayerId(Hnp)]
set Znp=GetUnitTypeId(Dnp)
set fYp=-400.
set RYp=0.
set Unp=fYp
set Inp=RYp
set TYp=bj_UNIT_FACING
set Pnp=TYp
set RTp=Enp
set TTp=Znp
set YTp=Unp
set GTp=Inp
set YYp=Pnp
set Anp=YYp
set Iu=CreateUnit(RTp,TTp,YTp,GTp,Anp*57.295779513)
set Jnp=Yu
set Xnp=Zu
set Knp=GetUnitX(Xnp)
set Cnp=Zu
set Lnp=GetUnitY(Cnp)
if GetLocalPlayer()==Jnp then
call SetCameraPosition(Knp,Lnp)
endif
endif
endif
if GetTriggerPlayer()==Yu and Du==false then
set Bu=Bu+1
if Bu==3 then
set Du=true
set Vnp=Zu
call RemoveUnit(Vnp)
set Bnp=Uu
call RemoveUnit(Bnp)
set Nnp=Iu
call RemoveUnit(Nnp)
set Mnp=tr
call DestroyTimerDialog(Mnp)
call TimerStart(ir,60.,false,Bww_144)
set tr=CreateTimerDialog(ir)
set gTp=tr
set wdp=Gu
call TimerDialogSetTitle(gTp,GetPlayerName(wdp)+" ban bonuses")
call TimerDialogDisplay(tr,true)
set udp=Gu
set odp=gu
set cdp=F[GetPlayerId(odp)]
set rdp=GetUnitTypeId(cdp)
set GYp=400.
set gYp=0.
set sdp=GYp
set tdp=gYp
set hYp=bj_UNIT_FACING
set idp=hYp
set hTp=udp
set FTp=rdp
set kTp=sdp
set jTp=tdp
set FYp=idp
set Sdp=FYp
set Zu=CreateUnit(hTp,FTp,kTp,jTp,Sdp*57.295779513)
set Odp=Gu
set adp=Yu
set qdp=F[GetPlayerId(adp)]
set ldp=GetUnitTypeId(qdp)
set kYp=0.
set jYp=-400.
set bdp=kYp
set ydp=jYp
set xYp=bj_UNIT_FACING
set pdp=xYp
set xTp=Odp
set vTp=ldp
set mTp=bdp
set QTp=ydp
set vYp=pdp
set edp=vYp
set Uu=CreateUnit(xTp,vTp,mTp,QTp,edp*57.295779513)
set ndp=Gu
set gdp=Tu
set Gdp=F[GetPlayerId(gdp)]
set ddp=GetUnitTypeId(Gdp)
set mYp=0.
set QYp=400.
set fdp=mYp
set Rdp=QYp
set WYp=bj_UNIT_FACING
set Tdp=WYp
set WTp=ndp
set ETp=ddp
set ZTp=fdp
set UTp=Rdp
set EYp=Tdp
set Ydp=EYp
set Iu=CreateUnit(WTp,ETp,ZTp,UTp,Ydp*57.295779513)
set hdp=Gu
set jdp=Zu
set Fdp=GetUnitX(jdp)
set xdp=Zu
set kdp=GetUnitY(xdp)
if GetLocalPlayer()==hdp then
call SetCameraPosition(Fdp,kdp)
endif
endif
endif
if GetTriggerPlayer()==Gu and Hu==false then
set Nu=Nu+1
if Nu==3 then
set Hu=true
set vdp=Zu
call RemoveUnit(vdp)
set mdp=Uu
call RemoveUnit(mdp)
set Qdp=Iu
call RemoveUnit(Qdp)
set Wdp=tr
call DestroyTimerDialog(Wdp)
call TimerStart(ir,5.,false,Nww_997)
set tr=CreateTimerDialog(ir)
call TimerDialogSetTitle(tr,"Game starts in")
call TimerDialogDisplay(tr,true)
set Edp=un
call EnableTrigger(Edp)
set Zdp=Na
call EnableTrigger(Zdp)
set Udp=rn
call EnableTrigger(Udp)
set Idp=GY
call DisableTrigger(Idp)
if Ju==true then
set Pdp=$6E656630
set Adp=false
set Ddp=Tu
if Adp then
call SetPlayerTechMaxAllowed(Ddp,Pdp,-1)
else
call SetPlayerTechMaxAllowed(Ddp,Pdp,0)
endif
endif
if Ku==true then
set Hdp=$6E656630
set Jdp=false
set Kdp=gu
if Jdp then
call SetPlayerTechMaxAllowed(Kdp,Hdp,-1)
else
call SetPlayerTechMaxAllowed(Kdp,Hdp,0)
endif
endif
if Lu==true then
set Ldp=$6E656630
set Xdp=false
set Cdp=Yu
if Xdp then
call SetPlayerTechMaxAllowed(Cdp,Ldp,-1)
else
call SetPlayerTechMaxAllowed(Cdp,Ldp,0)
endif
endif
if Xu==true then
set Vdp=$6E656630
set Bdp=false
set Ndp=Gu
if Bdp then
call SetPlayerTechMaxAllowed(Ndp,Vdp,-1)
else
call SetPlayerTechMaxAllowed(Ndp,Vdp,0)
endif
endif
set eap=0
loop
exitwhen eap>3
set Mdp=F[eap]
call ShowUnit(Mdp,true)
if hu==true then
set Sfp=F[eap]
set wfp=GetOwningPlayer(Sfp)
set cfp=F[eap]
set ufp=GetUnitTypeId(cfp)
set ofp=F[eap]
set Ofp=ofp
set ITp=GetUnitX(Ofp)
set lfp=ofp
set ZYp=ITp
set UYp=GetUnitY(lfp)
set rfp=ZYp
set sfp=UYp
set IYp=180.
set tfp=IYp
set PTp=wfp
set ATp=ufp
set DTp=rfp
set HTp=sfp
set PYp=tfp
set ifp=PYp
set hw[eap]=CreateUnit(PTp,ATp,DTp,HTp,ifp*57.295779513)
endif
set eap=eap+1
endloop
endif
endif
if bap==$6E656630 then
set bfp=Tu
if P[GetPlayerId(bfp)]==pap then
if Ju==false then
set yfp=Tu
set pfp=Tu
set wr[GetPlayerId(yfp)]=wr[GetPlayerId(pfp)]+1
set JTp=bap
set efp=Tu
call UJy(JTp,F[GetPlayerId(efp)],Tu)
set Ju=true
set qfp=lap
call RemoveUnit(qfp)
else
set afp="when calling alloc_CallbackSingle_doAfter_TournamentMode in TournamentMode, line 925"
set aW[qW]=afp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set nfp=fF
set RF[nfp]=758
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TournamentMode.","when calling error in TournamentMode, line 925")
set nfp=0
endif
else
set dF=dF-1
set nfp=nF[dF]
set RF[nfp]=758
endif
set qW=qW-1
set qap=nfp
set AQ[qap]=lap
set dfp=.3
set ffp=qap
set Rfp="when calling doAfter in TournamentMode, line 925"
set aW[qW]=Rfp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),dfp,ffp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set Tfp="Items for that player already banned!"
set Yfp=5.
set Gfp=yap
call DisplayTimedTextToPlayer(Gfp,0.,0.,Yfp,Tfp)
endif
endif
set gfp=gu
if P[GetPlayerId(gfp)]==pap then
if Ku==false then
set hfp=gu
set Ffp=gu
set wr[GetPlayerId(hfp)]=wr[GetPlayerId(Ffp)]+1
set KTp=bap
set kfp=gu
call UJy(KTp,F[GetPlayerId(kfp)],gu)
set Ku=true
set jfp=lap
call RemoveUnit(jfp)
else
set xfp="when calling alloc_CallbackSingle_doAfter_TournamentMode in TournamentMode, line 938"
set aW[qW]=xfp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set vfp=fF
set RF[vfp]=759
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TournamentMode.","when calling error in TournamentMode, line 938")
set vfp=0
endif
else
set dF=dF-1
set vfp=nF[dF]
set RF[vfp]=759
endif
set qW=qW-1
set aap=vfp
set DQ[aap]=lap
set mfp=.3
set Qfp=aap
set Wfp="when calling doAfter in TournamentMode, line 938"
set aW[qW]=Wfp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),mfp,Qfp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set Efp="Items for that player already banned!"
set Zfp=5.
set Ufp=yap
call DisplayTimedTextToPlayer(Ufp,0.,0.,Zfp,Efp)
endif
endif
set Ifp=Yu
if P[GetPlayerId(Ifp)]==pap then
if Lu==false then
set Pfp=Yu
set Afp=Yu
set wr[GetPlayerId(Pfp)]=wr[GetPlayerId(Afp)]+1
set LTp=bap
set Dfp=Yu
call UJy(LTp,F[GetPlayerId(Dfp)],Yu)
set Lu=true
set Hfp=lap
call RemoveUnit(Hfp)
else
set Jfp="when calling alloc_CallbackSingle_doAfter_TournamentMode in TournamentMode, line 951"
set aW[qW]=Jfp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Kfp=fF
set RF[Kfp]=760
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TournamentMode.","when calling error in TournamentMode, line 951")
set Kfp=0
endif
else
set dF=dF-1
set Kfp=nF[dF]
set RF[Kfp]=760
endif
set qW=qW-1
set nap=Kfp
set HQ[nap]=lap
set Lfp=.3
set Xfp=nap
set Cfp="when calling doAfter in TournamentMode, line 951"
set aW[qW]=Cfp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Lfp,Xfp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set Vfp="Items for that player already banned!"
set Bfp=5.
set Nfp=yap
call DisplayTimedTextToPlayer(Nfp,0.,0.,Bfp,Vfp)
endif
endif
set Mfp=Gu
if P[GetPlayerId(Mfp)]==pap then
if Xu==false then
set wRp=Gu
set uRp=Gu
set wr[GetPlayerId(wRp)]=wr[GetPlayerId(uRp)]+1
set XTp=bap
set rRp=Gu
call UJy(XTp,F[GetPlayerId(rRp)],Gu)
set Xu=true
set sRp=lap
call RemoveUnit(sRp)
else
set tRp="when calling alloc_CallbackSingle_doAfter_TournamentMode in TournamentMode, line 964"
set aW[qW]=tRp
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set iRp=fF
set RF[iRp]=761
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_TournamentMode.","when calling error in TournamentMode, line 964")
set iRp=0
endif
else
set dF=dF-1
set iRp=nF[dF]
set RF[iRp]=761
endif
set qW=qW-1
set dap=iRp
set JQ[dap]=lap
set SRp=.3
set cRp=dap
set oRp="when calling doAfter in TournamentMode, line 964"
set aW[qW]=oRp
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),SRp,cRp,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set ORp="Items for that player already banned!"
set lRp=5.
set bRp=yap
call DisplayTimedTextToPlayer(bRp,0.,0.,lRp,ORp)
endif
endif
else
set yRp=Tu
if P[GetPlayerId(yRp)]==pap then
set pRp=Tu
set eRp=Tu
set wr[GetPlayerId(pRp)]=wr[GetPlayerId(eRp)]+1
set CTp=bap
set qRp=Tu
call UJy(CTp,F[GetPlayerId(qRp)],Tu)
set fap=0
loop
exitwhen fap>3
set aRp=bap
set nRp=false
set dRp=Player(fap)
if nRp then
call SetPlayerTechMaxAllowed(dRp,aRp,-1)
else
call SetPlayerTechMaxAllowed(dRp,aRp,0)
endif
set fap=fap+1
endloop
endif
set fRp=gu
if P[GetPlayerId(fRp)]==pap then
set RRp=gu
set TRp=gu
set wr[GetPlayerId(RRp)]=wr[GetPlayerId(TRp)]+1
set VTp=bap
set YRp=gu
call UJy(VTp,F[GetPlayerId(YRp)],gu)
set Rap=0
loop
exitwhen Rap>3
set GRp=bap
set gRp=false
set hRp=Player(Rap)
if gRp then
call SetPlayerTechMaxAllowed(hRp,GRp,-1)
else
call SetPlayerTechMaxAllowed(hRp,GRp,0)
endif
set Rap=Rap+1
endloop
endif
set FRp=Yu
if P[GetPlayerId(FRp)]==pap then
set kRp=Yu
set jRp=Yu
set wr[GetPlayerId(kRp)]=wr[GetPlayerId(jRp)]+1
set BTp=bap
set xRp=Yu
call UJy(BTp,F[GetPlayerId(xRp)],Yu)
set Tap=0
loop
exitwhen Tap>3
set vRp=bap
set mRp=false
set QRp=Player(Tap)
if mRp then
call SetPlayerTechMaxAllowed(QRp,vRp,-1)
else
call SetPlayerTechMaxAllowed(QRp,vRp,0)
endif
set Tap=Tap+1
endloop
endif
set WRp=Gu
if P[GetPlayerId(WRp)]==pap then
set ERp=Gu
set ZRp=Gu
set wr[GetPlayerId(ERp)]=wr[GetPlayerId(ZRp)]+1
set NTp=bap
set URp=Gu
call UJy(NTp,F[GetPlayerId(URp)],Gu)
set Yap=0
loop
exitwhen Yap>3
set IRp=bap
set PRp=false
set ARp=Player(Yap)
if PRp then
call SetPlayerTechMaxAllowed(ARp,IRp,-1)
else
call SetPlayerTechMaxAllowed(ARp,IRp,0)
endif
set Yap=Yap+1
endloop
endif
set DRp=lap
call RemoveUnit(DRp)
endif
endif
endif
set qW=qW-1
set lap=null
set yap=null
set Gap=null
set gap=null
set hap=null
set Fap=null
set kap=null
set jap=null
set xap=null
set vap=null
set map=null
set Qap=null
set Wap=null
set Eap=null
set Zap=null
set Hap=null
set Jap=null
set Kap=null
set Nap=null
set Map=null
set wnp=null
set Snp=null
set cnp=null
set onp=null
set bnp=null
set ynp=null
set pnp=null
set enp=null
set qnp=null
set anp=null
set nnp=null
set dnp=null
set gnp=null
set hnp=null
set Fnp=null
set Qnp=null
set Wnp=null
set Enp=null
set Dnp=null
set Hnp=null
set Jnp=null
set Xnp=null
set Cnp=null
set Vnp=null
set Bnp=null
set Nnp=null
set Mnp=null
set wdp=null
set udp=null
set cdp=null
set odp=null
set Odp=null
set qdp=null
set adp=null
set ndp=null
set Gdp=null
set gdp=null
set hdp=null
set jdp=null
set xdp=null
set vdp=null
set mdp=null
set Qdp=null
set Wdp=null
set Edp=null
set Zdp=null
set Udp=null
set Idp=null
set Ddp=null
set Kdp=null
set Cdp=null
set Ndp=null
set Mdp=null
set wfp=null
set Sfp=null
set cfp=null
set ofp=null
set Ofp=null
set lfp=null
set bfp=null
set yfp=null
set pfp=null
set efp=null
set qfp=null
set Gfp=null
set gfp=null
set hfp=null
set Ffp=null
set kfp=null
set jfp=null
set Ufp=null
set Ifp=null
set Pfp=null
set Afp=null
set Dfp=null
set Hfp=null
set Nfp=null
set Mfp=null
set wRp=null
set uRp=null
set rRp=null
set sRp=null
set bRp=null
set yRp=null
set pRp=null
set eRp=null
set qRp=null
set dRp=null
set fRp=null
set RRp=null
set TRp=null
set YRp=null
set hRp=null
set FRp=null
set kRp=null
set jRp=null
set xRp=null
set QRp=null
set WRp=null
set ERp=null
set ZRp=null
set URp=null
set ARp=null
set DRp=null
set HRp=null
set KRp=null
set XRp=null
set VRp=null
set NRp=null
set MRp=null
set sTp=null
set cTp=null
set bTp=null
set yTp=null
set aTp=null
set RTp=null
set gTp=null
set hTp=null
set xTp=null
set WTp=null
set PTp=null
endfunction
function rpw takes nothing returns nothing
set qW=0
call AYp("via function reference TournamentMode, line 1016")
endfunction
function Dky takes player xky,integer vky returns nothing
local integer Wky=vky
local player Eky=xky
local integer mky=GetPlayerTechCount(Eky,Wky,true)
local integer Qky=0
local player Zky
local player Uky
local integer Iky
local integer Pky
local player Aky
loop
exitwhen Qky>12
set Zky=UY[Qky]
set Uky=xky
if IsPlayerAlly(Zky,Uky) and UY[Qky]!=xky then
set Iky=vky
set Pky=mky
set Aky=UY[Qky]
call SetPlayerTechResearched(Aky,Iky,Pky)
endif
set Qky=Qky+1
endloop
set Eky=null
set Zky=null
set Uky=null
set Aky=null
endfunction
function rrO takes nothing returns nothing
call Dky(GetOwningPlayer(GetTriggerUnit()),GetResearched())
endfunction
function rsO takes nothing returns boolean
return true
endfunction
function rwi takes nothing returns boolean
local unit L_i=GetFilterUnit()
local unit X_i=L_i
local unit V_i=yO
local player C_i=GetOwningPlayer(V_i)
local unit B_i
local unittype N_i
local unit M_i
local boolean wwi
local boolean uwi
if (X_i!=null and IsUnitAlly(X_i,C_i))==true then
set B_i=L_i
set N_i=UNIT_TYPE_HERO
set wwi=IsUnitType(B_i,N_i)==true
else
set wwi=false
endif
if wwi then
set M_i=L_i
set uwi=UnitAlive(M_i)==true
else
set uwi=false
endif
set L_i=null
set X_i=null
set C_i=null
set V_i=null
set B_i=null
set N_i=null
set M_i=null
return uwi
endfunction
function rwt takes nothing returns boolean
return true
endfunction
function rxi takes nothing returns nothing
local rect uxi=Dc
set Xo[3]=Location(GetRectCenterX(uxi),GetRectCenterY(uxi))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set uxi=null
endfunction
function s1S takes nothing returns boolean
local unit C3S=GetFilterUnit()
local unit V3S=C3S
local unit B3S
local unittype N3S
local unit M3S
local boolean w1S
local unit u1S
local boolean r1S
if UnitAlive(V3S)==true then
set B3S=C3S
set N3S=UNIT_TYPE_STRUCTURE
set w1S=IsUnitType(B3S,N3S)==false
else
set w1S=false
endif
if w1S then
set u1S=C3S
set M3S=GetEventDamageSource()
set r1S=IsUnitEnemy(u1S,GetOwningPlayer(M3S))
else
set r1S=false
endif
set C3S=null
set V3S=null
set B3S=null
set N3S=null
set M3S=null
set u1S=null
return r1S
endfunction
function s4c takes nothing returns nothing
local unit H1S=GetDyingUnit()
local unit K1S=H1S
local integer J1S
local player L1S
local integer X1S
local player C1S
local playerstate V1S
local integer B1S
local player N1S
local playerstate M1S
local player w4c
local player u4c
local playerstate r4c
if GetUnitTypeId(K1S)==$6E30314F then
call UuS(H1S,60)
set L1S=Ud
set X1S=60
set C1S=L1S
set V1S=PLAYER_STATE_RESOURCE_GOLD
set B1S=X1S
set u4c=C1S
set r4c=V1S
set N1S=C1S
set M1S=V1S
call SetPlayerState(u4c,r4c,GetPlayerState(N1S,M1S)+B1S)
set w4c=Ud
set J1S=GetPlayerId(w4c)
set hr[J1S]=hr[J1S]+60
set Fr[J1S]=Fr[J1S]+60
set Cr[J1S]=Cr[J1S]+60
endif
set H1S=null
set K1S=null
set L1S=null
set C1S=null
set V1S=null
set N1S=null
set M1S=null
set w4c=null
set u4c=null
set r4c=null
endfunction
function s8r takes nothing returns nothing
local integer O7u=GetSpellAbilityId()
local unit l7u
local group b7u
local filterfunc y7u
local unit p7u
local group e7u
local real q7u
local real a7u
local unit n7u
local unit d7u
local group f7u
local group R7u
local unit T7u
local unit Y7u
local unittype G7u
local unit g7u
local unit h7u
local unitstate F7u
local unit k7u
local real j7u
local unit x7u
local unitstate v7u
local real m7u
local unit Q7u
local unit W7u
local unitstate E7u
local unit Z7u
local unit U7u
local unitstate I7u
local unit P7u
local real A7u
local unit D7u
local unitstate H7u
local real J7u
local unit K7u
local unit L7u
local unitstate X7u
local effect C7u
local widget V7u
local string B7u
local string N7u
local group M7u
local boolexpr w8r
local group u8r
local real r8r
if O7u==$41323537 then
set l7u=GetSpellAbilityUnit()
set b7u=CreateGroup()
set y7u=Filter(qrw)
set u8r=b7u
set n7u=l7u
set r8r=GetUnitX(n7u)
set d7u=l7u
call GroupEnumUnitsInRange(u8r,r8r,GetUnitY(d7u),700.,y7u)
set e7u=b7u
loop
set f7u=e7u
exitwhen not (FirstOfGroup(f7u)!=null)
set R7u=e7u
set T7u=FirstOfGroup(R7u)
call GroupRemoveUnit(R7u,T7u)
set p7u=T7u
set Y7u=p7u
set G7u=UNIT_TYPE_HERO
if IsUnitType(Y7u,G7u) then
set g7u=p7u
set h7u=g7u
set F7u=UNIT_STATE_MAX_LIFE
set q7u=GetUnitState(h7u,F7u)*.15
set k7u=p7u
set Q7u=p7u
set W7u=Q7u
set E7u=UNIT_STATE_LIFE
set j7u=GetUnitState(W7u,E7u)-q7u
set x7u=k7u
set v7u=UNIT_STATE_LIFE
set m7u=j7u
call SetUnitState(x7u,v7u,m7u)
else
set Z7u=p7u
set U7u=Z7u
set I7u=UNIT_STATE_MAX_LIFE
set a7u=GetUnitState(U7u,I7u)*.5
set P7u=p7u
set K7u=p7u
set L7u=K7u
set X7u=UNIT_STATE_LIFE
set A7u=GetUnitState(L7u,X7u)-a7u
set D7u=P7u
set H7u=UNIT_STATE_LIFE
set J7u=A7u
call SetUnitState(D7u,H7u,J7u)
endif
set V7u=p7u
set B7u="Soul Discharge Blue.mdl"
set N7u="origin"
set C7u=AddSpecialEffectTarget(B7u,V7u,N7u)
call DestroyEffect(C7u)
endloop
set M7u=b7u
call DestroyGroup(M7u)
set w8r=y7u
call DestroyBoolExpr(w8r)
endif
set l7u=null
set b7u=null
set y7u=null
set p7u=null
set e7u=null
set n7u=null
set d7u=null
set f7u=null
set R7u=null
set T7u=null
set Y7u=null
set G7u=null
set g7u=null
set h7u=null
set F7u=null
set k7u=null
set x7u=null
set v7u=null
set Q7u=null
set W7u=null
set E7u=null
set Z7u=null
set U7u=null
set I7u=null
set P7u=null
set D7u=null
set H7u=null
set K7u=null
set L7u=null
set X7u=null
set C7u=null
set V7u=null
set M7u=null
set w8r=null
set u8r=null
endfunction
function sBe takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1270")
endfunction
function CbS takes string UbS returns nothing
local unit IbS
local integer PbS
local unit AbS
local string DbS
local integer HbS
local real JbS
local integer KbS
local string LbS
local boolean XbS
set aW[qW]=UbS
set qW=qW+1
set IbS=GetOrderedUnit()
if GetUnitCurrentOrder(IbS)==String2OrderIdBJ("bearform") then
set AbS=IbS
set XbS=nG[GetPlayerId(GetOwningPlayer(AbS))-4]==true
else
set XbS=false
endif
if XbS then
set DbS="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_RezistNightElf in RezistNightElf, line 113"
set aW[qW]=DbS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set HbS=fF
set RF[HbS]=830
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_RezistNightElf.","when calling error in RezistNightElf, line 113")
set HbS=0
endif
else
set dF=dF-1
set HbS=nF[dF]
set RF[HbS]=830
endif
set qW=qW-1
set PbS=HbS
set wQ[PbS]=IbS
set JbS=.75
set KbS=PbS
set LbS="when calling doAfter in RezistNightElf, line 113"
set aW[qW]=LbS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),JbS,KbS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set IbS=null
set AbS=null
endfunction
function sBt takes nothing returns nothing
set qW=0
call CbS("via function reference RezistNightElf, line 110")
endfunction
function sCs takes nothing returns boolean
local unit XXs=GetFilterUnit()
local unit VXs=XXs
local integer CXs=GetUnitTypeId(VXs)
local unit BXs=XXs
local unit MXs=GetAttacker()
local player NXs=GetOwningPlayer(MXs)
local unit wCs
local unittype uCs
local boolean rCs
if IsUnitEnemy(BXs,NXs) then
set wCs=XXs
set uCs=UNIT_TYPE_STRUCTURE
set rCs=not IsUnitType(wCs,uCs)
else
set rCs=false
endif
set XXs=null
set VXs=null
set BXs=null
set NXs=null
set MXs=null
set wCs=null
set uCs=null
return rCs and not (CXs==$75303030 or CXs==$7864756D)
endfunction
function sFl takes nothing returns boolean
local playerunitevent uFl=EVENT_PLAYER_UNIT_SPELL_CAST
local code rFl=K0w
call emO(uFl,null,rFl,null)
set uFl=null
return true
endfunction
function sHy takes nothing returns boolean
local playerunitevent uHy=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code rHy=w7
call emO(uHy,null,rHy,null)
set uHy=null
return true
endfunction
function sKc takes nothing returns boolean
local trigger VJc
local playerunitevent BJc
local trigger NJc
local playerunitevent MJc
local integer wKc
local trigger uKc
local code rKc
set pG=CreateTrigger()
set VJc=pG
set BJc=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NJc=VJc
set MJc=BJc
set wKc=0
loop
call TriggerRegisterPlayerUnitEvent(NJc,Player(wKc),MJc,null)
set wKc=wKc+1
exitwhen wKc==bj_MAX_PLAYER_SLOTS
endloop
set uKc=pG
set rKc=kww_2685
call TriggerAddAction(uKc,rKc)
set VJc=null
set BJc=null
set NJc=null
set MJc=null
set uKc=null
return true
endfunction
function sMe takes nothing returns boolean
local playerunitevent uMe=EVENT_PLAYER_UNIT_ATTACKED
local code rMe=h1
call emO(uMe,null,rMe,null)
set uMe=null
return true
endfunction
function RYS takes string tYS returns nothing
local unit iYS
local unit SYS
local integer cYS
local unit oYS
local unit OYS
local unit lYS
local unit bYS
local string yYS
local integer pYS
local real eYS
local integer qYS
local string aYS
local boolean nYS
local boolean dYS
local boolean fYS
set aW[qW]=tYS
set qW=qW+1
set iYS=GetAttacker()
set SYS=GetTriggerUnit()
set oYS=SYS
if UnitAlive(oYS) then
set OYS=iYS
set nYS=UnitAlive(OYS)
else
set nYS=false
endif
if nYS and SYS!=null and iYS!=null then
set lYS=iYS
set dYS=IsUnitIllusion(lYS)==false
else
set dYS=false
endif
if dYS then
set bYS=SYS
set fYS=IsUnitIllusion(bYS)==false
else
set fYS=false
endif
if fYS then
set yYS="when calling alloc_CallbackSingle_doAfter_UseCast in UseCast, line 324"
set aW[qW]=yYS
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set pYS=fF
set RF[pYS]=763
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_UseCast.","when calling error in UseCast, line 324")
set pYS=0
endif
else
set dF=dF-1
set pYS=nF[dF]
set RF[pYS]=763
endif
set qW=qW-1
set cYS=pYS
set XQ[cYS]=iYS
set CQ[cYS]=SYS
set eYS=1.
set qYS=cYS
set aYS="when calling doAfter in UseCast, line 324"
set aW[qW]=aYS
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),eYS,qYS,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set iYS=null
set SYS=null
set oYS=null
set OYS=null
set lYS=null
set bYS=null
endfunction
function sOc takes nothing returns nothing
set qW=0
call RYS("via function reference UseCast, line 383")
endfunction
function sPb takes nothing returns boolean
local trigger JIb
local trigger KIb
local playerunitevent LIb
local integer XIb
local trigger CIb
local rect VIb
local region BIb
local trigger NIb
local boolexpr MIb
local trigger wPb
local playerunitevent uPb
local code rPb
set cT=CreateTrigger()
set oT=CreateTrigger()
set JIb=oT
call DisableTrigger(JIb)
set KIb=oT
set LIb=EVENT_PLAYER_UNIT_DEATH
set XIb=0
loop
call TriggerRegisterPlayerUnitEvent(KIb,Player(XIb),LIb,null)
set XIb=XIb+1
exitwhen XIb==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(oT,x0w)
set CIb=cT
set VIb=bj_mapInitialPlayableArea
set BIb=CreateRegion()
call RegionAddRect(BIb,VIb)
call TriggerRegisterEnterRegion(CIb,BIb,null)
set NIb=cT
set MIb=Condition(v0w)
call TriggerAddCondition(NIb,MIb)
set wPb=cT
call DisableTrigger(wPb)
set uPb=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rPb=m0w
call emO(uPb,null,rPb,null)
set JIb=null
set KIb=null
set LIb=null
set CIb=null
set VIb=null
set BIb=null
set NIb=null
set MIb=null
set wPb=null
set uPb=null
return true
endfunction
function sPy takes nothing returns boolean
local unit KIy=GetFilterUnit()
local unit XIy=KIy
local integer LIy=GetUnitTypeId(XIy)
local unit CIy=KIy
local unit BIy=GetAttacker()
local player VIy=GetOwningPlayer(BIy)
local unit NIy
local unittype MIy
local unit wPy
local boolean uPy
local boolean rPy
if IsUnitEnemy(CIy,VIy) then
set NIy=KIy
set MIy=UNIT_TYPE_STRUCTURE
set uPy=not IsUnitType(NIy,MIy)
else
set uPy=false
endif
if uPy and not (LIy==$75303030 or LIy==$7864756D) then
set wPy=KIy
set rPy=UnitAlive(wPy)
else
set rPy=false
endif
set KIy=null
set XIy=null
set CIy=null
set VIy=null
set BIy=null
set NIy=null
set MIy=null
set wPy=null
return rPy
endfunction
function sSb takes nothing returns nothing
local unit Nib=GetDyingUnit()
local player Bib=GetOwningPlayer(Nib)
local integer Vib=GetPlayerId(Bib)
local unit Mib=GetTriggerUnit()
local unittype wSb=UNIT_TYPE_STRUCTURE
local unit uSb
local unit rSb
if IsUnitType(Mib,wSb)==true then
set uSb=GetDyingUnit()
if GetOwningPlayer(uSb)==gd and Tw[Vib]==0 and QO!=null then
set rSb=QO
call RemoveUnit(rSb)
set QO=null
endif
endif
set Bib=null
set Nib=null
set Mib=null
set wSb=null
set uSb=null
set rSb=null
endfunction
function sVe takes nothing returns boolean
local unit ZCe=GetEnteringUnit()
local unit ICe=ZCe
local player UCe=GetOwningPlayer(ICe)
local player PCe=UCe
local unit DCe=G[2]
local player ACe=GetOwningPlayer(DCe)
local unit HCe
local unit JCe
local unittype KCe
local unit LCe
local unit XCe
local unit CCe
local unit VCe
local boolean BCe
local boolean NCe
local boolean MCe
local boolean wVe
local boolean uVe
local boolean rVe
if IsPlayerEnemy(PCe,ACe) then
set BCe=true
else
set HCe=G[2]
set BCe=GetOwningPlayer(HCe)==Player(15)
endif
if BCe then
set JCe=ZCe
set KCe=UNIT_TYPE_HERO
set NCe=IsUnitType(JCe,KCe)==true or GetUnitLevel(ZCe)>=7
else
set NCe=false
endif
if NCe then
set LCe=ZCe
set MCe=GetUnitTypeId(LCe)!=$6830324C
else
set MCe=false
endif
if MCe then
set XCe=ZCe
set wVe=GetUnitTypeId(XCe)!=$6830324D
else
set wVe=false
endif
if wVe then
set CCe=ZCe
set uVe=GetUnitTypeId(CCe)!=$68303254
else
set uVe=false
endif
if uVe then
set VCe=ZCe
set rVe=GetUnitTypeId(VCe)!=$6830324F
else
set rVe=false
endif
set ZCe=null
set UCe=null
set ICe=null
set PCe=null
set ACe=null
set DCe=null
set HCe=null
set JCe=null
set KCe=null
set LCe=null
set XCe=null
set CCe=null
set VCe=null
return rVe
endfunction
function sXl takes nothing returns boolean
local unit ALl=GetFilterUnit()
local unit DLl=ALl
local unit HLl
local unit JLl
local unit KLl
local player LLl
local unit XLl
local unit CLl
local unittype VLl
local unit BLl
local unittype NLl
local boolean MLl
local boolean wXl
local boolean uXl
local boolean rXl
if UnitAlive(DLl) then
set HLl=ALl
set JLl=GetSpellAbilityUnit()
if HLl!=null and JLl!=null then
set KLl=HLl
set XLl=JLl
set LLl=GetOwningPlayer(XLl)
set MLl=IsUnitEnemy(KLl,LLl)
else
set MLl=false
endif
set wXl=MLl
else
set wXl=false
endif
if wXl then
set CLl=ALl
set VLl=UNIT_TYPE_HERO
set uXl=IsUnitType(CLl,VLl)
else
set uXl=false
endif
if uXl then
set BLl=ALl
set NLl=UNIT_TYPE_ANCIENT
set rXl=IsUnitType(BLl,NLl)==false
else
set rXl=false
endif
set ALl=null
set DLl=null
set HLl=null
set JLl=null
set KLl=null
set LLl=null
set XLl=null
set CLl=null
set VLl=null
set BLl=null
set NLl=null
return rXl
endfunction
function sYS takes nothing returns boolean
return true
endfunction
function sac takes nothing returns boolean
local playerunitevent Mqc
local code wac
local playerunitevent uac
local code rac
set Ja=null
set Mqc=EVENT_PLAYER_UNIT_SPELL_EFFECT
set wac=G5
call emO(Mqc,null,wac,null)
set uac=EVENT_PLAYER_UNIT_ATTACKED
set rac=g5
call emO(uac,null,rac,null)
set Mqc=null
set uac=null
return true
endfunction
function sdi takes nothing returns nothing
set qW=0
call Nvl("via function reference NewRandom, line 146")
endfunction
function php takes unit Shp returns nothing
local unit lhp=Shp
local integer chp=GetUnitTypeId(lhp)
local player ohp
local integer Ohp
local unit bhp
local player yhp
if chp==$6E747474 then
set bhp=Shp
set ohp=GetOwningPlayer(bhp)
set yhp=ohp
set Ohp=GetPlayerId(yhp)
set L[Ohp]=$68303239
endif
set ohp=null
set lhp=null
set bhp=null
set yhp=null
endfunction
function sft takes nothing returns nothing
call php(GetTriggerUnit())
endfunction
function shr takes nothing returns nothing
local unit wgr
local integer ugr
local integer rgr
local player sgr
local real tgr
local real igr
local unit Sgr
local player cgr
local real ogr
local real Ogr
local unit lgr
local player bgr
local real ygr
local real pgr
local unit egr
local player qgr
local real agr
local real ngr
local unit dgr
local unit fgr
local unit Rgr
local unit Tgr
local unit Ygr
local unit Ggr
local unit ggr
local integer hgr
local unit Fgr
local integer kgr
local integer jgr
local unit xgr
local unit vgr
local unit mgr
local unit Qgr
local unit Wgr
local integer Egr
local unit Zgr
local integer Ugr
local unit Igr
local unit Pgr
local unit Agr
local unit Dgr
local unit Hgr
local integer Jgr
local unit Kgr
local integer Lgr
local integer Xgr
local unit Cgr
local unit Vgr
local unit Bgr
local unit Ngr
local unit Mgr
local integer whr
local unit uhr
local integer rhr
if mR!=null then
set wgr=GetDyingUnit()
set fgr=wgr
set ugr=GetUnitTypeId(fgr)
set rgr=GetRandomInt(1,100)
if RR!=0 then
if ugr==$6E6D7972 or ugr==$6E6E7375 or ugr==$6E736E70 or ugr==$6E687968 then
if rgr<=RR then
set Rgr=wgr
set sgr=GetOwningPlayer(Rgr)
set Tgr=wgr
set tgr=GetUnitX(Tgr)
set Ygr=wgr
set igr=GetUnitY(Ygr)
set Ggr=wgr
call RemoveUnit(Ggr)
set Sgr=CreateUnit(sgr,$6E303433,tgr,igr,GetUnitFacing(wgr))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge Purple.mdl",Sgr,"origin"))
if RR>=10 then
set ggr=Sgr
set hgr=$41333046
call UnitAddAbility(ggr,hgr)
endif
if RR==20 then
set Fgr=Sgr
set kgr=$41333046
set jgr=2
call SetUnitAbilityLevel(Fgr,kgr,jgr)
endif
endif
endif
if ugr==$6E6E7377 or ugr==$6E30304D then
if rgr<=RR then
set xgr=wgr
set cgr=GetOwningPlayer(xgr)
set vgr=wgr
set ogr=GetUnitX(vgr)
set mgr=wgr
set Ogr=GetUnitY(mgr)
set Qgr=wgr
call RemoveUnit(Qgr)
set lgr=CreateUnit(cgr,$6E303435,ogr,Ogr,GetUnitFacing(wgr))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge Purple.mdl",lgr,"origin"))
if RR>=10 then
set Wgr=lgr
set Egr=$41333048
call UnitAddAbility(Wgr,Egr)
endif
if RR==20 then
set Zgr=lgr
set Ugr=$41333049
call UnitAddAbility(Zgr,Ugr)
endif
endif
endif
if ugr==$6E6E7267 or ugr==$6E6E7273 or ugr==$6E776773 or ugr==$6E303154 then
if rgr<=RR then
set Igr=wgr
set bgr=GetOwningPlayer(Igr)
set Pgr=wgr
set ygr=GetUnitX(Pgr)
set Agr=wgr
set pgr=GetUnitY(Agr)
set Dgr=wgr
call RemoveUnit(Dgr)
set egr=CreateUnit(bgr,$6E303434,ygr,pgr,GetUnitFacing(wgr))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge Purple.mdl",egr,"origin"))
if RR>=10 then
set Hgr=egr
set Jgr=$41333047
call UnitAddAbility(Hgr,Jgr)
endif
if RR==20 then
set Kgr=egr
set Lgr=$41333047
set Xgr=2
call SetUnitAbilityLevel(Kgr,Lgr,Xgr)
endif
endif
endif
if ugr==$6E687963 or ugr==$6E303432 or ugr==$6E666F74 then
if rgr<=RR then
set Cgr=wgr
set qgr=GetOwningPlayer(Cgr)
set Vgr=wgr
set agr=GetUnitX(Vgr)
set Bgr=wgr
set ngr=GetUnitY(Bgr)
set Ngr=wgr
call RemoveUnit(Ngr)
set dgr=CreateUnit(qgr,$6E303436,agr,ngr,GetUnitFacing(wgr))
call DestroyEffect(AddSpecialEffectTarget("Soul Discharge Purple.mdl",dgr,"origin"))
if RR>=10 then
set Mgr=dgr
set whr=$506F5372
call UnitAddAbility(Mgr,whr)
endif
if RR==20 then
set uhr=dgr
set rhr=$41436268
call UnitAddAbility(uhr,rhr)
endif
endif
endif
endif
endif
set wgr=null
set sgr=null
set Sgr=null
set cgr=null
set lgr=null
set bgr=null
set egr=null
set qgr=null
set dgr=null
set fgr=null
set Rgr=null
set Tgr=null
set Ygr=null
set Ggr=null
set ggr=null
set Fgr=null
set xgr=null
set vgr=null
set mgr=null
set Qgr=null
set Wgr=null
set Zgr=null
set Igr=null
set Pgr=null
set Agr=null
set Dgr=null
set Hgr=null
set Kgr=null
set Cgr=null
set Vgr=null
set Bgr=null
set Ngr=null
set Mgr=null
set uhr=null
endfunction
function slt takes nothing returns boolean
local trigger COt
local trigger VOt
local playerunitevent BOt
local trigger NOt
local playerunitevent MOt
local integer wlt
local trigger ult
local code rlt
set ln=CreateTrigger()
set COt=ln
call DisableTrigger(COt)
set VOt=ln
set BOt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NOt=VOt
set MOt=BOt
set wlt=0
loop
call TriggerRegisterPlayerUnitEvent(NOt,Player(wlt),MOt,null)
set wlt=wlt+1
exitwhen wlt==bj_MAX_PLAYER_SLOTS
endloop
set ult=ln
set rlt=X5
call TriggerAddAction(ult,rlt)
set COt=null
set VOt=null
set BOt=null
set NOt=null
set MOt=null
set ult=null
return true
endfunction
function sne takes nothing returns boolean
return true
endfunction
function snw takes nothing returns boolean
return true
endfunction
function sxi takes nothing returns nothing
set qW=0
call Lki("via function reference AltarGold, line 1435")
endfunction
function t2b takes nothing returns nothing
local rect s2b=vc
set Xo[3]=Location(GetRectCenterX(s2b),GetRectCenterY(s2b))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set s2b=null
endfunction
function t4p takes nothing returns nothing
set qW=0
call Fst("via function reference AltarGold, line 1703")
endfunction
function tBt takes nothing returns boolean
return true
endfunction
function tCs takes nothing returns nothing
set yq=yq+1
endfunction
function twu takes string j_u returns nothing
local unit x_u
local integer v_u
local trigger m_u
local real Q_u
local real W_u
local group E_u
local integer Z_u
local filterfunc U_u
local unit I_u
local group P_u
local integer A_u
local unit D_u
local integer H_u
local trigger J_u
local unit K_u
local unit L_u
local group X_u
local group C_u
local unit V_u
local group B_u
local boolexpr N_u
local string M_u
local integer wwu
local real uwu
local integer rwu
local string swu
set aW[qW]=j_u
set qW=qW+1
set x_u=GetTriggerUnit()
set D_u=x_u
set H_u=$4130354D
set v_u=GetUnitAbilityLevel(D_u,H_u)
if GetRandomInt(1,100)<=18+2*v_u then
set m_u=GetTriggeringTrigger()
set J_u=m_u
call DisableTrigger(J_u)
set K_u=x_u
set Q_u=GetUnitX(K_u)
set L_u=x_u
set W_u=GetUnitY(L_u)
set E_u=CreateGroup()
set Z_u=160+20*v_u
set U_u=Filter(Nww)
call GroupEnumUnitsInRange(E_u,Q_u,W_u,350.,U_u)
call SetUnitAnimation(x_u,"Spin")
set P_u=E_u
loop
set X_u=P_u
exitwhen not (FirstOfGroup(X_u)!=null)
set C_u=P_u
set V_u=FirstOfGroup(C_u)
call GroupRemoveUnit(C_u,V_u)
set I_u=V_u
call UnitDamageTarget(x_u,I_u,I2R(Z_u),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GlaiveMissile\\GlaiveMissileTarget.mdl",I_u,"origin"))
endloop
set B_u=E_u
call DestroyGroup(B_u)
set N_u=U_u
call DestroyBoolExpr(N_u)
set M_u="when calling alloc_CallbackSingle_doAfter_Samuro in Samuro, line 232"
set aW[qW]=M_u
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set wwu=fF
set RF[wwu]=748
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Samuro.","when calling error in Samuro, line 232")
set wwu=0
endif
else
set dF=dF-1
set wwu=nF[dF]
set RF[wwu]=748
endif
set qW=qW-1
set A_u=wwu
set uQ[A_u]=m_u
set uwu=2.
set rwu=A_u
set swu="when calling doAfter in Samuro, line 232"
set aW[qW]=swu
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),uwu,rwu,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set x_u=null
set m_u=null
set E_u=null
set U_u=null
set I_u=null
set P_u=null
set D_u=null
set J_u=null
set K_u=null
set L_u=null
set X_u=null
set C_u=null
set V_u=null
set B_u=null
set N_u=null
endfunction
function tDb takes nothing returns nothing
set qW=0
call twu("via function reference Samuro, line 240")
endfunction
function tEy takes nothing returns nothing
local unit JWy
local real KWy
local unit LWy
local unitstate XWy
local real CWy
local unit VWy
local unitstate BWy
local string NWy
local real MWy
local player wEy
local unit uEy
local unit rEy
local unitstate sEy
if Ly!=null then
set JWy=Ly
set KWy=1.
set LWy=JWy
set XWy=UNIT_STATE_MANA
set CWy=KWy
set rEy=LWy
set sEy=XWy
set VWy=LWy
set BWy=XWy
call SetUnitState(rEy,sEy,GetUnitState(VWy,BWy)+CWy)
set NWy="You have 1 Dragon Trophy for a time"
set MWy=10.
set uEy=Ly
set wEy=GetOwningPlayer(uEy)
call DisplayTimedTextToPlayer(wEy,0.,0.,MWy,NWy)
set pr=60
call TimerStart(Sr,60.,false,Tww_1428)
endif
set JWy=null
set LWy=null
set XWy=null
set VWy=null
set BWy=null
set wEy=null
set uEy=null
set rEy=null
set sEy=null
endfunction
function tFi takes nothing returns boolean
local unit Chi=GetFilterUnit()
local unit Vhi=Chi
local unittype Bhi=UNIT_TYPE_STRUCTURE
local unit Nhi
local integer Mhi
local unit wFi
local boolean uFi
local unit rFi
local boolean sFi
if IsUnitType(Vhi,Bhi)==true then
set Nhi=Chi
set Mhi=$41303853
set uFi=not (GetUnitAbilityLevel(Nhi,Mhi)>0)
else
set uFi=false
endif
if uFi then
set rFi=Chi
set wFi=Ly
set sFi=IsUnitAlly(rFi,GetOwningPlayer(wFi))
else
set sFi=false
endif
set Chi=null
set Vhi=null
set Bhi=null
set Nhi=null
set wFi=null
set rFi=null
return sFi
endfunction
function tHy takes nothing returns boolean
return true
endfunction
function tJl takes nothing returns nothing
local unit AHl=GetKillingUnit()
local unit HHl=AHl
local integer JHl=$41313856
local timer DHl
local unit KHl
local unit LHl
local integer XHl
local unit CHl
local integer VHl
local unit BHl
local integer NHl
local unit MHl
local integer wJl
local unit uJl
local integer rJl
local boolean sJl
if GetUnitAbilityLevel(HHl,JHl)==0 then
set KHl=AHl
set sJl=GetUnitTypeId(KHl)==$4F303431
else
set sJl=false
endif
if sJl then
set LHl=AHl
set XHl=$41313855
if GetUnitAbilityLevel(LHl,XHl)==1 then
set CHl=AHl
set VHl=$41313855
call UnitRemoveAbility(CHl,VHl)
set BHl=AHl
set NHl=$41313856
call UnitAddAbility(BHl,NHl)
set MHl=AHl
set wJl=$41313857
call UnitAddAbility(MHl,wJl)
set uJl=AHl
set rJl=$41313858
call UnitAddAbility(uJl,rJl)
set DHl=CreateTimer()
call SaveUnitHandle(qu,GetHandleId(DHl),$556E6974,AHl)
call TimerStart(DHl,20.,false,H2)
endif
endif
set AHl=null
set DHl=null
set HHl=null
set KHl=null
set LHl=null
set CHl=null
set BHl=null
set MHl=null
set uJl=null
endfunction
function tKc takes nothing returns boolean
return true
endfunction
function tLc takes nothing returns boolean
local trigger VKc
local trigger BKc
local playerunitevent NKc
local trigger MKc
local playerunitevent wLc
local integer uLc
local trigger rLc
local code sLc
set Mh=CreateTrigger()
set VKc=Mh
call DisableTrigger(VKc)
set BKc=Mh
set NKc=EVENT_PLAYER_UNIT_ATTACKED
set MKc=BKc
set wLc=NKc
set uLc=0
loop
call TriggerRegisterPlayerUnitEvent(MKc,Player(uLc),wLc,null)
set uLc=uLc+1
exitwhen uLc==bj_MAX_PLAYER_SLOTS
endloop
set rLc=Mh
set sLc=Vsw
call TriggerAddAction(rLc,sLc)
set VKc=null
set BKc=null
set NKc=null
set MKc=null
set wLc=null
set rLc=null
return true
endfunction
function Nas takes string Uas returns nothing
local unit Ias
local integer Pas
local unit Aas
local unit Das
local unit Has
local string Jas
local integer Kas
local real Las
local integer Xas
local string Cas
local boolean Vas
local boolean Bas
set aW[qW]=Uas
set qW=qW+1
set Ias=GetTriggerUnit()
set Aas=Ias
if GetUnitTypeId(Aas)==$55303041 then
set Vas=true
else
set Das=Ias
set Vas=GetUnitTypeId(Das)==$55303042
endif
if Vas then
set Bas=true
else
set Has=Ias
set Bas=GetUnitTypeId(Has)==$55303043
endif
if Bas then
set Jas="when calling alloc_CallbackSingle_doAfter_DragonForge in DragonForge, line 712"
set aW[qW]=Jas
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Kas=fF
set RF[Kas]=706
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_DragonForge.","when calling error in DragonForge, line 712")
set Kas=0
endif
else
set dF=dF-1
set Kas=nF[dF]
set RF[Kas]=706
endif
set qW=qW-1
set Pas=Kas
set vj[Pas]=Ias
set Las=1.
set Xas=Pas
set Cas="when calling doAfter in DragonForge, line 712"
set aW[qW]=Cas
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Las,Xas,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Ias=null
set Aas=null
set Das=null
set Has=null
endfunction
function tMe takes nothing returns nothing
set qW=0
call Nas("via function reference DragonForge, line 970")
endfunction
function tMy takes nothing returns nothing
local unit JBy=GetTriggerUnit()
local player HBy=GetOwningPlayer(JBy)
local integer UBy=GetPlayerId(HBy)
local group IBy=CreateGroup()
local filterfunc PBy=Filter(Buw)
local unit ABy
local group DBy
local group KBy
local group LBy
local unit XBy
local unit CBy
local integer VBy
local unit BBy
local integer NBy
local unit MBy
local integer wNy
local unit uNy
local integer rNy
local unit sNy
local integer tNy
local unit iNy
local integer SNy
local unit cNy
local integer oNy
local unit ONy
local integer lNy
local unit bNy
local integer yNy
local unit pNy
local integer eNy
local unit qNy
local integer aNy
local unit nNy
local integer dNy
local unit fNy
local integer RNy
local unit TNy
local integer YNy
local unit GNy
local integer gNy
local unit hNy
local integer FNy
local unit kNy
local integer jNy
local unit xNy
local integer vNy
local unit mNy
local integer QNy
local unit WNy
local integer ENy
local unit ZNy
local integer UNy
local unit INy
local integer PNy
local unit ANy
local integer DNy
local unit HNy
local integer JNy
local unit KNy
local integer LNy
local unit XNy
local integer CNy
local unit VNy
local integer BNy
local unit NNy
local integer MNy
local unit wMy
local integer uMy
local group rMy
local boolexpr sMy
call GroupEnumUnitsInRect(IBy,bj_mapInitialPlayableArea,PBy)
set DBy=IBy
loop
set KBy=DBy
exitwhen not (FirstOfGroup(KBy)!=null)
set LBy=DBy
set XBy=FirstOfGroup(LBy)
call GroupRemoveUnit(LBy,XBy)
set ABy=XBy
set CBy=ABy
set VBy=m[UBy]
call IssueImmediateOrderById(CBy,VBy)
set BBy=ABy
set NBy=Q[UBy]
call IssueImmediateOrderById(BBy,NBy)
set MBy=ABy
set wNy=E[UBy]
call IssueImmediateOrderById(MBy,wNy)
set uNy=ABy
set rNy=Z[UBy]
call IssueImmediateOrderById(uNy,rNy)
set sNy=ABy
set tNy=U[UBy]
call IssueImmediateOrderById(sNy,tNy)
set iNy=ABy
set SNy=V[UBy]
call IssueImmediateOrderById(iNy,SNy)
set cNy=ABy
set oNy=B[UBy]
call IssueImmediateOrderById(cNy,oNy)
set ONy=ABy
set lNy=N[UBy]
call IssueImmediateOrderById(ONy,lNy)
set bNy=ABy
set yNy=M[UBy]
call IssueImmediateOrderById(bNy,yNy)
set pNy=ABy
set eNy=ww[UBy]
call IssueImmediateOrderById(pNy,eNy)
set qNy=ABy
set aNy=uw[UBy]
call IssueImmediateOrderById(qNy,aNy)
set nNy=ABy
set dNy=rw[UBy]
call IssueImmediateOrderById(nNy,dNy)
set fNy=ABy
set RNy=sw[UBy]
call IssueImmediateOrderById(fNy,RNy)
set TNy=ABy
set YNy=tw[UBy]
call IssueImmediateOrderById(TNy,YNy)
set GNy=ABy
set gNy=iw[UBy]
call IssueImmediateOrderById(GNy,gNy)
set hNy=ABy
set FNy=Sw[UBy]
call IssueImmediateOrderById(hNy,FNy)
set kNy=ABy
set jNy=cw[UBy]
call IssueImmediateOrderById(kNy,jNy)
set xNy=ABy
set vNy=ow[UBy]
call IssueImmediateOrderById(xNy,vNy)
set mNy=ABy
set QNy=Ow[UBy]
call IssueImmediateOrderById(mNy,QNy)
set WNy=ABy
set ENy=A[UBy]
call IssueImmediateOrderById(WNy,ENy)
set ZNy=ABy
set UNy=D[UBy]
call IssueImmediateOrderById(ZNy,UNy)
set INy=ABy
set PNy=H[UBy]
call IssueImmediateOrderById(INy,PNy)
set ANy=ABy
set DNy=J[UBy]
call IssueImmediateOrderById(ANy,DNy)
set HNy=ABy
set JNy=K[UBy]
call IssueImmediateOrderById(HNy,JNy)
set KNy=ABy
set LNy=L[UBy]
call IssueImmediateOrderById(KNy,LNy)
set XNy=ABy
set CNy=r[UBy]
call IssueImmediateOrderById(XNy,CNy)
set VNy=ABy
set BNy=s[UBy]
call IssueImmediateOrderById(VNy,BNy)
set NNy=ABy
set MNy=t[UBy]
call IssueImmediateOrderById(NNy,MNy)
set wMy=ABy
set uMy=i[UBy]
call IssueImmediateOrderById(wMy,uMy)
endloop
set rMy=IBy
call DestroyGroup(rMy)
set sMy=PBy
call DestroyBoolExpr(sMy)
set IBy=null
set PBy=null
set ABy=null
set DBy=null
set HBy=null
set JBy=null
set KBy=null
set LBy=null
set XBy=null
set CBy=null
set BBy=null
set MBy=null
set uNy=null
set sNy=null
set iNy=null
set cNy=null
set ONy=null
set bNy=null
set pNy=null
set qNy=null
set nNy=null
set fNy=null
set TNy=null
set GNy=null
set hNy=null
set kNy=null
set xNy=null
set mNy=null
set WNy=null
set ZNy=null
set INy=null
set ANy=null
set HNy=null
set KNy=null
set XNy=null
set VNy=null
set NNy=null
set wMy=null
set rMy=null
set sMy=null
endfunction
function tNb takes nothing returns nothing
local integer QBl=GetSpellAbilityId()
local unit WBl
local integer EBl
local real ZBl
local real UBl
local integer IBl
local unit PBl
local unit ABl
local integer DBl
local unit HBl
local unit JBl
local unit KBl
local unit LBl
local unit XBl
local unit CBl
local integer VBl
local unit BBl
local integer NBl
local integer MBl
local unit wNb
local real uNb
local player rNb
local real sNb
if QBl==$41304A4C then
set WBl=GetSpellAbilityUnit()
set ABl=WBl
set DBl=$41304A4C
set EBl=GetUnitAbilityLevel(ABl,DBl)
set HBl=WBl
set ZBl=GetUnitX(HBl)
set JBl=WBl
set UBl=GetUnitY(JBl)
set IBl=1
loop
exitwhen IBl>16
set KBl=WBl
set rNb=GetOwningPlayer(KBl)
set LBl=WBl
set sNb=GetUnitX(LBl)
set XBl=WBl
set PBl=CreateUnit(rNb,$75303030,sNb,GetUnitY(XBl),270.)
set CBl=PBl
set VBl=$41304A4D
call UnitAddAbility(CBl,VBl)
set BBl=PBl
set NBl=$41304A4D
set MBl=EBl
call SetUnitAbilityLevel(BBl,NBl,MBl)
call IssuePointOrder(PBl,"impale",ZBl+100.*Cos(67.5+I2R(IBl)*22.5*bj_DEGTORAD),UBl+100.*Sin(67.5+I2R(IBl)*22.5*bj_DEGTORAD))
set wNb=PBl
set uNb=3.
call UnitApplyTimedLife(wNb,$42544C46,uNb)
set IBl=IBl+1
endloop
endif
set WBl=null
set PBl=null
set ABl=null
set HBl=null
set JBl=null
set KBl=null
set LBl=null
set XBl=null
set CBl=null
set BBl=null
set wNb=null
set rNb=null
endfunction
function tQy takes nothing returns boolean
local playerunitevent rQy
local code sQy
set ib[0]=-530
set ib[1]=-530
set ib[2]=-190
set ib[3]=380
set ib[4]=530
set ib[5]=530
set Sb[0]=4800
set Sb[1]=5300
set Sb[2]=4225
set Sb[3]=4225
set Sb[4]=5300
set Sb[5]=4800
set cb[0]=-530
set cb[1]=-530
set cb[2]=-190
set cb[3]=380
set cb[4]=530
set cb[5]=530
set ob[0]=-4800
set ob[1]=-5300
set ob[2]=-4225
set ob[3]=-4225
set ob[4]=-5300
set ob[5]=-4800
set Ob[0]=5300
set Ob[1]=4800
set Ob[2]=4225
set Ob[3]=4225
set Ob[4]=4800
set Ob[5]=5300
set lb[0]=-530
set lb[1]=-530
set lb[2]=-190
set lb[3]=380
set lb[4]=530
set lb[5]=530
set bb[0]=-5300
set bb[1]=-4800
set bb[2]=-4225
set bb[3]=-4225
set bb[4]=-4800
set bb[5]=-5300
set yb[0]=-530
set yb[1]=-530
set yb[2]=-190
set yb[3]=380
set yb[4]=530
set yb[5]=530
set rQy=EVENT_PLAYER_UNIT_SPELL_CAST
set sQy=m3
call emO(rQy,null,sQy,null)
set rQy=null
return true
endfunction
function tRe takes nothing returns nothing
local unit Cfe=GetTriggerUnit()
local unit Vfe=Cfe
local string Bfe="attack"
local real rRe=Qw[16]
local real sRe=Ww[16]
local real Nfe=rRe
local real Mfe=sRe
local unit wRe
local unittype uRe
call IssuePointOrder(Vfe,Bfe,Nfe,Mfe)
set wRe=Cfe
set uRe=UNIT_TYPE_HERO
if IsUnitType(wRe,uRe) then
call SaveInteger(qu,GetHandleId(Cfe),$6D6F7665,16)
endif
set Cfe=null
set Vfe=null
set wRe=null
set uRe=null
endfunction
function tRl takes nothing returns boolean
local unit Cfl=GetFilterUnit()
local unit Vfl=Cfl
local player Bfl=on
local unit Nfl
local unittype Mfl
local unit wRl
local integer uRl
local boolean rRl
local boolean sRl
if Vfl!=null and IsUnitAlly(Vfl,Bfl) then
set Nfl=Cfl
set Mfl=UNIT_TYPE_STRUCTURE
set rRl=IsUnitType(Nfl,Mfl)==true
else
set rRl=false
endif
if rRl then
set wRl=Cfl
set uRl=$41303853
set sRl=not (GetUnitAbilityLevel(wRl,uRl)>0)
else
set sRl=false
endif
set Cfl=null
set Vfl=null
set Bfl=null
set Nfl=null
set Mfl=null
set wRl=null
return sRl
endfunction
function Spi takes nothing returns nothing
local integer Nyi=GetRandomInt(2,16)
local texttag Myi
local unit wpi
local unit upi
local unit rpi
local unit spi
local real tpi
local real ipi
set Jw[1]=Jw[Nyi]
set Hw[1]=Hw[Nyi]
set Myi=Gh
call DestroyTextTag(Myi)
set wpi=Rh
set tpi=GetUnitX(wpi)-512.
set upi=Rh
set Gh=jVl(tpi,GetUnitY(upi)+128.,0.,Hw[1],8.,100,0,100,255)
set rpi=Rh
set ipi=GetUnitX(rpi)
set spi=Rh
call PingMinimapEx(ipi,GetUnitY(spi),10.,100,0,0,false)
set Myi=null
set wpi=null
set upi=null
set rpi=null
set spi=null
endfunction
function IHb takes string hHb,string FHb returns integer
local integer kHb=0
local string xHb=hHb
local integer ZHb=StringLength(xHb)
local string vHb=FHb
local integer jHb=ZHb-StringLength(vHb)
local string mHb
local integer QHb
local integer WHb
local string EHb
local integer UHb
loop
exitwhen kHb>jHb
set mHb=hHb
set QHb=kHb
set UHb=kHb
set EHb=FHb
set WHb=UHb+StringLength(EHb)
if SubString(mHb,QHb,WHb)==FHb then
return kHb
endif
set kHb=kHb+1
endloop
return -1
endfunction
function VMe takes string EMe,string ZMe,integer UMe returns integer
local integer IMe=UMe
local string AMe=EMe
local integer XMe=StringLength(AMe)
local string DMe=ZMe
local integer PMe=XMe-StringLength(DMe)
local string HMe
local integer JMe
local integer KMe
local string LMe
local integer CMe
loop
exitwhen IMe>PMe
set HMe=EMe
set JMe=IMe
set CMe=IMe
set LMe=ZMe
set KMe=CMe+StringLength(LMe)
if SubString(HMe,JMe,KMe)==ZMe then
return IMe
endif
set IMe=IMe+1
endloop
return -1
endfunction
function Tgl takes string ugl,string rgl,string sgl returns string
local string tgl=ugl
local string Sgl=rgl
local integer igl
local string cgl
local integer ogl
local integer Ogl
local string lgl
local integer bgl
local integer ygl
local string pgl
local string egl
local string qgl
local integer agl
local string ngl
local integer dgl
local string fgl
local string Rgl
if StringLength(Sgl)>0 then
set igl=IHb(ugl,rgl)
loop
exitwhen not (igl!=-1)
set cgl=tgl
set ogl=0
set Ogl=igl
set ngl=SubString(cgl,ogl,Ogl)+sgl
set lgl=tgl
set agl=igl
set pgl=rgl
set bgl=agl+StringLength(pgl)
set egl=tgl
set ygl=StringLength(egl)
set tgl=ngl+SubString(lgl,bgl,ygl)
set fgl=tgl
set Rgl=rgl
set dgl=igl
set qgl=sgl
set igl=VMe(fgl,Rgl,dgl+StringLength(qgl))
endloop
endif
return tgl
endfunction
function tSi takes nothing returns nothing
local integer uii=GetSpellAbilityId()
local unit tii=Rh
local player rii=GetOwningPlayer(tii)
local string sii=fEb(rii)
local player iii
local player Sii
local playerstate cii
local player oii
local integer Oii
local player lii
local playerstate bii
local integer yii
local player pii
local playerstate eii
local string qii
local real aii
local string nii
local string dii
local string fii
local integer Rii
local integer Tii
local unit Yii
local integer Gii
local unit gii
local integer hii
local string Fii
local player kii
local player jii
local playerstate xii
local player vii
local integer mii
local player Qii
local playerstate Wii
local integer Eii
local player Zii
local playerstate Uii
local string Iii
local real Pii
local string Aii
local string Dii
local string Hii
local integer Jii
local integer Kii
local unit Lii
local integer Xii
local unit Cii
local integer Vii
local string Bii
local player Nii
local playerstate Mii
local string wSi
local player uSi
local playerstate rSi
local string sSi
if uii==$41354358 then
set iii=rii
set Sii=iii
set cii=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(Sii,cii)>=100 then
set oii=rii
set Oii=-100
set lii=oii
set bii=PLAYER_STATE_RESOURCE_GOLD
set yii=Oii
set Nii=lii
set Mii=bii
set pii=lii
set eii=bii
call SetPlayerState(Nii,Mii,GetPlayerState(pii,eii)+yii)
set nii="{0} Force to next Voodoo effect immideatly!"
set dii=sii
set fii=nii
set Rii=0
set wSi=fii
set Tii=Rii
set fii=Tgl(wSi,"{"+I2S(Tii)+"}",dii)
set Rii=Rii+1
set qii=fii
set aii=8.
call DisplayTimedTextToPlayer(IY,0.,0.,aii,qii)
call PTl()
else
set Yii=Rh
set Gii=$41354358
call UnitRemoveAbility(Yii,Gii)
set gii=Rh
set hii=$41354358
call UnitAddAbility(gii,hii)
set Fii="|c00FF0303not enough gold|r"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Fii)
endif
endif
if uii==$41364358 then
set kii=rii
set jii=kii
set xii=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(jii,xii)>=50 then
set vii=rii
set mii=-50
set Qii=vii
set Wii=PLAYER_STATE_RESOURCE_GOLD
set Eii=mii
set uSi=Qii
set rSi=Wii
set Zii=Qii
set Uii=Wii
call SetPlayerState(uSi,rSi,GetPlayerState(Zii,Uii)+Eii)
set Aii="{0} Change next Voodoo effect!"
set Dii=sii
set Hii=Aii
set Jii=0
set sSi=Hii
set Kii=Jii
set Hii=Tgl(sSi,"{"+I2S(Kii)+"}",Dii)
set Jii=Jii+1
set Iii=Hii
set Pii=8.
call DisplayTimedTextToPlayer(IY,0.,0.,Pii,Iii)
call Spi()
else
set Lii=Rh
set Xii=$41364358
call UnitRemoveAbility(Lii,Xii)
set Cii=Rh
set Vii=$41364358
call UnitAddAbility(Cii,Vii)
set Bii="|c00FF0303not enough gold|r"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Bii)
endif
endif
set rii=null
set tii=null
set iii=null
set Sii=null
set cii=null
set oii=null
set lii=null
set bii=null
set pii=null
set eii=null
set Yii=null
set gii=null
set kii=null
set jii=null
set xii=null
set vii=null
set Qii=null
set Wii=null
set Zii=null
set Uii=null
set Lii=null
set Cii=null
set Nii=null
set Mii=null
set uSi=null
set rSi=null
endfunction
function tTl takes nothing returns boolean
local trigger VRl
local trigger BRl
local playerunitevent NRl
local trigger MRl
local playerunitevent wTl
local integer uTl
local trigger rTl
local code sTl
set AO=CreateTrigger()
set VRl=AO
call DisableTrigger(VRl)
set BRl=AO
set NRl=EVENT_PLAYER_UNIT_SPELL_CAST
set MRl=BRl
set wTl=NRl
set uTl=0
loop
call TriggerRegisterPlayerUnitEvent(MRl,Player(uTl),wTl,null)
set uTl=uTl+1
exitwhen uTl==bj_MAX_PLAYER_SLOTS
endloop
set rTl=AO
set sTl=GM
call TriggerAddAction(rTl,sTl)
set VRl=null
set BRl=null
set NRl=null
set MRl=null
set wTl=null
set rTl=null
return true
endfunction
function tUt takes nothing returns nothing
local unit uUt=GetTriggerUnit()
local unit rUt=uUt
local trigger sUt
if GetUnitTypeId(rUt)==$5563726C then
set sUt=Dn
call DisableTrigger(sUt)
endif
set uUt=null
set rUt=null
set sUt=null
endfunction
function tUy takes nothing returns nothing
local unit WZy=GetAttacker()
local unit AZy=WZy
local unit EZy
local group ZZy
local filterfunc UZy
local unit IZy
local group PZy
local unit DZy
local unit HZy
local unit JZy
local unit KZy
local unit LZy
local unit XZy
local group CZy
local group VZy
local unit BZy
local group NZy
local boolexpr MZy
local boolean wUy
local group uUy
local real rUy
local real sUy
if GetUnitTypeId(AZy)==$6F6B6F64 then
set wUy=true
else
set DZy=WZy
set wUy=GetUnitTypeId(DZy)==$6E303145
endif
if wUy then
set HZy=WZy
if GetUnitTypeId(HZy)==$6F6B6F64 then
set Lh=15
else
set Lh=25
endif
if GetRandomInt(1,100)<=Lh then
set EZy=GetTriggerUnit()
set ZZy=CreateGroup()
set UZy=Filter(Asw)
set uUy=ZZy
set JZy=EZy
set rUy=GetUnitX(JZy)
set KZy=EZy
call GroupEnumUnitsInRange(uUy,rUy,GetUnitY(KZy),250.,UZy)
set LZy=EZy
set sUy=GetUnitX(LZy)
set XZy=EZy
call AddSpecialEffect("Conflagrate.mdl",sUy,GetUnitY(XZy))
set PZy=ZZy
loop
set CZy=PZy
exitwhen not (FirstOfGroup(CZy)!=null)
set VZy=PZy
set BZy=FirstOfGroup(VZy)
call GroupRemoveUnit(VZy,BZy)
set IZy=BZy
call UnitDamageTarget(WZy,IZy,125.,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endloop
set NZy=ZZy
call DestroyGroup(NZy)
set MZy=UZy
call DestroyBoolExpr(MZy)
endif
endif
set WZy=null
set EZy=null
set ZZy=null
set UZy=null
set IZy=null
set PZy=null
set AZy=null
set DZy=null
set HZy=null
set JZy=null
set KZy=null
set LZy=null
set XZy=null
set CZy=null
set VZy=null
set BZy=null
set NZy=null
set MZy=null
set uUy=null
endfunction
function tVb takes nothing returns boolean
local unit XCb=GetFilterUnit()
local unit VCb=GetKillingUnit()
local player CCb=GetOwningPlayer(VCb)
local unit BCb=XCb
local unittype NCb=UNIT_TYPE_HERO
local unit MCb
local unit wVb
local player uVb
local boolean rVb
local boolean sVb
if IsUnitType(BCb,NCb) then
set MCb=XCb
set rVb=UnitAlive(MCb)
else
set rVb=false
endif
if rVb then
set wVb=XCb
set uVb=CCb
set sVb=wVb!=null and IsUnitAlly(wVb,uVb)
else
set sVb=false
endif
set XCb=null
set CCb=null
set VCb=null
set BCb=null
set NCb=null
set MCb=null
set wVb=null
set uVb=null
return sVb
endfunction
function tWp takes nothing returns boolean
local unit VQp=GetFilterUnit()
local unit BQp=VQp
local unit NQp
local unittype MQp
local unit wWp
local boolean uWp
local unit rWp
local boolean sWp
if UnitAlive(BQp)==true then
set NQp=VQp
set MQp=UNIT_TYPE_STRUCTURE
set uWp=IsUnitType(NQp,MQp)==false
else
set uWp=false
endif
if uWp then
set rWp=VQp
set wWp=GetTriggerUnit()
set sWp=IsUnitEnemy(rWp,GetOwningPlayer(wWp))==true
else
set sWp=false
endif
set VQp=null
set BQp=null
set NQp=null
set MQp=null
set wWp=null
set rWp=null
return sWp
endfunction
function vol takes string pol returns nothing
local unit eol
local integer qol
local unit aol
local unit nol
local unit dol
local unit fol
local unit Rol
local integer Tol
local string Yol
local integer Gol
local real gol
local integer hol
local string Fol
local boolean kol
local boolean jol
local boolean xol
set aW[qW]=pol
set qW=qW+1
set eol=GetTriggerUnit()
set aol=eol
if GetUnitTypeId(aol)==$6F303530 then
set kol=true
else
set nol=eol
set kol=GetUnitTypeId(nol)==$6F303533
endif
if kol then
set jol=true
else
set dol=eol
set jol=GetUnitTypeId(dol)==$6F303547
endif
if jol then
set xol=true
else
set fol=eol
set xol=GetUnitTypeId(fol)==$6F30354B
endif
if xol then
set Rol=eol
set Tol=$4132314F
if GetUnitAbilityLevel(Rol,Tol)==1 then
set Yol="when calling alloc_CallbackSingle_doAfter_Prediction in Prediction, line 57"
set aW[qW]=Yol
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Gol=fF
set RF[Gol]=747
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Prediction.","when calling error in Prediction, line 57")
set Gol=0
endif
else
set dF=dF-1
set Gol=nF[dF]
set RF[Gol]=747
endif
set qW=qW-1
set qol=Gol
set Lm[qol]=eol
set gol=.5
set hol=qol
set Fol="when calling doAfter in Prediction, line 57"
set aW[qW]=Fol
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),gol,hol,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set eol=null
set aol=null
set nol=null
set dol=null
set fol=null
set Rol=null
endfunction
function t_c takes nothing returns nothing
set qW=0
call vol("via function reference Prediction, line 68")
endfunction
function tbt takes nothing returns boolean
local unit Dlt=GetFilterUnit()
local unit Hlt=Dlt
local unit Jlt
local unittype Klt
local unit Llt
local unit Xlt
local unit Clt
local player Vlt
local unit Blt
local unit Nlt
local unittype Mlt
local boolean wbt
local boolean ubt
local boolean rbt
local boolean sbt
if UnitAlive(Hlt) then
set Jlt=Dlt
set Klt=UNIT_TYPE_STRUCTURE
set wbt=IsUnitType(Jlt,Klt)==false
else
set wbt=false
endif
if wbt then
set Llt=Dlt
set Xlt=GetTriggerUnit()
if Llt!=null and Xlt!=null then
set Clt=Llt
set Blt=Xlt
set Vlt=GetOwningPlayer(Blt)
set ubt=IsUnitEnemy(Clt,Vlt)
else
set ubt=false
endif
set rbt=ubt==true
else
set rbt=false
endif
if rbt then
set Nlt=Dlt
set Mlt=UNIT_TYPE_ANCIENT
set sbt=IsUnitType(Nlt,Mlt)==false
else
set sbt=false
endif
set Dlt=null
set Hlt=null
set Jlt=null
set Klt=null
set Llt=null
set Xlt=null
set Clt=null
set Vlt=null
set Blt=null
set Nlt=null
set Mlt=null
return sbt
endfunction
function tdu takes nothing returns boolean
local unit Unu=GetEnteringUnit()
local unit Pnu=Unu
local player Inu=GetOwningPlayer(Pnu)
local player Anu=Inu
local unit Hnu=G[8]
local player Dnu=GetOwningPlayer(Hnu)
local unit Jnu
local unit Knu
local unittype Lnu
local unit Xnu
local unit Cnu
local unit Vnu
local unit Bnu
local boolean Nnu
local boolean Mnu
local boolean wdu
local boolean udu
local boolean rdu
local boolean sdu
if IsPlayerEnemy(Anu,Dnu) then
set Nnu=true
else
set Jnu=G[8]
set Nnu=GetOwningPlayer(Jnu)==Player(15)
endif
if Nnu then
set Knu=Unu
set Lnu=UNIT_TYPE_HERO
set Mnu=IsUnitType(Knu,Lnu)==true or GetUnitLevel(Unu)>=7
else
set Mnu=false
endif
if Mnu then
set Xnu=Unu
set wdu=GetUnitTypeId(Xnu)!=$6830324C
else
set wdu=false
endif
if wdu then
set Cnu=Unu
set udu=GetUnitTypeId(Cnu)!=$6830324D
else
set udu=false
endif
if udu then
set Vnu=Unu
set rdu=GetUnitTypeId(Vnu)!=$68303254
else
set rdu=false
endif
if rdu then
set Bnu=Unu
set sdu=GetUnitTypeId(Bnu)!=$6830324F
else
set sdu=false
endif
set Unu=null
set Inu=null
set Pnu=null
set Anu=null
set Dnu=null
set Hnu=null
set Jnu=null
set Knu=null
set Lnu=null
set Xnu=null
set Cnu=null
set Vnu=null
set Bnu=null
return sdu
endfunction
function tft takes nothing returns boolean
return true
endfunction
function thp takes nothing returns boolean
local trigger Bgp
local playerunitevent Ngp
local trigger Mgp
local playerunitevent whp
local integer uhp
local trigger rhp
local code shp
set ap=CreateTrigger()
set Bgp=ap
set Ngp=EVENT_PLAYER_UNIT_ATTACKED
set Mgp=Bgp
set whp=Ngp
set uhp=0
loop
call TriggerRegisterPlayerUnitEvent(Mgp,Player(uhp),whp,null)
set uhp=uhp+1
exitwhen uhp==bj_MAX_PLAYER_SLOTS
endloop
set rhp=ap
set shp=f4
call TriggerAddAction(rhp,shp)
set Bgp=null
set Ngp=null
set Mgp=null
set whp=null
set rhp=null
return true
endfunction
function thy takes nothing returns nothing
local unit Jgy=GetEnteringUnit()
local unit Lgy=Jgy
local integer Kgy=GetUnitTypeId(Lgy)
local unit Xgy
local integer Cgy
local unit Vgy
local integer Bgy
local unit Ngy
local integer Mgy
local unit why
local integer uhy
local unit rhy
local integer shy
if Kgy==$6F677275 or Kgy==$6E617373 or Kgy==$6F73686D or Kgy==$6F726169 then
set Xgy=Jgy
set Cgy=$41304A31
call UnitAddAbility(Xgy,Cgy)
endif
if Kgy==$6F726169 then
set Vgy=Jgy
set Bgy=$4130434D
call UnitAddAbility(Vgy,Bgy)
endif
if Kgy==$6E617373 then
set Ngy=Jgy
set Mgy=$4130434F
call UnitAddAbility(Ngy,Mgy)
endif
if Kgy==$6F677275 then
set why=Jgy
set uhy=$4130434E
call UnitAddAbility(why,uhy)
endif
if Kgy==$6F73686D then
set rhy=Jgy
set shy=$41304350
call UnitAddAbility(rhy,shy)
endif
set Jgy=null
set Lgy=null
set Xgy=null
set Vgy=null
set Ngy=null
set why=null
set rhy=null
endfunction
function jEw takes string TWw returns nothing
local integer YWw
local integer GWw
local unit gWw
local integer hWw
local unit FWw
local real kWw
local real jWw
local integer xWw
local player vWw
local player mWw
local playerstate QWw
local unit WWw
local player EWw
local integer ZWw
local player UWw
local playerstate IWw
local integer PWw
local unit AWw
local player DWw
local player HWw
local playerstate JWw
local unit KWw
local player LWw
local unit XWw
local unit CWw
local unit VWw
local player BWw
local player NWw
local playerstate MWw
local unit wEw
local player uEw
local integer rEw
local player sEw
local playerstate tEw
local integer iEw
local unit SEw
local player cEw
local player oEw
local playerstate OEw
local unit lEw
local player bEw
local unit yEw
local unit pEw
local unit eEw
local player qEw
local unit aEw
local player nEw
local real dEw
local real fEw
local real REw
local unit TEw
local string YEw
local integer GEw
local real gEw
local integer hEw
local string FEw
local unit kEw
set aW[qW]=TWw
set qW=qW+1
if yO!=null then
set YWw=GetSpellAbilityId()
if YWw==$41313449 then
set WWw=yO
set vWw=GetOwningPlayer(WWw)
set mWw=vWw
set QWw=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(mWw,QWw)>=500 then
set AWw=yO
set EWw=GetOwningPlayer(AWw)
set KWw=yO
set DWw=GetOwningPlayer(KWw)
set HWw=DWw
set JWw=PLAYER_STATE_RESOURCE_GOLD
set ZWw=GetPlayerState(HWw,JWw)-500
set UWw=EWw
set IWw=PLAYER_STATE_RESOURCE_GOLD
set PWw=ZWw
call SetPlayerState(UWw,IWw,PWw)
set XWw=yO
set LWw=GetOwningPlayer(XWw)
set GWw=GetPlayerId(LWw)
set hr[GWw]=hr[GWw]-500
set Fr[GWw]=Fr[GWw]-500
call Lki("when calling rerol in AltarGold, line 1156")
else
set CWw=yO
call DisplayTextToPlayer(GetOwningPlayer(CWw),0.,0.,"Not enough Gold ")
endif
endif
if YWw==$41313159 then
set RO=RO+1
endif
if YWw==$41313038 then
set TO=TO+1
endif
if YWw==$41304D4A or YWw==$41304D4D or YWw==$41304F47 or YWw==$41305156 or YWw==$5230314A or YWw==$4143736D or YWw==$41305051 or YWw==$41304F4C or YWw==$41777268 then
set gWw=GetSpellAbilityUnit()
set VWw=gWw
if GetOwningPlayer(VWw)==Ud then
set dO=dO+1
endif
endif
if YWw==$41313346 then
set wEw=yO
set BWw=GetOwningPlayer(wEw)
set NWw=BWw
set MWw=PLAYER_STATE_RESOURCE_GOLD
if GetPlayerState(NWw,MWw)>=5000 and pO==null then
set SEw=yO
set uEw=GetOwningPlayer(SEw)
set lEw=yO
set cEw=GetOwningPlayer(lEw)
set oEw=cEw
set OEw=PLAYER_STATE_RESOURCE_GOLD
set rEw=GetPlayerState(oEw,OEw)-5000
set sEw=uEw
set tEw=PLAYER_STATE_RESOURCE_GOLD
set iEw=rEw
call SetPlayerState(sEw,tEw,iEw)
set yEw=yO
set bEw=GetOwningPlayer(yEw)
set hWw=GetPlayerId(bEw)
set hr[hWw]=hr[hWw]-5000
set Fr[hWw]=Fr[hWw]-5000
set FWw=GetSpellTargetUnit()
set pEw=FWw
set kWw=GetUnitX(pEw)
set eEw=FWw
set jWw=GetUnitY(eEw)
set aEw=yO
set qEw=GetOwningPlayer(aEw)
set eO=Player(GetPlayerId(qEw)+4)
set TEw=yO
set nEw=GetOwningPlayer(TEw)
set dEw=kWw
set fEw=jWw
set REw=10.
if GetLocalPlayer()==nEw then
call PingMinimap(dEw,fEw,REw)
endif
set YEw="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_AltarGold in AltarGold, line 1178"
set aW[qW]=YEw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set GEw=fF
set RF[GEw]=798
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_AltarGold.","when calling error in AltarGold, line 1178")
set GEw=0
endif
else
set dF=dF-1
set GEw=nF[dF]
set RF[GEw]=798
endif
set qW=qW-1
set xWw=GEw
set xk[xWw]=FWw
set vk[xWw]=kWw
set mk[xWw]=jWw
set gEw=5.
set hEw=xWw
set FEw="when calling doAfter in AltarGold, line 1178"
set aW[qW]=FEw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),gEw,hEw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set kEw=yO
call DisplayTextToPlayer(GetOwningPlayer(kEw),0.,0.,"Not enough Gold or Golem is alive")
endif
endif
endif
set qW=qW-1
set gWw=null
set FWw=null
set vWw=null
set mWw=null
set QWw=null
set WWw=null
set EWw=null
set UWw=null
set IWw=null
set AWw=null
set DWw=null
set HWw=null
set JWw=null
set KWw=null
set LWw=null
set XWw=null
set CWw=null
set VWw=null
set BWw=null
set NWw=null
set MWw=null
set wEw=null
set uEw=null
set sEw=null
set tEw=null
set SEw=null
set cEw=null
set oEw=null
set OEw=null
set lEw=null
set bEw=null
set yEw=null
set pEw=null
set eEw=null
set qEw=null
set aEw=null
set nEw=null
set TEw=null
set kEw=null
endfunction
function tne takes nothing returns nothing
set qW=0
call jEw("via function reference AltarGold, line 1147")
endfunction
function tnr takes nothing returns nothing
local unit Nar=GetAttacker()
local unit Mar=Nar
local unit wnr
local unit unr
local unitstate rnr
local boolean snr
if GetUnitTypeId(Mar)==$4830324B then
set wnr=Nar
set unr=wnr
set rnr=UNIT_STATE_LIFE
set snr=GetUnitState(unr,rnr)<2000.
else
set snr=false
endif
if snr then
call IssueTargetOrderById(Nar,852066,Nar)
endif
set Nar=null
set Mar=null
set wnr=null
set unr=null
set rnr=null
endfunction
function toi takes nothing returns boolean
local trigger Hci
local trigger Jci
local rect Kci
local region Lci
local trigger Xci
local boolexpr Cci
local trigger Vci
local trigger Bci
local playerunitevent Nci
local trigger Mci
local playerunitevent woi
local integer uoi
local trigger roi
local boolexpr soi
set bT=CreateTrigger()
set yT=CreateTrigger()
set Hci=bT
call DisableTrigger(Hci)
set Jci=bT
set Kci=bj_mapInitialPlayableArea
set Lci=CreateRegion()
call RegionAddRect(Lci,Kci)
call TriggerRegisterEnterRegion(Jci,Lci,null)
set Xci=bT
set Cci=Condition(U0w)
call TriggerAddCondition(Xci,Cci)
set Vci=yT
call DisableTrigger(Vci)
set Bci=yT
set Nci=EVENT_PLAYER_UNIT_DEATH
set Mci=Bci
set woi=Nci
set uoi=0
loop
call TriggerRegisterPlayerUnitEvent(Mci,Player(uoi),woi,null)
set uoi=uoi+1
exitwhen uoi==bj_MAX_PLAYER_SLOTS
endloop
set roi=yT
set soi=Condition(U0w)
call TriggerAddCondition(roi,soi)
set Hci=null
set Jci=null
set Kci=null
set Lci=null
set Xci=null
set Cci=null
set Vci=null
set Bci=null
set Nci=null
set Mci=null
set woi=null
set roi=null
set soi=null
return true
endfunction
function tsb takes nothing returns boolean
local trigger Arb
local trigger Drb
local playerunitevent Hrb
local trigger Jrb
local playerunitevent Krb
local integer Lrb
local trigger Xrb
local code Crb
local trigger Vrb
local trigger Brb
local playerunitevent Nrb
local trigger Mrb
local playerunitevent wsb
local integer usb
local trigger rsb
local code ssb
set FG=CreateTrigger()
set kG=CreateTrigger()
set Arb=FG
call DisableTrigger(Arb)
set Drb=FG
set Hrb=EVENT_PLAYER_HERO_LEVEL
set Jrb=Drb
set Krb=Hrb
set Lrb=0
loop
call TriggerRegisterPlayerUnitEvent(Jrb,Player(Lrb),Krb,null)
set Lrb=Lrb+1
exitwhen Lrb==bj_MAX_PLAYER_SLOTS
endloop
set Xrb=FG
set Crb=Jww
call TriggerAddAction(Xrb,Crb)
set Vrb=kG
call DisableTrigger(Vrb)
set Brb=kG
set Nrb=EVENT_PLAYER_UNIT_DEATH
set Mrb=Brb
set wsb=Nrb
set usb=0
loop
call TriggerRegisterPlayerUnitEvent(Mrb,Player(usb),wsb,null)
set usb=usb+1
exitwhen usb==bj_MAX_PLAYER_SLOTS
endloop
set rsb=kG
set ssb=Kww
call TriggerAddAction(rsb,ssb)
set Arb=null
set Drb=null
set Hrb=null
set Jrb=null
set Krb=null
set Xrb=null
set Vrb=null
set Brb=null
set Nrb=null
set Mrb=null
set wsb=null
set rsb=null
return true
endfunction
function vni takes string Tni returns nothing
local integer Yni
local unit Gni
local integer gni
local string hni
local integer Fni
local real kni
local integer jni
local string xni
set aW[qW]=Tni
set qW=qW+1
set Yni=GetSpellAbilityId()
if Yni==$41305A35 then
set Gni=GetSpellAbilityUnit()
set hni="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_DraconidRangeBonus in DraconidRangeBonus, line 123"
set aW[qW]=hni
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Fni=fF
set RF[Fni]=808
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_DraconidRangeBonus.","when calling error in DraconidRangeBonus, line 123")
set Fni=0
endif
else
set dF=dF-1
set Fni=nF[dF]
set RF[Fni]=808
endif
set qW=qW-1
set gni=Fni
set kj[gni]=Gni
set kni=1.
set jni=gni
set xni="when calling doAfter in DraconidRangeBonus, line 123"
set aW[qW]=xni
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),kni,jni,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Gni=null
endfunction
function tvw takes nothing returns nothing
set qW=0
call vni("via function reference DraconidRangeBonus, line 119")
endfunction
function u1u takes nothing returns boolean
return true
endfunction
function u2c takes nothing returns boolean
return true
endfunction
function u4o takes nothing returns boolean
local playerunitevent M1o=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code w4o=esw
call emO(M1o,null,w4o,null)
set M1o=null
return true
endfunction
function u5e takes nothing returns boolean
return true
endfunction
function u7s takes nothing returns boolean
return true
endfunction
function u8b takes nothing returns boolean
local trigger B7b
local trigger N7b
local playerunitevent M7b
local integer w8b
set WR=CreateTrigger()
set ER=CreateGroup()
set B7b=WR
call DisableTrigger(B7b)
set N7b=WR
set M7b=EVENT_PLAYER_UNIT_SPELL_CAST
set w8b=0
loop
call TriggerRegisterPlayerUnitEvent(N7b,Player(w8b),M7b,null)
set w8b=w8b+1
exitwhen w8b==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(WR,J9)
set B7b=null
set N7b=null
set M7b=null
return true
endfunction
function u9S takes nothing returns boolean
return true
endfunction
function u9s takes nothing returns boolean
return true
endfunction
function uBe takes nothing returns boolean
local trigger CVe
local trigger VVe
local rect BVe
local region NVe
local trigger MVe
local boolexpr wBe
set La=CreateTrigger()
set CVe=La
call DisableTrigger(CVe)
set VVe=La
set BVe=bj_mapInitialPlayableArea
set NVe=CreateRegion()
call RegionAddRect(NVe,BVe)
call TriggerRegisterEnterRegion(VVe,NVe,null)
set MVe=La
set wBe=Condition(F5)
call TriggerAddCondition(MVe,wBe)
set CVe=null
set VVe=null
set BVe=null
set NVe=null
set MVe=null
set wBe=null
return true
endfunction
function uCl takes nothing returns nothing
local unit LXl=GetResearchingUnit()
local integer XXl=GetResearched()
local unit MXl=LXl
local player CXl=GetOwningPlayer(MXl)
local player wCl=CXl
local integer VXl=GetPlayerId(wCl)
local integer BXl=GetPlayerTechCount(CXl,XXl,true)
local player NXl=Player(VXl+4)
if CXl==Player(0) or CXl==Player(1) or CXl==Player(2) or CXl==Player(3) then
set Pr[VXl]=Pr[VXl]+1
call SetPlayerTechResearched(NXl,XXl,BXl)
if XXl==V[VXl] then
call SetPlayerTechResearched(CXl,$52303433,BXl)
call SetPlayerTechResearched(NXl,$52303433,BXl)
endif
if XXl==B[VXl] then
call SetPlayerTechResearched(CXl,$52303434,BXl)
call SetPlayerTechResearched(NXl,$52303434,BXl)
endif
if XXl==M[VXl] then
call SetPlayerTechResearched(CXl,$52303452,BXl)
call SetPlayerTechResearched(NXl,$52303452,BXl)
endif
if XXl==ww[VXl] then
call SetPlayerTechResearched(CXl,$52303453,BXl)
call SetPlayerTechResearched(NXl,$52303453,BXl)
endif
if XXl==N[VXl] then
call SetPlayerTechResearched(CXl,$52303454,BXl)
call SetPlayerTechResearched(NXl,$52303454,BXl)
endif
endif
set LXl=null
set CXl=null
set NXl=null
set MXl=null
set wCl=null
endfunction
function uFc takes nothing returns boolean
local playerunitevent Mhc=EVENT_PLAYER_UNIT_SPELL_EFFECT
local code wFc=LM
call emO(Mhc,null,wFc,null)
set Mhc=null
return true
endfunction
function uPS takes nothing returns boolean
local trigger LIS
local trigger XIS
local playerunitevent CIS
local trigger VIS
local playerunitevent BIS
local integer NIS
local trigger MIS
local boolexpr wPS
set fp=CreateTrigger()
set LIS=fp
call DisableTrigger(LIS)
set XIS=fp
set CIS=EVENT_PLAYER_UNIT_DEATH
set VIS=XIS
set BIS=CIS
set NIS=0
loop
call TriggerRegisterPlayerUnitEvent(VIS,Player(NIS),BIS,null)
set NIS=NIS+1
exitwhen NIS==bj_MAX_PLAYER_SLOTS
endloop
set MIS=fp
set wPS=Condition(Y4)
call TriggerAddCondition(MIS,wPS)
set LIS=null
set XIS=null
set CIS=null
set VIS=null
set BIS=null
set MIS=null
set wPS=null
return true
endfunction
function uQy takes nothing returns boolean
local trigger Bmy
local trigger Nmy
local playerunitevent Mmy
local integer wQy
set pY=CreateTrigger()
set Bmy=pY
call DisableTrigger(Bmy)
set Nmy=pY
set Mmy=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wQy=0
loop
call TriggerRegisterPlayerUnitEvent(Nmy,Player(wQy),Mmy,null)
set wQy=wQy+1
exitwhen wQy==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(pY,xww_3567)
set Bmy=null
set Nmy=null
set Mmy=null
return true
endfunction
function uVc takes nothing returns boolean
set xe=CreateSound("BlackPick.mp3",false,false,false,127,127,"DefaultEAXON")
set ve=CreateSound("RedPick.mp3",false,false,false,127,127,"DefaultEAXON")
set me=CreateSound("BluePick.mp3",false,false,false,127,127,"DefaultEAXON")
set Qe=CreateSound("VioletPick.mp3",false,false,false,127,127,"DefaultEAXON")
set We=CreateSound("GreenPick.mp3",false,false,false,127,127,"DefaultEAXON")
set Ee=CreateSound("RainbowSummon.mp3",false,false,false,127,127,"DefaultEAXON")
set Ze=null
return true
endfunction
function u_r takes nothing returns nothing
local integer D0r=GetResearched()
local unit H0r
local player J0r
local integer K0r
local unit L0r
local unit X0r
local integer C0r
local player V0r
local unit B0r
local integer N0r
local integer M0r
local player w_r
if D0r==$524D3034 then
set H0r=GetTriggerUnit()
set L0r=H0r
set J0r=GetOwningPlayer(L0r)
set K0r=GetPlayerTechCount(J0r,$524D3034,true)
if K0r==1 then
set V0r=J0r
set X0r=c[GetPlayerId(V0r)]
set C0r=$414D3067
call UnitAddAbility(X0r,C0r)
else
set w_r=J0r
set B0r=c[GetPlayerId(w_r)]
set N0r=$414D3067
set M0r=K0r
call SetUnitAbilityLevel(B0r,N0r,M0r)
endif
call SetPlayerTechResearched(J0r,$524D3035,K0r)
endif
set H0r=null
set J0r=null
set L0r=null
set X0r=null
set V0r=null
set B0r=null
set w_r=null
endfunction
function ubl takes nothing returns nothing
local integer vll=GetSpellAbilityId()
local unit mll
local unit Qll
local unit Wll
local unit Ell
local unit Zll
local unit Ull
local real Ill
local unit Pll
local integer All
local unit Dll
local string Hll
local real Jll
local real Kll
local unit Lll
local unit Xll
local unit Cll
local player Vll
local real Bll
local real Nll
local real Mll
local real wbl
if vll==$41304C34 then
set mll=GetSpellAbilityUnit()
set Wll=mll
set Vll=GetOwningPlayer(Wll)
set Ell=mll
set Bll=GetUnitX(Ell)
set Zll=mll
set Qll=CreateUnit(Vll,$75303030,Bll,GetUnitY(Zll),270.)
set Ull=Qll
set Ill=6.
call UnitApplyTimedLife(Ull,$42544C46,Ill)
set Pll=Qll
set All=$41303732
call UnitAddAbility(Pll,All)
set Dll=Qll
set Hll="rainoffire"
set Lll=mll
set Xll=Lll
set Nll=GetUnitX(Xll)
set Cll=Lll
set Mll=Nll
set wbl=GetUnitY(Cll)
set Jll=Mll
set Kll=wbl
call IssuePointOrder(Dll,Hll,Jll,Kll)
endif
set mll=null
set Qll=null
set Wll=null
set Ell=null
set Zll=null
set Ull=null
set Pll=null
set Dll=null
set Lll=null
set Xll=null
set Cll=null
set Vll=null
endfunction
function ucS takes nothing returns boolean
return true
endfunction
function ucw takes nothing returns boolean
local trigger KSw
local playerunitevent LSw
local trigger XSw
local playerunitevent CSw
local integer VSw
local trigger BSw
local boolexpr NSw
local trigger MSw
local code wcw
set ty=CreateTrigger()
set KSw=ty
set LSw=EVENT_PLAYER_UNIT_DEATH
set XSw=KSw
set CSw=LSw
set VSw=0
loop
call TriggerRegisterPlayerUnitEvent(XSw,Player(VSw),CSw,null)
set VSw=VSw+1
exitwhen VSw==bj_MAX_PLAYER_SLOTS
endloop
set BSw=ty
set NSw=Condition(c1)
call TriggerAddCondition(BSw,NSw)
set MSw=ty
set wcw=o1
call TriggerAddAction(MSw,wcw)
set KSw=null
set LSw=null
set XSw=null
set CSw=null
set BSw=null
set NSw=null
set MSw=null
return true
endfunction
function X4t takes string XBt returns nothing
local trigger CBt
local unit VBt
local player BBt
local player NBt
local integer MBt
local real wNt
local real uNt
local integer rNt
local integer sNt
local integer tNt
local integer iNt
local integer SNt
local integer cNt
local integer oNt
local integer ONt
local integer lNt
local integer bNt
local integer yNt
local real pNt
local real eNt
local integer qNt
local integer aNt
local integer nNt
local integer dNt
local integer fNt
local integer RNt
local integer TNt
local integer YNt
local integer GNt
local integer gNt
local integer hNt
local integer FNt
local unit kNt
local player jNt
local player xNt
local trigger vNt
local unit mNt
local sound QNt
local unit WNt
local player ENt
local boolean ZNt
local player UNt
local integer INt
local player PNt
local playerstate ANt
local integer DNt
local player HNt
local playerstate JNt
local string KNt
local real LNt
local string XNt
local real CNt
local unit VNt
local player BNt
local boolean NNt
local unit MNt
local unit wMt
local unit uMt
local unit rMt
local integer sMt
local unit tMt
local integer iMt
local unit SMt
local integer cMt
local integer oMt
local unit OMt
local unit lMt
local integer bMt
local unit yMt
local integer pMt
local unit eMt
local integer qMt
local integer aMt
local unit nMt
local unit dMt
local integer fMt
local unit RMt
local integer TMt
local unit YMt
local integer GMt
local integer gMt
local unit hMt
local unit FMt
local integer kMt
local unit jMt
local integer xMt
local unit vMt
local integer mMt
local integer QMt
local unit WMt
local unit EMt
local integer ZMt
local unit UMt
local integer IMt
local unit PMt
local integer AMt
local unit DMt
local integer HMt
local integer JMt
local unit KMt
local integer LMt
local unit XMt
local integer CMt
local integer VMt
local unit BMt
local unit NMt
local integer MMt
local unit w3t
local unit u3t
local integer r3t
local unit s3t
local unit t3t
local integer i3t
local unit S3t
local integer c3t
local unit o3t
local integer O3t
local integer l3t
local unit b3t
local unit y3t
local integer p3t
local unit e3t
local integer q3t
local unit a3t
local integer n3t
local integer d3t
local unit f3t
local unit R3t
local integer T3t
local unit Y3t
local integer G3t
local unit g3t
local integer h3t
local integer F3t
local unit k3t
local unit j3t
local integer x3t
local unit v3t
local integer m3t
local unit Q3t
local integer W3t
local integer E3t
local unit Z3t
local unit U3t
local integer I3t
local unit P3t
local integer A3t
local unit D3t
local integer H3t
local integer J3t
local unit K3t
local unit L3t
local unit X3t
local integer C3t
local unit V3t
local unit B3t
local integer N3t
local unit M3t
local integer w1t
local unit u1t
local integer r1t
local integer s1t
local unit t1t
local unit i1t
local integer S1t
local unit c1t
local integer o1t
local unit O1t
local integer l1t
local integer b1t
local unit y1t
local unit p1t
local integer e1t
local unit q1t
local integer a1t
local unit n1t
local integer d1t
local integer f1t
local unit R1t
local unit T1t
local integer Y1t
local unit G1t
local integer g1t
local unit h1t
local integer F1t
local integer k1t
local unit j1t
local unit x1t
local integer v1t
local unit m1t
local integer Q1t
local unit W1t
local integer E1t
local unit Z1t
local integer U1t
local integer I1t
local unit P1t
local integer A1t
local unit D1t
local integer H1t
local integer J1t
local unit K1t
local unit L1t
local integer X1t
local unit C1t
local unit V1t
local integer B1t
local unit N1t
local unit M1t
local integer w4t
local unit u4t
local integer r4t
local unit s4t
local integer t4t
local integer i4t
local unit S4t
local unit c4t
local integer o4t
local unit O4t
local integer l4t
local unit b4t
local integer y4t
local integer p4t
local unit e4t
local unit q4t
local integer a4t
local unit n4t
local integer d4t
local unit f4t
local integer R4t
local integer T4t
local unit Y4t
local unit G4t
local integer g4t
local unit h4t
local integer F4t
local unit k4t
local integer j4t
local integer x4t
local unit v4t
local unit m4t
local integer Q4t
local unit W4t
local integer E4t
local unit Z4t
local integer U4t
local integer I4t
local string P4t
local integer A4t
local real D4t
local integer H4t
local string J4t
local player K4t
local playerstate L4t
set aW[qW]=XBt
set qW=qW+1
set CBt=GetTriggeringTrigger()
set VBt=GetEnteringUnit()
set kNt=VBt
set BBt=GetOwningPlayer(kNt)
set jNt=BBt
set NBt=Player(GetPlayerId(jNt)-4)
set xNt=NBt
set MBt=GetPlayerId(xNt)
set vNt=CBt
call DisableTrigger(vNt)
set mNt=G[4]
if GetOwningPlayer(mNt)==Player(15) then
set QNt=bj_questUpdatedSound
call StartSound(QNt)
set WNt=G[4]
set ENt=NBt
set ZNt=false
call SetUnitOwner(WNt,ENt,ZNt)
call UuS(G[4],75)
set UNt=NBt
set INt=75
set PNt=UNt
set ANt=PLAYER_STATE_RESOURCE_GOLD
set DNt=INt
set K4t=PNt
set L4t=ANt
set HNt=PNt
set JNt=ANt
call SetPlayerState(K4t,L4t,GetPlayerState(HNt,JNt)+DNt)
set KNt=Aw[MBt]+GetPlayerName(NBt)+"|r"+" has captured neutral building!"
set LNt=10.
set XNt=KNt
set CNt=LNt
call DisplayTimedTextToPlayer(IY,0.,0.,CNt,XNt)
set hr[MBt]=hr[MBt]+75
set Fr[MBt]=Fr[MBt]+75
set Vr[MBt]=Vr[MBt]+75
else
set VNt=G[4]
set BNt=NBt
set NNt=false
call SetUnitOwner(VNt,BNt,NNt)
endif
if NBt==Ud and GetPlayerTechCount(Ud,$52303644,true)>0 then
set MNt=G[4]
set wNt=GetUnitX(MNt)
set wMt=G[4]
set uNt=GetUnitY(wMt)
set g[4]=CreateUnit(Ud,$6E303349,wNt,uNt,0.)
set uMt=G[4]
if GetUnitTypeId(uMt)==$6E676164 then
set rMt=G[4]
set sMt=$41303042
set rNt=GetUnitAbilityLevel(rMt,sMt)
set tMt=g[4]
set iMt=$41313053
call UnitAddAbility(tMt,iMt)
set SMt=g[4]
set cMt=$41313053
set oMt=rNt
call SetUnitAbilityLevel(SMt,cMt,oMt)
endif
set OMt=G[4]
if GetUnitTypeId(OMt)==$6E64727A then
set lMt=G[4]
set bMt=$41303852
set sNt=GetUnitAbilityLevel(lMt,bMt)
set yMt=g[4]
set pMt=$41313049
call UnitAddAbility(yMt,pMt)
set eMt=g[4]
set qMt=$41313049
set aMt=sNt
call SetUnitAbilityLevel(eMt,qMt,aMt)
endif
set nMt=G[4]
if GetUnitTypeId(nMt)==$6E647267 then
set dMt=G[4]
set fMt=$41303856
set tNt=GetUnitAbilityLevel(dMt,fMt)
set RMt=g[4]
set TMt=$41313054
call UnitAddAbility(RMt,TMt)
set YMt=g[4]
set GMt=$41313054
set gMt=tNt
call SetUnitAbilityLevel(YMt,GMt,gMt)
endif
set hMt=G[4]
if GetUnitTypeId(hMt)==$6E676D65 then
set FMt=G[4]
set kMt=$4130384F
set iNt=GetUnitAbilityLevel(FMt,kMt)
set jMt=g[4]
set xMt=$4131304A
call UnitAddAbility(jMt,xMt)
set vMt=g[4]
set mMt=$4131304A
set QMt=iNt
call SetUnitAbilityLevel(vMt,mMt,QMt)
endif
set WMt=G[4]
if GetUnitTypeId(WMt)==$6E647272 then
set EMt=G[4]
set ZMt=$41303858
set SNt=GetUnitAbilityLevel(EMt,ZMt)
set UMt=G[4]
set IMt=$41303859
set cNt=GetUnitAbilityLevel(UMt,IMt)
set PMt=g[4]
set AMt=$4131304B
call UnitAddAbility(PMt,AMt)
set DMt=g[4]
set HMt=$4131304B
set JMt=SNt
call SetUnitAbilityLevel(DMt,HMt,JMt)
set KMt=g[4]
set LMt=$4131304C
call UnitAddAbility(KMt,LMt)
set XMt=g[4]
set CMt=$4131304C
set VMt=cNt
call SetUnitAbilityLevel(XMt,CMt,VMt)
endif
set BMt=G[4]
if GetUnitTypeId(BMt)==$6E6D7232 then
set NMt=g[4]
set MMt=$41303853
call UnitAddAbility(NMt,MMt)
endif
set w3t=G[4]
if GetUnitTypeId(w3t)==$6E676F6C then
set u3t=g[4]
set r3t=$41303853
call UnitAddAbility(u3t,r3t)
endif
set s3t=G[4]
if GetUnitTypeId(s3t)==$6E64726F then
set t3t=G[4]
set i3t=$41303855
set oNt=GetUnitAbilityLevel(t3t,i3t)
set S3t=g[4]
set c3t=$4131304E
call UnitAddAbility(S3t,c3t)
set o3t=g[4]
set O3t=$4131304E
set l3t=oNt
call SetUnitAbilityLevel(o3t,O3t,l3t)
endif
set b3t=G[4]
if GetUnitTypeId(b3t)==$6E776774 then
set y3t=G[4]
set p3t=$41303850
set ONt=GetUnitAbilityLevel(y3t,p3t)
set e3t=g[4]
set q3t=$4131304F
call UnitAddAbility(e3t,q3t)
set a3t=g[4]
set n3t=$4131304F
set d3t=ONt
call SetUnitAbilityLevel(a3t,n3t,d3t)
endif
set f3t=G[4]
if GetUnitTypeId(f3t)==$6E647275 then
set R3t=G[4]
set T3t=$4130384E
set lNt=GetUnitAbilityLevel(R3t,T3t)
set Y3t=g[4]
set G3t=$41313050
call UnitAddAbility(Y3t,G3t)
set g3t=g[4]
set h3t=$41313050
set F3t=lNt
call SetUnitAbilityLevel(g3t,h3t,F3t)
endif
set k3t=G[4]
if GetUnitTypeId(k3t)==$6E666F68 then
set j3t=G[4]
set x3t=$4130384D
set bNt=GetUnitAbilityLevel(j3t,x3t)
set v3t=g[4]
set m3t=$41313051
call UnitAddAbility(v3t,m3t)
set Q3t=g[4]
set W3t=$41313051
set E3t=bNt
call SetUnitAbilityLevel(Q3t,W3t,E3t)
endif
set Z3t=G[4]
if GetUnitTypeId(Z3t)==$6E64726B then
set U3t=G[4]
set I3t=$41303851
set yNt=GetUnitAbilityLevel(U3t,I3t)
set P3t=g[4]
set A3t=$41313052
call UnitAddAbility(P3t,A3t)
set D3t=g[4]
set H3t=$41313052
set J3t=yNt
call SetUnitAbilityLevel(D3t,H3t,J3t)
endif
endif
if NBt!=Ud and g[4]!=null then
call RemoveUnit(g[4])
set g[4]=null
endif
if NBt==Ud and fq==true then
set K3t=G[4]
set pNt=GetUnitX(K3t)
set L3t=G[4]
set eNt=GetUnitY(L3t)
set h[4]=CreateUnit(Ud,$6E303349,pNt,eNt,0.)
set X3t=h[4]
set C3t=$4545564F
call UnitAddAbility(X3t,C3t)
set V3t=G[4]
if GetUnitTypeId(V3t)==$6E676164 then
set B3t=G[4]
set N3t=$41303042
set qNt=GetUnitAbilityLevel(B3t,N3t)
set M3t=h[4]
set w1t=$41313641
call UnitAddAbility(M3t,w1t)
set u1t=h[4]
set r1t=$41313641
set s1t=qNt
call SetUnitAbilityLevel(u1t,r1t,s1t)
endif
set t1t=G[4]
if GetUnitTypeId(t1t)==$6E64727A then
set i1t=G[4]
set S1t=$41303852
set aNt=GetUnitAbilityLevel(i1t,S1t)
set c1t=h[4]
set o1t=$41313630
call UnitAddAbility(c1t,o1t)
set O1t=h[4]
set l1t=$41313630
set b1t=aNt
call SetUnitAbilityLevel(O1t,l1t,b1t)
endif
set y1t=G[4]
if GetUnitTypeId(y1t)==$6E647267 then
set p1t=G[4]
set e1t=$41303856
set nNt=GetUnitAbilityLevel(p1t,e1t)
set q1t=h[4]
set a1t=$41313642
call UnitAddAbility(q1t,a1t)
set n1t=h[4]
set d1t=$41313642
set f1t=nNt
call SetUnitAbilityLevel(n1t,d1t,f1t)
endif
set R1t=G[4]
if GetUnitTypeId(R1t)==$6E676D65 then
set T1t=G[4]
set Y1t=$4130384F
set dNt=GetUnitAbilityLevel(T1t,Y1t)
set G1t=h[4]
set g1t=$41313631
call UnitAddAbility(G1t,g1t)
set h1t=h[4]
set F1t=$41313631
set k1t=dNt
call SetUnitAbilityLevel(h1t,F1t,k1t)
endif
set j1t=G[4]
if GetUnitTypeId(j1t)==$6E647272 then
set x1t=G[4]
set v1t=$41303858
set fNt=GetUnitAbilityLevel(x1t,v1t)
set m1t=G[4]
set Q1t=$41303859
set RNt=GetUnitAbilityLevel(m1t,Q1t)
set W1t=h[4]
set E1t=$41313632
call UnitAddAbility(W1t,E1t)
set Z1t=h[4]
set U1t=$41313633
set I1t=fNt
call SetUnitAbilityLevel(Z1t,U1t,I1t)
set P1t=h[4]
set A1t=$41313632
call UnitAddAbility(P1t,A1t)
set D1t=h[4]
set H1t=$41313633
set J1t=RNt
call SetUnitAbilityLevel(D1t,H1t,J1t)
endif
set K1t=G[4]
if GetUnitTypeId(K1t)==$6E6D7232 then
set L1t=h[4]
set X1t=$41303853
call UnitAddAbility(L1t,X1t)
endif
set C1t=G[4]
if GetUnitTypeId(C1t)==$6E676F6C then
set V1t=h[4]
set B1t=$41303853
call UnitAddAbility(V1t,B1t)
endif
set N1t=G[4]
if GetUnitTypeId(N1t)==$6E64726F then
set M1t=G[4]
set w4t=$41303855
set TNt=GetUnitAbilityLevel(M1t,w4t)
set u4t=h[4]
set r4t=$41313635
call UnitAddAbility(u4t,r4t)
set s4t=h[4]
set t4t=$41313635
set i4t=TNt
call SetUnitAbilityLevel(s4t,t4t,i4t)
endif
set S4t=G[4]
if GetUnitTypeId(S4t)==$6E776774 then
set c4t=G[4]
set o4t=$41303850
set YNt=GetUnitAbilityLevel(c4t,o4t)
set O4t=h[4]
set l4t=$41313636
call UnitAddAbility(O4t,l4t)
set b4t=h[4]
set y4t=$41313636
set p4t=YNt
call SetUnitAbilityLevel(b4t,y4t,p4t)
endif
set e4t=G[4]
if GetUnitTypeId(e4t)==$6E647275 then
set q4t=G[4]
set a4t=$4130384E
set GNt=GetUnitAbilityLevel(q4t,a4t)
set n4t=h[4]
set d4t=$41313637
call UnitAddAbility(n4t,d4t)
set f4t=h[4]
set R4t=$41313637
set T4t=GNt
call SetUnitAbilityLevel(f4t,R4t,T4t)
endif
set Y4t=G[4]
if GetUnitTypeId(Y4t)==$6E666F68 then
set G4t=G[4]
set g4t=$4130384D
set gNt=GetUnitAbilityLevel(G4t,g4t)
set h4t=h[4]
set F4t=$41313638
call UnitAddAbility(h4t,F4t)
set k4t=h[4]
set j4t=$41313638
set x4t=gNt
call SetUnitAbilityLevel(k4t,j4t,x4t)
endif
set v4t=G[4]
if GetUnitTypeId(v4t)==$6E64726B then
set m4t=G[4]
set Q4t=$41303851
set hNt=GetUnitAbilityLevel(m4t,Q4t)
set W4t=h[4]
set E4t=$41313639
call UnitAddAbility(W4t,E4t)
set Z4t=h[4]
set U4t=$41313639
set I4t=hNt
call SetUnitAbilityLevel(Z4t,U4t,I4t)
endif
endif
if NBt!=Ud and h[4]!=null then
call RemoveUnit(h[4])
set h[4]=null
endif
set P4t="when calling alloc_CallbackSingle_doAfter_NeutralStructures in NeutralStructures, line 623"
set aW[qW]=P4t
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set A4t=fF
set RF[A4t]=738
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_NeutralStructures.","when calling error in NeutralStructures, line 623")
set A4t=0
endif
else
set dF=dF-1
set A4t=nF[dF]
set RF[A4t]=738
endif
set qW=qW-1
set FNt=A4t
set Wm[FNt]=CBt
set D4t=2.
set H4t=FNt
set J4t="when calling doAfter in NeutralStructures, line 623"
set aW[qW]=J4t
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),D4t,H4t,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
set qW=qW-1
set CBt=null
set VBt=null
set BBt=null
set NBt=null
set kNt=null
set jNt=null
set xNt=null
set vNt=null
set mNt=null
set QNt=null
set WNt=null
set ENt=null
set UNt=null
set PNt=null
set ANt=null
set HNt=null
set JNt=null
set VNt=null
set BNt=null
set MNt=null
set wMt=null
set uMt=null
set rMt=null
set tMt=null
set SMt=null
set OMt=null
set lMt=null
set yMt=null
set eMt=null
set nMt=null
set dMt=null
set RMt=null
set YMt=null
set hMt=null
set FMt=null
set jMt=null
set vMt=null
set WMt=null
set EMt=null
set UMt=null
set PMt=null
set DMt=null
set KMt=null
set XMt=null
set BMt=null
set NMt=null
set w3t=null
set u3t=null
set s3t=null
set t3t=null
set S3t=null
set o3t=null
set b3t=null
set y3t=null
set e3t=null
set a3t=null
set f3t=null
set R3t=null
set Y3t=null
set g3t=null
set k3t=null
set j3t=null
set v3t=null
set Q3t=null
set Z3t=null
set U3t=null
set P3t=null
set D3t=null
set K3t=null
set L3t=null
set X3t=null
set V3t=null
set B3t=null
set M3t=null
set u1t=null
set t1t=null
set i1t=null
set c1t=null
set O1t=null
set y1t=null
set p1t=null
set q1t=null
set n1t=null
set R1t=null
set T1t=null
set G1t=null
set h1t=null
set j1t=null
set x1t=null
set m1t=null
set W1t=null
set Z1t=null
set P1t=null
set D1t=null
set K1t=null
set L1t=null
set C1t=null
set V1t=null
set N1t=null
set M1t=null
set u4t=null
set s4t=null
set S4t=null
set c4t=null
set O4t=null
set b4t=null
set e4t=null
set q4t=null
set n4t=null
set f4t=null
set Y4t=null
set G4t=null
set h4t=null
set k4t=null
set v4t=null
set m4t=null
set W4t=null
set Z4t=null
set K4t=null
set L4t=null
endfunction
function uhS takes nothing returns nothing
set qW=0
call X4t("via function reference NeutralStructures, line 1741")
endfunction
function ukp takes nothing returns boolean
local playerunitevent MFp=EVENT_PLAYER_UNIT_SPELL_CAST
local code wkp=Krw
call emO(MFp,null,wkp,null)
set MFp=null
return true
endfunction
function une takes nothing returns boolean
return true
endfunction
function uow takes nothing returns boolean
local trigger Lcw
local trigger Xcw
local playerunitevent Ccw
local trigger Vcw
local playerunitevent Bcw
local integer Ncw
local trigger Mcw
local code wow
set np=CreateTrigger()
set Lcw=np
call DisableTrigger(Lcw)
set Xcw=np
set Ccw=EVENT_PLAYER_UNIT_DEATH
set Vcw=Xcw
set Bcw=Ccw
set Ncw=0
loop
call TriggerRegisterPlayerUnitEvent(Vcw,Player(Ncw),Bcw,null)
set Ncw=Ncw+1
exitwhen Ncw==bj_MAX_PLAYER_SLOTS
endloop
set Mcw=np
set wow=R4
call TriggerAddAction(Mcw,wow)
set Lcw=null
set Xcw=null
set Ccw=null
set Vcw=null
set Bcw=null
set Mcw=null
return true
endfunction
function usO takes nothing returns boolean
local playerunitevent BrO
local code NrO
local trigger MrO
local code wsO
set jh=CreateTrigger()
set BrO=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NrO=Gsw
call emO(BrO,null,NrO,null)
set MrO=jh
set wsO=gsw
call TriggerAddAction(MrO,wsO)
set BrO=null
set MrO=null
return true
endfunction
function uwS takes nothing returns boolean
local playerunitevent M_S=EVENT_PLAYER_UNIT_ATTACKED
local code wwS=puw
call emO(M_S,null,wwS,null)
set M_S=null
return true
endfunction
function uwt takes nothing returns boolean
local trigger L_t
local trigger X_t
local playerunitevent C_t
local trigger V_t
local playerunitevent B_t
local integer N_t
local trigger M_t
local code wwt
set eY=CreateTrigger()
set qY=CreateSound("Units\\Orc\\Tauren\\TaurenWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
set L_t=eY
call DisableTrigger(L_t)
set X_t=eY
set C_t=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set V_t=X_t
set B_t=C_t
set N_t=0
loop
call TriggerRegisterPlayerUnitEvent(V_t,Player(N_t),B_t,null)
set N_t=N_t+1
exitwhen N_t==bj_MAX_PLAYER_SLOTS
endloop
set M_t=eY
set wwt=vww_3431
call TriggerAddAction(M_t,wwt)
set L_t=null
set X_t=null
set C_t=null
set V_t=null
set B_t=null
set M_t=null
return true
endfunction
function v0r takes nothing returns nothing
local unit p0r=GetAttacker()
local unit n0r=p0r
local real e0r
local real q0r
local unit a0r
local unit d0r
local integer f0r
local unit R0r
local unit T0r
local unit Y0r
local unit G0r
local integer g0r
local unit h0r
local real F0r
local unit k0r
local string j0r
local widget x0r
if GetUnitTypeId(n0r)==$484D3037 then
set d0r=p0r
set f0r=$494D3073
if RTS(d0r,f0r)!=null then
set R0r=p0r
set e0r=GetUnitX(R0r)
set T0r=p0r
set q0r=GetUnitY(T0r)
set Y0r=p0r
set a0r=CreateUnit(GetOwningPlayer(Y0r),$75303030,e0r,q0r,0.)
set G0r=a0r
set g0r=$414D326E
call UnitAddAbility(G0r,g0r)
set h0r=a0r
set F0r=3.
call UnitApplyTimedLife(h0r,$42544C46,F0r)
set k0r=a0r
set j0r="shadowstrike"
set x0r=GetTriggerUnit()
call IssueTargetOrder(k0r,j0r,x0r)
endif
endif
set p0r=null
set a0r=null
set n0r=null
set d0r=null
set R0r=null
set T0r=null
set Y0r=null
set G0r=null
set h0r=null
set k0r=null
set x0r=null
endfunction
function v0s takes nothing returns boolean
return true
endfunction
function v1b takes nothing returns boolean
local playerunitevent j1b=EVENT_PLAYER_UNIT_UPGRADE_FINISH
local code x1b=u3
call emO(j1b,null,x1b,null)
set j1b=null
return true
endfunction
function v5s takes nothing returns nothing
local unit O5s=GetEnteringUnit()
local unit b5s=O5s
local integer l5s=GetPlayerTechCount(GetOwningPlayer(b5s),$52303542,true)
local unit y5s=O5s
local unit p5s
local integer e5s
local unit q5s
local integer a5s
local integer n5s
local unit d5s
local integer f5s
local unit R5s
local integer T5s
local integer Y5s
local unit G5s
local integer g5s
local unit h5s
local integer F5s
local unit k5s
local integer j5s
local integer x5s
if GetUnitTypeId(y5s)==$6E303141 then
if l5s>=2 then
set p5s=O5s
set e5s=$41414138
call UnitAddAbility(p5s,e5s)
set q5s=O5s
set a5s=$41414138
set n5s=l5s-1
call SetUnitAbilityLevel(q5s,a5s,n5s)
endif
if l5s==3 then
set d5s=O5s
set f5s=$41305554
call UnitAddAbility(d5s,f5s)
set R5s=O5s
set T5s=$41305554
set Y5s=3
call SetUnitAbilityLevel(R5s,T5s,Y5s)
endif
if l5s==4 then
set G5s=O5s
set g5s=$41313439
call UnitAddAbility(G5s,g5s)
set h5s=O5s
set F5s=$41305554
call UnitAddAbility(h5s,F5s)
set k5s=O5s
set j5s=$41305554
set x5s=5
call SetUnitAbilityLevel(k5s,j5s,x5s)
endif
endif
set O5s=null
set b5s=null
set y5s=null
set p5s=null
set q5s=null
set d5s=null
set R5s=null
set G5s=null
set h5s=null
set k5s=null
endfunction
function v9u takes nothing returns nothing
local rect x9u=Ec
set Xo[3]=Location(GetRectCenterX(x9u),GetRectCenterY(x9u))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set x9u=null
endfunction
function cNS takes string LBS returns nothing
local unit XBS
local integer CBS
local real VBS
local real BBS
local filterfunc NBS
local unit MBS
local unit wNS
local unit uNS
local string rNS
local integer sNS
local real tNS
local real iNS
local real SNS
set aW[qW]=LBS
set qW=qW+1
set XBS=GetEnumUnit()
set MBS=XBS
set wNS=MBS
set tNS=GetUnitX(wNS)
set uNS=MBS
set iNS=tNS
set SNS=GetUnitY(uNS)
set VBS=iNS
set BBS=SNS
set NBS=Filter(nN)
set rNS="when calling alloc_ForGroupCallback_forNearestUnit_AgroBaza in AgroBaza, line 52"
set aW[qW]=rNS
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set sNS=qF
set aF[sNS]=863
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_AgroBaza.","when calling error in AgroBaza, line 52")
set sNS=0
endif
else
set eF=eF-1
set sNS=pF[eF]
set aF[sNS]=863
endif
set qW=qW-1
set CBS=sNS
set ak[CBS]=XBS
call WXp(4,0,null,null,VBS,BBS,400.,false,0,null,NBS,CBS,"when calling forNearestUnit in AgroBaza, line 52")
set qW=qW-1
set XBS=null
set NBS=null
set MBS=null
set wNS=null
set uNS=null
endfunction
function vBl takes nothing returns nothing
set qW=0
call cNS("via function reference AgroBaza, line 62")
endfunction
function vCt takes nothing returns boolean
local trigger pCt
local trigger eCt
local trigger qCt
local rect aCt
local region nCt
local trigger dCt
local code fCt
local trigger RCt
local trigger TCt
local playerunitevent YCt
local code GCt
local playerunitevent gCt
local code hCt
local playerunitevent FCt
local code kCt
local playerunitevent jCt
local code xCt
set kT=null
set jT=null
set xT=CreateTimer()
set vT=CreateTrigger()
set mT=CreateTrigger()
set QT=CreateTrigger()
set WT=CreateTrigger()
set PT=false
set AT=false
set DT=false
set HT=false
set JT=false
set KT=null
set LT=null
set XT=null
set CT=null
set pCt=vT
call DisableTrigger(pCt)
call TriggerRegisterTimerEvent(vT,1.,true)
call TriggerAddAction(vT,M0w)
set eCt=mT
call DisableTrigger(eCt)
set qCt=mT
set aCt=bj_mapInitialPlayableArea
set nCt=CreateRegion()
call RegionAddRect(nCt,aCt)
call TriggerRegisterEnterRegion(qCt,nCt,null)
set dCt=mT
set fCt=www
call TriggerAddAction(dCt,fCt)
set RCt=QT
call DisableTrigger(RCt)
call TriggerRegisterTimerEvent(QT,60.,true)
call TriggerAddAction(QT,uww)
set TCt=WT
call DisableTrigger(TCt)
call TriggerRegisterTimerEvent(WT,120.,true)
call TriggerAddAction(WT,rww)
set YCt=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GCt=sww
call emO(YCt,null,GCt,null)
set gCt=EVENT_PLAYER_UNIT_DEATH
set hCt=tww
call emO(gCt,null,hCt,null)
set FCt=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kCt=iww
call emO(FCt,null,kCt,null)
set jCt=EVENT_PLAYER_UNIT_SPELL_CAST
set xCt=Sww
call emO(jCt,null,xCt,null)
set pCt=null
set eCt=null
set qCt=null
set aCt=null
set nCt=null
set dCt=null
set RCt=null
set TCt=null
set YCt=null
set gCt=null
set FCt=null
set jCt=null
return true
endfunction
function vCu takes nothing returns nothing
local unit TCu=GetEnteringUnit()
local unit GCu=TCu
local integer YCu=GetUnitTypeId(GCu)
local unit gCu
local integer hCu
local unit FCu
local integer kCu
local unit jCu
local integer xCu
if YCu==$6E62656C or YCu==$68737074 or YCu==$68736F72 or YCu==$686D7072 or YCu==$65736864 or YCu==$68646877 then
set gCu=TCu
set hCu=$41304A31
call UnitAddAbility(gCu,hCu)
endif
if YCu==$6E62656C or YCu==$686D7072 then
set FCu=TCu
set kCu=$4130424D
call UnitAddAbility(FCu,kCu)
endif
if YCu==$68736F72 then
set jCu=TCu
set xCu=$41304446
call UnitAddAbility(jCu,xCu)
endif
set TCu=null
set GCu=null
set gCu=null
set FCu=null
set jCu=null
endfunction
function vEp takes nothing returns boolean
return true
endfunction
function vGl takes nothing returns boolean
local unit FGl=GetFilterUnit()
local unit kGl=FGl
local unittype jGl=UNIT_TYPE_STRUCTURE
local boolean xGl=not IsUnitType(kGl,jGl)
set FGl=null
set kGl=null
set jGl=null
return xGl
endfunction
function vGy takes nothing returns nothing
local unit gGy=GetTriggerUnit()
local unit hGy=gGy
local unit FGy
local integer kGy
local unit jGy
local boolean xGy
if GetUnitTypeId(hGy)==$5530304A then
set FGy=gGy
set kGy=$62726971
set xGy=RTS(FGy,kGy)!=null==true
else
set xGy=false
endif
if xGy and Ey==false then
set Ey=true
set Zy=true
set jGy=gGy
set Wy=GetOwningPlayer(jGy)
set Qy=CreateTimer()
call TimerStart(Qy,1.,false,V1)
endif
set gGy=null
set hGy=null
set FGy=null
set jGy=null
endfunction
function vMr takes nothing returns nothing
local unit dMr=fg
local unit fMr=dMr
local unitstate RMr=UNIT_STATE_LIFE
local trigger TMr
local unit YMr
local real GMr
local unit gMr
local unitstate hMr
local real FMr
local unit kMr
local unit jMr
local unitstate xMr
if GetUnitState(fMr,RMr)<0. then
set TMr=dg
call DestroyTrigger(TMr)
endif
set YMr=fg
set kMr=Rg
set jMr=kMr
set xMr=UNIT_STATE_MANA
set GMr=GetUnitState(jMr,xMr)
set gMr=YMr
set hMr=UNIT_STATE_MANA
set FMr=GMr
call SetUnitState(gMr,hMr,FMr)
set dMr=null
set fMr=null
set RMr=null
set TMr=null
set YMr=null
set gMr=null
set hMr=null
set kMr=null
set jMr=null
set xMr=null
endfunction
function vNu takes nothing returns boolean
set Fb=CreateGroup()
set xb=$7FFFFFFF
set mb=Filter(L3)
call Rect(0.,0.,0.,0.)
return true
endfunction
function vOu takes nothing returns boolean
return true
endfunction
function vQi takes nothing returns boolean
local unit GQi
local unit gQi
local player hQi
local unit FQi
local boolean kQi
local integer jQi
local boolean xQi
if IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==true and IsPlayerAlly(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(LoadUnitHandle(qu,$556E6974,$556E6974)))==false then
set GQi=GetFilterUnit()
set kQi=(GetWidgetLife(GQi)<.405 or IsUnitType(GQi,UNIT_TYPE_DEAD))==false
else
set kQi=false
endif
if kQi then
set gQi=GetFilterUnit()
set jQi=GetUnitTypeId(gQi)
set FQi=GetFilterUnit()
set hQi=GetOwningPlayer(FQi)
set xQi=jQi!=I[GetPlayerId(hQi)]
else
set xQi=false
endif
set GQi=null
set gQi=null
set hQi=null
set FQi=null
return xQi
endfunction
function vRr takes nothing returns boolean
return true
endfunction
function vUi takes nothing returns nothing
local unit vZi=GetTriggerUnit()
local unit QZi=vZi
local player mZi=GetOwningPlayer(QZi)
local unit WZi
local string EZi
local real ZZi
local real UZi
local unit IZi
local unittype PZi
local unit AZi
local string DZi
local real HZi
local real JZi
local unit KZi
local unittype LZi
local unit XZi
local string CZi
local real VZi
local real BZi
local unit NZi
local unittype MZi
local unit wUi
local string uUi
local real rUi
local real sUi
local unit tUi
local unittype iUi
local unit SUi
local string cUi
local real oUi
local real OUi
local unit lUi
local unittype bUi
local unit yUi
local string pUi
local real eUi
local real qUi
local unit aUi
local unittype nUi
local real dUi
local real fUi
local real RUi
local real TUi
local real YUi
local real GUi
local real gUi
local real hUi
local real FUi
local real kUi
local real jUi
local real xUi
if mZi==du then
if Ew[3]==true then
set WZi=vZi
set EZi="attack"
set dUi=Qw[42]
set fUi=Ww[42]
set ZZi=dUi
set UZi=fUi
call IssuePointOrder(WZi,EZi,ZZi,UZi)
set IZi=vZi
set PZi=UNIT_TYPE_HERO
if IsUnitType(IZi,PZi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,42)
endif
else
set AZi=vZi
set DZi="attack"
set RUi=Qw[48]
set TUi=Ww[48]
set HZi=RUi
set JZi=TUi
call IssuePointOrder(AZi,DZi,HZi,JZi)
set KZi=vZi
set LZi=UNIT_TYPE_HERO
if IsUnitType(KZi,LZi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,48)
endif
endif
endif
if mZi==nu then
set XZi=vZi
set CZi="attack"
set YUi=Qw[48]
set GUi=Ww[48]
set VZi=YUi
set BZi=GUi
call IssuePointOrder(XZi,CZi,VZi,BZi)
set NZi=vZi
set MZi=UNIT_TYPE_HERO
if IsUnitType(NZi,MZi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,48)
endif
endif
if mZi==fu then
if Ew[1]==true then
set wUi=vZi
set uUi="attack"
set gUi=Qw[48]
set hUi=Ww[48]
set rUi=gUi
set sUi=hUi
call IssuePointOrder(wUi,uUi,rUi,sUi)
set tUi=vZi
set iUi=UNIT_TYPE_HERO
if IsUnitType(tUi,iUi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,48)
endif
else
set SUi=vZi
set cUi="attack"
set FUi=Qw[42]
set kUi=Ww[42]
set oUi=FUi
set OUi=kUi
call IssuePointOrder(SUi,cUi,oUi,OUi)
set lUi=vZi
set bUi=UNIT_TYPE_HERO
if IsUnitType(lUi,bUi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,42)
endif
endif
endif
if mZi==Ru then
set yUi=vZi
set pUi="attack"
set jUi=Qw[42]
set xUi=Ww[42]
set eUi=jUi
set qUi=xUi
call IssuePointOrder(yUi,pUi,eUi,qUi)
set aUi=vZi
set nUi=UNIT_TYPE_HERO
if IsUnitType(aUi,nUi) then
call SaveInteger(qu,GetHandleId(vZi),$6D6F7665,42)
endif
endif
set vZi=null
set mZi=null
set QZi=null
set WZi=null
set IZi=null
set PZi=null
set AZi=null
set KZi=null
set LZi=null
set XZi=null
set NZi=null
set MZi=null
set wUi=null
set tUi=null
set iUi=null
set SUi=null
set lUi=null
set bUi=null
set yUi=null
set aUi=null
set nUi=null
endfunction
function vXt takes nothing returns boolean
return true
endfunction
function vYu takes nothing returns boolean
local trigger YYu
local trigger GYu
local playerunitevent gYu
local trigger hYu
local playerunitevent FYu
local integer kYu
local trigger jYu
local code xYu
set cY=CreateTrigger()
set YYu=cY
call DisableTrigger(YYu)
set GYu=cY
set gYu=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set hYu=GYu
set FYu=gYu
set kYu=0
loop
call TriggerRegisterPlayerUnitEvent(hYu,Player(kYu),FYu,null)
set kYu=kYu+1
exitwhen kYu==bj_MAX_PLAYER_SLOTS
endloop
set jYu=cY
set xYu=gww_2416
call TriggerAddAction(jYu,xYu)
set YYu=null
set GYu=null
set gYu=null
set hYu=null
set FYu=null
set jYu=null
return true
endfunction
function vZu takes nothing returns boolean
local trigger YZu
local trigger GZu
local playerunitevent gZu
local trigger hZu
local playerunitevent FZu
local integer kZu
local trigger jZu
local code xZu
set dp=CreateTrigger()
set YZu=dp
call DisableTrigger(YZu)
set GZu=dp
set gZu=EVENT_PLAYER_UNIT_DEATH
set hZu=GZu
set FZu=gZu
set kZu=0
loop
call TriggerRegisterPlayerUnitEvent(hZu,Player(kZu),FZu,null)
set kZu=kZu+1
exitwhen kZu==bj_MAX_PLAYER_SLOTS
endloop
set jZu=dp
set xZu=T4
call TriggerAddAction(jZu,xZu)
set YZu=null
set GZu=null
set gZu=null
set hZu=null
set FZu=null
set jZu=null
return true
endfunction
function vau takes nothing returns nothing
local unit Tau=GetKillingUnit()
local unit Yau=Tau
local unit Gau
local unit gau
local unit hau
local string Fau
local widget kau
local boolean jau
local boolean xau
if GetUnitTypeId(Yau)==$6E626565 then
set jau=true
else
set Gau=Tau
set jau=GetUnitTypeId(Gau)==$6E777331
endif
if jau then
set xau=true
else
set gau=Tau
set xau=GetUnitTypeId(gau)==$6E687968
endif
if xau then
set hau=Tau
set Fau="slow"
set kau=Tau
call IssueTargetOrder(hau,Fau,kau)
endif
set Tau=null
set Yau=null
set Gau=null
set gau=null
set hau=null
set kau=null
endfunction
function vbO takes nothing returns boolean
local trigger ebO
local rect qbO
local region abO
local trigger nbO
local boolexpr dbO
local trigger fbO
local trigger RbO
local trigger TbO
local playerunitevent YbO
local trigger GbO
local playerunitevent gbO
local integer hbO
local trigger FbO
local boolexpr kbO
local trigger jbO
local code xbO
set yg=CreateTrigger()
set pg=CreateTrigger()
set ebO=yg
set qbO=bj_mapInitialPlayableArea
set abO=CreateRegion()
call RegionAddRect(abO,qbO)
call TriggerRegisterEnterRegion(ebO,abO,null)
set nbO=yg
set dbO=Condition(Huw)
call TriggerAddCondition(nbO,dbO)
set fbO=yg
call DisableTrigger(fbO)
set RbO=pg
call DisableTrigger(RbO)
set TbO=pg
set YbO=EVENT_PLAYER_UNIT_DEATH
set GbO=TbO
set gbO=YbO
set hbO=0
loop
call TriggerRegisterPlayerUnitEvent(GbO,Player(hbO),gbO,null)
set hbO=hbO+1
exitwhen hbO==bj_MAX_PLAYER_SLOTS
endloop
set FbO=pg
set kbO=Condition(Juw)
call TriggerAddCondition(FbO,kbO)
set jbO=pg
set xbO=Kuw
call TriggerAddAction(jbO,xbO)
set ebO=null
set qbO=null
set abO=null
set nbO=null
set dbO=null
set fbO=null
set RbO=null
set TbO=null
set YbO=null
set GbO=null
set gbO=null
set FbO=null
set kbO=null
set jbO=null
return true
endfunction
function vbS takes nothing returns boolean
local unit kbS=GetFilterUnit()
local unit jbS=kbS
local boolean xbS=UnitAlive(jbS) and IsPlayerAlly(GetOwningPlayer(GetAttacker()),GetOwningPlayer(kbS))==false and GetUnitAbilityLevel(kbS,$416C6F63)==0 and GetUnitAbilityLevel(kbS,$4176756C)==0 and GetUnitAbilityLevel(kbS,$42637963)==0 and IsUnitType(kbS,UNIT_TYPE_STRUCTURE)==false
set kbS=null
set jbS=null
return xbS
endfunction
function vjp takes nothing returns boolean
return true
endfunction
function vjw takes nothing returns nothing
local unit ykw=GetKillingUnit()
local group pkw=CreateGroup()
local filterfunc ekw=Filter(y3)
local group Gjw=pkw
local unit hkw=ykw
local real gjw=GetUnitX(hkw)
local unit Fkw=ykw
local unit qkw
local group akw
local real nkw
local real dkw
local texttag fkw
local texttag Rkw
local texttag Tkw
local integer Ykw
local integer Gkw
local unit gkw
local group kkw
local group jkw
local unit xkw
local unit vkw
local real mkw
local unit Qkw
local unitstate Wkw
local real Ekw
local unit Zkw
local unitstate Ukw
local unit Ikw
local unit Pkw
local unit Akw
local unit Dkw
local unit Hkw
local texttag Jkw
local integer Kkw
local integer Lkw
local integer Xkw
local integer Ckw
local texttag Vkw
local real Bkw
local real Nkw
local texttag Mkw
local real wjw
local unit ujw
local unit rjw
local unitstate sjw
local unit tjw
local integer ijw
local unit Sjw
local unit cjw
local integer ojw
local unit Ojw
local integer ljw
local integer bjw
local unit yjw
local real pjw
local unit ejw
local real qjw
local unit ajw
local unitstate njw
local real djw
local unit fjw
local unitstate Rjw
local group Tjw
local boolexpr Yjw
local unit hjw
local unitstate Fjw
local real kjw
local unit jjw
local unitstate xjw
call GroupEnumUnitsInRange(Gjw,gjw,GetUnitY(Fkw),400.,ekw)
set akw=pkw
loop
set kkw=akw
exitwhen not (FirstOfGroup(kkw)!=null)
set jkw=akw
set xkw=FirstOfGroup(jkw)
call GroupRemoveUnit(jkw,xkw)
set qkw=xkw
set vkw=qkw
set mkw=25.
set Qkw=vkw
set Wkw=UNIT_STATE_MANA
set Ekw=mkw
set hjw=Qkw
set Fjw=Wkw
set Zkw=Qkw
set Ukw=Wkw
call SetUnitState(hjw,Fjw,GetUnitState(Zkw,Ukw)+Ekw)
set Ikw=qkw
set nkw=GetUnitX(Ikw)
set Pkw=qkw
set dkw=GetUnitY(Pkw)
set Akw=qkw
set Dkw=Akw
set kjw=GetUnitX(Dkw)
set Hkw=Akw
set fkw=PBr(kjw,GetUnitY(Hkw),"+25")
set Jkw=fkw
set Kkw=82
set Lkw=82
set Xkw=255
set Ckw=255
call SetTextTagColor(Jkw,Kkw,Lkw,Xkw,Ckw)
set Rkw=fkw
set Vkw=Rkw
set Bkw=0.
set Nkw=.04
call SetTextTagVelocity(Vkw,Bkw,Nkw)
set Tkw=Rkw
set Mkw=Tkw
set wjw=5.
call SetTextTagLifespan(Mkw,wjw)
set ujw=qkw
set rjw=ujw
set sjw=UNIT_STATE_MANA
if GetUnitState(rjw,sjw)>=250. then
set tjw=qkw
set ijw=$41323231
set Ykw=GetUnitAbilityLevel(tjw,ijw)
set Gkw=1
loop
exitwhen Gkw>8
set Sjw=qkw
set gkw=CreateUnit(GetOwningPlayer(Sjw),$75303030,nkw,dkw,270.)
set cjw=gkw
set ojw=$41323234
call UnitAddAbility(cjw,ojw)
set Ojw=gkw
set ljw=$41323234
set bjw=Ykw
call SetUnitAbilityLevel(Ojw,ljw,bjw)
call IssuePointOrder(gkw,"impale",nkw+100.*Cos(45.+I2R(Gkw)*45.*bj_DEGTORAD),dkw+100.*Sin(45.+I2R(Gkw)*45.*bj_DEGTORAD))
set yjw=gkw
set pjw=3.
call UnitApplyTimedLife(yjw,$42544C46,pjw)
set Gkw=Gkw+1
endloop
set ejw=qkw
set qjw=-250.
set ajw=ejw
set njw=UNIT_STATE_MANA
set djw=qjw
set jjw=ajw
set xjw=njw
set fjw=ajw
set Rjw=njw
call SetUnitState(jjw,xjw,GetUnitState(fjw,Rjw)+djw)
endif
endloop
set Tjw=pkw
call DestroyGroup(Tjw)
set Yjw=ekw
call DestroyBoolExpr(Yjw)
set ykw=null
set pkw=null
set ekw=null
set qkw=null
set akw=null
set fkw=null
set Rkw=null
set Tkw=null
set gkw=null
set hkw=null
set Fkw=null
set kkw=null
set jkw=null
set xkw=null
set vkw=null
set Qkw=null
set Wkw=null
set Zkw=null
set Ukw=null
set Ikw=null
set Pkw=null
set Akw=null
set Dkw=null
set Hkw=null
set Jkw=null
set Vkw=null
set Mkw=null
set ujw=null
set rjw=null
set sjw=null
set tjw=null
set Sjw=null
set cjw=null
set Ojw=null
set yjw=null
set ejw=null
set ajw=null
set njw=null
set fjw=null
set Rjw=null
set Tjw=null
set Yjw=null
set Gjw=null
set hjw=null
set Fjw=null
set jjw=null
set xjw=null
endfunction
function vkO takes nothing returns nothing
local unit bkO=GetTriggerUnit()
local unit pkO=bkO
local player ykO=GetOwningPlayer(pkO)
local unit ekO
local string qkO
local real akO
local real nkO
local unit dkO
local unittype fkO
local unit RkO
local string TkO
local real YkO
local real GkO
local unit gkO
local unittype hkO
local real FkO
local real kkO
local real jkO
local real xkO
if ykO==du then
set ekO=bkO
set qkO="attack"
set FkO=Qw[38]
set kkO=Ww[38]
set akO=FkO
set nkO=kkO
call IssuePointOrder(ekO,qkO,akO,nkO)
set dkO=bkO
set fkO=UNIT_TYPE_HERO
if IsUnitType(dkO,fkO) then
call SaveInteger(qu,GetHandleId(bkO),$6D6F7665,38)
endif
else
set RkO=bkO
set TkO="attack"
set jkO=Qw[14]
set xkO=Ww[14]
set YkO=jkO
set GkO=xkO
call IssuePointOrder(RkO,TkO,YkO,GkO)
set gkO=bkO
set hkO=UNIT_TYPE_HERO
if IsUnitType(gkO,hkO) then
call SaveInteger(qu,GetHandleId(bkO),$6D6F7665,14)
endif
endif
set bkO=null
set ykO=null
set pkO=null
set ekO=null
set dkO=null
set fkO=null
set RkO=null
set gkO=null
set hkO=null
endfunction
function vlS takes nothing returns nothing
local unit blS=GetTriggerUnit()
local unit plS=blS
local player ylS=GetOwningPlayer(plS)
local unit elS
local string qlS
local real alS
local real nlS
local unit dlS
local unittype flS
local unit RlS
local string TlS
local real YlS
local real GlS
local unit glS
local unittype hlS
local real FlS
local real klS
local real jlS
local real xlS
if ylS==fu then
set elS=blS
set qlS="attack"
set FlS=Qw[44]
set klS=Ww[44]
set alS=FlS
set nlS=klS
call IssuePointOrder(elS,qlS,alS,nlS)
set dlS=blS
set flS=UNIT_TYPE_HERO
if IsUnitType(dlS,flS) then
call SaveInteger(qu,GetHandleId(blS),$6D6F7665,44)
endif
else
set RlS=blS
set TlS="attack"
set jlS=Qw[20]
set xlS=Ww[20]
set YlS=jlS
set GlS=xlS
call IssuePointOrder(RlS,TlS,YlS,GlS)
set glS=blS
set hlS=UNIT_TYPE_HERO
if IsUnitType(glS,hlS) then
call SaveInteger(qu,GetHandleId(blS),$6D6F7665,20)
endif
endif
set blS=null
set ylS=null
set plS=null
set elS=null
set dlS=null
set flS=null
set RlS=null
set glS=null
set hlS=null
endfunction
function vle takes nothing returns boolean
return true
endfunction
function vml takes nothing returns nothing
local unit aml=GetEnteringUnit()
local unit Rml=aml
local integer nml=GetUnitTypeId(Rml)
local unit Tml=aml
local player dml=GetOwningPlayer(Tml)
local integer fml
local unit Yml
local integer Gml
local unit gml
local integer hml
local unit Fml
local integer kml
local unit jml
local integer xml
if nml==$6F6E7A67 or nml==$6F746272 or nml==$6E706C67 or nml==$6F317A67 or nml==$6F303352 or nml==$6F303444 and GetPlayerTechCount(dml,$5230304E,true)>0 then
set fml=GetPlayerTechCount(dml,$5230304E,true)
if fml==1 then
set Yml=aml
set Gml=$41303041
call UnitAddAbility(Yml,Gml)
elseif fml==2 then
set gml=aml
set hml=$41303048
call UnitAddAbility(gml,hml)
elseif fml==3 then
set Fml=aml
set kml=$41303742
call UnitAddAbility(Fml,kml)
else
set jml=aml
set xml=$506F5372
call UnitAddAbility(jml,xml)
endif
endif
set aml=null
set dml=null
set Rml=null
set Tml=null
set Yml=null
set gml=null
set Fml=null
set jml=null
endfunction
function vnl takes nothing returns boolean
return true
endfunction
function p9u takes string I8w returns nothing
local unit P8w
local integer A8w
local real D8w
local real H8w
local integer J8w
local real K8w
local real L8w
local unit X8w
local integer C8w
local unit V8w
local unit B8w
local unit N8w
local string M8w
local integer w9u
local real u9u
local real r9u
local real s9u
local integer t9u
local string i9u
local real S9u
local real c9u
local real o9u
local real O9u
local real l9u
local real b9u
local real y9u
set aW[qW]=I8w
set qW=qW+1
if GetSpellAbilityId()==$414D327E then
set P8w=GetSpellTargetUnit()
set X8w=P8w
set C8w=$414D327E
set A8w=GetUnitAbilityLevel(X8w,C8w)
set V8w=P8w
set B8w=V8w
set S9u=GetUnitX(B8w)
set N8w=V8w
set c9u=S9u
set o9u=GetUnitY(N8w)
set D8w=c9u
set H8w=o9u
set O9u=D8w
set l9u=H8w
set K8w=O9u
set L8w=l9u
set M8w="when calling alloc_ForGroupCallback_forUnitsInRange_registerPlayerUnitEvent_SpiritProtection in SpiritProtection, line 66"
set aW[qW]=M8w
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set w9u=qF
set aF[w9u]=882
else
call L8c("Out of memory: Could not create ForGroupCallback_forUnitsInRange_registerPlayerUnitEvent_SpiritProtection.","when calling error in SpiritProtection, line 66")
set w9u=0
endif
else
set eF=eF-1
set w9u=pF[eF]
set aF[w9u]=882
endif
set qW=qW-1
set J8w=w9u
set cQ[J8w]=P8w
set oQ[J8w]=A8w
set b9u=K8w
set y9u=L8w
set u9u=b9u
set r9u=y9u
set s9u=200.
set t9u=J8w
set i9u="when calling forUnitsInRange in SpiritProtection, line 66"
set aW[qW]=i9u
set qW=qW+1
call WXp(1,0,null,null,u9u,r9u,s9u,false,t9u,"when calling forUnitsInRange in ClosureForGroups, line 96",null,0,null)
set qW=qW-1
endif
set qW=qW-1
set P8w=null
set X8w=null
set V8w=null
set B8w=null
set N8w=null
endfunction
function vnt takes nothing returns nothing
set qW=0
call p9u("via function reference SpiritProtection, line 61")
endfunction
function vrl takes nothing returns nothing
local unit Frl=GetTriggerUnit()
local unit krl=Frl
local unit jrl
local integer xrl
if GetUnitTypeId(krl)==$45777264 then
set jrl=Frl
set xrl=852180
call IssueImmediateOrderById(jrl,xrl)
endif
set Frl=null
set krl=null
set jrl=null
endfunction
function vsb takes nothing returns nothing
local unit fsb=GetDyingUnit()
local unit gsb=fsb
local integer Rsb=GetUnitTypeId(gsb)
local unit hsb=fsb
local player Tsb=GetOwningPlayer(hsb)
local integer Ysb
local unit Gsb
local unit Fsb
local unit ksb
local player jsb
local real xsb
if Rsb==$65646F63 or Rsb==$65617263 or Rsb==$65646F74 or Rsb==$6573656E or Rsb==$6E6D7065 or Rsb==$65647279 or Rsb==$7830316F or Rsb==$656E7368 or Rsb==$6576656E or Rsb==$6563686D then
set Ysb=GetPlayerTechCount(Tsb,$5267666F,true)
if GetRandomInt(1,100)<=8+2*Ysb then
set jsb=Tsb
set Fsb=fsb
set xsb=GetUnitX(Fsb)
set ksb=fsb
set Gsb=CreateUnit(jsb,$65777370,xsb,GetUnitY(ksb),0.)
call dYr(Gsb)
endif
endif
set fsb=null
set Tsb=null
set Gsb=null
set gsb=null
set hsb=null
set Fsb=null
set ksb=null
set jsb=null
endfunction
function XFt takes string EFt returns nothing
local unit ZFt
local integer UFt
local unit IFt
local unit PFt
local integer AFt
local string DFt
local integer HFt
local real JFt
local integer KFt
local string LFt
set aW[qW]=EFt
set qW=qW+1
set ZFt=GetAttacker()
set IFt=ZFt
if GetUnitTypeId(IFt)==$6E303154 then
set PFt=ZFt
set AFt=$414D3033
call UnitAddAbility(PFt,AFt)
set DFt="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_SkyHydra in SkyHydra, line 88"
set aW[qW]=DFt
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set HFt=fF
set RF[HFt]=831
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_SkyHydra.","when calling error in SkyHydra, line 88")
set HFt=0
endif
else
set dF=dF-1
set HFt=nF[dF]
set RF[HFt]=831
endif
set qW=qW-1
set UFt=HFt
set iQ[UFt]=ZFt
set JFt=1.5
set KFt=UFt
set LFt="when calling doAfter in SkyHydra, line 88"
set aW[qW]=LFt
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),JFt,KFt,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set ZFt=null
set IFt=null
set PFt=null
endfunction
function vwO takes nothing returns nothing
set qW=0
call XFt("via function reference SkyHydra, line 84")
endfunction
function E4y takes string n4y returns boolean
local trigger d4y
local trigger f4y
local playerunitevent R4y
local integer T4y
local trigger Y4y
local trigger G4y
local playerunitevent g4y
local integer h4y
local trigger F4y
local trigger k4y
local playerunitevent j4y
local integer x4y
local trigger v4y
local trigger m4y
local playerunitevent Q4y
local integer W4y
set aW[qW]=n4y
set qW=qW+1
set Le=CreateTrigger()
set Xe=CreateTrigger()
set Ce=CreateTrigger()
set Ve=CreateTrigger()
set Ne=kHw("when calling new_LinkedList in GalagrondPurple, line 443")
set d4y=Xe
call DisableTrigger(d4y)
set f4y=Xe
set R4y=EVENT_PLAYER_UNIT_SPELL_EFFECT
set T4y=0
loop
call TriggerRegisterPlayerUnitEvent(f4y,Player(T4y),R4y,null)
set T4y=T4y+1
exitwhen T4y==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Xe,F2)
set Y4y=Ve
call DisableTrigger(Y4y)
set G4y=Ve
set g4y=EVENT_PLAYER_UNIT_ATTACKED
set h4y=0
loop
call TriggerRegisterPlayerUnitEvent(G4y,Player(h4y),g4y,null)
set h4y=h4y+1
exitwhen h4y==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ve,k2)
set F4y=Le
call DisableTrigger(F4y)
set k4y=Le
set j4y=EVENT_PLAYER_UNIT_SPELL_EFFECT
set x4y=0
loop
call TriggerRegisterPlayerUnitEvent(k4y,Player(x4y),j4y,null)
set x4y=x4y+1
exitwhen x4y==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Le,j2)
set v4y=Ce
call DisableTrigger(v4y)
set m4y=Ce
set Q4y=EVENT_PLAYER_HERO_REVIVE_FINISH
set W4y=0
loop
call TriggerRegisterPlayerUnitEvent(m4y,Player(W4y),Q4y,null)
set W4y=W4y+1
exitwhen W4y==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ce,x2)
set qW=qW-1
set d4y=null
set f4y=null
set R4y=null
set Y4y=null
set G4y=null
set g4y=null
set F4y=null
set k4y=null
set j4y=null
set v4y=null
set m4y=null
set Q4y=null
return true
endfunction
function vxS takes nothing returns boolean
set qW=0
return E4y("via function reference GalagrondPurple, line 1")
endfunction
function w2c takes nothing returns nothing
local unit p4c=GetKillingUnit()
local unit R4c=p4c
local unit e4c
local integer q4c
local integer a4c
local unit n4c
local integer d4c
local unit f4c
local unit T4c
local unittype Y4c
local unit G4c
local unittype g4c
local real h4c
local unit F4c
local unit k4c
local unit j4c
local unit x4c
local real v4c
local unit m4c
local integer Q4c
local unit W4c
local unittype E4c
local unit Z4c
local unittype U4c
local real I4c
local unit P4c
local unit A4c
local unit D4c
local unit H4c
local real J4c
local unit K4c
local integer L4c
local boolean X4c
local player C4c
local real V4c
local boolean B4c
local player N4c
local real M4c
if GetUnitTypeId(R4c)==$484D3033 then
set e4c=GetDyingUnit()
set T4c=e4c
set Y4c=UNIT_TYPE_HERO
if not IsUnitType(T4c,Y4c) then
set G4c=e4c
set g4c=UNIT_TYPE_STRUCTURE
set X4c=not IsUnitType(G4c,g4c)
else
set X4c=false
endif
if X4c then
set h4c=GetHeroLevel(p4c)*1./4
set q4c=R2I(h4c)
if q4c!=0 then
set a4c=GetRandomInt(1,100)
if a4c<=5+5*q4c then
set F4c=p4c
set C4c=GetOwningPlayer(F4c)
set k4c=e4c
set V4c=GetUnitX(k4c)
set j4c=e4c
set n4c=CreateUnit(C4c,$78303078,V4c,GetUnitY(j4c),180.)
call dYr(n4c)
set x4c=n4c
set v4c=I2R(25+5*q4c)
call UnitApplyTimedLife(x4c,$42544C46,v4c)
if GetHeroLevel(p4c)>=20 then
set m4c=n4c
set Q4c=$414D3221
call UnitAddAbility(m4c,Q4c)
endif
endif
endif
endif
set W4c=e4c
set E4c=UNIT_TYPE_HERO
if IsUnitType(W4c,E4c) then
set Z4c=e4c
set U4c=UNIT_TYPE_STRUCTURE
set B4c=not IsUnitType(Z4c,U4c)
else
set B4c=false
endif
if B4c then
set I4c=GetHeroLevel(p4c)*1./4
set d4c=R2I(I4c)
set P4c=p4c
set N4c=GetOwningPlayer(P4c)
set A4c=e4c
set M4c=GetUnitX(A4c)
set D4c=e4c
set f4c=CreateUnit(N4c,$78303078,M4c,GetUnitY(D4c),180.)
call dYr(f4c)
set H4c=f4c
set J4c=I2R(25+5*d4c)
call UnitApplyTimedLife(H4c,$42544C46,J4c)
if GetHeroLevel(p4c)>=20 then
set K4c=f4c
set L4c=$414D3221
call UnitAddAbility(K4c,L4c)
endif
endif
endif
set p4c=null
set e4c=null
set n4c=null
set f4c=null
set R4c=null
set T4c=null
set Y4c=null
set G4c=null
set g4c=null
set F4c=null
set k4c=null
set j4c=null
set x4c=null
set m4c=null
set W4c=null
set E4c=null
set Z4c=null
set U4c=null
set P4c=null
set A4c=null
set D4c=null
set H4c=null
set K4c=null
set C4c=null
set N4c=null
endfunction
function BRS takes unit ddS,rect fdS returns nothing
local unit TdS=ddS
local player RdS=GetOwningPlayer(TdS)
local unit YdS
local string GdS
local real gdS
local real hdS
local unit FdS
local unittype kdS
local unit jdS
local string xdS
local real vdS
local real mdS
local unit QdS
local unittype WdS
local unit EdS
local string ZdS
local real UdS
local real IdS
local unit PdS
local unittype AdS
local unit DdS
local string HdS
local real JdS
local real KdS
local unit LdS
local unittype XdS
local unit CdS
local string VdS
local real BdS
local real NdS
local unit MdS
local unittype wfS
local unit ufS
local string rfS
local real sfS
local real tfS
local unit ifS
local unittype SfS
local unit cfS
local string ofS
local real OfS
local real lfS
local unit bfS
local unittype yfS
local unit pfS
local string efS
local real qfS
local real afS
local unit nfS
local unittype dfS
local unit ffS
local string RfS
local real TfS
local real YfS
local unit GfS
local unittype gfS
local unit hfS
local string FfS
local real kfS
local real jfS
local unit xfS
local unittype vfS
local unit mfS
local string QfS
local real WfS
local real EfS
local unit ZfS
local unittype UfS
local unit IfS
local string PfS
local real AfS
local real DfS
local unit HfS
local unittype JfS
local unit KfS
local string LfS
local real XfS
local real CfS
local unit VfS
local unittype BfS
local unit NfS
local string MfS
local real wRS
local real uRS
local unit rRS
local unittype sRS
local unit tRS
local string iRS
local real SRS
local real cRS
local unit oRS
local unittype ORS
local unit lRS
local string bRS
local real yRS
local real pRS
local unit eRS
local unittype qRS
local real aRS
local real nRS
local real dRS
local real fRS
local real RRS
local real TRS
local real YRS
local real GRS
local real gRS
local real hRS
local real FRS
local real kRS
local real jRS
local real xRS
local real vRS
local real mRS
local real QRS
local real WRS
local real ERS
local real ZRS
local real URS
local real IRS
local real PRS
local real ARS
local real DRS
local real HRS
local real JRS
local real KRS
local real LRS
local real XRS
local real CRS
local real VRS
if fdS==Ys then
if RdS==nu then
if (Ew[2]==false and Ew[3]==false) or (Ew[0]==true and Ew[3]==true) then
set YdS=ddS
set GdS="attack"
set aRS=Qw[13]
set nRS=Ww[13]
set gdS=aRS
set hdS=nRS
call IssuePointOrder(YdS,GdS,gdS,hdS)
set FdS=ddS
set kdS=UNIT_TYPE_HERO
if IsUnitType(FdS,kdS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,13)
endif
elseif (Ew[2]==true and Ew[0]==false) or (Ew[2]==true and Ew[0]==true) then
set jdS=ddS
set xdS="attack"
set dRS=Qw[15]
set fRS=Ww[15]
set vdS=dRS
set mdS=fRS
call IssuePointOrder(jdS,xdS,vdS,mdS)
set QdS=ddS
set WdS=UNIT_TYPE_HERO
if IsUnitType(QdS,WdS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,15)
endif
endif
endif
if RdS==fu then
set EdS=ddS
set ZdS="attack"
set RRS=Qw[15]
set TRS=Ww[15]
set UdS=RRS
set IdS=TRS
call IssuePointOrder(EdS,ZdS,UdS,IdS)
set PdS=ddS
set AdS=UNIT_TYPE_HERO
if IsUnitType(PdS,AdS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,15)
endif
endif
if RdS==Ru then
set DdS=ddS
set HdS="attack"
set YRS=Qw[13]
set GRS=Ww[13]
set JdS=YRS
set KdS=GRS
call IssuePointOrder(DdS,HdS,JdS,KdS)
set LdS=ddS
set XdS=UNIT_TYPE_HERO
if IsUnitType(LdS,XdS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,13)
endif
endif
endif
if fdS==hs then
if RdS==du then
if (Ew[2]==false and Ew[3]==false) or (Ew[1]==true and Ew[2]==true) then
set CdS=ddS
set VdS="attack"
set gRS=Qw[18]
set hRS=Ww[18]
set BdS=gRS
set NdS=hRS
call IssuePointOrder(CdS,VdS,BdS,NdS)
set MdS=ddS
set wfS=UNIT_TYPE_HERO
if IsUnitType(MdS,wfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,18)
endif
elseif Ew[1]==true and Ew[3]==true then
set ufS=ddS
set rfS="attack"
set FRS=Qw[16]
set kRS=Ww[16]
set sfS=FRS
set tfS=kRS
call IssuePointOrder(ufS,rfS,sfS,tfS)
set ifS=ddS
set SfS=UNIT_TYPE_HERO
if IsUnitType(ifS,SfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,16)
endif
endif
endif
if RdS==fu then
set cfS=ddS
set ofS="attack"
set jRS=Qw[18]
set xRS=Ww[18]
set OfS=jRS
set lfS=xRS
call IssuePointOrder(cfS,ofS,OfS,lfS)
set bfS=ddS
set yfS=UNIT_TYPE_HERO
if IsUnitType(bfS,yfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,18)
endif
endif
if RdS==Ru then
set pfS=ddS
set efS="attack"
set vRS=Qw[16]
set mRS=Ww[16]
set qfS=vRS
set afS=mRS
call IssuePointOrder(pfS,efS,qfS,afS)
set nfS=ddS
set dfS=UNIT_TYPE_HERO
if IsUnitType(nfS,dfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,16)
endif
endif
endif
if fdS==js then
if RdS==Ru then
if (Ew[0]==false and Ew[1]==false) or (Ew[0]==true and Ew[2]==true) then
set ffS=ddS
set RfS="attack"
set QRS=Qw[19]
set WRS=Ww[19]
set TfS=QRS
set YfS=WRS
call IssuePointOrder(ffS,RfS,TfS,YfS)
set GfS=ddS
set gfS=UNIT_TYPE_HERO
if IsUnitType(GfS,gfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,19)
endif
elseif Ew[1]==true and Ew[2]==true then
set hfS=ddS
set FfS="attack"
set ERS=Qw[21]
set ZRS=Ww[21]
set kfS=ERS
set jfS=ZRS
call IssuePointOrder(hfS,FfS,kfS,jfS)
set xfS=ddS
set vfS=UNIT_TYPE_HERO
if IsUnitType(xfS,vfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,21)
endif
endif
endif
if RdS==du then
set mfS=ddS
set QfS="attack"
set URS=Qw[19]
set IRS=Ww[19]
set WfS=URS
set EfS=IRS
call IssuePointOrder(mfS,QfS,WfS,EfS)
set ZfS=ddS
set UfS=UNIT_TYPE_HERO
if IsUnitType(ZfS,UfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,19)
endif
endif
if RdS==nu then
set IfS=ddS
set PfS="attack"
set PRS=Qw[21]
set ARS=Ww[21]
set AfS=PRS
set DfS=ARS
call IssuePointOrder(IfS,PfS,AfS,DfS)
set HfS=ddS
set JfS=UNIT_TYPE_HERO
if IsUnitType(HfS,JfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,21)
endif
endif
endif
if fdS==ms then
if RdS==fu then
if (Ew[0]==false and Ew[1]==false) or (Ew[3]==true and Ew[1]==true) then
set KfS=ddS
set LfS="attack"
set DRS=Qw[22]
set HRS=Ww[22]
set XfS=DRS
set CfS=HRS
call IssuePointOrder(KfS,LfS,XfS,CfS)
set VfS=ddS
set BfS=UNIT_TYPE_HERO
if IsUnitType(VfS,BfS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,22)
endif
elseif Ew[0]==true and Ew[3]==true then
set NfS=ddS
set MfS="attack"
set JRS=Qw[24]
set KRS=Ww[24]
set wRS=JRS
set uRS=KRS
call IssuePointOrder(NfS,MfS,wRS,uRS)
set rRS=ddS
set sRS=UNIT_TYPE_HERO
if IsUnitType(rRS,sRS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,24)
endif
endif
endif
if RdS==du then
set tRS=ddS
set iRS="attack"
set LRS=Qw[24]
set XRS=Ww[24]
set SRS=LRS
set cRS=XRS
call IssuePointOrder(tRS,iRS,SRS,cRS)
set oRS=ddS
set ORS=UNIT_TYPE_HERO
if IsUnitType(oRS,ORS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,24)
endif
endif
if RdS==nu then
set lRS=ddS
set bRS="attack"
set CRS=Qw[22]
set VRS=Ww[22]
set yRS=CRS
set pRS=VRS
call IssuePointOrder(lRS,bRS,yRS,pRS)
set eRS=ddS
set qRS=UNIT_TYPE_HERO
if IsUnitType(eRS,qRS) then
call SaveInteger(qu,GetHandleId(ddS),$6D6F7665,22)
endif
endif
endif
set RdS=null
set TdS=null
set YdS=null
set FdS=null
set kdS=null
set jdS=null
set QdS=null
set WdS=null
set EdS=null
set PdS=null
set AdS=null
set DdS=null
set LdS=null
set XdS=null
set CdS=null
set MdS=null
set wfS=null
set ufS=null
set ifS=null
set SfS=null
set cfS=null
set bfS=null
set yfS=null
set pfS=null
set nfS=null
set dfS=null
set ffS=null
set GfS=null
set gfS=null
set hfS=null
set xfS=null
set vfS=null
set mfS=null
set ZfS=null
set UfS=null
set IfS=null
set HfS=null
set JfS=null
set KfS=null
set VfS=null
set BfS=null
set NfS=null
set rRS=null
set sRS=null
set tRS=null
set oRS=null
set ORS=null
set lRS=null
set eRS=null
set qRS=null
endfunction
function N1e takes nothing returns nothing
local integer C1e=0
local integer V1e=0
local player array X1e
local player B1e
loop
set B1e=Player(V1e)
if GetPlayerSlotState(B1e)==PLAYER_SLOT_STATE_PLAYING and GetPlayerController(B1e)==MAP_CONTROL_USER then
set X1e[C1e]=Player(V1e)
set C1e=C1e+1
endif
set V1e=V1e+1
exitwhen V1e>11
endloop
if C1e==0 then
set qr=null
set ar=null
elseif C1e==1 then
set qr=X1e[0]
set ar=null
else
set C1e=C1e-1
set V1e=GetRandomInt(0,C1e)
set qr=X1e[V1e]
set X1e[V1e]=X1e[C1e]
set C1e=C1e-1
set V1e=GetRandomInt(0,C1e)
set ar=X1e[V1e]
endif
set B1e=null
endfunction
function gKu takes integer fKu returns nothing
local player RKu
local player TKu
local boolean YKu
local boolean GKu
call StoreInteger(nr,"EOG","Win1",fKu)
call StoreInteger(nr,"EOG","Win2",fKu)
if qr==null or ar==null then
set YKu=true
else
set RKu=qr
set YKu=(GetPlayerSlotState(RKu)==PLAYER_SLOT_STATE_PLAYING and GetPlayerController(RKu)==MAP_CONTROL_USER)==false
endif
if YKu then
set GKu=true
else
set TKu=ar
set GKu=(GetPlayerSlotState(TKu)==PLAYER_SLOT_STATE_PLAYING and GetPlayerController(TKu)==MAP_CONTROL_USER)==false
endif
if GKu then
call N1e()
endif
if qr==GetLocalPlayer() then
call SyncStoredInteger(nr,"EOG","Win1")
endif
if ar==GetLocalPlayer() then
call SyncStoredInteger(nr,"EOG","Win2")
endif
set RKu=null
set TKu=null
endfunction
function pao takes string Qco returns nothing
local unit Wco
local player Eco
local integer Zco
local group Uco
local integer Ico
local unit Pco
local unit Aco
local integer Dco
local trigger Hco
local trigger Jco
local trigger Kco
local trigger Lco
local filterfunc Xco
local unit Cco
local group Vco
local integer Bco
local filterfunc Nco
local unit Mco
local group woo
local filterfunc uoo
local unit roo
local group soo
local integer too
local unit ioo
local group Soo
local integer coo
local integer ooo
local integer Ooo
local unit loo
local player boo
local unit yoo
local unit poo
local sound eoo
local string qoo
local real aoo
local string noo
local real doo
local effect foo
local string Roo
local real Too
local real Yoo
local unit Goo
local unit goo
local unit hoo
local unit Foo
local texttag koo
local unit joo
local unit xoo
local sound voo
local effect moo
local string Qoo
local real Woo
local real Eoo
local unit Zoo
local unit Uoo
local unit Ioo
local unit Poo
local string Aoo
local real Doo
local string Hoo
local real Joo
local unit Koo
local string Loo
local real Xoo
local string Coo
local real Voo
local unit Boo
local string Noo
local real Moo
local string wOo
local real uOo
local string rOo
local real sOo
local string tOo
local real iOo
local unit SOo
local texttag cOo
local unit oOo
local unit OOo
local effect lOo
local string bOo
local real yOo
local real pOo
local unit eOo
local unit qOo
local unit aOo
local sound nOo
local unit dOo
local string fOo
local real ROo
local string TOo
local real YOo
local unit GOo
local string gOo
local real hOo
local string FOo
local real kOo
local unit jOo
local string xOo
local real vOo
local string mOo
local real QOo
local string WOo
local real EOo
local string ZOo
local real UOo
local unit IOo
local texttag POo
local effect AOo
local string DOo
local real HOo
local real JOo
local unit KOo
local unit LOo
local unit XOo
local sound COo
local string VOo
local real BOo
local string NOo
local real MOo
local unit wlo
local unit ulo
local unit rlo
local integer slo
local unit tlo
local string ilo
local real Slo
local real clo
local unit olo
local unit Olo
local unit llo
local real blo
local unit ylo
local texttag plo
local unit elo
local texttag qlo
local unit alo
local texttag nlo
local unit dlo
local unit flo
local unit Rlo
local unit Tlo
local unit Ylo
local player Glo
local integer glo
local player hlo
local playerstate Flo
local integer klo
local player jlo
local playerstate xlo
local player vlo
local unit mlo
local unit Qlo
local unit Wlo
local unit Elo
local unit Zlo
local player Ulo
local integer Ilo
local player Plo
local playerstate Alo
local integer Dlo
local player Hlo
local playerstate Jlo
local player Klo
local unit Llo
local sound Xlo
local string Clo
local real Vlo
local string Blo
local real Nlo
local unit Mlo
local unit wbo
local texttag ubo
local trigger rbo
local trigger sbo
local trigger tbo
local trigger ibo
local trigger Sbo
local trigger cbo
local unit obo
local trigger Obo
local trigger lbo
local trigger bbo
local trigger ybo
local trigger pbo
local unit ebo
local unit qbo
local unit abo
local unit nbo
local unit dbo
local trigger fbo
local texttag Rbo
local timer Tbo
local timer Ybo
local timer Gbo
local unit gbo
local texttag hbo
local timer Fbo
local unit kbo
local trigger jbo
local trigger xbo
local texttag vbo
local trigger mbo
local trigger Qbo
local timer Wbo
local trigger Ebo
local trigger Zbo
local trigger Ubo
local trigger Ibo
local unit Pbo
local texttag Abo
local texttag Dbo
local unit Hbo
local trigger Jbo
local trigger Kbo
local trigger Lbo
local trigger Xbo
local trigger Cbo
local unit Vbo
local unit Bbo
local unit Nbo
local unit Mbo
local unit wyo
local trigger uyo
local texttag ryo
local timer syo
local timer tyo
local timer iyo
local unit Syo
local texttag cyo
local timer oyo
local unit Oyo
local trigger lyo
local trigger byo
local texttag yyo
local trigger pyo
local trigger eyo
local timer qyo
local trigger ayo
local trigger nyo
local trigger dyo
local trigger fyo
local unit Ryo
local texttag Tyo
local texttag Yyo
local unit Gyo
local trigger gyo
local trigger hyo
local trigger Fyo
local trigger kyo
local trigger jyo
local unit xyo
local unit vyo
local unit myo
local unit Qyo
local unit Wyo
local trigger Eyo
local texttag Zyo
local timer Uyo
local timer Iyo
local timer Pyo
local unit Ayo
local texttag Dyo
local timer Hyo
local unit Jyo
local trigger Kyo
local trigger Lyo
local texttag Xyo
local trigger Cyo
local trigger Vyo
local timer Byo
local trigger Nyo
local trigger Myo
local trigger wpo
local trigger upo
local unit rpo
local texttag spo
local texttag tpo
local unit ipo
local trigger Spo
local trigger cpo
local trigger opo
local trigger Opo
local trigger lpo
local unit bpo
local unit ypo
local unit ppo
local unit epo
local unit qpo
local trigger apo
local texttag npo
local timer dpo
local timer fpo
local timer Rpo
local unit Tpo
local texttag Ypo
local timer Gpo
local unit gpo
local trigger hpo
local trigger Fpo
local texttag kpo
local trigger jpo
local trigger xpo
local timer vpo
local trigger mpo
local trigger Qpo
local trigger Wpo
local trigger Epo
local unit Zpo
local texttag Upo
local texttag Ipo
local unit Ppo
local group Apo
local group Dpo
local unit Hpo
local unit Jpo
local group Kpo
local string Lpo
local integer Xpo
local real Cpo
local integer Vpo
local string Bpo
local unit Npo
local unit Mpo
local player weo
local player ueo
local player reo
local group seo
local group teo
local unit ieo
local player Seo
local group ceo
local boolexpr oeo
local rect Oeo
local player leo
local group beo
local group yeo
local unit peo
local player eeo
local unit qeo
local group aeo
local rect neo
local player deo
local group feo
local group Reo
local unit Teo
local player Yeo
local unit Geo
local group geo
local boolexpr heo
local string Feo
local player keo
local integer jeo
local boolean xeo
local trigger veo
local multiboard meo
local player Qeo
local boolean Weo
local multiboard Eeo
local player Zeo
local boolean Ueo
local multiboard Ieo
local player Peo
local multiboard Aeo
local trigger Deo
local string Heo
local integer Jeo
local integer Keo
local player Leo
local string Xeo
local integer Ceo
local integer Veo
local player Beo
local string Neo
local integer Meo
local integer wqo
local player uqo
local string rqo
local integer sqo
local integer tqo
local player iqo
local group Sqo
local real cqo
local real oqo
local real Oqo
local real lqo
local player bqo
local real yqo
local real pqo
local boolean eqo
local boolean qqo
local boolean aqo
local player nqo
local playerstate dqo
local boolean fqo
local boolean Rqo
local boolean Tqo
local player Yqo
local playerstate Gqo
local boolean gqo
local boolean hqo
local boolean Fqo
local boolean kqo
local boolean jqo
local boolean xqo
local boolean vqo
local boolean mqo
local boolean Qqo
local boolean Wqo
local boolean Eqo
local boolean Zqo
local boolean Uqo
local boolean Iqo
local boolean Pqo
local boolean Aqo
local boolean Dqo
local boolean Hqo
local boolean Jqo
local boolean Kqo
local player Lqo
local real Xqo
local group Cqo
local unit Vqo
local group Bqo
local group Nqo
local integer Mqo
local integer wao
local integer uao
local integer rao
local real sao
local real tao
local real iao
local real Sao
local real cao
local real oao
local real Oao
local real lao
local real bao
local real yao
set aW[qW]=Qco
set qW=qW+1
set Wco=GetDyingUnit()
set loo=Wco
set Eco=GetOwningPlayer(loo)
set boo=Eco
set Zco=GetPlayerId(boo)
set Uco=CreateGroup()
if Wco==b[Zco] then
set yoo=Wco
set ou[Zco]=GetUnitX(yoo)
set poo=Wco
set bu[Zco]=GetUnitY(poo)
set iu[Zco]=GetUnitFacing(Wco)
set eoo=bj_questFailedSound
call StartSound(eoo)
set qoo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Middle Barracks|r!"
set aoo=10.
set noo=qoo
set doo=aoo
call DisplayTimedTextToPlayer(IY,0.,0.,doo,noo)
set Roo="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set Goo=Wco
set goo=Goo
set cqo=GetUnitX(goo)
set hoo=Goo
set sao=cqo
set tao=GetUnitY(hoo)
set Too=sao
set Yoo=tao
set foo=AddSpecialEffect(Roo,Too,Yoo)
call DestroyEffect(foo)
set Foo=o[Zco]
if UnitAlive(Foo)==false then
set e[Zco]=true
set e[Zco]=true
set koo=Nw[Zco]
call DestroyTextTag(koo)
set Nw[Zco]=null
set Cw[Zco]=0
set Kw[Zco]=0
set iu[Zco]=0.
set ou[Zco]=0.
set bu[Zco]=0.
set b[Zco]=null
endif
endif
if Wco==O[Zco] then
set joo=Wco
set lu[Zco]=GetUnitX(joo)
set xoo=Wco
set pu[Zco]=GetUnitY(xoo)
set Su[Zco]=GetUnitFacing(Wco)
set voo=bj_questFailedSound
call StartSound(voo)
set Qoo="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set Zoo=Wco
set Uoo=Zoo
set oqo=GetUnitX(Uoo)
set Ioo=Zoo
set iao=oqo
set Sao=GetUnitY(Ioo)
set Woo=iao
set Eoo=Sao
set moo=AddSpecialEffect(Qoo,Woo,Eoo)
call DestroyEffect(moo)
set Poo=Wco
if GetOwningPlayer(Poo)==Gu then
set Aoo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Upper Barracks|r!"
set Doo=10.
set Hoo=Aoo
set Joo=Doo
call DisplayTimedTextToPlayer(IY,0.,0.,Joo,Hoo)
else
set Koo=Wco
if GetOwningPlayer(Koo)==Tu then
set Loo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Right Barracks|r!"
set Xoo=10.
set Coo=Loo
set Voo=Xoo
call DisplayTimedTextToPlayer(IY,0.,0.,Voo,Coo)
else
set Boo=Wco
if GetOwningPlayer(Boo)==gu then
set Noo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Bottom Barracks|r!"
set Moo=10.
set wOo=Noo
set uOo=Moo
call DisplayTimedTextToPlayer(IY,0.,0.,uOo,wOo)
else
set rOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Left Barracks|r!"
set sOo=10.
set tOo=rOo
set iOo=sOo
call DisplayTimedTextToPlayer(IY,0.,0.,iOo,tOo)
endif
endif
endif
set SOo=o[Zco]
if UnitAlive(SOo)==false then
set y[Zco]=true
set cOo=wu[Zco]
call DestroyTextTag(cOo)
set wu[Zco]=null
set Bw[Zco]=0
set Xw[Zco]=0
set Su[Zco]=0.
set lu[Zco]=0.
set pu[Zco]=0.
set O[Zco]=null
endif
endif
if Wco==l[Zco] then
set oOo=Wco
set Ou[Zco]=GetUnitX(oOo)
set OOo=Wco
set yu[Zco]=GetUnitY(OOo)
set cu[Zco]=GetUnitFacing(Wco)
set bOo="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set eOo=Wco
set qOo=eOo
set Oqo=GetUnitX(qOo)
set aOo=eOo
set cao=Oqo
set oao=GetUnitY(aOo)
set yOo=cao
set pOo=oao
set lOo=AddSpecialEffect(bOo,yOo,pOo)
call DestroyEffect(lOo)
set nOo=bj_questFailedSound
call StartSound(nOo)
set dOo=Wco
if GetOwningPlayer(dOo)==Gu then
set fOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Bottom Barracks|r!"
set ROo=10.
set TOo=fOo
set YOo=ROo
call DisplayTimedTextToPlayer(IY,0.,0.,YOo,TOo)
else
set GOo=Wco
if GetOwningPlayer(GOo)==Tu then
set gOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Left Barracks|r!"
set hOo=10.
set FOo=gOo
set kOo=hOo
call DisplayTimedTextToPlayer(IY,0.,0.,kOo,FOo)
else
set jOo=Wco
if GetOwningPlayer(jOo)==gu then
set xOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Upper Barracks|r!"
set vOo=10.
set mOo=xOo
set QOo=vOo
call DisplayTimedTextToPlayer(IY,0.,0.,QOo,mOo)
else
set WOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Right Barracks|r!"
set EOo=10.
set ZOo=WOo
set UOo=EOo
call DisplayTimedTextToPlayer(IY,0.,0.,UOo,ZOo)
endif
endif
endif
set IOo=o[Zco]
if UnitAlive(IOo)==false then
set p[Zco]=true
set POo=Mw[Zco]
call DestroyTextTag(POo)
set Mw[Zco]=null
set Vw[Zco]=0
set Lw[Zco]=0
set cu[Zco]=0.
set Ou[Zco]=0.
set yu[Zco]=0.
set l[Zco]=null
endif
endif
set Tw[Zco]=Tw[Zco]-1
if Wco==o[Zco] then
set DOo="Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl"
set KOo=Wco
set LOo=KOo
set lqo=GetUnitX(LOo)
set XOo=KOo
set Oao=lqo
set lao=GetUnitY(XOo)
set HOo=Oao
set JOo=lao
set AOo=AddSpecialEffect(DOo,HOo,JOo)
call DestroyEffect(AOo)
set COo=bj_questFailedSound
call StartSound(COo)
set VOo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has lost their |cffffcc00Fortress|r!"
set BOo=10.
set NOo=VOo
set MOo=BOo
call DisplayTimedTextToPlayer(IY,0.,0.,MOo,NOo)
set Ico=0
loop
exitwhen Ico>15
set bqo=Eco
set wlo=o[Zco]
set yqo=GetUnitX(wlo)
set ulo=o[Zco]
set Pco=CreateUnit(bqo,$75303030,yqo,GetUnitY(ulo),0.)
set rlo=Pco
set slo=$4130394C
call UnitAddAbility(rlo,slo)
set tlo=Pco
set ilo="carrionswarm"
set olo=o[Zco]
set pqo=GetUnitX(olo)+100.*Cos(67.5+I2R(Ico)*22.5*bj_DEGTORAD)
set Olo=o[Zco]
set bao=pqo
set yao=GetUnitY(Olo)+100.*Sin(67.5+I2R(Ico)*22.5*bj_DEGTORAD)
set Slo=bao
set clo=yao
call IssuePointOrder(tlo,ilo,Slo,clo)
set llo=Pco
set blo=5.
call UnitApplyTimedLife(llo,$42544C46,blo)
set Ico=Ico+1
endloop
set o[Zco]=null
set ylo=b[Zco]
if UnitAlive(ylo)==false then
set e[Zco]=true
set e[Zco]=true
set plo=Nw[Zco]
call DestroyTextTag(plo)
set Nw[Zco]=null
set Cw[Zco]=0
set Kw[Zco]=0
set iu[Zco]=0.
set ou[Zco]=0.
set bu[Zco]=0.
set b[Zco]=null
endif
set elo=O[Zco]
if UnitAlive(elo)==false then
set y[Zco]=true
set qlo=wu[Zco]
call DestroyTextTag(qlo)
set wu[Zco]=null
set Bw[Zco]=0
set Xw[Zco]=0
set Su[Zco]=0.
set lu[Zco]=0.
set pu[Zco]=0.
set O[Zco]=null
endif
set alo=l[Zco]
if UnitAlive(alo)==false then
set p[Zco]=true
set nlo=Mw[Zco]
call DestroyTextTag(nlo)
set Mw[Zco]=null
set Vw[Zco]=0
set Lw[Zco]=0
set cu[Zco]=0.
set Ou[Zco]=0.
set yu[Zco]=0.
set l[Zco]=null
endif
endif
call SaveUnitHandle(qu,$556E6974,$556E6974,Wco)
if Tw[Zco]==0 then
set Zw[Zco]=true
if Fw[Zco]==false then
set Aco=GetKillingUnit()
set dlo=Wco
set Dco=GetUnitPointValue(dlo)
set flo=Aco
if GetOwningPlayer(flo)==Player(0) then
set eqo=true
else
set Rlo=Aco
set eqo=GetOwningPlayer(Rlo)==Player(1)
endif
if eqo then
set qqo=true
else
set Tlo=Aco
set qqo=GetOwningPlayer(Tlo)==Player(2)
endif
if qqo then
set aqo=true
else
set Ylo=Aco
set aqo=GetOwningPlayer(Ylo)==Player(3)
endif
if aqo then
set mlo=Aco
set vlo=GetOwningPlayer(mlo)
set Glo=Player(GetPlayerId(vlo))
set glo=Dco
set hlo=Glo
set Flo=PLAYER_STATE_RESOURCE_GOLD
set klo=glo
set nqo=hlo
set dqo=Flo
set jlo=hlo
set xlo=Flo
call SetPlayerState(nqo,dqo,GetPlayerState(jlo,xlo)+klo)
endif
set Qlo=Aco
if GetOwningPlayer(Qlo)==Player(4) then
set fqo=true
else
set Wlo=Aco
set fqo=GetOwningPlayer(Wlo)==Player(5)
endif
if fqo then
set Rqo=true
else
set Elo=Aco
set Rqo=GetOwningPlayer(Elo)==Player(6)
endif
if Rqo then
set Tqo=true
else
set Zlo=Aco
set Tqo=GetOwningPlayer(Zlo)==Player(7)
endif
if Tqo then
set Llo=Aco
set Klo=GetOwningPlayer(Llo)
set Ulo=Player(GetPlayerId(Klo)-4)
set Ilo=Dco
set Plo=Ulo
set Alo=PLAYER_STATE_RESOURCE_GOLD
set Dlo=Ilo
set Yqo=Plo
set Gqo=Alo
set Hlo=Plo
set Jlo=Alo
call SetPlayerState(Yqo,Gqo,GetPlayerState(Hlo,Jlo)+Dlo)
endif
endif
set Xlo=bj_questCompletedSound
call StartSound(Xlo)
set Clo=Aw[Zco]+GetPlayerName(Eco)+"|r"+" has been defeated!"
set Vlo=10.
set Blo=Clo
set Nlo=Vlo
call DisplayTimedTextToPlayer(IY,0.,0.,Nlo,Blo)
set Mlo=c[Zco]
call RemoveUnit(Mlo)
if Eco==gd then
if pb!=null then
set wbo=pb
call RemoveUnit(wbo)
set pb=null
set ubo=Hl
call DestroyTextTag(ubo)
set Hl=null
set rbo=qb
call DisableTrigger(rbo)
set sbo=nb
call DisableTrigger(sbo)
set tbo=db
call DisableTrigger(tbo)
set ibo=Tb
call DisableTrigger(ibo)
set Sbo=Yb
call DisableTrigger(Sbo)
set cbo=Gb
call DisableTrigger(cbo)
endif
endif
if Eco==Yu then
set Ew[0]=true
if Ly!=null then
set obo=Ly
set gqo=GetOwningPlayer(obo)==Yu
else
set gqo=false
endif
if gqo then
set Ly=null
set Obo=up
call DisableTrigger(Obo)
set lbo=rp
call DisableTrigger(lbo)
set bbo=wp
call DisableTrigger(bbo)
set ybo=My
call DisableTrigger(ybo)
set pbo=sp
call DisableTrigger(pbo)
if op!=null then
set ebo=op
call RemoveUnit(ebo)
set op=null
endif
if Op!=null then
set qbo=Op
call RemoveUnit(qbo)
set Op=null
endif
endif
if Ze!=null then
set abo=Ze
set hqo=GetOwningPlayer(abo)==Yu
else
set hqo=false
endif
if hqo then
set Ze=null
endif
if yO!=null then
set nbo=yO
set Fqo=GetOwningPlayer(nbo)==Yu
else
set Fqo=false
endif
if Fqo then
set dbo=yO
call RemoveUnit(dbo)
set yO=null
if pO!=null then
set pO=null
endif
set fbo=iO
call DisableTrigger(fbo)
set Rbo=Hl
call DestroyTextTag(Rbo)
set Hl=null
set Tbo=SO
call DestroyTimer(Tbo)
set SO=null
set Ybo=cO
call DestroyTimer(Ybo)
set cO=null
set Gbo=oO
call DestroyTimer(Gbo)
set oO=null
set eO=null
set qO=null
endif
if Xl!=null then
set gbo=Xl
set kqo=GetOwningPlayer(gbo)==Yu
else
set kqo=false
endif
if kqo then
set Xl=null
set hbo=Hl
call DestroyTextTag(hbo)
set Hl=null
set Fbo=Kl
call DestroyTimer(Fbo)
set Kl=null
set Jl=0
endif
if Eh!=null then
set kbo=Eh
set jqo=GetOwningPlayer(kbo)==Yu
else
set jqo=false
endif
if jqo then
set Eh=null
set jbo=Zh
call DestroyTrigger(jbo)
set Hco=Uh
set xbo=Hco
call DestroyTrigger(xbo)
set vbo=Ah
call DestroyTextTag(vbo)
set Ah=null
set mbo=Ih
call DestroyTrigger(mbo)
set Qbo=Dh
call DestroyTrigger(Qbo)
endif
if KT!=null and CT==Yu then
set Wbo=xT
call DestroyTimer(Wbo)
set xT=null
set Ebo=vT
call DestroyTrigger(Ebo)
set Zbo=mT
call DestroyTrigger(Zbo)
set Ubo=QT
call DestroyTrigger(Ubo)
set Ibo=WT
call DestroyTrigger(Ibo)
set KT=null
set Pbo=LT
call RemoveUnit(Pbo)
set LT=null
set XT=null
set CT=null
set VT[Zco]=false
set BT[Zco]=false
set NT[Zco]=false
set MT[Zco]=false
set wY[Zco]=false
set Abo=kT
call DestroyTextTag(Abo)
set Dbo=jT
call DestroyTextTag(Dbo)
set kT=null
set jT=null
endif
endif
if Eco==Tu then
set Ew[1]=true
if Ly!=null then
set Hbo=Ly
set xqo=GetOwningPlayer(Hbo)==Tu
else
set xqo=false
endif
if xqo then
set Ly=null
set Jbo=up
call DisableTrigger(Jbo)
set Kbo=rp
call DisableTrigger(Kbo)
set Lbo=wp
call DisableTrigger(Lbo)
set Xbo=My
call DisableTrigger(Xbo)
set Cbo=sp
call DisableTrigger(Cbo)
if op!=null then
set Vbo=op
call RemoveUnit(Vbo)
set op=null
endif
if Op!=null then
set Bbo=Op
call RemoveUnit(Bbo)
set Op=null
endif
endif
if Ze!=null then
set Nbo=Ze
set vqo=GetOwningPlayer(Nbo)==Tu
else
set vqo=false
endif
if vqo then
set Ze=null
endif
if yO!=null then
set Mbo=yO
set mqo=GetOwningPlayer(Mbo)==Tu
else
set mqo=false
endif
if mqo then
set wyo=yO
call RemoveUnit(wyo)
set yO=null
if pO!=null then
set pO=null
endif
set uyo=iO
call DisableTrigger(uyo)
set ryo=Hl
call DestroyTextTag(ryo)
set Hl=null
set syo=SO
call DestroyTimer(syo)
set SO=null
set tyo=cO
call DestroyTimer(tyo)
set cO=null
set iyo=oO
call DestroyTimer(iyo)
set oO=null
set eO=null
set qO=null
endif
if Xl!=null then
set Syo=Xl
set Qqo=GetOwningPlayer(Syo)==Tu
else
set Qqo=false
endif
if Qqo then
set Xl=null
set cyo=Hl
call DestroyTextTag(cyo)
set Hl=null
set oyo=Kl
call DestroyTimer(oyo)
set Kl=null
set Jl=0
endif
if Eh!=null then
set Oyo=Eh
set Wqo=GetOwningPlayer(Oyo)==Tu
else
set Wqo=false
endif
if Wqo then
set Eh=null
set lyo=Zh
call DestroyTrigger(lyo)
set Jco=Uh
set byo=Jco
call DestroyTrigger(byo)
set yyo=Ah
call DestroyTextTag(yyo)
set Ah=null
set pyo=Ih
call DestroyTrigger(pyo)
set eyo=Dh
call DestroyTrigger(eyo)
endif
if KT!=null and CT==Tu then
set qyo=xT
call DestroyTimer(qyo)
set xT=null
set ayo=vT
call DestroyTrigger(ayo)
set nyo=mT
call DestroyTrigger(nyo)
set dyo=QT
call DestroyTrigger(dyo)
set fyo=WT
call DestroyTrigger(fyo)
set PT=false
set AT=false
set DT=false
set HT=false
set JT=false
set KT=null
set Ryo=LT
call RemoveUnit(Ryo)
set LT=null
set XT=null
set CT=null
set VT[Zco]=false
set BT[Zco]=false
set NT[Zco]=false
set MT[Zco]=false
set wY[Zco]=false
set Tyo=kT
call DestroyTextTag(Tyo)
set Yyo=jT
call DestroyTextTag(Yyo)
set kT=null
set jT=null
endif
endif
if Eco==Gu then
set Ew[2]=true
if Ly!=null then
set Gyo=Ly
set Eqo=GetOwningPlayer(Gyo)==Gu
else
set Eqo=false
endif
if Eqo then
set Ly=null
set gyo=up
call DisableTrigger(gyo)
set hyo=rp
call DisableTrigger(hyo)
set Fyo=wp
call DisableTrigger(Fyo)
set kyo=My
call DisableTrigger(kyo)
set jyo=sp
call DisableTrigger(jyo)
if op!=null then
set xyo=op
call RemoveUnit(xyo)
set op=null
endif
if Op!=null then
set vyo=Op
call RemoveUnit(vyo)
set Op=null
endif
endif
if Ze!=null then
set myo=Ze
set Zqo=GetOwningPlayer(myo)==Gu
else
set Zqo=false
endif
if Zqo then
set Ze=null
endif
if yO!=null then
set Qyo=yO
set Uqo=GetOwningPlayer(Qyo)==Gu
else
set Uqo=false
endif
if Uqo then
set Wyo=yO
call RemoveUnit(Wyo)
set yO=null
if pO!=null then
set pO=null
endif
set Eyo=iO
call DisableTrigger(Eyo)
set Zyo=Hl
call DestroyTextTag(Zyo)
set Hl=null
set Uyo=SO
call DestroyTimer(Uyo)
set SO=null
set Iyo=cO
call DestroyTimer(Iyo)
set cO=null
set Pyo=oO
call DestroyTimer(Pyo)
set oO=null
set eO=null
set qO=null
endif
if Xl!=null then
set Ayo=Xl
set Iqo=GetOwningPlayer(Ayo)==Gu
else
set Iqo=false
endif
if Iqo then
set Xl=null
set Dyo=Hl
call DestroyTextTag(Dyo)
set Hl=null
set Hyo=Kl
call DestroyTimer(Hyo)
set Kl=null
set Jl=0
endif
if Eh!=null then
set Jyo=Eh
set Pqo=GetOwningPlayer(Jyo)==Gu
else
set Pqo=false
endif
if Pqo then
set Eh=null
set Kyo=Zh
call DestroyTrigger(Kyo)
set Kco=Uh
set Lyo=Kco
call DestroyTrigger(Lyo)
set Xyo=Ah
call DestroyTextTag(Xyo)
set Ah=null
set Cyo=Ih
call DestroyTrigger(Cyo)
set Vyo=Dh
call DestroyTrigger(Vyo)
endif
if KT!=null and CT==Gu then
set Byo=xT
call DestroyTimer(Byo)
set xT=null
set Nyo=vT
call DestroyTrigger(Nyo)
set Myo=mT
call DestroyTrigger(Myo)
set wpo=QT
call DestroyTrigger(wpo)
set upo=WT
call DestroyTrigger(upo)
set PT=false
set AT=false
set DT=false
set HT=false
set JT=false
set KT=null
set rpo=LT
call RemoveUnit(rpo)
set LT=null
set XT=null
set CT=null
set VT[Zco]=false
set BT[Zco]=false
set NT[Zco]=false
set MT[Zco]=false
set wY[Zco]=false
set spo=kT
call DestroyTextTag(spo)
set tpo=jT
call DestroyTextTag(tpo)
set kT=null
set jT=null
endif
endif
if Eco==gu then
set Ew[3]=true
if Ly!=null then
set ipo=Ly
set Aqo=GetOwningPlayer(ipo)==gu
else
set Aqo=false
endif
if Aqo then
set Ly=null
set Spo=up
call DisableTrigger(Spo)
set cpo=rp
call DisableTrigger(cpo)
set opo=wp
call DisableTrigger(opo)
set Opo=My
call DisableTrigger(Opo)
set lpo=sp
call DisableTrigger(lpo)
if op!=null then
set bpo=op
call RemoveUnit(bpo)
set op=null
endif
if Op!=null then
set ypo=Op
call RemoveUnit(ypo)
set Op=null
endif
endif
if Ze!=null then
set ppo=Ze
set Dqo=GetOwningPlayer(ppo)==gu
else
set Dqo=false
endif
if Dqo then
set Ze=null
endif
if yO!=null then
set epo=yO
set Hqo=GetOwningPlayer(epo)==gu
else
set Hqo=false
endif
if Hqo then
set qpo=yO
call RemoveUnit(qpo)
set yO=null
if pO!=null then
set pO=null
endif
set apo=iO
call DisableTrigger(apo)
set npo=Hl
call DestroyTextTag(npo)
set Hl=null
set dpo=SO
call DestroyTimer(dpo)
set SO=null
set fpo=cO
call DestroyTimer(fpo)
set cO=null
set Rpo=oO
call DestroyTimer(Rpo)
set oO=null
set eO=null
set qO=null
endif
if Xl!=null then
set Tpo=Xl
set Jqo=GetOwningPlayer(Tpo)==gu
else
set Jqo=false
endif
if Jqo then
set Xl=null
set Ypo=Hl
call DestroyTextTag(Ypo)
set Hl=null
set Gpo=Kl
call DestroyTimer(Gpo)
set Kl=null
set Jl=0
endif
if Eh!=null then
set gpo=Eh
set Kqo=GetOwningPlayer(gpo)==gu
else
set Kqo=false
endif
if Kqo then
set Eh=null
set hpo=Zh
call DestroyTrigger(hpo)
set Lco=Uh
set Fpo=Lco
call DestroyTrigger(Fpo)
set kpo=Ah
call DestroyTextTag(kpo)
set Ah=null
set jpo=Ih
call DestroyTrigger(jpo)
set xpo=Dh
call DestroyTrigger(xpo)
endif
if KT!=null and CT==gu then
set vpo=xT
call DestroyTimer(vpo)
set xT=null
set mpo=vT
call DestroyTrigger(mpo)
set Qpo=mT
call DestroyTrigger(Qpo)
set Wpo=QT
call DestroyTrigger(Wpo)
set Epo=WT
call DestroyTrigger(Epo)
set PT=false
set AT=false
set DT=false
set HT=false
set JT=false
set KT=null
set Zpo=LT
call RemoveUnit(Zpo)
set LT=null
set XT=null
set CT=null
set VT[Zco]=false
set BT[Zco]=false
set NT[Zco]=false
set MT[Zco]=false
set wY[Zco]=false
set Upo=kT
call DestroyTextTag(Upo)
set Ipo=jT
call DestroyTextTag(Ipo)
set kT=null
set jT=null
endif
endif
set br=br-1
call FogModifierStart(CreateFogModifierRect(Player(Zco),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
if xu==false then
set Ppo=Wco
set Od=GetOwningPlayer(Ppo)
set Zw[Zco]=true
set Xco=Filter(e7)
call GroupEnumUnitsInRect(Uco,bj_mapInitialPlayableArea,Xco)
set Vco=Uco
loop
set Apo=Vco
exitwhen not (FirstOfGroup(Apo)!=null)
set Dpo=Vco
set Hpo=FirstOfGroup(Dpo)
call GroupRemoveUnit(Dpo,Hpo)
set Cco=Hpo
set Jpo=Cco
call KillUnit(Jpo)
endloop
set Kpo=Uco
call GroupClear(Kpo)
set Lpo="when calling alloc_CallbackSingle_doAfter_LosePlayer in LosePlayer, line 606"
set aW[qW]=Lpo
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Xpo=fF
set RF[Xpo]=726
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_LosePlayer.","when calling error in LosePlayer, line 606")
set Xpo=0
endif
else
set dF=dF-1
set Xpo=nF[dF]
set RF[Xpo]=726
endif
set qW=qW-1
set Bco=Xpo
set wm[Bco]=Uco
set um[Bco]=Xco
set rm[Bco]=Zco
set Cpo=1.
set Vpo=Bco
set Bpo="when calling doAfter in LosePlayer, line 606"
set aW[qW]=Bpo
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Cpo,Vpo,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
call SaveUnitHandle(qu,$556E6974,$556E6974,Wco)
set Npo=F[Zco]
call RemoveUnit(Npo)
set F[Zco]=null
if hu==true then
set Mpo=hw[Zco]
call RemoveUnit(Mpo)
set hw[Zco]=null
endif
set Lqo=Player(Zco+4)
set weo=Eco
if weo==Yu then
set od=Ys
endif
if weo==Tu then
set od=hs
endif
if weo==Gu then
set od=js
endif
if weo==gu then
set od=ms
endif
set Xqo=GetRectCenterX(od)
set ueo=Eco
if ueo==Yu then
set od=Ys
endif
if ueo==Tu then
set od=hs
endif
if ueo==Gu then
set od=js
endif
if ueo==gu then
set od=ms
endif
call CreateUnit(Lqo,$6E737063,Xqo,GetRectCenterY(od),90.)
set Nco=Filter(q7)
set Cqo=Uco
set reo=Od
if reo==Yu then
set od=Ys
endif
if reo==Tu then
set od=hs
endif
if reo==Gu then
set od=js
endif
if reo==gu then
set od=ms
endif
call GroupEnumUnitsInRect(Cqo,od,Nco)
set woo=Uco
loop
set seo=woo
exitwhen not (FirstOfGroup(seo)!=null)
set teo=woo
set ieo=FirstOfGroup(teo)
call GroupRemoveUnit(teo,ieo)
set Mco=ieo
set Vqo=Mco
set Seo=Eco
if Seo==Yu then
set od=Ys
endif
if Seo==Tu then
set od=hs
endif
if Seo==Gu then
set od=js
endif
if Seo==gu then
set od=ms
endif
call BRS(Vqo,od)
endloop
set ceo=Uco
call GroupClear(ceo)
set oeo=Nco
call DestroyBoolExpr(oeo)
call SaveUnitHandle(qu,$556E6974,$556E6974,Wco)
set uoo=Filter(a7)
set Bqo=Uco
set leo=Eco
if leo==Yu then
set od=Ys
endif
if leo==Tu then
set od=hs
endif
if leo==Gu then
set od=js
endif
if leo==gu then
set od=ms
endif
set Oeo=od
if Oeo==Ys then
set od=xs
endif
if Oeo==hs then
set od=Fs
endif
if Oeo==js then
set od=gs
endif
if Oeo==ms then
set od=Gs
endif
call GroupEnumUnitsInRect(Bqo,od,uoo)
set soo=Uco
loop
set beo=soo
exitwhen not (FirstOfGroup(beo)!=null)
set yeo=soo
set peo=FirstOfGroup(yeo)
call GroupRemoveUnit(yeo,peo)
set roo=peo
set qeo=roo
set eeo=GetOwningPlayer(qeo)
set too=GetPlayerId(eeo)
call UnitAddAbility(roo,$534C4F57)
if roo==b[too] then
set Uw[too]=true
endif
if roo==O[too] then
set Iw[too]=true
endif
if roo==l[too] then
set Pw[too]=true
endif
endloop
set aeo=Uco
call GroupClear(aeo)
call SaveUnitHandle(qu,$556E6974,$556E6974,Wco)
set Nqo=Uco
set deo=Eco
if deo==Yu then
set od=Ys
endif
if deo==Tu then
set od=hs
endif
if deo==Gu then
set od=js
endif
if deo==gu then
set od=ms
endif
set neo=od
if neo==Ys then
set od=ks
endif
if neo==hs then
set od=vs
endif
if neo==js then
set od=Rs
endif
if neo==ms then
set od=Ts
endif
call GroupEnumUnitsInRect(Nqo,od,uoo)
set Soo=Uco
loop
set feo=Soo
exitwhen not (FirstOfGroup(feo)!=null)
set Reo=Soo
set Teo=FirstOfGroup(Reo)
call GroupRemoveUnit(Reo,Teo)
set ioo=Teo
set Geo=ioo
set Yeo=GetOwningPlayer(Geo)
set coo=GetPlayerId(Yeo)
call UnitAddAbility(ioo,$534C4F57)
if ioo==b[coo] then
set Uw[coo]=true
endif
if ioo==O[coo] then
set Iw[coo]=true
endif
if ioo==l[coo] then
set Pw[coo]=true
endif
endloop
set geo=Uco
call GroupClear(geo)
set heo=uoo
call DestroyBoolExpr(heo)
if br<3 then
set Feo="|cffff0000Attention!|r |cffffcc00Players can now select Focused Ultimate Weapon.|r"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Feo)
set ooo=0
loop
exitwhen ooo>3
set keo=Player(ooo)
set jeo=$41304F43
set xeo=true
call SetPlayerAbilityAvailable(keo,jeo,xeo)
set ooo=ooo+1
endloop
endif
if br==1 then
call PauseAllUnitsBJ(true)
call PlayThematicMusic("Sound\\Music\\mp3Music\\HeroicVictory.mp3")
set veo=ae
call EnableTrigger(veo)
set Ooo=0
loop
exitwhen Ooo>3
set meo=Tr[Ooo]
set Qeo=Player(Ooo)
set Weo=false
if IY==Qeo then
call MultiboardDisplay(meo,Weo)
endif
set Eeo=Yr
set Zeo=Player(Ooo)
set Ueo=true
if IY==Zeo then
call MultiboardDisplay(Eeo,Ueo)
endif
set Ieo=Yr
set Peo=Player(Ooo)
if IY==Peo then
set Aeo=Ieo
call MultiboardMinimize(Aeo,false)
endif
set Deo=Ig
call DisableTrigger(Deo)
set Ooo=Ooo+1
endloop
if Ew[0]==false then
set Heo="|cffffff00"+GetPlayerName(Yu)+"|r"+" has won the game!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Heo)
call FogModifierStart(CreateFogModifierRect(Yu,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
set Mqo=fr
set Leo=Yu
set Jeo=GetPlayerId(Leo)
set Keo=1
loop
exitwhen Jeo<=0
set Keo=Keo*2
set Jeo=Jeo-1
endloop
set fr=Mqo+Keo
call gKu(fr)
endif
if Ew[1]==false then
set Xeo="|cffffff00"+GetPlayerName(Tu)+"|r"+" has won the game!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Xeo)
call FogModifierStart(CreateFogModifierRect(Tu,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
set wao=fr
set Beo=Tu
set Ceo=GetPlayerId(Beo)
set Veo=1
loop
exitwhen Ceo<=0
set Veo=Veo*2
set Ceo=Ceo-1
endloop
set fr=wao+Veo
call gKu(fr)
endif
if Ew[2]==false then
set Neo="|cffffff00"+GetPlayerName(Gu)+"|r"+" has won the game!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,Neo)
call FogModifierStart(CreateFogModifierRect(Gu,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
set uao=fr
set uqo=Gu
set Meo=GetPlayerId(uqo)
set wqo=1
loop
exitwhen Meo<=0
set wqo=wqo*2
set Meo=Meo-1
endloop
set fr=uao+wqo
call gKu(fr)
endif
if Ew[3]==false then
set rqo="|cffffff00"+GetPlayerName(gu)+"|r"+" has won the game!"
call DisplayTimedTextToPlayer(IY,0.,0.,45.,rqo)
call FogModifierStart(CreateFogModifierRect(gu,FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false))
set rao=fr
set iqo=gu
set sqo=GetPlayerId(iqo)
set tqo=1
loop
exitwhen sqo<=0
set tqo=tqo*2
set sqo=sqo-1
endloop
set fr=rao+tqo
call gKu(fr)
endif
endif
if Eco==Yu then
call IncUnitAbilityLevel(G[3],$41303853)
call IncUnitAbilityLevel(G[3],$41303852)
call IncUnitAbilityLevel(G[3],$41303856)
call IncUnitAbilityLevel(G[3],$4130384F)
call IncUnitAbilityLevel(G[3],$41303858)
call IncUnitAbilityLevel(G[3],$41303859)
call IncUnitAbilityLevel(G[3],$41303855)
call IncUnitAbilityLevel(G[3],$41303850)
call IncUnitAbilityLevel(G[3],$4130384E)
call IncUnitAbilityLevel(G[3],$4130384D)
call IncUnitAbilityLevel(G[3],$41303851)
call IncUnitAbilityLevel(G[3],$41303042)
call IncUnitAbilityLevel(G[4],$41303853)
call IncUnitAbilityLevel(G[4],$41303852)
call IncUnitAbilityLevel(G[4],$41303856)
call IncUnitAbilityLevel(G[4],$4130384F)
call IncUnitAbilityLevel(G[4],$41303858)
call IncUnitAbilityLevel(G[4],$41303859)
call IncUnitAbilityLevel(G[4],$41303855)
call IncUnitAbilityLevel(G[4],$41303850)
call IncUnitAbilityLevel(G[4],$4130384E)
call IncUnitAbilityLevel(G[4],$4130384D)
call IncUnitAbilityLevel(G[4],$41303851)
call IncUnitAbilityLevel(G[4],$41303042)
call IncUnitAbilityLevel(G[5],$41303853)
call IncUnitAbilityLevel(G[5],$41303852)
call IncUnitAbilityLevel(G[5],$41303856)
call IncUnitAbilityLevel(G[5],$4130384F)
call IncUnitAbilityLevel(G[5],$41303858)
call IncUnitAbilityLevel(G[5],$41303859)
call IncUnitAbilityLevel(G[5],$41303855)
call IncUnitAbilityLevel(G[5],$41303850)
call IncUnitAbilityLevel(G[5],$4130384E)
call IncUnitAbilityLevel(G[5],$4130384D)
call IncUnitAbilityLevel(G[5],$41303851)
call IncUnitAbilityLevel(G[5],$41303042)
call IncUnitAbilityLevel(G[6],$41303853)
call IncUnitAbilityLevel(G[6],$41303852)
call IncUnitAbilityLevel(G[6],$41303856)
call IncUnitAbilityLevel(G[6],$4130384F)
call IncUnitAbilityLevel(G[6],$41303858)
call IncUnitAbilityLevel(G[6],$41303859)
call IncUnitAbilityLevel(G[6],$41303855)
call IncUnitAbilityLevel(G[6],$41303850)
call IncUnitAbilityLevel(G[6],$4130384E)
call IncUnitAbilityLevel(G[6],$4130384D)
call IncUnitAbilityLevel(G[6],$41303851)
call IncUnitAbilityLevel(G[6],$41303042)
endif
if Eco==Tu then
call IncUnitAbilityLevel(G[1],$41303853)
call IncUnitAbilityLevel(G[1],$41303852)
call IncUnitAbilityLevel(G[1],$41303856)
call IncUnitAbilityLevel(G[1],$4130384F)
call IncUnitAbilityLevel(G[1],$41303858)
call IncUnitAbilityLevel(G[1],$41303859)
call IncUnitAbilityLevel(G[1],$41303855)
call IncUnitAbilityLevel(G[1],$41303850)
call IncUnitAbilityLevel(G[1],$4130384E)
call IncUnitAbilityLevel(G[1],$4130384D)
call IncUnitAbilityLevel(G[1],$41303851)
call IncUnitAbilityLevel(G[1],$41303042)
call IncUnitAbilityLevel(G[2],$41303853)
call IncUnitAbilityLevel(G[2],$41303852)
call IncUnitAbilityLevel(G[2],$41303856)
call IncUnitAbilityLevel(G[2],$4130384F)
call IncUnitAbilityLevel(G[2],$41303858)
call IncUnitAbilityLevel(G[2],$41303859)
call IncUnitAbilityLevel(G[2],$41303855)
call IncUnitAbilityLevel(G[2],$41303850)
call IncUnitAbilityLevel(G[2],$4130384E)
call IncUnitAbilityLevel(G[2],$4130384D)
call IncUnitAbilityLevel(G[2],$41303851)
call IncUnitAbilityLevel(G[2],$41303042)
call IncUnitAbilityLevel(G[7],$41303853)
call IncUnitAbilityLevel(G[7],$41303852)
call IncUnitAbilityLevel(G[7],$41303856)
call IncUnitAbilityLevel(G[7],$4130384F)
call IncUnitAbilityLevel(G[7],$41303858)
call IncUnitAbilityLevel(G[7],$41303859)
call IncUnitAbilityLevel(G[7],$41303855)
call IncUnitAbilityLevel(G[7],$41303850)
call IncUnitAbilityLevel(G[7],$4130384E)
call IncUnitAbilityLevel(G[7],$4130384D)
call IncUnitAbilityLevel(G[7],$41303851)
call IncUnitAbilityLevel(G[7],$41303042)
call IncUnitAbilityLevel(G[8],$41303853)
call IncUnitAbilityLevel(G[8],$41303852)
call IncUnitAbilityLevel(G[8],$41303856)
call IncUnitAbilityLevel(G[8],$4130384F)
call IncUnitAbilityLevel(G[8],$41303858)
call IncUnitAbilityLevel(G[8],$41303859)
call IncUnitAbilityLevel(G[8],$41303855)
call IncUnitAbilityLevel(G[8],$41303850)
call IncUnitAbilityLevel(G[8],$4130384E)
call IncUnitAbilityLevel(G[8],$4130384D)
call IncUnitAbilityLevel(G[8],$41303851)
call IncUnitAbilityLevel(G[8],$41303042)
endif
if Eco==Gu then
call IncUnitAbilityLevel(G[5],$41303853)
call IncUnitAbilityLevel(G[5],$41303852)
call IncUnitAbilityLevel(G[5],$41303856)
call IncUnitAbilityLevel(G[5],$4130384F)
call IncUnitAbilityLevel(G[5],$41303858)
call IncUnitAbilityLevel(G[5],$41303859)
call IncUnitAbilityLevel(G[5],$41303855)
call IncUnitAbilityLevel(G[5],$41303850)
call IncUnitAbilityLevel(G[5],$4130384E)
call IncUnitAbilityLevel(G[5],$4130384D)
call IncUnitAbilityLevel(G[5],$41303851)
call IncUnitAbilityLevel(G[5],$41303042)
call IncUnitAbilityLevel(G[6],$41303853)
call IncUnitAbilityLevel(G[6],$41303852)
call IncUnitAbilityLevel(G[6],$41303856)
call IncUnitAbilityLevel(G[6],$4130384F)
call IncUnitAbilityLevel(G[6],$41303858)
call IncUnitAbilityLevel(G[6],$41303859)
call IncUnitAbilityLevel(G[6],$41303855)
call IncUnitAbilityLevel(G[6],$41303850)
call IncUnitAbilityLevel(G[6],$4130384E)
call IncUnitAbilityLevel(G[6],$4130384D)
call IncUnitAbilityLevel(G[6],$41303851)
call IncUnitAbilityLevel(G[6],$41303042)
call IncUnitAbilityLevel(G[7],$41303853)
call IncUnitAbilityLevel(G[7],$41303852)
call IncUnitAbilityLevel(G[7],$41303856)
call IncUnitAbilityLevel(G[7],$4130384F)
call IncUnitAbilityLevel(G[7],$41303858)
call IncUnitAbilityLevel(G[7],$41303859)
call IncUnitAbilityLevel(G[7],$41303855)
call IncUnitAbilityLevel(G[7],$41303850)
call IncUnitAbilityLevel(G[7],$4130384E)
call IncUnitAbilityLevel(G[7],$4130384D)
call IncUnitAbilityLevel(G[7],$41303851)
call IncUnitAbilityLevel(G[7],$41303042)
call IncUnitAbilityLevel(G[8],$41303853)
call IncUnitAbilityLevel(G[8],$41303852)
call IncUnitAbilityLevel(G[8],$41303856)
call IncUnitAbilityLevel(G[8],$4130384F)
call IncUnitAbilityLevel(G[8],$41303858)
call IncUnitAbilityLevel(G[8],$41303859)
call IncUnitAbilityLevel(G[8],$41303855)
call IncUnitAbilityLevel(G[8],$41303850)
call IncUnitAbilityLevel(G[8],$4130384E)
call IncUnitAbilityLevel(G[8],$4130384D)
call IncUnitAbilityLevel(G[8],$41303851)
call IncUnitAbilityLevel(G[8],$41303042)
endif
if Eco==gu then
call IncUnitAbilityLevel(G[1],$41303853)
call IncUnitAbilityLevel(G[1],$41303852)
call IncUnitAbilityLevel(G[1],$41303856)
call IncUnitAbilityLevel(G[1],$4130384F)
call IncUnitAbilityLevel(G[1],$41303858)
call IncUnitAbilityLevel(G[1],$41303859)
call IncUnitAbilityLevel(G[1],$41303855)
call IncUnitAbilityLevel(G[1],$41303850)
call IncUnitAbilityLevel(G[1],$4130384E)
call IncUnitAbilityLevel(G[1],$4130384D)
call IncUnitAbilityLevel(G[1],$41303851)
call IncUnitAbilityLevel(G[1],$41303042)
call IncUnitAbilityLevel(G[2],$41303853)
call IncUnitAbilityLevel(G[2],$41303852)
call IncUnitAbilityLevel(G[2],$41303856)
call IncUnitAbilityLevel(G[2],$4130384F)
call IncUnitAbilityLevel(G[2],$41303858)
call IncUnitAbilityLevel(G[2],$41303859)
call IncUnitAbilityLevel(G[2],$41303855)
call IncUnitAbilityLevel(G[2],$41303850)
call IncUnitAbilityLevel(G[2],$4130384E)
call IncUnitAbilityLevel(G[2],$4130384D)
call IncUnitAbilityLevel(G[2],$41303851)
call IncUnitAbilityLevel(G[2],$41303042)
call IncUnitAbilityLevel(G[3],$41303853)
call IncUnitAbilityLevel(G[3],$41303852)
call IncUnitAbilityLevel(G[3],$41303856)
call IncUnitAbilityLevel(G[3],$4130384F)
call IncUnitAbilityLevel(G[3],$41303858)
call IncUnitAbilityLevel(G[3],$41303859)
call IncUnitAbilityLevel(G[3],$41303855)
call IncUnitAbilityLevel(G[3],$41303850)
call IncUnitAbilityLevel(G[3],$4130384E)
call IncUnitAbilityLevel(G[3],$4130384D)
call IncUnitAbilityLevel(G[3],$41303851)
call IncUnitAbilityLevel(G[3],$41303042)
call IncUnitAbilityLevel(G[4],$41303853)
call IncUnitAbilityLevel(G[4],$41303852)
call IncUnitAbilityLevel(G[4],$41303856)
call IncUnitAbilityLevel(G[4],$4130384F)
call IncUnitAbilityLevel(G[4],$41303858)
call IncUnitAbilityLevel(G[4],$41303859)
call IncUnitAbilityLevel(G[4],$41303855)
call IncUnitAbilityLevel(G[4],$41303850)
call IncUnitAbilityLevel(G[4],$4130384E)
call IncUnitAbilityLevel(G[4],$4130384D)
call IncUnitAbilityLevel(G[4],$41303851)
call IncUnitAbilityLevel(G[4],$41303042)
endif
endif
set Sqo=Uco
call DestroyGroup(Sqo)
set qW=qW-1
set Wco=null
set Eco=null
set Uco=null
set Pco=null
set Aco=null
set Hco=null
set Jco=null
set Kco=null
set Lco=null
set Xco=null
set Cco=null
set Vco=null
set Nco=null
set Mco=null
set woo=null
set uoo=null
set roo=null
set soo=null
set ioo=null
set Soo=null
set loo=null
set boo=null
set yoo=null
set poo=null
set eoo=null
set foo=null
set Goo=null
set goo=null
set hoo=null
set Foo=null
set koo=null
set joo=null
set xoo=null
set voo=null
set moo=null
set Zoo=null
set Uoo=null
set Ioo=null
set Poo=null
set Koo=null
set Boo=null
set SOo=null
set cOo=null
set oOo=null
set OOo=null
set lOo=null
set eOo=null
set qOo=null
set aOo=null
set nOo=null
set dOo=null
set GOo=null
set jOo=null
set IOo=null
set POo=null
set AOo=null
set KOo=null
set LOo=null
set XOo=null
set COo=null
set wlo=null
set ulo=null
set rlo=null
set tlo=null
set olo=null
set Olo=null
set llo=null
set ylo=null
set plo=null
set elo=null
set qlo=null
set alo=null
set nlo=null
set dlo=null
set flo=null
set Rlo=null
set Tlo=null
set Ylo=null
set Glo=null
set hlo=null
set Flo=null
set jlo=null
set xlo=null
set vlo=null
set mlo=null
set Qlo=null
set Wlo=null
set Elo=null
set Zlo=null
set Ulo=null
set Plo=null
set Alo=null
set Hlo=null
set Jlo=null
set Klo=null
set Llo=null
set Xlo=null
set Mlo=null
set wbo=null
set ubo=null
set rbo=null
set sbo=null
set tbo=null
set ibo=null
set Sbo=null
set cbo=null
set obo=null
set Obo=null
set lbo=null
set bbo=null
set ybo=null
set pbo=null
set ebo=null
set qbo=null
set abo=null
set nbo=null
set dbo=null
set fbo=null
set Rbo=null
set Tbo=null
set Ybo=null
set Gbo=null
set gbo=null
set hbo=null
set Fbo=null
set kbo=null
set jbo=null
set xbo=null
set vbo=null
set mbo=null
set Qbo=null
set Wbo=null
set Ebo=null
set Zbo=null
set Ubo=null
set Ibo=null
set Pbo=null
set Abo=null
set Dbo=null
set Hbo=null
set Jbo=null
set Kbo=null
set Lbo=null
set Xbo=null
set Cbo=null
set Vbo=null
set Bbo=null
set Nbo=null
set Mbo=null
set wyo=null
set uyo=null
set ryo=null
set syo=null
set tyo=null
set iyo=null
set Syo=null
set cyo=null
set oyo=null
set Oyo=null
set lyo=null
set byo=null
set yyo=null
set pyo=null
set eyo=null
set qyo=null
set ayo=null
set nyo=null
set dyo=null
set fyo=null
set Ryo=null
set Tyo=null
set Yyo=null
set Gyo=null
set gyo=null
set hyo=null
set Fyo=null
set kyo=null
set jyo=null
set xyo=null
set vyo=null
set myo=null
set Qyo=null
set Wyo=null
set Eyo=null
set Zyo=null
set Uyo=null
set Iyo=null
set Pyo=null
set Ayo=null
set Dyo=null
set Hyo=null
set Jyo=null
set Kyo=null
set Lyo=null
set Xyo=null
set Cyo=null
set Vyo=null
set Byo=null
set Nyo=null
set Myo=null
set wpo=null
set upo=null
set rpo=null
set spo=null
set tpo=null
set ipo=null
set Spo=null
set cpo=null
set opo=null
set Opo=null
set lpo=null
set bpo=null
set ypo=null
set ppo=null
set epo=null
set qpo=null
set apo=null
set npo=null
set dpo=null
set fpo=null
set Rpo=null
set Tpo=null
set Ypo=null
set Gpo=null
set gpo=null
set hpo=null
set Fpo=null
set kpo=null
set jpo=null
set xpo=null
set vpo=null
set mpo=null
set Qpo=null
set Wpo=null
set Epo=null
set Zpo=null
set Upo=null
set Ipo=null
set Ppo=null
set Apo=null
set Dpo=null
set Hpo=null
set Jpo=null
set Kpo=null
set Npo=null
set Mpo=null
set weo=null
set ueo=null
set reo=null
set seo=null
set teo=null
set ieo=null
set Seo=null
set ceo=null
set oeo=null
set Oeo=null
set leo=null
set beo=null
set yeo=null
set peo=null
set eeo=null
set qeo=null
set aeo=null
set neo=null
set deo=null
set feo=null
set Reo=null
set Teo=null
set Yeo=null
set Geo=null
set geo=null
set heo=null
set keo=null
set veo=null
set meo=null
set Qeo=null
set Eeo=null
set Zeo=null
set Ieo=null
set Peo=null
set Aeo=null
set Deo=null
set Leo=null
set Beo=null
set uqo=null
set iqo=null
set Sqo=null
set bqo=null
set nqo=null
set dqo=null
set Yqo=null
set Gqo=null
set Lqo=null
set Cqo=null
set Vqo=null
set Bqo=null
set Nqo=null
endfunction
function w5e takes nothing returns nothing
set qW=0
call pao("via function reference LosePlayer, line 921")
endfunction
function w7s takes nothing returns boolean
local trigger K6r
local trigger L6r
local playerunitevent X6r
local trigger C6r
local playerunitevent V6r
local integer B6r
local trigger N6r
local boolexpr M6r
set ll=CreateTrigger()
set K6r=ll
call DisableTrigger(K6r)
set L6r=ll
set X6r=EVENT_PLAYER_UNIT_DEATH
set C6r=L6r
set V6r=X6r
set B6r=0
loop
call TriggerRegisterPlayerUnitEvent(C6r,Player(B6r),V6r,null)
set B6r=B6r+1
exitwhen B6r==bj_MAX_PLAYER_SLOTS
endloop
set N6r=ll
set M6r=Condition(XM)
call TriggerAddCondition(N6r,M6r)
set K6r=null
set L6r=null
set X6r=null
set C6r=null
set V6r=null
set N6r=null
set M6r=null
return true
endfunction
function w9S takes nothing returns nothing
local integer A8S=$524D3072
local player D8S=on
local integer E8S=GetPlayerTechCount(D8S,A8S,true)
local group Z8S=CreateGroup()
local filterfunc U8S=Filter(D5)
local unit I8S
local group P8S
local group H8S
local group J8S
local unit K8S
local unit L8S
local integer X8S
local group C8S
local boolexpr V8S
local player B8S
local texttag N8S
local trigger M8S
call GroupEnumUnitsInRect(Z8S,bj_mapInitialPlayableArea,U8S)
set P8S=Z8S
loop
set H8S=P8S
exitwhen not (FirstOfGroup(H8S)!=null)
set J8S=P8S
set K8S=FirstOfGroup(J8S)
call GroupRemoveUnit(J8S,K8S)
set I8S=K8S
set L8S=I8S
set X8S=$41706976
call UnitRemoveAbility(L8S,X8S)
endloop
set C8S=Z8S
call DestroyGroup(C8S)
set V8S=U8S
call DestroyBoolExpr(V8S)
set B8S=on
if o[GetPlayerId(B8S)]!=null then
set tT=300-60*E8S
call TimerStart(sT,I2R(300-60*E8S),false,H5)
else
set tT=0
set N8S=rT
call DestroyTextTag(N8S)
set M8S=uT
call DisableTrigger(M8S)
endif
set Z8S=null
set U8S=null
set I8S=null
set P8S=null
set D8S=null
set H8S=null
set J8S=null
set K8S=null
set L8S=null
set C8S=null
set V8S=null
set B8S=null
set N8S=null
set M8S=null
endfunction
function w9c takes nothing returns nothing
local unit X8c=GetSpellAbilityUnit()
local unit V8c=X8c
local integer C8c
local unit B8c
local unit N8c
local boolean M8c
if GetUnitTypeId(V8c)==$78303063 then
set M8c=true
else
set B8c=X8c
set M8c=GetUnitTypeId(B8c)==$7830306A
endif
if M8c then
set N8c=X8c
set C8c=GetPlayerTechCount(GetOwningPlayer(N8c),$524D3071,true)
if GetRandomInt(1,100)<=3*C8c then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl",X8c,"chest"))
call UnitResetCooldown(X8c)
endif
endif
set X8c=null
set V8c=null
set B8c=null
set N8c=null
endfunction
function w9s takes nothing returns nothing
local unit Z8s=GetTriggerUnit()
local unit A8s=Z8s
local integer U8s=GetUnitTypeId(A8s)
local unit D8s=Z8s
local player I8s=GetOwningPlayer(D8s)
local player H8s=I8s
local integer P8s=GetPlayerId(H8s)
local unit J8s
local real K8s
local real L8s
local real X8s
local sound C8s
local unit V8s
local real B8s
local real N8s
local real M8s
if U8s==$6E656633 then
set J8s=Z8s
set K8s=70.
set L8s=70.
set X8s=70.
call SetUnitScale(J8s,K8s*.01,L8s*.01,X8s*.01)
set C8s=Vs
call StartSound(C8s)
set i[P8s]=$4E6D616E
endif
if U8s==$6E65676D then
call RemoveUnitFromStock(O[P8s],A[P8s])
call RemoveUnitFromStock(b[P8s],A[P8s])
call RemoveUnitFromStock(l[P8s],A[P8s])
set A[P8s]=$6F776172
call AddUnitToStock(O[P8s],A[P8s],1,3)
call AddUnitToStock(b[P8s],A[P8s],1,3)
call AddUnitToStock(l[P8s],A[P8s],1,3)
endif
if U8s==$6E656634 then
call RemoveUnitFromStock(O[P8s],D[P8s])
call RemoveUnitFromStock(b[P8s],D[P8s])
call RemoveUnitFromStock(l[P8s],D[P8s])
set D[P8s]=$6E30304E
call AddUnitToStock(O[P8s],D[P8s],1,3)
call AddUnitToStock(b[P8s],D[P8s],1,3)
call AddUnitToStock(l[P8s],D[P8s],1,3)
endif
if U8s==$6E656635 then
call RemoveUnitFromStock(O[P8s],H[P8s])
call RemoveUnitFromStock(b[P8s],H[P8s])
call RemoveUnitFromStock(l[P8s],H[P8s])
set H[P8s]=$6E6F6D67
call AddUnitToStock(O[P8s],H[P8s],1,3)
call AddUnitToStock(b[P8s],H[P8s],1,3)
call AddUnitToStock(l[P8s],H[P8s],1,3)
endif
if U8s==$6E656636 then
set J[P8s]=$6E736C72
endif
if U8s==$6E656632 then
set K[P8s]=$6F303346
endif
if U8s==$756E7031 then
set K[P8s]=$6E303252
endif
if U8s==$75676F6C then
set L[P8s]=$6F303348
endif
if U8s==$756E7032 then
set V8s=Z8s
set B8s=100.
set N8s=100.
set M8s=100.
call SetUnitScale(V8s,B8s*.01,N8s*.01,M8s*.01)
call SetPlayerTechResearched(I8s,$52303250,1)
call SetPlayerTechResearched(Player(P8s+4),$52303250,1)
endif
set Z8s=null
set I8s=null
set A8s=null
set D8s=null
set H8s=null
set J8s=null
set C8s=null
set V8s=null
endfunction
function wAp takes nothing returns boolean
local trigger XPp
local trigger CPp
local rect VPp
local region BPp
local trigger NPp
local boolexpr MPp
set Xa=CreateTrigger()
set XPp=Xa
call DisableTrigger(XPp)
set CPp=Xa
set VPp=bj_mapInitialPlayableArea
set BPp=CreateRegion()
call RegionAddRect(BPp,VPp)
call TriggerRegisterEnterRegion(CPp,BPp,null)
set NPp=Xa
set MPp=Condition(k5)
call TriggerAddCondition(NPp,MPp)
set XPp=null
set CPp=null
set VPp=null
set BPp=null
set NPp=null
set MPp=null
return true
endfunction
function wFl takes nothing returns nothing
local integer Phl=GetResearched()
local unit Ahl
local integer Dhl
local unit Hhl
local unit Jhl
local integer Khl
local player Lhl
local unit Xhl
local unit Chl
local integer Vhl
local integer Bhl
local player Nhl
local unit Mhl
if Phl==$524D3131 then
set Ahl=GetTriggerUnit()
set Hhl=Ahl
set Dhl=GetPlayerTechCount(GetOwningPlayer(Hhl),$524D3131,true)
if Dhl==1 then
set Xhl=Ahl
set Lhl=GetOwningPlayer(Xhl)
set Jhl=c[GetPlayerId(Lhl)]
set Khl=$41303034
call UnitAddAbility(Jhl,Khl)
else
set Mhl=Ahl
set Nhl=GetOwningPlayer(Mhl)
set Chl=c[GetPlayerId(Nhl)]
set Vhl=$41303034
set Bhl=Dhl
call SetUnitAbilityLevel(Chl,Vhl,Bhl)
endif
endif
set Ahl=null
set Hhl=null
set Jhl=null
set Lhl=null
set Xhl=null
set Chl=null
set Nhl=null
set Mhl=null
endfunction
function wFw takes nothing returns boolean
local unit Vhw=GetFilterUnit()
local unit Bhw=Vhw
local unittype Nhw=UNIT_TYPE_STRUCTURE
local boolean Mhw=IsUnitType(Bhw,Nhw)==false
set Vhw=null
set Bhw=null
set Nhw=null
return Mhw
endfunction
function wHl takes nothing returns boolean
return true
endfunction
function wHy takes nothing returns boolean
local unit JDy=GetFilterUnit()
local unit LDy=JDy
local integer KDy=GetUnitTypeId(LDy)
local unit XDy=JDy
local unit VDy=GetTriggerUnit()
local player CDy=GetOwningPlayer(VDy)
local unit BDy
local unittype NDy
local boolean MDy
if IsUnitEnemy(XDy,CDy) then
set BDy=JDy
set NDy=UNIT_TYPE_STRUCTURE
set MDy=not IsUnitType(BDy,NDy)
else
set MDy=false
endif
set JDy=null
set LDy=null
set XDy=null
set CDy=null
set VDy=null
set BDy=null
set NDy=null
return MDy and not (KDy==$75303030 or KDy==$7864756D)
endfunction
function xqS takes string BeS returns nothing
local integer NeS
local unit MeS
local integer wqS
local integer uqS
local integer rqS
local player sqS
local unit tqS
local unit iqS
local integer SqS
local unit cqS
local integer oqS
local unit OqS
local integer lqS
local unit bqS
local integer yqS
local unit pqS
local integer eqS
local unit qqS
local integer aqS
local unit nqS
local integer dqS
local unit fqS
local integer RqS
local unit TqS
local integer YqS
local unit GqS
local integer gqS
local unit hqS
local integer FqS
local unit kqS
local integer jqS
set aW[qW]=BeS
set qW=qW+1
set NeS=GetSpellAbilityId()
set MeS=GetTriggerUnit()
set tqS=MeS
set sqS=GetOwningPlayer(tqS)
set wqS=GetPlayerId(sqS)
if Ztt(WY,NeS,"when calling has in PickUltimate, line 69") then
set uqS=gar(WY,NeS,"when calling get in PickUltimate, line 70")
set iqS=MeS
set SqS=$41304F41
call UnitRemoveAbility(iqS,SqS)
set cqS=MeS
set oqS=uqS
call UnitAddAbility(cqS,oqS)
set mY[wqS]=uqS
if NeS==$41305236 then
set OqS=MeS
set lqS=j[wqS]
call UnitRemoveAbility(OqS,lqS)
set x[wqS]=$4132344C
set bqS=MeS
set yqS=x[wqS]
call UnitAddAbility(bqS,yqS)
endif
if NeS==$41305346 then
set pqS=MeS
set eqS=j[wqS]
call UnitRemoveAbility(pqS,eqS)
set x[wqS]=$4132344F
set qqS=MeS
set aqS=x[wqS]
call UnitAddAbility(qqS,aqS)
endif
endif
if Ztt(EY,NeS,"when calling has in PickUltimate, line 82") and ju==true then
set rqS=gar(EY,NeS,"when calling get in PickUltimate, line 83")
set nqS=MeS
set dqS=$41323645
call UnitRemoveAbility(nqS,dqS)
set fqS=MeS
set RqS=rqS
call UnitAddAbility(fqS,RqS)
set QY[wqS]=rqS
if NeS==$41305236 then
set TqS=MeS
set YqS=j[wqS]
call UnitRemoveAbility(TqS,YqS)
set x[wqS]=$4132344C
set GqS=MeS
set gqS=x[wqS]
call UnitAddAbility(GqS,gqS)
endif
if NeS==$41305346 then
set hqS=MeS
set FqS=j[wqS]
call UnitRemoveAbility(hqS,FqS)
set x[wqS]=$4132344F
set kqS=MeS
set jqS=x[wqS]
call UnitAddAbility(kqS,jqS)
endif
endif
set qW=qW-1
set MeS=null
set sqS=null
set tqS=null
set iqS=null
set cqS=null
set OqS=null
set bqS=null
set pqS=null
set qqS=null
set nqS=null
set fqS=null
set TqS=null
set GqS=null
set hqS=null
set kqS=null
endfunction
function wIl takes nothing returns nothing
set qW=0
call xqS("via function reference PickUltimate, line 65")
endfunction
function wIw takes nothing returns nothing
local integer BUw=GetSpellAbilityId()
local unit NUw
local unit MUw
if BUw==$41313034 then
set NUw=GetSpellAbilityUnit()
set MUw=NUw
call SetPlayerTechResearched(GetOwningPlayer(MUw),$52303645,1)
endif
set NUw=null
set MUw=null
endfunction
function wKl takes nothing returns boolean
return true
endfunction
function wMS takes nothing returns boolean
local unit DNS=GetEnteringUnit()
local unit HNS=DNS
local player JNS=Ud
local unit KNS
local unit LNS
local unit XNS
local unit CNS
local boolean VNS
local boolean BNS
local boolean NNS
local boolean MNS
if (HNS!=null and IsUnitAlly(HNS,JNS))==true then
set KNS=DNS
if GetUnitTypeId(KNS)==$6F303332 then
set VNS=true
else
set LNS=DNS
set VNS=GetUnitTypeId(LNS)==$6F303333
endif
if VNS then
set BNS=true
else
set XNS=DNS
set BNS=GetUnitTypeId(XNS)==$6F303341
endif
if BNS then
set NNS=true
else
set CNS=DNS
set NNS=GetUnitTypeId(CNS)==$6E30314C
endif
set MNS=NNS
else
set MNS=false
endif
set DNS=null
set HNS=null
set JNS=null
set KNS=null
set LNS=null
set XNS=null
set CNS=null
return MNS
endfunction
function Zai takes string Kqi returns nothing
local integer Lqi
local unit Xqi
local integer Cqi
local real Vqi
local real Bqi
local unit Nqi
local real Mqi
local real wai
local player uai
local integer rai
local real sai
local real tai
local integer iai
local unit Sai
local unit cai
local integer oai
local unit Oai
local unit lai
local unit bai
local unit yai
local unit pai
local string eai
local integer qai
local real aai
local integer nai
local string dai
local unit fai
local integer Rai
local unit Tai
local unit Yai
local real Gai
local unit gai
local integer hai
local unit Fai
local integer kai
local integer jai
local unit xai
local string vai
local real mai
local real Qai
local real Wai
local real Eai
set aW[qW]=Kqi
set qW=qW+1
set Lqi=GetSpellAbilityId()
set Xqi=GetSpellAbilityUnit()
if Lqi==$4132315A then
set cai=Xqi
set oai=$41303453
set Cqi=GetUnitAbilityLevel(cai,oai)
set Oai=Xqi
set Vqi=GetUnitX(Oai)
set lai=Xqi
set Bqi=GetUnitY(lai)
set Nqi=GetTriggerUnit()
set bai=Nqi
set Mqi=GetUnitX(bai)
set yai=Nqi
set wai=GetUnitY(yai)
set pai=Xqi
set uai=GetOwningPlayer(pai)
set eai="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_JainaProudmooreK in JainaProudmooreK, line 535"
set aW[qW]=eai
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set qai=fF
set RF[qai]=820
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_JainaProudmooreK.","when calling error in JainaProudmooreK, line 535")
set qai=0
endif
else
set dF=dF-1
set qai=nF[dF]
set RF[qai]=820
endif
set qW=qW-1
set rai=qai
set ov[rai]=uai
set Ov[rai]=Vqi
set lv[rai]=Bqi
set bv[rai]=Xqi
set yv[rai]=Cqi
set pv[rai]=Mqi
set ev[rai]=wai
set aai=.3
set nai=rai
set dai="when calling doAfter in JainaProudmooreK, line 535"
set aW[qW]=dai
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),aai,nai,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
if Lqi==$41323158 then
set sai=GetSpellTargetX()
set tai=GetSpellTargetY()
set fai=Xqi
set Rai=$41323158
set iai=GetUnitAbilityLevel(fai,Rai)
set Tai=Xqi
set Sai=CreateUnit(GetOwningPlayer(Tai),$75303030,sai,tai,0.)
set Yai=Sai
set Gai=3.
call UnitApplyTimedLife(Yai,$42544C46,Gai)
set gai=Sai
set hai=$41323159
call UnitAddAbility(gai,hai)
set Fai=Sai
set kai=$41323159
set jai=iai
call SetUnitAbilityLevel(Fai,kai,jai)
set xai=Sai
set vai="silence"
set Wai=sai
set Eai=tai
set mai=Wai
set Qai=Eai
call IssuePointOrder(xai,vai,mai,Qai)
endif
set qW=qW-1
set Xqi=null
set Nqi=null
set uai=null
set Sai=null
set cai=null
set Oai=null
set lai=null
set bai=null
set yai=null
set pai=null
set fai=null
set Tai=null
set Yai=null
set gai=null
set Fai=null
set xai=null
endfunction
function wMe takes nothing returns nothing
set qW=0
call Zai("via function reference JainaProudmooreK, line 524")
endfunction
function wMr takes nothing returns boolean
local trigger XNr
local rect CNr
local region VNr
local trigger BNr
local boolexpr NNr
local trigger MNr
set lT=CreateTrigger()
set XNr=lT
set CNr=bj_mapInitialPlayableArea
set VNr=CreateRegion()
call RegionAddRect(VNr,CNr)
call TriggerRegisterEnterRegion(XNr,VNr,null)
set BNr=lT
set NNr=Condition(Z0w)
call TriggerAddCondition(BNr,NNr)
set MNr=lT
call DisableTrigger(MNr)
set XNr=null
set CNr=null
set VNr=null
set BNr=null
set NNr=null
set MNr=null
return true
endfunction
function wPt takes nothing returns nothing
local item iUt=GetManipulatedItem()
local unit SUt=GetTriggerUnit()
local item lUt=iUt
local string cUt=GetItemName(lUt)
local item bUt=iUt
local integer oUt=GetItemLevel(bUt)
local unit pUt=SUt
local player yUt=GetOwningPlayer(pUt)
local player OUt=Player(GetPlayerId(yUt)-4)
local unit eUt
local unittype qUt
local unit aUt
local unit nUt
local unit dUt
local unit fUt
local unit RUt
local unit TUt
local unit YUt
local unit GUt
local unit gUt
local unit hUt
local unit FUt
local unit kUt
local unit jUt
local unit xUt
local unit vUt
local unit mUt
local unit QUt
local unit WUt
local unit EUt
local unit ZUt
local unit UUt
local unit IUt
local unit PUt
local unit AUt
local unit DUt
local unit HUt
local unit JUt
local unit KUt
local unit LUt
local unit XUt
local string CUt
local real VUt
local player BUt
local string NUt
local string MUt
local string wIt
local string uIt
local integer rIt
local integer sIt
local integer tIt
local unit iIt
local string SIt
local real cIt
local player oIt
local string OIt
local string lIt
local string bIt
local string yIt
local integer pIt
local integer eIt
local integer qIt
local unit aIt
local boolean nIt
local boolean dIt
local boolean fIt
local boolean RIt
local boolean TIt
local boolean YIt
local boolean GIt
local boolean gIt
local boolean hIt
local boolean FIt
local boolean kIt
local boolean jIt
local boolean xIt
local boolean vIt
local boolean mIt
local boolean QIt
local boolean WIt
local boolean EIt
local boolean ZIt
local boolean UIt
local boolean IIt
local boolean PIt
local boolean AIt
local boolean DIt
local boolean HIt
local boolean JIt
local boolean KIt
local boolean LIt
local boolean XIt
local boolean CIt
local string VIt
local string BIt
local string NIt
local string MIt
if oUt>0 and oUt<5 then
set eUt=SUt
set qUt=UNIT_TYPE_HERO
set nIt=IsUnitType(eUt,qUt)
else
set nIt=false
endif
if nIt then
set aUt=SUt
set nUt=aUt
if GetUnitTypeId(nUt)==$4830324B then
set dIt=true
else
set dUt=aUt
set dIt=GetUnitTypeId(dUt)==$484D3032
endif
if dIt then
set fIt=true
else
set fUt=aUt
set fIt=GetUnitTypeId(fUt)==$55776172
endif
if fIt then
set RIt=true
else
set RUt=aUt
set RIt=GetUnitTypeId(RUt)==$4E6D616E
endif
if RIt then
set TIt=true
else
set TUt=aUt
set TIt=GetUnitTypeId(TUt)==$484D3035
endif
if TIt then
set YIt=true
else
set YUt=aUt
set YIt=GetUnitTypeId(YUt)==$486A6169
endif
if YIt then
set GIt=true
else
set GUt=aUt
set GIt=GetUnitTypeId(GUt)==$45657669
endif
if GIt then
set gIt=true
else
set gUt=aUt
set gIt=GetUnitTypeId(gUt)==$45646D6D
endif
if gIt then
set hIt=true
else
set hUt=aUt
set hIt=GetUnitTypeId(hUt)==$456B6565
endif
if hIt then
set FIt=true
else
set FUt=aUt
set FIt=GetUnitTypeId(FUt)==$45303039
endif
if FIt then
set kIt=true
else
set kUt=aUt
set kIt=GetUnitTypeId(kUt)==$5530304C
endif
if kIt then
set jIt=true
else
set jUt=aUt
set jIt=GetUnitTypeId(jUt)==$484D3033
endif
if jIt then
set xIt=true
else
set xUt=aUt
set xIt=GetUnitTypeId(xUt)==$456D3173
endif
if xIt then
set vIt=true
else
set vUt=aUt
set vIt=GetUnitTypeId(vUt)==$484D3036
endif
if vIt then
set mIt=true
else
set mUt=aUt
set mIt=GetUnitTypeId(mUt)==$484D3037
endif
if mIt then
set QIt=true
else
set QUt=aUt
set QIt=GetUnitTypeId(QUt)==$4F636268
endif
if QIt then
set WIt=true
else
set WUt=aUt
set WIt=GetUnitTypeId(WUt)==$4F726B6E
endif
if WIt then
set EIt=true
else
set EUt=aUt
set EIt=GetUnitTypeId(EUt)==$45303037
endif
if EIt then
set ZIt=true
else
set ZUt=aUt
set ZIt=GetUnitTypeId(ZUt)==$45303038
endif
if ZIt then
set UIt=true
else
set UUt=aUt
set UIt=GetUnitTypeId(UUt)==$55616E62
endif
if UIt then
set IIt=true
else
set IUt=aUt
set IIt=GetUnitTypeId(IUt)==$48617266
endif
if IIt then
set PIt=true
else
set PUt=aUt
set PIt=GetUnitTypeId(PUt)==$55647468
endif
if PIt then
set AIt=true
else
set AUt=aUt
set AIt=GetUnitTypeId(AUt)==$484D3038
endif
if AIt then
set DIt=true
else
set DUt=aUt
set DIt=GetUnitTypeId(DUt)==$55303048
endif
if DIt then
set HIt=true
else
set HUt=aUt
set HIt=GetUnitTypeId(HUt)==$55303046
endif
if HIt then
set JIt=true
else
set JUt=aUt
set JIt=GetUnitTypeId(JUt)==$5530304A
endif
if JIt then
set KIt=true
else
set KUt=aUt
set KIt=GetUnitTypeId(KUt)==$5530304D
endif
if KIt then
set LIt=true
else
set LUt=aUt
set LIt=GetUnitTypeId(LUt)==$55303047
endif
if LIt then
set XIt=true
else
set XUt=aUt
set XIt=GetUnitTypeId(XUt)==$4F303344
endif
set CIt=XIt==false
else
set CIt=false
endif
if CIt then
if oUt==1 then
set NUt="{0} get item {1}"
set iIt=SUt
set MUt=GetHeroProperName(iIt)
set wIt=cUt
set uIt=NUt
set rIt=0
set VIt=uIt
set sIt=rIt
set uIt=Tgl(VIt,"{"+I2S(sIt)+"}",MUt)
set rIt=rIt+1
set BIt=uIt
set tIt=rIt
set uIt=Tgl(BIt,"{"+I2S(tIt)+"}",wIt)
set rIt=rIt+1
set CUt=uIt
set VUt=10.
set BUt=OUt
call DisplayTimedTextToPlayer(BUt,0.,0.,VUt,CUt)
else
set OIt="{0} up item to {1}"
set aIt=SUt
set lIt=GetHeroProperName(aIt)
set bIt=cUt
set yIt=OIt
set pIt=0
set NIt=yIt
set eIt=pIt
set yIt=Tgl(NIt,"{"+I2S(eIt)+"}",lIt)
set pIt=pIt+1
set MIt=yIt
set qIt=pIt
set yIt=Tgl(MIt,"{"+I2S(qIt)+"}",bIt)
set pIt=pIt+1
set SIt=yIt
set cIt=10.
set oIt=OUt
call DisplayTimedTextToPlayer(oIt,0.,0.,cIt,SIt)
endif
endif
set iUt=null
set SUt=null
set OUt=null
set lUt=null
set bUt=null
set yUt=null
set pUt=null
set eUt=null
set qUt=null
set aUt=null
set nUt=null
set dUt=null
set fUt=null
set RUt=null
set TUt=null
set YUt=null
set GUt=null
set gUt=null
set hUt=null
set FUt=null
set kUt=null
set jUt=null
set xUt=null
set vUt=null
set mUt=null
set QUt=null
set WUt=null
set EUt=null
set ZUt=null
set UUt=null
set IUt=null
set PUt=null
set AUt=null
set DUt=null
set HUt=null
set JUt=null
set KUt=null
set LUt=null
set XUt=null
set BUt=null
set iIt=null
set oIt=null
set aIt=null
endfunction
function wQi takes nothing returns nothing
set qW=0
call DFp("via function reference PickRace, line 1575")
endfunction
function wSO takes nothing returns boolean
return true
endfunction
function wUt takes nothing returns boolean
local unit XZt=GetFilterUnit()
local unit CZt
local unit VZt
local unittype BZt
local boolean NZt
local boolean MZt
if IsUnitAlly(XZt,wq)==true then
set CZt=XZt
set NZt=UnitAlive(CZt)==true
else
set NZt=false
endif
if NZt then
set VZt=XZt
set BZt=UNIT_TYPE_STRUCTURE
set MZt=IsUnitType(VZt,BZt)==false
else
set MZt=false
endif
set XZt=null
set CZt=null
set VZt=null
set BZt=null
return MZt
endfunction
function wUw takes nothing returns nothing
local unit wZw=GetTriggerUnit()
local unit rZw=wZw
local player uZw=GetOwningPlayer(rZw)
local unit sZw
local string tZw
local real iZw
local real SZw
local unit cZw
local unittype oZw
local unit OZw
local string lZw
local real bZw
local real yZw
local unit pZw
local unittype eZw
local unit qZw
local string aZw
local real nZw
local real dZw
local unit fZw
local unittype RZw
local unit TZw
local string YZw
local real GZw
local real gZw
local unit hZw
local unittype FZw
local unit kZw
local string jZw
local real xZw
local real vZw
local unit mZw
local unittype QZw
local unit WZw
local string EZw
local real ZZw
local real UZw
local unit IZw
local unittype PZw
local real AZw
local real DZw
local real HZw
local real JZw
local real KZw
local real LZw
local real XZw
local real CZw
local real VZw
local real BZw
local real NZw
local real MZw
if uZw==du then
if Ew[2]==true then
set sZw=wZw
set tZw="attack"
set AZw=Qw[49]
set DZw=Ww[49]
set iZw=AZw
set SZw=DZw
call IssuePointOrder(sZw,tZw,iZw,SZw)
set cZw=wZw
set oZw=UNIT_TYPE_HERO
if IsUnitType(cZw,oZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,49)
endif
else
set OZw=wZw
set lZw="attack"
set HZw=Qw[31]
set JZw=Ww[31]
set bZw=HZw
set yZw=JZw
call IssuePointOrder(OZw,lZw,bZw,yZw)
set pZw=wZw
set eZw=UNIT_TYPE_HERO
if IsUnitType(pZw,eZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,31)
endif
endif
endif
if uZw==nu then
set qZw=wZw
set aZw="attack"
set KZw=Qw[31]
set LZw=Ww[31]
set nZw=KZw
set dZw=LZw
call IssuePointOrder(qZw,aZw,nZw,dZw)
set fZw=wZw
set RZw=UNIT_TYPE_HERO
if IsUnitType(fZw,RZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,31)
endif
endif
if uZw==fu then
set TZw=wZw
set YZw="attack"
set XZw=Qw[49]
set CZw=Ww[49]
set GZw=XZw
set gZw=CZw
call IssuePointOrder(TZw,YZw,GZw,gZw)
set hZw=wZw
set FZw=UNIT_TYPE_HERO
if IsUnitType(hZw,FZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,49)
endif
endif
if uZw==Ru then
if Ew[1]==true then
set kZw=wZw
set jZw="attack"
set VZw=Qw[31]
set BZw=Ww[31]
set xZw=VZw
set vZw=BZw
call IssuePointOrder(kZw,jZw,xZw,vZw)
set mZw=wZw
set QZw=UNIT_TYPE_HERO
if IsUnitType(mZw,QZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,31)
endif
else
set WZw=wZw
set EZw="attack"
set NZw=Qw[49]
set MZw=Ww[49]
set ZZw=NZw
set UZw=MZw
call IssuePointOrder(WZw,EZw,ZZw,UZw)
set IZw=wZw
set PZw=UNIT_TYPE_HERO
if IsUnitType(IZw,PZw) then
call SaveInteger(qu,GetHandleId(wZw),$6D6F7665,49)
endif
endif
endif
set wZw=null
set uZw=null
set rZw=null
set sZw=null
set cZw=null
set oZw=null
set OZw=null
set pZw=null
set eZw=null
set qZw=null
set fZw=null
set RZw=null
set TZw=null
set hZw=null
set FZw=null
set kZw=null
set mZw=null
set QZw=null
set WZw=null
set IZw=null
set PZw=null
endfunction
function wVc takes nothing returns boolean
return true
endfunction
function wZb takes nothing returns boolean
local unit JEb=GetTriggerUnit()
local unit KEb=GetAttacker()
local unit LEb=JEb
local unit XEb
local integer CEb
local unit VEb
local unittype BEb
local boolean NEb
local boolean MEb
if GetUnitTypeId(LEb)==$55303043 then
set XEb=JEb
set CEb=$41313457
set NEb=GetUnitAbilityLevel(XEb,CEb)>0
else
set NEb=false
endif
if NEb then
set VEb=KEb
set BEb=UNIT_TYPE_HERO
set MEb=IsUnitType(VEb,BEb)==true
else
set MEb=false
endif
set JEb=null
set KEb=null
set LEb=null
set XEb=null
set VEb=null
set BEb=null
return MEb
endfunction
function wZp takes nothing returns nothing
local unit mEp=GetTriggerUnit()
local unit UEp=mEp
local group QEp
local filterfunc WEp
local unit EEp
local group ZEp
local group IEp
local group PEp
local unit AEp
local unit DEp
local real HEp
local unit JEp
local unitstate KEp
local real LEp
local unit XEp
local unitstate CEp
local group VEp
local boolexpr BEp
local unit NEp
local unitstate MEp
if GetUnitTypeId(UEp)==$5530304A then
set QEp=CreateGroup()
set WEp=Filter(M1)
call GroupEnumUnitsInRect(QEp,bj_mapInitialPlayableArea,WEp)
set ZEp=QEp
loop
set IEp=ZEp
exitwhen not (FirstOfGroup(IEp)!=null)
set PEp=ZEp
set AEp=FirstOfGroup(PEp)
call GroupRemoveUnit(PEp,AEp)
set EEp=AEp
set DEp=EEp
set HEp=500.
set JEp=DEp
set KEp=UNIT_STATE_LIFE
set LEp=HEp
set NEp=JEp
set MEp=KEp
set XEp=JEp
set CEp=KEp
call SetUnitState(NEp,MEp,GetUnitState(XEp,CEp)+LEp)
call DestroyEffect(AddSpecialEffectTarget("Heal Orange.mdl",EEp,"origin"))
endloop
set VEp=QEp
call DestroyGroup(VEp)
set BEp=WEp
call DestroyBoolExpr(BEp)
endif
set mEp=null
set QEp=null
set WEp=null
set EEp=null
set ZEp=null
set UEp=null
set IEp=null
set PEp=null
set AEp=null
set DEp=null
set JEp=null
set KEp=null
set XEp=null
set CEp=null
set VEp=null
set BEp=null
set NEp=null
set MEp=null
endfunction
function cnw takes nothing returns boolean
local unit tnw=GetTriggerUnit()
local integer inw=bj_forLoopAIndex
local boolean Snw=GetItemTypeId(UnitItemInSlot(tnw,inw-1))==Os[4]
set tnw=null
return Snw
endfunction
function waw takes nothing returns nothing
local integer Aqw
local player Dqw
local playerstate Hqw
local player Jqw
local playerstate Kqw
local integer Lqw
local player Xqw
local playerstate Cqw
local integer Vqw
local player Bqw
local playerstate Nqw
local integer Mqw
set ls[3]=0
set Os[4]=GetItemTypeId(GetManipulatedItem())
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=6
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if cnw() then
set ls[3]=ls[3]+1
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
if ls[3]>1 then
call RemoveItem(GetItemOfTypeFromUnitBJ(GetTriggerUnit(),Os[4]))
set Aqw=300
set Dqw=GetOwningPlayer(GetTriggerUnit())
set Hqw=PLAYER_STATE_RESOURCE_GOLD
if Aqw>0 then
if Hqw==PLAYER_STATE_RESOURCE_GOLD then
set Jqw=Dqw
set Kqw=PLAYER_STATE_GOLD_GATHERED
set Lqw=Aqw
call SetPlayerState(Jqw,Kqw,GetPlayerState(Jqw,Kqw)+Lqw)
elseif Hqw==PLAYER_STATE_RESOURCE_LUMBER then
set Xqw=Dqw
set Cqw=PLAYER_STATE_LUMBER_GATHERED
set Vqw=Aqw
call SetPlayerState(Xqw,Cqw,GetPlayerState(Xqw,Cqw)+Vqw)
endif
endif
set Bqw=Dqw
set Nqw=Hqw
set Mqw=Aqw
call SetPlayerState(Bqw,Nqw,GetPlayerState(Bqw,Nqw)+Mqw)
call DisplayTimedTextToPlayer(Player(GetPlayerId(GetOwningPlayer(GetTriggerUnit()))-4),0.,0.,10.,"You got 300 gold for Lv3 item!")
else
set ls[3]=0
set Os[4]=GetItemTypeId(null)
endif
set Dqw=null
set Hqw=null
set Jqw=null
set Kqw=null
set Xqw=null
set Cqw=null
set Bqw=null
set Nqw=null
endfunction
function wcS takes nothing returns boolean
local playerunitevent NSS=EVENT_PLAYER_UNIT_SPELL_CAST
local code MSS=Hrw
call emO(NSS,null,MSS,null)
set NSS=null
return true
endfunction
function wfo takes nothing returns nothing
local unit wdo=GetTriggerUnit()
local unit rdo=wdo
local player udo=GetOwningPlayer(rdo)
local unit sdo
local string tdo
local real ido
local real Sdo
local unit cdo
local unittype odo
local unit Odo
local string ldo
local real bdo
local real ydo
local unit pdo
local unittype edo
local unit qdo
local string ado
local real ndo
local real ddo
local unit fdo
local unittype Rdo
local unit Tdo
local string Ydo
local real Gdo
local real gdo
local unit hdo
local unittype Fdo
local unit kdo
local string jdo
local real xdo
local real vdo
local unit mdo
local unittype Qdo
local unit Wdo
local string Edo
local real Zdo
local real Udo
local unit Ido
local unittype Pdo
local real Ado
local real Ddo
local real Hdo
local real Jdo
local real Kdo
local real Ldo
local real Xdo
local real Cdo
local real Vdo
local real Bdo
local real Ndo
local real Mdo
if udo==du then
if Ew[2]==true then
set sdo=wdo
set tdo="attack"
set Ado=Qw[16]
set Ddo=Ww[16]
set ido=Ado
set Sdo=Ddo
call IssuePointOrder(sdo,tdo,ido,Sdo)
set cdo=wdo
set odo=UNIT_TYPE_HERO
if IsUnitType(cdo,odo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,16)
endif
else
set Odo=wdo
set ldo="attack"
set Hdo=Qw[40]
set Jdo=Ww[40]
set bdo=Hdo
set ydo=Jdo
call IssuePointOrder(Odo,ldo,bdo,ydo)
set pdo=wdo
set edo=UNIT_TYPE_HERO
if IsUnitType(pdo,edo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,40)
endif
endif
endif
if udo==nu then
set qdo=wdo
set ado="attack"
set Kdo=Qw[40]
set Ldo=Ww[40]
set ndo=Kdo
set ddo=Ldo
call IssuePointOrder(qdo,ado,ndo,ddo)
set fdo=wdo
set Rdo=UNIT_TYPE_HERO
if IsUnitType(fdo,Rdo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,40)
endif
endif
if udo==fu then
set Tdo=wdo
set Ydo="attack"
set Xdo=Qw[16]
set Cdo=Ww[16]
set Gdo=Xdo
set gdo=Cdo
call IssuePointOrder(Tdo,Ydo,Gdo,gdo)
set hdo=wdo
set Fdo=UNIT_TYPE_HERO
if IsUnitType(hdo,Fdo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,16)
endif
endif
if udo==Ru then
if Ew[1]==true then
set kdo=wdo
set jdo="attack"
set Vdo=Qw[40]
set Bdo=Ww[40]
set xdo=Vdo
set vdo=Bdo
call IssuePointOrder(kdo,jdo,xdo,vdo)
set mdo=wdo
set Qdo=UNIT_TYPE_HERO
if IsUnitType(mdo,Qdo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,40)
endif
else
set Wdo=wdo
set Edo="attack"
set Ndo=Qw[16]
set Mdo=Ww[16]
set Zdo=Ndo
set Udo=Mdo
call IssuePointOrder(Wdo,Edo,Zdo,Udo)
set Ido=wdo
set Pdo=UNIT_TYPE_HERO
if IsUnitType(Ido,Pdo) then
call SaveInteger(qu,GetHandleId(wdo),$6D6F7665,16)
endif
endif
endif
set wdo=null
set udo=null
set rdo=null
set sdo=null
set cdo=null
set odo=null
set Odo=null
set pdo=null
set edo=null
set qdo=null
set fdo=null
set Rdo=null
set Tdo=null
set hdo=null
set Fdo=null
set kdo=null
set mdo=null
set Qdo=null
set Wdo=null
set Ido=null
set Pdo=null
endfunction
function wgS takes nothing returns nothing
local unit PGS=GetEnteringUnit()
local unit DGS=PGS
local integer AGS=GetUnitTypeId(DGS)
local unit HGS
local integer JGS
local unit KGS
local integer LGS
local unit XGS
local integer CGS
local unit VGS
local integer BGS
local unit NGS
local integer MGS
if AGS==$4F303258 or AGS==$4F303339 or AGS==$4F303338 or AGS==$4F303337 then
set HGS=PGS
set JGS=$41706976
if GetUnitAbilityLevel(HGS,JGS)==0 then
set KGS=PGS
set LGS=$41706976
call UnitAddAbility(KGS,LGS)
endif
endif
if AGS==$6F303359 or AGS==$6F30325A or AGS==$6F303330 or AGS==$6F303331 or AGS==$6F303334 then
set XGS=PGS
set CGS=$41706976
call UnitAddAbility(XGS,CGS)
set VGS=PGS
set BGS=$4130424F
call UnitAddAbility(VGS,BGS)
endif
if AGS==$6F303359 or AGS==$6F30325A or AGS==$6F303330 or AGS==$6F303331 or AGS==$6F303334 or AGS==$6F303332 or AGS==$6F303333 then
set NGS=PGS
set MGS=$41706976
call UnitAddAbility(NGS,MGS)
endif
set PGS=null
set DGS=null
set HGS=null
set KGS=null
set XGS=null
set VGS=null
set NGS=null
endfunction
function wgl takes nothing returns boolean
return true
endfunction
function TLO takes string oLO returns nothing
local integer OLO
local unit lLO
local integer bLO
local integer yLO
local unit pLO
local integer eLO
local unit qLO
local string aLO
local integer nLO
local real dLO
local integer fLO
local string RLO
set aW[qW]=oLO
set qW=qW+1
set OLO=GetSpellAbilityId()
if OLO==$414D3035 then
set lLO=GetSpellAbilityUnit()
set pLO=lLO
set eLO=$414D3035
set bLO=GetUnitAbilityLevel(pLO,eLO)
set qLO=lLO
set ag=GetOwningPlayer(qLO)
set aLO="when calling alloc_CallbackSingle_doAfter_Terokk in Terokk, line 213"
set aW[qW]=aLO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set nLO=fF
set RF[nLO]=754
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_Terokk.","when calling error in Terokk, line 213")
set nLO=0
endif
else
set dF=dF-1
set nLO=nF[dF]
set RF[nLO]=754
endif
set qW=qW-1
set yLO=nLO
set FQ[yLO]=lLO
set kQ[yLO]=bLO
set dLO=7.
set fLO=yLO
set RLO="when calling doAfter in Terokk, line 213"
set aW[qW]=RLO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),dLO,fLO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set lLO=null
set pLO=null
set qLO=null
endfunction
function whS takes nothing returns nothing
set qW=0
call TLO("via function reference Terokk, line 233")
endfunction
function whw takes nothing returns nothing
local unit wgw=GetTriggerUnit()
local unit rgw=wgw
local player ugw=GetOwningPlayer(rgw)
local unit sgw
local string tgw
local real igw
local real Sgw
local unit cgw
local unittype ogw
local unit Ogw
local string lgw
local real bgw
local real ygw
local unit pgw
local unittype egw
local unit qgw
local string agw
local real ngw
local real dgw
local unit fgw
local unittype Rgw
local unit Tgw
local string Ygw
local real Ggw
local real ggw
local unit hgw
local unittype Fgw
local unit kgw
local string jgw
local real xgw
local real vgw
local unit mgw
local unittype Qgw
local unit Wgw
local string Egw
local real Zgw
local real Ugw
local unit Igw
local unittype Pgw
local real Agw
local real Dgw
local real Hgw
local real Jgw
local real Kgw
local real Lgw
local real Xgw
local real Cgw
local real Vgw
local real Bgw
local real Ngw
local real Mgw
if ugw==du then
if Ew[2]==true then
set sgw=wgw
set tgw="attack"
set Agw=Qw[31]
set Dgw=Ww[31]
set igw=Agw
set Sgw=Dgw
call IssuePointOrder(sgw,tgw,igw,Sgw)
set cgw=wgw
set ogw=UNIT_TYPE_HERO
if IsUnitType(cgw,ogw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,31)
endif
else
set Ogw=wgw
set lgw="attack"
set Hgw=Qw[55]
set Jgw=Ww[55]
set bgw=Hgw
set ygw=Jgw
call IssuePointOrder(Ogw,lgw,bgw,ygw)
set pgw=wgw
set egw=UNIT_TYPE_HERO
if IsUnitType(pgw,egw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,55)
endif
endif
endif
if ugw==nu then
set qgw=wgw
set agw="attack"
set Kgw=Qw[55]
set Lgw=Ww[55]
set ngw=Kgw
set dgw=Lgw
call IssuePointOrder(qgw,agw,ngw,dgw)
set fgw=wgw
set Rgw=UNIT_TYPE_HERO
if IsUnitType(fgw,Rgw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,55)
endif
endif
if ugw==fu then
set Tgw=wgw
set Ygw="attack"
set Xgw=Qw[31]
set Cgw=Ww[31]
set Ggw=Xgw
set ggw=Cgw
call IssuePointOrder(Tgw,Ygw,Ggw,ggw)
set hgw=wgw
set Fgw=UNIT_TYPE_HERO
if IsUnitType(hgw,Fgw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,31)
endif
endif
if ugw==Ru then
if Ew[1]==true then
set kgw=wgw
set jgw="attack"
set Vgw=Qw[55]
set Bgw=Ww[55]
set xgw=Vgw
set vgw=Bgw
call IssuePointOrder(kgw,jgw,xgw,vgw)
set mgw=wgw
set Qgw=UNIT_TYPE_HERO
if IsUnitType(mgw,Qgw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,55)
endif
else
set Wgw=wgw
set Egw="attack"
set Ngw=Qw[31]
set Mgw=Ww[31]
set Zgw=Ngw
set Ugw=Mgw
call IssuePointOrder(Wgw,Egw,Zgw,Ugw)
set Igw=wgw
set Pgw=UNIT_TYPE_HERO
if IsUnitType(Igw,Pgw) then
call SaveInteger(qu,GetHandleId(wgw),$6D6F7665,31)
endif
endif
endif
set wgw=null
set ugw=null
set rgw=null
set sgw=null
set cgw=null
set ogw=null
set Ogw=null
set pgw=null
set egw=null
set qgw=null
set fgw=null
set Rgw=null
set Tgw=null
set hgw=null
set Fgw=null
set kgw=null
set mgw=null
set Qgw=null
set Wgw=null
set Igw=null
set Pgw=null
endfunction
function wii takes nothing returns nothing
local integer qri=GetSpellAbilityId()
local unit ari
local integer nri
local unit dri
local integer fri
local unit Rri
local integer Tri
local unit Yri
local integer Gri
local unit gri
local integer hri
local unit Fri
local integer kri
local player jri
local unit xri
local unit vri
local integer mri
local unit Qri
local integer Wri
local unit Eri
local integer Zri
local unit Uri
local integer Iri
local unit Pri
local integer Ari
local unit Dri
local integer Hri
local unit Jri
local integer Kri
local sound Lri
local trigger Xri
local trigger Cri
local player Vri
local unit Bri
local unit Nri
local integer Mri
local unit wsi
local integer usi
local unit rsi
local integer ssi
local unit tsi
local integer isi
local unit Ssi
local integer csi
local unit osi
local integer Osi
local unit lsi
local integer bsi
local sound ysi
local trigger psi
local player esi
local unit qsi
local unit asi
local integer nsi
local unit dsi
local integer fsi
local unit Rsi
local integer Tsi
local unit Ysi
local integer Gsi
local unit gsi
local integer hsi
local unit Fsi
local integer ksi
local unit jsi
local integer xsi
local sound vsi
local trigger msi
local trigger Qsi
local trigger Wsi
local trigger Esi
local player Zsi
local unit Usi
local unit Isi
local integer Psi
local unit Asi
local integer Dsi
local unit Hsi
local integer Jsi
local unit Ksi
local integer Lsi
local unit Xsi
local integer Csi
local unit Vsi
local integer Bsi
local unit Nsi
local integer Msi
local unit wti
local integer uti
local sound rti
local trigger sti
local trigger tti
local trigger iti
local trigger Sti
local trigger cti
local player oti
local unit Oti
local unit lti
local integer bti
local unit yti
local integer pti
local unit eti
local integer qti
local unit ati
local integer nti
local unit dti
local integer fti
local unit Rti
local integer Tti
local unit Yti
local integer Gti
local sound gti
local trigger hti
local trigger Fti
local trigger kti
local trigger jti
local trigger xti
local trigger vti
local player mti
local unit Qti
local unit Wti
local integer Eti
local unit Zti
local integer Uti
local unit Iti
local integer Pti
local unit Ati
local integer Dti
local unit Hti
local integer Jti
local unit Kti
local integer Lti
local unit Xti
local integer Cti
local sound Vti
local trigger Bti
local trigger Nti
local trigger Mti
if qri==$4130595A then
set ari=GetSpellAbilityUnit()
set xri=ari
set jri=GetOwningPlayer(xri)
set nri=GetPlayerId(jri)
set vri=ari
set mri=$4130595A
call UnitRemoveAbility(vri,mri)
set Qri=ari
set Wri=$41313452
call UnitRemoveAbility(Qri,Wri)
set Eri=ari
set Zri=$41313453
call UnitRemoveAbility(Eri,Zri)
set Uri=ari
set Iri=$41313454
call UnitRemoveAbility(Uri,Iri)
set Pri=ari
set Ari=$41313455
call UnitRemoveAbility(Pri,Ari)
set Dri=ari
set Hri=$41313456
call UnitRemoveAbility(Dri,Hri)
set i[nri]=$55303046
set Jri=ari
set Kri=$41305746
call UnitAddAbility(Jri,Kri)
set Lri=xe
if Lri!=null then
call StartSound(Lri)
endif
set Xri=vy
call EnableTrigger(Xri)
set Cri=Ay
call EnableTrigger(Cri)
endif
if qri==$41313452 then
set dri=GetSpellAbilityUnit()
set Bri=dri
set Vri=GetOwningPlayer(Bri)
set fri=GetPlayerId(Vri)
set Nri=dri
set Mri=$4130595A
call UnitRemoveAbility(Nri,Mri)
set wsi=dri
set usi=$41313452
call UnitRemoveAbility(wsi,usi)
set rsi=dri
set ssi=$41313453
call UnitRemoveAbility(rsi,ssi)
set tsi=dri
set isi=$41313454
call UnitRemoveAbility(tsi,isi)
set Ssi=dri
set csi=$41313455
call UnitRemoveAbility(Ssi,csi)
set osi=dri
set Osi=$41313456
call UnitRemoveAbility(osi,Osi)
set i[fri]=$55303047
set lsi=dri
set bsi=$41305758
call UnitAddAbility(lsi,bsi)
set ysi=ve
if ysi!=null then
call StartSound(ysi)
endif
set psi=uq
call EnableTrigger(psi)
endif
if qri==$41313453 then
set Rri=GetSpellAbilityUnit()
set qsi=Rri
set esi=GetOwningPlayer(qsi)
set Tri=GetPlayerId(esi)
set asi=Rri
set nsi=$4130595A
call UnitRemoveAbility(asi,nsi)
set dsi=Rri
set fsi=$41313452
call UnitRemoveAbility(dsi,fsi)
set Rsi=Rri
set Tsi=$41313453
call UnitRemoveAbility(Rsi,Tsi)
set Ysi=Rri
set Gsi=$41313454
call UnitRemoveAbility(Ysi,Gsi)
set gsi=Rri
set hsi=$41313455
call UnitRemoveAbility(gsi,hsi)
set Fsi=Rri
set ksi=$41313456
call UnitRemoveAbility(Fsi,ksi)
set i[Tri]=$55303048
set jsi=Rri
set xsi=$41305759
call UnitAddAbility(jsi,xsi)
set vsi=me
if vsi!=null then
call StartSound(vsi)
endif
set msi=Ue
call EnableTrigger(msi)
set Qsi=Jy
call EnableTrigger(Qsi)
set Wsi=ky
call EnableTrigger(Wsi)
set Esi=jy
call EnableTrigger(Esi)
endif
if qri==$41313454 then
set Yri=GetSpellAbilityUnit()
set Usi=Yri
set Zsi=GetOwningPlayer(Usi)
set Gri=GetPlayerId(Zsi)
set Isi=Yri
set Psi=$4130595A
call UnitRemoveAbility(Isi,Psi)
set Asi=Yri
set Dsi=$41313452
call UnitRemoveAbility(Asi,Dsi)
set Hsi=Yri
set Jsi=$41313453
call UnitRemoveAbility(Hsi,Jsi)
set Ksi=Yri
set Lsi=$41313454
call UnitRemoveAbility(Ksi,Lsi)
set Xsi=Yri
set Csi=$41313455
call UnitRemoveAbility(Xsi,Csi)
set Vsi=Yri
set Bsi=$41313456
call UnitRemoveAbility(Vsi,Bsi)
set i[Gri]=$55303049
set Nsi=Yri
set Msi=$41305A51
call UnitAddAbility(Nsi,Msi)
set wti=Yri
set uti=$41305936
call UnitAddAbility(wti,uti)
set rti=Qe
if rti!=null then
call StartSound(rti)
endif
set sti=Xe
call EnableTrigger(sti)
set tti=Le
call EnableTrigger(tti)
set iti=Ce
call EnableTrigger(iti)
set Sti=xy
call EnableTrigger(Sti)
set cti=Ve
call EnableTrigger(cti)
endif
if qri==$41313455 then
set gri=GetSpellAbilityUnit()
set Oti=gri
set oti=GetOwningPlayer(Oti)
set hri=GetPlayerId(oti)
set lti=gri
set bti=$4130595A
call UnitRemoveAbility(lti,bti)
set yti=gri
set pti=$41313452
call UnitRemoveAbility(yti,pti)
set eti=gri
set qti=$41313453
call UnitRemoveAbility(eti,qti)
set ati=gri
set nti=$41313454
call UnitRemoveAbility(ati,nti)
set dti=gri
set fti=$41313455
call UnitRemoveAbility(dti,fti)
set Rti=gri
set Tti=$41313456
call UnitRemoveAbility(Rti,Tti)
set i[hri]=$5530304A
set Yti=gri
set Gti=$41305A42
call UnitAddAbility(Yti,Gti)
set gti=We
if gti!=null then
call StartSound(gti)
endif
set hti=De
call EnableTrigger(hti)
set Fti=Ke
call EnableTrigger(Fti)
set kti=He
call EnableTrigger(kti)
set jti=Je
call EnableTrigger(jti)
set xti=Hy
call EnableTrigger(xti)
set vti=Uy
call EnableTrigger(vti)
endif
if qri==$41313456 then
set Fri=GetSpellAbilityUnit()
set Qti=Fri
set mti=GetOwningPlayer(Qti)
set kri=GetPlayerId(mti)
set Wti=Fri
set Eti=$4130595A
call UnitRemoveAbility(Wti,Eti)
set Zti=Fri
set Uti=$41313452
call UnitRemoveAbility(Zti,Uti)
set Iti=Fri
set Pti=$41313453
call UnitRemoveAbility(Iti,Pti)
set Ati=Fri
set Dti=$41313454
call UnitRemoveAbility(Ati,Dti)
set Hti=Fri
set Jti=$41313455
call UnitRemoveAbility(Hti,Jti)
set Kti=Fri
set Lti=$41313456
call UnitRemoveAbility(Kti,Lti)
set i[kri]=$5530304D
set Xti=Fri
set Cti=$41305A30
call UnitAddAbility(Xti,Cti)
set Vti=Ee
if Vti!=null then
call StartSound(Vti)
endif
set Bti=Me
call EnableTrigger(Bti)
set Nti=Ln
call EnableTrigger(Nti)
set Mti=gg
call EnableTrigger(Mti)
endif
set ari=null
set dri=null
set Rri=null
set Yri=null
set gri=null
set Fri=null
set jri=null
set xri=null
set vri=null
set Qri=null
set Eri=null
set Uri=null
set Pri=null
set Dri=null
set Jri=null
set Lri=null
set Xri=null
set Cri=null
set Vri=null
set Bri=null
set Nri=null
set wsi=null
set rsi=null
set tsi=null
set Ssi=null
set osi=null
set lsi=null
set ysi=null
set psi=null
set esi=null
set qsi=null
set asi=null
set dsi=null
set Rsi=null
set Ysi=null
set gsi=null
set Fsi=null
set jsi=null
set vsi=null
set msi=null
set Qsi=null
set Wsi=null
set Esi=null
set Zsi=null
set Usi=null
set Isi=null
set Asi=null
set Hsi=null
set Ksi=null
set Xsi=null
set Vsi=null
set Nsi=null
set wti=null
set rti=null
set sti=null
set tti=null
set iti=null
set Sti=null
set cti=null
set oti=null
set Oti=null
set lti=null
set yti=null
set eti=null
set ati=null
set dti=null
set Rti=null
set Yti=null
set gti=null
set hti=null
set Fti=null
set kti=null
set jti=null
set xti=null
set vti=null
set mti=null
set Qti=null
set Wti=null
set Zti=null
set Iti=null
set Ati=null
set Hti=null
set Kti=null
set Xti=null
set Vti=null
set Bti=null
set Nti=null
set Mti=null
endfunction
function tMi takes string jLi returns nothing
local unit xLi
local unit vLi
local integer mLi
local real QLi
local player WLi
local player ELi
local real ZLi
local real ULi
local integer ILi
local group PLi
local filterfunc ALi
local real DLi
local real HLi
local integer JLi
local integer KLi
local integer LLi
local integer XLi
local integer CLi
local integer VLi
local integer BLi
local integer NLi
local unit MLi
local unit wXi
local player uXi
local unit rXi
local unit sXi
local player tXi
local unit iXi
local unit SXi
local unit cXi
local real oXi
local real OXi
local unit lXi
local real bXi
local real yXi
local unit pXi
local player eXi
local boolean qXi
local unit aXi
local unit nXi
local unit dXi
local unit fXi
local string RXi
local real TXi
local real YXi
local unit GXi
local unit gXi
local group hXi
local boolexpr FXi
local unit kXi
local integer jXi
local integer xXi
local unit vXi
local integer mXi
local unit QXi
local string WXi
local real EXi
local real ZXi
local unit UXi
local player IXi
local integer PXi
local player AXi
local string DXi
local integer HXi
local real JXi
local integer KXi
local string LXi
local unit XXi
local player CXi
local integer VXi
local player BXi
local unit NXi
local string MXi
local real wCi
local real uCi
local unit rCi
local player sCi
local integer tCi
local player iCi
local unit SCi
local player cCi
local integer oCi
local player OCi
local string lCi
local integer bCi
local real yCi
local integer pCi
local string eCi
local unit qCi
local player aCi
local integer nCi
local player dCi
local unit fCi
local string RCi
local real TCi
local real YCi
local unit GCi
local player gCi
local integer hCi
local player FCi
local unit kCi
local player jCi
local integer xCi
local player vCi
local string mCi
local integer QCi
local real WCi
local integer ECi
local string ZCi
local unit UCi
local player ICi
local integer PCi
local player ACi
local unit DCi
local string HCi
local real JCi
local real KCi
local unit LCi
local player XCi
local integer CCi
local player VCi
local unit BCi
local player NCi
local integer MCi
local player wVi
local string uVi
local integer rVi
local real sVi
local integer tVi
local string iVi
local unit SVi
local player cVi
local integer oVi
local player OVi
local unit lVi
local string bVi
local real yVi
local real pVi
local unit eVi
local player qVi
local integer aVi
local player nVi
local unit dVi
local player fVi
local integer RVi
local player TVi
local string YVi
local integer GVi
local real gVi
local integer hVi
local string FVi
local unit kVi
local player jVi
local integer xVi
local player vVi
local unit mVi
local string QVi
local real WVi
local real EVi
local unit ZVi
local player UVi
local integer IVi
local player PVi
local unit AVi
local player DVi
local integer HVi
local player JVi
local string KVi
local integer LVi
local real XVi
local integer CVi
local string VVi
local unit BVi
local player NVi
local integer MVi
local player wBi
local unit uBi
local string rBi
local real sBi
local real tBi
local unit iBi
local player SBi
local integer cBi
local player oBi
local unit OBi
local player lBi
local integer bBi
local player yBi
local string pBi
local integer eBi
local real qBi
local integer aBi
local string nBi
local unit dBi
local player fBi
local integer RBi
local player TBi
local unit YBi
local string GBi
local real gBi
local real hBi
local unit FBi
local player kBi
local integer jBi
local player xBi
local unit vBi
local player mBi
local integer QBi
local player WBi
local string EBi
local integer ZBi
local real UBi
local integer IBi
local string PBi
local unit ABi
local player DBi
local integer HBi
local player JBi
local unit KBi
local string LBi
local real XBi
local real CBi
local unit VBi
local player BBi
local integer NBi
local player MBi
local unit wNi
local player uNi
local integer rNi
local player sNi
local boolean tNi
local unit iNi
local group SNi
local real cNi
local real oNi
local hashtable ONi
local integer lNi
local real bNi
local hashtable yNi
local integer pNi
local real eNi
local hashtable qNi
local integer aNi
local real nNi
local hashtable dNi
local integer fNi
local real RNi
local hashtable TNi
local integer YNi
local real GNi
local hashtable gNi
local integer hNi
local real FNi
local hashtable kNi
local integer jNi
local real xNi
local hashtable vNi
local integer mNi
local real QNi
local real WNi
local real ENi
local real ZNi
local real UNi
local real INi
local real PNi
local real ANi
local real DNi
local real HNi
local real JNi
local real KNi
local real LNi
local real XNi
local real CNi
local real VNi
local real BNi
local real NNi
local real MNi
local real wMi
local real uMi
local real rMi
local real sMi
set aW[qW]=jLi
set qW=qW+1
set xLi=GetSellingUnit()
set vLi=GetSoldUnit()
set MLi=vLi
set mLi=GetUnitTypeId(MLi)
set QLi=GetUnitFacing(xLi)
set wXi=xLi
set WLi=GetOwningPlayer(wXi)
set uXi=WLi
set ELi=Player(GetPlayerId(uXi)+4)
set rXi=xLi
set ZLi=GetUnitX(rXi)
set sXi=xLi
set ULi=GetUnitY(sXi)
set tXi=WLi
set ILi=GetPlayerId(tXi)
if IsUnitType(vLi,UNIT_TYPE_HERO)==false then
set iXi=vLi
if GetUnitTypeId(iXi)==A[ILi] then
set tNi=true
else
set SXi=vLi
set tNi=GetUnitTypeId(SXi)==J[ILi]
endif
if tNi then
set Bl=ZLi+100.*Cos(QLi*bj_DEGTORAD)
set Nl=ULi+100.*Sin(QLi*bj_DEGTORAD)
else
set Bl=ZLi-100.*Cos(QLi*bj_DEGTORAD)
set Nl=ULi-100.*Sin(QLi*bj_DEGTORAD)
endif
set cXi=vLi
set oXi=Bl
set OXi=Nl
call SetUnitPosition(cXi,oXi,OXi)
set lXi=vLi
set WNi=QLi
set bXi=WNi
set iNi=lXi
set ENi=bXi
set yXi=ENi
call SetUnitFacing(iNi,yXi*57.295779513)
set pXi=vLi
set eXi=ELi
set qXi=true
call SetUnitOwner(pXi,eXi,qXi)
set PLi=CreateGroup()
set aXi=vLi
set sb=GetOwningPlayer(aXi)
set Ml=400.
set ALi=Filter(v3)
set SNi=PLi
set nXi=vLi
set cNi=GetUnitX(nXi)
set dXi=vLi
call GroupEnumUnitsInRange(SNi,cNi,GetUnitY(dXi),400.,ALi)
if rb!=null then
set fXi=vLi
set RXi="attack"
set GXi=rb
set oNi=GetUnitX(GXi)
set gXi=rb
set ZNi=oNi
set UNi=GetUnitY(gXi)
set TXi=ZNi
set YXi=UNi
call IssuePointOrder(fXi,RXi,TXi,YXi)
set rb=null
set wb=0.
set ub=0.
set Ml=0.
set sb=null
endif
set hXi=PLi
call DestroyGroup(hXi)
set FXi=ALi
call DestroyBoolExpr(FXi)
set xr[ILi]=xr[ILi]+1
set kXi=vLi
set jXi=ILi
set UXi=xLi
set IXi=WLi
set AXi=IXi
set PXi=GetPlayerId(AXi)
if IXi==Tu then
if b[PXi]==UXi then
set Dg[PXi]=17
set Ag[PXi]=5
endif
if l[PXi]==UXi then
set Dg[PXi]=16
set Ag[PXi]=1
endif
if O[PXi]==UXi then
set Dg[PXi]=18
set Ag[PXi]=3
endif
endif
if IXi==Yu then
if b[PXi]==UXi then
set Dg[PXi]=14
set Ag[PXi]=5
endif
if l[PXi]==UXi then
set Dg[PXi]=15
set Ag[PXi]=3
endif
if O[PXi]==UXi then
set Dg[PXi]=13
set Ag[PXi]=4
endif
endif
if IXi==Gu then
if b[PXi]==UXi then
set Dg[PXi]=20
set Ag[PXi]=5
endif
if l[PXi]==UXi then
set Dg[PXi]=21
set Ag[PXi]=4
endif
if O[PXi]==UXi then
set Dg[PXi]=19
set Ag[PXi]=1
endif
endif
if IXi==gu then
if b[PXi]==UXi then
set Dg[PXi]=23
set Ag[PXi]=5
endif
if l[PXi]==UXi then
set Dg[PXi]=24
set Ag[PXi]=2
endif
if O[PXi]==UXi then
set Dg[PXi]=22
set Ag[PXi]=6
endif
endif
set xXi=Dg[PXi]
set vXi=kXi
set mXi=Ag[jXi]
call SetUnitUserData(vXi,mXi)
set QXi=kXi
set WXi="attack"
set INi=Qw[xXi]
set PNi=Ww[xXi]
set EXi=INi
set ZXi=PNi
call IssuePointOrder(QXi,WXi,EXi,ZXi)
else
set DLi=ZLi-100.*Cos(QLi*bj_DEGTORAD)
set HLi=ULi-100.*Sin(QLi*bj_DEGTORAD)
call RemoveUnit(vLi)
set vr[ILi]=vr[ILi]+1
if r[ILi]==mLi then
if q[ILi]==null then
set q[ILi]=CreateUnit(ELi,r[ILi],DLi,HLi,QLi)
set f[ILi]=true
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
endif
call SetUnitAcquireRange(q[ILi],800.)
set DXi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 83"
set aW[qW]=DXi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set HXi=fF
set RF[HXi]=686
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 83")
set HXi=0
endif
else
set dF=dF-1
set HXi=nF[dF]
set RF[HXi]=686
endif
set qW=qW-1
set JLi=HXi
set oj[JLi]=ILi
set JXi=6.
set KXi=JLi
set LXi="when calling doAfter in BuyCreeps, line 83"
set aW[qW]=LXi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),JXi,KXi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SuspendHeroXP(q[ILi],false)
call SetPlayerTechMaxAllowed(WLi,r[ILi],0)
call RemoveGuardPosition(q[ILi])
set ONi=qu
set lNi=GetHandleId(q[ILi])
set XXi=xLi
set CXi=WLi
set BXi=CXi
set VXi=GetPlayerId(BXi)
if CXi==Tu then
if b[VXi]==XXi then
set Dg[VXi]=17
endif
if l[VXi]==XXi then
set Dg[VXi]=16
endif
if O[VXi]==XXi then
set Dg[VXi]=18
endif
endif
if CXi==Yu then
if b[VXi]==XXi then
set Dg[VXi]=14
endif
if l[VXi]==XXi then
set Dg[VXi]=15
endif
if O[VXi]==XXi then
set Dg[VXi]=13
endif
endif
if CXi==Gu then
if b[VXi]==XXi then
set Dg[VXi]=20
endif
if l[VXi]==XXi then
set Dg[VXi]=21
endif
if O[VXi]==XXi then
set Dg[VXi]=19
endif
endif
if CXi==gu then
if b[VXi]==XXi then
set Dg[VXi]=23
endif
if l[VXi]==XXi then
set Dg[VXi]=24
endif
if O[VXi]==XXi then
set Dg[VXi]=22
endif
endif
call SaveInteger(ONi,lNi,$6D6F7665,Ag[VXi])
set NXi=q[ILi]
set MXi="attack"
set rCi=xLi
set sCi=WLi
set iCi=sCi
set tCi=GetPlayerId(iCi)
if sCi==Tu then
if b[tCi]==rCi then
set Dg[tCi]=17
endif
if l[tCi]==rCi then
set Dg[tCi]=16
endif
if O[tCi]==rCi then
set Dg[tCi]=18
endif
endif
if sCi==Yu then
if b[tCi]==rCi then
set Dg[tCi]=14
endif
if l[tCi]==rCi then
set Dg[tCi]=15
endif
if O[tCi]==rCi then
set Dg[tCi]=13
endif
endif
if sCi==Gu then
if b[tCi]==rCi then
set Dg[tCi]=20
endif
if l[tCi]==rCi then
set Dg[tCi]=21
endif
if O[tCi]==rCi then
set Dg[tCi]=19
endif
endif
if sCi==gu then
if b[tCi]==rCi then
set Dg[tCi]=23
endif
if l[tCi]==rCi then
set Dg[tCi]=24
endif
if O[tCi]==rCi then
set Dg[tCi]=22
endif
endif
set bNi=Qw[Ag[tCi]]
set SCi=xLi
set cCi=WLi
set OCi=cCi
set oCi=GetPlayerId(OCi)
if cCi==Tu then
if b[oCi]==SCi then
set Dg[oCi]=17
endif
if l[oCi]==SCi then
set Dg[oCi]=16
endif
if O[oCi]==SCi then
set Dg[oCi]=18
endif
endif
if cCi==Yu then
if b[oCi]==SCi then
set Dg[oCi]=14
endif
if l[oCi]==SCi then
set Dg[oCi]=15
endif
if O[oCi]==SCi then
set Dg[oCi]=13
endif
endif
if cCi==Gu then
if b[oCi]==SCi then
set Dg[oCi]=20
endif
if l[oCi]==SCi then
set Dg[oCi]=21
endif
if O[oCi]==SCi then
set Dg[oCi]=19
endif
endif
if cCi==gu then
if b[oCi]==SCi then
set Dg[oCi]=23
endif
if l[oCi]==SCi then
set Dg[oCi]=24
endif
if O[oCi]==SCi then
set Dg[oCi]=22
endif
endif
set ANi=bNi
set DNi=Ww[Ag[oCi]]
set wCi=ANi
set uCi=DNi
call IssuePointOrder(NXi,MXi,wCi,uCi)
else
call ReviveHero(q[ILi],DLi,HLi,true)
call SetPlayerTechMaxAllowed(WLi,r[ILi],0)
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
if tb[ILi]>2 then
call j5y(q[ILi],"when calling addRandomItem in BuyCreeps, line 96")
set tb[ILi]=0
endif
endif
call SetUnitAcquireRange(q[ILi],800.)
set lCi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 99"
set aW[qW]=lCi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set bCi=fF
set RF[bCi]=687
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 99")
set bCi=0
endif
else
set dF=dF-1
set bCi=nF[dF]
set RF[bCi]=687
endif
set qW=qW-1
set KLi=bCi
set Oj[KLi]=ILi
set yCi=6.
set pCi=KLi
set eCi="when calling doAfter in BuyCreeps, line 99"
set aW[qW]=eCi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),yCi,pCi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call RemoveGuardPosition(q[ILi])
set yNi=qu
set pNi=GetHandleId(q[ILi])
set qCi=xLi
set aCi=WLi
set dCi=aCi
set nCi=GetPlayerId(dCi)
if aCi==Tu then
if b[nCi]==qCi then
set Dg[nCi]=17
endif
if l[nCi]==qCi then
set Dg[nCi]=16
endif
if O[nCi]==qCi then
set Dg[nCi]=18
endif
endif
if aCi==Yu then
if b[nCi]==qCi then
set Dg[nCi]=14
endif
if l[nCi]==qCi then
set Dg[nCi]=15
endif
if O[nCi]==qCi then
set Dg[nCi]=13
endif
endif
if aCi==Gu then
if b[nCi]==qCi then
set Dg[nCi]=20
endif
if l[nCi]==qCi then
set Dg[nCi]=21
endif
if O[nCi]==qCi then
set Dg[nCi]=19
endif
endif
if aCi==gu then
if b[nCi]==qCi then
set Dg[nCi]=23
endif
if l[nCi]==qCi then
set Dg[nCi]=24
endif
if O[nCi]==qCi then
set Dg[nCi]=22
endif
endif
call SaveInteger(yNi,pNi,$6D6F7665,Ag[nCi])
set fCi=q[ILi]
set RCi="attack"
set GCi=xLi
set gCi=WLi
set FCi=gCi
set hCi=GetPlayerId(FCi)
if gCi==Tu then
if b[hCi]==GCi then
set Dg[hCi]=17
endif
if l[hCi]==GCi then
set Dg[hCi]=16
endif
if O[hCi]==GCi then
set Dg[hCi]=18
endif
endif
if gCi==Yu then
if b[hCi]==GCi then
set Dg[hCi]=14
endif
if l[hCi]==GCi then
set Dg[hCi]=15
endif
if O[hCi]==GCi then
set Dg[hCi]=13
endif
endif
if gCi==Gu then
if b[hCi]==GCi then
set Dg[hCi]=20
endif
if l[hCi]==GCi then
set Dg[hCi]=21
endif
if O[hCi]==GCi then
set Dg[hCi]=19
endif
endif
if gCi==gu then
if b[hCi]==GCi then
set Dg[hCi]=23
endif
if l[hCi]==GCi then
set Dg[hCi]=24
endif
if O[hCi]==GCi then
set Dg[hCi]=22
endif
endif
set eNi=Qw[Ag[hCi]]
set kCi=xLi
set jCi=WLi
set vCi=jCi
set xCi=GetPlayerId(vCi)
if jCi==Tu then
if b[xCi]==kCi then
set Dg[xCi]=17
endif
if l[xCi]==kCi then
set Dg[xCi]=16
endif
if O[xCi]==kCi then
set Dg[xCi]=18
endif
endif
if jCi==Yu then
if b[xCi]==kCi then
set Dg[xCi]=14
endif
if l[xCi]==kCi then
set Dg[xCi]=15
endif
if O[xCi]==kCi then
set Dg[xCi]=13
endif
endif
if jCi==Gu then
if b[xCi]==kCi then
set Dg[xCi]=20
endif
if l[xCi]==kCi then
set Dg[xCi]=21
endif
if O[xCi]==kCi then
set Dg[xCi]=19
endif
endif
if jCi==gu then
if b[xCi]==kCi then
set Dg[xCi]=23
endif
if l[xCi]==kCi then
set Dg[xCi]=24
endif
if O[xCi]==kCi then
set Dg[xCi]=22
endif
endif
set HNi=eNi
set JNi=Ww[Ag[xCi]]
set TCi=HNi
set YCi=JNi
call IssuePointOrder(fCi,RCi,TCi,YCi)
endif
endif
if s[ILi]==mLi then
if a[ILi]==null then
set a[ILi]=CreateUnit(ELi,s[ILi],DLi,HLi,QLi)
set R[ILi]=true
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
endif
call SetUnitAcquireRange(a[ILi],800.)
set mCi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 111"
set aW[qW]=mCi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set QCi=fF
set RF[QCi]=688
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 111")
set QCi=0
endif
else
set dF=dF-1
set QCi=nF[dF]
set RF[QCi]=688
endif
set qW=qW-1
set LLi=QCi
set lj[LLi]=ILi
set WCi=6.
set ECi=LLi
set ZCi="when calling doAfter in BuyCreeps, line 111"
set aW[qW]=ZCi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),WCi,ECi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SuspendHeroXP(a[ILi],false)
call SetPlayerTechMaxAllowed(WLi,s[ILi],0)
call RemoveGuardPosition(a[ILi])
set qNi=qu
set aNi=GetHandleId(a[ILi])
set UCi=xLi
set ICi=WLi
set ACi=ICi
set PCi=GetPlayerId(ACi)
if ICi==Tu then
if b[PCi]==UCi then
set Dg[PCi]=17
endif
if l[PCi]==UCi then
set Dg[PCi]=16
endif
if O[PCi]==UCi then
set Dg[PCi]=18
endif
endif
if ICi==Yu then
if b[PCi]==UCi then
set Dg[PCi]=14
endif
if l[PCi]==UCi then
set Dg[PCi]=15
endif
if O[PCi]==UCi then
set Dg[PCi]=13
endif
endif
if ICi==Gu then
if b[PCi]==UCi then
set Dg[PCi]=20
endif
if l[PCi]==UCi then
set Dg[PCi]=21
endif
if O[PCi]==UCi then
set Dg[PCi]=19
endif
endif
if ICi==gu then
if b[PCi]==UCi then
set Dg[PCi]=23
endif
if l[PCi]==UCi then
set Dg[PCi]=24
endif
if O[PCi]==UCi then
set Dg[PCi]=22
endif
endif
call SaveInteger(qNi,aNi,$6D6F7665,Ag[PCi])
set DCi=a[ILi]
set HCi="attack"
set LCi=xLi
set XCi=WLi
set VCi=XCi
set CCi=GetPlayerId(VCi)
if XCi==Tu then
if b[CCi]==LCi then
set Dg[CCi]=17
endif
if l[CCi]==LCi then
set Dg[CCi]=16
endif
if O[CCi]==LCi then
set Dg[CCi]=18
endif
endif
if XCi==Yu then
if b[CCi]==LCi then
set Dg[CCi]=14
endif
if l[CCi]==LCi then
set Dg[CCi]=15
endif
if O[CCi]==LCi then
set Dg[CCi]=13
endif
endif
if XCi==Gu then
if b[CCi]==LCi then
set Dg[CCi]=20
endif
if l[CCi]==LCi then
set Dg[CCi]=21
endif
if O[CCi]==LCi then
set Dg[CCi]=19
endif
endif
if XCi==gu then
if b[CCi]==LCi then
set Dg[CCi]=23
endif
if l[CCi]==LCi then
set Dg[CCi]=24
endif
if O[CCi]==LCi then
set Dg[CCi]=22
endif
endif
set nNi=Qw[Ag[CCi]]
set BCi=xLi
set NCi=WLi
set wVi=NCi
set MCi=GetPlayerId(wVi)
if NCi==Tu then
if b[MCi]==BCi then
set Dg[MCi]=17
endif
if l[MCi]==BCi then
set Dg[MCi]=16
endif
if O[MCi]==BCi then
set Dg[MCi]=18
endif
endif
if NCi==Yu then
if b[MCi]==BCi then
set Dg[MCi]=14
endif
if l[MCi]==BCi then
set Dg[MCi]=15
endif
if O[MCi]==BCi then
set Dg[MCi]=13
endif
endif
if NCi==Gu then
if b[MCi]==BCi then
set Dg[MCi]=20
endif
if l[MCi]==BCi then
set Dg[MCi]=21
endif
if O[MCi]==BCi then
set Dg[MCi]=19
endif
endif
if NCi==gu then
if b[MCi]==BCi then
set Dg[MCi]=23
endif
if l[MCi]==BCi then
set Dg[MCi]=24
endif
if O[MCi]==BCi then
set Dg[MCi]=22
endif
endif
set KNi=nNi
set LNi=Ww[Ag[MCi]]
set JCi=KNi
set KCi=LNi
call IssuePointOrder(DCi,HCi,JCi,KCi)
else
call ReviveHero(a[ILi],DLi,HLi,true)
call SetPlayerTechMaxAllowed(WLi,s[ILi],0)
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
if tb[ILi]>2 then
call j5y(a[ILi],"when calling addRandomItem in BuyCreeps, line 124")
set tb[ILi]=0
endif
endif
call SetUnitAcquireRange(a[ILi],800.)
set uVi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 127"
set aW[qW]=uVi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set rVi=fF
set RF[rVi]=689
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 127")
set rVi=0
endif
else
set dF=dF-1
set rVi=nF[dF]
set RF[rVi]=689
endif
set qW=qW-1
set XLi=rVi
set bj[XLi]=ILi
set sVi=6.
set tVi=XLi
set iVi="when calling doAfter in BuyCreeps, line 127"
set aW[qW]=iVi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),sVi,tVi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call RemoveGuardPosition(a[ILi])
set dNi=qu
set fNi=GetHandleId(a[ILi])
set SVi=xLi
set cVi=WLi
set OVi=cVi
set oVi=GetPlayerId(OVi)
if cVi==Tu then
if b[oVi]==SVi then
set Dg[oVi]=17
endif
if l[oVi]==SVi then
set Dg[oVi]=16
endif
if O[oVi]==SVi then
set Dg[oVi]=18
endif
endif
if cVi==Yu then
if b[oVi]==SVi then
set Dg[oVi]=14
endif
if l[oVi]==SVi then
set Dg[oVi]=15
endif
if O[oVi]==SVi then
set Dg[oVi]=13
endif
endif
if cVi==Gu then
if b[oVi]==SVi then
set Dg[oVi]=20
endif
if l[oVi]==SVi then
set Dg[oVi]=21
endif
if O[oVi]==SVi then
set Dg[oVi]=19
endif
endif
if cVi==gu then
if b[oVi]==SVi then
set Dg[oVi]=23
endif
if l[oVi]==SVi then
set Dg[oVi]=24
endif
if O[oVi]==SVi then
set Dg[oVi]=22
endif
endif
call SaveInteger(dNi,fNi,$6D6F7665,Ag[oVi])
set lVi=a[ILi]
set bVi="attack"
set eVi=xLi
set qVi=WLi
set nVi=qVi
set aVi=GetPlayerId(nVi)
if qVi==Tu then
if b[aVi]==eVi then
set Dg[aVi]=17
endif
if l[aVi]==eVi then
set Dg[aVi]=16
endif
if O[aVi]==eVi then
set Dg[aVi]=18
endif
endif
if qVi==Yu then
if b[aVi]==eVi then
set Dg[aVi]=14
endif
if l[aVi]==eVi then
set Dg[aVi]=15
endif
if O[aVi]==eVi then
set Dg[aVi]=13
endif
endif
if qVi==Gu then
if b[aVi]==eVi then
set Dg[aVi]=20
endif
if l[aVi]==eVi then
set Dg[aVi]=21
endif
if O[aVi]==eVi then
set Dg[aVi]=19
endif
endif
if qVi==gu then
if b[aVi]==eVi then
set Dg[aVi]=23
endif
if l[aVi]==eVi then
set Dg[aVi]=24
endif
if O[aVi]==eVi then
set Dg[aVi]=22
endif
endif
set RNi=Qw[Ag[aVi]]
set dVi=xLi
set fVi=WLi
set TVi=fVi
set RVi=GetPlayerId(TVi)
if fVi==Tu then
if b[RVi]==dVi then
set Dg[RVi]=17
endif
if l[RVi]==dVi then
set Dg[RVi]=16
endif
if O[RVi]==dVi then
set Dg[RVi]=18
endif
endif
if fVi==Yu then
if b[RVi]==dVi then
set Dg[RVi]=14
endif
if l[RVi]==dVi then
set Dg[RVi]=15
endif
if O[RVi]==dVi then
set Dg[RVi]=13
endif
endif
if fVi==Gu then
if b[RVi]==dVi then
set Dg[RVi]=20
endif
if l[RVi]==dVi then
set Dg[RVi]=21
endif
if O[RVi]==dVi then
set Dg[RVi]=19
endif
endif
if fVi==gu then
if b[RVi]==dVi then
set Dg[RVi]=23
endif
if l[RVi]==dVi then
set Dg[RVi]=24
endif
if O[RVi]==dVi then
set Dg[RVi]=22
endif
endif
set XNi=RNi
set CNi=Ww[Ag[RVi]]
set yVi=XNi
set pVi=CNi
call IssuePointOrder(lVi,bVi,yVi,pVi)
endif
endif
if t[ILi]==mLi then
if n[ILi]==null then
set n[ILi]=CreateUnit(ELi,t[ILi],DLi,HLi,QLi)
if t[ILi]==$484D3038 then
set Rg=n[ILi]
endif
set T[ILi]=true
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
endif
call SetUnitAcquireRange(n[ILi],800.)
set YVi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 141"
set aW[qW]=YVi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set GVi=fF
set RF[GVi]=690
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 141")
set GVi=0
endif
else
set dF=dF-1
set GVi=nF[dF]
set RF[GVi]=690
endif
set qW=qW-1
set CLi=GVi
set yj[CLi]=ILi
set gVi=6.
set hVi=CLi
set FVi="when calling doAfter in BuyCreeps, line 141"
set aW[qW]=FVi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),gVi,hVi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SuspendHeroXP(n[ILi],false)
call SetPlayerTechMaxAllowed(WLi,t[ILi],0)
call RemoveGuardPosition(n[ILi])
set TNi=qu
set YNi=GetHandleId(n[ILi])
set kVi=xLi
set jVi=WLi
set vVi=jVi
set xVi=GetPlayerId(vVi)
if jVi==Tu then
if b[xVi]==kVi then
set Dg[xVi]=17
endif
if l[xVi]==kVi then
set Dg[xVi]=16
endif
if O[xVi]==kVi then
set Dg[xVi]=18
endif
endif
if jVi==Yu then
if b[xVi]==kVi then
set Dg[xVi]=14
endif
if l[xVi]==kVi then
set Dg[xVi]=15
endif
if O[xVi]==kVi then
set Dg[xVi]=13
endif
endif
if jVi==Gu then
if b[xVi]==kVi then
set Dg[xVi]=20
endif
if l[xVi]==kVi then
set Dg[xVi]=21
endif
if O[xVi]==kVi then
set Dg[xVi]=19
endif
endif
if jVi==gu then
if b[xVi]==kVi then
set Dg[xVi]=23
endif
if l[xVi]==kVi then
set Dg[xVi]=24
endif
if O[xVi]==kVi then
set Dg[xVi]=22
endif
endif
call SaveInteger(TNi,YNi,$6D6F7665,Ag[xVi])
set mVi=n[ILi]
set QVi="attack"
set ZVi=xLi
set UVi=WLi
set PVi=UVi
set IVi=GetPlayerId(PVi)
if UVi==Tu then
if b[IVi]==ZVi then
set Dg[IVi]=17
endif
if l[IVi]==ZVi then
set Dg[IVi]=16
endif
if O[IVi]==ZVi then
set Dg[IVi]=18
endif
endif
if UVi==Yu then
if b[IVi]==ZVi then
set Dg[IVi]=14
endif
if l[IVi]==ZVi then
set Dg[IVi]=15
endif
if O[IVi]==ZVi then
set Dg[IVi]=13
endif
endif
if UVi==Gu then
if b[IVi]==ZVi then
set Dg[IVi]=20
endif
if l[IVi]==ZVi then
set Dg[IVi]=21
endif
if O[IVi]==ZVi then
set Dg[IVi]=19
endif
endif
if UVi==gu then
if b[IVi]==ZVi then
set Dg[IVi]=23
endif
if l[IVi]==ZVi then
set Dg[IVi]=24
endif
if O[IVi]==ZVi then
set Dg[IVi]=22
endif
endif
set GNi=Qw[Ag[IVi]]
set AVi=xLi
set DVi=WLi
set JVi=DVi
set HVi=GetPlayerId(JVi)
if DVi==Tu then
if b[HVi]==AVi then
set Dg[HVi]=17
endif
if l[HVi]==AVi then
set Dg[HVi]=16
endif
if O[HVi]==AVi then
set Dg[HVi]=18
endif
endif
if DVi==Yu then
if b[HVi]==AVi then
set Dg[HVi]=14
endif
if l[HVi]==AVi then
set Dg[HVi]=15
endif
if O[HVi]==AVi then
set Dg[HVi]=13
endif
endif
if DVi==Gu then
if b[HVi]==AVi then
set Dg[HVi]=20
endif
if l[HVi]==AVi then
set Dg[HVi]=21
endif
if O[HVi]==AVi then
set Dg[HVi]=19
endif
endif
if DVi==gu then
if b[HVi]==AVi then
set Dg[HVi]=23
endif
if l[HVi]==AVi then
set Dg[HVi]=24
endif
if O[HVi]==AVi then
set Dg[HVi]=22
endif
endif
set VNi=GNi
set BNi=Ww[Ag[HVi]]
set WVi=VNi
set EVi=BNi
call IssuePointOrder(mVi,QVi,WVi,EVi)
else
call ReviveHero(n[ILi],DLi,HLi,true)
call SetUnitAcquireRange(n[ILi],800.)
set KVi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 151"
set aW[qW]=KVi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set LVi=fF
set RF[LVi]=691
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 151")
set LVi=0
endif
else
set dF=dF-1
set LVi=nF[dF]
set RF[LVi]=691
endif
set qW=qW-1
set VLi=LVi
set pj[VLi]=ILi
set XVi=6.
set CVi=VLi
set VVi="when calling doAfter in BuyCreeps, line 151"
set aW[qW]=VVi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),XVi,CVi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SetPlayerTechMaxAllowed(WLi,t[ILi],0)
call RemoveGuardPosition(n[ILi])
set gNi=qu
set hNi=GetHandleId(n[ILi])
set BVi=xLi
set NVi=WLi
set wBi=NVi
set MVi=GetPlayerId(wBi)
if NVi==Tu then
if b[MVi]==BVi then
set Dg[MVi]=17
endif
if l[MVi]==BVi then
set Dg[MVi]=16
endif
if O[MVi]==BVi then
set Dg[MVi]=18
endif
endif
if NVi==Yu then
if b[MVi]==BVi then
set Dg[MVi]=14
endif
if l[MVi]==BVi then
set Dg[MVi]=15
endif
if O[MVi]==BVi then
set Dg[MVi]=13
endif
endif
if NVi==Gu then
if b[MVi]==BVi then
set Dg[MVi]=20
endif
if l[MVi]==BVi then
set Dg[MVi]=21
endif
if O[MVi]==BVi then
set Dg[MVi]=19
endif
endif
if NVi==gu then
if b[MVi]==BVi then
set Dg[MVi]=23
endif
if l[MVi]==BVi then
set Dg[MVi]=24
endif
if O[MVi]==BVi then
set Dg[MVi]=22
endif
endif
call SaveInteger(gNi,hNi,$6D6F7665,Ag[MVi])
set uBi=n[ILi]
set rBi="attack"
set iBi=xLi
set SBi=WLi
set oBi=SBi
set cBi=GetPlayerId(oBi)
if SBi==Tu then
if b[cBi]==iBi then
set Dg[cBi]=17
endif
if l[cBi]==iBi then
set Dg[cBi]=16
endif
if O[cBi]==iBi then
set Dg[cBi]=18
endif
endif
if SBi==Yu then
if b[cBi]==iBi then
set Dg[cBi]=14
endif
if l[cBi]==iBi then
set Dg[cBi]=15
endif
if O[cBi]==iBi then
set Dg[cBi]=13
endif
endif
if SBi==Gu then
if b[cBi]==iBi then
set Dg[cBi]=20
endif
if l[cBi]==iBi then
set Dg[cBi]=21
endif
if O[cBi]==iBi then
set Dg[cBi]=19
endif
endif
if SBi==gu then
if b[cBi]==iBi then
set Dg[cBi]=23
endif
if l[cBi]==iBi then
set Dg[cBi]=24
endif
if O[cBi]==iBi then
set Dg[cBi]=22
endif
endif
set FNi=Qw[Ag[cBi]]
set OBi=xLi
set lBi=WLi
set yBi=lBi
set bBi=GetPlayerId(yBi)
if lBi==Tu then
if b[bBi]==OBi then
set Dg[bBi]=17
endif
if l[bBi]==OBi then
set Dg[bBi]=16
endif
if O[bBi]==OBi then
set Dg[bBi]=18
endif
endif
if lBi==Yu then
if b[bBi]==OBi then
set Dg[bBi]=14
endif
if l[bBi]==OBi then
set Dg[bBi]=15
endif
if O[bBi]==OBi then
set Dg[bBi]=13
endif
endif
if lBi==Gu then
if b[bBi]==OBi then
set Dg[bBi]=20
endif
if l[bBi]==OBi then
set Dg[bBi]=21
endif
if O[bBi]==OBi then
set Dg[bBi]=19
endif
endif
if lBi==gu then
if b[bBi]==OBi then
set Dg[bBi]=23
endif
if l[bBi]==OBi then
set Dg[bBi]=24
endif
if O[bBi]==OBi then
set Dg[bBi]=22
endif
endif
set NNi=FNi
set MNi=Ww[Ag[bBi]]
set sBi=NNi
set tBi=MNi
call IssuePointOrder(uBi,rBi,sBi,tBi)
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
if tb[ILi]>2 then
call j5y(n[ILi],"when calling addRandomItem in BuyCreeps, line 160")
set tb[ILi]=0
endif
endif
endif
endif
if i[ILi]==mLi then
set vr[ILi]=vr[ILi]-1
set Qr[ILi]=Qr[ILi]+1
if d[ILi]==null then
set d[ILi]=CreateUnit(ELi,i[ILi],DLi,HLi,QLi)
set Y[ILi]=true
if GetPlayerTechCount(WLi,$52303259,true)>0 then
set tb[ILi]=tb[ILi]+1
endif
call SetUnitAcquireRange(d[ILi],800.)
set pBi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 172"
set aW[qW]=pBi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set eBi=fF
set RF[eBi]=692
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 172")
set eBi=0
endif
else
set dF=dF-1
set eBi=nF[dF]
set RF[eBi]=692
endif
set qW=qW-1
set BLi=eBi
set ej[BLi]=ILi
set qBi=6.
set aBi=BLi
set nBi="when calling doAfter in BuyCreeps, line 172"
set aW[qW]=nBi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),qBi,aBi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SuspendHeroXP(d[ILi],false)
call SetPlayerTechMaxAllowed(WLi,i[ILi],0)
call RemoveGuardPosition(d[ILi])
set kNi=qu
set jNi=GetHandleId(d[ILi])
set dBi=xLi
set fBi=WLi
set TBi=fBi
set RBi=GetPlayerId(TBi)
if fBi==Tu then
if b[RBi]==dBi then
set Dg[RBi]=17
endif
if l[RBi]==dBi then
set Dg[RBi]=16
endif
if O[RBi]==dBi then
set Dg[RBi]=18
endif
endif
if fBi==Yu then
if b[RBi]==dBi then
set Dg[RBi]=14
endif
if l[RBi]==dBi then
set Dg[RBi]=15
endif
if O[RBi]==dBi then
set Dg[RBi]=13
endif
endif
if fBi==Gu then
if b[RBi]==dBi then
set Dg[RBi]=20
endif
if l[RBi]==dBi then
set Dg[RBi]=21
endif
if O[RBi]==dBi then
set Dg[RBi]=19
endif
endif
if fBi==gu then
if b[RBi]==dBi then
set Dg[RBi]=23
endif
if l[RBi]==dBi then
set Dg[RBi]=24
endif
if O[RBi]==dBi then
set Dg[RBi]=22
endif
endif
call SaveInteger(kNi,jNi,$6D6F7665,Ag[RBi])
set YBi=d[ILi]
set GBi="attack"
set FBi=xLi
set kBi=WLi
set xBi=kBi
set jBi=GetPlayerId(xBi)
if kBi==Tu then
if b[jBi]==FBi then
set Dg[jBi]=17
endif
if l[jBi]==FBi then
set Dg[jBi]=16
endif
if O[jBi]==FBi then
set Dg[jBi]=18
endif
endif
if kBi==Yu then
if b[jBi]==FBi then
set Dg[jBi]=14
endif
if l[jBi]==FBi then
set Dg[jBi]=15
endif
if O[jBi]==FBi then
set Dg[jBi]=13
endif
endif
if kBi==Gu then
if b[jBi]==FBi then
set Dg[jBi]=20
endif
if l[jBi]==FBi then
set Dg[jBi]=21
endif
if O[jBi]==FBi then
set Dg[jBi]=19
endif
endif
if kBi==gu then
if b[jBi]==FBi then
set Dg[jBi]=23
endif
if l[jBi]==FBi then
set Dg[jBi]=24
endif
if O[jBi]==FBi then
set Dg[jBi]=22
endif
endif
set xNi=Qw[Ag[jBi]]
set vBi=xLi
set mBi=WLi
set WBi=mBi
set QBi=GetPlayerId(WBi)
if mBi==Tu then
if b[QBi]==vBi then
set Dg[QBi]=17
endif
if l[QBi]==vBi then
set Dg[QBi]=16
endif
if O[QBi]==vBi then
set Dg[QBi]=18
endif
endif
if mBi==Yu then
if b[QBi]==vBi then
set Dg[QBi]=14
endif
if l[QBi]==vBi then
set Dg[QBi]=15
endif
if O[QBi]==vBi then
set Dg[QBi]=13
endif
endif
if mBi==Gu then
if b[QBi]==vBi then
set Dg[QBi]=20
endif
if l[QBi]==vBi then
set Dg[QBi]=21
endif
if O[QBi]==vBi then
set Dg[QBi]=19
endif
endif
if mBi==gu then
if b[QBi]==vBi then
set Dg[QBi]=23
endif
if l[QBi]==vBi then
set Dg[QBi]=24
endif
if O[QBi]==vBi then
set Dg[QBi]=22
endif
endif
set wMi=xNi
set uMi=Ww[Ag[QBi]]
set gBi=wMi
set hBi=uMi
call IssuePointOrder(YBi,GBi,gBi,hBi)
else
call ReviveHero(d[ILi],DLi,HLi,true)
call SetUnitAcquireRange(d[ILi],800.)
set EBi="when calling alloc_CallbackSingle_doAfter_BuyCreeps in BuyCreeps, line 182"
set aW[qW]=EBi
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set ZBi=fF
set RF[ZBi]=693
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_BuyCreeps.","when calling error in BuyCreeps, line 182")
set ZBi=0
endif
else
set dF=dF-1
set ZBi=nF[dF]
set RF[ZBi]=693
endif
set qW=qW-1
set NLi=ZBi
set qj[NLi]=ILi
set UBi=6.
set IBi=NLi
set PBi="when calling doAfter in BuyCreeps, line 182"
set aW[qW]=PBi
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),UBi,IBi,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
call SetPlayerTechMaxAllowed(WLi,i[ILi],0)
call RemoveGuardPosition(d[ILi])
set vNi=qu
set mNi=GetHandleId(d[ILi])
set ABi=xLi
set DBi=WLi
set JBi=DBi
set HBi=GetPlayerId(JBi)
if DBi==Tu then
if b[HBi]==ABi then
set Dg[HBi]=17
endif
if l[HBi]==ABi then
set Dg[HBi]=16
endif
if O[HBi]==ABi then
set Dg[HBi]=18
endif
endif
if DBi==Yu then
if b[HBi]==ABi then
set Dg[HBi]=14
endif
if l[HBi]==ABi then
set Dg[HBi]=15
endif
if O[HBi]==ABi then
set Dg[HBi]=13
endif
endif
if DBi==Gu then
if b[HBi]==ABi then
set Dg[HBi]=20
endif
if l[HBi]==ABi then
set Dg[HBi]=21
endif
if O[HBi]==ABi then
set Dg[HBi]=19
endif
endif
if DBi==gu then
if b[HBi]==ABi then
set Dg[HBi]=23
endif
if l[HBi]==ABi then
set Dg[HBi]=24
endif
if O[HBi]==ABi then
set Dg[HBi]=22
endif
endif
call SaveInteger(vNi,mNi,$6D6F7665,Ag[HBi])
set KBi=d[ILi]
set LBi="attack"
set VBi=xLi
set BBi=WLi
set MBi=BBi
set NBi=GetPlayerId(MBi)
if BBi==Tu then
if b[NBi]==VBi then
set Dg[NBi]=17
endif
if l[NBi]==VBi then
set Dg[NBi]=16
endif
if O[NBi]==VBi then
set Dg[NBi]=18
endif
endif
if BBi==Yu then
if b[NBi]==VBi then
set Dg[NBi]=14
endif
if l[NBi]==VBi then
set Dg[NBi]=15
endif
if O[NBi]==VBi then
set Dg[NBi]=13
endif
endif
if BBi==Gu then
if b[NBi]==VBi then
set Dg[NBi]=20
endif
if l[NBi]==VBi then
set Dg[NBi]=21
endif
if O[NBi]==VBi then
set Dg[NBi]=19
endif
endif
if BBi==gu then
if b[NBi]==VBi then
set Dg[NBi]=23
endif
if l[NBi]==VBi then
set Dg[NBi]=24
endif
if O[NBi]==VBi then
set Dg[NBi]=22
endif
endif
set QNi=Qw[Ag[NBi]]
set wNi=xLi
set uNi=WLi
set sNi=uNi
set rNi=GetPlayerId(sNi)
if uNi==Tu then
if b[rNi]==wNi then
set Dg[rNi]=17
endif
if l[rNi]==wNi then
set Dg[rNi]=16
endif
if O[rNi]==wNi then
set Dg[rNi]=18
endif
endif
if uNi==Yu then
if b[rNi]==wNi then
set Dg[rNi]=14
endif
if l[rNi]==wNi then
set Dg[rNi]=15
endif
if O[rNi]==wNi then
set Dg[rNi]=13
endif
endif
if uNi==Gu then
if b[rNi]==wNi then
set Dg[rNi]=20
endif
if l[rNi]==wNi then
set Dg[rNi]=21
endif
if O[rNi]==wNi then
set Dg[rNi]=19
endif
endif
if uNi==gu then
if b[rNi]==wNi then
set Dg[rNi]=23
endif
if l[rNi]==wNi then
set Dg[rNi]=24
endif
if O[rNi]==wNi then
set Dg[rNi]=22
endif
endif
set rMi=QNi
set sMi=Ww[Ag[rNi]]
set XBi=rMi
set CBi=sMi
call IssuePointOrder(KBi,LBi,XBi,CBi)
if GetPlayerTechCount(WLi,$52303259,true)>0 then
if tb[ILi]>2 then
call j5y(d[ILi],"when calling addRandomItem in BuyCreeps, line 190")
set tb[ILi]=0
endif
endif
endif
endif
endif
set qW=qW-1
set xLi=null
set vLi=null
set WLi=null
set ELi=null
set PLi=null
set ALi=null
set MLi=null
set wXi=null
set uXi=null
set rXi=null
set sXi=null
set tXi=null
set iXi=null
set SXi=null
set cXi=null
set lXi=null
set pXi=null
set eXi=null
set aXi=null
set nXi=null
set dXi=null
set fXi=null
set GXi=null
set gXi=null
set hXi=null
set FXi=null
set kXi=null
set vXi=null
set QXi=null
set UXi=null
set IXi=null
set AXi=null
set XXi=null
set CXi=null
set BXi=null
set NXi=null
set rCi=null
set sCi=null
set iCi=null
set SCi=null
set cCi=null
set OCi=null
set qCi=null
set aCi=null
set dCi=null
set fCi=null
set GCi=null
set gCi=null
set FCi=null
set kCi=null
set jCi=null
set vCi=null
set UCi=null
set ICi=null
set ACi=null
set DCi=null
set LCi=null
set XCi=null
set VCi=null
set BCi=null
set NCi=null
set wVi=null
set SVi=null
set cVi=null
set OVi=null
set lVi=null
set eVi=null
set qVi=null
set nVi=null
set dVi=null
set fVi=null
set TVi=null
set kVi=null
set jVi=null
set vVi=null
set mVi=null
set ZVi=null
set UVi=null
set PVi=null
set AVi=null
set DVi=null
set JVi=null
set BVi=null
set NVi=null
set wBi=null
set uBi=null
set iBi=null
set SBi=null
set oBi=null
set OBi=null
set lBi=null
set yBi=null
set dBi=null
set fBi=null
set TBi=null
set YBi=null
set FBi=null
set kBi=null
set xBi=null
set vBi=null
set mBi=null
set WBi=null
set ABi=null
set DBi=null
set JBi=null
set KBi=null
set VBi=null
set BBi=null
set MBi=null
set wNi=null
set uNi=null
set sNi=null
set iNi=null
set SNi=null
set ONi=null
set yNi=null
set qNi=null
set dNi=null
set TNi=null
set gNi=null
set kNi=null
set vNi=null
endfunction
function wne takes nothing returns nothing
set qW=0
call tMi("via function reference BuyCreeps, line 198")
endfunction
function wqc takes nothing returns nothing
local integer jec=GetRandomInt(1,100)
local integer xec
local integer vec
local player mec
local unit Qec
local string Wec
local real Eec
local player Zec
local unit Uec
local trigger Iec
local unit Pec
local integer Aec
local unit Dec
local integer Hec
local unit Jec
local integer Kec
local unit Lec
local integer Xec
local unit Cec
local integer Vec
local unit Bec
local integer Nec
local integer Mec
if jec<2*Sy then
set vec=$52313339
set Qec=iy
set mec=GetOwningPlayer(Qec)
set xec=GetPlayerTechCount(mec,vec,true)
set Wec="|cffff0000Relic glowing red, it thirst for blood!!!|r"
set Eec=10.
set Uec=iy
set Zec=GetOwningPlayer(Uec)
call DisplayTimedTextToPlayer(Zec,0.,0.,Eec,Wec)
set Iec=oy
call DisableTrigger(Iec)
set cy=CreateTimer()
call TimerStart(cy,20.,false,a1)
set Pec=iy
set Aec=$41314B57
call UnitRemoveAbility(Pec,Aec)
set Dec=iy
set Hec=$41324B57
call UnitAddAbility(Dec,Hec)
set Jec=iy
set Kec=$41314936
call UnitRemoveAbility(Jec,Kec)
set Lec=iy
set Xec=$41315257
call UnitRemoveAbility(Lec,Xec)
set Cec=iy
set Vec=$41325257
call UnitAddAbility(Cec,Vec)
set Bec=iy
set Nec=$41325257
set Mec=1+xec
call SetUnitAbilityLevel(Bec,Nec,Mec)
endif
set mec=null
set Qec=null
set Zec=null
set Uec=null
set Iec=null
set Pec=null
set Dec=null
set Jec=null
set Lec=null
set Cec=null
set Bec=null
endfunction
function wxi takes nothing returns nothing
local unit Jji=GetKillingUnit()
local unit Lji=Jji
local integer Kji
local unit Xji
local integer Cji
local unit Vji
local integer Bji
local unit Nji
local integer Mji
if GetUnitTypeId(Lji)==$6E6E7273 then
set Xji=Jji
set Cji=$41333034
set Kji=GetUnitAbilityLevel(Xji,Cji)
if Kji!=5 then
set Vji=Jji
set Bji=$41333034
call IncUnitAbilityLevel(Vji,Bji)
set Nji=Jji
set Mji=$41333035
call IncUnitAbilityLevel(Nji,Mji)
endif
endif
set Jji=null
set Lji=null
set Xji=null
set Vji=null
set Nji=null
endfunction
function x0O takes nothing returns boolean
local trigger R0O
local playerunitevent T0O
local trigger Y0O
local playerunitevent G0O
local integer g0O
local trigger h0O
local boolexpr F0O
local trigger k0O
local code j0O
set ng=CreateTrigger()
set R0O=ng
set T0O=EVENT_PLAYER_UNIT_ATTACKED
set Y0O=R0O
set G0O=T0O
set g0O=0
loop
call TriggerRegisterPlayerUnitEvent(Y0O,Player(g0O),G0O,null)
set g0O=g0O+1
exitwhen g0O==bj_MAX_PLAYER_SLOTS
endloop
set h0O=ng
set F0O=Condition(Cuw)
call TriggerAddCondition(h0O,F0O)
set k0O=ng
set j0O=Vuw
call TriggerAddAction(k0O,j0O)
set R0O=null
set T0O=null
set Y0O=null
set G0O=null
set h0O=null
set F0O=null
set k0O=null
return true
endfunction
function x0s takes nothing returns boolean
set qe=Filter(y2)
return true
endfunction
function x1y takes nothing returns boolean
return true
endfunction
function x6w takes nothing returns boolean
return true
endfunction
function x7l takes nothing returns boolean
return true
endfunction
function x7w takes nothing returns boolean
return true
endfunction
function x9l takes nothing returns boolean
set yl=UY[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function xAl takes nothing returns boolean
return true
endfunction
function xBl takes nothing returns nothing
local unit xVl=GetTriggerUnit()
local unit mVl=xVl
local player vVl=GetOwningPlayer(mVl)
local unit QVl
local string WVl
local real EVl
local real ZVl
local unit UVl
local unittype IVl
local unit PVl
local string AVl
local real DVl
local real HVl
local unit JVl
local unittype KVl
local unit LVl
local string XVl
local real CVl
local real VVl
local unit BVl
local unittype NVl
local unit MVl
local string wBl
local real uBl
local real rBl
local unit sBl
local unittype tBl
local unit iBl
local string SBl
local real cBl
local real oBl
local unit OBl
local unittype lBl
local unit bBl
local string yBl
local real pBl
local real eBl
local unit qBl
local unittype aBl
local real nBl
local real dBl
local real fBl
local real RBl
local real TBl
local real YBl
local real GBl
local real gBl
local real hBl
local real FBl
local real kBl
local real jBl
if vVl==du then
set QVl=xVl
set WVl="attack"
set nBl=Qw[25]
set dBl=Ww[25]
set EVl=nBl
set ZVl=dBl
call IssuePointOrder(QVl,WVl,EVl,ZVl)
set UVl=xVl
set IVl=UNIT_TYPE_HERO
if IsUnitType(UVl,IVl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,25)
endif
endif
if vVl==nu then
if Ew[2]==true then
set PVl=xVl
set AVl="attack"
set fBl=Qw[53]
set RBl=Ww[53]
set DVl=fBl
set HVl=RBl
call IssuePointOrder(PVl,AVl,DVl,HVl)
set JVl=xVl
set KVl=UNIT_TYPE_HERO
if IsUnitType(JVl,KVl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,53)
endif
else
set LVl=xVl
set XVl="attack"
set TBl=Qw[25]
set YBl=Ww[25]
set CVl=TBl
set VVl=YBl
call IssuePointOrder(LVl,XVl,CVl,VVl)
set BVl=xVl
set NVl=UNIT_TYPE_HERO
if IsUnitType(BVl,NVl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,25)
endif
endif
endif
if vVl==fu then
set MVl=xVl
set wBl="attack"
set GBl=Qw[53]
set gBl=Ww[53]
set uBl=GBl
set rBl=gBl
call IssuePointOrder(MVl,wBl,uBl,rBl)
set sBl=xVl
set tBl=UNIT_TYPE_HERO
if IsUnitType(sBl,tBl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,53)
endif
endif
if vVl==Ru then
if Ew[0]==true then
set iBl=xVl
set SBl="attack"
set hBl=Qw[25]
set FBl=Ww[25]
set cBl=hBl
set oBl=FBl
call IssuePointOrder(iBl,SBl,cBl,oBl)
set OBl=xVl
set lBl=UNIT_TYPE_HERO
if IsUnitType(OBl,lBl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,25)
endif
else
set bBl=xVl
set yBl="attack"
set kBl=Qw[53]
set jBl=Ww[53]
set pBl=kBl
set eBl=jBl
call IssuePointOrder(bBl,yBl,pBl,eBl)
set qBl=xVl
set aBl=UNIT_TYPE_HERO
if IsUnitType(qBl,aBl) then
call SaveInteger(qu,GetHandleId(xVl),$6D6F7665,53)
endif
endif
endif
set xVl=null
set vVl=null
set mVl=null
set QVl=null
set UVl=null
set IVl=null
set PVl=null
set JVl=null
set KVl=null
set LVl=null
set BVl=null
set NVl=null
set MVl=null
set sBl=null
set tBl=null
set iBl=null
set OBl=null
set lBl=null
set bBl=null
set qBl=null
set aBl=null
endfunction
function xBp takes nothing returns nothing
local unit qBp=GetDyingUnit()
local unit dBp=qBp
local unit aBp
local unit nBp
local unit fBp
local unit RBp
local unit TBp
local unit YBp
local unit GBp
local unit gBp
local player hBp
local real FBp
local player kBp
local real jBp
if GetUnitTypeId(dBp)==$6F303257 then
set fBp=qBp
set hBp=GetOwningPlayer(fBp)
set RBp=qBp
set FBp=GetUnitX(RBp)
set TBp=qBp
set aBp=CreateUnit(hBp,$6E303147,FBp,GetUnitY(TBp),0.)
call dYr(aBp)
set YBp=qBp
set kBp=GetOwningPlayer(YBp)
set GBp=qBp
set jBp=GetUnitX(GBp)
set gBp=qBp
set nBp=CreateUnit(kBp,$6E303147,jBp,GetUnitY(gBp),0.)
call dYr(nBp)
endif
set qBp=null
set aBp=null
set nBp=null
set dBp=null
set fBp=null
set RBp=null
set TBp=null
set YBp=null
set GBp=null
set gBp=null
set hBp=null
set kBp=null
endfunction
function xBt takes nothing returns nothing
local unit GBt=GetEnteringUnit()
local unit gBt=GBt
local unit hBt
local integer FBt
local unit kBt
local integer jBt
if GetUnitTypeId(gBt)==$6E303241 then
set hBt=GBt
set FBt=$41304933
call UnitAddAbility(hBt,FBt)
set kBt=GBt
set jBt=$414D3221
call UnitAddAbility(kBt,jBt)
endif
set GBt=null
set gBt=null
set hBt=null
set kBt=null
endfunction
function xEp takes nothing returns boolean
local unit GEp=GetFilterUnit()
local unit gEp=GEp
local unit hEp
local unit FEp
local boolean kEp
local boolean jEp
if UnitAlive(gEp) then
set hEp=GEp
if GetUnitTypeId(hEp)==$6F303532 then
set kEp=true
else
set FEp=GEp
set kEp=GetUnitTypeId(FEp)==$6F303554
endif
set jEp=kEp
else
set jEp=false
endif
set GEp=null
set gEp=null
set hEp=null
set FEp=null
return jEp
endfunction
function xJp takes nothing returns boolean
local trigger hJp
local trigger FJp
local playerunitevent kJp
local integer jJp
set uY=CreateTrigger()
set hJp=uY
call DisableTrigger(hJp)
set FJp=uY
set kJp=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set jJp=0
loop
call TriggerRegisterPlayerUnitEvent(FJp,Player(jJp),kJp,null)
set jJp=jJp+1
exitwhen jJp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(uY,lww)
set hJp=null
set FJp=null
set kJp=null
return true
endfunction
function xNr takes nothing returns boolean
return true
endfunction
function xNu takes nothing returns boolean
local trigger hNu
local trigger FNu
local playerunitevent kNu
local integer jNu
set PO=CreateTrigger()
set hNu=PO
call DisableTrigger(hNu)
set FNu=PO
set kNu=EVENT_PLAYER_UNIT_DEATH
set jNu=0
loop
call TriggerRegisterPlayerUnitEvent(FNu,Player(jNu),kNu,null)
set jNu=jNu+1
exitwhen jNu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(PO,YM)
set hNu=null
set FNu=null
set kNu=null
return true
endfunction
function xOu takes nothing returns nothing
local group lOu
local filterfunc bOu
local group yOu
local unit pOu
local group eOu
local group qOu
local group aOu
local unit nOu
local unit dOu
local real fOu
local unit ROu
local unitstate TOu
local real YOu
local unit GOu
local unit gOu
local unitstate hOu
local group FOu
local group kOu
local boolexpr jOu
if kg==true then
set lOu=CreateGroup()
set bOu=Filter(irw)
call GroupEnumUnitsInRect(lOu,bj_mapInitialPlayableArea,bOu)
set yOu=GetRandomSubGroup(1,lOu)
set eOu=yOu
loop
set qOu=eOu
exitwhen not (FirstOfGroup(qOu)!=null)
set aOu=eOu
set nOu=FirstOfGroup(aOu)
call GroupRemoveUnit(aOu,nOu)
set pOu=nOu
set dOu=pOu
set GOu=pOu
set gOu=GOu
set hOu=UNIT_STATE_LIFE
set fOu=GetUnitState(gOu,hOu)-1500.
set ROu=dOu
set TOu=UNIT_STATE_LIFE
set YOu=fOu
call SetUnitState(ROu,TOu,YOu)
call DestroyEffect(AddSpecialEffectTarget("Smite Purple.mdl",pOu,"origin"))
endloop
set FOu=lOu
call DestroyGroup(FOu)
set kOu=yOu
call DestroyGroup(kOu)
set jOu=bOu
call DestroyBoolExpr(jOu)
call TimerStart(Fg,180.,false,Srw)
endif
set lOu=null
set bOu=null
set yOu=null
set pOu=null
set eOu=null
set qOu=null
set aOu=null
set nOu=null
set dOu=null
set ROu=null
set TOu=null
set GOu=null
set gOu=null
set hOu=null
set FOu=null
set kOu=null
set jOu=null
endfunction
function KZO takes string aZO returns nothing
local unit nZO
local integer dZO
local integer fZO
local unit RZO
local unit TZO
local unit YZO
local unit GZO
local integer gZO
local unit hZO
local integer FZO
local string kZO
local integer jZO
local real xZO
local integer vZO
local string mZO
local unit QZO
local integer WZO
local unit EZO
local integer ZZO
local unit UZO
local integer IZO
local unit PZO
local integer AZO
local unit DZO
local integer HZO
local boolean JZO
set aW[qW]=aZO
set qW=qW+1
set nZO=GetAttacker()
set RZO=nZO
if GetUnitTypeId(RZO)==$6F303533 then
set JZO=true
else
set TZO=nZO
set JZO=GetUnitTypeId(TZO)==$6F303547
endif
if JZO then
set YZO=nZO
set dZO=GetPlayerTechCount(GetOwningPlayer(YZO),$52303845,true)
set GZO=nZO
set gZO=$4132314E
if GetUnitAbilityLevel(GZO,gZO)==1 then
set hZO=nZO
set FZO=$41323152
if GetUnitAbilityLevel(hZO,FZO)==1 then
set kZO="when calling alloc_CallbackSingle_doAfter_MightySwing in MightySwing, line 103"
set aW[qW]=kZO
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set jZO=fF
set RF[jZO]=732
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_MightySwing.","when calling error in MightySwing, line 103")
set jZO=0
endif
else
set dF=dF-1
set jZO=nF[dF]
set RF[jZO]=732
endif
set qW=qW-1
set fZO=jZO
set jm[fZO]=nZO
set xZO=.5
set vZO=fZO
set mZO="when calling doAfter in MightySwing, line 103"
set aW[qW]=mZO
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),xZO,vZO,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
else
set QZO=nZO
set WZO=$41323152
call UnitAddAbility(QZO,WZO)
endif
endif
set EZO=nZO
set ZZO=$4132314E
if GetUnitAbilityLevel(EZO,ZZO)==0 then
set UZO=nZO
set IZO=$4132314D
call IncUnitAbilityLevel(UZO,IZO)
set PZO=nZO
set AZO=$4132314D
if GetUnitAbilityLevel(PZO,AZO)==7-1*dZO then
set DZO=nZO
set HZO=$4132314E
call UnitAddAbility(DZO,HZO)
endif
endif
endif
set qW=qW-1
set nZO=null
set RZO=null
set TZO=null
set YZO=null
set GZO=null
set hZO=null
set QZO=null
set EZO=null
set UZO=null
set PZO=null
set DZO=null
endfunction
function xPS takes nothing returns nothing
set qW=0
call KZO("via function reference MightySwing, line 117")
endfunction
function xRr takes nothing returns nothing
local rect jRr=Vc
set Xo[3]=Location(GetRectCenterX(jRr),GetRectCenterY(jRr))
call IssuePointOrderByIdLoc(GetEnteringUnit(),851983,Xo[3])
call RemoveLocation(Xo[3])
set jRr=null
endfunction
function xVb takes nothing returns boolean
local playerunitevent kVb
local code jVb
set xl=null
set kVb=EVENT_PLAYER_UNIT_DEATH
set jVb=d3
call emO(kVb,null,jVb,null)
set kVb=null
return true
endfunction
function xVe takes nothing returns boolean
local trigger aVe
local playerunitevent nVe
local trigger dVe
local playerunitevent fVe
local integer RVe
local trigger TVe
local boolexpr YVe
local trigger GVe
local code gVe
local playerunitevent hVe
local code FVe
local playerunitevent kVe
local code jVe
set Yl=CreateTrigger()
set Gl=CreateTrigger()
set aVe=Yl
set nVe=EVENT_PLAYER_UNIT_DEATH
set dVe=aVe
set fVe=nVe
set RVe=0
loop
call TriggerRegisterPlayerUnitEvent(dVe,Player(RVe),fVe,null)
set RVe=RVe+1
exitwhen RVe==bj_MAX_PLAYER_SLOTS
endloop
set TVe=Yl
set YVe=Condition(c3)
call TriggerAddCondition(TVe,YVe)
set GVe=Yl
set gVe=o3
call TriggerAddAction(GVe,gVe)
call TriggerAddAction(Gl,O3)
set hVe=EVENT_PLAYER_UNIT_ATTACKED
set FVe=l3
call emO(hVe,null,FVe,null)
set kVe=EVENT_PLAYER_UNIT_SPELL_CAST
set jVe=b3
call emO(kVe,null,jVe,null)
set aVe=null
set nVe=null
set dVe=null
set fVe=null
set TVe=null
set YVe=null
set GVe=null
set hVe=null
set kVe=null
return true
endfunction
function xVu takes nothing returns boolean
local trigger MCu
local trigger wVu
local real uVu
local trigger rVu
local trigger sVu
local playerunitevent tVu
local integer iVu
local trigger SVu
local boolexpr cVu
local playerunitevent oVu
local code OVu
local playerunitevent lVu
local code bVu
local playerunitevent yVu
local code pVu
local trigger eVu
local playerunitevent qVu
local trigger aVu
local playerunitevent nVu
local integer dVu
local trigger fVu
local code RVu
local playerunitevent TVu
local code YVu
local playerunitevent GVu
local code gVu
local playerunitevent hVu
local code FVu
local playerunitevent kVu
local code jVu
set Zp=CreateTrigger()
set Up=CreateTrigger()
call CreateTrigger()
set Ip=CreateTrigger()
set Ap=null
set MCu=Zp
call DisableTrigger(MCu)
set wVu=Zp
set uVu=60.
call TriggerRegisterTimerEvent(wVu,uVu,true)
call TriggerAddAction(Zp,k4)
set rVu=Up
call DisableTrigger(rVu)
set sVu=Up
set tVu=EVENT_PLAYER_UNIT_DEATH
set iVu=0
loop
call TriggerRegisterPlayerUnitEvent(sVu,Player(iVu),tVu,null)
set iVu=iVu+1
exitwhen iVu==bj_MAX_PLAYER_SLOTS
endloop
set SVu=Up
set cVu=Condition(j4)
call TriggerAddCondition(SVu,cVu)
set oVu=EVENT_PLAYER_UNIT_SELL
set OVu=x4
call emO(oVu,null,OVu,null)
set lVu=EVENT_PLAYER_HERO_REVIVE_FINISH
set bVu=v4
call emO(lVu,null,bVu,null)
set yVu=EVENT_PLAYER_UNIT_DEATH
set pVu=m4
call emO(yVu,null,pVu,null)
set eVu=Ip
set qVu=EVENT_PLAYER_UNIT_ATTACKED
set aVu=eVu
set nVu=qVu
set dVu=0
loop
call TriggerRegisterPlayerUnitEvent(aVu,Player(dVu),nVu,null)
set dVu=dVu+1
exitwhen dVu==bj_MAX_PLAYER_SLOTS
endloop
set fVu=Ip
set RVu=Q4
call TriggerAddAction(fVu,RVu)
set TVu=EVENT_PLAYER_HERO_LEVEL
set YVu=W4
call emO(TVu,null,YVu,null)
set GVu=EVENT_PLAYER_UNIT_ATTACKED
set gVu=E4
call emO(GVu,null,gVu,null)
set hVu=EVENT_PLAYER_UNIT_SPELL_EFFECT
set FVu=Z4
call emO(hVu,null,FVu,null)
set kVu=EVENT_PLAYER_UNIT_SPELL_EFFECT
set jVu=U4
call emO(kVu,null,jVu,null)
set MCu=null
set wVu=null
set rVu=null
set sVu=null
set tVu=null
set SVu=null
set cVu=null
set oVu=null
set lVu=null
set yVu=null
set eVu=null
set qVu=null
set aVu=null
set nVu=null
set fVu=null
set TVu=null
set GVu=null
set hVu=null
set kVu=null
return true
endfunction
function MHy takes nothing returns nothing
local unit QHy=GetSpellTargetUnit()
local unit WHy=GetSpellAbilityUnit()
local integer EHy=GetSpellAbilityId()
local integer ZHy=50+25*GetUnitAbilityLevel(WHy,$5472616E)
local integer UHy
local unit IHy
local unit PHy
local player AHy
local unit DHy
local player HHy
local integer JHy
local player KHy
local playerstate LHy
local integer XHy
local player CHy
local playerstate VHy
local player BHy
local playerstate NHy
if EHy==$5472616E then
set IHy=QHy
call KillUnit(IHy)
set PHy=QHy
call RemoveUnit(PHy)
set DHy=WHy
set AHy=GetOwningPlayer(DHy)
set UHy=GetPlayerId(AHy)-4
set HHy=Player(UHy)
set JHy=ZHy
set KHy=HHy
set LHy=PLAYER_STATE_RESOURCE_GOLD
set XHy=JHy
set BHy=KHy
set NHy=LHy
set CHy=KHy
set VHy=LHy
call SetPlayerState(BHy,NHy,GetPlayerState(CHy,VHy)+XHy)
set hr[UHy]=hr[UHy]+ZHy
set Fr[UHy]=Fr[UHy]+ZHy
set Cr[UHy]=Cr[UHy]+ZHy
endif
set QHy=null
set WHy=null
set IHy=null
set PHy=null
set AHy=null
set DHy=null
set HHy=null
set KHy=null
set LHy=null
set CHy=null
set VHy=null
set BHy=null
set NHy=null
endfunction
function xWu takes nothing returns nothing
call MHy()
endfunction
function xZi takes nothing returns nothing
local unit wZi=GetKillingUnit()
local unit cZi=wZi
local unit uZi
local integer rZi
local integer sZi
local unit tZi
local integer iZi
local unit SZi
local unit oZi
local unittype OZi
local unit lZi
local unittype bZi
local real yZi
local unit pZi
local unit eZi
local unit qZi
local unit aZi
local unittype nZi
local unit dZi
local unittype fZi
local unit RZi
local unit TZi
local unit YZi
local boolean GZi
local player gZi
local real hZi
local boolean FZi
local player kZi
local real jZi
if GetUnitTypeId(cZi)==$4830324A then
set uZi=GetTriggerUnit()
set oZi=uZi
set OZi=UNIT_TYPE_HERO
if not IsUnitType(oZi,OZi) then
set lZi=uZi
set bZi=UNIT_TYPE_STRUCTURE
set GZi=not IsUnitType(lZi,bZi)
else
set GZi=false
endif
if GZi then
set yZi=GetHeroLevel(wZi)*1./4
set rZi=R2I(yZi)
if rZi!=0 then
set sZi=GetRandomInt(1,100)
if sZi<=15+rZi then
set pZi=wZi
set gZi=GetOwningPlayer(pZi)
set eZi=uZi
set hZi=GetUnitX(eZi)
set qZi=uZi
set tZi=CreateUnit(gZi,$78303168,hZi,GetUnitY(qZi),180.)
call dYr(tZi)
endif
endif
endif
set aZi=uZi
set nZi=UNIT_TYPE_HERO
if IsUnitType(aZi,nZi) then
set dZi=uZi
set fZi=UNIT_TYPE_STRUCTURE
set FZi=not IsUnitType(dZi,fZi)
else
set FZi=false
endif
if FZi then
set iZi=GetRandomInt(1,100)
if iZi<=100 then
set RZi=wZi
set kZi=GetOwningPlayer(RZi)
set TZi=uZi
set jZi=GetUnitX(TZi)
set YZi=uZi
set SZi=CreateUnit(kZi,$78303168,jZi,GetUnitY(YZi),180.)
call dYr(SZi)
endif
endif
endif
set wZi=null
set uZi=null
set tZi=null
set SZi=null
set cZi=null
set oZi=null
set OZi=null
set lZi=null
set bZi=null
set pZi=null
set eZi=null
set qZi=null
set aZi=null
set nZi=null
set dZi=null
set fZi=null
set RZi=null
set TZi=null
set YZi=null
set gZi=null
set kZi=null
endfunction
function xeS takes nothing returns boolean
local trigger GeS
local trigger geS
local rect heS
local region FeS
local trigger keS
local boolexpr jeS
set Ka=CreateTrigger()
set GeS=Ka
call DisableTrigger(GeS)
set geS=Ka
set heS=bj_mapInitialPlayableArea
set FeS=CreateRegion()
call RegionAddRect(FeS,heS)
call TriggerRegisterEnterRegion(geS,FeS,null)
set keS=Ka
set jeS=Condition(h5)
call TriggerAddCondition(keS,jeS)
set GeS=null
set geS=null
set heS=null
set FeS=null
set keS=null
set jeS=null
return true
endfunction
function xjp takes nothing returns boolean
local unit Fjp=GetTriggerUnit()
local integer kjp=0
local integer jjp=0
loop
if UnitItemInSlot(Fjp,kjp)!=null then
set jjp=jjp+1
endif
set kjp=kjp+1
exitwhen kjp>=bj_MAX_INVENTORY
endloop
set Fjp=null
return jjp>1 and GetItemLevel(GetManipulatedItem())==4
endfunction
function xle takes nothing returns boolean
local playerunitevent kle=EVENT_PLAYER_UNIT_DEATH
local code jle=ruw
call emO(kle,null,jle,null)
set kle=null
return true
endfunction
function xll takes nothing returns nothing
local unit nll=GetTriggerUnit()
local unit dll
local unit fll
local unit Rll
local unit Tll
local unit Yll
local unit Gll
local boolean gll
local boolean hll
local boolean Fll
local boolean kll
local boolean jll
if cp==true then
set dll=nll
if GetUnitTypeId(dll)==$6F303246 then
set gll=true
else
set fll=nll
set gll=GetUnitTypeId(fll)==$6F303247
endif
if gll then
set hll=true
else
set Rll=nll
set hll=GetUnitTypeId(Rll)==$6F303248
endif
if hll then
set Fll=true
else
set Tll=nll
set Fll=GetUnitTypeId(Tll)==$6F303251
endif
if Fll then
set kll=true
else
set Yll=nll
set kll=GetUnitTypeId(Yll)==$6F303252
endif
if kll then
set jll=true
else
set Gll=nll
set jll=GetUnitTypeId(Gll)==$6F303253
endif
if jll then
call Spc()
endif
endif
set nll=null
set dll=null
set fll=null
set Rll=null
set Tll=null
set Yll=null
set Gll=null
endfunction
function xlr takes nothing returns boolean
return (IsUnitType(GetTriggerUnit(),UNIT_TYPE_FLYING) and GetUnitTypeId(GetTriggerUnit())!=$75303031 and GetUnitTypeId(GetTriggerUnit())!=$75303033 and GetUnitTypeId(GetTriggerUnit())!=$75303030 and GetUnitTypeId(GetTriggerUnit())!=$75303032 and GetUnitTypeId(GetTriggerUnit())!=$75303034 and GetUnitTypeId(GetTriggerUnit())!=$75303035 and GetUnitTypeId(GetTriggerUnit())!=$75303036 and GetUnitTypeId(GetTriggerUnit())!=$75303037)!=false!=false
endfunction
function xnl takes nothing returns nothing
local unit Val
local unit Bal
local integer Nal
local integer Mal
local unit wnl
local unittype unl
local unit rnl
local unittype snl
local unit tnl
local player inl
local unit Snl
local integer cnl
local player onl
local unit Onl
local unit lnl
local unittype bnl
local string ynl
local real pnl
local player enl
local integer qnl
local unit anl
local unit nnl
local unit dnl
local unittype fnl
local string Rnl
local real Tnl
local player Ynl
local integer Gnl
local unit gnl
local unit hnl
local boolean Fnl
local player knl
local boolean jnl
if iy!=null then
set Val=GetTriggerUnit()
set Bal=GetAttacker()
set wnl=Val
set unl=UNIT_TYPE_MECHANICAL
if IsUnitType(wnl,unl) then
set Fnl=true
else
set rnl=Val
set snl=UNIT_TYPE_STRUCTURE
set Fnl=IsUnitType(rnl,snl)
endif
if Fnl then
set tnl=Bal
set knl=GetOwningPlayer(tnl)
set Snl=iy
set inl=GetOwningPlayer(Snl)
if knl==Player(GetPlayerId(inl)+4) and ly!=10 then
set cnl=$52313339
set Onl=iy
set onl=GetOwningPlayer(Onl)
set jnl=GetPlayerTechCount(onl,cnl,true)<2
else
set jnl=false
endif
if jnl then
set lnl=Val
set bnl=UNIT_TYPE_MECHANICAL
if IsUnitType(lnl,bnl) then
set Nal=GetRandomInt(1,228)
if Nal==1 then
set ly=ly+1
set qnl=ly
set ynl="You got tiny piece of relic! You have "+I2S(qnl)+"/10 now!"
set pnl=10.
set anl=iy
set enl=GetOwningPlayer(anl)
call DisplayTimedTextToPlayer(enl,0.,0.,pnl,ynl)
if ly==10 then
set nnl=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(nnl),$52313339,2)
endif
endif
endif
set dnl=Val
set fnl=UNIT_TYPE_STRUCTURE
if IsUnitType(dnl,fnl) then
set Mal=GetRandomInt(1,100)
if Mal<5 then
set ly=ly+1
set Gnl=ly
set Rnl="You got tiny piece of relic! You have "+I2S(Gnl)+"/10 now!"
set Tnl=10.
set gnl=iy
set Ynl=GetOwningPlayer(gnl)
call DisplayTimedTextToPlayer(Ynl,0.,0.,Tnl,Rnl)
if ly==10 then
set hnl=iy
call SetPlayerTechMaxAllowed(GetOwningPlayer(hnl),$52313339,2)
endif
endif
endif
endif
endif
endif
set Val=null
set Bal=null
set wnl=null
set unl=null
set rnl=null
set snl=null
set tnl=null
set inl=null
set Snl=null
set onl=null
set Onl=null
set lnl=null
set bnl=null
set enl=null
set anl=null
set nnl=null
set dnl=null
set fnl=null
set Ynl=null
set gnl=null
set hnl=null
set knl=null
endfunction
function sOw takes unit Kow returns nothing
local unit Vow=Kow
local player Low=GetOwningPlayer(Vow)
local unit Bow=Kow
local integer Xow=GetUnitTypeId(Bow)
local integer Cow
local unit Now
local real Mow
local real wOw
local real uOw
local player rOw
if Xow==$78303232 then
set Now=GetTriggerUnit()
set Mow=70.
set wOw=70.
set uOw=70.
call SetUnitScale(Now,Mow*.01,wOw*.01,uOw*.01)
set rOw=Low
set Cow=GetPlayerId(rOw)
set J[Cow]=$6E6C6C64
endif
set Low=null
set Vow=null
set Bow=null
set Now=null
set rOw=null
endfunction
function xnt takes nothing returns nothing
call sOw(GetTriggerUnit())
endfunction
function xpu takes nothing returns boolean
local unit dpu=GetFilterUnit()
local unit Tpu=dpu
local player Rpu=GetOwningPlayer(Tpu)
local integer fpu=GetPlayerId(Rpu)-4
local unit Ypu=dpu
local unit Gpu
local player gpu
local unit hpu
local unittype Fpu
local boolean kpu
local boolean jpu
if UnitAlive(Ypu) then
set Gpu=dpu
set gpu=Hg[fpu]
set kpu=Gpu!=null and IsUnitAlly(Gpu,gpu)
else
set kpu=false
endif
if kpu then
set hpu=dpu
set Fpu=UNIT_TYPE_STRUCTURE
set jpu=IsUnitType(hpu,Fpu)==false
else
set jpu=false
endif
set dpu=null
set Rpu=null
set Tpu=null
set Ypu=null
set Gpu=null
set gpu=null
set hpu=null
set Fpu=null
return jpu
endfunction
function xqe takes nothing returns nothing
local unit Yqe=GetTriggerUnit()
local integer Gqe=GetResearched()
local unit Fqe=Yqe
local player gqe=GetOwningPlayer(Fqe)
local player hqe
local trigger kqe
local trigger jqe
if Gqe==$52303359 then
set X[GetPlayerId(gqe)]=$6E666F64
set kqe=oT
call EnableTrigger(kqe)
endif
if Gqe==$52303359 then
set hqe=GetTriggerPlayer()
if GetPlayerTechCount(hqe,$52303359,true)==2 then
set jqe=cT
call EnableTrigger(jqe)
endif
endif
set Yqe=null
set gqe=null
set hqe=null
set Fqe=null
set kqe=null
set jqe=null
endfunction
function xtu takes nothing returns boolean
local playerunitevent ktu=EVENT_PLAYER_HERO_LEVEL
local code jtu=Oww
call emO(ktu,null,jtu,null)
set ktu=null
return true
endfunction
function xwl takes nothing returns boolean
return true
endfunction
function xxS takes nothing returns boolean
return true
endfunction
function y0r takes nothing returns nothing
local unit C9r=GetEnteringUnit()
local unit B9r=C9r
local integer V9r=GetUnitTypeId(B9r)
local integer N9r
local player M9r
local unit w0r
local integer u0r
local integer r0r
local player s0r
local unit t0r
local integer i0r
local integer S0r
local player c0r
local unit o0r
local integer O0r
local unit l0r
local integer b0r
if V9r==$686D696C then
set N9r=$5230344C
set M9r=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(M9r,N9r,true)==2 then
set w0r=C9r
set u0r=$41305135
call UnitAddAbility(w0r,u0r)
endif
set r0r=$5230344C
set s0r=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(s0r,r0r,true)==3 then
set t0r=C9r
set i0r=$41304652
call UnitAddAbility(t0r,i0r)
endif
set S0r=$5230344C
set c0r=GetOwningPlayer(GetEnteringUnit())
if GetPlayerTechCount(c0r,S0r,true)==4 then
set o0r=C9r
set O0r=$41305549
call UnitAddAbility(o0r,O0r)
set l0r=C9r
set b0r=$41305134
call UnitAddAbility(l0r,b0r)
endif
endif
set C9r=null
set B9r=null
set M9r=null
set w0r=null
set s0r=null
set t0r=null
set c0r=null
set o0r=null
set l0r=null
endfunction
function y4c takes nothing returns boolean
return true
endfunction
function y5b takes nothing returns nothing
local integer O5b=GetResearched()
local player l5b
local trigger b5b
if O5b==$52303044 then
set l5b=GetTriggerPlayer()
if GetPlayerTechCount(l5b,$52303044,true)==1 then
set b5b=kn
call EnableTrigger(b5b)
endif
endif
set l5b=null
set b5b=null
endfunction
function y6c takes nothing returns nothing
local unit K5c=GetAttacker()
local unit C5c=K5c
local integer L5c=GetUnitTypeId(C5c)
local unit V5c=K5c
local unitstate B5c=UNIT_STATE_LIFE
local real O6c=GetUnitState(V5c,B5c)*100.
local unit N5c=K5c
local unitstate M5c=UNIT_STATE_MAX_LIFE
local real X5c=O6c/GetUnitState(N5c,M5c)
local unit w6c
local integer u6c
local unit r6c
local real s6c
local unit t6c
local unitstate i6c
local real S6c
local unit c6c
local unitstate o6c
local unit l6c
local unitstate b6c
if X5c<50. and L5c==$78303132 then
set w6c=K5c
set u6c=852138
call IssueImmediateOrderById(w6c,u6c)
set r6c=K5c
set s6c=100.
set t6c=r6c
set i6c=UNIT_STATE_LIFE
set S6c=s6c
set l6c=t6c
set b6c=i6c
set c6c=t6c
set o6c=i6c
call SetUnitState(l6c,b6c,GetUnitState(c6c,o6c)+S6c)
endif
set K5c=null
set C5c=null
set V5c=null
set B5c=null
set N5c=null
set M5c=null
set w6c=null
set r6c=null
set t6c=null
set i6c=null
set c6c=null
set o6c=null
set l6c=null
set b6c=null
endfunction
function yBO takes nothing returns boolean
return true
endfunction
function yCt takes nothing returns boolean
local trigger oCt
local trigger OCt
local playerunitevent lCt
local integer bCt
set ph=CreateTrigger()
set eh=null
set oCt=ph
call DisableTrigger(oCt)
set OCt=ph
set lCt=EVENT_PLAYER_UNIT_DEATH
set bCt=0
loop
call TriggerRegisterPlayerUnitEvent(OCt,Player(bCt),lCt,null)
set bCt=bCt+1
exitwhen bCt==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ph,lsw)
set oCt=null
set OCt=null
set lCt=null
return true
endfunction
function yDw takes nothing returns nothing
local unit NAw=GetEnteringUnit()
local unit wDw=NAw
local integer MAw=GetUnitTypeId(wDw)
local unit uDw=NAw
local unit rDw
local integer sDw
local unit tDw
local integer iDw
local unit SDw
local integer cDw
local unit oDw
local integer ODw
local unit lDw
local integer bDw
if qG[GetPlayerId(GetOwningPlayer(uDw))-4]==true then
if MAw==$4E726F62 or MAw==$4E616C6D or MAw==$4E74696E or MAw==$4864676F then
set rDw=NAw
set sDw=$41706976
if GetUnitAbilityLevel(rDw,sDw)==0 then
set tDw=NAw
set iDw=$41706976
call UnitAddAbility(tDw,iDw)
endif
endif
if MAw==$6E66726C or MAw==$6E697474 or MAw==$6E737261 or MAw==$6E777267 or MAw==$6E667472 then
set SDw=NAw
set cDw=$41706976
call UnitAddAbility(SDw,cDw)
set oDw=NAw
set ODw=$41304A31
call UnitAddAbility(oDw,ODw)
endif
if MAw==$6E66726C or MAw==$6E697474 or MAw==$6E737261 or MAw==$6E777267 or MAw==$6E7A6570 or MAw==$6E6E6D67 or MAw==$6E667472 then
set lDw=NAw
set bDw=$41706976
call UnitAddAbility(lDw,bDw)
endif
endif
set NAw=null
set wDw=null
set uDw=null
set rDw=null
set tDw=null
set SDw=null
set oDw=null
set lDw=null
endfunction
function yEy takes nothing returns boolean
return true
endfunction
function yFl takes nothing returns boolean
local playerunitevent tFl
local code iFl
local trigger SFl
local trigger cFl
local rect oFl
local region OFl
local trigger lFl
local boolexpr bFl
set ch=CreateTrigger()
set oh=null
set tFl=EVENT_PLAYER_UNIT_DEATH
set iFl=Lrw
call emO(tFl,null,iFl,null)
set SFl=ch
call DisableTrigger(SFl)
set cFl=ch
set oFl=bj_mapInitialPlayableArea
set OFl=CreateRegion()
call RegionAddRect(OFl,oFl)
call TriggerRegisterEnterRegion(cFl,OFl,null)
set lFl=ch
set bFl=Condition(Xrw)
call TriggerAddCondition(lFl,bFl)
set tFl=null
set SFl=null
set cFl=null
set oFl=null
set OFl=null
set lFl=null
set bFl=null
return true
endfunction
function svw takes string mjw returns nothing
local integer Qjw
local group Wjw
local filterfunc Ejw
local unit Zjw
local integer Ujw
local unit Ijw
local integer Pjw
local unit Ajw
local integer Djw
local unit Hjw
local integer Jjw
local unit Kjw
local integer Ljw
local string Xjw
local real Cjw
local player Vjw
local trigger Bjw
local group Njw
local real Mjw
local real wxw
local real uxw
local boolexpr rxw
local unit sxw
local unit txw
local unit ixw
local group Sxw
local group cxw
local unit oxw
local integer Oxw
local unit lxw
local integer bxw
local string yxw
local real pxw
local player exw
local unit qxw
local unit axw
local unit nxw
local unit dxw
local unitstate fxw
local unit Rxw
local unit Txw
local unitstate Yxw
local unit Gxw
local real gxw
local unit hxw
local unitstate Fxw
local real kxw
local unit jxw
local unit xxw
local unitstate vxw
local unit mxw
local real Qxw
local unit Wxw
local unitstate Exw
local real Zxw
local unit Uxw
local unit Ixw
local unitstate Pxw
local string Axw
local real Dxw
local player Hxw
local unit Jxw
local group Kxw
local boolexpr Lxw
local string Xxw
local integer Cxw
local real Vxw
local integer Bxw
local string Nxw
local real Mxw
local real wvw
local real uvw
local real rvw
set aW[qW]=mjw
set qW=qW+1
set Qjw=GetSpellAbilityId()
if Qjw==$41374358 then
set Sy=3
set Ijw=iy
set Pjw=$41315257
call UnitAddAbility(Ijw,Pjw)
set Ajw=iy
set Djw=$41384358
call UnitAddAbility(Ajw,Djw)
set Hjw=iy
set Jjw=$41394358
call UnitAddAbility(Hjw,Jjw)
set Kjw=iy
set Ljw=$41374358
call UnitRemoveAbility(Kjw,Ljw)
set Oy=true
set Xjw="|cffff0000My thirst is growing...|r"
set Cjw=10.
set Vjw=GetTriggerPlayer()
call DisplayTimedTextToPlayer(Vjw,0.,0.,Cjw,Xjw)
set Bjw=oy
call EnableTrigger(Bjw)
endif
if Qjw==$41394358 then
call Idt()
endif
if Qjw==$41384358 then
set Wjw=CreateGroup()
set Ejw=Filter(n1)
set Njw=Wjw
set sxw=iy
set txw=sxw
set Mxw=GetUnitX(txw)
set ixw=sxw
set uvw=Mxw
set rvw=GetUnitY(ixw)
set Mjw=uvw
set wxw=rvw
set uxw=999999.
set rxw=Filter(n1)
call GroupEnumUnitsInRange(Njw,Mjw,wxw,uxw,rxw)
set Sxw=Wjw
set cxw=Sxw
if not (FirstOfGroup(cxw)!=null) then
set oxw=iy
set Oxw=$41384358
call UnitRemoveAbility(oxw,Oxw)
set lxw=iy
set bxw=$41384358
call UnitAddAbility(lxw,bxw)
set yxw="You have no alive heroes above 50% health."
set pxw=10.
set qxw=iy
set exw=GetOwningPlayer(qxw)
call DisplayTimedTextToPlayer(exw,0.,0.,pxw,yxw)
else
set Zjw=Dgy(Wjw)
set axw=Zjw
call KillUnit(axw)
set nxw=iy
set dxw=nxw
set fxw=UNIT_STATE_MANA
set wvw=GetUnitState(dxw,fxw)+3.
set Rxw=iy
set Txw=Rxw
set Yxw=UNIT_STATE_MAX_MANA
if wvw>GetUnitState(Txw,Yxw) then
set Gxw=iy
set jxw=iy
set xxw=jxw
set vxw=UNIT_STATE_MAX_MANA
set gxw=GetUnitState(xxw,vxw)
set hxw=Gxw
set Fxw=UNIT_STATE_MANA
set kxw=gxw
call SetUnitState(hxw,Fxw,kxw)
else
set mxw=iy
set Uxw=iy
set Ixw=Uxw
set Pxw=UNIT_STATE_MANA
set Qxw=GetUnitState(Ixw,Pxw)+3.
set Wxw=mxw
set Exw=UNIT_STATE_MANA
set Zxw=Qxw
call SetUnitState(Wxw,Exw,Zxw)
endif
set Axw="|cffff0000Relic is full of blood.|r"
set Dxw=10.
set Jxw=iy
set Hxw=GetOwningPlayer(Jxw)
call DisplayTimedTextToPlayer(Hxw,0.,0.,Dxw,Axw)
endif
set Kxw=Wjw
call DestroyGroup(Kxw)
set Lxw=Ejw
call DestroyBoolExpr(Lxw)
endif
if Qjw==$41314936 then
set Xxw="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_DeathFromAfar in DeathFromAfar, line 559"
set aW[qW]=Xxw
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Cxw=fF
set RF[Cxw]=806
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_DeathFromAfar.","when calling error in DeathFromAfar, line 559")
set Cxw=0
endif
else
set dF=dF-1
set Cxw=nF[dF]
set RF[Cxw]=806
endif
set qW=qW-1
set Ujw=Cxw
set Vxw=2.
set Bxw=Ujw
set Nxw="when calling doAfter in DeathFromAfar, line 559"
set aW[qW]=Nxw
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),Vxw,Bxw,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
set qW=qW-1
set Wjw=null
set Ejw=null
set Zjw=null
set Ijw=null
set Ajw=null
set Hjw=null
set Kjw=null
set Vjw=null
set Bjw=null
set Njw=null
set rxw=null
set sxw=null
set txw=null
set ixw=null
set Sxw=null
set cxw=null
set oxw=null
set lxw=null
set exw=null
set qxw=null
set axw=null
set nxw=null
set dxw=null
set fxw=null
set Rxw=null
set Txw=null
set Yxw=null
set Gxw=null
set hxw=null
set Fxw=null
set jxw=null
set xxw=null
set vxw=null
set mxw=null
set Wxw=null
set Exw=null
set Uxw=null
set Ixw=null
set Pxw=null
set Hxw=null
set Jxw=null
set Kxw=null
set Lxw=null
endfunction
function yJt takes nothing returns nothing
set qW=0
call svw("via function reference DeathFromAfar, line 527")
endfunction
function Eno takes string Nao returns nothing
local unit Mao
local trigger wno
local integer uno
local group rno
local filterfunc sno
local unit tno
local group ino
local integer Sno
local unit cno
local integer ono
local unit Ono
local integer lno
local unit bno
local unit yno
local unit pno
local string eno
local group qno
local group ano
local unit nno
local integer dno
local effect fno
local widget Rno
local string Tno
local string Yno
local group Gno
local boolexpr gno
local string hno
local integer Fno
local real kno
local integer jno
local string xno
local group vno
local real mno
local unit Qno
local unit Wno
set aW[qW]=Nao
set qW=qW+1
set Mao=GetTriggerUnit()
set cno=Mao
set ono=$41304D35
if GetUnitAbilityLevel(cno,ono)>0 then
if GetRandomInt(1,100)<=10 then
set wno=GetTriggeringTrigger()
set Ono=Mao
set lno=$41304D35
set uno=GetUnitAbilityLevel(Ono,lno)
set rno=CreateGroup()
set sno=Filter(M6)
set vno=rno
set bno=Mao
set mno=GetUnitX(bno)
set yno=Mao
call GroupEnumUnitsInRange(vno,mno,GetUnitY(yno),350.,sno)
set pno=Mao
set eno="spell slam"
call SetUnitAnimation(pno,eno)
set ino=rno
loop
set qno=ino
exitwhen not (FirstOfGroup(qno)!=null)
set ano=ino
set nno=FirstOfGroup(ano)
call GroupRemoveUnit(ano,nno)
set tno=nno
set Qno=Mao
set Wno=tno
set dno=70+10*uno
call UnitDamageTarget(Qno,Wno,dno*1.,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
set Rno=tno
set Tno="Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl"
set Yno="origin"
set fno=AddSpecialEffectTarget(Tno,Rno,Yno)
call DestroyEffect(fno)
endloop
set Gno=rno
call DestroyGroup(Gno)
set gno=sno
call DestroyBoolExpr(gno)
set hno="when calling alloc_CallbackSingle_doAfter_KulGhan in KulGhan, line 318"
set aW[qW]=hno
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set Fno=fF
set RF[Fno]=725
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_KulGhan.","when calling error in KulGhan, line 318")
set Fno=0
endif
else
set dF=dF-1
set Fno=nF[dF]
set RF[Fno]=725
endif
set qW=qW-1
set Sno=Fno
set kv[Sno]=wno
set kno=2.
set jno=Sno
set xno="when calling doAfter in KulGhan, line 318"
set aW[qW]=xno
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),kno,jno,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
set qW=qW-1
set Mao=null
set wno=null
set rno=null
set sno=null
set tno=null
set ino=null
set cno=null
set Ono=null
set bno=null
set yno=null
set pno=null
set qno=null
set ano=null
set nno=null
set fno=null
set Rno=null
set Gno=null
set gno=null
set vno=null
set Qno=null
set Wno=null
endfunction
function yJu takes nothing returns nothing
set qW=0
call Eno("via function reference KulGhan, line 325")
endfunction
function yMS takes nothing returns nothing
local integer OMS=GetResearched()
local trigger lMS
local trigger bMS
if OMS==$52303138 then
set lMS=be
call EnableTrigger(lMS)
endif
if OMS==$52303144 then
set bMS=ye
call EnableTrigger(bMS)
endif
set lMS=null
set bMS=null
endfunction
function yMu takes nothing returns boolean
return true
endfunction
function yOw takes nothing returns boolean
return IsUnitType(GetSoldUnit(),UNIT_TYPE_STRUCTURE)==false
endfunction
function Q4s takes string GCs returns nothing
local unit gCs
local integer hCs
local unit FCs
local integer kCs
local integer jCs
local integer xCs
local integer vCs
local integer mCs
local integer QCs
local location WCs
local unit ECs
local integer ZCs
local unit UCs
local unit ICs
local integer PCs
local location ACs
local integer DCs
local integer HCs
local integer JCs
local location KCs
local unit LCs
local integer XCs
local integer CCs
local effect VCs
local integer BCs
local integer NCs
local real MCs
local real wVs
local filterfunc uVs
local real rVs
local real sVs
local filterfunc tVs
local real iVs
local real SVs
local filterfunc cVs
local real oVs
local real OVs
local filterfunc lVs
local real bVs
local real yVs
local filterfunc pVs
local real eVs
local real qVs
local filterfunc aVs
local unit nVs
local unit dVs
local unit fVs
local unit RVs
local string TVs
local integer YVs
local unit GVs
local unit gVs
local unitstate hVs
local unit FVs
local integer kVs
local unit jVs
local integer xVs
local integer vVs
local unit mVs
local real QVs
local unit WVs
local unitstate EVs
local real ZVs
local unit UVs
local unit IVs
local unitstate PVs
local string AVs
local integer DVs
local real HVs
local integer JVs
local string KVs
local unit LVs
local integer XVs
local unit CVs
local integer VVs
local string BVs
local integer NVs
local real MVs
local integer wBs
local string uBs
local unit rBs
local integer sBs
local unit tBs
local integer iBs
local string SBs
local real cBs
local player oBs
local unit OBs
local unit lBs
local unit bBs
local unitstate yBs
local unit pBs
local unit eBs
local unit qBs
local string aBs
local integer nBs
local unit dBs
local integer fBs
local unit RBs
local integer TBs
local string YBs
local real GBs
local player gBs
local unit hBs
local unit FBs
local unit kBs
local unitstate jBs
local unit xBs
local unit vBs
local unit mBs
local string QBs
local integer WBs
local unit EBs
local integer ZBs
local unit UBs
local integer IBs
local string PBs
local real ABs
local player DBs
local unit HBs
local unit JBs
local unit KBs
local unitstate LBs
local unit XBs
local unit CBs
local unit VBs
local string BBs
local integer NBs
local unit MBs
local integer wNs
local unit uNs
local integer rNs
local string sNs
local real tNs
local player iNs
local unit SNs
local unit cNs
local unit oNs
local unitstate ONs
local unit lNs
local real bNs
local unit yNs
local unitstate pNs
local real eNs
local unit qNs
local unit aNs
local unitstate nNs
local integer dNs
local integer fNs
local player RNs
local location TNs
local real YNs
local unit GNs
local integer gNs
local unit hNs
local integer FNs
local integer kNs
local unit jNs
local real xNs
local unit vNs
local integer mNs
local unit QNs
local integer WNs
local unit ENs
local integer ZNs
local string UNs
local integer INs
local real PNs
local integer ANs
local string DNs
local unit HNs
local integer JNs
local unit KNs
local integer LNs
local string XNs
local real CNs
local player VNs
local unit BNs
local unit NNs
local unit MNs
local unitstate wMs
local unit uMs
local unit rMs
local unit sMs
local unit tMs
local unit iMs
local unit SMs
local unit cMs
local real oMs
local unit OMs
local real lMs
local unit bMs
local real yMs
local unit pMs
local unitstate eMs
local real qMs
local unit aMs
local unit nMs
local unitstate dMs
local unit fMs
local integer RMs
local unit TMs
local integer YMs
local string GMs
local integer gMs
local real hMs
local integer FMs
local string kMs
local unit jMs
local integer xMs
local unit vMs
local integer mMs
local string QMs
local real WMs
local player EMs
local unit ZMs
local unit UMs
local unit IMs
local unitstate PMs
local string AMs
local integer DMs
local unit HMs
local integer JMs
local unit KMs
local integer LMs
local string XMs
local real CMs
local player VMs
local unit BMs
local unit NMs
local unit MMs
local unitstate w3s
local unit u3s
local real r3s
local unit s3s
local unitstate t3s
local real i3s
local unit S3s
local unit c3s
local unitstate o3s
local unit O3s
local integer l3s
local unit b3s
local integer y3s
local integer p3s
local string e3s
local integer q3s
local real a3s
local integer n3s
local string d3s
local unit f3s
local integer R3s
local unit T3s
local integer Y3s
local string G3s
local integer g3s
local real h3s
local integer F3s
local string k3s
local unit j3s
local integer x3s
local unit v3s
local integer m3s
local string Q3s
local real W3s
local player E3s
local unit Z3s
local unit U3s
local unit I3s
local unitstate P3s
local unit A3s
local real D3s
local unit H3s
local unitstate J3s
local real K3s
local unit L3s
local unit X3s
local unitstate C3s
local integer V3s
local integer B3s
local player N3s
local location M3s
local real w1s
local unit u1s
local integer r1s
local unit s1s
local real t1s
local unit i1s
local integer S1s
local unit c1s
local integer o1s
local unit O1s
local integer l1s
local string b1s
local integer y1s
local real p1s
local integer e1s
local string q1s
local unit a1s
local integer n1s
local unit d1s
local integer f1s
local string R1s
local real T1s
local player Y1s
local unit G1s
local unit g1s
local unit h1s
local unitstate F1s
local unit k1s
local unit j1s
local unit x1s
local string v1s
local integer m1s
local unit Q1s
local integer W1s
local unit E1s
local integer Z1s
local string U1s
local real I1s
local player P1s
local unit A1s
local string D1s
local widget H1s
local string J1s
local string K1s
local integer L1s
local unit X1s
local integer C1s
local unit V1s
local integer B1s
local string N1s
local integer M1s
local real w4s
local integer u4s
local string r4s
local unit s4s
local integer t4s
local unit i4s
local integer S4s
local string c4s
local real o4s
local player O4s
local unit l4s
local real b4s
local real y4s
local real p4s
local real e4s
local player q4s
local real a4s
local player n4s
local real d4s
local real f4s
local real R4s
local real T4s
local real Y4s
local real G4s
local real g4s
local real h4s
local real F4s
local real k4s
local real j4s
local real x4s
local real v4s
local real m4s
set aW[qW]=GCs
set qW=qW+1
set gCs=GetTriggerUnit()
if gCs==fg then
set hCs=GetSpellAbilityId()
set nVs=Rg
if UnitAlive(nVs) then
set FCs=GetSpellTargetUnit()
if hCs==$414D6266 then
set dVs=FCs
set fVs=dVs
set b4s=GetUnitX(fVs)
set RVs=dVs
set R4s=b4s
set T4s=GetUnitY(RVs)
set MCs=R4s
set wVs=T4s
set uVs=Filter(srw)
set TVs="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 739"
set aW[qW]=TVs
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set YVs=qF
set aF[YVs]=875
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 739")
set YVs=0
endif
else
set eF=eF-1
set YVs=pF[eF]
set aF[YVs]=875
endif
set qW=qW-1
set kCs=YVs
set xQ[kCs]=FCs
call WXp(4,0,null,null,MCs,wVs,800.,false,0,null,uVs,kCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 739")
endif
if hCs==$414D6267 then
set GVs=Rg
set gVs=GVs
set hVs=UNIT_STATE_MANA
if GetUnitState(gVs,hVs)>50. then
set FVs=Rg
set kVs=$41305231
call UnitAddAbility(FVs,kVs)
set jVs=Rg
set xVs=$41305231
set vVs=4
call SetUnitAbilityLevel(jVs,xVs,vVs)
set mVs=Rg
set UVs=Rg
set IVs=UVs
set PVs=UNIT_STATE_MANA
set QVs=GetUnitState(IVs,PVs)-50.
set WVs=mVs
set EVs=UNIT_STATE_MANA
set ZVs=QVs
call SetUnitState(WVs,EVs,ZVs)
set AVs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 765"
set aW[qW]=AVs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set DVs=fF
set RF[DVs]=837
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 765")
set DVs=0
endif
else
set dF=dF-1
set DVs=nF[dF]
set RF[DVs]=837
endif
set qW=qW-1
set jCs=DVs
set HVs=30.
set JVs=jCs
set KVs="when calling doAfter in TheEpiphanyOfDeath, line 765"
set aW[qW]=KVs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),HVs,JVs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
if Yg==false then
set LVs=fg
set XVs=$414D6266
call UnitRemoveAbility(LVs,XVs)
set CVs=fg
set VVs=$414D6268
call UnitRemoveAbility(CVs,VVs)
set BVs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 770"
set aW[qW]=BVs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set NVs=fF
set RF[NVs]=838
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 770")
set NVs=0
endif
else
set dF=dF-1
set NVs=nF[dF]
set RF[NVs]=838
endif
set qW=qW-1
set xCs=NVs
set MVs=40.
set wBs=xCs
set uBs="when calling doAfter in TheEpiphanyOfDeath, line 770"
set aW[qW]=uBs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),MVs,wBs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set rBs=fg
set sBs=$414D6267
call UnitRemoveAbility(rBs,sBs)
set tBs=fg
set iBs=$414D6267
call UnitAddAbility(tBs,iBs)
set SBs="Not enough mana"
set cBs=5.
set OBs=fg
set oBs=GetOwningPlayer(OBs)
call DisplayTimedTextToPlayer(oBs,0.,0.,cBs,SBs)
endif
endif
if hCs==$414D6268 then
set lBs=Rg
set bBs=lBs
set yBs=UNIT_STATE_MANA
if GetUnitState(bBs,yBs)>50. then
set pBs=FCs
set eBs=pBs
set y4s=GetUnitX(eBs)
set qBs=pBs
set Y4s=y4s
set G4s=GetUnitY(qBs)
set rVs=Y4s
set sVs=G4s
set tVs=Filter(srw)
set aBs="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 779"
set aW[qW]=aBs
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set nBs=qF
set aF[nBs]=876
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 779")
set nBs=0
endif
else
set eF=eF-1
set nBs=pF[eF]
set aF[nBs]=876
endif
set qW=qW-1
set vCs=nBs
set vQ[vCs]=FCs
call WXp(4,0,null,null,rVs,sVs,800.,false,0,null,tVs,vCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 779")
else
set dBs=fg
set fBs=$414D6268
call UnitRemoveAbility(dBs,fBs)
set RBs=fg
set TBs=$414D6268
call UnitAddAbility(RBs,TBs)
set YBs="Not enough mana"
set GBs=5.
set hBs=fg
set gBs=GetOwningPlayer(hBs)
call DisplayTimedTextToPlayer(gBs,0.,0.,GBs,YBs)
endif
endif
if hCs==$414D6269 then
set FBs=Rg
set kBs=FBs
set jBs=UNIT_STATE_MANA
if GetUnitState(kBs,jBs)>75. then
set xBs=FCs
set vBs=xBs
set p4s=GetUnitX(vBs)
set mBs=xBs
set g4s=p4s
set h4s=GetUnitY(mBs)
set iVs=g4s
set SVs=h4s
set cVs=Filter(srw)
set QBs="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 811"
set aW[qW]=QBs
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set WBs=qF
set aF[WBs]=877
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 811")
set WBs=0
endif
else
set eF=eF-1
set WBs=pF[eF]
set aF[WBs]=877
endif
set qW=qW-1
set mCs=WBs
set mQ[mCs]=FCs
call WXp(4,0,null,null,iVs,SVs,800.,false,0,null,cVs,mCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 811")
else
set EBs=fg
set ZBs=$414D6269
call UnitRemoveAbility(EBs,ZBs)
set UBs=fg
set IBs=$414D6269
call UnitAddAbility(UBs,IBs)
set PBs="Not enough mana"
set ABs=5.
set HBs=fg
set DBs=GetOwningPlayer(HBs)
call DisplayTimedTextToPlayer(DBs,0.,0.,ABs,PBs)
endif
endif
if hCs==$414D626A then
set JBs=Rg
set KBs=JBs
set LBs=UNIT_STATE_MANA
if GetUnitState(KBs,LBs)>100. then
set XBs=FCs
set CBs=XBs
set e4s=GetUnitX(CBs)
set VBs=XBs
set F4s=e4s
set k4s=GetUnitY(VBs)
set oVs=F4s
set OVs=k4s
set lVs=Filter(srw)
set BBs="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 837"
set aW[qW]=BBs
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set NBs=qF
set aF[NBs]=878
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 837")
set NBs=0
endif
else
set eF=eF-1
set NBs=pF[eF]
set aF[NBs]=878
endif
set qW=qW-1
set QCs=NBs
set QQ[QCs]=FCs
call WXp(4,0,null,null,oVs,OVs,800.,false,0,null,lVs,QCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 837")
else
set MBs=fg
set wNs=$414D626A
call UnitRemoveAbility(MBs,wNs)
set uNs=fg
set rNs=$414D626A
call UnitAddAbility(uNs,rNs)
set sNs="Not enough mana"
set tNs=5.
set SNs=fg
set iNs=GetOwningPlayer(SNs)
call DisplayTimedTextToPlayer(iNs,0.,0.,tNs,sNs)
endif
endif
if hCs==$414D626B then
set cNs=Rg
set oNs=cNs
set ONs=UNIT_STATE_MANA
if GetUnitState(oNs,ONs)>75. then
set lNs=Rg
set qNs=Rg
set aNs=qNs
set nNs=UNIT_STATE_MANA
set bNs=GetUnitState(aNs,nNs)-75.
set yNs=lNs
set pNs=UNIT_STATE_MANA
set eNs=bNs
call SetUnitState(yNs,pNs,eNs)
set WCs=GetUnitLoc(Rg)
set dNs=1
set fNs=$75303030
set RNs=GetOwningPlayer(Rg)
set TNs=WCs
set YNs=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set dNs=dNs-1
exitwhen dNs<0
call CreateUnitAtLocSaveLast(RNs,fNs,TNs,YNs)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set ECs=bj_lastCreatedUnit
set GNs=ECs
set gNs=$41313458
call UnitAddAbility(GNs,gNs)
set hNs=ECs
set FNs=$41313458
set kNs=2
call SetUnitAbilityLevel(hNs,FNs,kNs)
set jNs=ECs
set xNs=2.
call UnitApplyTimedLife(jNs,$42544C46,xNs)
set vNs=ECs
set mNs=852127
call IssueImmediateOrderById(vNs,mNs)
call RemoveLocation(WCs)
if Yg==false then
set QNs=fg
set WNs=$41313434
call UnitRemoveAbility(QNs,WNs)
set ENs=fg
set ZNs=$414D6269
call UnitRemoveAbility(ENs,ZNs)
set UNs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 886"
set aW[qW]=UNs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set INs=fF
set RF[INs]=839
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 886")
set INs=0
endif
else
set dF=dF-1
set INs=nF[dF]
set RF[INs]=839
endif
set qW=qW-1
set ZCs=INs
set PNs=80.
set ANs=ZCs
set DNs="when calling doAfter in TheEpiphanyOfDeath, line 886"
set aW[qW]=DNs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),PNs,ANs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set HNs=fg
set JNs=$414D626B
call UnitRemoveAbility(HNs,JNs)
set KNs=fg
set LNs=$414D626B
call UnitAddAbility(KNs,LNs)
set XNs="Not enough mana"
set CNs=5.
set BNs=fg
set VNs=GetOwningPlayer(BNs)
call DisplayTimedTextToPlayer(VNs,0.,0.,CNs,XNs)
endif
endif
if hCs==$41305657 then
set NNs=Rg
set MNs=NNs
set wMs=UNIT_STATE_MANA
if GetUnitState(MNs,wMs)>100. then
set uMs=Rg
set q4s=GetOwningPlayer(uMs)
set rMs=Rg
set a4s=GetUnitX(rMs)
set sMs=Rg
set UCs=CreateUnit(q4s,$7830307D,a4s,GetUnitY(sMs),bj_UNIT_FACING)
set tMs=Rg
set n4s=GetOwningPlayer(tMs)
set iMs=Rg
set d4s=GetUnitX(iMs)
set SMs=Rg
set ICs=CreateUnit(n4s,$7830307D,d4s,GetUnitY(SMs),bj_UNIT_FACING)
set cMs=UCs
set oMs=80.
call UnitApplyTimedLife(cMs,$42544C46,oMs)
set OMs=ICs
set lMs=80.
call UnitApplyTimedLife(OMs,$42544C46,lMs)
set bMs=Rg
set aMs=Rg
set nMs=aMs
set dMs=UNIT_STATE_MANA
set yMs=GetUnitState(nMs,dMs)-100.
set pMs=bMs
set eMs=UNIT_STATE_MANA
set qMs=yMs
call SetUnitState(pMs,eMs,qMs)
if Yg==false then
set fMs=fg
set RMs=$414D626A
call UnitRemoveAbility(fMs,RMs)
set TMs=fg
set YMs=$414D626C
call UnitRemoveAbility(TMs,YMs)
set GMs="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 903"
set aW[qW]=GMs
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set gMs=fF
set RF[gMs]=840
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 903")
set gMs=0
endif
else
set dF=dF-1
set gMs=nF[dF]
set RF[gMs]=840
endif
set qW=qW-1
set PCs=gMs
set hMs=105.
set FMs=PCs
set kMs="when calling doAfter in TheEpiphanyOfDeath, line 903"
set aW[qW]=kMs
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),hMs,FMs,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set jMs=fg
set xMs=$41305657
call UnitRemoveAbility(jMs,xMs)
set vMs=fg
set mMs=$41305657
call UnitAddAbility(vMs,mMs)
set QMs="Not enough mana"
set WMs=5.
set ZMs=fg
set EMs=GetOwningPlayer(ZMs)
call DisplayTimedTextToPlayer(EMs,0.,0.,WMs,QMs)
endif
endif
if hCs==$41313434 then
set UMs=Rg
set IMs=UMs
set PMs=UNIT_STATE_MANA
if GetUnitState(IMs,PMs)>75. then
set ACs=GetSpellTargetLoc()
set j4s=GetLocationX(ACs)
set x4s=GetLocationY(ACs)
set bVs=j4s
set yVs=x4s
set pVs=Filter(srw)
set AMs="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 913"
set aW[qW]=AMs
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set DMs=qF
set aF[DMs]=879
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 913")
set DMs=0
endif
else
set eF=eF-1
set DMs=pF[eF]
set aF[DMs]=879
endif
set qW=qW-1
set DCs=DMs
set WQ[DCs]=ACs
call WXp(4,0,null,null,bVs,yVs,800.,false,0,null,pVs,DCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 913")
call RemoveLocation(ACs)
else
set HMs=fg
set JMs=$41313434
call UnitRemoveAbility(HMs,JMs)
set KMs=fg
set LMs=$41313434
call UnitAddAbility(KMs,LMs)
set XMs="Not enough mana"
set CMs=5.
set BMs=fg
set VMs=GetOwningPlayer(BMs)
call DisplayTimedTextToPlayer(VMs,0.,0.,CMs,XMs)
endif
endif
if hCs==$414D626C then
set NMs=Rg
set MMs=NMs
set w3s=UNIT_STATE_MANA
if GetUnitState(MMs,w3s)>100. then
set u3s=Rg
set S3s=Rg
set c3s=S3s
set o3s=UNIT_STATE_MANA
set r3s=GetUnitState(c3s,o3s)-100.
set s3s=u3s
set t3s=UNIT_STATE_MANA
set i3s=r3s
call SetUnitState(s3s,t3s,i3s)
set O3s=Rg
set l3s=$41303338
call UnitAddAbility(O3s,l3s)
set b3s=Rg
set y3s=$41303338
set p3s=7
call SetUnitAbilityLevel(b3s,y3s,p3s)
set e3s="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 944"
set aW[qW]=e3s
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set q3s=fF
set RF[q3s]=841
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 944")
set q3s=0
endif
else
set dF=dF-1
set q3s=nF[dF]
set RF[q3s]=841
endif
set qW=qW-1
set HCs=q3s
set a3s=90.
set n3s=HCs
set d3s="when calling doAfter in TheEpiphanyOfDeath, line 944"
set aW[qW]=d3s
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),a3s,n3s,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
if Yg==false then
set f3s=fg
set R3s=$414D626A
call UnitRemoveAbility(f3s,R3s)
set T3s=fg
set Y3s=$41305657
call UnitRemoveAbility(T3s,Y3s)
set G3s="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 949"
set aW[qW]=G3s
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set g3s=fF
set RF[g3s]=842
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 949")
set g3s=0
endif
else
set dF=dF-1
set g3s=nF[dF]
set RF[g3s]=842
endif
set qW=qW-1
set JCs=g3s
set h3s=105.
set F3s=JCs
set k3s="when calling doAfter in TheEpiphanyOfDeath, line 949"
set aW[qW]=k3s
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),h3s,F3s,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set j3s=fg
set x3s=$414D626C
call UnitRemoveAbility(j3s,x3s)
set v3s=fg
set m3s=$414D626C
call UnitAddAbility(v3s,m3s)
set Q3s="Not enough mana"
set W3s=5.
set Z3s=fg
set E3s=GetOwningPlayer(Z3s)
call DisplayTimedTextToPlayer(E3s,0.,0.,W3s,Q3s)
endif
endif
if hCs==$414D626D then
set U3s=Rg
set I3s=U3s
set P3s=UNIT_STATE_MANA
if GetUnitState(I3s,P3s)>150. then
set A3s=Rg
set L3s=Rg
set X3s=L3s
set C3s=UNIT_STATE_MANA
set D3s=GetUnitState(X3s,C3s)-150.
set H3s=A3s
set J3s=UNIT_STATE_MANA
set K3s=D3s
call SetUnitState(H3s,J3s,K3s)
set KCs=GetUnitLoc(Rg)
set V3s=1
set B3s=$75303030
set N3s=GetOwningPlayer(Rg)
set M3s=KCs
set w1s=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set V3s=V3s-1
exitwhen V3s<0
call CreateUnitAtLocSaveLast(N3s,B3s,M3s,w1s)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
set LCs=bj_lastCreatedUnit
set u1s=LCs
set r1s=$415A616E
call UnitAddAbility(u1s,r1s)
set s1s=LCs
set t1s=2.
call UnitApplyTimedLife(s1s,$42544C46,t1s)
set i1s=LCs
set S1s=852217
call IssueImmediateOrderById(i1s,S1s)
call RemoveLocation(KCs)
if Yg==false then
set c1s=fg
set o1s=$414D626E
call UnitRemoveAbility(c1s,o1s)
set O1s=fg
set l1s=$414D626F
call UnitRemoveAbility(O1s,l1s)
set b1s="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 970"
set aW[qW]=b1s
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set y1s=fF
set RF[y1s]=843
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 970")
set y1s=0
endif
else
set dF=dF-1
set y1s=nF[dF]
set RF[y1s]=843
endif
set qW=qW-1
set XCs=y1s
set p1s=300.
set e1s=XCs
set q1s="when calling doAfter in TheEpiphanyOfDeath, line 970"
set aW[qW]=q1s
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),p1s,e1s,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
else
set a1s=fg
set n1s=$414D626D
call UnitRemoveAbility(a1s,n1s)
set d1s=fg
set f1s=$414D626D
call UnitAddAbility(d1s,f1s)
set R1s="Not enough mana"
set T1s=5.
set G1s=fg
set Y1s=GetOwningPlayer(G1s)
call DisplayTimedTextToPlayer(Y1s,0.,0.,T1s,R1s)
endif
endif
if hCs==$414D626E then
set g1s=Rg
set h1s=g1s
set F1s=UNIT_STATE_MANA
if GetUnitState(h1s,F1s)>150. then
set k1s=FCs
set j1s=k1s
set f4s=GetUnitX(j1s)
set x1s=k1s
set v4s=f4s
set m4s=GetUnitY(x1s)
set eVs=v4s
set qVs=m4s
set aVs=Filter(srw)
set v1s="when calling alloc_ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 979"
set aW[qW]=v1s
set qW=qW+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set m1s=qF
set aF[m1s]=880
else
call L8c("Out of memory: Could not create ForGroupCallback_forNearestUnit_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 979")
set m1s=0
endif
else
set eF=eF-1
set m1s=pF[eF]
set aF[m1s]=880
endif
set qW=qW-1
set CCs=m1s
set EQ[CCs]=FCs
call WXp(4,0,null,null,eVs,qVs,550.,false,0,null,aVs,CCs,"when calling forNearestUnit in TheEpiphanyOfDeath, line 979")
else
set Q1s=fg
set W1s=$414D626E
call UnitRemoveAbility(Q1s,W1s)
set E1s=fg
set Z1s=$414D626E
call UnitAddAbility(E1s,Z1s)
set U1s="Not enough mana"
set I1s=5.
set A1s=fg
set P1s=GetOwningPlayer(A1s)
call DisplayTimedTextToPlayer(P1s,0.,0.,I1s,U1s)
endif
endif
if hCs==$414D626F then
call SetUnitInvulnerable(Rg,true)
call PauseUnit(Rg,true)
call SetUnitAnimation(Rg,"stand, channel")
set Gg=0
set D1s="origin"
set H1s=Rg
set J1s="Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl"
set bj_lastCreatedEffect=AddSpecialEffectTarget(J1s,H1s,D1s)
set VCs=bj_lastCreatedEffect
set K1s="when calling alloc_CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 1011"
set aW[qW]=K1s
set qW=qW+1
if YF==0 then
if GF<32768 then
set GF=GF+1
set L1s=GF
set gF[L1s]=678
else
call L8c("Out of memory: Could not create CallbackPeriodic_doPeriodically_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 1011")
set L1s=0
endif
else
set YF=YF-1
set L1s=TF[YF]
set gF[L1s]=678
endif
set qW=qW-1
set BCs=L1s
set ZQ[BCs]=VCs
call GtO(1.,BCs,"when calling doPeriodically in TheEpiphanyOfDeath, line 1011")
if Yg==false then
set X1s=fg
set C1s=$414D626E
call UnitRemoveAbility(X1s,C1s)
set V1s=fg
set B1s=$414D626D
call UnitRemoveAbility(V1s,B1s)
set N1s="when calling alloc_CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath in TheEpiphanyOfDeath, line 1025"
set aW[qW]=N1s
set qW=qW+1
if dF==0 then
if fF<32768 then
set fF=fF+1
set M1s=fF
set RF[M1s]=844
else
call L8c("Out of memory: Could not create CallbackSingle_doAfter_registerPlayerUnitEvent_TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 1025")
set M1s=0
endif
else
set dF=dF-1
set M1s=nF[dF]
set RF[M1s]=844
endif
set qW=qW-1
set NCs=M1s
set w4s=300.
set u4s=NCs
set r4s="when calling doAfter in TheEpiphanyOfDeath, line 1025"
set aW[qW]=r4s
set qW=qW+1
call P5S(F6c("when calling getTimer in ClosureTimers, line 27"),w4s,u4s,"when calling doAfter in ClosureTimers, line 27")
set qW=qW-1
endif
endif
else
set s4s=fg
set t4s=hCs
call UnitRemoveAbility(s4s,t4s)
set i4s=fg
set S4s=hCs
call UnitAddAbility(i4s,S4s)
set c4s="Talnos is dead"
set o4s=5.
set l4s=fg
set O4s=GetOwningPlayer(l4s)
call DisplayTimedTextToPlayer(O4s,0.,0.,o4s,c4s)
endif
endif
set qW=qW-1
set gCs=null
set FCs=null
set WCs=null
set ECs=null
set UCs=null
set ICs=null
set ACs=null
set KCs=null
set LCs=null
set VCs=null
set uVs=null
set tVs=null
set cVs=null
set lVs=null
set pVs=null
set aVs=null
set nVs=null
set dVs=null
set fVs=null
set RVs=null
set GVs=null
set gVs=null
set hVs=null
set FVs=null
set jVs=null
set mVs=null
set WVs=null
set EVs=null
set UVs=null
set IVs=null
set PVs=null
set LVs=null
set CVs=null
set rBs=null
set tBs=null
set oBs=null
set OBs=null
set lBs=null
set bBs=null
set yBs=null
set pBs=null
set eBs=null
set qBs=null
set dBs=null
set RBs=null
set gBs=null
set hBs=null
set FBs=null
set kBs=null
set jBs=null
set xBs=null
set vBs=null
set mBs=null
set EBs=null
set UBs=null
set DBs=null
set HBs=null
set JBs=null
set KBs=null
set LBs=null
set XBs=null
set CBs=null
set VBs=null
set MBs=null
set uNs=null
set iNs=null
set SNs=null
set cNs=null
set oNs=null
set ONs=null
set lNs=null
set yNs=null
set pNs=null
set qNs=null
set aNs=null
set nNs=null
set RNs=null
set TNs=null
set GNs=null
set hNs=null
set jNs=null
set vNs=null
set QNs=null
set ENs=null
set HNs=null
set KNs=null
set VNs=null
set BNs=null
set NNs=null
set MNs=null
set wMs=null
set uMs=null
set rMs=null
set sMs=null
set tMs=null
set iMs=null
set SMs=null
set cMs=null
set OMs=null
set bMs=null
set pMs=null
set eMs=null
set aMs=null
set nMs=null
set dMs=null
set fMs=null
set TMs=null
set jMs=null
set vMs=null
set EMs=null
set ZMs=null
set UMs=null
set IMs=null
set PMs=null
set HMs=null
set KMs=null
set VMs=null
set BMs=null
set NMs=null
set MMs=null
set w3s=null
set u3s=null
set s3s=null
set t3s=null
set S3s=null
set c3s=null
set o3s=null
set O3s=null
set b3s=null
set f3s=null
set T3s=null
set j3s=null
set v3s=null
set E3s=null
set Z3s=null
set U3s=null
set I3s=null
set P3s=null
set A3s=null
set H3s=null
set J3s=null
set L3s=null
set X3s=null
set C3s=null
set N3s=null
set M3s=null
set u1s=null
set s1s=null
set i1s=null
set c1s=null
set O1s=null
set a1s=null
set d1s=null
set Y1s=null
set G1s=null
set g1s=null
set h1s=null
set F1s=null
set k1s=null
set j1s=null
set x1s=null
set Q1s=null
set E1s=null
set P1s=null
set A1s=null
set H1s=null
set X1s=null
set V1s=null
set s4s=null
set i4s=null
set O4s=null
set l4s=null
set q4s=null
set n4s=null
endfunction
function yPS takes nothing returns nothing
set qW=0
call Q4s("via function reference TheEpiphanyOfDeath, line 732")
endfunction
function yPp takes nothing returns boolean
local trigger oPp
local trigger OPp
local playerunitevent lPp
local integer bPp
set Ay=CreateTrigger()
set oPp=Ay
call DisableTrigger(oPp)
set OPp=Ay
set lPp=EVENT_PLAYER_UNIT_DEATH
set bPp=0
loop
call TriggerRegisterPlayerUnitEvent(OPp,Player(bPp),lPp,null)
set bPp=bPp+1
exitwhen bPp==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ay,w4)
set oPp=null
set OPp=null
set lPp=null
return true
endfunction
function yRt takes nothing returns nothing
local unit bft=GetDyingUnit()
local unit yft=GetKillingUnit()
local unit qft=bft
local unittype aft=UNIT_TYPE_HERO
local texttag pft
local unit eft
local unit nft
local unit dft
local unit fft
local unit Rft
local unit Tft
local texttag Yft
local integer Gft
local integer gft
local integer hft
local integer Fft
local effect kft
local string jft
local real xft
local real vft
local unit mft
local unit Qft
local unit Wft
local unit Eft
local unit Zft
local unit Uft
local unit Ift
local real Pft
local unit Aft
local integer Dft
local unit Hft
local integer Jft
local integer Kft
local unit Lft
local unit Xft
local integer Cft
local real Vft
local real Bft
local unit Nft
local unit Mft
local unit wRt
local boolean uRt
local boolean rRt
local real sRt
local real tRt
local player iRt
local real SRt
local real cRt
local real oRt
local real ORt
local real lRt
local real bRt
if IsUnitType(qft,aft) then
set nft=bft
set uRt=IsUnitIllusion(nft)==false
else
set uRt=false
endif
if uRt then
set dft=yft
set rRt=GetPlayerTechCount(GetOwningPlayer(dft),$52303451,true)>0
else
set rRt=false
endif
if rRt then
set fft=bft
set Rft=fft
set sRt=GetUnitX(Rft)
set Tft=fft
set pft=PBr(sRt,GetUnitY(Tft),"Totem of Might")
set Yft=pft
set Gft=255
set gft=220
set hft=0
set Fft=255
call SetTextTagColor(Yft,Gft,gft,hft,Fft)
set jft="Abilities\\Spells\\Orc\\Reincarnation\\ReincarnationTarget.mdl"
set mft=bft
set Qft=mft
set tRt=GetUnitX(Qft)
set Wft=mft
set oRt=tRt
set ORt=GetUnitY(Wft)
set xft=oRt
set vft=ORt
set kft=AddSpecialEffect(jft,xft,vft)
call DestroyEffect(kft)
set Eft=yft
set iRt=GetOwningPlayer(Eft)
set Zft=bft
set SRt=GetUnitX(Zft)
set Uft=bft
set eft=CreateUnit(iRt,$75303030,SRt,GetUnitY(Uft),0.)
set Ift=eft
set Pft=3.
call UnitApplyTimedLife(Ift,$42544C46,Pft)
set Aft=eft
set Dft=$41305334
call UnitAddAbility(Aft,Dft)
set Hft=eft
set Jft=$41305334
set Lft=yft
set Kft=GetPlayerTechCount(GetOwningPlayer(Lft),$52303451,true)
call SetUnitAbilityLevel(Hft,Jft,Kft)
set Xft=eft
set Cft=852504
set Nft=bft
set Mft=Nft
set cRt=GetUnitX(Mft)
set wRt=Nft
set lRt=cRt
set bRt=GetUnitY(wRt)
set Vft=lRt
set Bft=bRt
call IssuePointOrderById(Xft,Cft,Vft,Bft)
endif
set bft=null
set yft=null
set pft=null
set eft=null
set qft=null
set aft=null
set nft=null
set dft=null
set fft=null
set Rft=null
set Tft=null
set Yft=null
set kft=null
set mft=null
set Qft=null
set Wft=null
set Eft=null
set Zft=null
set Uft=null
set Ift=null
set Aft=null
set Hft=null
set Lft=null
set Xft=null
set Nft=null
set Mft=null
set wRt=null
set iRt=null
endfunction
function yWo takes nothing returns boolean
return true
endfunction
function yXl takes nothing returns boolean
local trigger tXl
local trigger iXl
local playerunitevent SXl
local trigger cXl
local playerunitevent oXl
local integer OXl
local trigger lXl
local code bXl
set nn=CreateTrigger()
set tXl=nn
call DisableTrigger(tXl)
set iXl=nn
set SXl=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cXl=iXl
set oXl=SXl
set OXl=0
loop
call TriggerRegisterPlayerUnitEvent(cXl,Player(OXl),oXl,null)
set OXl=OXl+1
exitwhen OXl==bj_MAX_PLAYER_SLOTS
endloop
set lXl=nn
set bXl=u6
call TriggerAddAction(lXl,bXl)
set tXl=null
set iXl=null
set SXl=null
set cXl=null
set oXl=null
set lXl=null
return true
endfunction
function yZp takes nothing returns boolean
return true
endfunction
function yZu takes nothing returns boolean
local trigger oZu
local trigger OZu
local playerunitevent lZu
local integer bZu
set Da=CreateTrigger()
set oZu=Da
call DisableTrigger(oZu)
set OZu=Da
set lZu=EVENT_PLAYER_UNIT_DEATH
set bZu=0
loop
call TriggerRegisterPlayerUnitEvent(OZu,Player(bZu),lZu,null)
set bZu=bZu+1
exitwhen bZu==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Da,Y5)
set oZu=null
set OZu=null
set lZu=null
return true
endfunction
function yat takes nothing returns nothing
set qW=0
call K3e("via function reference PickRace, line 1553")
endfunction
function ybe takes nothing returns boolean
local unit Ble=GetFilterUnit()
local unit Nle=Ble
local unit Mle=GetSpellAbilityUnit()
local unit wbe
local player ube
local unit rbe
local unit sbe
local unit tbe
local unittype ibe
local unit Sbe
local unittype cbe
local boolean obe
local boolean Obe
local boolean lbe
local boolean bbe
if Nle!=null and Mle!=null then
set wbe=Nle
set rbe=Mle
set ube=GetOwningPlayer(rbe)
set obe=wbe!=null and IsUnitAlly(wbe,ube)
else
set obe=false
endif
if obe==true then
set sbe=Ble
set Obe=UnitAlive(sbe)==true
else
set Obe=false
endif
if Obe then
set tbe=Ble
set ibe=UNIT_TYPE_STRUCTURE
set lbe=IsUnitType(tbe,ibe)==false
else
set lbe=false
endif
if lbe then
set Sbe=Ble
set cbe=UNIT_TYPE_MECHANICAL
set bbe=IsUnitType(Sbe,cbe)==false
else
set bbe=false
endif
set Ble=null
set Nle=null
set Mle=null
set wbe=null
set ube=null
set rbe=null
set sbe=null
set tbe=null
set ibe=null
set Sbe=null
set cbe=null
return bbe
endfunction
function ycl takes nothing returns boolean
local unit wcl=GetFilterUnit()
local unit ucl=wcl
local unit rcl
local unittype scl
local unit tcl
local unit icl
local unit Scl
local player ccl
local unit ocl
local boolean Ocl
local boolean lcl
local boolean bcl
if UnitAlive(ucl)==true then
set rcl=wcl
set scl=UNIT_TYPE_HERO
set Ocl=IsUnitType(rcl,scl)==true
else
set Ocl=false
endif
if Ocl then
set tcl=wcl
set icl=GetKillingUnit()
if tcl!=null and icl!=null then
set Scl=tcl
set ocl=icl
set ccl=GetOwningPlayer(ocl)
set lcl=Scl!=null and IsUnitAlly(Scl,ccl)
else
set lcl=false
endif
set bcl=lcl
else
set bcl=false
endif
set wcl=null
set ucl=null
set rcl=null
set scl=null
set tcl=null
set icl=null
set Scl=null
set ccl=null
set ocl=null
return bcl
endfunction
function yhy takes nothing returns boolean
local trigger ihy
local playerunitevent Shy
local trigger chy
local playerunitevent ohy
local integer Ohy
local trigger lhy
local code bhy
set Tl=CreateTrigger()
set ihy=Tl
set Shy=EVENT_PLAYER_UNIT_ATTACKED
set chy=ihy
set ohy=Shy
set Ohy=0
loop
call TriggerRegisterPlayerUnitEvent(chy,Player(Ohy),ohy,null)
set Ohy=Ohy+1
exitwhen Ohy==bj_MAX_PLAYER_SLOTS
endloop
set lhy=Tl
set bhy=S3
call TriggerAddAction(lhy,bhy)
set ihy=null
set Shy=null
set chy=null
set ohy=null
set lhy=null
return true
endfunction
function yji takes nothing returns boolean
local unit Xki=GetFilterUnit()
local unit Cki=Xki
local player tji=GetOwningPlayer(Cki)
local unit Vki=MY
local unit Bki
local unit Nki
local unit Mki
local unit wji
local unit uji
local unit rji
local unit sji
local boolean iji
local boolean Sji
local boolean cji
local boolean oji
local boolean Oji
local boolean lji
local boolean bji
if tji==GetOwningPlayer(Vki) then
set Bki=Xki
if GetUnitTypeId(Bki)==$68303032 then
set iji=true
else
set Nki=Xki
set iji=GetUnitTypeId(Nki)==$6830304A
endif
if iji then
set Sji=true
else
set Mki=Xki
set Sji=GetUnitTypeId(Mki)==$6830304B
endif
if Sji then
set cji=true
else
set wji=Xki
set cji=GetUnitTypeId(wji)==$68303132
endif
if cji then
set oji=true
else
set uji=Xki
set oji=GetUnitTypeId(uji)==$6F303037
endif
if oji then
set Oji=true
else
set rji=Xki
set Oji=GetUnitTypeId(rji)==$6F303038
endif
if Oji then
set lji=true
else
set sji=Xki
set lji=GetUnitTypeId(sji)==$6F303039
endif
set bji=lji
else
set bji=false
endif
set Xki=null
set Cki=null
set Vki=null
set Bki=null
set Nki=null
set Mki=null
set wji=null
set uji=null
set rji=null
set sji=null
set tji=null
return bji
endfunction
function yku takes nothing returns nothing
local integer DFu=GetSpellAbilityId()
local unit HFu
local integer JFu
local real KFu
local real LFu
local unit XFu
local unit CFu
local integer VFu
local unit BFu
local unit NFu
local unit MFu
local unit wku
local real uku
local unit rku
local integer sku
local unit tku
local integer iku
local integer Sku
local unit cku
local integer oku
local unit Oku
local integer lku
local integer bku
if DFu==$41313056 then
set HFu=GetSpellAbilityUnit()
set CFu=HFu
set VFu=$41313056
set JFu=GetUnitAbilityLevel(CFu,VFu)
set BFu=HFu
set KFu=GetUnitX(BFu)
set NFu=HFu
set LFu=GetUnitY(NFu)
set MFu=HFu
set XFu=CreateUnit(GetOwningPlayer(MFu),$6F303335,KFu,LFu,0.)
call dYr(XFu)
set wku=XFu
set uku=I2R(25+5*JFu)
call UnitApplyTimedLife(wku,$42544C46,uku)
set rku=XFu
set sku=$41313057
call UnitAddAbility(rku,sku)
set tku=XFu
set iku=$41313057
set Sku=JFu
call SetUnitAbilityLevel(tku,iku,Sku)
set cku=XFu
set oku=$41313059
call UnitAddAbility(cku,oku)
set Oku=XFu
set lku=$41313059
set bku=JFu
call SetUnitAbilityLevel(Oku,lku,bku)
endif
set HFu=null
set XFu=null
set CFu=null
set BFu=null
set NFu=null
set MFu=null
set wku=null
set rku=null
set tku=null
set cku=null
set Oku=null
endfunction
function yky takes nothing returns nothing
local unit sky=GetEnteringUnit()
local unit iky=sky
local integer tky=GetUnitTypeId(iky)
local unit Sky
local integer cky
local unit oky
local integer Oky
local integer lky
local unit bky
if tky==$6E66726C or tky==$6E647472 then
set Sky=sky
set cky=$41303349
call UnitAddAbility(Sky,cky)
set oky=sky
set Oky=$41303349
set bky=sky
set lky=GetPlayerTechCount(GetOwningPlayer(bky),$52303041,true)
call SetUnitAbilityLevel(oky,Oky,lky)
endif
set sky=null
set iky=null
set Sky=null
set oky=null
set bky=null
endfunction
function yol takes nothing returns boolean
return true
endfunction
function yqc takes nothing returns boolean
local unit oqc=GetFilterUnit()
local unit Oqc=oqc
local unittype lqc=UNIT_TYPE_STRUCTURE
local boolean bqc=IsUnitType(Oqc,lqc) and GetUnitAbilityLevel(oqc,$4176756C)==0
set oqc=null
set Oqc=null
set lqc=null
return bqc
endfunction
function yvt takes nothing returns boolean
return true
endfunction
function ywO takes nothing returns nothing
local unit d_O=GetKillingUnit()
local unit g_O=d_O
local integer f_O=GetPlayerTechCount(GetOwningPlayer(g_O),$524D3175,true)
local real R_O
local real T_O
local texttag Y_O
local unit G_O
local unit h_O
local unittype F_O
local unit k_O
local unit j_O
local texttag x_O
local real v_O
local real m_O
local real Q_O
local texttag W_O
local integer E_O
local integer Z_O
local integer U_O
local integer I_O
local texttag P_O
local real A_O
local texttag D_O
local real H_O
local texttag J_O
local boolean K_O
local texttag L_O
local boolean X_O
local texttag C_O
local string V_O
local real B_O
local texttag N_O
local real M_O
local real wwO
local unit uwO
local unit rwO
local integer swO
local unit twO
local integer iwO
local integer SwO
local unit cwO
local string owO
local unit OwO
local real lwO
local boolean bwO
if f_O>0 then
set h_O=GetDyingUnit()
set F_O=UNIT_TYPE_HERO
set bwO=IsUnitType(h_O,F_O)
else
set bwO=false
endif
if bwO then
set k_O=d_O
set R_O=GetUnitX(k_O)
set j_O=d_O
set T_O=GetUnitY(j_O)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl",R_O,T_O))
set Y_O=CreateTextTag()
set x_O=Y_O
set v_O=R_O
set m_O=T_O
set Q_O=50.
call SetTextTagPos(x_O,v_O,m_O,Q_O)
set W_O=Y_O
set E_O=255
set Z_O=0
set U_O=0
set I_O=255
call SetTextTagColor(W_O,E_O,Z_O,U_O,I_O)
set P_O=Y_O
set A_O=6.
call SetTextTagLifespan(P_O,A_O)
set D_O=Y_O
set H_O=4.
call SetTextTagFadepoint(D_O,H_O)
set J_O=Y_O
set K_O=true
call SetTextTagVisibility(J_O,K_O)
set L_O=Y_O
set X_O=false
call SetTextTagPermanent(L_O,X_O)
set C_O=Y_O
set V_O="Battle Rage"
set B_O=10.
call SetTextTagText(C_O,V_O,B_O*.0023)
set N_O=Y_O
set M_O=0.
set wwO=.03
call SetTextTagVelocity(N_O,M_O,wwO)
set uwO=d_O
set G_O=CreateUnit(GetOwningPlayer(uwO),$75303030,R_O,T_O,0.)
set rwO=G_O
set swO=$414D6367
call UnitAddAbility(rwO,swO)
set twO=G_O
set iwO=$414D6367
set SwO=f_O
call SetUnitAbilityLevel(twO,iwO,SwO)
set cwO=G_O
set owO="roar"
call IssueImmediateOrder(cwO,owO)
set OwO=G_O
set lwO=3.
call UnitApplyTimedLife(OwO,$42544C46,lwO)
endif
set d_O=null
set Y_O=null
set G_O=null
set g_O=null
set h_O=null
set F_O=null
set k_O=null
set j_O=null
set x_O=null
set W_O=null
set P_O=null
set D_O=null
set J_O=null
set L_O=null
set C_O=null
set N_O=null
set uwO=null
set rwO=null
set twO=null
set cwO=null
set OwO=null
endfunction
function ywS takes nothing returns boolean
return true
endfunction
function yxb takes nothing returns nothing
local unit yjb=GetTriggerUnit()
local unit ejb=yjb
local player pjb=GetOwningPlayer(ejb)
local unit qjb
local string ajb
local real njb
local real djb
local unit fjb
local unittype Rjb
local unit Tjb
local string Yjb
local real Gjb
local real gjb
local unit hjb
local unittype Fjb
local unit kjb
local string jjb
local real xjb
local real vjb
local unit mjb
local unittype Qjb
local unit Wjb
local string Ejb
local real Zjb
local real Ujb
local unit Ijb
local unittype Pjb
local unit Ajb
local string Djb
local real Hjb
local real Jjb
local unit Kjb
local unittype Ljb
local unit Xjb
local string Cjb
local real Vjb
local real Bjb
local unit Njb
local unittype Mjb
local real wxb
local real uxb
local real rxb
local real sxb
local real txb
local real ixb
local real Sxb
local real cxb
local real oxb
local real Oxb
local real lxb
local real bxb
if pjb==du then
set qjb=yjb
set ajb="attack"
set wxb=Qw[39]
set uxb=Ww[39]
set njb=wxb
set djb=uxb
call IssuePointOrder(qjb,ajb,njb,djb)
set fjb=yjb
set Rjb=UNIT_TYPE_HERO
if IsUnitType(fjb,Rjb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,39)
endif
endif
if pjb==nu then
if Ew[3]==true then
set Tjb=yjb
set Yjb="attack"
set rxb=Qw[15]
set sxb=Ww[15]
set Gjb=rxb
set gjb=sxb
call IssuePointOrder(Tjb,Yjb,Gjb,gjb)
set hjb=yjb
set Fjb=UNIT_TYPE_HERO
if IsUnitType(hjb,Fjb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,15)
endif
else
set kjb=yjb
set jjb="attack"
set txb=Qw[39]
set ixb=Ww[39]
set xjb=txb
set vjb=ixb
call IssuePointOrder(kjb,jjb,xjb,vjb)
set mjb=yjb
set Qjb=UNIT_TYPE_HERO
if IsUnitType(mjb,Qjb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,39)
endif
endif
endif
if pjb==fu then
if Ew[0]==true then
set Wjb=yjb
set Ejb="attack"
set Sxb=Qw[39]
set cxb=Ww[39]
set Zjb=Sxb
set Ujb=cxb
call IssuePointOrder(Wjb,Ejb,Zjb,Ujb)
set Ijb=yjb
set Pjb=UNIT_TYPE_HERO
if IsUnitType(Ijb,Pjb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,39)
endif
else
set Ajb=yjb
set Djb="attack"
set oxb=Qw[15]
set Oxb=Ww[15]
set Hjb=oxb
set Jjb=Oxb
call IssuePointOrder(Ajb,Djb,Hjb,Jjb)
set Kjb=yjb
set Ljb=UNIT_TYPE_HERO
if IsUnitType(Kjb,Ljb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,15)
endif
endif
endif
if pjb==Ru then
set Xjb=yjb
set Cjb="attack"
set lxb=Qw[15]
set bxb=Ww[15]
set Vjb=lxb
set Bjb=bxb
call IssuePointOrder(Xjb,Cjb,Vjb,Bjb)
set Njb=yjb
set Mjb=UNIT_TYPE_HERO
if IsUnitType(Njb,Mjb) then
call SaveInteger(qu,GetHandleId(yjb),$6D6F7665,15)
endif
endif
set yjb=null
set pjb=null
set ejb=null
set qjb=null
set fjb=null
set Rjb=null
set Tjb=null
set hjb=null
set Fjb=null
set kjb=null
set mjb=null
set Qjb=null
set Wjb=null
set Ijb=null
set Pjb=null
set Ajb=null
set Kjb=null
set Ljb=null
set Xjb=null
set Njb=null
set Mjb=null
endfunction
function yxs takes nothing returns nothing
local unit wxs=GetEnteringUnit()
local unit sxs=wxs
local integer uxs=GetUnitTypeId(sxs)
local unit txs=wxs
local integer rxs=GetPlayerTechCount(GetOwningPlayer(txs),$52303359,true)
local unit ixs
local integer Sxs
local unit cxs
local integer oxs
local integer Oxs
local unit lxs
local integer bxs
if uxs==$6E666F64 then
if rxs>=2 then
set ixs=wxs
set Sxs=$41414138
call UnitAddAbility(ixs,Sxs)
set cxs=wxs
set oxs=$41414138
set Oxs=rxs-1
call SetUnitAbilityLevel(cxs,oxs,Oxs)
endif
if rxs==4 then
set lxs=wxs
set bxs=$41304A53
call UnitAddAbility(lxs,bxs)
endif
endif
set wxs=null
set sxs=null
set txs=null
set ixs=null
set cxs=null
set lxs=null
endfunction
function JeS takes nothing returns nothing
set qu=InitHashtable()
set au=null
set nu=Player(5)
set du=Player(4)
set fu=Player(6)
set Ru=Player(7)
set Tu=Player(1)
set Yu=Player(0)
set Gu=Player(2)
set gu=Player(3)
call CreateGroup()
call CreateTrigger()
set sr=DialogCreate()
set tr=null
set ir=CreateTimer()
set Sr=CreateTimer()
set cr=60
set yr=null
set qr=null
set ar=null
set nr=null
set dr=CreateTrigger()
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=CreateTrigger()
set Ws=CreateTrigger()
call CreateTrigger()
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set cS=null
set oS=null
set OS=null
set lS=null
set bS=null
set yS=null
set pS=null
set eS=null
set qS=null
set aS=null
set nS=null
set dS=null
set fS=null
set RS=null
set TS=null
set YS=null
set GS=null
set gS=null
set hS=null
set FS=null
set kS=null
set jS=null
set xS=null
set vS=null
set mS=null
set QS=null
set WS=null
set ES=null
set ZS=null
set US=null
set IS=null
set PS=null
set AS=null
set DS=null
set HS=null
set JS=null
set KS=null
set LS=null
set XS=null
set CS=null
set VS=null
set BS=null
set NS=null
set MS=null
set wc=null
set uc=null
set rc=null
set sc=null
set tc=null
set ic=null
set Sc=null
set cc=null
set oc=null
set Oc=null
set lc=null
set bc=null
set yc=null
set pc=null
set ec=null
set qc=null
set ac=null
set nc=null
set dc=null
set fc=null
set Rc=null
set Tc=null
set Yc=null
set Gc=null
set gc=null
set hc=null
set Fc=null
set kc=null
set jc=null
set xc=null
set vc=null
set mc=null
set Qc=null
set Wc=null
set Ec=null
set Zc=null
set Uc=null
set Ic=null
set Pc=null
set Ac=null
set Dc=null
set Hc=null
set Jc=null
set Kc=null
set Lc=null
set Xc=null
set Cc=null
set Vc=null
set Bc=null
set Nc=null
set Mc=null
set wo=null
set uo=null
set ro=null
set so=null
set io=null
set So=null
set co=null
set oo=null
set Oo=null
set lo=null
set bo=null
set yo=null
set po=null
set eo=null
set qo=null
set ao=null
set no=null
set do=null
set fo=null
set Ro=null
set To=null
set Yo=null
set Go=null
set go=null
set ho=null
set Fo=null
set ko=null
set jo=null
set xo=null
set vo=null
set mo=null
set Qo=null
set Wo=null
set Eo=null
set Zo=null
set Uo=null
set Io=null
set Po=null
set Ao=null
set Do=null
set Ho=null
set Jo=null
set Ko=null
set Lo=null
set BW=function Fnt
set NW=function BAw
set MW=function Mno
set wE=function rLi
set uE=function ANS
set rE=function bOe
set sE=function rxi
set tE=function xlr
set iE=function Kyu
set SE=function EVr
set cE=function LeS
set oE=function Pae
set OE=function v9u
set lE=function f7t
set bE=function t2b
set yE=function Qlu
set pE=function Prb
set eE=function Znl
set qE=function D_r
set aE=function DwS
set nE=function jnt
set dE=function nWp
set fE=function Mde
set RE=function JmO
set TE=function kjS
set YE=function mnt
set GE=function nni
set gE=function UBt
set hE=function o4p
set FE=function a_t
set kE=function kIy
set jE=function Xfl
set xE=function xRr
set vE=function Bol
set mE=function O4p
set QE=function Z8w
set WE=function Wql
set EE=function mHw
set ZE=function waw
set UE=function xjp
set IE=function WHu
set PE=function Axt
set AE=function r8b
set DE=function rOc
set HE=function xNr
set JE=function vOu
set KE=function Xvi
set LE=function XoS
set XE=function Hht
set CE=function mol
set VE=function une
set BE=function Qwl
set NE=function RWw
set ME=function kbe
set wZ=function IBt
set uZ=function a7s
set rZ=function gGl
set sZ=function ZLr
set tZ=function L3e
set iZ=function o5p
set SZ=function mRr
set cZ=function x9l
set oZ=function V0l
set OZ=function HWy
set lZ=function lPy
set bZ=function hIy
set yZ=function ift
set pZ=function f5u
set eZ=function bmu
set qZ=function vNu
set aZ=function gnS
set nZ=function lFt
set dZ=function TMb
set fZ=function YMb
set RZ=function wKl
set TZ=function AQt
set YZ=function Seu
set GZ=function pFu
set gZ=function R0e
set hZ=function ZJc
set FZ=function H3b
set kZ=function j9l
set jZ=function Skt
set xZ=function Yrl
set vZ=function cZu
set mZ=function JDu
set QZ=function XOt
set WZ=function Fbe
set EZ=function jsO
set ZZ=function Cni
set UZ=function Ngc
set IZ=function vnl
set PZ=function wSO
set AZ=function EwS
set DZ=function DjO
set HZ=function HEb
set JZ=function bde
set KZ=function QBe
set LZ=function bat
set XZ=function JTS
set CZ=function YFt
set VZ=function kRr
set BZ=function gRw
set NZ=function qpc
set MZ=function d2S
set wU=function mau
set uU=function QpS
set rU=function ZbS
set sU=function T7b
set tU=function iRe
set iU=function Wkl
set SU=function WNu
set cU=function qGw
set oU=function aWp
set OU=function DTS
set lU=function BRw
set bU=function B0l
set yU=function ywS
set pU=function EIw
set eU=function n8b
set qU=function kRt
set aU=function vEp
set nU=function fry
set dU=function D6i
set fU=function EMr
set RU=function Hnr
set TU=function Ihl
set YU=function pvt
set GU=function ZBt
set gU=function nGi
set hU=function XOw
set FU=function WFt
set kU=function PRr
set jU=function YRl
set xU=function DDy
set vU=function Qas
set mU=function b7s
set QU=function rSS
set WU=function tBt
set EU=function OQi
set ZU=function Yhw
set UU=function ltO
set IU=function inu
set PU=function G6i
set AU=function Lxi
set DU=function UIy
set HU=function HDy
set JU=function Pru
set KU=function QOc
set LU=function Cbu
set XU=function HeS
set CU=function Pyc
set VU=function r1u
set BU=function lqu
set NU=function yZp
set MU=function dFu
set wI=function U6l
set uI=function bol
set rI=function vCt
set sI=function NFp
set tI=function EjS
set iI=function k7l
set SI=function a1b
set cI=function DNu
set oI=function f8l
set OI=function u7s
set lI=function bJu
set bI=function S8S
set yI=function Y2s
set pI=function QBt
set eI=function WDp
set qI=function jRe
set aI=function Wau
set nI=function Ktt
set dI=function VUp
set fI=function JSl
set RI=function nvO
set TI=function hLO
set YI=function evt
set GI=function Zrb
set gI=function OrO
set hI=function oTS
set FI=function bkw
set kI=function SVe
set jI=function Nst
set xI=function uVc
set vI=function W8s
set mI=function tKc
set QI=function ZZl
set WI=function j7i
set EI=function k5i
set ZI=function Pao
set UI=function qrb
set II=function LBt
set PI=function hwl
set AI=function XrS
set DI=function vRr
set HI=function MKr
set JI=function sFl
set KI=function TYe
set LI=function Kac
set XI=function qcS
set CI=function mxS
set VI=function Euu
set BI=function fxl
set NI=function lrO
set MI=function HOt
set wP=function Lai
set uP=function aKO
set rP=function Vuy
set sP=function Zuu
set tP=function Umi
set iP=function hVb
set SP=function yMu
set cP=function H9r
set oP=function HvO
set OP=function Bar
set lP=function HMw
set bP=function R1e
set yP=function cQp
set pP=function dOe
set eP=function k_u
set qP=function Mfr
set aP=function eQi
set nP=function BCu
set dP=function N_S
set fP=function nMy
set RP=function D9l
set TP=function EbS
set YP=function dNO
set GP=function tft
set gP=function pfe
set hP=function u9s
set FP=function NVS
set kP=function C6S
set jP=function Ugy
set xP=function pPp
set vP=function erb
set mP=function Kni
set QP=function bPs
set WP=function yWo
set EP=function rbl
set ZP=function WQt
set UP=function WMe
set IP=function xNu
set PP=function uFc
set AP=function IVp
set DP=function m4p
set HP=function yCt
set JP=function l2c
set KP=function rwt
set LP=function DDp
set XP=function FbS
set CP=function xJp
set VP=function iwu
set BP=function fAt
set NP=function TFt
set MP=function ecS
set wA=function EHu
set uA=function u8b
set rA=function Mne
set sA=function N4i
set tA=function lOe
set iA=function iBp
set SA=function BoS
set cA=function JBt
set oA=function LVp
set OA=function a8b
set lA=function lvt
set bA=function yPp
set yA=function aGy
set pA=function oAu
set eA=function JUi
set qA=function NOw
set aA=function R7b
set nA=function UOt
set dA=function BGc
set fA=function n2S
set RA=function Kru
set TA=function qxl
set YA=function vxS
set GA=function Ewu
set gA=function lBp
set hA=function cwt
set FA=function lft
set kA=function AIp
set jA=function oGp
set xA=function cMS
set vA=function m9u
set mA=function HOS
set QA=function qni
set WA=function pUl
set EA=function F2S
set ZA=function Hgy
set UA=function Lvi
set IA=function x6w
set PA=function NMe
set AA=function exu
set DA=function VoS
set HA=function PxO
set JA=function ONe
set KA=function vXt
set LA=function vjp
set XA=function SQu
set CA=function YIl
set VA=function NRw
set BA=function mbO
set NA=function v1b
set MA=function QSw
set wD=function chl
set uD=function FWi
set rD=function Dnt
set sD=function WTw
set tD=function u4o
set iD=function B5s
set SD=function E6w
set cD=function f6u
set oD=function hjS
set OD=function rBe
set lD=function RCu
set bD=function riu
set yD=function wVc
set pD=function I7i
set eD=function yEy
set qD=function LNr
set aD=function B5p
set nD=function axt
set dD=function Abc
set fD=function OHl
set RD=function d1b
set TD=function j7c
set YD=function SuS
set GD=function cLO
set gD=function Yiw
set hD=function xVu
set FD=function BIp
set kD=function JCO
set jD=function VFt
set xD=function qWp
set vD=function i6S
set mD=function aqt
set QD=function tsb
set WD=function VAw
set ED=function BrS
set ZD=function WlS
set UD=function Soi
set ID=function Zyc
set PD=function YVc
set AD=function SIp
set DD=function g5S
set HD=function equ
set JD=function Ixt
set KD=function v0s
set LD=function Lot
set XD=function rPl
set CD=function TbS
set VD=function lFw
set BD=function oIp
set ND=function N7S
set MD=function Qau
set wH=function ucS
set uH=function ijy
set rH=function ppc
set sH=function cpi
set tH=function HYu
set iH=function Jcw
set SH=function Wle
set cH=function pvw
set oH=function yBO
set OH=function uQy
set lH=function b4c
set bH=function yZu
set yH=function qpw
set pH=function u2c
set eH=function EQt
set qH=function eVp
set aH=function hvs
set nH=function N9u
set dH=function Wrl
set fH=function fDu
set RH=function N6S
set TH=function d8S
set YH=function Nur
set GH=function QwO
set gH=function jRt
set hH=function Eee
set FH=function WIy
set kH=function u1u
set jH=function kYr
set xH=function k2y
set vH=function a3b
set mH=function VXc
set QH=function sYS
set WH=function Cal
set EH=function MZO
set ZH=function dMp
set UH=function EnS
set IH=function pVb
set PH=function uPS
set AH=function vbO
set DH=function ivt
set HH=function Iyu
set JH=function kYS
set KH=function agy
set LH=function yXl
set XH=function h_u
set CH=function GAl
set VH=function PnS
set BH=function toi
set NH=function caw
set MH=function k1b
set wJ=function D4r
set uJ=function emu
set rJ=function KmO
set sJ=function Wuu
set tJ=function uow
set iJ=function Gxb
set SJ=function jLu
set cJ=function cIp
set oJ=function QFt
set OJ=function QTw
set lJ=function Q5S
set bJ=function OKl
set yJ=function hku
set pJ=function dJc
set eJ=function vZu
set qJ=function YPs
set aJ=function qXc
set nJ=function pwS
set dJ=function AWy
set fJ=function dIi
set RJ=function wAp
set TJ=function aMe
set YJ=function LCO
set GJ=function J3b
set gJ=function L3i
set hJ=function kkp
set FJ=function QRw
set kJ=function GWi
set jJ=function lFc
set xJ=function cot
set vJ=function F9r
set mJ=function o0S
set QJ=function w7s
set WJ=function mVp
set EJ=function R5u
set ZJ=function uwt
set UJ=function QFc
set IJ=function P8r
set PJ=function HUi
set AJ=function uBe
set DJ=function DxS
set HJ=function yhy
set JJ=function JuS
set KJ=function I0u
set LJ=function a5i
set XJ=function xxS
set CJ=function E1l
set VJ=function cgy
set BJ=function Q6S
set NJ=function hpS
set MJ=function Jtt
set wK=function Cao
set uK=function p_c
set rK=function slt
set sK=function wMr
set tK=function b8b
set iK=function Jrt
set SK=function agu
set cK=function pQu
set oK=function X3S
set OK=function cCu
set lK=function I2e
set bK=function Zhc
set yK=function o5s
set pK=function Ngl
set eK=function Lol
set qK=function pGl
set aK=function TFc
set nK=function q8S
set dK=function d0e
set fK=function vYu
set RK=function D0l
set TK=function cCt
set YK=function Wee
set GK=function Wao
set gK=function Ngu
set hK=function jDu
set FK=function P1b
set kK=function ieS
set jK=function F3w
set xK=function qZy
set vK=function EZp
set mK=function LIl
set QK=function dkp
set WK=function Zht
set EK=function xeS
set ZK=function xwl
set UK=function EYS
set IK=function JSw
set PK=function HUb
set AK=function AjO
set DK=function IuS
set HK=function K_t
set JK=function yFl
set KK=function pxu
set LK=function T7s
set XK=function Uvt
set CK=function tLc
set VK=function DAo
set BK=function fDw
set NK=function Znu
set MK=function LZt
set wL=function cgu
set uL=function W_l
set rL=function jAl
set sL=function BMl
set tL=function ROt
set iL=function dKl
set SL=function LrS
set cL=function tTl
set oL=function iTw
set OL=function YGr
set lL=function iRl
set bL=function Lvw
set yL=function LOt
set pL=function j4r
set eL=function W5S
set qL=function xVe
set aL=function jyu
set nL=function MlS
set dL=function QNO
set fL=function AUs
set RL=function axl
set TL=function n1b
set YL=function hPy
set GL=function xVb
set gL=function VCO
set hL=function U8w
set FL=function iPl
set kL=function U0s
set jL=function MVu
set xL=function edl
set vL=function CMy
set mL=function CFt
set QL=function o6r
set WL=function qgc
set EL=function aGl
set ZL=function XUl
set UL=function YXt
set IL=function BUo
set PL=function Etb
set AL=function WCe
set DL=function AZl
set HL=function o5b
set JL=function mXt
set KL=function Egp
set LL=function V7b
set XL=function x7l
set CL=function y4c
set VL=function LDu
set BL=function sne
set NL=function NKr
set ML=function yvt
set wX=function Zku
set uX=function gHb
set rX=function H6i
set sX=function h4r
set tX=function Z9r
set iX=function Ekl
set SX=function EtS
set cX=function aPl
set oX=function hxS
set OX=function yol
set lX=function U9r
set bX=function wHl
set yX=function gxi
set pX=function GGl
set eX=function MSl
set qX=function rne
set aX=function GCl
set nX=function EWb
set dX=function bvt
set fX=function Wlu
set RX=function doi
set TX=function NCu
set YX=function iTl
set GX=function FVb
set gX=function TMp
set hX=function wgl
set FX=function EWi
set kX=function Eol
set jX=function BIl
set xX=function Eau
set vX=function epu
set mX=function f1e
set QX=function Qpe
set WX=function ohu
set EX=function tQy
set ZX=function ZKl
set UX=function F2y
set IX=function LLr
set PX=function VOc
set AX=function hSS
set DX=function gwt
set HX=function u9S
set JX=function Ohu
set KX=function snw
set LX=function KOw
set XX=function RMy
set CX=function MRt
set VX=function ucw
set BX=function AqS
set NX=function K7S
set MX=function dgc
set wC=function Rni
set uC=function o9b
set rC=function gxS
set sC=function j2e
set tC=function ont
set iC=function ElS
set SC=function a6u
set cC=function c5b
set oC=function eOi
set OC=function sMe
set lC=function cqc
set bC=function C7b
set yC=function noi
set pC=function gxb
set eC=function dxy
set qC=function TQu
set aC=function Aqc
set nC=function pZu
set dC=function thp
set fC=function lvi
set RC=function pqu
set TC=function O2c
set YC=function LCb
set GC=function WSw
set gC=function ipw
set hC=function x0s
set FC=function pbO
set kC=function vle
set jC=function rkp
set xC=function U7w
set vC=function IGS
set mC=function f7S
set QC=function fUO
set WC=function GOc
set EC=function u5e
set ZC=function BMe
set UC=function xAl
set IC=function Pht
set PC=function bBy
set AC=function oVw
set DC=function kxi
set HC=function C5u
set JC=function K0S
set KC=function ZHu
set LC=function U_l
set XC=function VeS
set CC=function sac
set VC=function mle
set BC=function tHy
set NC=function HOc
set MC=function mHy
set wV=function l4c
set uV=function eni
set rV=function jSS
set sV=function TJp
set tV=function bZp
set iV=function i9c
set SV=function a8S
set cV=function jxS
set oV=function o7u
set OV=function sHy
set lV=function Klw
set bV=function X4u
set yV=function XOe
set pV=function YUw
set eV=function bWo
set qV=function dAt
set aV=function CIw
set nV=function YAl
set dV=function ADp
set fV=function rsO
set RV=function MYp
set TV=function PZl
set YV=function Iol
set GV=function Y6r
set gV=function x1y
set hV=function m1b
set FV=function x7w
set kV=function Jvi
set jV=function g9l
set xV=function fLu
set vV=function Gir
set mV=function INr
set QV=function BOe
set WV=function ZMi
set EV=function J7S
set ZV=function IIu
set UV=function cMe
set IV=function T_t
set PV=function dpc
set AV=function DYu
set DV=function sPb
set HV=function hGl
set JV=function h2S
set KV=function M2e
set LV=function A5S
set XV=function aQp
set CV=function P_r
set VV=function j7l
set BV=function kOt
set NV=function xtu
set MV=function dFt
set wB=function ahp
set uB=function EYc
set rB=function XvO
set sB=function m8w
set tB=function ntt
set iB=function sKc
set SB=function lAS
set cB=function fHt
set oB=function jwl
set OB=function IQt
set lB=function MNe
set bB=function LOw
set yB=function OuS
set pB=function O7t
set eB=function xle
set qB=function cju
set aB=function IIw
set nB=function jky
set dB=function Oxy
set fB=function ZYr
set RB=function epc
set TB=function Dbc
set YB=function uwS
set GB=function inr
set gB=function ZBy
set hB=function OUw
set FB=function C4e
set kB=function gJp
set jB=function HTS
set xB=function iOe
set vB=function nWo
set mB=function DZl
set QB=function lkp
set WB=function eZu
set EB=function hFi
set ZB=function lkO
set UB=function bFu
set IB=function x0O
set PB=function eVe
set AB=function L9e
set DB=function Jow
set HB=function HRr
set JB=function wcS
set KB=function iHu
set LB=function ukp
set XB=function rRo
set CB=function lLu
set VB=function mlS
set BB=function aWl
set NB=function g8l
set MB=function usO
set wN=function dpS
set uN=function Qlr
set rN=function Dyu
set sN=function ZTr
set tN=function YDl
set iN=function npu
set SN=function epw
set cN=function hDy
set oN=function cHl
set ON=function Zji
set lN=function bqe
set bN=function Gmt
set yN=function P0u
set pN=function VGc
set eN=function dkt
set qN=function UDp
set aN=function Gku
set nN=function ItO
set dN=function tCs
set fN=function nHw
set RN=function vBl
set TN=function lfo
set YN=function f7b
set GN=function qyl
set gN=function LPp
set hN=function sPy
set FN=function hZl
set kN=function RWu
set jN=function g2S
set xN=function q7s
set vN=function RPi
set mN=function tne
set QN=function Qvi
set WN=function Z7w
set EN=function Evi
set ZN=function CoS
set UN=function rwi
set IN=function fpc
set PN=function FWb
set AN=function Ont
set DN=function O1b
set HN=function sBe
set JN=function pxs
set KN=function qVe
set LN=function ZZp
set XN=function HmO
set CN=function sxi
set VN=function Qle
set BN=function coi
set NN=function IWi
set MN=function GIl
set wM=function Ibt
set uM=function Xne
set rM=function Hyu
set sM=function i4p
set tM=function mBl
set iM=function t4p
set SM=function UHu
set cM=function eWy
set oM=function Gwt
set OM=function Rhu
set lM=function Z7b
set bM=function PlO
set yM=function UCt
set pM=function dXu
set eM=function M6S
set qM=function Bde
set aM=function gUp
set nM=function ICu
set dM=function sSb
set fM=function JOw
set RM=function Jqi
set TM=function GGy
set YM=function xZi
set GM=function RMb
set gM=function Kxi
set hM=function Eyc
set FM=function EOl
set kM=function J5i
set jM=function vCu
set xM=function cUs
set vM=function Yxy
set mM=function Bct
set QM=function Xpi
set WM=function Kqp
set EM=function nVc
set ZM=function Bgc
set UM=function ATS
set IM=function NYl
set PM=function ZCO
set AM=function qRo
set DM=function qdl
set HM=function UWi
set JM=function fCu
set KM=function GNr
set LM=function L1e
set XM=function LFc
set CM=function mbS
set VM=function D8l
set BM=function v5s
set NM=function U7s
set MM=function oec
set w3=function hrl
set u3=function RMp
set r3=function ywO
set s3=function IEw
set t3=function hJo
set i3=function Byu
set S3=function RDw
set c3=function b6S
set o3=function vjw
set O3=function nvS
set l3=function HMy
set b3=function X_r
set y3=function Dgi
set p3=function f0e
set e3=function IxO
set q3=function dsb
set a3=function PFc
set n3=function OPy
set d3=function kwu
set f3=function mPi
set R3=function O2t
set T3=function FJy
set Y3=function DeS
set G3=function Ykc
set g3=function PYy
set h3=function wFw
set F3=function MUl
set k3=function Gxs
set j3=function yOw
set x3=function wne
set v3=function C2e
set m3=function rQp
set Q3=function hvO
set W3=function JtO
set E3=function Zqe
set Z3=function J9S
set U3=function ZCl
set I3=function IQO
set P3=function rPs
set A3=function Aao
set D3=function qUO
set H3=function NXr
set J3=function Oat
set K3=function dBc
set L3=function HNr
set X3=function oEi
set C3=function ZVr
set V3=function CXc
set B3=function qpS
set N3=function Bno
set M3=function wPt
set w1=function gmw
set u1=function A0r
set r1=function O3w
set s1=function N5s
set t1=function ptu
set i1=function w9c
set S1=function Dnr
set c1=function lat
set o1=function aUO
set O1=function xnl
set l1=function mvt
set b1=function wqc
set y1=function yJt
set p1=function KMc
set e1=function PLl
set q1=function CHw
set a1=function Idt
set n1=function bOt
set d1=function d_t
set f1=function Nfr
set R1=function cAt
set T1=function Mur
set Y1=function Vmy
set G1=function dxs
set g1=function b4e
set h1=function hbe
set F1=function CFc
set k1=function QNu
set j1=function oxu
set x1=function e7S
set v1=function DZo
set m1=function hvt
set Q1=function WWi
set W1=function phc
set E1=function xnt
set Z1=function SHy
set U1=function O3e
set I1=function y0r
set P1=function Yky
set A1=function Vwr
set D1=function TPi
set H1=function Wrt
set J1=function bEy
set K1=function xBp
set L1=function vGy
set X1=function a9u
set C1=function InS
set V1=function MGw
set B1=function qfo
set N1=function wZp
set M1=function ZDy
set w4=function Xfe
set u4=function Vgp
set r4=function tvw
set s4=function Dlw
set t4=function Ypi
set i4=function xBt
set S4=function d2y
set c4=function SDu
set o4=function kWi
set O4=function F8e
set l4=function tMe
set b4=function oMS
set y4=function Rau
set p4=function xll
set e4=function I1o
set q4=function tFi
set a4=function nhi
set n4=function DvO
set d4=function y6c
set f4=function lJu
set R4=function vau
set T4=function Umu
set Y4=function Mae
set G4=function bJt
set g4=function Aot
set h4=function W9s
set F4=function UWy
set k4=function YBt
set j4=function qZO
set x4=function P7s
set v4=function D0u
set m4=function dxl
set Q4=function aMy
set W4=function BIO
set E4=function bry
set Z4=function rVc
set U4=function ajS
set I4=function aZb
set P4=function O_t
set A4=function MiO
set D4=function WFc
set H4=function VpS
set J4=function TDw
set K4=function Axp
set L4=function D1S
set X4=function HLu
set C4=function xEp
set V4=function R8w
set B4=function VUo
set N4=function P1p
set M4=function TCc
set w2=function bni
set u2=function Egy
set r2=function Thu
set s2=function mhp
set t2=function NQi
set i2=function mco
set S2=function m3u
set c2=function dLr
set o2=function GnS
set O2=function ptS
set l2=function E4i
set b2=function jRl
set y2=function A7b
set p2=function QTy
set e2=function Eas
set q2=function ZZt
set a2=function Qnc
set n2=function L8l
set d2=function nRl
set f2=function nrl
set R2=function IHu
set T2=function cOl
set Y2=function SOl
set G2=function rde
set g2=function b9e
set h2=function eRr
set F2=function ndS
set k2=function SGr
set j2=function ELr
set x2=function SPp
set v2=function N1o
set m2=function eBp
set Q2=function wUt
set W2=function bGy
set E2=function bBO
set Z2=function LoS
set U2=function dGi
set I2=function kVt
set P2=function hRw
set A2=function fAl
set D2=function tJl
set H2=function pLc
set J2=function m4r
set K2=function GHb
set L2=function kkl
set X2=function S5b
set C2=function orO
set V2=function Zwu
set B2=function KCO
set N2=function fat
set M2=function X5u
set w5=function tWp
set u5=function YmO
set r5=function cKc
set s5=function nas
set t5=function W2s
set i5=function lNb
set S5=function VRt
set c5=function Sit
set o5=function k2e
set O5=function O7b
set l5=function jjO
set b5=function oBr
set y5=function S4p
set p5=function wZb
set e5=function AIl
set q5=function DDu
set a5=function AYu
set n5=function c6u
set d5=function mpc
set f5=function tnr
set R5=function XFc
set T5=function Rbi
set Y5=function JvO
set G5=function L7s
set g5=function Uhc
set h5=function IDl
set F5=function vml
set k5=function NlS
set j5=function S6u
set x5=function GFt
set v5=function Fcc
set m5=function dHp
set Q5=function OEu
set W5=function EIp
set E5=function cBy
set Z5=function YLO
set U5=function aMi
set I5=function iKc
set P5=function hGt
set A5=function Kiw
set D5=function tRl
set H5=function CSi
set J5=function AeS
set K5=function w9S
set L5=function adS
set X5=function rHu
set C5=function MGl
set V5=function yMS
set B5=function A1l
set N5=function NGy
set M5=function QNS
set w6=function PUs
set u6=function NFi
set r6=function dry
set s6=function i1u
set t6=function jGS
set i6=function DmO
set S6=function Tmi
set c6=function jbp
set o6=function YGl
set O6=function Oll
set l6=function INS
set b6=function FYr
set y6=function HQl
set p6=function Gxi
set e6=function PHl
set q6=function EBu
set a6=function y5b
set n6=function JOc
set d6=function Elr
set f6=function tVb
set R6=function EMi
set T6=function DWy
set Y6=function ihp
set G6=function i6r
set g6=function BjS
set h6=function Idl
set F6=function EBy
set k6=function v0r
set j6=function MGr
set x6=function L4i
set v6=function wMe
set m6=function yku
set Q6=function RbS
set W6=function mpS
set E6=function l7t
set Z6=function Uqe
set U6=function Okp
set I6=function tUt
set P6=function alt
set A6=function cqu
set D6=function d9e
set H6=function eIy
set J6=function Gas
set K6=function i5w
set L6=function lpy
set X6=function eri
set C6=function ybe
set V6=function RXr
set B6=function fLi
set N6=function yJu
set M6=function bTt
set w7=function O5p
set u7=function XHt
set r7=function MUs
set s7=function YPi
set t7=function hmu
set i7=function WQO
set S7=function X9r
set c7=function lIo
set o7=function QlS
set O7=function yky
set l7=function kas
set b7=function bkp
set y7=function Vtw
set p7=function w5e
set e7=function bjb
set q7=function VYp
set a7=function vQi
set n7=function TWs
set d7=function VNc
set f7=function FlO
set R7=function F2e
set T7=function kMu
set Y7=function myc
set G7=function MDo
set g7=function Fpe
set h7=function u_r
set F7=function DIy
set k7=function d7l
set j7=function ubl
set x7=function U3S
set v7=function Lfl
set m7=function AYc
set Q7=function dSi
set W7=function KbO
set E7=function jqu
set Z7=function MEi
set U7=function g_u
set I7=function Dqr
set P7=function k3y
set A7=function H9e
set D7=function GTw
set H7=function wFl
set J7=function RWb
set K7=function mmi
set L7=function GHl
set X7=function gVb
set C7=function wIw
set V7=function pmi
set B7=function MDl
set N7=function KCb
set M7=function F_u
set w8=function Dgu
set u8=function Vmb
set r8=function SMu
set s8=function WpS
set t8=function HIy
set i8=function MEw
set S8=function TXt
set c8=function V2e
set o8=function RHt
set O8=function Ovi
set l8=function FKr
set b8=function xPS
set y8=function row
set p8=function WKc
set e8=function L_r
set q8=function bXu
set a8=function aPy
set n8=function cpu
set d8=function oBS
set f8=function VIu
set R8=function Hji
set T8=function Olc
set Y8=function GVb
set G8=function tRe
set g8=function L1b
set h8=function NUs
set F8=function VCu
set k8=function Y6c
set j8=function eBS
set x8=function gao
set v8=function m1o
set m8=function ZvO
set Q8=function jmw
set W8=function xBl
set E8=function iVS
set Z8=function iyw
set U8=function nUb
set I8=function J6r
set P8=function k1w
set A8=function whw
set D8=function Mye
set H8=function KrS
set J8=function Iae
set K8=function C6c
set L8=function WYy
set X8=function i5b
set C8=function vkO
set V8=function yxb
set B8=function wfo
set N8=function SXc
set M8=function Wtb
set w9=function SSl
set u9=function vlS
set r9=function o7t
set s9=function Rql
set t9=function q2e
set i9=function pNO
set S9=function j1y
set c9=function gJo
set o9=function L3c
set O9=function Sxy
set l9=function oxl
set b9=function BPu
set y9=function wUw
set p9=function Wgp
set e9=function ZYw
set q9=function fJp
set a9=function Pbc
set n9=function PAw
set d9=function Bur
set f9=function vUi
set R9=function Cwr
set T9=function Pqw
set Y9=function M6e
set G9=function VNe
set g9=function eDl
set h9=function fGS
set F9=function Aow
set k9=function mVr
set j9=function Nqc
set x9=function ZBc
set v9=function qNS
set m9=function E8s
set Q9=function fBS
set W9=function prb
set E9=function DHb
set Z9=function FQt
set U9=function Eci
set I9=function rmS
set P9=function aVc
set A9=function exb
set D9=function shr
set H9=function QCe
set J9=function VHu
set K9=function Ott
set L9=function Sju
set X9=function fbS
set C9=function kNb
set V9=function sVe
set B9=function M7S
set N9=function WwS
set M9=function hJy
set w0w=function p0e
set u0w=function uhS
set r0w=function Uxt
set s0w=function Chw
set t0w=function KBS
set i0w=function fJc
set S0w=function D1e
set c0w=function Urb
set o0w=function tdu
set O0w=function mwO
set l0w=function UCy
set b0w=function gtO
set y0w=function Xot
set p0w=function TOt
set e0w=function pnt
set q0w=function I6i
set a0w=function Xbu
set n0w=function sdi
set d0w=function PtO
set f0w=function H6S
set R0w=function bpy
set T0w=function pBp
set Y0w=function p0l
set G0w=function S9c
set g0w=function X9l
set h0w=function Avw
set F0w=function A5s
set k0w=function Var
set j0w=function Xhw
set x0w=function Lne
set v0w=function yxs
set m0w=function xqe
set Q0w=function Nhc
set W0w=function U2w
set E0w=function A3b
set Z0w=function bOw
set U0w=function rkt
set I0w=function B1y
set P0w=function mAo
set A0w=function VrO
set D0w=function B2s
set H0w=function wMS
set J0w=function Tnc
set K0w=function Y6b
set L0w=function BKr
set X0w=function Z9l
set C0w=function R6i
set V0w=function oap
set B0w=function CGc
set N0w=function h5S
set M0w=function D9r
set www=function mNO
set uww=function h6S
set rww=function q4r
set sww=function hwi
set tww=function avS
set iww=function pAt
set Sww=function gQo
set cww=function YCs
set oww=function Cqr
set Oww=function EBp
set lww=function odl
set bww=function vGl
set yww=function yqc
set pww=function arl
set eww=function n_t
set qww=function Dxp
set aww=function rBt
set nww=function i4u
set dww=function Zgi
set fww=function wii
set Rww=function fhw
set Tww_1428=function tEy
set Yww_1782=function dco
set Gww_515=function w9s
set gww_2416=function FNb
set hww_2484=function FDb
set Fww_445=function W8S
set kww=function Alt
set jww=function UXr
set xww_3567=function DRt
set vww_3431=function XXc
set mww_2821=function fsu
set Qww_1223=function hcS
set Www_1647=function UYw
set Eww_376=function iHy
set Zww=function ieu
set Uww_1510=function WVr
set Iww_653=function KDu
set Pww_1155=function gku
set Aww_77=function Vao
set Dww_287=function ECe
set Hww_582=function HDu
set Jww_720=function Egt
set Kww_787=function wQi
set Lww_855=function SRl
set Xww_1714=function OkO
set Cww_216=function yat
set Vww_1578=function pWy
set Bww_144=function BVS
set Nww_997=function rDy
set Mww_930=function Nol
set www_3499=function q_t
set uww_3363=function WIw
set rww_3160=function wIl
set sww_3228=function oNe
set tww_3295=function Byi
set iww_2549=function VIp
set Sww_1360=function kLi
set cww_2144=function c7e
set oww_2956=function EPp
set Oww_1064=function Mfo
set lww_2753=function t_c
set bww_2076=function Jht
set yww_3635=function RyS
set pww_3024=function all
set eww_2280=function VQo
set qww_3092=function Tgy
set aww_1918=function pVp
set nww_2889=function PIl
set dww_2212=function SKc
set fww_2348=function Q_t
set Rww_1292=function yji
set Tww=function AFu
set Yww=function OFw
set Gww=function eao
set gww=function n_O
set hww=function qPl
set Fww=function NSl
set kww_2685=function uCl
set jww_2617=function KBt
set xww=function PRe
set vww=function yDw
set mww=function Mgt
set Qww=function sBt
set Www=function MWb
set Eww=function Etu
set Zww_1850=function thy
set Uww=function A8l
set Iww=function tNb
set Pww=function J5c
set Aww=function qci
set Dww=function wxi
set Hww=function TWo
set Jww=function f0O
set Kww=function GIb
set Lww=function rft
set Xww=function E9r
set Cww=function Yib
set Vww=function Hpu
set Bww=function tDb
set Nww=function tbt
set Mww=function WPl
set wuw=function RTt
set uuw=function fRu
set ruw=function qki
set suw=function j6w
set tuw=function FJo
set iuw=function jVp
set Suw=function hAl
set cuw=function Y5S
set ouw=function I0r
set Ouw=function TXr
set luw=function Kcw
set buw=function byl
set yuw=function NOc
set puw=function vwO
set euw=function rKw
set quw=function Cmy
set auw=function Rnt
set nuw=function Ide
set duw=function O9i
set fuw=function hWb
set Ruw=function oHl
set Tuw=function e8r
set Yuw=function M3l
set Guw=function MOc
set guw=function sft
set huw=function W5p
set Fuw=function vnt
set kuw=function Fle
set juw=function W6w
set xuw=function Rnu
set vuw=function PQt
set muw=function Kvi
set Quw=function sCs
set Wuw=function CMw
set Euw=function fMp
set Zuw=function CeS
set Uuw=function ZMr
set Iuw=function Erb
set Puw=function rrO
set Auw=function YoS
set Duw=function Xal
set Huw=function Wdl
set Juw=function QIy
set Kuw=function Y9u
set Luw=function JIy
set Xuw=function whS
set Cuw=function qCe
set Vuw=function tMy
set Buw=function SCl
set Nuw=function MrS
set Muw=function qVp
set wrw=function yPS
set urw=function Eqt
set rrw=function vMr
set srw=function Tkt
set trw=function ROi
set irw=function YOc
set Srw=function xOu
set crw=function Q1o
set orw=function BXr
set Orw=function Pvw
set lrw=function DuO
set brw=function O_O
set yrw=function s8r
set prw=function S_t
set erw=function vbS
set qrw=function Vno
set arw=function ycl
set nrw=function XVp
set drw=function fco
set frw=function nPy
set Rrw=function gWs
set Trw=function ETw
set Yrw=function COw
set Grw=function G5S
set grw=function aDy
set hrw=function yRt
set Frw=function QUi
set krw=function JYu
set jrw=function pZp
set xrw=function Nct
set vrw=function rpw
set mrw=function rYS
set Qrw=function riO
set Wrw=function V_l
set Erw=function TEu
set Zrw=function TTt
set Urw=function fOe
set Irw=function D1y
set Prw=function Vkc
set Arw=function xWu
set Drw=function S1p
set Hrw=function m8r
set Jrw=function HSl
set Krw=function rMl
set Lrw=function awl
set Xrw=function QUb
set Crw=function Dci
set Vrw=function dHw
set Brw=function c2t
set Nrw=function sOc
set Mrw=function lMl
set wsw=function Bao
set usw=function mFu
set rsw=function Ftu
set ssw=function TiO
set tsw=function qiu
set isw=function IRr
set Ssw=function ioi
set csw=function q3b
set osw=function gSS
set Osw=function G6b
set lsw=function eEO
set bsw=function Eku
set ysw=function vsb
set psw=function kyu
set esw=function o1b
set qsw=function VRw
set asw=function jht
set nsw=function Enl
set dsw=function tSi
set fsw=function c1b
set Rsw=function PTl
set Tsw=function Ibe
set Ysw=function RJp
set Gsw=function bhS
set gsw=function BEl
set hsw=function s4c
set Fsw=function UvO
set ksw=function wgS
set jsw=function AIi
set xsw=function pxt
set vsw=function c5p
set msw=function Zgp
set Qsw=function FNS
set Wsw=function vrl
set Esw=function n8S
set Zsw=function A8r
set Usw=function sXl
set Isw=function CWt
set Psw=function tUy
set Asw=function s1S
set Dsw=function OOS
set Hsw=function HHb
set Jsw=function wHy
set Ksw=function gJy
set Lsw=function piw
set Xsw=function HBr
set Csw=function w2c
set Vsw=function mUi
set Bsw=function gbe
set Nsw=function Sar
set Msw=function I_r
set wtw=function LXs
set utw=function Pxt
set rtw=function Zas
set stw=function OSO
set ttw=function kwt
set itw=function AwS
set Stw=function JVr
set ctw=function lqe
set otw=function Y4u
set Otw=function bdl
set ltw=function c4u
set btw=function FQu
set ytw=function UvS
set ptw=function kpw
set etw=function c4y
set qtw=function Cbe
set atw=function h3w
set ntw=function r2b
set dtw=function xpu
set ftw=function UJc
set Rtw=function E6S
set Ttw=function Mtt
endfunction
function XeS takes nothing returns nothing
call SaveStr(lF,2,-539662199,"x003")
call SaveStr(lF,2,-2089975759,"AM0t")
call SaveStr(lF,2,-1028223508,"AM1{")
call SaveStr(lF,2,-969079455,"RM19")
call SaveStr(lF,2,-1468871890,"AM1p")
call SaveStr(lF,2,$6A7F6520,"AM1j")
call SaveStr(lF,2,-1866263645,"AM0u")
call SaveStr(lF,2,$4C71BB14,"Aloc")
call SaveStr(lF,2,-1790335441,"x019")
call SaveStr(lF,2,$78E4FF90,"o02F")
call SaveStr(lF,2,$1F32245F,"AMad")
call SaveStr(lF,2,$1240F12E,"AM7b")
call SaveStr(lF,2,$3372181D,"AM2z")
call SaveStr(lF,2,$3802FB71,"RM13")
call SaveStr(lF,2,-1784521001,"RM03")
call SaveStr(lF,2,$4C05B371,"AM32")
call SaveStr(lF,2,-1498701357,"x00p")
call SaveStr(lF,2,$5F85282,"AMan")
call SaveStr(lF,2,$4EAF31D7,"RM1u")
call SaveStr(lF,2,$60AE7BD6,"x01t")
call SaveStr(lF,2,$D972AEA,"A0V6")
call SaveStr(lF,2,$438424FB,"AM2e")
call SaveStr(lF,2,-250221972,"BM0n")
call SaveStr(lF,2,-881738511,"AM8}")
call SaveStr(lF,2,$144AE7CC,"AMb3")
call SaveStr(lF,2,$D05AE88,"AM1m")
call SaveStr(lF,2,$12813D06,"AMbx")
call SaveStr(lF,2,$56FAC180,"R05A")
call SaveStr(lF,2,$6B8E3C0A,"air")
call SaveStr(lF,2,-1439415874,"RM0a")
call SaveStr(lF,2,-191342830,"x111")
call SaveStr(lF,2,$68D7F75F,"o02G")
call SaveStr(lF,2,-1087166277,"AM7c")
call SaveStr(lF,2,-1134666794,"RM1p")
call SaveStr(lF,2,-780996866,"n02J")
call SaveStr(lF,2,$7C2BF3B9,"RM14")
call SaveStr(lF,2,-1916979668,"BM0s")
call SaveStr(lF,2,-994488542,"BM0k")
call SaveStr(lF,2,$4DD96243,"x00f")
call SaveStr(lF,2,$5B124C8A,"AM1~")
call SaveStr(lF,2,-646816016,"AMar")
call SaveStr(lF,2,$3E7F5DE3,"n02P")
call SaveStr(lF,2,$301E09F,"RM0b")
call SaveStr(lF,2,$22C2C161,"AM6z")
call SaveStr(lF,2,$5E87FD2D,"x02n")
call SaveStr(lF,2,$184887EE,"A150")
call SaveStr(lF,2,$392B4E8F,"AMb!")
call SaveStr(lF,2,-969050729,"AM22")
call SaveStr(lF,2,-804173893,"BM0{")
call SaveStr(lF,2,$1BAB9005,"AMap")
call SaveStr(lF,2,$3344C85,"RM1s")
call SaveStr(lF,2,$44846336,"BM0b")
call SaveStr(lF,2,-1007965093,"o02C")
call SaveStr(lF,2,-2111733355,"AMaj")
call SaveStr(lF,2,-427707080,"RM0k")
call SaveStr(lF,2,$643A8784,"h01L")
call SaveStr(lF,2,$4EB48D10,"x013")
call SaveStr(lF,2,-736680020,"RM0u")
call SaveStr(lF,2,$23883035,"AM9p")
call SaveStr(lF,2,$63383886,"AM1i")
call SaveStr(lF,2,$AF78137,"R05R")
call SaveStr(lF,2,-1604227164,"RM1d")
call SaveStr(lF,2,$6487FF4D,"AM9x")
call SaveStr(lF,2,-603853880,"n01V")
call SaveStr(lF,2,$440D387,"AM8w")
call SaveStr(lF,2,$45883250,"x006")
call SaveStr(lF,2,$561D51D7,"AMch")
call SaveStr(lF,2,-1186579817,"AM6k")
call SaveStr(lF,2,-1236860520,"RM1v")
call SaveStr(lF,2,$31C30CE,"BM0l")
call SaveStr(lF,2,$2E9D939,"AM9i")
call SaveStr(lF,2,-1924875626,"RM1i")
call SaveStr(lF,2,$5E2F19FD,"AM1u")
call SaveStr(lF,2,$2FFA7421,"BM0h")
call SaveStr(lF,2,$3A6F2990,"x004")
call SaveStr(lF,2,-269883382,"R05P")
call SaveStr(lF,2,$7DDF9640,"AMaq")
call SaveStr(lF,2,$75FB4BE,"AM0|")
call SaveStr(lF,2,-1861175563,"RM1a")
call SaveStr(lF,2,-476923784,"BM0r")
call SaveStr(lF,2,-144287614,"RM0y")
call SaveStr(lF,2,$3E9D2D7B,"AM6w")
call SaveStr(lF,2,$7C484FA1,"AM2y")
call SaveStr(lF,2,$46275DCF,"AM2x")
call SaveStr(lF,2,$775BF4B2,"BM04")
call SaveStr(lF,2,-1905956464,"AM27")
call SaveStr(lF,2,$17833869,"AMag")
call SaveStr(lF,2,-2137081996,"AM6y")
call SaveStr(lF,2,$1B7A2896,"AMc7")
call SaveStr(lF,2,$103FA7CF,"x022")
call SaveStr(lF,2,$33E9F81E,"BM0x")
call SaveStr(lF,2,-1364927150,"AMab")
call SaveStr(lF,2,-1495167719,"BM0m")
call SaveStr(lF,2,$1EF6D90E,"u99T")
call SaveStr(lF,2,$21FA5A07,"BM0|")
call SaveStr(lF,2,0,"")
endfunction
function Y6i takes nothing returns nothing
local player T6i=Player(15)
call CreateUnit(T6i,$68303243,2624.,4160.,270.)
call CreateUnit(T6i,$68303243,4160.,2624.,270.)
call CreateUnit(T6i,$68303243,4160.,-2496.,270.)
call CreateUnit(T6i,$68303243,2624.,-4032.,270.)
call CreateUnit(T6i,$68303243,-2496.,-4032.,270.)
call CreateUnit(T6i,$68303243,-4032.,-2496.,270.)
call CreateUnit(T6i,$68303243,-4064.,2624.,270.)
call CreateUnit(T6i,$68303243,-2496.,4160.,270.)
set au=CreateUnit(T6i,$6F303342,65.7,112.8,90.)
set T6i=null
set T6i=null
endfunction
function ZWb takes nothing returns nothing
set Es=CreateSound("Sound\\Ambient\\DoodadEffects\\TheHornOfCenarius.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Es,"HornOfCenariusSound")
call SetSoundDuration(Es,12121)
call SetSoundChannel(Es,0)
call SetSoundVolume(Es,1000)
set Zs=CreateSound("Sound\\Dialogue\\UndeadCampaign\\Undead08\\U08Tichondrius21.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Zs,"U08Tichondrius21")
call SetSoundDuration(Zs,4336)
call SetSoundVolume(Zs,127)
set Us=CreateSound("Units\\Human\\HeroBloodElf\\BloodElfMagePissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Us,"BloodElfSorcerorPissed")
call SetSoundDuration(Us,3756)
call SetSoundChannel(Us,0)
set Is=CreateSound("O05Cenarius01my.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(Is,8620)
call SetSoundChannel(Is,0)
call SetSoundVolume(Is,127)
call SetSoundPitch(Is,1.)
set Ps=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc02\\O02Cairne25.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ps,"O02Cairne25")
call SetSoundDuration(Ps,5773)
call SetSoundVolume(Ps,127)
set As=CreateSound("Units\\Naga\\LadyVashj\\LadyVashjPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(As,"SeaWitchPissed")
call SetSoundDuration(As,6470)
call SetSoundChannel(As,0)
set Ds=CreateSound("Units\\Creeps\\GoblinSapper\\GoblinSapperYesAttack4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ds,"GoblinSapperYesAttack")
call SetSoundDuration(Ds,1091)
call SetSoundChannel(Ds,0)
set Hs=CreateSound("Units\\Creeps\\GoblinSapper\\GoblinSapperYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Hs,"GoblinSapperYesAttack")
call SetSoundDuration(Hs,2026)
call SetSoundChannel(Hs,0)
set Js=CreateSound("Sound\\Dialogue\\HumanExpCamp\\Human07x\\A07Illidan24.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Js,"A07Illidan24")
call SetSoundDuration(Js,8411)
call SetSoundVolume(Js,127)
set Ks=CreateSound("Sound\\Dialogue\\HumanCampaign\\Human06Interlude\\H06Uther47.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ks,"H06Uther47")
call SetSoundDuration(Ks,2638)
call SetSoundVolume(Ks,127)
set Ls=CreateSound("Units\\Orc\\HeadHunter\\HeadHunterPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ls,"HeadHunterPissed")
call SetSoundDuration(Ls,2740)
call SetSoundChannel(Ls,0)
set Xs=CreateSound("Sound\\Dialogue\\UndeadExpCamp\\Undead07CxInterlude\\L07CLichKing44.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Xs,"L07CLichKing44")
call SetSoundDuration(Xs,6661)
call SetSoundVolume(Xs,127)
set Cs=CreateSound("Sound\\Dialogue\\HumanExpCamp\\Human05x\\A05Maiev32.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Cs,"A05Maiev32")
call SetSoundDuration(Cs,4127)
call SetSoundVolume(Cs,127)
set Vs=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Mannoroth39.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Vs,"O05Mannoroth39")
call SetSoundDuration(Vs,7445)
call SetSoundVolume(Vs,127)
set Bs=CreateSound("Sound\\Dialogue\\UndeadExpCamp\\Undead07Cx\\L07CArthas34.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Bs,"L07CArthas34")
call SetSoundDuration(Bs,1985)
call SetSoundVolume(Bs,127)
set Ns=CreateSound("Units\\Undead\\Banshee\\BansheeReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ns,"BansheeReady")
call SetSoundDuration(Ns,4435)
call SetSoundChannel(Ns,0)
set Ms=CreateSound("Sound\\Dialogue\\Extra\\MuradinTaunt2.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ms,"MuradinTaunt2")
call SetSoundDuration(Ms,2508)
call SetSoundVolume(Ms,127)
set wt=CreateSound("Tebis.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(wt,4336)
call SetSoundChannel(wt,0)
call SetSoundVolume(wt,127)
call SetSoundPitch(wt,1.)
set ut=CreateSound("Units\\Orc\\HeroShadowHunter\\ShadowHunterPissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ut,"HeroShadowHunterPissed")
call SetSoundDuration(ut,2752)
call SetSoundChannel(ut,0)
set rt=CreateSound("Units\\Human\\HeroArchMage\\HeroArchMagePissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(rt,"HeroArchMagePissed")
call SetSoundDuration(rt,4226)
call SetSoundChannel(rt,0)
set st=CreateSound("Units\\Human\\HeroArchMage\\HeroArchMagePissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(st,"HeroArchMagePissed")
call SetSoundDuration(st,2200)
call SetSoundChannel(st,0)
set tt=CreateSound("Units\\Human\\TheCaptain\\CaptainYes3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(tt,"CaptainYes")
call SetSoundDuration(tt,1387)
call SetSoundChannel(tt,0)
set St=CreateSound("Units\\Human\\TheCaptain\\CaptainWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(St,"CaptainWhat")
call SetSoundDuration(St,1120)
call SetSoundChannel(St,0)
set ct=CreateSound("Units\\Human\\Jaina\\JainaYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ct,"JainaYesAttack")
call SetSoundDuration(ct,1463)
call SetSoundChannel(ct,0)
set ot=CreateSound("Units\\Human\\Jaina\\JainaPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ot,"JainaPissed")
call SetSoundDuration(ot,1593)
call SetSoundChannel(ot,0)
set Ot=CreateSound("Units\\Human\\Jaina\\JainaYes4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ot,"JainaYes")
call SetSoundDuration(Ot,746)
call SetSoundChannel(Ot,0)
set lt=CreateSound("Units\\Human\\Uther\\UtherPissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(lt,"UtherPissed")
call SetSoundDuration(lt,2409)
call SetSoundChannel(lt,0)
set bt=CreateSound("Units\\Human\\Uther\\UtherWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(bt,"UtherWhat")
call SetSoundDuration(bt,1445)
call SetSoundChannel(bt,0)
set yt=CreateSound("Units\\Human\\Uther\\UtherYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(yt,"UtherYesAttack")
call SetSoundDuration(yt,1167)
call SetSoundChannel(yt,0)
set pt=CreateSound("Units\\Human\\WaterElemental\\SummonWaterElementalCaster.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(pt,"WaterElementalBirth")
call SetSoundDuration(pt,2500)
call SetSoundChannel(pt,0)
set et=CreateSound("Units\\Human\\GryphonRider\\GryphonRiderWhat4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(et,"GryphonRiderWhat")
call SetSoundDuration(et,1672)
call SetSoundChannel(et,0)
set qt=CreateSound("Units\\Human\\GryphonRider\\GryphonRiderPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(qt,"GryphonRiderPissed")
call SetSoundDuration(qt,1991)
call SetSoundChannel(qt,0)
set at=CreateSound("Units\\Human\\GryphonRider\\GryphonRiderYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(at,"GryphonRiderYesAttack")
call SetSoundDuration(at,2055)
call SetSoundChannel(at,0)
set nt=CreateSound("Units\\Human\\Rifleman\\RiflemanPissed5.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(nt,"RiflemanPissed")
call SetSoundDuration(nt,4168)
call SetSoundChannel(nt,0)
set dt=CreateSound("Units\\Human\\Rifleman\\RiflemanPissed7.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(dt,"RiflemanPissed")
call SetSoundDuration(dt,4609)
call SetSoundChannel(dt,0)
set ft=CreateSound("Units\\Human\\Rifleman\\RiflemanPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ft,"RiflemanPissed")
call SetSoundDuration(ft,3158)
call SetSoundChannel(ft,0)
set Rt=CreateSound("Units\\Human\\Muradin\\MuradinYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Rt,"MuradinYesAttack")
call SetSoundDuration(Rt,1631)
call SetSoundChannel(Rt,0)
set Tt=CreateSound("Units\\Human\\Muradin\\MuradinYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Tt,"MuradinYesAttack")
call SetSoundDuration(Tt,1300)
call SetSoundChannel(Tt,0)
set Yt=CreateSound("Units\\Human\\MortarTeam\\MortarTeamReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Yt,"MortarTeamReady")
call SetSoundDuration(Yt,3657)
call SetSoundChannel(Yt,0)
set Gt=CreateSound("Units\\Human\\MortarTeam\\MortarTeamYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Gt,"MortarTeamYesAttack")
call SetSoundDuration(Gt,1814)
call SetSoundChannel(Gt,0)
set gt=CreateSound("Units\\Human\\MortarTeam\\MortarTeamYes4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(gt,"MortarTeamYes")
call SetSoundDuration(gt,1833)
call SetSoundChannel(gt,0)
set ht=CreateSound("Units\\Creeps\\GoblinZeppelin\\GoblinZeppelinYes2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ht,"GoblinZeppelinYes")
call SetSoundDuration(ht,2273)
call SetSoundChannel(ht,0)
call SetSoundVolume(ht,127)
set Ft=CreateSound("Units\\Creeps\\GoblinZeppelin\\GoblinZeppelinPissed3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ft,"GoblinZeppelinPissed")
call SetSoundDuration(Ft,2252)
call SetSoundChannel(Ft,0)
call SetSoundVolume(Ft,124)
set kt=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(kt,"HEROGoblinALCHEMISTWhat")
call SetSoundDuration(kt,1546)
call SetSoundChannel(kt,0)
call SetSoundPitch(kt,1.1)
set jt=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(jt,"HEROGoblinALCHEMISTYesAttack")
call SetSoundDuration(jt,1985)
call SetSoundChannel(jt,0)
call SetSoundPitch(jt,1.1)
set xt=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistYes4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(xt,"HEROGoblinALCHEMISTYes")
call SetSoundDuration(xt,1561)
call SetSoundChannel(xt,0)
call SetSoundPitch(xt,1.1)
set vt=CreateSound("Units\\Creeps\\HeroTinker\\HeroTinkerPissed7.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(vt,"HeroTinkerPissed")
call SetSoundDuration(vt,2302)
call SetSoundChannel(vt,0)
set mt=CreateSound("Units\\Creeps\\HeroTinker\\HeroTinkerWhat2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(mt,"HeroTinkerWhat")
call SetSoundDuration(mt,1335)
call SetSoundChannel(mt,0)
set Qt=CreateSound("Units\\Creeps\\HeroTinker\\HeroTinkerYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Qt,"HeroTinkerYesAttack")
call SetSoundDuration(Qt,1768)
call SetSoundChannel(Qt,0)
set Wt=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Wt,"HEROGoblinALCHEMISTWhat")
call SetSoundDuration(Wt,1396)
call SetSoundChannel(Wt,0)
call SetSoundPitch(Wt,.9)
set Et=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Et,"HEROGoblinALCHEMISTPissed")
call SetSoundDuration(Et,1948)
call SetSoundChannel(Et,0)
call SetSoundPitch(Et,.9)
set Zt=CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Zt,"HEROGoblinALCHEMISTYesAttack")
call SetSoundDuration(Zt,1741)
call SetSoundChannel(Zt,0)
call SetSoundPitch(Zt,.9)
set Ut=CreateSound("Units\\Creeps\\Ogre\\OgreWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ut,"OgreWhat")
call SetSoundDuration(Ut,1398)
call SetSoundChannel(Ut,0)
set It=CreateSound("Units\\Creeps\\Ogre\\OgreYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(It,"OgreYesAttack")
call SetSoundDuration(It,1303)
call SetSoundChannel(It,0)
set Pt=CreateSound("Units\\Creeps\\Beastmaster\\OgreBeastMasterWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Pt,"BeastmasterWarcry")
call SetSoundDuration(Pt,1808)
call SetSoundChannel(Pt,0)
set At=CreateSound("Units\\Creeps\\Beastmaster\\OgreBeastMasterYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(At,"BeastmasterYesAttack")
call SetSoundDuration(At,1445)
call SetSoundChannel(At,0)
set Dt=CreateSound("Units\\Orc\\HeroBladeMaster\\HeroBladeMasterYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Dt,"HeroBladeMasterYesAttack")
call SetSoundDuration(Dt,1236)
call SetSoundChannel(Dt,0)
set Ht=CreateSound("Units\\Orc\\HeroBladeMaster\\HeroBladeMasterReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ht,"HeroBladeMasterReady")
call SetSoundDuration(Ht,1736)
call SetSoundChannel(Ht,0)
set Jt=CreateSound("Units\\Orc\\Thrall\\ThrallPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Jt,"ThrallPissed")
call SetSoundDuration(Jt,2891)
call SetSoundChannel(Jt,0)
set Kt=CreateSound("Sound\\Dialogue\\NightElfCampaign\\NightElf07\\N07Thrall12.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Kt,"N07Thrall12")
call SetSoundDuration(Kt,3840)
call SetSoundVolume(Kt,127)
set Lt=CreateSound("Units\\Orc\\Thrall\\ThrallWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Lt,"ThrallWhat")
call SetSoundDuration(Lt,2055)
call SetSoundChannel(Lt,0)
set Xt=CreateSound("Units\\Orc\\KotoBeast\\KotoBeastYes1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Xt,"KotoBeastYes")
call SetSoundDuration(Xt,1649)
call SetSoundChannel(Xt,0)
set Ct=CreateSound("Units\\Orc\\HeadHunter\\HeadHunterYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ct,"HeadHunterYesAttack")
call SetSoundDuration(Ct,1979)
call SetSoundChannel(Ct,0)
set Vt=CreateSound("Units\\Orc\\HeadHunter\\HeadHunterYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Vt,"HeadHunterYesAttack")
call SetSoundDuration(Vt,1910)
call SetSoundChannel(Vt,0)
set Bt=CreateSound("Units\\Other\\Rokhan\\RokhanYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Bt,"RokhanYesAttack")
call SetSoundDuration(Bt,1919)
call SetSoundChannel(Bt,0)
set Nt=CreateSound("Units\\Other\\Rokhan\\RokhanPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Nt,"RokhanPissed")
call SetSoundDuration(Nt,3547)
call SetSoundChannel(Nt,0)
set Mt=CreateSound("Units\\Other\\Rokhan\\RokhanReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Mt,"RokhanReady")
call SetSoundDuration(Mt,1991)
call SetSoundChannel(Mt,0)
set wi=CreateSound("Units\\Orc\\HeroShadowHunter\\ShadowHunterReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(wi,"HeroShadowHunterReady")
call SetSoundDuration(wi,2992)
call SetSoundChannel(wi,0)
set ui=CreateSound("Units\\Orc\\HeroShadowHunter\\ShadowHunterWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ui,"HeroShadowHunterWhat")
call SetSoundDuration(ui,1811)
call SetSoundChannel(ui,0)
set ri=CreateSound("Units\\Orc\\HeroShadowHunter\\ShadowHunterWhat5.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ri,"HeroShadowHunterWhat")
call SetSoundDuration(ri,2116)
call SetSoundChannel(ri,0)
set si=CreateSound("Units\\Creeps\\ForestTroll\\ForestTrollReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(si,"ForestTrollReady")
call SetSoundDuration(si,1823)
call SetSoundChannel(si,0)
set ti=CreateSound("Units\\Creeps\\ForestTroll\\ForestTrollPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ti,"ForestTrollPissed")
call SetSoundDuration(ti,2444)
call SetSoundChannel(ti,0)
set ii=CreateSound("Units\\Orc\\Tauren\\TaurenYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ii,"TaurenYesAttack")
call SetSoundDuration(ii,2206)
call SetSoundChannel(ii,0)
set Si=CreateSound("Units\\Orc\\Tauren\\TaurenYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Si,"TaurenYesAttack")
call SetSoundDuration(Si,1770)
call SetSoundChannel(Si,0)
set ci=CreateSound("Units\\Orc\\SpiritWalker\\WhiteTaurenWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ci,"SpiritWalkerWarcry")
call SetSoundDuration(ci,2833)
call SetSoundChannel(ci,0)
set oi=CreateSound("Units\\Orc\\SpiritWalker\\WhiteTaurenPissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(oi,"SpiritWalkerPissed")
call SetSoundDuration(oi,2668)
call SetSoundChannel(oi,0)
set Oi=CreateSound("Units\\Orc\\SpiritWalker\\WhiteTaurenYes5.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Oi,"SpiritWalkerYes")
call SetSoundDuration(Oi,1887)
call SetSoundChannel(Oi,0)
set li=CreateSound("Units\\Orc\\HeroTaurenChieftain\\HeroTaurenChieftainReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(li,"HeroTaurenChieftainReady")
call SetSoundDuration(li,2171)
call SetSoundChannel(li,0)
set bi=CreateSound("Units\\Orc\\HeroTaurenChieftain\\HeroTaurenChieftainWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(bi,"HeroTaurenChieftainWarcry")
call SetSoundDuration(bi,2879)
call SetSoundChannel(bi,0)
set yi=CreateSound("Units\\Orc\\HeroTaurenChieftain\\HeroTaurenChieftainPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(yi,"HeroTaurenChieftainPissed")
call SetSoundDuration(yi,3460)
call SetSoundChannel(yi,0)
set pi=CreateSound("Units\\Creeps\\RockGolem\\RockGolemYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(pi,"RockGolemYesAttack")
call SetSoundDuration(pi,2362)
call SetSoundChannel(pi,0)
set ei=CreateSound("Units\\Creeps\\Wendigo\\WendigoYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ei,"WendigoYesAttack")
call SetSoundDuration(ei,1695)
call SetSoundChannel(ei,0)
set qi=CreateSound("Sound\\Dialogue\\UndeadCampaign\\Undead08\\U08Archimonde19.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(qi,"U08Archimonde19")
call SetSoundDuration(qi,7549)
call SetSoundVolume(qi,127)
set ai=CreateSound("Sound\\Dialogue\\NightElfCampaign\\NightElf07\\N07Archimonde04.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ai,"N07Archimonde04")
call SetSoundDuration(ai,6452)
call SetSoundVolume(ai,127)
set ni=CreateSound("Sound\\Dialogue\\NightElfCampaign\\NightElf07\\N07Archimonde14.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ni,"N07Archimonde14")
call SetSoundDuration(ni,7941)
call SetSoundVolume(ni,127)
set di=CreateSound("7Archimonde4.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(di,3500)
call SetSoundChannel(di,0)
call SetSoundVolume(di,127)
call SetSoundPitch(di,1.)
set fi=CreateSound("Units\\Demon\\Pitlord\\PitLordYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(fi,"PitLordYesAttack")
call SetSoundDuration(fi,3537)
call SetSoundChannel(fi,0)
call SetSoundVolume(fi,127)
set Ri=CreateSound("Units\\Demon\\Pitlord\\PitLordYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ri,"PitLordYesAttack")
call SetSoundDuration(Ri,2663)
call SetSoundChannel(Ri,0)
call SetSoundVolume(Ri,127)
set Ti=CreateSound("Units\\Demon\\HeroPitLord\\HPitLordWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ti,"HeroPitLordWarcry")
call SetSoundDuration(Ti,2865)
call SetSoundChannel(Ti,0)
set Yi=CreateSound("Units\\Demon\\HeroPitLord\\HPitLordReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Yi,"HeroPitLordReady")
call SetSoundDuration(Yi,3019)
call SetSoundChannel(Yi,0)
set Gi=CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Gi,"HeroFireLordYesAttack")
call SetSoundDuration(Gi,3080)
call SetSoundChannel(Gi,0)
set gi=CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(gi,"HeroFireLordWarcry")
call SetSoundDuration(gi,2614)
call SetSoundChannel(gi,0)
set hi=CreateSound("Units\\Undead\\Tichondrius\\TichondriusPissed3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(hi,"TichondriusPissed")
call SetSoundDuration(hi,2484)
call SetSoundChannel(hi,0)
set Fi=CreateSound("Units\\Undead\\Tichondrius\\TichondriusYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Fi,"TichondriusYesAttack")
call SetSoundDuration(Fi,2055)
call SetSoundChannel(Fi,0)
set ki=CreateSound("Units\\Undead\\HeroCryptLord\\NerubianCryptLordYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ki,"HeroCryptLordYesAttack")
call SetSoundDuration(ki,2573)
call SetSoundChannel(ki,0)
set ji=CreateSound("Units\\Undead\\HeroCryptLord\\NerubianCryptLordWhat5.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ji,"HeroCryptLordWhat")
call SetSoundDuration(ji,3111)
call SetSoundChannel(ji,0)
set xi=CreateSound("Units\\Undead\\HeroCryptLord\\NerubianCryptLordPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(xi,"HeroCryptLordPissed")
call SetSoundDuration(xi,3222)
call SetSoundChannel(xi,0)
set vi=CreateSound("Units\\Creeps\\Spider\\SpiderWhat2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(vi,"SpiderWhat")
call SetSoundDuration(vi,1718)
set mi=CreateSound("Units\\Undead\\EvilArthas\\EvilArthasWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(mi,"EvilArthasWarcry")
call SetSoundDuration(mi,1927)
call SetSoundChannel(mi,0)
set Qi=CreateSound("Units\\Undead\\EvilArthas\\EvilArthasYesAttack4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Qi,"EvilArthasYesAttack")
call SetSoundDuration(Qi,1794)
call SetSoundChannel(Qi,0)
set Wi=CreateSound("Units\\Undead\\EvilArthas\\EvilArthasYes2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Wi,"EvilArthasYes")
call SetSoundDuration(Wi,1579)
call SetSoundChannel(Wi,0)
set Ei=CreateSound("Units\\Undead\\Shade\\ShadeYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ei,"ShadeYesAttack")
call SetSoundDuration(Ei,2323)
call SetSoundChannel(Ei,0)
set Zi=CreateSound("Units\\Undead\\Shade\\ShadeYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Zi,"ShadeYesAttack")
call SetSoundDuration(Zi,2431)
call SetSoundChannel(Zi,0)
set Ui=CreateSound("Units\\Undead\\KelThuzadLich\\KelThuzadYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ui,"KelThuzadLichYesAttack")
call SetSoundDuration(Ui,1853)
call SetSoundChannel(Ui,0)
set Ii=CreateSound("Units\\Undead\\KelThuzadLich\\KelThuzadWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ii,"KelThuzadLichWhat")
call SetSoundDuration(Ii,1609)
call SetSoundChannel(Ii,0)
set Pi=CreateSound("Units\\Undead\\HeroDeathKnight\\DeathKnightWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Pi,"HeroDeathKnightWarcry")
call SetSoundDuration(Pi,3054)
call SetSoundChannel(Pi,0)
set Ai=CreateSound("Units\\Undead\\HeroDeathKnight\\DeathKnightPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ai,"HeroDeathKnightPissed")
call SetSoundDuration(Ai,3346)
call SetSoundChannel(Ai,0)
set Di=CreateSound("Units\\Creeps\\FacelessOne\\FacelessOneWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Di,"FacelessOneWhat")
call SetSoundDuration(Di,1499)
call SetSoundChannel(Di,0)
set Hi=CreateSound("Units\\Undead\\EvilSylvanas\\EvilSylvanasYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Hi,"EvilSylvanasYesAttack")
call SetSoundDuration(Hi,1466)
call SetSoundChannel(Hi,0)
set Ji=CreateSound("Units\\Undead\\EvilSylvanas\\EvilSylvanasYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ji,"EvilSylvanasYesAttack")
call SetSoundDuration(Ji,1666)
call SetSoundChannel(Ji,0)
set Ki=CreateSound("Units\\Undead\\Varimathras\\VarimathrasYesAttack4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ki,"VarimathrasYesAttack")
call SetSoundDuration(Ki,1829)
call SetSoundChannel(Ki,0)
set Li=CreateSound("Units\\Undead\\Varimathras\\VarimathrasWhat2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Li,"VarimathrasWhat")
call SetSoundDuration(Li,2048)
call SetSoundChannel(Li,0)
set Xi=CreateSound("Units\\Orc\\Hellscream\\GromWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Xi,"GromWarcry")
call SetSoundDuration(Xi,2663)
call SetSoundChannel(Xi,0)
set Ci=CreateSound("Units\\Orc\\Hellscream\\GromYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ci,"GromYesAttack")
call SetSoundDuration(Ci,1741)
call SetSoundChannel(Ci,0)
set Vi=CreateSound("Units\\Orc\\Hellscream\\GromYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Vi,"GromYesAttack")
call SetSoundDuration(Vi,1283)
call SetSoundChannel(Vi,0)
set Bi=CreateSound("Units\\Demon\\Infernal\\InfernalDeath.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Bi,"InfernalDeath")
call SetSoundDuration(Bi,5000)
call SetSoundChannel(Bi,0)
set CS=CreateSound("Sound\\Dialogue\\UndeadCampaign\\Undead08\\U08Archimonde19.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(CS,"U08Archimonde19")
call SetSoundDuration(CS,1216)
call SetSoundChannel(CS,0)
call SetSoundVolume(CS,1000)
set Ni=CreateSound("Units\\Demon\\ChaosWarlord\\WarlordReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Ni,"ChaosWarlordReady")
call SetSoundDuration(Ni,2758)
call SetSoundChannel(Ni,0)
set Mi=CreateSound("Units\\Demon\\ChaosWarlord\\WarlordWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Mi,"ChaosWarlordWarcry")
call SetSoundDuration(Mi,1644)
call SetSoundChannel(Mi,0)
set wS=CreateSound("Units\\Demon\\HeroPitLord\\HPitLordWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(wS,"HeroPitLordWhat")
call SetSoundDuration(wS,2711)
call SetSoundChannel(wS,0)
set uS=CreateSound("Units\\Demon\\HeroPitLord\\HPitLordYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(uS,"HeroPitLordYesAttack")
call SetSoundDuration(uS,1908)
call SetSoundChannel(uS,0)
set rS=CreateSound("Units\\Demon\\HeroPitLord\\HPitLordWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(rS,"HeroPitLordWhat")
call SetSoundDuration(rS,2682)
call SetSoundChannel(rS,0)
set sS=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Cenarius03.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(sS,"O05Cenarius03")
call SetSoundDuration(sS,3213)
call SetSoundVolume(sS,127)
set tS=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Cenarius29.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(tS,"O05Cenarius29")
call SetSoundDuration(tS,5042)
call SetSoundVolume(tS,127)
set iS=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Cenarius27.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(iS,"O05Cenarius27")
call SetSoundDuration(iS,5146)
call SetSoundVolume(iS,127)
set SS=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Cenarius34.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(SS,"O05Cenarius34")
call SetSoundDuration(SS,8281)
call SetSoundVolume(SS,127)
set cS=CreateSound("Sound\\Dialogue\\OrcCampaign\\Orc05\\O05Cenarius28.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(cS,"O05Cenarius28")
call SetSoundDuration(cS,5434)
call SetSoundVolume(cS,127)
set oS=CreateSound("Units\\NightElf\\Furion\\FurionWhat4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(oS,"FurionWhat")
call SetSoundDuration(oS,2206)
call SetSoundChannel(oS,0)
set OS=CreateSound("Units\\NightElf\\Furion\\FurionPissed5.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(OS,"FurionPissed")
call SetSoundDuration(OS,3207)
call SetSoundChannel(OS,0)
set lS=CreateSound("Units\\NightElf\\HeroDemonHunter\\HeroDemonHunterWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(lS,"HeroDemonHunterWarcry")
call SetSoundDuration(lS,1428)
call SetSoundChannel(lS,0)
set bS=CreateSound("Units\\NightElf\\HeroDemonHunter\\HeroDemonHunterWhat3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(bS,"HeroDemonHunterWhat")
call SetSoundDuration(bS,1829)
call SetSoundChannel(bS,0)
set yS=CreateSound("Units\\NightElf\\Maiev\\MaievReady1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(yS,"MaievReady")
call SetSoundDuration(yS,2531)
call SetSoundChannel(yS,0)
set pS=CreateSound("Sound\\Dialogue\\HumanExpCamp\\Human05x\\A05Maiev33.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(pS,"A05Maiev33")
call SetSoundDuration(pS,2612)
call SetSoundVolume(pS,127)
set eS=CreateSound("Sound\\Dialogue\\HumanExpCamp\\Human05x\\A05Maiev34.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(eS,"A05Maiev34")
call SetSoundDuration(eS,6452)
call SetSoundVolume(eS,127)
set qS=CreateSound("Sound\\Dialogue\\NightElfExpCamp\\NightElf07x\\S07Maiev35.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(qS,"S07Maiev35")
call SetSoundDuration(qS,12722)
call SetSoundVolume(qS,127)
set aS=CreateSound("Sound\\Dialogue\\NightElfExpCamp\\NightElf05x\\S05Maiev37.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(aS,"S05Maiev37")
call SetSoundDuration(aS,10606)
call SetSoundVolume(aS,127)
set nS=CreateSound("Sound\\Dialogue\\NightElfExpCamp\\NightElf03x\\S03Maiev46.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(nS,"S03Maiev46")
call SetSoundDuration(nS,6530)
call SetSoundVolume(nS,127)
set dS=CreateSound("Sound\\Dialogue\\NightElfExpCamp\\NightElf07xInterlude\\S07Maiev37.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(dS,"S07Maiev37")
call SetSoundDuration(dS,2795)
call SetSoundVolume(dS,127)
set fS=CreateSound("Units\\NightElf\\MountainGiant\\MountainGiantPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(fS,"MountainGiantPissed")
call SetSoundDuration(fS,2444)
call SetSoundChannel(fS,0)
set RS=CreateSound("Tyrande4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundDuration(RS,1751)
call SetSoundChannel(RS,0)
call SetSoundVolume(RS,127)
call SetSoundPitch(RS,1.)
set TS=CreateSound("Units\\NightElf\\Tyrande\\TyrandePissed3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(TS,"TyrandePissed")
call SetSoundDuration(TS,1989)
call SetSoundChannel(TS,0)
set YS=CreateSound("Units\\NightElf\\Tyrande\\TyrandeWhat1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(YS,"TyrandeWhat")
call SetSoundDuration(YS,1913)
call SetSoundChannel(YS,0)
set GS=CreateSound("Units\\Naga\\NagaSiren\\NagaSirenPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(GS,"NagaSirenPissed")
call SetSoundDuration(GS,3596)
call SetSoundChannel(GS,0)
set gS=CreateSound("Units\\Naga\\NagaSiren\\NagaSirenWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(gS,"NagaSirenWarcry")
call SetSoundDuration(gS,1686)
call SetSoundChannel(gS,0)
set hS=CreateSound("Units\\Naga\\NagaSiren\\NagaSirenYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(hS,"NagaSirenYesAttack")
call SetSoundDuration(hS,2395)
call SetSoundChannel(hS,0)
set FS=CreateSound("Units\\NightElf\\Illidan\\IllidanWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(FS,"IllidanWarcry")
call SetSoundDuration(FS,2003)
call SetSoundChannel(FS,0)
set kS=CreateSound("Units\\NightElf\\Illidan\\IllidanPissed2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(kS,"IllidanPissed")
call SetSoundDuration(kS,2471)
call SetSoundChannel(kS,0)
set jS=CreateSound("Sound\\Dialogue\\HumanExpCamp\\Human07x\\A07Illidan20.mp3",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(jS,"A07Illidan20")
call SetSoundDuration(jS,3056)
call SetSoundVolume(jS,127)
set xS=CreateSound("Units\\Creeps\\Magnataur\\MagnataurYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(xS,"MagnataurYesAttack")
call SetSoundDuration(xS,1775)
call SetSoundChannel(xS,0)
set vS=CreateSound("Units\\Creeps\\SeaGiant\\SeaGiantPissed1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(vS,"SeaGiantPissed")
call SetSoundDuration(vS,2040)
call SetSoundChannel(vS,0)
set mS=CreateSound("Units\\Naga\\LadyVashj\\LadyVashjWhat4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(mS,"SeaWitchWhat")
call SetSoundDuration(mS,2377)
call SetSoundChannel(mS,0)
set QS=CreateSound("Units\\Naga\\LadyVashj\\LadyVashjPissed4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(QS,"SeaWitchPissed")
call SetSoundDuration(QS,3622)
call SetSoundChannel(QS,0)
set WS=CreateSound("Units\\Naga\\LadyVashj\\LadyVashjYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(WS,"SeaWitchYesAttack")
call SetSoundDuration(WS,1895)
call SetSoundChannel(WS,0)
set ES=CreateSound("Units\\Naga\\NagaRoyalGuard\\NagaRoyalGuardYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ES,"NagaRoyalGuardYesAttack")
call SetSoundDuration(ES,1934)
call SetSoundChannel(ES,0)
set ZS=CreateSound("Units\\Naga\\NagaRoyalGuard\\NagaRoyalGuardYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(ZS,"NagaRoyalGuardYesAttack")
call SetSoundDuration(ZS,1791)
call SetSoundChannel(ZS,0)
set US=CreateSound("Units\\Creeps\\LavaSpawn\\LavaSpawnBirth1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(US,"LavaSpawnBirth")
call SetSoundDuration(US,2856)
call SetSoundChannel(US,0)
set IS=CreateSound("Units\\Human\\HeroBloodElf\\BloodElfMageYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(IS,"BloodElfSorcerorYesAttack")
call SetSoundDuration(IS,1939)
call SetSoundChannel(IS,0)
set PS=CreateSound("Units\\Human\\HeroBloodElf\\BloodElfMageYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(PS,"BloodElfSorcerorYesAttack")
call SetSoundDuration(PS,1718)
call SetSoundChannel(PS,0)
set AS=CreateSound("Units\\Human\\HeroBloodElf\\BloodElfMageWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(AS,"BloodElfSorcerorWarcry")
call SetSoundDuration(AS,2003)
call SetSoundChannel(AS,0)
set DS=CreateSound("Units\\NightElf\\Shandris\\ShandrisYesAttack3.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(DS,"ShandrisYesAttack")
call SetSoundDuration(DS,1748)
call SetSoundChannel(DS,0)
set HS=CreateSound("Units\\NightElf\\Shandris\\ShandrisYesAttack1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(HS,"ShandrisYesAttack")
call SetSoundDuration(HS,1637)
call SetSoundChannel(HS,0)
set JS=CreateSound("Units\\Human\\Priest\\PriestWarcry1.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(JS,"PriestWarcry")
call SetSoundDuration(JS,1785)
call SetSoundChannel(JS,0)
set KS=CreateSound("Units\\Human\\Priest\\PriestYesAttack2.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(KS,"PriestYesAttack")
call SetSoundDuration(KS,1625)
call SetSoundChannel(KS,0)
set LS=CreateSound("Units\\Human\\Peasant\\PeasantYes4.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(LS,"PeasantYes")
call SetSoundDuration(LS,1097)
call SetSoundChannel(LS,0)
set XS=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(XS,"Warning")
call SetSoundDuration(XS,1904)
call SetSoundChannel(XS,0)
call SetSoundVolume(XS,127)
endfunction
function yvw takes nothing returns nothing
local string Ovw="abcdefghijklmnopqrstuvwxyz0123456789 -=,."
local integer ivw
local integer Svw
local integer cvw
local integer ovw
local integer array lvw
local boolean array bvw
set bvw[0]=true
set bvw[50]=true
set bvw[60]=true
set bvw[70]=true
set bvw[80]=true
set bvw[90]=true
set bvw[100]=true
set ivw=0
set Svw=0
loop
if bvw[Svw] then
set Svw=Svw+1
endif
exitwhen Svw>=256
set lvw[Svw]=ivw
set ivw=ivw+1
set Svw=Svw+1
endloop
set ivw=0
loop
exitwhen ivw>=12
set cvw=R2I(100.*GetPlayerHandicap(Player(ivw)))
if not bvw[cvw] then
set cvw=lvw[cvw]
set ovw=cvw/6
set cvw=cvw-ovw*6
call SetPlayerHandicap(Player(ivw),1.)
set er=er+SubString(Ovw,ovw,ovw+1)
endif
set ivw=ivw+1
endloop
endfunction
function main takes nothing returns nothing
local trigger cPp
call RandomizeNicknames()
call JeS()
call ExecuteFunc("ICt")
call ExecuteFunc("XeS")
call SetCameraBounds(-5888.+GetCameraMargin(CAMERA_MARGIN_LEFT),-5888.+GetCameraMargin(CAMERA_MARGIN_BOTTOM),5888.-GetCameraMargin(CAMERA_MARGIN_RIGHT),5888.-GetCameraMargin(CAMERA_MARGIN_TOP),-5888.+GetCameraMargin(CAMERA_MARGIN_LEFT),5888.-GetCameraMargin(CAMERA_MARGIN_TOP),5888.-GetCameraMargin(CAMERA_MARGIN_RIGHT),-5888.+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
call ZWb()
set fs=Rect(-576.,-544.,704.,672.)
call Rect(4352.,4608.,4480.,5600.)
call Rect(4480.,4224.,5856.,4480.)
call Rect(4480.,-4256.,5824.,-3968.)
call Rect(4096.,-5632.,4352.,-4352.)
call Rect(-5792.,4096.,-4416.,4384.)
call Rect(-4448.,4480.,-4192.,5888.)
call Rect(-4448.,-5792.,-4224.,-4480.)
call Rect(-5632.,-4544.,-4416.,-4320.)
call Rect(-512.,-4736.,640.,-3968.)
set Rs=Rect(-896.,-5504.,-128.,-4352.)
set Ts=Rect(256.,-5504.,1024.,-4352.)
set Ys=Rect(-128.,-5120.,256.,-4736.)
call Rect(-512.,4096.,640.,4864.)
set Gs=Rect(256.,4480.,1024.,5632.)
set gs=Rect(-896.,4480.,-128.,5632.)
set hs=Rect(-128.,4864.,256.,5248.)
call Rect(-4736.,-512.,-3968.,640.)
set Fs=Rect(-5504.,256.,-4352.,1024.)
set ks=Rect(-5504.,-896.,-4352.,-200.)
set js=Rect(-5120.,-128.,-4736.,256.)
call Rect(4096.,-512.,4864.,640.)
set xs=Rect(4480.,-896.,5632.,-200.)
set vs=Rect(4480.,256.,5632.,1024.)
set ms=Rect(4864.,-128.,5248.,256.)
set bs=Rect(2560.,4352.,2688.,5600.)
set ys=Rect(4352.,2560.,5632.,2688.)
set ps=Rect(4352.,-2560.,5632.,-2432.)
set es=Rect(2560.,-5472.,2688.,-4224.)
set qs=Rect(-2560.,-5472.,-2432.,-4224.)
set as=Rect(-5504.,-2560.,-4224.,-2432.)
set ns=Rect(-5536.,2560.,-4256.,2688.)
set ds=Rect(-2560.,4352.,-2432.,5600.)
set bo=Rect(-960.,-5408.,-256.,-4512.)
set yo=Rect(-352.,-4608.,480.,-3904.)
set po=Rect(384.,-5408.,1088.,-4512.)
set eo=Rect(-5408.,-960.,-4512.,-256.)
set qo=Rect(-4608.,-352.,-3904.,480.)
set ao=Rect(-5408.,384.,-4512.,1088.)
set no=Rect(4640.,-960.,5536.,-256.)
set do=Rect(4032.,-352.,4736.,480.)
set fo=Rect(4640.,384.,5536.,1088.)
set Ro=Rect(-960.,4640.,-256.,5536.)
set To=Rect(-352.,4032.,480.,4736.)
set Yo=Rect(384.,4640.,1088.,5536.)
set fc=Rect(-1696.,-5472.,-1024.,-4416.)
set Rc=Rect(-2848.,-5472.,-2176.,-4416.)
set Tc=Rect(-4000.,-5472.,-3328.,-4416.)
set Yc=Rect(-5472.,-5504.,-4320.,-4320.)
set Gc=Rect(-5440.,-4000.,-4416.,-3328.)
set gc=Rect(-5440.,-2848.,-4416.,-2176.)
set hc=Rect(-5440.,-1696.,-4416.,-1024.)
set Fc=Rect(-448.,-3840.,576.,-3168.)
set kc=Rect(-448.,-2688.,576.,-2016.)
set jc=Rect(-448.,-1536.,576.,-864.)
set xc=Rect(1152.,-5472.,1824.,-4416.)
set vc=Rect(2304.,-5472.,2976.,-4416.)
set mc=Rect(3456.,-5472.,4128.,-4416.)
set Qc=Rect(4416.,-5408.,5536.,-4288.)
set Wc=Rect(4544.,-4000.,5568.,-3328.)
set Ec=Rect(4544.,-2848.,5568.,-2176.)
set Zc=Rect(4544.,-1696.,5568.,-1024.)
set Uc=Rect(-3840.,-448.,-3168.,576.)
set Ic=Rect(-2688.,-448.,-2016.,576.)
set Pc=Rect(-1536.,-448.,-864.,576.)
set Ac=Rect(3296.,-448.,3968.,576.)
set Dc=Rect(2144.,-448.,2816.,576.)
set Hc=Rect(992.,-448.,1664.,576.)
set Jc=Rect(-1696.,4544.,-1024.,5568.)
set Kc=Rect(-2848.,4544.,-2176.,5568.)
set Lc=Rect(-4000.,4544.,-3328.,5568.)
set Xc=Rect(-5440.,4416.,-4288.,5568.)
set Cc=Rect(-5440.,3456.,-4416.,4128.)
set Vc=Rect(-5440.,2304.,-4416.,2976.)
set Bc=Rect(-5440.,1152.,-4416.,1824.)
set Nc=Rect(-448.,3296.,576.,3968.)
set Mc=Rect(-448.,2144.,576.,2816.)
set wo=Rect(-448.,992.,576.,1664.)
set uo=Rect(1152.,4544.,1824.,5568.)
set ro=Rect(2304.,4544.,2976.,5568.)
set so=Rect(3456.,4544.,4128.,5568.)
set io=Rect(4416.,4416.,5600.,5568.)
set So=Rect(4544.,3456.,5568.,4128.)
set co=Rect(4544.,2304.,5568.,2976.)
set oo=Rect(4544.,1152.,5568.,1824.)
call Rect(-1376.,-5632.,1504.,-3488.)
call Rect(-5696.,-1344.,-3488.,1472.)
call Rect(3616.,-1344.,5824.,1536.)
call Rect(-1376.,3616.,1472.,5792.)
set yc=Rect(-512.,-512.,640.,640.)
set qc=Rect(-192.,-5184.,320.,-4672.)
set ac=Rect(-5184.,-192.,-4672.,320.)
set nc=Rect(4800.,-192.,5312.,320.)
set dc=Rect(-192.,4800.,320.,5312.)
set pc=Rect(-5728.,-5664.,-448.,-448.)
set ec=Rect(576.,-5696.,5856.,-448.)
set lo=Rect(576.,576.,5888.,5856.)
set Oo=Rect(-5728.,576.,-448.,5792.)
set VS=Rect(960.,4128.,4256.,4320.)
set tc=Rect(4064.,960.,4288.,4256.)
set ic=Rect(928.,1152.,4256.,1376.)
set Sc=Rect(1024.,832.,1248.,4160.)
set cc=Rect(768.,-1184.,4096.,-992.)
set oc=Rect(4096.,-4192.,4320.,-896.)
set Oc=Rect(1024.,-4192.,4320.,-4000.)
set lc=Rect(1120.,-4000.,1344.,-672.)
set bc=Rect(-4096.,-1152.,-768.,-960.)
set BS=Rect(-1184.,-4128.,-960.,-800.)
set NS=Rect(-4064.,-4224.,-736.,-4032.)
set MS=Rect(-4224.,-4224.,-4000.,-896.)
set wc=Rect(-3968.,4128.,-672.,4320.)
set uc=Rect(-1152.,800.,-928.,4128.)
set rc=Rect(-3968.,1088.,-672.,1248.)
set sc=Rect(-4160.,960.,-3936.,4288.)
call Y6i()
call InitBlizzard()
call yvw()
call FlushGameCache(InitGameCache("dr.x"))
set nr=InitGameCache("dr.x")
set cPp=CreateTrigger()
call TriggerAddCondition(cPp,Condition(HE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Abilities.","when calling error in Abilities, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AbilityIds.","when calling error in AbilityIds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Real.","when calling error in Real, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Integer.","when calling error in Integer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package String.","when calling error in String, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TargetsAllowed.","when calling error in TargetsAllowed, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Angle.","when calling error in Angle, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Vectors.","when calling error in Vectors, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NE))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Player.","when calling error in Player, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ME))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Destructable.","when calling error in Destructable, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Group.","when calling error in Group, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MagicFunctions.","when calling error in MagicFunctions, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Table.","when calling error in Table, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Playercolor.","when calling error in Playercolor, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Maths.","when calling error in Maths, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Colors.","when calling error in Colors, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Printing.","when calling error in Printing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Basics.","when calling error in Basics, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GameTimer.","when calling error in GameTimer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ErrorHandling.","when calling error in ErrorHandling, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Lightning.","when calling error in Lightning, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package WeatherEffects.","when calling error in WeatherEffects, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TypeCasting.","when calling error in TypeCasting, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AbilityObjEditing.","when calling error in AbilityObjEditing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UpgradeObjEditing.","when calling error in UpgradeObjEditing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ClosureForGroups.","when calling error in ClosureForGroups, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LinkedList.","when calling error in LinkedList, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ObjectIds.","when calling error in ObjectIds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MapBounds.","when calling error in MapBounds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UnitIds.","when calling error in UnitIds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Icons.","when calling error in Icons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DummyRecycler.","when calling error in DummyRecycler, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HashList.","when calling error in HashList, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TimerUtils.","when calling error in TimerUtils, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ClosureTimers.","when calling error in ClosureTimers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Preloader.","when calling error in Preloader, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ObjectIdGenerator.","when calling error in ObjectIdGenerator, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RegisterEvents.","when calling error in RegisterEvents, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleArakkoa.","when calling error in MainCastleArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Adaptation.","when calling error in Adaptation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HighStatus.","when calling error in HighStatus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Iglarion.","when calling error in Iglarion, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BracersOfAntiMagic.","when calling error in BracersOfAntiMagic, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package IceSword.","when calling error in IceSword, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VampireFangs.","when calling error in VampireFangs, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Nightmare.","when calling error in Nightmare, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EmeraldDream.","when calling error in EmeraldDream, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Orders.","when calling error in Orders, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SleepAura.","when calling error in SleepAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShadowStrike.","when calling error in ShadowStrike, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeartOfDecay.","when calling error in HeartOfDecay, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Izera.","when calling error in Izera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierThree.","when calling error in ItemsTierThree, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpellShieldAmulet.","when calling error in SpellShieldAmulet, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Flamethrower.","when calling error in Flamethrower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PocketFactory.","when calling error in PocketFactory, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Kaboom.","when calling error in Kaboom, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package XZ.","when calling error in XZ, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package QualityGuarantee.","when calling error in QualityGuarantee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MZ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RepairKit.","when calling error in RepairKit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RocketLauncher.","when calling error in RocketLauncher, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpareReactor.","when calling error in SpareReactor, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Whirlwind.","when calling error in Whirlwind, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ValeeraSWrath.","when calling error in ValeeraSWrath, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PoisonedWeapons.","when calling error in PoisonedWeapons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SmokeBomb.","when calling error in SmokeBomb, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GlobalFunc.","when calling error in GlobalFunc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Valira.","when calling error in Valira, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CrimsonBlades.","when calling error in CrimsonBlades, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GladiatorRing.","when calling error in GladiatorRing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EgwinsVision.","when calling error in EgwinsVision, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VvariansGift.","when calling error in VvariansGift, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodPact.","when calling error in BloodPact, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageS.","when calling error in MageS, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleRogue.","when calling error in MainCastleRogue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Medivh.","when calling error in Medivh, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AxeofCenarius.","when calling error in AxeofCenarius, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Talnos.","when calling error in Talnos, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BoneBells.","when calling error in BoneBells, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RitualDagger.","when calling error in RitualDagger, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScrollOfDamned.","when calling error in ScrollOfDamned, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Ikar.","when calling error in Ikar, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KillMana.","when calling error in KillMana, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastlePandaren.","when calling error in MainCastlePandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Xiang.","when calling error in Xiang, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenAmulet.","when calling error in PandarenAmulet, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ElementalConvergence.","when calling error in ElementalConvergence, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DragonStaff.","when calling error in DragonStaff, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DragonStone.","when calling error in DragonStone, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageDopDamage.","when calling error in MageDopDamage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TheEpiphanyOfDeath.","when calling error in TheEpiphanyOfDeath, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Terokk.","when calling error in Terokk, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierFour.","when calling error in ItemsTierFour, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierSphera.","when calling error in ItemsTierSphera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Himeron.","when calling error in Himeron, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AddItem.","when calling error in AddItem, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AddUnits.","when calling error in AddUnits, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AgroBaza.","when calling error in AgroBaza, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BountyHunter.","when calling error in BountyHunter, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RareVenom.","when calling error in RareVenom, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StunGrenade.","when calling error in StunGrenade, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlintEvasion.","when calling error in FlintEvasion, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlintShadowmore.","when calling error in FlintShadowmore, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AgruHeroes.","when calling error in AgruHeroes, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Airship.","when calling error in Airship, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Transmute.","when calling error in Transmute, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Alchemist.","when calling error in Alchemist, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InfoSatyr.","when calling error in InfoSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PricklyRoots.","when calling error in PricklyRoots, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PredatoryForest.","when calling error in PredatoryForest, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MU))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleSatyr.","when calling error in MainCastleSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LastForPower.","when calling error in LastForPower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StandardTextTags.","when calling error in StandardTextTags, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PerfectMechanisms.","when calling error in PerfectMechanisms, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KoboldSlaves.","when calling error in KoboldSlaves, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TimerSpawnBarake.","when calling error in TimerSpawnBarake, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleVulpera.","when calling error in MainCastleVulpera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleDraconid.","when calling error in MainCastleDraconid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MB2.","when calling error in MB2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CreateMB.","when calling error in CreateMB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemCraftCheck.","when calling error in ItemCraftCheck, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsBonus.","when calling error in ItemsBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FinaleMult2.","when calling error in FinaleMult2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FinaleMult.","when calling error in FinaleMult, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EmergencyRepair.","when calling error in EmergencyRepair, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GlobalUW.","when calling error in GlobalUW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FocusedUW.","when calling error in FocusedUW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaCombustion.","when calling error in ManaCombustion, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaShieldBlood.","when calling error in ManaShieldBlood, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaSteal.","when calling error in ManaSteal, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PrecisionUW.","when calling error in PrecisionUW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InstantDummyCaster.","when calling error in InstantDummyCaster, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpellShield.","when calling error in SpellShield, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package beastsStrenght.","when calling error in beastsStrenght, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AltarGold.","when calling error in AltarGold, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Wukong.","when calling error in Wukong, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArmyOfSkeletons.","when calling error in ArmyOfSkeletons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Income.","when calling error in Income, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PoisonFix.","when calling error in PoisonFix, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Cataclizm.","when calling error in Cataclizm, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondB.","when calling error in GalagrondB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DragonForge.","when calling error in DragonForge, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KorgallTWO.","when calling error in KorgallTWO, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BoxArakkoa.","when calling error in BoxArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package WAAAAAAAAAAAAAAGH.","when calling error in WAAAAAAAAAAAAAAGH, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LosePlayer.","when calling error in LosePlayer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sumo.","when calling error in Sumo, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Hong.","when calling error in Hong, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(II))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlamesTotemSU.","when calling error in FlamesTotemSU, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Raivo.","when calling error in Raivo, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarianHall.","when calling error in PandarianHall, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Drunkmaster.","when calling error in Drunkmaster, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PanT1Mage.","when calling error in PanT1Mage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PanT2Mage.","when calling error in PanT2Mage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PanT3Mage.","when calling error in PanT3Mage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SourceOfMagicPandaren.","when calling error in SourceOfMagicPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DrunkmasterUp.","when calling error in DrunkmasterUp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MagicShuriken.","when calling error in MagicShuriken, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EvasionUp.","when calling error in EvasionUp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenRider.","when calling error in PandarenRider, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodT2MeleeBonus.","when calling error in BloodT2MeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MI))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Jinto.","when calling error in Jinto, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandaAura.","when calling error in PandaAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SharpEye.","when calling error in SharpEye, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MoreBeer.","when calling error in MoreBeer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Brewmaster.","when calling error in Brewmaster, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sinjo.","when calling error in Sinjo, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BattleTrophies.","when calling error in BattleTrophies, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HomingMissiles.","when calling error in HomingMissiles, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ElementalShrine.","when calling error in ElementalShrine, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenArcher.","when calling error in PandarenArcher, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FireworkTeam.","when calling error in FireworkTeam, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package XiangB.","when calling error in XiangB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FoundationPandaren.","when calling error in FoundationPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsPandaren.","when calling error in InitGreidsPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistPandarenB.","when calling error in RezistPandarenB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenKeshi.","when calling error in PandarenKeshi, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenCata.","when calling error in PandarenCata, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusPandaren.","when calling error in PickBonusPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageAT1.","when calling error in MageAT1, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageAT2.","when calling error in MageAT2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageAT3.","when calling error in MageAT3, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VoidWisp.","when calling error in VoidWisp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageAT4.","when calling error in MageAT4, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SourceOfMagicArakkoa.","when calling error in SourceOfMagicArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistUnit.","when calling error in RezistUnit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaMelee.","when calling error in ArakkoaMelee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaWarior.","when calling error in ArakkoaWarior, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaWariorB.","when calling error in ArakkoaWariorB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DarknessEnthroned.","when calling error in DarknessEnthroned, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NightsEmbrace.","when calling error in NightsEmbrace, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MageArakk.","when calling error in MageArakk, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ExaltedOracles.","when calling error in ExaltedOracles, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DarknessMastery.","when calling error in DarknessMastery, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeepSlash.","when calling error in DeepSlash, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package WingedArrows.","when calling error in WingedArrows, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaArtillery.","when calling error in ArakkoaArtillery, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaTower.","when calling error in ArakkoaTower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidArakkoa.","when calling error in InitGreidArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Apex.","when calling error in Apex, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AxeThrower.","when calling error in AxeThrower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HighbornRavens.","when calling error in HighbornRavens, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RoyalGuard.","when calling error in RoyalGuard, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Veilweaver.","when calling error in Veilweaver, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package IskarB.","when calling error in IskarB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaSiege.","when calling error in ArakkoaSiege, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaRange.","when calling error in ArakkoaRange, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbofDarkness.","when calling error in OrbofDarkness, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusArakkoa.","when calling error in PickBonusArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Viryx.","when calling error in Viryx, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Reshad.","when calling error in Reshad, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaBarraks.","when calling error in ArakkoaBarraks, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MP))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaFoundation.","when calling error in ArakkoaFoundation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaFlyight.","when calling error in ArakkoaFlyight, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Nefarian.","when calling error in Nefarian, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sinestra.","when calling error in Sinestra, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Devour.","when calling error in Devour, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KingsOfSlaughter.","when calling error in KingsOfSlaughter, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LurkingStalkers.","when calling error in LurkingStalkers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ReflectiveScales.","when calling error in ReflectiveScales, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsDraconid.","when calling error in InitGreidsDraconid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidMageBonus.","when calling error in DraconidMageBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidArtileryB.","when calling error in DraconidArtileryB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidAoE.","when calling error in DraconidAoE, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidHealUp.","when calling error in DraconidHealUp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondBlue.","when calling error in GalagrondBlue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidUpgrade.","when calling error in DraconidUpgrade, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickUltimateSpellbook.","when calling error in PickUltimateSpellbook, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaShield.","when calling error in ManaShield, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickUltimate.","when calling error in PickUltimate, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraaconidBonusSpell.","when calling error in DraaconidBonusSpell, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CorrosiveSplitIlGinot.","when calling error in CorrosiveSplitIlGinot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondGreen.","when calling error in GalagrondGreen, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidSoulEho.","when calling error in DraconidSoulEho, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidGolem.","when calling error in DraconidGolem, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondPurple.","when calling error in GalagrondPurple, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconMy.","when calling error in DraconMy, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondRed.","when calling error in GalagrondRed, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GalagrondRainbow.","when calling error in GalagrondRainbow, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KikajikasSalary.","when calling error in KikajikasSalary, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TheEssenceofGybridsSoul.","when calling error in TheEssenceofGybridsSoul, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DragonSphere.","when calling error in DragonSphere, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusDraconid.","when calling error in PickBonusDraconid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidTower.","when calling error in DraconidTower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidFoundation.","when calling error in DraconidFoundation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Garithos.","when calling error in Garithos, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sally.","when calling error in Sally, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CompositeArmor.","when calling error in CompositeArmor, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlameTongue.","when calling error in FlameTongue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BurningOil.","when calling error in BurningOil, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FloorElevator.","when calling error in FloorElevator, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MercenaryCamp.","when calling error in MercenaryCamp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CriticalStrike.","when calling error in CriticalStrike, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Enforcer.","when calling error in Enforcer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Marauder.","when calling error in Marauder, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PegasusRider.","when calling error in PegasusRider, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HERounds.","when calling error in HERounds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Mortar.","when calling error in Mortar, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeathFromAfar.","when calling error in DeathFromAfar, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FieldUpgrade.","when calling error in FieldUpgrade, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AnimalWarTraining.","when calling error in AnimalWarTraining, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sorcerer.","when calling error in Sorcerer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BanishedSorcerers.","when calling error in BanishedSorcerers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MA))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Bandit.","when calling error in Bandit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VeteranFootmen.","when calling error in VeteranFootmen, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Axemen.","when calling error in Axemen, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CriticalHit.","when calling error in CriticalHit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Brigand.","when calling error in Brigand, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VeteranScum.","when calling error in VeteranScum, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DirtyFighting.","when calling error in DirtyFighting, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BlackKnights.","when calling error in BlackKnights, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DishonoredKnights.","when calling error in DishonoredKnights, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InspirationAura.","when calling error in InspirationAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShieldTraining.","when calling error in ShieldTraining, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MortarTower.","when calling error in MortarTower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Javeliner.","when calling error in Javeliner, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RogueWizard.","when calling error in RogueWizard, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AmbushTactics.","when calling error in AmbushTactics, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BlackGryphon.","when calling error in BlackGryphon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MaximumOffence.","when calling error in MaximumOffence, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Poison.","when calling error in Poison, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TheLastGuardian.","when calling error in TheLastGuardian, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FoundationRogue.","when calling error in FoundationRogue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AntiHeroBonus.","when calling error in AntiHeroBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaFoundation.","when calling error in VulperaFoundation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OutintheWilds.","when calling error in OutintheWilds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeartOfTheChaosRealm.","when calling error in HeartOfTheChaosRealm, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NeutralStructures.","when calling error in NeutralStructures, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsVulpera.","when calling error in InitGreidsVulpera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Eudora.","when calling error in Eudora, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaHeroBonus.","when calling error in VulperaHeroBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaRezist.","when calling error in VulperaRezist, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaHeroArksay.","when calling error in VulperaHeroArksay, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CleavingAttackSatyr.","when calling error in CleavingAttackSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Arksay.","when calling error in Arksay, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AmuletOfTheDamned.","when calling error in AmuletOfTheDamned, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SacrificialDagger.","when calling error in SacrificialDagger, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusVulpera.","when calling error in PickBonusVulpera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ED))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CursedPower.","when calling error in CursedPower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemonicFire.","when calling error in DemonicFire, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShadowWordDEATH.","when calling error in ShadowWordDEATH, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ID))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SourceOfMagicSatyr.","when calling error in SourceOfMagicSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BatlleRage.","when calling error in BatlleRage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpoiledTreant.","when calling error in SpoiledTreant, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SharpBranches.","when calling error in SharpBranches, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PhantomPower.","when calling error in PhantomPower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PlagueTreant.","when calling error in PlagueTreant, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GuardiansOfTheCursedForest.","when calling error in GuardiansOfTheCursedForest, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FertileGround.","when calling error in FertileGround, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitTriggerSatyrUp.","when calling error in InitTriggerSatyrUp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CurseOfTheRace.","when calling error in CurseOfTheRace, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpellResistSatyr.","when calling error in SpellResistSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AssasinsDexterity.","when calling error in AssasinsDexterity, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ND))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DenialOfmagic.","when calling error in DenialOfmagic, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MD))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package satyrAssasin.","when calling error in satyrAssasin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DefenderOfTheNation.","when calling error in DefenderOfTheNation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InstillingFear.","when calling error in InstillingFear, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SatyrLeader.","when calling error in SatyrLeader, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KeeperOfTheEmeraldDream.","when calling error in KeeperOfTheEmeraldDream, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SatyrIllusionis.","when calling error in SatyrIllusionis, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ThePortalToTheNightmare.","when calling error in ThePortalToTheNightmare, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EmeraldNightmare.","when calling error in EmeraldNightmare, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RenunciationOfFilth.","when calling error in RenunciationOfFilth, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ObscureDragon.","when calling error in ObscureDragon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusSatyr.","when calling error in PickBonusSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Bloodlust.","when calling error in Bloodlust, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package IlGinot.","when calling error in IlGinot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemonicFortitude.","when calling error in DemonicFortitude, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeathPact.","when calling error in DeathPact, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Xavius.","when calling error in Xavius, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DarKSpirits.","when calling error in DarKSpirits, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArmyOfTheDead.","when calling error in ArmyOfTheDead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DesecrationOfTheSoul.","when calling error in DesecrationOfTheSoul, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DarkRitual.","when calling error in DarkRitual, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Kepereter.","when calling error in Kepereter, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TheCurseOfChaos.","when calling error in TheCurseOfChaos, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CursedRoots.","when calling error in CursedRoots, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AuraOfThist.","when calling error in AuraOfThist, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FingerOfDeath.","when calling error in FingerOfDeath, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Eleret.","when calling error in Eleret, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FoundationSatyr.","when calling error in FoundationSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SatyrSoulStealer.","when calling error in SatyrSoulStealer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SatyrTrickster.","when calling error in SatyrTrickster, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShadowArmor.","when calling error in ShadowArmor, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Defiler.","when calling error in Defiler, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KnightOfNightmares.","when calling error in KnightOfNightmares, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CorruptedAncientDefender.","when calling error in CorruptedAncientDefender, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NightmareDragon.","when calling error in NightmareDragon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CriticalStrikeSatyr.","when calling error in CriticalStrikeSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StormHammers.","when calling error in StormHammers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DevotionAura.","when calling error in DevotionAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DopUnit.","when calling error in DopUnit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsHuman.","when calling error in InitGreidsHuman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EliteKnights.","when calling error in EliteKnights, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TemplarStatue.","when calling error in TemplarStatue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Pegasus.","when calling error in Pegasus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitHumanBonus.","when calling error in InitHumanBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EnduranceAura.","when calling error in EnduranceAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BattleFrenzy.","when calling error in BattleFrenzy, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsOrc.","when calling error in InitGreidsOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VoltrakB.","when calling error in VoltrakB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GnollMina.","when calling error in GnollMina, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BlackrockSpearthrower.","when calling error in BlackrockSpearthrower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbOfLight.","when calling error in OrbOfLight, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistOrk.","when calling error in RezistOrk, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MH))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Warlock.","when calling error in Warlock, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitBonusOrc.","when calling error in InitBonusOrc, line 2")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DwarfMeleeBonus.","when calling error in DwarfMeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SourceOfMagicDwarf.","when calling error in SourceOfMagicDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistDwarf.","when calling error in RezistDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DwarfRangeBonus.","when calling error in DwarfRangeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NightElfSiegeBonus2.","when calling error in NightElfSiegeBonus2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusDwarf.","when calling error in PickBonusDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NightElfMageBonus.","when calling error in NightElfMageBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ServantOfTheNight.","when calling error in ServantOfTheNight, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Vengeance.","when calling error in Vengeance, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BearForm.","when calling error in BearForm, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsNightElf.","when calling error in InitGreidsNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MalorneB.","when calling error in MalorneB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Teldrassil.","when calling error in Teldrassil, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EliteHuntress.","when calling error in EliteHuntress, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistNightElf.","when calling error in RezistNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusNightElf.","when calling error in PickBonusNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CrusaderBonus.","when calling error in CrusaderBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ThistForMagic.","when calling error in ThistForMagic, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArcaneAura.","when calling error in ArcaneAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package IncineratingArrows.","when calling error in IncineratingArrows, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodSacrifise.","when calling error in BloodSacrifise, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodT1Melee.","when calling error in BloodT1Melee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodT2Melee.","when calling error in BloodT2Melee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package EnergyAbsorption.","when calling error in EnergyAbsorption, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidBloodElf.","when calling error in InitGreidBloodElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArcaneMastery.","when calling error in ArcaneMastery, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbofFire.","when calling error in OrbofFire, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusBloodElf.","when calling error in PickBonusBloodElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TotemOfMight.","when calling error in TotemOfMight, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsTauren.","when calling error in InitGreidsTauren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodhoofVeterans.","when calling error in BloodhoofVeterans, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AxemanWariorB.","when calling error in AxemanWariorB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpiritProtection.","when calling error in SpiritProtection, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TaurenMageBonus.","when calling error in TaurenMageBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusTauren.","when calling error in PickBonusTauren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TechnologicalBreakthrought.","when calling error in TechnologicalBreakthrought, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RezistGoblin.","when calling error in RezistGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusGoblin.","when calling error in PickBonusGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ImpenetrabliHide.","when calling error in ImpenetrabliHide, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MindControl.","when calling error in MindControl, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Berserk.","when calling error in Berserk, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsTroll.","when calling error in InitGreidsTroll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ZulJinB.","when calling error in ZulJinB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KulGhan.","when calling error in KulGhan, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TrollTurtle.","when calling error in TrollTurtle, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TrollTurtleB.","when calling error in TrollTurtleB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusTroll.","when calling error in PickBonusTroll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleDemon.","when calling error in MainCastleDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpikedSkin.","when calling error in SpikedSkin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MJ))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FearAuraDemon.","when calling error in FearAuraDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VileBlood.","when calling error in VileBlood, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SoulEcho.","when calling error in SoulEcho, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsDemon.","when calling error in InitGreidsDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbOfCorruptionPick.","when calling error in OrbOfCorruptionPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusDemon.","when calling error in PickBonusDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleFelOrc.","when calling error in MainCastleFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FelShield.","when calling error in FelShield, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FelBlades.","when calling error in FelBlades, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsFelOrc.","when calling error in InitGreidsFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusFelOrc.","when calling error in PickBonusFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FeedingFrenzy.","when calling error in FeedingFrenzy, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Mockery.","when calling error in Mockery, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShieldShatter.","when calling error in ShieldShatter, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsGnoll.","when calling error in InitGreidsGnoll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MastersOfAmbush.","when calling error in MastersOfAmbush, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GnollT1MageBonus.","when calling error in GnollT1MageBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GnollT2SiegeBonus.","when calling error in GnollT2SiegeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TrainedWarHogs.","when calling error in TrainedWarHogs, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScavengingNature.","when calling error in ScavengingNature, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusGnoll.","when calling error in PickBonusGnoll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ConcussiveShot.","when calling error in ConcussiveShot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Marksmanship.","when calling error in Marksmanship, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MightySwing.","when calling error in MightySwing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Prediction.","when calling error in Prediction, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsKultiras.","when calling error in InitGreidsKultiras, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KultirasT1MeleeBonus.","when calling error in KultirasT1MeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package WaterPower.","when calling error in WaterPower, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HolyReflection.","when calling error in HolyReflection, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Expeditions.","when calling error in Expeditions, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusKultiras.","when calling error in PickBonusKultiras, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Garfang.","when calling error in Garfang, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleUndead.","when calling error in MainCastleUndead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CorruptionAura.","when calling error in CorruptionAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeadAnimation.","when calling error in DeadAnimation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ImpenetrableFlesh.","when calling error in ImpenetrableFlesh, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Crypt.","when calling error in Crypt, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DiseaseCloud.","when calling error in DiseaseCloud, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SoulRip.","when calling error in SoulRip, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InitGreidsUndead.","when calling error in InitGreidsUndead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Gallio.","when calling error in Gallio, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CurseOfTheBanshee.","when calling error in CurseOfTheBanshee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sylwanas.","when calling error in Sylwanas, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UndeadT1MeleeBonus.","when calling error in UndeadT1MeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickBonusUndead.","when calling error in PickBonusUndead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Samuro.","when calling error in Samuro, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Hiram.","when calling error in Hiram, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Zalashyr.","when calling error in Zalashyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RoyalGuardNaga.","when calling error in RoyalGuardNaga, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Anduin.","when calling error in Anduin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesSound.","when calling error in HeroesSound, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MK))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickNagaBonus.","when calling error in PickNagaBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PickRace.","when calling error in PickRace, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AllPickRace.","when calling error in AllPickRace, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AnyiHeroPick.","when calling error in AnyiHeroPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AntiHeroGoldAdd.","when calling error in AntiHeroGoldAdd, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AntiUltDraconid.","when calling error in AntiUltDraconid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AntiUltPandaren.","when calling error in AntiUltPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Antihero.","when calling error in Antihero, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ArakkoaArtilleryBonus.","when calling error in ArakkoaArtilleryBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Armagedon.","when calling error in Armagedon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AssassinsHelpers.","when calling error in AssassinsHelpers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpecialUnits.","when calling error in SpecialUnits, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AsassinsBehavior.","when calling error in AsassinsBehavior, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package AttackBot.","when calling error in AttackBot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Baine.","when calling error in Baine, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BerserkEf.","when calling error in BerserkEf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BlackPearl.","when calling error in BlackPearl, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BlackrockSpearthrowerB.","when calling error in BlackrockSpearthrowerB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodAir.","when calling error in BloodAir, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodArtillery.","when calling error in BloodArtillery, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodMage.","when calling error in BloodMage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodRange.","when calling error in BloodRange, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CritikalStrikeMarksman.","when calling error in CritikalStrikeMarksman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BloodRangeBonus.","when calling error in BloodRangeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Bombardier.","when calling error in Bombardier, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BountyHunterEvent.","when calling error in BountyHunterEvent, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BronzeDragonB.","when calling error in BronzeDragonB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleBloodElf.","when calling error in MainCastleBloodElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleDwarf.","when calling error in MainCastleDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleGoblin.","when calling error in MainCastleGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleHuman.","when calling error in MainCastleHuman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleNaga.","when calling error in MainCastleNaga, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VorpalDaggers.","when calling error in VorpalDaggers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleNightElf.","when calling error in MainCastleNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleOrc.","when calling error in MainCastleOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleTauren.","when calling error in MainCastleTauren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleTroll.","when calling error in MainCastleTroll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Castles.","when calling error in Castles, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesBloodElf.","when calling error in HeroesBloodElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesDemon.","when calling error in HeroesDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesDwarf.","when calling error in HeroesDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesFelOrc.","when calling error in HeroesFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesGoblin.","when calling error in HeroesGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesHuman.","when calling error in HeroesHuman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesNaga.","when calling error in HeroesNaga, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesNightElf.","when calling error in HeroesNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesOrc.","when calling error in HeroesOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesTauren.","when calling error in HeroesTauren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesTroll.","when calling error in HeroesTroll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesUndead.","when calling error in HeroesUndead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NL))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsBloodEld.","when calling error in HeroesIconsBloodEld, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ML))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsDemon.","when calling error in HeroesIconsDemon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsDwarf.","when calling error in HeroesIconsDwarf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsFelOrc.","when calling error in HeroesIconsFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsGoblin.","when calling error in HeroesIconsGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsHuman.","when calling error in HeroesIconsHuman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsNaga.","when calling error in HeroesIconsNaga, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsNightElf.","when calling error in HeroesIconsNightElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsOrc.","when calling error in HeroesIconsOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsTauren.","when calling error in HeroesIconsTauren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsTroll.","when calling error in HeroesIconsTroll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsUndead.","when calling error in HeroesIconsUndead, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsSatyr.","when calling error in HeroesIconsSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsVulpera.","when calling error in HeroesIconsVulpera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsRogue.","when calling error in HeroesIconsRogue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsArakkoa.","when calling error in HeroesIconsArakkoa, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsPandaren.","when calling error in HeroesIconsPandaren, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsDraconid.","when calling error in HeroesIconsDraconid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroIconsStore.","when calling error in HeroIconsStore, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierOne.","when calling error in ItemsTierOne, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierTwo.","when calling error in ItemsTierTwo, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierOneIcons.","when calling error in ItemsTierOneIcons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierTwoIcons.","when calling error in ItemsTierTwoIcons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierThreeIcons.","when calling error in ItemsTierThreeIcons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierFourIcons.","when calling error in ItemsTierFourIcons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemsTierSpheraIcons.","when calling error in ItemsTierSpheraIcons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroItems.","when calling error in HeroItems, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShardsIcon.","when calling error in ShardsIcon, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InventoryStore.","when calling error in InventoryStore, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemMerchantPick.","when calling error in ItemMerchantPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SaveHero.","when calling error in SaveHero, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroIconsGnoll.","when calling error in HeroIconsGnoll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesIconsKultiras.","when calling error in HeroesIconsKultiras, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NewInventory.","when calling error in NewInventory, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemMerchantAdd.","when calling error in ItemMerchantAdd, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package BuyCreeps.","when calling error in BuyCreeps, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CastleRainOfChaos.","when calling error in CastleRainOfChaos, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ClearItem.","when calling error in ClearItem, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CleavingAttack.","when calling error in CleavingAttack, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ComandEnd.","when calling error in ComandEnd, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CraftItemsNew.","when calling error in CraftItemsNew, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CriticalHitT.","when calling error in CriticalHitT, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CrucialHitSatyr.","when calling error in CrucialHitSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Desecration.","when calling error in Desecration, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VoidAbility.","when calling error in VoidAbility, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FelVoid.","when calling error in FelVoid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TheVoid.","when calling error in TheVoid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package CurseUW.","when calling error in CurseUW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DaelinProudmooreK.","when calling error in DaelinProudmooreK, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeadDummy.","when calling error in DeadDummy, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeathGold.","when calling error in DeathGold, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DeathInTheShadow.","when calling error in DeathInTheShadow, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MX))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Deathpaw.","when calling error in Deathpaw, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DecayAuraSatyr.","when calling error in DecayAuraSatyr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Defend.","when calling error in Defend, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DefendDwarfGr.","when calling error in DefendDwarfGr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MirrorImageFelOrc.","when calling error in MirrorImageFelOrc, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DefiledReaction.","when calling error in DefiledReaction, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DefilerBonus.","when calling error in DefilerBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemolitionEgspert.","when calling error in DemolitionEgspert, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemolotionTeam.","when calling error in DemolotionTeam, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemonMage.","when calling error in DemonMage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DemonMeleeBonus.","when calling error in DemonMeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TrueCHAOS.","when calling error in TrueCHAOS, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DesecratedSouls.","when calling error in DesecratedSouls, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DopPick.","when calling error in DopPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidBarracks.","when calling error in DraconidBarracks, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidHealStructures.","when calling error in DraconidHealStructures, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidMeleeBonus.","when calling error in DraconidMeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidRangeBonus.","when calling error in DraconidRangeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DraconidSummons.","when calling error in DraconidSummons, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package DwarfMeleeBonus2.","when calling error in DwarfMeleeBonus2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ExaltedOraclesB.","when calling error in ExaltedOraclesB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FacelessTerror.","when calling error in FacelessTerror, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FastPaws.","when calling error in FastPaws, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Fatigue.","when calling error in Fatigue, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FelStone.","when calling error in FelStone, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FelT2MeleeBonus.","when calling error in FelT2MeleeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Filters.","when calling error in Filters, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FindersKeepers.","when calling error in FindersKeepers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FireBreath.","when calling error in FireBreath, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlameBarrage.","when calling error in FlameBarrage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlameTonguee.","when calling error in FlameTonguee, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FlamingRounds.","when calling error in FlamingRounds, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FloorElevatorConnector.","when calling error in FloorElevatorConnector, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FormAddHash.","when calling error in FormAddHash, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package FrostBreathe.","when calling error in FrostBreathe, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GoblinMine.","when calling error in GoblinMine, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GoblinMineTinker.","when calling error in GoblinMineTinker, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GoodCommander.","when calling error in GoodCommander, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package GuffRunetotem.","when calling error in GuffRunetotem, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Gurlash.","when calling error in Gurlash, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Gush.","when calling error in Gush, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeadHunter.","when calling error in HeadHunter, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeatAura.","when calling error in HeatAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HeroesType.","when calling error in HeroesType, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package HighbornRavensB.","when calling error in HighbornRavensB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Hogger.","when calling error in Hogger, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package IceWall.","when calling error in IceWall, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Illidan.","when calling error in Illidan, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Initialization.","when calling error in Initialization, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InnerFire.","when calling error in InnerFire, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package InspirationAuraGoblin.","when calling error in InspirationAuraGoblin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MC))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemHeroesStats.","when calling error in ItemHeroesStats, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ItemMerchantSell.","when calling error in ItemMerchantSell, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package JainaProudmooreK.","when calling error in JainaProudmooreK, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Jenoth.","when calling error in Jenoth, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package JintoB.","when calling error in JintoB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Kazzak.","when calling error in Kazzak, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KelThuzadGhost.","when calling error in KelThuzadGhost, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KeshaB.","when calling error in KeshaB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Kiro.","when calling error in Kiro, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KulGhanPick.","when calling error in KulGhanPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KultirasT1MageBonus.","when calling error in KultirasT1MageBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package KultirasT2SiegeBonus.","when calling error in KultirasT2SiegeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LaunchUltimate.","when calling error in LaunchUltimate, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LeaveGame.","when calling error in LeaveGame, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LesserInfernal.","when calling error in LesserInfernal, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Liadrin.","when calling error in Liadrin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LichKing.","when calling error in LichKing, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package LoBLOW.","when calling error in LoBLOW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Lorhtemar.","when calling error in Lorhtemar, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Magic2.","when calling error in Magic2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Magic3.","when calling error in Magic3, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleGnoll.","when calling error in MainCastleGnoll, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MainCastleKultiras.","when calling error in MainCastleKultiras, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Malorne.","when calling error in Malorne, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Malorne3.","when calling error in Malorne3, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaBurn.","when calling error in ManaBurn, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ManaBurnW.","when calling error in ManaBurnW, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MannorothBlood.","when calling error in MannorothBlood, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Marksman.","when calling error in Marksman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MeltingArmour.","when calling error in MeltingArmour, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MissileLaunchers.","when calling error in MissileLaunchers, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package MoveUnits.","when calling error in MoveUnits, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Multishot.","when calling error in Multishot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Muradin.","when calling error in Muradin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NaturalsVaprizim.","when calling error in NaturalsVaprizim, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NazjatarGateB.","when calling error in NazjatarGateB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NewRandom.","when calling error in NewRandom, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NightElfArtBonus.","when calling error in NightElfArtBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Nisha.","when calling error in Nisha, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NoOneEscapesDeath.","when calling error in NoOneEscapesDeath, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TaurenRangeBonus.","when calling error in TaurenRangeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package NraqiOverseer.","when calling error in NraqiOverseer, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OldMBFunction.","when calling error in OldMBFunction, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbOfAnnihilation.","when calling error in OrbOfAnnihilation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package OrbOfNature.","when calling error in OrbOfNature, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenCataB.","when calling error in PandarenCataB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenT3AirBonus.","when calling error in PandarenT3AirBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PandarenWariorB.","when calling error in PandarenWariorB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ParalysisAura.","when calling error in ParalysisAura, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ParasitAgr.","when calling error in ParasitAgr, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PhysicalPeak.","when calling error in PhysicalPeak, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MV))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PillageOrk.","when calling error in PillageOrk, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Pounce.","when calling error in Pounce, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package PreloadDummyAbilities.","when calling error in PreloadDummyAbilities, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Ragepyre.","when calling error in Ragepyre, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RecyclingFactory.","when calling error in RecyclingFactory, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ReignOfChaos.","when calling error in ReignOfChaos, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ResearchUp.","when calling error in ResearchUp, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TournamentMode.","when calling error in TournamentMode, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ThreeRacePick.","when calling error in ThreeRacePick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ResolveHCLMode.","when calling error in ResolveHCLMode, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(OB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Rock.","when calling error in Rock, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(lB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RogueT3Bonus2.","when calling error in RogueT3Bonus2, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(bB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package RoyalGuardB.","when calling error in RoyalGuardB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(yB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Sagepaw.","when calling error in Sagepaw, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(pB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScarpBotPick.","when calling error in ScarpBotPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(eB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScrapBot.","when calling error in ScrapBot, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(qB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScrapBotAb.","when calling error in ScrapBotAb, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(aB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ScrapSalvage.","when calling error in ScrapSalvage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(nB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SearingArrowsHuman.","when calling error in SearingArrowsHuman, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(dB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SelectSkill.","when calling error in SelectSkill, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(fB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ShredderSpears.","when calling error in ShredderSpears, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(RB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SiegeTeam.","when calling error in SiegeTeam, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(TB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SinjoB.","when calling error in SinjoB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(YB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SkyHydra.","when calling error in SkyHydra, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(GB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Snapjaw.","when calling error in Snapjaw, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(gB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SoundsVulpera.","when calling error in SoundsVulpera, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(hB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SourceOfMagicBloodElf.","when calling error in SourceOfMagicBloodElf, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(FB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpawnScorpid.","when calling error in SpawnScorpid, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(kB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpikedFortification.","when calling error in SpikedFortification, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(jB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpiritOfCorruption.","when calling error in SpiritOfCorruption, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(xB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package SpiritRealm.","when calling error in SpiritRealm, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(vB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StunAgroFix.","when calling error in StunAgroFix, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(mB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StymRollerPick.","when calling error in StymRollerPick, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(QB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package StymRollerUn.","when calling error in StymRollerUn, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(WB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Succudus.","when calling error in Succudus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(EB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package T2MageKultiras.","when calling error in T2MageKultiras, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(ZB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TaurenMage.","when calling error in TaurenMage, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(UB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TechCountSimpleSwaped.","when calling error in TechCountSimpleSwaped, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(IB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TestAI.","when calling error in TestAI, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(PB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Tinker.","when calling error in Tinker, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(AB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Trall.","when calling error in Trall, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(DB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Transmutation.","when calling error in Transmutation, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(HB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TribalTotem.","when calling error in TribalTotem, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(JB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package TrollT3AirBonus.","when calling error in TrollT3AirBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(KB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Tyrande.","when calling error in Tyrande, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(LB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UndeadSiegeBonus.","when calling error in UndeadSiegeBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(XB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UpgraideBarrack.","when calling error in UpgraideBarrack, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(CB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package UseCast.","when calling error in UseCast, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(VB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VeilweaverB.","when calling error in VeilweaverB, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(BB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Voodo.","when calling error in Voodo, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(NB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaAirBonusUnit.","when calling error in VulperaAirBonusUnit, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(MB))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaBeton.","when calling error in VulperaBeton, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(wN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaDop.","when calling error in VulperaDop, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(uN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package VulperaDopBonus.","when calling error in VulperaDopBonus, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(rN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Warden.","when calling error in Warden, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(sN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package WarianWrynn.","when calling error in WarianWrynn, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(tN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Warmachine.","when calling error in Warmachine, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(iN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Xerox.","when calling error in Xerox, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(SN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package Zoom.","when calling error in Zoom, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(cN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ZulJin.","when calling error in ZulJin, line 1")
endif
call TriggerClearConditions(cPp)
call TriggerAddCondition(cPp,Condition(oN))
if not TriggerEvaluate(cPp) then
call L8c("Could not initialize package ZuljinsCall.","when calling error in ZuljinsCall, line 1")
endif
call TriggerClearConditions(cPp)
call DestroyTrigger(cPp)
set cPp=null
endfunction
function InitCustomPlayerSlots takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_COMPUTER)
call SetPlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_COMPUTER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_COMPUTER)
call SetPlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_COMPUTER)
endfunction
function InitCustomTeams takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(1),1)
call SetPlayerTeam(Player(5),1)
call SetPlayerTeam(Player(2),2)
call SetPlayerTeam(Player(6),2)
call SetPlayerTeam(Player(3),3)
call SetPlayerTeam(Player(7),3)
call SetPlayerAllianceStateAllyBJ(Player(0),Player(4),true)
call SetPlayerAllianceStateVisionBJ(Player(0),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(0),true)
call SetPlayerAllianceStateVisionBJ(Player(4),Player(0),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(5),true)
call SetPlayerAllianceStateVisionBJ(Player(1),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(1),true)
call SetPlayerAllianceStateVisionBJ(Player(5),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(6),true)
call SetPlayerAllianceStateVisionBJ(Player(2),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(2),true)
call SetPlayerAllianceStateVisionBJ(Player(6),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(7),true)
call SetPlayerAllianceStateVisionBJ(Player(3),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(3),true)
call SetPlayerAllianceStateVisionBJ(Player(7),Player(3),true)
endfunction
function InitAllyPriorities takes nothing returns nothing
call SetStartLocPrioCount(0,0)
call SetStartLocPrioCount(1,0)
call SetStartLocPrioCount(2,0)
call SetStartLocPrioCount(3,0)
call SetStartLocPrioCount(4,0)
call SetStartLocPrioCount(5,3)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(6,0)
call SetStartLocPrioCount(7,2)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
endfunction
function config takes nothing returns nothing
call SetMapName("OZSurvChaos v1.499")
call SetMapDescription("Join us for feedback:
https://forum.onligamez.ru
https://discord.gg/y9JuVjhJZA")
call SetPlayers(8)
call SetTeams(4)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,64.,64.)
call DefineStartLocation(1,64.,64.)
call DefineStartLocation(2,0.,0.)
call DefineStartLocation(3,0.,0.)
call DefineStartLocation(4,64.,64.)
call DefineStartLocation(5,64.,64.)
call DefineStartLocation(6,64.,64.)
call DefineStartLocation(7,64.,64.)
call InitCustomPlayerSlots()
call InitCustomTeams()
call InitAllyPriorities()
endfunction
