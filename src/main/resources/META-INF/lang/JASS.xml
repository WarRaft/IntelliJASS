<idea-plugin>
    <extensions defaultExtensionNs="com.intellij">
        <!-- https://plugins.jetbrains.com/docs/intellij/registering-file-type.html#registration -->
        <fileType name="JASS"
                  implementationClass="raft.war.language.jass.JassFileType"
                  fieldName="instance"
                  language="JASS"
                  extensions="j;ai;pld"
        />

        <!-- parser -->
        <lang.parserDefinition language="JASS"
                               implementationClass="raft.war.language.jass.JassParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="JASS"
                                       implementationClass="raft.war.language.jass.highlighter.JassSyntaxHighlighterFactory"/>

        <!-- color -->
        <colorSettingsPage implementation="raft.war.language.jass.JassColorSettingsPage"/>

        <!-- annotator -->
        <annotator language="JASS" implementationClass="raft.war.language.jass.JassAnnotator"/>

        <!-- folding -->
        <lang.foldingBuilder language="JASS"
                             implementationClass="raft.war.language.jass.folding.JassCustomFoldingBuilder"/>
        <codeFoldingOptionsProvider instance="raft.war.language.jass.folding.JassCodeFoldingOptionsProvider"/>
        <applicationService serviceImplementation="raft.war.language.jass.folding.JassCodeFoldingSettings"/>

        <!-- formatter -->
        <lang.formatter language="JASS"
                        implementationClass="raft.war.language.jass.formatting.JassFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="raft.war.language.jass.JassLanguageCodeStyleSettingsProvider"/>

        <!-- find usage -->
        <lang.findUsagesProvider
                language="JASS"
                implementationClass="raft.war.language.jass.JassFindUsagesProvider"/>

        <!-- refactor -->
        <lang.refactoringSupport
                language="JASS"
                implementationClass="raft.war.language.jass.refactor.JassRefactoringSupportProvider"/>
        <renameInputValidator implementation="raft.war.language.jass.refactor.JassRenameInputValidator"/>

        <!-- reference -->
        <psi.referenceContributor language="JASS"
                                  implementation="raft.war.language.jass.JassReferenceContributor"/>

        <!-- completion -->
        <completion.contributor
                language="JASS"
                implementationClass="raft.war.language.jass.JassCompletionContributor"/>


        <!-- commenter -->
        <lang.commenter
                language="JASS"
                implementationClass="raft.war.language.jass.JassCommenter"/>

        <!-- brace -->
        <lang.braceMatcher language="JASS"
                           implementationClass="raft.war.language.jass.JassBraceMatcher"/>

        <!-- index -->
        <stubIndex implementation="raft.war.language.jass.psi.funName.JassFunNameIndex"/>

        <!-- inspections -->
        <localInspection language="JASS"
                         bundle="messages.JassInspectionsBundle"
                         key="operator.call.display.name"
                         groupPath="JASS"
                         groupBundle="messages.JassInspectionsBundle"
                         groupKey="group.names.operator"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="raft.war.language.jass.codeInspection.JassOperatorCallBehaviorInspection"
        />

        <localInspection language="JASS"
                         bundle="messages.JassInspectionsBundle"
                         key="number.rawcode.unsafe.key"
                         groupPath="JASS"
                         groupBundle="messages.JassInspectionsBundle"
                         groupKey="group.names.number"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="raft.war.language.jass.codeInspection.number.JassRawcodeUnsafeInspection"
        />

    </extensions>
</idea-plugin>
