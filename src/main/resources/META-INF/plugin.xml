<!-- https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<!-- https://plugins.jetbrains.com/plugin/23120-jass/edit -->
<idea-plugin>
    <id>JASS</id>
    <name>JASS</name>
    <version>2.0.25</version>
    <!-- https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html#idea-plugin__idea-version -->
    <idea-version since-build="2024.1"/>
    <vendor url="https://github.com/WarRaft/IntelliJASS">WarRaft</vendor>

    <depends>com.intellij.modules.platform</depends>
    <extensions defaultExtensionNs="com.intellij">

        <!-- colors -->
        <colorProvider implementation="guru.xgm.intellij.openapi.editor.IntellijElementColorProvider"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/Darcula.xml"/>

        <!-- file nesting -->
        <projectViewNestingRulesProvider
                implementation="guru.xgm.intellij.ide.projectView.IntellijProjectViewNestingRulesProvider"/>

        <typedHandler implementation="guru.xgm.intellij.codeInsight.IntellijTypedHandlerDelegate"/>

        <!-- TODO:JASS -->
        <fileType name="JASS"
                  implementationClass="guru.xgm.language.jass.openapi.fileTypes.JassFileType"
                  fieldName="INSTANCE"
                  language="JASS"
                  extensions="j"
        />

        <!-- parser -->
        <lang.parserDefinition language="JASS" implementationClass="guru.xgm.language.jass.lang.JassParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="JASS"
                                       implementationClass="guru.xgm.language.jass.openapi.fileTypes.JassSyntaxHighlighterFactory"/>

        <!-- color -->
        <colorSettingsPage implementation="guru.xgm.language.jass.openapi.options.colors.JassColorSettingsPage"/>

        <!-- annotator -->
        <annotator language="JASS" implementationClass="guru.xgm.language.jass.lang.annotation.JassAnnotator"/>

        <!-- folding -->
        <lang.foldingBuilder language="JASS"
                             implementationClass="guru.xgm.language.jass.lang.folding.JassCustomFoldingBuilder"/>
        <codeFoldingOptionsProvider instance="guru.xgm.language.jass.lang.folding.JassCodeFoldingOptionsProvider"/>
        <applicationService serviceImplementation="guru.xgm.language.jass.lang.folding.JassCodeFoldingSettings"/>

        <!-- formatter -->
        <lang.formatter language="JASS"
                        implementationClass="guru.xgm.language.jass.formatting.JassFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="guru.xgm.language.jass.psi.codeStyle.JassLanguageCodeStyleSettingsProvider"/>

        <!-- commenter -->
        <lang.commenter
                language="JASS"
                implementationClass="guru.xgm.language.jass.lang.JassCommenter"/>


        <!-- sdk -->
        <sdkType implementation="guru.xgm.language.jass.openapi.projectRoots.JassSdkType"/>

        <!-- inspections -->
        <localInspection language="JASS"
                         bundle="messages.JassInspectionsBundle"
                         key="operator.call.display.name"
                         groupPath="JASS"
                         groupBundle="messages.JassInspectionsBundle"
                         groupKey="group.names.operator"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="guru.xgm.language.jass.codeInspection.JassOperatorCallBehaviorInspection"
        />

        <localInspection language="JASS"
                         bundle="messages.JassInspectionsBundle"
                         key="number.rawcode.unsafe.key"
                         groupPath="JASS"
                         groupBundle="messages.JassInspectionsBundle"
                         groupKey="group.names.number"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="guru.xgm.language.jass.codeInspection.number.JassRawcodeUnsafeInspection"
        />

        <!-- TODO:ZINC-->
        <fileType name="ZINC"
                  implementationClass="guru.xgm.language.zinc.openapi.fileTypes.ZincFileType"
                  fieldName="INSTANCE"
                  language="ZINC"
                  extensions="zn"
        />

        <!-- parser -->
        <lang.parserDefinition language="ZINC" implementationClass="guru.xgm.language.zinc.lang.ZincParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="ZINC"
                                       implementationClass="guru.xgm.language.zinc.openapi.fileTypes.ZincSyntaxHighlighterFactory"/>

        <!-- formatter -->
        <lang.formatter language="ZINC"
                        implementationClass="guru.xgm.language.zinc.formatting.ZincFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="guru.xgm.language.zinc.psi.codeStyle.ZincLanguageCodeStyleSettingsProvider"/>

        <!-- annotator -->
        <annotator language="ZINC" implementationClass="guru.xgm.language.zinc.lang.annotation.ZincAnnotator"/>

        <!-- commenter -->
        <lang.commenter
                language="ZINC"
                implementationClass="guru.xgm.language.zinc.lang.ZincCommenter"/>


        <!-- TODO:VJASS -->
        <fileType name="VJASS"
                  implementationClass="guru.xgm.language.vjass.openapi.fileTypes.VjassFileType"
                  fieldName="INSTANCE"
                  language="VJASS"
                  extensions="vj"
        />

        <!-- parser -->
        <lang.parserDefinition language="VJASS"
                               implementationClass="guru.xgm.language.vjass.lang.VjassParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="VJASS"
                                       implementationClass="guru.xgm.language.vjass.openapi.fileTypes.VjassSyntaxHighlighterFactory"/>

        <!-- commenter -->
        <lang.commenter
                language="VJASS"
                implementationClass="guru.xgm.language.vjass.lang.VjassCommenter"/>


        <!-- TODO:AngelScript -->
        <fileType name="AngelScript"
                  implementationClass="guru.xgm.language.angelscript.openapi.fileTypes.AngelScriptFileType"
                  fieldName="INSTANCE"
                  language="AngelScript"
                  extensions="ass"
        />

        <!-- parser -->
        <lang.parserDefinition language="AngelScript"
                               implementationClass="guru.xgm.language.angelscript.lang.AngelScriptParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="AngelScript"
                                       implementationClass="guru.xgm.language.angelscript.openapi.fileTypes.AngelScriptSyntaxHighlighterFactory"/>

        <!-- color -->
        <colorSettingsPage
                implementation="guru.xgm.language.angelscript.openapi.options.colors.AngelScriptColorSettingsPage"/>

        <!-- formatter -->
        <lang.formatter language="AngelScript"
                        implementationClass="guru.xgm.language.angelscript.formatting.AngelScriptFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="guru.xgm.language.angelscript.psi.codeStyle.AngelScriptLanguageCodeStyleSettingsProvider"/>

        <!-- annotator -->
        <annotator language="AngelScript"
                   implementationClass="guru.xgm.language.angelscript.lang.annotation.AngelScriptAnnotator"/>

        <!-- braces -->
        <lang.braceMatcher language="AngelScript"
                           implementationClass="guru.xgm.language.angelscript.lang.AngelScriptPairedBraceMatcher"/>

        <!-- folding -->
        <lang.foldingBuilder language="AngelScript"
                             implementationClass="guru.xgm.language.angelscript.lang.folding.AngelScriptCustomFoldingBuilder"/>
        <codeFoldingOptionsProvider
                instance="guru.xgm.language.angelscript.lang.folding.AngelScriptCodeFoldingOptionsProvider"/>
        <applicationService
                serviceImplementation="guru.xgm.language.angelscript.lang.folding.AngelScriptCodeFoldingSettings"/>

        <!-- completion -->
        <completion.contributor language="AngelScript"
                                implementationClass="guru.xgm.language.angelscript.codeInsight.completion.AngelScriptCompletionContributor"/>
        <completion.confidence language="AngelScript"
                               implementationClass="guru.xgm.language.angelscript.codeInsight.completion.AngelScriptCompletionConfidence"
                               order="first"/>

        <!-- live template -->
        <defaultLiveTemplates file="/liveTemplates/AngelScript.xml"/>
        <liveTemplateContext
                contextId="AngelScript"
                implementation="guru.xgm.language.angelscript.codeInsight.template.AngelScriptTemplateContextType"/>

        <!-- commenter -->
        <lang.commenter
                language="AngelScript"
                implementationClass="guru.xgm.language.angelscript.lang.AngelScriptCommenter"/>

        <!-- TODO:LNI -->
        <fileType name="LNI"
                  implementationClass="guru.xgm.language.lni.openapi.fileTypes.LniFileType"
                  fieldName="INSTANCE"
                  language="LNI"
                  extensions="lni"
        />
        <lang.parserDefinition language="LNI"
                               implementationClass="guru.xgm.language.lni.lang.LniParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="LNI"
                                       implementationClass="guru.xgm.language.lni.openapi.fileTypes.LniSyntaxHighlighterFactory"/>

        <!-- annotator -->
        <annotator language="LNI"
                   implementationClass="guru.xgm.language.lni.lang.annotation.LniAnnotator"/>

        <!-- folding -->
        <lang.foldingBuilder language="LNI"
                             implementationClass="guru.xgm.language.lni.lang.folding.LniCustomFoldingBuilder"/>
        <codeFoldingOptionsProvider instance="guru.xgm.language.lni.lang.folding.LniCodeFoldingOptionsProvider"/>
        <applicationService serviceImplementation="guru.xgm.language.lni.lang.folding.LniCodeFoldingSettings"/>

        <!-- formatter -->
        <lang.formatter language="LNI"
                        implementationClass="guru.xgm.language.lni.formatting.LniFormattingModelBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="guru.xgm.language.lni.psi.codeStyle.LniLanguageCodeStyleSettingsProvider"/>

        <!-- commenter -->
        <lang.commenter
                language="LNI"
                implementationClass="guru.xgm.language.lni.lang.LniCommenter"/>


        <!-- TODO:WTS -->
        <fileType name="WTS"
                  implementationClass="guru.xgm.language.wts.openapi.fileTypes.WtsFileType"
                  fieldName="INSTANCE"
                  language="WTS"
                  extensions="wts"
        />

        <!-- parser -->
        <lang.parserDefinition language="WTS"
                               implementationClass="guru.xgm.language.wts.lang.WtsParserDefinition"/>

        <!-- highlight -->
        <lang.syntaxHighlighterFactory language="WTS"
                                       implementationClass="guru.xgm.language.wts.openapi.fileTypes.WtsSyntaxHighlighterFactory"/>

        <!-- annotator -->
        <annotator language="WTS" implementationClass="guru.xgm.language.wts.lang.annotation.WtsAnnotator"/>

        <!-- commenter -->
        <lang.commenter
                language="WTS"
                implementationClass="guru.xgm.language.wts.lang.WtsCommenter"/>


    </extensions>

    <!-- https://plugins.jetbrains.com/docs/intellij/basic-action-system.html#registering-actions-from-code -->
    <actions>
        <action
                id="guru.xgm.language.jass.openapi.actionSystem.convert.jass2angelscript.Jass2AngelScriptAction"
                class="guru.xgm.language.jass.openapi.actionSystem.convert.jass2angelscript.Jass2AngelScriptAction"
                text="Convert to AngelScript"
                description="Convert file to valid AngelScript"
        >
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
        <action
                id="guru.xgm.language.jass.openapi.actionSystem.convert.jass2lua.Jass2LuaAction"
                class="guru.xgm.language.jass.openapi.actionSystem.convert.jass2lua.Jass2LuaAction"
                text="Convert to Lua"
                description="Convert file to valid Lua"
        >
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
        <action
                id="guru.xgm.language.jass.openapi.actionSystem.convert.jass2javascript.Jass2JavaScriptAction"
                class="guru.xgm.language.jass.openapi.actionSystem.convert.jass2javascript.Jass2JavaScriptAction"
                text="Convert to JavaScript"
                description="Convert file to valid JavaScript"
        >
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
        <action
                id="guru.xgm.language.jass.openapi.actionSystem.convert.jass2typescript.Jass2TypeScriptAction"
                class="guru.xgm.language.jass.openapi.actionSystem.convert.jass2typescript.Jass2TypeScriptAction"
                text="Convert to TypeScript"
                description="Convert file to valid TypeScript"
        >
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
    </actions>

    <description><![CDATA[
        <p>Just Another Scripting Syntax (JASS) for
            <a href="https://en.wikipedia.org/wiki/Warcraft_III:_Reign_of_Chaos">Warcraft III</a>.</p>
        <p>Code folding, highlight and open binary ingame files.</p>
        ]]></description>

    <change-notes><![CDATA[
        <p>Add more AngelScript support.</p>
        ]]></change-notes>

</idea-plugin>
